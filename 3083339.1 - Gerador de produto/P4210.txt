
=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Form Variables
Event GUID: f57e0ecd-a23a-11d0-a204-0000f6728a56
=============================================
frm_ALPH [ALPH]
frm_PriceEntered [EV04]
frm_CostEntered [EV01]
frm_XLIN_CurrentGridLineNo [XLIN]
frm_idF4102RowPtr [GENLNG]
frm_cDidQtyOrderedChng [ERRC]
frm_cAddOrMaintenanceMode [EV01]
frm_ADVP_cAdv_Pricing [ADVP]
frm_SOQS_mnShipQty [SOQS]
frm_SOBK_mnBackorderQty [SOBK]
frm_SOCN_mnCancelQty [SOCN]
frm_EV21_LastCacheRecord [EV21]
frm_LNID_CacheLineNumber [LNID]
frm_GENLNG_CacheHandle [GENLNG]
frm_mnDOCO_PONumber [DOCO]
frm_MATH01_Related_Proc_Flag [MATH01]
frm_EV22_cCacheOn [EV22]
frm_cChngsMadeToQtysInvCommits [EV01]
frm_cOkOrCancelInvCommits [EV01]
frm_AREV_mnRevision_Level [AREV]
frm_EV19_cCanceledOut [EV19]
frm_DTAI_szErrorMsgCode [DTAI]
frm_EV03_RelieveBlanketOrder [EV03]
frm_mnDOCO_OriginalOrderNo [DOCO]
frm_cGridFilled [EV01]
frm_cRepriceRowsProcessed [EV01]
frm_cOrderRepriceIndicator [ORP]
frm_cBypassGridRow [EV01]
frm_mnNumGridRows [MATH01]
frm_mnCurrentGridRow [MATH01]
frm_szR42750SelectNextStatus [NXTR]
frm_szR42750DefaultNextStatus [NXTR]
frm_cR42750RepeatReprice [EV01]
frm_cMoreF4213CacheRecords [EV01]
frm_szBasketRepriceGroup [RPRC]
frm_szOrderRepriceGroup [ORPR]
frm_mnF4213LineNumber [XLIN]
frm_mnItemNumber [ITM]
frm_szCostCenter [MCU]
frm_szCurrencyCodeTo [CRCD]
frm_szAdjustmentSchedule [ASN]
frm_mnQuantity [UORG]
frm_mnUnitPrice [UPRC]
frm_mnForeignUnitPRice [FUP]
frm_idF4211Ptr [GENLNG]
frm_idF4213CacheHandle [GENLNG]
frm_cAdjustmentLevel [OLVL]
frm_mnUnitPriceOld [UPRC]
frm_cBasketGroupAdjExist [EV01]
frm_idBsktLineCacheHandle [GENLNG]
frm_mnSODLineNumber [LNID]
frm_cMoreSODLinesToProcess [EV01]
frm_mnSequenceNumber [OSEQ]
frm_szAdjustmentName [AST]
frm_mnAddressNumber [AN8]
frm_mnItemCustomerKeyID [ICID]
frm_szSalesDetailGroup [SDGR]
frm_szSalesDetailValue1 [SDV1]
frm_szSalesDetailValue2 [SDV2]
frm_szSalesDetailValue3 [SDV3]
frm_szUnitofMeasure [UOM]
frm_szGLClass [GLC]
frm_szReasonCode [ARSN]
frm_cAdjustmentControlCode [ACNT]
frm_cSubledgerGL [SBIF]
frm_cManualAddChange [MDED]
frm_cPriceOverrideCode [PROV]
frm_mnPriceAdjustmentKeyID [ATID]
frm_mnQuantityFrom [MNQ]
frm_szCostMethod [LEDG]
frm_szFormulaName [FRNM]
frm_cBasisCode [BSCD]
frm_mnFactorValue [FVTR]
frm_cOverridePrice [ABAS]
frm_szLineType [LNTY]
frm_szDescription [DESC]
frm_cF40UI74FetchReturnCode [EV01]
frm_cEditLineErrorCondition [EV01]
frm_LPRC_mnListPrice [LPRC]
frm_FPRC_mnForeignListPrice [FPRC]
frm_cCancelReprice [VC01B]
frm_mnF40UI74WFLineNumber [XLIN]
frm_idF40UI74hRequest [GENLNG]
frm_MCU_To_Branch [MCU]
frm_AEXP_mnExtendedPrice [AEXP]
frm_FEA_ForeignExtendedPrice [FEA]
frm_cOrderAcceptedYN [EV05]
frm_cF40UI74SeqNumExists [EV06]
frm_cF40UI74SequenceNumber [OSEQ]
frm_TOE_PO_Type_DCIN [DCIN]
frm_TOE_PO_Currency_Code_CRDC [CRDC]
frm_TOE_Landed_Cost_Rule_PRP5 [PRP5]
frm_CK01_OKButtonPrevClicked [CK01]
frm_HeaderValuesChanged [EV01]
frm_MaxGridRows [MATH01]
frm_GridRowCounter [MATH01]
frm_cachecursor_GENLNG [GENLNG]
frm_OKCO_Original_Order_Co [OKCO]
frm_ODCT_Original_Order_Type [ODCT]
frm_OORN_Original_Order_No [OORN]
frm_String1_DSC [DSC]
frm_String2_DSC1 [DSC1]
frm_Char_EV09 [EV09]
frm_CacheRRN [RRN]
frm_NumberofCacheEntries [RRN]
frm_QuantityToPass [SOQS]
frm_XRefType [XRT]
frm_Replacement [RPL]
frm_SubstituteIndicator [SO05]
frm_MCU_Default_Branch [MCU]
frm_DRQJ_Default_Date [DRQJ]
frm_PDDJ_Default_Date [PDDJ]
frm_RSDJ_Default_Date [RSDJ]
frm_CNDJ_Default_Date [CNDJ]
frm_LNID_Last_Line_Number [LNID]
frm_SYMID_Primary_Item_Idntfr [SYMID]
frm_UPDJ_System_Date [UPDJ]
frm_ERRC_Error_Code [ERRC]
frm_CRYR_Currency_Control [CRYR]
frm_EV02_Def_Val_Entered [EV02]
frm_CTID_Computer_ID [CTID]
frm_ACTI_Action_Code [ACTI]
frm_AM0_Amount [AM0]
frm_EV09_Gen_Text_Row [EV09]
frm_USER_User_ID [USER]
frm_TMCR_Time_Of_Day [TMCR]
frm_EV10_Default_Unit_Price [EV10]
frm_LNIX_Prev_WF_Line_Num [LNIX]
frm_TOTC_Total_Cost [TOTC]
frm_FCST_Foreign_Total_Cost [FCST]
frm_EV19_End_Doc_Called [EV19]
frm_DATE03_Commitment_Dt [DATE03]
frm_CORD_PO_Order_Number [CORD]
frm_EV16_Direct_Ship_Update [EV16]
frm_LTTR_PO_Last_Status [LTTR]
frm_VR01_Default_Cust_PO [VR01]
frm_EV13_Protect_Customer_PO [EV13]
frm_EV17_Hdr_Work_File [EV17]
frm_EMCU_DfltHdrBranchPlant [EMCU]
frm_EV23_cBeginDocError [EV23]
frm_cCreditMemoProcess_EV24 [EV24]
frm_mnCreditJobNum_JOBS [JOBS]
frm_mnCreditSoldTo_AN8 [AN8]
frm_mnCreditShipTo_SHAN [SHAN]
frm_szCreditBranch_MCUZ [MCUZ]
frm_szCreditCustCurrency_CRCD [CRCD]
frm_mnCreditExhgeRate_CRR [CRR]
frm_EV07_Template_Called [EV07]
frm_INT02_Warnings [INT02]
frm_TSTA_Credit_Message [TSTA]
frm_EV03_Valid_Order_Number [EV03]
frm_STKT_ProcessCancelLine [STKT]
frm_LNID_Cancel [LNID]
frm_EV01_NewRecords [EV01]
frm_cNULLValue [EV01]
frm_szNULLValue [DCTO]
frm_cSourceofData [EV01]
frm_PrintMessage [INMG]
frm_PaymentTermsCode [PTC]
frm_TaxRateArea [TXA1]
frm_TaxExplanationCode [EXR1]
frm_Salesperson1 [SLSM]
frm_Salesperson2 [SLM2]
frm_SalespersonCommission1 [SLCM]
frm_SalespersonCommission2 [SLC2]
frm_EV07_Misc_Button_Process [EV07]
frm_INT01_Inserted_Row_Counter [INT01]
frm_EV04_SOE_Detail_Flag [EV04]
frm_MATH02_Num_Agreements [MATH02]
frm_AN8_Originator_Number [AN8]
frm_MLNM_Originator_Name [MLNM]
frm_OORN_Order_Number_String [OORN]
frm_szVersion_VERS [VERS]
frm_sz_ErrorMessage_DTAI [DTAI]
frm_c_BlanketFlag_EV01 [EV01]
frm_cSuppressBlanketsRls_EV04 [EV04]
frm_sz_HeaderAdjSchedule_ASN [ASN]
frm_mnOrginalShipToNumb_SHAN [SHAN]
frm_cInterBranchFlag_EV24 [EV24]
frm_szCheckPriceBranch_MCU [MCU]
frm_cTransfer_Direct_Flag_S011 [SO11]
frm_sz_OrderTempSoldTo_ORTP [ORTP]
frm_sz_OrderTempShipTo_ORTP [ORTP]
frm_szPreviousBusinessUnit_MCU [MCU]
frm_cIdentifierCrossRef_EV01 [EV01]
frm_cShortITMSymbol_EV01 [EV01]
frm_cXRef_1stCharacter_EV01 [EV01]
frm_szUnknownItemNumber_UITM [UITM]
frm_mnTriangulationRateTo [MATH01]
frm_mnTriangulationRateFrom [MATH01]
frm_cCurrencyConversionMethod [CRCM]
frm_cSpotRateAllowed [EV20]
grd_ItemFlashMessage [IFLA]
frm_AN84_Ship_To [AN84]
frm_OKCO_To_Company [OKCO]
frm_ALPH_PO_Number [ALPH]
frm_OKC_From_Company [OKC]
frm_AN8_Supplier [AN8]
frm_cFromConversionMethod [EV20]
frm_cToConversionMethod [EV20]
frm_mnExchangeTest [MATH01]
frm_FromConversionDiv [CRR]
frm_ToConversionDiv [CRR]
frm_FromTriangulation1 [CRR]
frm_FromTriangulation2 [CRR]
frm_ToTriangulation1 [CRR]
frm_ToTriangulation2 [CRR]
frm_FromExchangeTest [CRR]
frm_mnFromCurrConvRateMult_CRR [CRR]
frm_mnToCurrconvRateMult_CRR [CRR]
frm_Transfer_Order_Errors_EV01 [EV01]
frm_RCUP_Recrd_Unprcessed_Flag [RCUP]
frm_SO15_cCMProcessEdits [SO15]
frm_Generic_Text_EV01 [EV01]
frm_TRNK_szTransactionKey [TRNK]
frm_TRNY_szTransactionType [TRNY]
grd_szRelatedCompany_RKCO [RKCO]
grd_szRelatedOrderNumber_RORN [RORN]
grd_szRelatedOrderType_RCTO [RCTO]
grd_szRelatedLineNumber_RLLN [RLLN]
frm_mnNewLineNumCopyMode_LNID [LNID]
frm_mnLastLineNumCopyMode_LNID [LNID]
frm_cKitProcFlagCopyMode_EV01 [EV01]
grd_ASN_AdjSchedule [ASN]
grd_DETD_Detached_Adjustment [DETD]
grd_DETF_Foreign_Detached_Adj [DETF]
grd_CSTO_Cost_Over [CSTO]
grd_STKT_Stocking_Type [STKT]
grd_AREV_Rev_Lev [AREV]
grd_SEQ_Disply_Seq_Agreements [SEQ]
grd_PSRY_Src_Type_Agreements [PSRY]
grd_PSR_Product_Src_Agreements [PSR]
grd_UCSTR_Saved_Unit_Price [UCSTR]
grd_EV06_Unit_Price_Changed [EV06]
grd_XEXP_Saved_Ext_Price [XEXP]
grd_EV05_Ext_Price_Changed [EV05]
grd_FCSTR_Saved_Unit_Cost [FCSTR]
grd_EV08_Ext_Cost_Changed [EV08]
grd_XCST_Saved_Ext_Cost [XCST]
grd_EV07_Unit_Cost_Changed [EV07]
grd_LPRC_Unit_List_Price [LPRC]
grd_FPRC_Foreign_List_Price [FPRC]
grd_APUM_UM_Ent [APUM]
grd_SO08_Price_Adj_Line [SO08]
grd_SO11_Transfer_DS_Flag [SO11]
grd_LINN_From_Line_Number [LINN]
grd_LIN_Through_Line_Number [LIN]
grd_RPRC_Basket_Reprice_Grp [RPRC]
grd_ORPR_Order_Reprice_Grp [ORPR]
grd_ORP_Order_Reprice_Ind [ORP]
grd_UPAX_Undo_Reprice_UP [UPAX]
grd_PRIC_Undo_Reprice_Foreign [PRIC]
grd_PRN_Undo_Rep_Rev_Lvl [PRN]
grd_VC01A_Undo_Rep_Ind [VC01A]
grd_VC01B_Line_Repriced [VC01B]
grd_EV12_KitProcessed [EV12]
grd_EV25_CfgItemProcessed [EV25]
grd_ACTI_ActionHidden [ACTI]
grd_EV18_UpdatedtoDetailWF [EV18]
grd_MATH01_SuppressProcess [MATH01]
grd_UORG_OrigQtyOrdered [UORG]
grd_PEFJ_PriceEffectiveDate [PEFJ]
frm_cIsExcangeRateEntered_EV01 [EV01]
frm_szLandedCostRules_PRP5 [PRP5]
grd_EV01_BasketFreeGood [EV01]
grd_SLNE_LineNumber [SLNE]
grd_LINN_LineNbrIncrement [LINN]
frm_szChangedRouteCode_ROUT [ROUT]
frm_szChangedStopCode_STOP [STOP]
frm_szChangedZoneNum_ZON [ZON]
frm_EV01_LoadGridFromCacheDone [EV01]
frm_KitExtPrice [UPRC]
frm_KitForeignExtPrice [UPRC]
frm_cPrevLineType_LNTY [LNTY]
frm_cPrevLntyProtectPrice_EV01 [EV01]
grd_cLntyProtectPrice_PDC1 [PDC1]
frm_EV19_cOKClickedForKit [EV19]
grd_szDetailBranchPlant_MCU [MCU]
frm_cValidateApplication_EV01 [EV01]
frm_mnRReserveOrderNumber_DOCO [DOCO]
frm_szRReserveOrderType_DCTO [DCTO]
frm_szRReserveOrdCompany_KCOO [KCOO]
frm_szGenericKey_GENKEY [GENKEY]
frm_szReserveName_ALPH [ALPH]
frm_szReserveAppID_PID [PID]
frm_szRecordReserveErrMsg_DTAI [DTAI]
frm_mnExtCost_UNCS [UNCS]
frm_mnForExtCost_FUC [FUC]
frm_cSoldToBACKAllowed_BACK [BACK]
frm_cCancelLineDisabled_EV01 [EV01]
frm_SFXO_szOrderSuffix [SFXO]
frm_SEQ_mnSequenceNumber [SEQ]
frm_POF_szPrepayOrigination [POF]
frm_ATS_szPrepayTransStatus [ATS]
grd_mnUndoRepriceExtended_AEXP [AEXP]
grd_mnUndoReprcExtForeign_FEA [FEA]
frm_EV01_CancelBasketFreeGoods [EV01]
frm_cApplyFreightChg_AFT [AFT]
frm_szFreightCodeChg_FRTH [FRTH]
frm_cPrepaymentWindowCalledYN [EV01]
frm_szReplacementXref_XRT [XRT]
frm_szSubstituteXref_XRT [XRT]
frm_cSubstituteAllowed_SBAL [SBAL]
frm_cItemRestrictions_EDF2 [EDF2]
frm_szAssociatedXref_XRT [XRT]
frm_mnTradeDiscount_TRDC [TRDC]
frm_szUserReservedCode_URCD [URCD]
frm_jdUserReservedDate_URDT [URDT]
frm_mnUserReservedAmt_URAT [URAT]
frm_mnUserReservedNumber_URAB [URAB]
frm_szUserReservedRef_URRF [URRF]
frm_cHeaderText_ATXT [ATXT]
frm_cCommitInvInED_EV01 [EV01]
frm_cParentCommitSoft_EV01 [EV01]
frm_cGenerateWO_EV01 [EV01]
grd_cByPassCommitment_EV09 [EV09]
frm_cPaymentInstrument_RYIN [RYIN]
frm_szSpecialHandlingCode_SPHD [SPHD]
frm_cBlanketCalled_EV01 [EV01]
grd_mnF42UI11WFLineNumber_LNIX [LNIX]
frm_ReplacementDone [EV02]
frm_StoreQtyOrderedForConfg [UORG]
frm_szCustomWorksFound_DTAI [DTAI]
grd_cProcessedInline_EV01 [EV01]
frm_mnLastLineNumberUsed_LNIX [LNIX]
grd_cEnableHCBlanketOrders [EV01]
frm_mnUserABNumber_AN8 [AN8]
frm_cCSSPrevRecordFound_EV01 [EV01]
frm_mnF42UI11LineNo [LNIX]
frm_ConfgProcessed_EV25 [EV25]
frm_szCSSShipToStrucType_OSTP [OSTP]
frm_szPrevCSSCustPO_VR01 [VR01]
frm_mnSelectedCSSShipTo_SHAN [SHAN]
frm_szSelectedShipToName_DL01 [DL01]
frm_ActGridLineNumber [LNID]
frm_cDetachedMode_EV01 [EV01]
frm_cDisablePriceFields_EV01 [EV01]
frm_cFirstAddRow_EV01 [EV01]
grd_LineEvaluatedforReprice [EV01]
frm_mnStoredLineNumber_LNID [LNID]
frm_LastLineNumOnAsynch_LNIX [LNIX]
frm_jdOrderDate_TRDJ [TRDJ]
frm_cCreditMemoExit [EV24]
frm_cCustPOChanged_EV01 [EV01]
frm_cCheckPriceOrAdjustment [EV01]
grd_PriceCode1 [UPC1]
grd_PriceCode2 [UPC2]
grd_PriceCode3 [UPC3]
grd_cCalledFromP42216 [EV01]
grd_SODOrderNumber [DOCO]
grd_SODOrderType [DCTO]
grd_SODOrderCompany [KCOO]
grd_SODLineNumber [LNID]
frm_cOrderTemplateExists_EV01 [EV01]
frm_cRecordFound_EV01 [EV01]
frm_szUDCOrderTemplate_ORTP [ORTP]
frm_mnTemplateAddress_AN8 [AN8]
grd_OverridePriceF4074_ev01 [EV01]
frm_cDeliveryDatePrefOn [EV01]
frm_cOrderPrepPrefOn [EV02]
frm_szPreviousCommitLocation [LOCN]
frm_szPreviousCommitLot [LOTN]
frm_cShipToValid_ANSCRT [ANSCRT]
frm_ItemGroupKeyID_IGID [IGID]
frm_CustomerGroupKeyID_CGID [CGID]
frm_OrderGroupKeyID_OGID [OGID]
grd_mnActualOrderQty_UORG [UORG]
grd_MATH02_Num_Agreements [MATH02]
frm_cDidQtyChngOnKitParent [ERRC]
grd_PreviousLocation_LOCN [LOCN]
frm_szCustSegItemsVersion_CSIV [CSIV]
frm_CheckOKButtonClicked [EV01]
grd_szDetailLineBSC [BSC]
frm_BogusStatusForConfgGeneric [ALPH]
frm_BogusOrderSuffixForGeneric [SFXO]
frm_cModuleExistance_MEOW [MEOW]
frm_cFreeGoodExitEnabled_EV01 [EV01]
frm_cOKButtonClicked_EV01 [EV01]
grd_cFreeGoodExists_EV01 [EV01]
grd_szFreeGoodCatName [CATLG]
frm_szSODetailFlags_ALPH [ALPH]
grd_szPortOfEntryExit_POE [POE]
grd_cPaymentTermsOverride_PMTO [PMTO]
grd_mnPrevProfitMargin_PRMG [PRMG]
grd_cProfitMarginChanged_EV01 [EV01]
frm_szErrorMessageIDForConfg [DTAI]
frm_ConfigurationIDNumber [CFGID]
frm_mnComponentIDNumber [CFGCID]
frm_mnWOLineNo_LNIX [LNIX]
frm_ProductVariantsModule_MEOW [MEOW]
frm_cFoundAMatch [EV01]
frm_F42UI11TransactionQty_UORG [UORG]
grd_cMatrixControlled123_MIC [MIC]
grd_MatrixSegment1_SEG1 [SEG1]
grd_MatrixTemplate_TMPL [TMPL]
frm_mnLargestMCLNUsed [MCLN]
frm_cFoundInF4211OrF42119 [EV01]
frm_cAddOrUpdateMatrixMode [EV01]
frm_SOEComputerID_CTID [CTID]
frm_SOEJobNo_JOBS [JOBS]
frm_SOELineNumber_LNID [LNID]
frm_MatrixCacheComputerID_CTID [CTID]
frm_MatrixCacheJobNumber_JOBS [JOBS]
frm_MatrixErrorMessageID_DTAI [DTAI]
frm_mnGridRowCounter_MATH01 [MATH01]
frm_MatrixCacheCursor_GENLNG [GENLNG]
frm_szMatrixBranchPlant [MCU]
frm_mnNoOfGridLines_MATH01 [MATH01]
frm_cMatrixUpdateTypes [EV01]
frm_mnShortItemNo_ITM [ITM]
frm_MatrixControlLine_MCLN [MCLN]
frm_MatrixNewQuantity_UORG [UORG]
frm_cMatrixQtyChanged [EV01]
frm_cCallMode [EV01]
frm_cLineIncrementedY [EV01]
frm_cFormActionCode_ACTN [ACTN]
frm_cB4502340AccumFlag_EV01 [EV01]
frm_cVIDChangeWarningSet_EV01 [EV01]
frm_szEndDocSOEMBFFlags_SOEF [SOEF]
grd_szEditLineSOEMBFFlags_SOEF [SOEF]
grd_szCreditOrderFlags_ALPH [ALPH]
grd_cCreditMemoSO09_SO09 [SO09]
frm_cCreditMemoVIDWarning_EV01 [EV01]
frm_PromotionsSystemFlag_PRSF [PRSF]
grd_szPromotionID_PMTN [PMTN]
grd_mnOverrideBasePrice_OVBPRC [OVBPRC]
grd_mnListPrice_LPRC [LPRC]
grd_mnOverForBasePrice_OVFBPRC [OVFBPRC]
grd_mnListPriceForeign_FPRC [FPRC]
frm_szMatrixUOM_UOM [UOM]
grd_jdPrevPriceEffDate_PEFJ [PEFJ]
grd_cBasedonDate_DTBS [DTBS]
grd_cPromoAssigned_EV01 [EV01]
grd_cCrossDockFlagYN_XDCK [XDCK]
grd_mnCrossDokingPriority_XPTY [XPTY]
grd_mnCrossDockOrdeNumber_XORN [XORN]
grd_szCrossDockOrderType_XCTO [XCTO]
grd_szCrossDockCmpyKey_XKCO [XKCO]
grd_szCrossDockOrdeSuffix_XSFX [XSFX]
grd_mnCrossDockLineNumber_XLLN [XLLN]
grd_cItemCrossDockFlagYN_XDCK [XDCK]
frm_UseCustomerSet_CP19 [CP19]
grd_szListPriceUoM_APUM [APUM]
frm_cTransactionTypeForConfg [EV01]
grd_szPrevBranchEntered_MCU [MCU]
frm_cBypassAuditLogging_EV01 [EV01]
frm_cFirstRevision_EV01 [EV01]
frm_cRetFromCanAddInfo_EV01 [EV01]
frm_cMatrixCacheFunctionCalled [EV01]
frm_cMutuallyExclusiveAdj [MEADJ]
frm_szAdjustmentStatus [ADJSTS]
frm_szAdjustmentGroup [ADJGRP]
grd_OrigParentBranchPlant_MCU [MCU]
frm_PreviousCustomerPO_VR01 [VR01]
frm_cAdjRetrievalMethod_AJRM [AJRM]
frm_cHideAuditInfo_EV01 [EV01]
grd_SaveExtPrice [EV01]
grd_cReasonCodeReq_EV01 [EV01]
frm_cApprovalRequired_EV01 [EV01]
frm_cAuditLogRev_EV01 [EV01]
grd_cVolumeUpsellExists_EV01 [EV01]
frm_cUpsellWarningSet_EV01 [EV01]
frm_DistConstPrefSchedule_PRSN [PRSN]
frm_mnWODocNumber_DOCO [DOCO]
frm_DoesWOExist_ERRC [ERRC]
frm_szCustPricingGroup [PRGR]
frm_mnTempMathNumeric01 [MATH01]
frm_mnMaxMathNumeric01 [MATH01]
frm_cStatusEverestEventPoint01 [EV01]
frm_cFlagEverestEventPoint01 [EV01]
grd_mnSavedQuantityOrdered [UORG]
frm_EV19_cOKClickedForConfigur [EV19]
frm_cMinimumsNotMet_EV01 [EV01]
grd_BlanketOrdersFound_EV02 [EV02]
frm_cDisplayBeforeAcceptMode [EV01]
frm_cOPBA_DetailFirst [OPBA]
frm_cOPSS_DetailFirst [OPSS]
frm_cOPLL_DetailFirst [OPLL]
frm_cOPMS_DetailFirst [OPMS]
frm_cDisableOPBackOrderFlag [EV01]
frm_cDisableOPMultiSourceFlag [EV01]
frm_cDisableSubstituteFlag [EV01]
frm_cDisableOPPartialShipFlag [EV01]
frm_OPMultiSourceGroup_OPMG [OPMG]
frm_OPShippingGroup_OPSG [OPSG]
frm_OPPromiseLineYN_OPYN [OPYN]
frm_cReviewSetUpWarningIssued [EV01]
frm_cOrderPromisingStateFlag [EV01]
frm_PromisingModeforOP [EV01]
frm_SavedJobNumberForOP [JOBS]
frm_szErrorMessageForOP [DTAI]
frm_cErrorCodeForOP [EV01]
frm_JobNumberInUse [JOBS]
grd_cManualAdjExists [EV01]
frm_mnAmtPOCost_ECST [ECST]
frm_mnTransferCost_ECST [ECST]
frm_cDemandSchedEnabled_MEOW [MEOW]
frm_cDemandSchedReleased_DSRF [DSRFU]
grd_cItemFldLocked_EV01 [EV01]
frm_cWasOkButtonPressed_EV01 [EV01]
grd_OKButtonClickedOnceYes [EV01]
frm_RowExitToKitAndConfig [EV01]
frm_szCSSCurrencyCode_CRCD [CRCD]
frm_szCSSBaseCurrencyCode_CRDC [CRDC]
frm_cWrittentoF40UI74 [EV01]
frm_szTempCreditMessage_TSTA [TSTA]
frm_szCreditMessage_CM [CM]
frm_cIsOkButtonClicked_EV01 [EV01]
frm_cCallFrmLoadGridCache [EV01]
frm_InsertGBCalledinSub_EV01 [EV01]
grd_cErrorConfigCSS_EV01 [EV01]
grd_cWasBranchBlank_EV01 [EV01]
frm_cWasBranchBlank_EV01 [EV01]
frm_cUseCRMCSS_EV01 [EV01]
frm_mnUserABNumber [AN8]
frm_szFormTitle [CFGS]
frm_mnSoldToShipToOverridden [URAB]
frm_cOverrideButtonClicked [EV01]
frm_cSuppressOverrideAfterAdd [EV01]
grd_cItemNumberFlag_EV01 [EV01]
frm_cCancelOrderAction_EV01 [EV01]
frm_cInventoryInterface_IVI [IVI]
frm_NonConsolidation_EVO1 [EV01]
frm_MCU_ToBranch_Previous [MCU]
grd_PrevRequestedDate [DRQJ]
frm_cBaskRepInUpdateMode_EV01 [EV01]
frm_XPIEventID_GENLNG [GENLNG]
frm_mnCMJobNo [JOBS]
frm_mnProcessID [PEID]
frm_mnTransactionID [TCID]
grd_cRepriceWrittenToWF_EV01 [EV01]
frm_nRepriceCounter_INT01 [INT01]
frm_RelatedJobNoForTransfer [MATH02]
frm_szComputerID_CTID [CTID]
frm_cCallParttsListCache_EV01 [EV01]
frm_mnExtCostTransfer_TCST [TCST]
frm_UniqueKeyIDF41021WF_UKID [UKID]
frm_UniqueIDF41021WFForTransf [UKID]
grd_cDeliveryDateEntered_EV01 [EV01]
grd_cShipDateEntered_EV01 [EV01]
grd_cDatesEnteredFlag37_EV01 [EV01]
grd_jdOrigDeliveryDate_RSDJ [RSDJ]
grd_jdOrigShipDate_PPDJ [PPDJ]
frm_cOKclicked_ForWarning [EV01]
grd_mnPurchaseUnitCostSaved [UNCS]
grd_mnPurchaseExtCostSaved [ECST]
grd_cPurchaseUnitCostChanged [EV01]
grd_cPurchaseExtCostChanged [EV02]
grd_cPurchaseCostOverride [CSTO]
frm_mnPurchaseOrderNumber [DOCO]
frm_cPOOverrideFeatureEnabled [EV01]
frm_cOrderReleasedFromBlanket [EV01]
frm_CheckForReleaseBlankt_EV01 [EV01]
grd_PrevSchedulePickDate_PDDJ [PDDJ]
grd_PreviousLot_LOTN [LOTN]
grd_PrevItemNumber_UITM [UITM]
frm_cBaskRepInAddMode_EV01 [EV01]
frm_cMultipleBlanket_EV01 [EV01]
grd_InitialUnitWeight [ITWT]
grd_WeightManuallyEntered [EV01]
frm_PreviousShipToNum_SHAN [SHAN]
frm_ConfigIDNumber_CFGID [CFGID]
frm_PrevReqDate_DRQJ [DRQJ]
frm_EventCalledOnce_EV01 [EV01]
frm_mnBfRowExitUnitPrice_UPRC [UPRC]
grd_RowExitChangeAsynchTrigger [EV01]
frm_cPricingOnOverride_CP28 [CP28]
frm_cProcPricingOnOverride [CP29]
frm_DateRequested_DRQJ [DRQJ]
frm_mnStoreLNID_LNID [LNID]
grd_jdOrigPickDate_PDDJ [PDDJ]
grd_cPickDateEntered_EV01 [EV01]
grd_cKitWindowError_EV01 [EV01]
frm_mnUniqueIDRecReserve_UKID [UKID]
frm_szUniqueIDRecReserve_PID [PID]
grd_cKitCompPostCutoffStatus [EV01]
grd_cSupressBOMExplosion_EV01 [EV01]
grd_EditLine_ErrorCode_ERRC [ERRC]
grd_Orig_QuantityCanceled_SOCN [SOCN]
frm_mnLocJobNumber_JOBS [JOBS]
grd_cProdAllocExists_EV01 [EV01]
grd_cLocationEntered_YN [YN]
grd_cLotEntered_YN [YN]
grd_OrigLocation_LOCN [LOCN]
grd_OrigLot_LOTN [LOTN]
frm_cSystem49TInstalled_EV01 [EV01]
grd_cCGFEffectDateChanged_EV01 [EV01]
frm_mnPrevKitId [KITID]
frm_cPrevKitReqDateBypassFlag [EV01]
frm_cCopyingDirtyKit [EV01]
frm_cManualBlanketRelease_EV01 [EV01]
frm_cSystem42WInstalled_EV01 [EV01]
frm_cApparelInstalled_EV01 [EV01]
frm_szCollectionDesc_C9DSC1 [C9DSC1]
frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
frm_cCollValidationErrors_ERRC [ERRC]
frm_mnApparelMatrixAddrNum_AN8 [AN8]
frm_cCollValidationDone_EV01 [EV01]
frm_cApprlPressButtonMode_EV01 [EV01]
frm_jdApparelReqDate_DRQJ [DRQJ]
frm_jdApparelSchdPickDate_PDDJ [PDDJ]
frm_jdApparelPromDelDate_RSDJ [RSDJ]
frm_jdApparelCancelDate_CNDJ [CNDJ]
frm_cApparelCalled_EV01 [EV01]
frm_szCollectiTemplName_C9MOSA [C9MOSA]
frm_cCollectTemplPrefix_C9MACO [C9MACO]
frm_cCollTemplatesDone_EV01 [EV01]
grd_cApparelRootItem_EV01 [EV01]
frm_cCollectionInfoNotBlank_YN [YN]
frm_cApparelItemProcessed_EV01 [EV01]
frm_jdApparelPromShipDate_PPDJ [PPDJ]
grd_mnQtyEnteredByUser_UORG [UORG]
frm_cUseTaxedPrices_UTP [UTP]
frm_cSalesTaxedPrices_TPSC [TPSC]
frm_cCustomerTaxedPrices_CTXP [CTXP]
frm_cErrorFlag_EV01 [EV01]
frm_mnSOTagDocOrdInvNo_DOCO [DOCO]
frm_szSOTagCompanyOrder_KCOO [KCOO]
frm_szSOTagOrderType_DCTO [DCTO]
frm_mnSOTagLineNum_LNID [LNID]
frm_mnCustAddNumber_AN8 [AN8]
frm_szOrderCompany_CO [CO]
frm_cInvalidUTPChange_EV01 [EV01]
grd_SavedTaxedUnitPrice_UCSTR [UCSTR]
grd_SavedTaxedExtPrice_XEXP [XEXP]
frm_cGridFocused_EV01 [EV01]
frm_mnPrevSoldTo_AN8 [AN8]
frm_mnPrevShipTo_AN8 [AN8]
frm_szPrevMCU_MCU [MCU]
frm_cUseTaxedPricesCredit_UTP [UTP]
frm_cOrigUseTaxedPrices_UTP [UTP]
grd_mnUndoTaxedUnitPrice_TUPRC [TUPRC]
grd_mnUndoTaxedExtPrice_TAEXP [TAEXP]
grd_mnUndoUnitTaxAmt_UTA [UTA]
grd_mnUndoExtTaxAmt_ETA [ETA]
grd_mnUndoForTaxedUnitPri_TFUP [TFUP]
grd_mnUndForTaxedExtPrice_TFEA [TFEA]
grd_mnUndoForUnitTaxAmt_FUTA [FUTA]
grd_mnUndoFoExtTaxAmt_FETA [FETA]
frm_cCollDescSetInVA_EV01 [EV01]
grd_mnLineNumber_LNID [LNID]
grd_cLineCancelled_EV01 [EV01]
frm_cTaxFieldChanged_EV01 [EV01]
frm_nErrorCount_INT01 [INT01]
frm_nWarningCount_INT01 [INT01]
frm_szBeginDocSOEMBFFlag_SOEF [SOEF]
frm_cPMPNInstalled_EV01 [EV01]
frm_cPMPN_TransferDirect_SO11 [SO11]
frm_cPMPNSalesFlag32_SOFLG [SOFLG]
grd_szGeneratedProdNo_PMPN [PMPN]
grd_cSuppressPNGenerate_EV01 [EV01]
grd_cPMPNEnabled_PNYN [PNYN]
grd_cToProdNoControlled_PNYN [PNYN]
grd_cProdNoGeneratedYN_EV01 [EV01]
grd_cProdNoChangedYN_EV01 [EV01]

=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Ordered
Event: Col Exited & Changed - Inline
Event GUID: 5ef15ced-e064-11d1-9ac9-00600832fe19
=============================================
//
//    If GC  - Orig Qty is zero, then entering a new line.
//
If VA grd_UORG_OrigQtyOrdered [UORG] is equal to "0"
     VA frm_cDidQtyOrderedChng [ERRC] = "1"
Else
     If GC Quantity Ordered [UORG] is equal to VA grd_UORG_OrigQtyOrdered [UORG]
          VA frm_cDidQtyOrderedChng [ERRC] = "0"
     Else
          VA frm_cDidQtyOrderedChng [ERRC] = "1"
     End If
End If
//
//    If the value in Qty ordered has changed
//
If VA frm_cDidQtyOrderedChng [ERRC] is equal to "1"
     // SAR 6651550
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          If GC Last Stat [LTTR] is equal to "980"
          Or GC Last Stat [LTTR] is equal to "999"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     //    Call the kit window if this is a kit parent line and this line is either a
     //     new line or its Qty has changed.
     //
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "0"
          // SAR#4923460-Begin
          VA frm_cDidQtyChngOnKitParent [ERRC] = "1"
          // SAR 7293977
          If GC cGetFromHistory [EV01] is equal to "1"
               VA frm_EventCalledOnce_EV01 [EV01] = "1"
          End If
     Else
          VA frm_cDidQtyChngOnKitParent [ERRC] = "0"
     End If
     If VA frm_cDidQtyChngOnKitParent [ERRC] is equal to "1"
          // DUP SAR 5380364
          If VA grd_ACTI_ActionHidden [ACTI] is equal to "C"
          And GC Last Stat [LTTR] is equal to "900"
          Or VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          And VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "1"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     // SAR#4923460-End
     //
     //     If order quantity has changed, zero out the ship, bo, and cancel
     //     quantities.
     // SAR 2445396 - Also zero out the weight
     // SAR 2887194 - Also zero out the volume
     GC Quantity Shipped [SOQS] = "0"
     GC Quantity Backordered [SOBK] = "0"
     GC Quantity Canceled [SOCN] = "0"
     GC Unit Weight [ITWT] = "0"
     GC Unit Volume [ITVL] = "0"
     // SAR 7551008
     VA grd_cCalledFromP42216 [EV01] = <Blank>
     // *************************************************************************
     // SAR 2967629 - Begin ADD
     // If SuppressProcess flag is '4' this means that a Product Allocation
     // warning has already been issued. However since the Quantity
     // Ordered was changed then the warning must be redisplayed. This
     // flag must then be cleared for the warning to be redisplayed.
     // *************************************************************************
     ! If VA grd_MATH01_SuppressProcess [MATH01] is equal to "4.00"
          ! VA grd_MATH01_SuppressProcess [MATH01] = "0"
     ! End If
     // SAR 2967629 - End ADD
     // SAR 8347076 – delete code fix of SAR 2967629
     //
     // SAR 8920257 - Only trigger config window if order qty is changed
     If GC Quantity Ordered [UORG] is not equal to "0"
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     End If
Else
     // SAR 7293977
     If VA frm_EventCalledOnce_EV01 [EV01] is not equal to "1"
          If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               // SAR 4147798-Begin
               If GC cGetFromHistory [EV01] is equal to <Blank>
               Or GC cGetFromHistory [EV01] is equal to <NULL>
               Or GC cGetFromHistory [EV01] is equal to "0"
                    VA grd_EV12_KitProcessed [EV12] = "1"
               Else
                    VA grd_EV12_KitProcessed [EV12] = "0"
               End If
               //  SAR 4147798-End
          End If
     End If
End If
//
// SAR 5645529
ChangeStringElement(B4002410.ChangeStringElement)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
     "33" -> nPosition [INT01]
     <Blank> -> cCharacter [EV01]

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Ordered
Event: Col Exited & Changed - Asynch
Event GUID: a70ccb73-8b94-4b21-8be0-71e1f9b11848
=============================================
//
// Process Approval
//
Press Button(FC Approval)
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Item Number
Event: Visual Assist Button Clicked
Event GUID: 8bca3f59-259e-4214-b3bf-1a451a32250e
=============================================
// ---------------------------------------------------------------------------
// 6545212 CRM CSS - Customer Item Number logic
// ---------------------------------------------------------------------------
Suppress Default Visual Assist Form
Call App:P41829W Form:W41829WA Version:ZJDE0002
     GC Item Number [UITM] <- szItemNoUnknownFormat [UITM]
     VA frm_szFormTitle [CFGS] -> szFormTitle_CFGS [CFGS]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC UM 
Event: Visual Assist Button Clicked
Event GUID: c5d7f866-9ed5-11d4-a18e-0006290d2815
=============================================
// ************************************************************************
// SAR 4541971 - Begin ADD
// ************************************************************************
Suppress Default Visual Assist Form
If GC Item Number [UITM] is not equal to <Blank>
     If GC Business Unit [MCU] is not equal to <Blank>
     And GC Business Unit [MCU] is not equal to <NULL>
          VA frm_MCU_To_Branch [MCU] = GC Business Unit [MCU]
     Else
          VA frm_MCU_To_Branch [MCU] = FC Business Unit [MCU]
     End If
     Call App:P40100 Form:W40100A Version:Undefined
          VA frm_MCU_To_Branch [MCU] -> szCostCenter [MCU]
          GC UM  [UOM] <> szUnitOfMeasure [UM]
          "1" -> cExcludeFlag [EV01]
          GC Item Number [UITM] -> ItemNumber [UITM]
Else
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "004G")
End If
// SAR 4541971 - End ADD

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC UM 
Event: Col Exited & Changed - Inline
Event GUID: 5ef15cee-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_UnitOfMeasureAsInput [UOM]
----------------------------------------
If GC UM  [UOM] is not equal to VA evt_UnitOfMeasureAsInput [UOM]
     If GC UM  [UOM] is less than or equal to <Blank>
          GC UM  [UOM] = PO szDefaultTransactionUom [UOM]
     End If
     // 
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
     // 
     // SAR 6909223 - Call the kit window if this is a kit parent line and 
     // its UOM is changed
     // 
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "0"
          VA frm_cDidQtyChngOnKitParent [ERRC] = "1"
     Else
          VA frm_cDidQtyChngOnKitParent [ERRC] = "0"
     End If
     If VA frm_cDidQtyChngOnKitParent [ERRC] is equal to "1"
          If VA grd_ACTI_ActionHidden [ACTI] is equal to "C"
          And GC Last Stat [LTTR] is equal to "900"
          Or VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          And VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "1"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     // 
     GC Unit Weight [ITWT] = <NULL>
     // SAR 6623321
     GC Unit Volume [ITVL] = <NULL>
     // *************************************************************************
     // SAR 2967629 - Begin ADD
     // If SuppressProcess flag is '4' this means that a Product Allocation
     // warning has already been issued. However since the UOM
     // was changed then the warning must be redisplayed. This
     // flag must then be cleared for the warning to be redisplayed.
     // *************************************************************************
     ! If VA grd_MATH01_SuppressProcess [MATH01] is equal to "4.00"
          ! VA grd_MATH01_SuppressProcess [MATH01] = "0"
     ! End If
     // SAR 2967629 - End ADD
     // SAR 8347076– delete code fix of SAR 2967629
     // SAR  4804891
     // 
     // SAR 7209763 - Update QuantityCancelled if LastStatus is not equal to 990
     If GC Last Stat [LTTR] is not equal to "990"
          GC Quantity Canceled [SOCN] = "0"
     End If
     // SAR 7209763 - End
     // 
     GC Quantity Backordered [SOBK] = "0"
     GC Quantity Shipped [SOQS] = "0"
     // 
     // SAR 7551008
     VA grd_cCalledFromP42216 [EV01] = <Blank>
     // SAR 6213402
     If SV Form_ Mode is equal to CO ADD_MODE
          If GC Last Stat [LTTR] is equal to "980"
          Or GC Last Stat [LTTR] is equal to "999"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     // 
     // SAR 5645529
     ChangeStringElement(B4002410.ChangeStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
          "33" -> nPosition [INT01]
          <Blank> -> cCharacter [EV01]
     VA evt_UnitOfMeasureAsInput [UOM] = GC UM  [UOM]
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC UM 
Event: Col Exited & Changed - Asynch
Event GUID: 9be38e87-8ee3-45fd-b2e5-4746d8bc8091
=============================================
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Secondary Qty Ordered
Event: Col Exited & Changed - Asynch
Event GUID: f65f67e0-427e-4235-925a-ff3b1dfb9920
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)
// 
// Process Approval
// 
Press Button(FC Approval)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Sec UM
Event: Col Exited & Changed - Asynch
Event GUID: 048af1d0-f645-43f3-9d4e-2662c59d797b
=============================================
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Item Number
Event: Visual Assist Button Clicked
Event GUID: 95ea8b51-650a-11d2-9b56-00104b297363
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSymToIdentifyShrtInv_SYM1 [SYM1]
evt_cSymToIdent3rdInvNu_SYM3 [SYM3]
evt_mnShortItem_ITM [ITM]
evt_szThirdItem_AITM [AITM]
evt_szBranchPlant_MCU [MCU]
evt_nItemNumberLength_INT01 [INT01]
evt_cCallTemplateAppPCW43_EV01 [EV01]
evt_mnItemNumber [ITM]
evt_sz2ndItemNumber_LITM [LITM]
evt_sz3rdItemNumber_AITM [AITM]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If PO cCollectionTemplatePrefix [C9MACO] is greater than <Blank>
          VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = <NULL>
          VA frm_szCollectiTemplName_C9MOSA [C9MOSA] = <NULL>
          //
          // Check the first char of Item No to see if coll.template prefix is entered
          VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = substr([GC Item Number [UITM]], "0", "1")
          //
          // Check if the prefix entered is same as in processing option
          If VA frm_cCollectTemplPrefix_C9MACO [C9MACO] is greater than <Blank>
          And VA frm_cCollectTemplPrefix_C9MACO [C9MACO] is equal to PO cCollectionTemplatePrefix [C9MACO]
               VA evt_cCallTemplateAppPCW43_EV01 [EV01] = "1"
          End If
     End If
End If
//
// Call Collection Template Search and Select Application
If VA evt_cCallTemplateAppPCW43_EV01 [EV01] is equal to "1"
     Suppress Default Visual Assist Form
     Call App:PCW43 Form:WCW43A Version:Undefined
          VA frm_szCollectiTemplName_C9MOSA [C9MOSA] <> szC9MOSA-Collection_Modele [C9MOSA]
     If VA frm_szCollectiTemplName_C9MOSA [C9MOSA] is greater than <Blank>
          GC Item Number [UITM] = concat([PO cCollectionTemplatePrefix [C9MACO]], [VA frm_szCollectiTemplName_C9MOSA [C9MOSA]])
     End If
Else
     // If Collection are entered, then call Apparel Item search and select form.
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     And VA frm_cCollectionInfoNotBlank_YN [YN] is equal to "Y"
          Suppress Default Visual Assist Form
          Call App:PCW41011 Form:WCW41011C Version:Undefined
               GC Item Number [UITM] <> szItemNoUnknownFormat [UITM]
               FC Collection [C9COLL] -> szCollection_FCW07 [C9COLL]
               FC SeasonCode [C9SEAC] -> szSeason_FCW07 [C9SEAC]
               FC Season Year [C9SEAY] -> szSeason_Year_FCW07 [C9SEAY]
     Else
          //
          // Begin SAR 6620770 - Modified conditions to reduce complexity
          If PO cStyleItemSearchType [EV01] is equal to "1"
          And VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
               Suppress Default Visual Assist Form
               Call App:PCW41011 Form:WCW41011A Version:Undefined
                    VA evt_mnItemNumber [ITM] <- mnIdentifierShortItem [ITM]
               If VA evt_mnItemNumber [ITM] is greater than "0"
                    If GC Business Unit [MCU] is less than or equal to <Blank>
                         VA evt_szBranchPlant_MCU [MCU] = FC Business Unit [MCU]
                    Else
                         VA evt_szBranchPlant_MCU [MCU] = GC Business Unit [MCU]
                    End If
                    // Determine the Primay Item Number
                    GetItemMasterByShortItem(X4101.GetItemMasterByShortItem)
                         VA evt_mnItemNumber [ITM] -> mnShortItemNumber [ITM]
                         VA evt_sz2ndItemNumber_LITM [LITM] <- sz2ndItemNumber [LITM]
                         VA evt_sz3rdItemNumber_AITM [AITM] <- sz3rdItemNumber [AITM]
                    ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                         VA evt_mnItemNumber [ITM] -> mnShortItemNumber [ITM]
                         VA evt_sz2ndItemNumber_LITM [LITM] -> sz2ndItemNumber [LITM]
                         VA evt_szThirdItem_AITM [AITM] -> sz3rdItemNumber [AITM]
                         VA evt_szBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
                         GC Item Number [UITM] <- szPrimaryItemNumber [UITM]
               End If
          Else
               If PO cShoppingCartMode [CART] is greater than <Blank>
                    Suppress Default Visual Assist Form
                    //
                    // 6545212 CRM CSS - pass in form title
                    //
                    Call App:P41829W Form:W41829WA Version:ZJDE0002
                         GC Item Number [UITM] <- szItemNoUnknownFormat [UITM]
                         VA frm_szFormTitle [CFGS] -> szFormTitle_CFGS [CFGS]
               Else
                    // Begin SAR 6606231
                    If GC Business Unit [MCU] is less than or equal to <Blank>
                         VA evt_szBranchPlant_MCU [MCU] = FC Business Unit [MCU]
                    Else
                         VA evt_szBranchPlant_MCU [MCU] = GC Business Unit [MCU]
                    End If
                    // To determine with identifier (short, second or third) is used as the
                    // primary number
                    VerifyAndGetBranchPlantConstants(B4101390.VerifyAndGetBranchPlantConstants)
                         VA evt_szBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
                         VA evt_cSymToIdentifyShrtInv_SYM1 [SYM1] <- cSymToIdentifyShrtInv [SYM1]
                         VA evt_cSymToIdent3rdInvNu_SYM3 [SYM3] <- cSymToIdent3rdInvNu [SYM3]
                    // If primary is defined as the third item number, call the search and select
                    // for third item
                    If VA evt_cSymToIdent3rdInvNu_SYM3 [SYM3] is less than or equal to <Blank>
                         Suppress Default Visual Assist Form
                         VA evt_szThirdItem_AITM [AITM] = <NULL>
                         Call App:P40AITM Form:W40AITMA Version:Undefined
                              VA evt_szThirdItem_AITM [AITM] <- Identifier3rditem [AITM]
                         // If the user selected a value, load it into FC
                         If VA evt_szThirdItem_AITM [AITM] is greater than <Blank>
                              GC Item Number [UITM] = VA evt_szThirdItem_AITM [AITM]
                         End If
                    Else
                         // If primary is defined as the short item number, call the search and select
                         // for short item
                         If VA evt_cSymToIdentifyShrtInv_SYM1 [SYM1] is less than or equal to <Blank>
                              Suppress Default Visual Assist Form
                              VA evt_mnShortItem_ITM [ITM] = 0
                              Call App:P40ITM Form:W40ITMA Version:Undefined
                                   VA evt_mnShortItem_ITM [ITM] <- IdentifierShortItem [ITM]
                              // If the user selected a value, load it into FC
                              If VA evt_mnShortItem_ITM [ITM] is greater than "0"
                                   MathNumericToString(B0800001.MathNumericToString)
                                        VA evt_mnShortItem_ITM [ITM] -> mnMathNumeric [MATH01]
                                        "1.00-" -> mnBeforeDecimalPoint [MATH01]
                                        GC Item Number [UITM] <- szString [DL01]
                              End If
                         End If
                    End If
                    // End SAR 6606231
               End If
               // End SAR 6620770
               //
          End If
          // SAR 8953108 - Apparel Enhancement
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Item Number
Event: Col Exited & Changed - Inline
Event GUID: d18c9d22-525f-11d2-afc6-0000f6783f07
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_nItemNumberLength_INT01 [INT01]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
// Check if collection template prefix is entered as in the processing option
// without the collection template name, then bring up the PCW43 (Collection
// Templates Search & Select Form) for user to select the collection template
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If PO cCollectionTemplatePrefix [C9MACO] is greater than <Blank>
          VA frm_szCollectiTemplName_C9MOSA [C9MOSA] = <NULL>
          VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = <NULL>
          //
          // Check if only the prefix is entered in Item Number field
          VA evt_nItemNumberLength_INT01 [INT01] = length([GC Item Number [UITM]])
          If VA evt_nItemNumberLength_INT01 [INT01] is equal to "1"
               //
               // Check the first char of Item No to see if coll.template prefix is entered
               VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = substr([GC Item Number [UITM]], "0", "1")
               //
               // Check if the prefix entered is same as in processing option
               If VA frm_cCollectTemplPrefix_C9MACO [C9MACO] is equal to PO cCollectionTemplatePrefix [C9MACO]
                    Suppress Default Visual Assist Form
                    Call App:PCW43 Form:WCW43A Version:Undefined
                         VA frm_szCollectiTemplName_C9MOSA [C9MOSA] <- szC9MOSA-Collection_Modele [C9MOSA]
                    If VA frm_szCollectiTemplName_C9MOSA [C9MOSA] is greater than <Blank>
                         GC Item Number [UITM] = concat([PO cCollectionTemplatePrefix [C9MACO]], [VA frm_szCollectiTemplName_C9MOSA [C9MOSA]])
                    End If
               End If
          End If
     End If
End If
//
VA grd_EV25_CfgItemProcessed [EV25] = "0"
//
// **********************************************************************
// SAR 2908856
// When the Item is changed, the Description fields will be blanked.
// **********************************************************************
//
If VA grd_cItemFldLocked_EV01 [EV01] is equal to "0"
Or VA grd_cItemFldLocked_EV01 [EV01] is equal to <Blank>
Or VA grd_cItemFldLocked_EV01 [EV01] is equal to <NULL>
     // Bug # 11040613  Remove the space in GC Desc
     GC Description  [DSC1] = <NULL>
     GC Description Line 2 [DSC2] = <NULL>
End If
// End SAR 2908856
//
// SAR 7144111 Start
If VA grd_PrevItemNumber_UITM [UITM] is not equal to <Blank>
And VA grd_PrevItemNumber_UITM [UITM] is not equal to <NULL>
     If VA grd_PrevItemNumber_UITM [UITM] is not equal to GC Item Number [UITM]
          GC Short Item No [ITM] = <NULL>
          GC Quantity Available [QAVAL] = <NULL>
          GC Quantity Shipped [SOQS] = <NULL>
          GC Quantity Backordered [SOBK] = <NULL>
          GC Quantity Canceled [SOCN] = <NULL>
          GC Next Stat [NXTR] = <NULL>
          GC Last Stat [LTTR] = <NULL>
          GC Unit Cost [UNCS] = <NULL>
          GC Extended Cost [ECST] = <NULL>
          GC Foreign Unit Cost [FUC] = <NULL>
          GC Foreign Extended Cost [FEC] = <NULL>
          GC Unit Price [UPRC] = <NULL>
          GC Extended Price [AEXP] = <NULL>
          GC Foreign Unit Price [FUP] = <NULL>
          GC Foreign Extended Price [FEA] = <NULL>
          // SAR 7220858 Start
          GC Unit Volume [ITVL] = <NULL>
          GC Unit Weight [ITWT] = <NULL>
          // SAR 7220858 End
          //
          // SAR 7202772 Start
          GC Vol U/M [VLUM] = <NULL>
          GC Wt U/M [WTUM] = <NULL>
          // SAR 7202772 End
          // Bug 11851106
          GC Ln Ty [LNTY] = <NULL>
     End If
End If
// SAR 7144111 End
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Ln Ty
Event: Col Exited & Changed - Inline
Event GUID: 733693d7-5803-11d4-97b1-000629b033eb
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4365349                   VK6272082                 07/12/00
// 8966561     JSpencer      09/16/10   Unit Price Not Disabled
//
GC Ln Ty [LNTY] = ltrim([GC Ln Ty [LNTY]], <Blank>)
// SAR 4365349 BEGIN - ADD
// sar 5213241 - Disable price and extednded price fields for all line types
if
// PO cDisableorHidePrice or PO cDisablePricingRelated is used
If PO cDisableorHidePrice [EV04] is not equal to "1"
And PO cDisableorHidePrice [EV04] is not equal to "2"
And PO cDisablePricingRelated [EV01] is not equal to "1"
And PO cDisablePricingRelated [EV01] is not equal to "2"
     If GC Ln Ty [LNTY] is equal to VA frm_cPrevLineType_LNTY [LNTY]
          If VA frm_cPrevLntyProtectPrice_EV01 [EV01] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               // SAR 5330594 - sales based on date
               // SAR 5494134
               ! Disable Grid(FC Grid, <Currently Selected Row>, GC Price EffectiveDate)
               //
               // SAR 8955603 - Disable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          Else
               // SAR 8955603 - Do not enable non-taxed price columns if using taxed prices.
               If VA frm_cUseTaxedPrices_UTP [UTP] is not equal to "1"
                    Enable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               End If
               // SAR 5330594 - sales based on date
               // SAR 5494134
               ! Enable Grid(FC Grid, <Currently Selected Row>, GC Price EffectiveDate)
          End If
     Else
          F40205.FetchSingle  [Index 1: line type file]
               GC Ln Ty [LNTY] = TK Line Type [LNTY]
               VA grd_cLntyProtectPrice_PDC1 [PDC1] <- TK Print on Document 1 (Y/N) [PDC1]
          If VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "1"
          Or VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "Y"
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               // SAR 5330594 - sales based on date
               // SAR 5494134
               ! Disable Grid(FC Grid, <Currently Selected Row>, GC Price EffectiveDate)
               //
               // SAR 8955603 - Disable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          Else
               // SAR 8955603 - Do not enable non-taxed price columns if using taxed prices.
               If VA frm_cUseTaxedPrices_UTP [UTP] is not equal to "1"
                    Enable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               End If
               // SAR 5330594 - sales based on date
               // SAR 5494134
               ! Enable Grid(FC Grid, <Currently Selected Row>, GC Price EffectiveDate)
               //
               // SAR 8955603 - Enable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Enable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Enable Grid(FC Grid,  <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Enable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          End If
          VA frm_cPrevLntyProtectPrice_EV01 [EV01] = VA grd_cLntyProtectPrice_PDC1 [PDC1]
          VA frm_cPrevLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
     End If
     // sar 5213241
Else
     // Sar 8966561 Disable if PO Hide/Show Price set to Hide
     ! Enable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
     ! Enable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
     ! Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
     ! Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC UnitPrice)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedPrice)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ForeignUnit Price)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ForeignExtended Price)
     // sar 5213241
     //
     // SAR 8955603 - Enable taxed price columns
     If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          Enable Grid(FC Grid,  <Currently Selected Row>, GC TaxedUnit Price)
          Enable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
          Enable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
          Enable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
     Else
          Enable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
          Enable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
          Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
          Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
     End If
End If
// SAR 4365349 END - ADD
// SAR 8847151 - Blank out the descriptions
GC Description  [DSC1] = <NULL>
GC Description Line 2 [DSC2] = <NULL>

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Ln Ty
Event: Col Exited & Changed - Asynch
Event GUID: ddacf7a7-acb2-42c1-a66f-fe7fd345f7fd
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Price
Event: Col Exited & Changed - Inline
Event GUID: 4023a433-8d53-11d3-b9d4-00003953080e
=============================================
// SAR #3435915 - Calculate Prices if Unit Price is Blank
// Sar 5098211 -  Calculate Price if Unit Price is Blank
If GC Unit Price [UPRC] is equal to <Blank>
And VA grd_SaveExtPrice [EV01] is not equal to "1"
     GC Extended Price [AEXP] = <NULL>
     GC Foreign Unit Price [FUP] = <NULL>
     GC Foreign Extended Price [FEA] = <NULL>
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Price
Event: Col Exited & Changed - Asynch
Event GUID: f57df5ef-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 7846981 - Initialization function
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// 
// SAR 5953388
// SAR 7765006 - passing cPriceOnOverride flag
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "1" -> cCalledFrom [MODE]
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Extended Price
Event: Col Exited & Changed - Asynch
Event GUID: f57df5f0-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 7846981 - Initialization function
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// 
// SAR 5953388
// SAR 7765006 - passing cPriceOnOverride flag
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "3" -> cCalledFrom [MODE]
     VA grd_XEXP_Saved_Ext_Price [XEXP] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_SaveExtPrice [EV01] <> cSaveExtPrice [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Taxed Unit Price
Event: Col Exited & Changed - Asynch
Event GUID: 8edff07d-619a-4263-ad38-fe8cd2e69323
=============================================
// SAR 8955603 - Process taxed unit price override
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
//
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "A" -> cCalledFrom [MODE]
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
     GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
     GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
     GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
     GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
     GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
     GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
     GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
     GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
     GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
     VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] <> mnSavedTaxedPrice [XEXP]
//
// Process Approval
Press Button(FC Approval)
//
// Process Audit Log
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Taxed Extended Price
Event: Col Exited & Changed - Asynch
Event GUID: 93ce5e09-ee04-445b-b292-f2071dca0bdc
=============================================
// SAR 8955603 - Process taxed extended price override
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
//
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "C" -> cCalledFrom [MODE]
     VA grd_XEXP_Saved_Ext_Price [XEXP] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_SaveExtPrice [EV01] <> cSaveExtPrice [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
     GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
     GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
     GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
     GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
     GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
     GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
     GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
     GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
     GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
     VA grd_SavedTaxedExtPrice_XEXP [XEXP] <> mnSavedTaxedPrice [XEXP]
//
// Process Approval
Press Button(FC Approval)
//
// Process Audit Log
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Unit Price
Event: Col Exited & Changed - Asynch
Event GUID: c785804d-a240-11d0-a204-0000f6728a56
=============================================
// SAR 7846981 - Initialization function
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// 
// SAR 5953388
// SAR 7765006 - passing cPriceOnOverride flag
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "2" -> cCalledFrom [MODE]
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Extended Price
Event: Col Exited & Changed - Asynch
Event GUID: c785804e-a240-11d0-a204-0000f6728a56
=============================================
// SAR 7846981 - Initialization function
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// 
// SAR 5953388
// SAR 7765006 - passing cPriceOnOverride flag
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "4" -> cCalledFrom [MODE]
     VA grd_XEXP_Saved_Ext_Price [XEXP] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
// 
// Process Approval
// 
Press Button(FC Approval)
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Taxed Unit Price
Event: Col Exited & Changed - Asynch
Event GUID: 89414ea0-e713-4142-95b3-3554aaaef849
=============================================
// SAR 8955603 - Process foreign taxed unit price override
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
//
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "B" -> cCalledFrom [MODE]
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
     GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
     GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
     GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
     GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
     GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
     GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
     GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
     GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
     GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
     VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] <> mnSavedTaxedPrice [XEXP]
//
// Process Approval
Press Button(FC Approval)
//
// Process Audit Log
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Taxed Extended Price
Event: Col Exited & Changed - Asynch
Event GUID: cbccf9d8-6e25-4ace-9710-3835f7683e97
=============================================
// SAR 8955603 - Process foreign taxed extended price override
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is less than or equal to <Blank>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
//
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Price [UPRC] <> mnUnitPriceOrCost [UPRC]
     GC Extended Price [AEXP] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Price [FUP] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Price [FEA] <> mnForExtendedPriceOrCost [FEA]
     "D" -> cCalledFrom [MODE]
     VA grd_XEXP_Saved_Ext_Price [XEXP] -> mnSavedPriceOrCost [XEXP]
     GC Price Over Cd [PROV] <> cPriceOrCostOverrideFlag [EV01]
     VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
     GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
     VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
     GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
     GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
     GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
     GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
     GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
     GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
     GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
     GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
     GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
     VA grd_SavedTaxedExtPrice_XEXP [XEXP] <> mnSavedTaxedPrice [XEXP]
//
// Process Approval
Press Button(FC Approval)
//
// Process Audit Log
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Business Unit
Event: Col Exited & Changed - Inline
Event GUID: 11e23310-5e0d-11d2-a738-0000f6a025f4
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cDidBranchPlnatChange_ERRC [ERRC]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4356397                   VK6272082                 07/10/00
//
// SAR 5390765 add if statement around the whole logic
//
// 8937186
If VA grd_szPrevBranchEntered_MCU [MCU] is not equal to GC Business Unit [MCU]
And VA grd_szPrevBranchEntered_MCU [MCU] is not equal to <NULL>
     // SAR 6912211 - Begin
     GC Description  [DSC1] = <NULL>
     GC Description Line 2 [DSC2] = <NULL>
     // SAR 6912211 - End
     GC Quantity Canceled [SOCN] = <NULL>
     GC Quantity Backordered [SOBK] = <NULL>
     GC Quantity Shipped [SOQS] = <NULL>
     // SAR#2808097, Clear the Status Code when MCU changed
     //
     // SAR 4356397 BEGIN / END ADD
     // SAR 6496369 - logic to blank out LastStatus and NextStatus is duplicated on
     // Location AND Lot Number Col Exited and Changed - Inline events
     If GC Last Stat [LTTR] is equal to "900"
          GC Last Stat [LTTR] = <NULL>
          GC Next Stat [NXTR] = <NULL>
     Else
          // SAR 5489378
          If GC Next Stat [NXTR] is equal to "999"
          And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     // SAR 4689984- Blank Location and Lot when BP is Changed
     VA frm_szPreviousCommitLocation [LOCN] = GC Location  [LOCN]
     VA frm_szPreviousCommitLot [LOTN] = GC Lot Serial Number [LOTN]
     GC Location  [LOCN] = <NULL>
     GC Lot Serial Number [LOTN] = <NULL>
     GC Cancel Date [CNDJ] = <NULL>
End If
// End SAR 5390765
// Sar 5057954
If VA grd_OrigParentBranchPlant_MCU [MCU] is equal to <Blank>
Or VA grd_OrigParentBranchPlant_MCU [MCU] is equal to <NULL>
     VA evt_cDidBranchPlnatChange_ERRC [ERRC] = "1"
Else
     If GC Business Unit [MCU] is equal to VA grd_OrigParentBranchPlant_MCU [MCU]
          VA evt_cDidBranchPlnatChange_ERRC [ERRC] = "0"
     Else
          VA evt_cDidBranchPlnatChange_ERRC [ERRC] = "1"
          // SAR 6681741
          If SV Form_ Mode is equal to CO ADD_MODE
               GC Taxable  [TAX1] = <NULL>
          End If
     End If
End If
//
// If the value in Branch/Plant has changes
If VA evt_cDidBranchPlnatChange_ERRC [ERRC] is equal to "1"
     // Call the kit window if this is a kit parent line and this line is either a ne
     // line or its Branch/Plant has changed.
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "0"
     End If
End If
// Sar 5057954 End
// SAR 5645529
ChangeStringElement(B4002410.ChangeStringElement)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
     "33" -> nPosition [INT01]
     <Blank> -> cCharacter [EV01]
//

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Business Unit
Event: Col Exited & Changed - Asynch
Event GUID: f57df5eb-a23a-11d0-a204-0000f6728a56
=============================================
//
//    NEW:   Laurie
//
If PO cCommitPreference [EV23] is not equal to("1","2")
     If GC Business Unit [MCU] is less than or equal to "            "
          GC Business Unit [MCU] = VA frm_MCU_Default_Branch [MCU]
          // SAR 5390765
          VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
     End If
     If GC Business Unit [MCU] is less than or equal to "            "
          // SAR 8345741 - Default from Header B/P only if user has not  entered B/P in
          // Line Defaults
          If FC Business Unit [MCU] is equal to <Blank>
          Or FC Business Unit [MCU] is equal to <NULL>
               GC Business Unit [MCU] = FC Business Unit [MCU]
          End If
          // SAR 5390765
          VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
     End If
End If
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Location 
Event: Visual Assist Button Clicked
Event GUID: b05ad921-b9fe-11d2-a795-00105a1bfecd
=============================================
// SAR 7517580-Lot/Location blanked
Suppress Default Visual Assist Form
// 
If GC Business Unit [MCU] is less than or equal to <Blank>
     If FC Business Unit [MCU] is greater than or equal to <Blank>
          VA grd_szDetailBranchPlant_MCU [MCU] = FC Business Unit [MCU]
     Else
          VA grd_szDetailBranchPlant_MCU [MCU] = FC Business Unit [MCU]
     End If
Else
     // 
     VA grd_szDetailBranchPlant_MCU [MCU] = GC Business Unit [MCU]
     // 
End If
// 
// SAR 4579048 - Send in GC Item to narrow locations
Call App:P41LOCN Form:W41LOCNB Version:Undefined
     GC Location  [LOCN] <> Location [LOCN]
     GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
     VA grd_szDetailBranchPlant_MCU [MCU] -> szCostCenter [MCU]
     GC Lot Serial Number [LOTN] <> szLot [LOTN]
     GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
     PO szLotGroup [LOTGRP] -> szLotGroup [LOTGRP]
     FC Order Type [DCTO] -> szOrderType [DCTO]

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Location 
Event: Col Exited & Changed - Inline
Event GUID: 46cbee70-0d3d-11d2-a15c-0000f6a07ac6
=============================================
// SAR 4924702 - Location exit (Added the IF condition)
If VA grd_OrigLocation_LOCN [LOCN] is not equal to GC Location  [LOCN]
     VA grd_cLocationEntered_YN [YN] = "Y"
End If
If VA grd_PreviousLocation_LOCN [LOCN] is not equal to GC Location  [LOCN]
     GC Quantity Canceled [SOCN] = <NULL>
     GC Quantity Backordered [SOBK] = <NULL>
     GC Quantity Shipped [SOQS] = <NULL>
     // SAR 6496369 - logic to blank out LastStatus and NextStatus is duplicated on
     // Branch/Plant AND Lot Number Col Exited and Changed - Inline events
     If GC Last Stat [LTTR] is equal to "900"
          GC Last Stat [LTTR] = <NULL>
          GC Next Stat [NXTR] = <NULL>
     Else
          If GC Next Stat [NXTR] is equal to "999"
          And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Location 
Event: Col Exited & Changed - Asynch
Event GUID: f92b256a-d77e-4354-9c0a-cc0977cf4f6c
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Lot Serial Number
Event: Col Exited & Changed - Inline
Event GUID: 60400ec1-5a04-11d2-a734-0000f6a025f4
=============================================
// SAR 7141463
If VA grd_OrigLot_LOTN [LOTN] is not equal to GC Lot Serial Number [LOTN]
     VA grd_cLotEntered_YN [YN] = "Y"
End If
If VA grd_PreviousLot_LOTN [LOTN] is not equal to GC Lot Serial Number [LOTN]
     GC Quantity Canceled [SOCN] = <NULL>
     GC Quantity Backordered [SOBK] = <NULL>
     GC Quantity Shipped [SOQS] = <NULL>
     // SAR 6496369 - logic to blank out LastStatus and NextStatus is duplicated on
     // Branch/Plant AND Location Col Exited and Changed - Inline events
     If GC Last Stat [LTTR] is equal to "900"
          GC Last Stat [LTTR] = <NULL>
          GC Next Stat [NXTR] = <NULL>
     Else
          If GC Next Stat [NXTR] is equal to "999"
          And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Lot Serial Number
Event: Col Exited & Changed - Asynch
Event GUID: c47dc857-5132-400e-b9d0-0e52fe682c8c
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Line Number
Event: Col Exited & Changed - Inline
Event GUID: 03621b06-0a50-11d4-ba3b-00003953080e
=============================================
// SAR# 3686651
If GC Line Number [LNID] is equal to <Blank>
Or GC Line Number [LNID] is equal to <NULL>
Or GC Line Number [LNID] is equal to "0"
And SV Form_ Mode is equal to CO ADD_MODE
     GC Line Number [LNID] = VA frm_mnStoredLineNumber_LNID [LNID]
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Line Number
Event: Col Exited & Changed - Asynch
Event GUID: ffc85801-d44d-4ba7-9d25-fdf73fee58f5
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Matrix Control Line Number
Event: Col Exited & Changed - Asynch
Event GUID: 4c699c8f-0d20-43a8-95c0-9355a9c5dc15
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Request Date
Event: Col Exited & Changed - Inline
Event GUID: be2394e1-c5c4-11d2-9b1f-00105a1c004a
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnQuantityCompleted_SOQS [SOQS]
evt_cShipmentNumExist [CHAR]
----------------------------------------
// SAR 5763736
// SAR 8961364 - On creating the Sales Transfer order where it generate work
// order also, the Related Order Number field of F4211 will have the
// related OT number and not the Work Order Number,
// So using F3201for Configurator to fetch the work order number
If PO cTransferOrderEntry [EV25] is not equal to "1"
     ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
          GC Related PO/SO No [RORN] -> szInputString [AA15]
          VA frm_mnWODocNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
          UNDEFINED <> cReturnedErrorCode [ERR]
Else
     If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          GetWorkOrderNumber(B3201411.GetWorkOrderNumber)
               GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               VA frm_mnWODocNumber_DOCO [DOCO] <- mnDocumentOrderInvoiceE_2 [DOCO]
               GC Or Ty [DCTO] -> szOrderType [DCTO]
               GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               "1" -> cSuppressErrorMessage [SUPPS]
               "42" -> szProductCode [SY]
     End If
End If
// SAR 5857257 - Get WO Quantity Completed
VerifyWorkOrderExists(B3100180.VerifyWorkOrderExists)
     VA frm_mnWODocNumber_DOCO [DOCO] -> mnDocumentNumber [DOCO]
     VA frm_DoesWOExist_ERRC [ERRC] <- cErrorCode [ERRC]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> szSubsidiary [SUB]
     UNDEFINED <> szDocumentType [DCTO]
     UNDEFINED <> mnOrderQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     VA evt_mnQuantityCompleted_SOQS [SOQS] <- mnQuantityShipped [SOQS]
     UNDEFINED <> mnQuantityScrapped [SOCN]
If VA frm_DoesWOExist_ERRC [ERRC] is equal to "1"
     If VA evt_mnQuantityCompleted_SOQS [SOQS] is equal to "0"
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     Else
          If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
               GC Price Over Cd [PROV] = "1"
          End If
          // don't update the confi processing flag
     End If
Else
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If
//
// SAR 6997307, Part of code is moved to - Hidden Button "RequestedDate
// Changed", to make it  accessible from multiple places, whereever the
// RequestDate is changed.
// SAR 7141463
If VA grd_PrevRequestedDate [DRQJ] is not equal to GC Request Date [DRQJ]
     Press Button(FC RequestedDate Changed)
     // SAR #7393097 Kit Parent Cancelled - Begin
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          If GC Last Stat [LTTR] is equal to "980"
          Or GC Last Stat [LTTR] is equal to "999"
               GC Last Stat [LTTR] = <NULL>
               GC Next Stat [NXTR] = <NULL>
          End If
     End If
     // SAR #7393097 Kit Parent Cancelled - End
End If
//
// Begin SAR 4464700
//    Call the kit window if this is a kit parent line and this line is either a
//     new line or its Qty has changed.
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     VA grd_EV12_KitProcessed [EV12] = "0"
End If
// End SAR 4464700
//
VA evt_cShipmentNumExist [CHAR] = "    "

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Request Date
Event: Col Exited & Changed - Asynch
Event GUID: 5cfb4efd-b28a-4ece-99fa-bf1fca84e4af
=============================================
//
// Process Approval
//
Press Button(FC Approval)
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Description 
Event: Col Exited & Changed - Asynch
Event GUID: cfc55886-cc02-4268-b768-97921c5c81a1
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Last Stat
Event: Col Exited & Changed - Asynch
Event GUID: cce88bd5-03fa-41af-a09a-3fc4af56103e
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Next Stat
Event: Col Exited & Changed - Asynch
Event GUID: 67e57ce0-5a8c-49da-9c7a-b897e3e8c7eb
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PR UM
Event: Visual Assist Button Clicked
Event GUID: c5d7f867-9ed5-11d4-a18e-0006290d2815
=============================================
// ************************************************************************
// SAR 4541971 - Begin ADD
// ************************************************************************
Suppress Default Visual Assist Form
If GC Item Number [UITM] is not equal to <Blank>
     If GC Business Unit [MCU] is not equal to <Blank>
     And GC Business Unit [MCU] is not equal to <NULL>
          VA frm_MCU_To_Branch [MCU] = GC Business Unit [MCU]
     Else
          VA frm_MCU_To_Branch [MCU] = FC Business Unit [MCU]
     End If
     Call App:P40100 Form:W40100A Version:Undefined
          VA frm_MCU_To_Branch [MCU] -> szCostCenter [MCU]
          GC PR UM [UOM4] <> szUnitOfMeasure [UM]
          "1" -> cExcludeFlag [EV01]
          GC Item Number [UITM] -> ItemNumber [UITM]
Else
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "004G")
End If
// SAR 4541971 - End ADD

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PR UM
Event: Col Exited & Changed - Inline
Event GUID: e72e2db7-de57-11d3-ba1f-00003953080e
=============================================
// SAR 3767346 - CAll Config Window on Pricing Uom
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PR UM
Event: Col Exited & Changed - Asynch
Event GUID: ddfdeda0-5bbc-4db4-bb89-48009d3f21a2
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Shipped
Event: Col Exited & Changed - Asynch
Event GUID: 80b9efeb-d1c6-4734-befd-78ebf1e38257
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Backordered
Event: Col Exited & Changed - Asynch
Event GUID: 9ac30095-808b-46cf-9143-4fa738dbd8bc
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Canceled
Event: Col Exited & Changed - Asynch
Event GUID: 1223c719-f296-4f96-b13b-b28e84a56319
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Sched Pick
Event: Col Exited & Changed - Inline
Event GUID: 5ef15cec-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnWoQuantityCompleted_SOQS [SOQS]
----------------------------------------
// SAR 7999777
If VA grd_jdOrigPickDate_PDDJ [PDDJ] is not equal to GC Sched Pick [PDDJ]
     VA grd_cPickDateEntered_EV01 [EV01] = "1"
Else
     VA grd_cPickDateEntered_EV01 [EV01] = "0"
End If
// SAR 3308887
! VA grd_EV25_CfgItemProcessed [EV25] = "0"
// 
// SAR 5519047
ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
     GC Related PO/SO No [RORN] -> szInputString [AA15]
     VA frm_mnWODocNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
     UNDEFINED <- cReturnedErrorCode [ERR]
// SAR 5857257 - Get WO Quantity Completed
VerifyWorkOrderExists(B3100180.VerifyWorkOrderExists)
     VA frm_mnWODocNumber_DOCO [DOCO] -> mnDocumentNumber [DOCO]
     VA frm_DoesWOExist_ERRC [ERRC] <- cErrorCode [ERRC]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> szSubsidiary [SUB]
     UNDEFINED <> szDocumentType [DCTO]
     UNDEFINED <> mnOrderQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     VA evt_mnWoQuantityCompleted_SOQS [SOQS] <- mnQuantityShipped [SOQS]
     UNDEFINED <> mnQuantityScrapped [SOCN]
If VA frm_DoesWOExist_ERRC [ERRC] is equal to "1"
     // SAR 5857257 - Changed if condition to check for WO completions
     If VA evt_mnWoQuantityCompleted_SOQS [SOQS] is equal to "0"
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     Else
          // don't update the confi processing flag
     End If
Else
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If
// 
// SAR 4926783
If PO cUsePrefProcess [EV22] is equal to "1"
     RetrieveR40400ProcessingOptions(B4002660.RetrieveR40400ProcessingOptions) [Include in Transaction]
          PO szP40400Vers [VL06] -> szVersionID [VL06]
          UNDEFINED <> cPaymentTerms [EV01]
          UNDEFINED <> cPricingUnitOfMeasure [EV02]
          UNDEFINED <> cRevenueCostCenter [EV03]
          UNDEFINED <> cEndUse [EV04]
          UNDEFINED <> cProductAllocation [EV05]
          UNDEFINED <> cGradeAndPotency [EV06]
          VA frm_cDeliveryDatePrefOn [EV01] <- cDeliveryDate [EV07]
          UNDEFINED <> cLineOfBusiness [EV08]
          UNDEFINED <> cPriceCode1 [EV09]
          UNDEFINED <> cPriceCode2 [EV10]
          UNDEFINED <> cPriceCode3 [EV11]
          VA frm_cOrderPrepPrefOn [EV02] <- cOrderPrepDays [EV12]
          UNDEFINED <> cPriceAdjustSchedule [EV13]
          UNDEFINED <> cNextOrderStatus [EV14]
          UNDEFINED <> cSalesCommission [EV15]
          UNDEFINED <> cCustomerCurrency [EV16]
          UNDEFINED <> cPaymentTermsBranch [EV17]
          UNDEFINED <> cPricingUOMBranch [EV18]
          UNDEFINED <> cRevenueCostCenterBranch [EV19]
          UNDEFINED <> cProductAllocationBranch [EV20]
          UNDEFINED <> cMultiReceivingLocation [EV21]
          UNDEFINED <> cMultiShippingLocation [EV22]
     If VA frm_cDeliveryDatePrefOn [EV01] is equal to "1"
          // SAR #3399985  DM6014163-10/22/1999 - Recalc Dates
          GC Promised Delivery [RSDJ] = <NULL>
     End If
     If VA frm_cOrderPrepPrefOn [EV02] is equal to "1"
          GC Promised Ship [PPDJ] = <NULL>
     End If
End If
// 
// SAR 3407762 - Begin ADD
// SAR 3661728 - Begin ADD
// Added an IF condition so that the Quantities will only be cleared
// when the Availability P-Opt is turned on.
// SAR 7141463
// SAR 8721777 - Do not blank out the qty here. This will be blanked out in
// BSFN on the basis if availability recheck is required or not. 
// SAR 3407762 - End ADD
// Begin SAR 5004318
//    Call the kit window if this is a kit parent line and this line is either a
//     new line or its Scheduled Pick Date has changed. 
// 
// SAR 8350785 - Don't trigger the Kit Selection Window if the kit is dirty or
// a component is past the SOE non-updatable status
// 
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
And GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
     VA grd_EV12_KitProcessed [EV12] = "0"
End If
// End SAR 5004318

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Sched Pick
Event: Col Exited & Changed - Asynch
Event GUID: 02b82697-fff5-4605-a73d-5b8592727974
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Promised Ship
Event: Col Exited & Changed - Inline
Event GUID: c2a43ad6-7bc8-4566-9c34-b5486705e36a
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnWoQuantityCompleted_SOQS [SOQS]
----------------------------------------
VA evt_mnWoQuantityCompleted_SOQS [SOQS] = "0"
// Begin SAR 5004318
//    Call the kit window if this is a kit parent line and this line is either a
//     new line or its Promised Ship Date has changed.
//
// SAR 8350785 - Don't trigger the Kit Selection Window if the kit is dirty or
// a component is past the SOE non-updatable status
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
And GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
     VA grd_EV12_KitProcessed [EV12] = "0"
End If
// End SAR 5004318
//
// SAR 6887706 - Check for user-entered date
// SAR 8317483 - Do not set the flag if the user blanks the Promised ship date
//
If VA grd_jdOrigShipDate_PPDJ [PPDJ] is not equal to GC Promised Ship [PPDJ]
And GC Promised Ship [PPDJ] is not equal to Null Date
     VA grd_cShipDateEntered_EV01 [EV01] = "1"
Else
     VA grd_cShipDateEntered_EV01 [EV01] = "0"
End If
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     If GC Related PO/SO No [RORN] is not equal to <Blank>
     And GC Related PO/SO No [RORN] is equal to <NULL>
          ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
               GC Related PO/SO No [RORN] -> szInputString [AA15]
               VA frm_mnWODocNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
          VerifyWorkOrderExists(B3100180.VerifyWorkOrderExists)
               VA frm_mnWODocNumber_DOCO [DOCO] -> mnDocumentNumber [DOCO]
               VA frm_DoesWOExist_ERRC [ERRC] <- cErrorCode [ERRC]
               VA evt_mnWoQuantityCompleted_SOQS [SOQS] <- mnQuantityShipped [SOQS]
          If VA frm_DoesWOExist_ERRC [ERRC] is equal to "1"
               If VA evt_mnWoQuantityCompleted_SOQS [SOQS] is equal to "0"
                    VA frm_ConfgProcessed_EV25 [EV25] = "0"
               Else
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                         GC Price Over Cd [PROV] = "1"
                    End If
               End If
          Else
               VA frm_ConfgProcessed_EV25 [EV25] = "0"
          End If
     Else
          VA frm_ConfgProcessed_EV25 [EV25] = "0"
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Promised Ship
Event: Col Exited & Changed - Asynch
Event GUID: 493bd36b-99f3-4a10-b246-b6ad1758a7f1
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Cancel Date
Event: Col Exited & Changed - Asynch
Event GUID: 928c9b20-c82b-4f65-9821-f2987cc60602
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Promised Delivery
Event: Col Exited & Changed - Inline
Event GUID: 5ef15ceb-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnWoQuantityCompleted_SOQS [SOQS]
----------------------------------------
//
// SAR 6887706 - Check for user-entered date
// SAR 8317483 - Do not set the flag if the user blanks the Promised Delivery
// date
If VA grd_jdOrigDeliveryDate_RSDJ [RSDJ] is not equal to GC Promised Delivery [RSDJ]
And GC Promised Delivery [RSDJ] is not equal to Null Date
     VA grd_cDeliveryDateEntered_EV01 [EV01] = "1"
Else
     VA grd_cDeliveryDateEntered_EV01 [EV01] = "0"
End If
//
// SAR 3308887
! VA grd_EV25_CfgItemProcessed [EV25] = "0"
// SAR 5519047
ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
     GC Related PO/SO No [RORN] -> szInputString [AA15]
     VA frm_mnWODocNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
     UNDEFINED <- cReturnedErrorCode [ERR]
// SAR 5857257 - Get WO Quantity Completed
VerifyWorkOrderExists(B3100180.VerifyWorkOrderExists)
     VA frm_mnWODocNumber_DOCO [DOCO] -> mnDocumentNumber [DOCO]
     VA frm_DoesWOExist_ERRC [ERRC] <- cErrorCode [ERRC]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> szSubsidiary [SUB]
     UNDEFINED <> szDocumentType [DCTO]
     UNDEFINED <> mnOrderQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     VA evt_mnWoQuantityCompleted_SOQS [SOQS] <- mnQuantityShipped [SOQS]
     UNDEFINED <> mnQuantityScrapped [SOCN]
If VA frm_DoesWOExist_ERRC [ERRC] is equal to "1"
     // SAR 5857257 - Changed if condition to check for WO completions
     If VA evt_mnWoQuantityCompleted_SOQS [SOQS] is equal to "0"
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     Else
          If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
               GC Price Over Cd [PROV] = "1"
          End If
          // don't update the confi processing flag
     End If
Else
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If
//
// SAR 4912154
If SV Form_ Mode is equal to CO UPDATE_MODE
     ChangeStringElement(B4002410.ChangeStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
          "7" -> nPosition [INT01]
          "1" -> cCharacter [EV01]
End If
// Begin SAR 5004318
//    Call the kit window if this is a kit parent line and this line is either a
//     new line or its Pormised Delivery Date has changed.
//
// SAR 8350785 - Don't trigger the Kit Selection Window if the kit is dirty or
// a component is past the SOE non-updatable status
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
And GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
     VA grd_EV12_KitProcessed [EV12] = "0"
End If
// End SAR 5004318

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Promised Delivery
Event: Col Exited & Changed - Asynch
Event GUID: fb6c50ea-246c-49f4-94e0-6e60cf219b9b
=============================================
//
// Process Approval
//
Press Button(FC Approval)
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Price Effective Date
Event: Col Exited & Changed - Inline
Event GUID: 4ae6f4f2-e72a-48bb-909d-521ad715b4b0
=============================================
// 
// SAR 5330594 - sales based on date
If GC Price Effective Date [PEFJ] is not equal to Null Date
     If GC Price Effective Date [PEFJ] is not equal to VA grd_jdPrevPriceEffDate_PEFJ [PEFJ]
          VA grd_cBasedonDate_DTBS [DTBS] = "O"
          VA grd_jdPrevPriceEffDate_PEFJ [PEFJ] = GC Price Effective Date [PEFJ]
     End If
End If
// 
// *** NOTE DATE CHANGE FOR CONFIGURATOR ***
VA grd_cCGFEffectDateChanged_EV01 [EV01] = "1"
// 

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Price Effective Date
Event: Col Exited & Changed - Asynch
Event GUID: 5077bc11-9eec-4d1c-8873-e43d4abacf1f
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Cost
Event: Col Exited & Changed - Inline
Event GUID: da85c790-b68b-4683-ac44-851ca92e1ee0
=============================================
If GC Unit Cost [UNCS] is equal to <Blank>
     GC Extended Cost [ECST] = <NULL>
     GC Foreign Unit Cost [FUC] = <NULL>
     GC Foreign Extended Cost [FEC] = <NULL>
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Cost
Event: Col Exited & Changed - Asynch
Event GUID: f57df5f2-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 5953388
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Cost [UNCS] <> mnUnitPriceOrCost [UPRC]
     GC Extended Cost [ECST] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Cost [FUC] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Cost [FEC] <> mnForExtendedPriceOrCost [FEA]
     "5" -> cCalledFrom [MODE]
     VA grd_FCSTR_Saved_Unit_Cost [FCSTR] -> mnSavedPriceOrCost [XEXP]
     VA grd_CSTO_Cost_Over [CSTO] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Unit Cost
Event: Col Exited & Changed - Asynch
Event GUID: 5ef15ce5-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 5953388
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Cost [UNCS] <> mnUnitPriceOrCost [UPRC]
     GC Extended Cost [ECST] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Cost [FUC] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Cost [FEC] <> mnForExtendedPriceOrCost [FEA]
     "6" -> cCalledFrom [MODE]
     VA grd_FCSTR_Saved_Unit_Cost [FCSTR] -> mnSavedPriceOrCost [XEXP]
     VA grd_CSTO_Cost_Over [CSTO] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Foreign Extended Cost
Event: Col Exited & Changed - Asynch
Event GUID: 5ef15ce4-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 5953388
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Cost [UNCS] <> mnUnitPriceOrCost [UPRC]
     GC Extended Cost [ECST] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Cost [FUC] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Cost [FEC] <> mnForExtendedPriceOrCost [FEA]
     "8" -> cCalledFrom [MODE]
     VA grd_XCST_Saved_Ext_Cost [XCST] -> mnSavedPriceOrCost [XEXP]
     VA grd_CSTO_Cost_Over [CSTO] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Extended Cost
Event: Col Exited & Changed - Asynch
Event GUID: 9093238c-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 5953388
PriceCostColExitedAsynch(B4504210.PriceCostColExitedAsynch)
     GC Unit Cost [UNCS] <> mnUnitPriceOrCost [UPRC]
     GC Extended Cost [ECST] <> mnExtendedPriceOrCost [AEXP]
     GC Foreign Unit Cost [FUC] <> mnForUnitPriceOrCost [FUP]
     GC Foreign Extended Cost [FEC] <> mnForExtendedPriceOrCost [FEA]
     "7" -> cCalledFrom [MODE]
     VA grd_XCST_Saved_Ext_Cost [XCST] -> mnSavedPriceOrCost [XEXP]
     VA grd_CSTO_Cost_Over [CSTO] <> cPriceOrCostOverrideFlag [EV01]
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Cost Rule
Event: Col Exited & Changed - Asynch
Event GUID: 0141d1f0-8642-4e1d-af79-91d03c926221
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Primary Supplier
Event: Col Exited & Changed - Asynch
Event GUID: 2b58a23b-1c88-414c-b729-3f1c369258ef
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Ship To Number
Event: Col Exited & Changed - Inline
Event GUID: 8cc06890-2d9c-11d3-97ee-0000396e080e
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cBillingAddressType [BADT]
----------------------------------------
! // 
! // SAR 3193961
! GetShipToBillingInstructions(B4200140.GetShipToBillingInstructions)
!      GC Ship To Number [SHAN] -> mnShipToAddress [SHAN]
!      "1" -> cSuppressErrorMsg [EV02]
!      UNDEFINED <> cErrorCode [ERRC]
!      UNDEFINED <> szTaxArea [TXA1]
!      UNDEFINED <> szTaxExplainationCode [EXR1]
!      UNDEFINED <> cApplyFreight [AFT]
!      UNDEFINED <> mnCarrierCode [CARS]
!      UNDEFINED <> szFreightHandlingCode [FRTH]
!      UNDEFINED <> szRouteCode [ROUT]
!      UNDEFINED <> szStopCode [STOP]
!      UNDEFINED <> szZoneNumber [ZON]
!      UNDEFINED <> szUOMWeight [WUMD]
!      UNDEFINED <> szUOMVolume [VUMD]
!      UNDEFINED <> mnCommissionCode1 [CMC1]
!      UNDEFINED <> mnCommissionCode2 [CMC2]
!      UNDEFINED <> mnCommissionRate1 [CMR1]
!      UNDEFINED <> mnCommissionRate2 [CMR2]
!      UNDEFINED <> szDeliveryInstr1 [DEL1]
!      UNDEFINED <> szDeliveryInstr2 [DEL2]
!      UNDEFINED <> cSubstitutesAllowed [SBAL]
!      UNDEFINED <> mnRelatedAddressNum [AN8R]
!      VA evt_cBillingAddressType [BADT] <- cBillingaddresstype [BADT]
!      UNDEFINED <> cPartialShipAllowed [APTS]
!      UNDEFINED <> cItemRestrictions [EDF2]
!      UNDEFINED <> szCompany [CO]
! If VA evt_cBillingAddressType [BADT] is not equal to "S"
! And VA evt_cBillingAddressType [BADT] is not equal to "X"
     ! Set Grid Cell Error(FC Grid, <Current Row>, GC Ship ToNumber, "1020")
! End If
// SAR 4924382
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Ship To Number
Event: Col Exited & Changed - Asynch
Event GUID: 80ff98a7-5181-4c41-b266-5d3f610e3edc
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Description Line 2
Event: Col Exited & Changed - Asynch
Event GUID: 78a872f7-6e8f-4ea6-b356-788c2335d9fb
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Taxable 
Event: Col Exited & Changed - Asynch
Event GUID: 148a311b-0233-4538-9ae3-cc7b93e40f17
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Wt U/M
Event: Col Exited & Changed - Asynch
Event GUID: 1f89b351-1212-4fe0-a756-f6dbe9124223
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Weight
Event: Col Exited & Changed - Asynch
Event GUID: 1a84479f-53e3-4c06-aac6-02f2e10457a2
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)
// SAR 7209886 - BEGIN
If GC Unit Weight [ITWT] is not equal to VA grd_InitialUnitWeight [ITWT]
     VA grd_WeightManuallyEntered [EV01] = "1"
End If
// SAR 7209886 - END


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Pay Inst
Event: Col Exited & Changed - Asynch
Event GUID: b6e00303-8e36-4ba7-8e1c-150fec6b65f9
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Print Message
Event: Grid Column Clicked
Event GUID: 78db704d-7422-43b0-b6ea-3f671ed0d415
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Agreement Exists
Event: Col Exited & Changed - Asynch
Event GUID: 973f40f0-eec8-496e-8454-47430620fc67
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Blankets Exists
Event: Col Exited & Changed - Asynch
Event GUID: 25c314f4-d33e-4f16-a310-8bd4e97d8bcb
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Association Exists
Event: Col Exited & Changed - Asynch
Event GUID: 6689a121-aefc-4006-939f-991cc1c604e7
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Subsitution Exists
Event: Col Exited & Changed - Asynch
Event GUID: be0a9ef2-5e1b-43b8-af76-afa01637d7c9
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Agreement Number
Event: Col Exited & Changed - Inline
Event GUID: db845810-4350-4598-9ea7-8f3697e4749d
=============================================
// SAR 5645529
ChangeStringElement(B4002410.ChangeStringElement)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
     "33" -> nPosition [INT01]
     <Blank> -> cCharacter [EV01]

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Agreement Number
Event: Col Exited & Changed - Asynch
Event GUID: b572a8fe-2297-4f29-8734-41aa62825601
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Supp No
Event: Col Exited & Changed - Asynch
Event GUID: c8e93382-2f2e-4900-86c5-923c149d8537
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Mod Trn
Event: Col Exited & Changed - Asynch
Event GUID: ea229ec1-399e-4cec-b270-897863ee8fa5
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Duty Sts
Event: Col Exited & Changed - Asynch
Event GUID: e9e58a59-14b1-40d1-96d4-122cb3313a45
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Carrier Number
Event: Col Exited & Changed - Asynch
Event GUID: 99d0a7ab-1800-4f16-ae2a-1da31180b0b5
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Line of Business
Event: Grid Column Clicked
Event GUID: f68876d2-47d6-420f-855f-d6545acc21b2
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC End Use
Event: Col Exited & Changed - Asynch
Event GUID: 391a9300-7f10-4769-b86d-782450938706
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Header Business Unit
Event: Col Exited & Changed - Asynch
Event GUID: af984fa7-1a93-4abe-8973-34ebba562f27
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 1
Event: Col Exited & Changed - Inline
Event GUID: e243c609-5b88-4837-bd5b-9cae699b8542
=============================================
// SAR 5414157-Begin- Pricing Impact, call kit window to reprice
// SAR 8350785 - Changes to Pricing Code 1, 2, and 3 will propagate to the kit
// component lines through the new logic in EditLine.  Disabling the following
// IF statement.
! If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     ! VA grd_EV12_KitProcessed [EV12] = "0"
! End If
! If PO cUsePrefProcess [EV22] is equal to "1"
! End If
// SAR 5414157 End
// SAR 8968785 - For Config Item, If PC1 is changed set the "CfgItemProcessed"
// flag to zero to trigger Configurator form P3210 so that the price with
// adjustments attached to PC1 would be calculated properly
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 1
Event: Col Exited & Changed - Asynch
Event GUID: 0f28cf7c-7324-4ab0-bc22-33184a7c3040
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 2
Event: Col Exited & Changed - Inline
Event GUID: 95005113-3f70-4a23-abed-4b34440fd60d
=============================================
// SAR 5414157-Begin- Pricing Impact, call kit window to reprice
// SAR 8350785 - Changes to Pricing Code 1, 2, and 3 will propagate to the kit
// component lines through the new logic in EditLine.  Disabling the following
// IF statement.
! If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     ! VA grd_EV12_KitProcessed [EV12] = "0"
! End If
! If PO cUsePrefProcess [EV22] is equal to "1"
! End If
// SAR 5414157 End
// SAR 8968785 - For Config Item, If PC2 is changed set the "CfgItemProcessed"
// flag to zero to trigger Configurator form P3210 so that the price with
// adjustments attached to PC1 would be calculated properly
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 2
Event: Col Exited & Changed - Asynch
Event GUID: 3d232f54-a71c-4b6b-8941-3fe2ebb14bc0
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 3
Event: Col Exited & Changed - Inline
Event GUID: 32eabb42-04fe-42be-b5ed-cff61ce205a5
=============================================
// SAR 5414157-Begin- Pricing Impact, call kit window to reprice
// SAR 8350785 - Changes to Pricing Code 1, 2, and 3 will propagate to the kit
// component lines through the new logic in EditLine.  Disabling the following
// IF statement.
! If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     ! VA grd_EV12_KitProcessed [EV12] = "0"
! End If
! If PO cUsePrefProcess [EV22] is equal to "1"
! End If
// SAR 5414157 End
// SAR 8968785 - For Config Item, If PC3 is changed set the "CfgItemProcessed"
// flag to zero to trigger Configurator form P3210 so that the price with
// adjustments attached to PC1 would be calculated properly
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PC 3
Event: Col Exited & Changed - Asynch
Event GUID: 1f8b4b20-b6c9-4649-9ea2-7e3eaadd991a
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Description 
Event: Col Exited & Changed - Asynch
Event GUID: 338cb6c7-9397-41af-bc1f-4026e18c4fc8
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Quantity Available
Event: Col Exited & Changed - Asynch
Event GUID: 1892bbf2-2739-4582-a3c7-cb0161940dce
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC % Profit Margin
Event: Col Exited & Changed - Inline
Event GUID: 392ad40c-09e3-40dd-afeb-1ae957354ebb
=============================================
If GC % Profit Margin [PRMG] is not equal to <Blank>
And GC % Profit Margin [PRMG] is not equal to <NULL>
And GC % Profit Margin [PRMG] is not equal to "0"
     If GC % Profit Margin [PRMG] is not equal to VA grd_mnPrevProfitMargin_PRMG [PRMG]
          VA grd_cProfitMarginChanged_EV01 [EV01] = "1"
          VA grd_mnPrevProfitMargin_PRMG [PRMG] = GC % Profit Margin [PRMG]
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC % Profit Margin
Event: Col Exited & Changed - Asynch
Event GUID: ec2d47b2-5863-40ea-944f-0251c287f810
=============================================
// 5544496-Removed Press Button, not a Stored Field


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Description 
Event: Col Exited & Changed - Asynch
Event GUID: 8de519f3-d9d7-42fd-a498-14dbc77dc5a7
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC To Curr
Event: Col Exited & Changed - Asynch
Event GUID: 5f29c9e9-53e5-4fe6-8b92-26e161a58030
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Exchange Rate
Event: Col Exited & Changed - Asynch
Event GUID: 78f0a523-6f44-4a98-bac4-8a98605130c7
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC PU UM
Event: Col Exited & Changed - Asynch
Event GUID: 105883c3-d00f-4a5d-86e5-840a9dfe6758
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Cost
Event: Col Exited & Changed - Inline
Event GUID: e3df5a60-2f21-4a75-b46a-b21f03570260
=============================================
If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
     If GC Unit Cost [UNCS] is not equal to VA grd_mnPurchaseUnitCostSaved [UNCS]
          If GC Unit Cost [UNCS] is not equal to "0"
               VA grd_cPurchaseCostOverride [CSTO] = "1"
          Else
               VA grd_cPurchaseCostOverride [CSTO] = "0"
          End If
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Unit Cost
Event: Col Exited & Changed - Asynch
Event GUID: 34276f55-c3e8-4323-be34-e8e9d63c51c8
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Extended Cost
Event: Col Exited & Changed - Asynch
Event GUID: 7f8fd3d2-970b-414a-ade1-8bf659e9a132
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Production Number
Event: Col Exited & Changed - Inline
Event GUID: d3e25f80-c177-4891-9efa-1b0f86065f10
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szPMPNErrMsgID_DTAI [DTAI]
----------------------------------------
! Was Grid Cell Value Entered(FC Grid, GC ProductionNumber, VA grd_cProdNoChangedYN_EV01)
If VA grd_cProdNoGeneratedYN_EV01 [EV01] is equal to "1"
     VA grd_cProdNoChangedYN_EV01 [EV01] = "0"
     VA grd_cProdNoGeneratedYN_EV01 [EV01] = "0"
Else
     VA grd_cProdNoChangedYN_EV01 [EV01] = "1"
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: GC Production Number
Event: Col Exited & Changed - Asynch
Event GUID: ac5bec8e-e440-448a-a547-1d623c0979ec
=============================================
//
// Process Audit Log
//
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df5e6-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_CheckCSIReturnValue [EV01]
evt_CallDisplayBeforeAccept [EV01]
evt_cContinueFGCacheLoop_EV01 [EV01]
evt_szReadCacheError_DTAI [DTAI]
evt_idFreeGoodCacheCursor [GENLNG]
evt_szFreeGoddCatName_CATLG [CATLG]
evt_cFGItemSelected_EV01 [EV01]
evt_cCallP42232_EV01 [EV01]
evt_INT02_Errors [INT02]
----------------------------------------
//
// SAR 5040714             AK7095647                02/12/02
// SAR 5779501            AK7095647                04/1/02
// SAR 6143011            PH5732462                08/15/02
// SAR 7163021            KS5885194                07/14/04
//
// SAR 8953108 - Apparel Enhancement
// If the Collection values have been previously blank and changed in SO
// Header Revisions in Update mode, then validate existing Items in SO Detail
// lines if the processing option is set to validate items against Collection.
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
And FI cCollectionValuesChanged [EV01] is equal to "1"
     If PO cValidateItemsWithCollection [EV01] is equal to "1"
     Or PO cValidateItemsWithCollection [EV01] is equal to "2"
          //
          // If all SO Detail records have not been loaded to the grid due to page at a
          // time processing, then set an error to notify the user to press end of the
          // grid records. Validate Items after all rows have been loaded to the grid.
          //
          If VA frm_cGridFilled [EV01] is not equal to "Y"
               Set Control Error(FC Order Number, "E41F05")
          Else
               Press Button(FC ValidateItemsAgainstCollection)
          End If
     End If
End If
//
// Sar 5492770 Begin
//
// SAR 6670144
//
VA frm_NonConsolidation_EVO1 [EV01] = "1"
// SAR 6880791 - Check for OP and pass OP Job No to Edit Doc
If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
     F4211EditDoc(B4200312.F4211EditDoc)
          VA frm_SavedJobNumberForOP [JOBS] -> mnCMJobNo [JOBS]
          FC Order Number [DOCO] -> mnSalesOrderNo [DOC]
          VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <> cCMErrorCondition [ERRC]
          FC Order Type [DCTO] -> szOrderType [DCT]
          FC Order Company [KCOO] -> szKeyCompany [KCO]
          FC OTOT: Order Total Display [TOT1] -> mnOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] -> mnForeignOrderTotal [FAP]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          "EP4210" -> szProgramID [JPID]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          VA frm_TMCR_Time_Of_Day [TMCR] -> mnTimeOfDay [TDAY]
          VA frm_TOTC_Total_Cost [TOTC] -> mnTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] -> mnForeignTotalCost [FCST]
          VA frm_cSuppressBlanketsRls_EV04 [EV04] -> cSuppressRlvBlnktFlag [EV02]
          VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
          VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV04]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV05]
          VA frm_NonConsolidation_EVO1 [EV01] -> cGenericChar1_EV01 [EV01]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FI mnRelatedOrderSetIdentifier [ROSID] -> mnRelatedOrderSetIdentifier [ROSID]
          FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
          FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
Else
     F4211EditDoc(B4200312.F4211EditDoc)
          FI Jobnumber [JOBS] -> mnCMJobNo [JOBS]
          FC Order Number [DOCO] -> mnSalesOrderNo [DOC]
          VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <> cCMErrorCondition [ERRC]
          FC Order Type [DCTO] -> szOrderType [DCT]
          FC Order Company [KCOO] -> szKeyCompany [KCO]
          FC OTOT: Order Total Display [TOT1] -> mnOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] -> mnForeignOrderTotal [FAP]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          "EP4210" -> szProgramID [JPID]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          VA frm_TMCR_Time_Of_Day [TMCR] -> mnTimeOfDay [TDAY]
          VA frm_TOTC_Total_Cost [TOTC] -> mnTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] -> mnForeignTotalCost [FCST]
          VA frm_cSuppressBlanketsRls_EV04 [EV04] -> cSuppressRlvBlnktFlag [EV02]
          VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
          VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV04]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV05]
          VA frm_NonConsolidation_EVO1 [EV01] -> cGenericChar1_EV01 [EV01]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FI mnRelatedOrderSetIdentifier [ROSID] -> mnRelatedOrderSetIdentifier [ROSID]
          FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
          FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
End If
//
If VA frm_ERRC_Error_Code [ERRC] is equal to "2"
     Stop Processing
End If
//
// SAR 8953108 - Apparel Enhancement
// Update F42UI02 Cache with Apparel Collection values. It is called in OK
// Button after Edit Doc, because this info is required for End Doc only.
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     ApparelProcessF42UI02(B41F0010.ApparelProcessF42UI02)
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FC SeasonCode [C9SEAC] -> szSeasonCode [C9SEAC]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          FC Season Year [C9SEAY] -> szSeasonYear [C9SEAY]
          FC Collection [C9COLL] -> szCollection [C9COLL]
          VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [EV01]
          FC Price Reference Date [C9PRDJ] -> jdDatePriceReference [C9PRDJ]
     If VA frm_ERRC_Error_Code [ERRC] is equal to "1"
          Stop Processing
     End If
End If
//
// SAR 6869233 - Display warning to trigger RowIsExitedChangedAsynch logic for
// basket reprice when form is in Update mode.
// SAR 8955603 - Trigger row processing for taxed order if tax fields changed
If VA frm_cBaskRepInUpdateMode_EV01 [EV01] is equal to "1"
Or VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
And VA frm_cTaxFieldChanged_EV01 [EV01] is equal to "1"
     Set Control Error(HC &OK, "031W")
     VA frm_cBaskRepInUpdateMode_EV01 [EV01] = "0"
     VA frm_cTaxFieldChanged_EV01 [EV01] = "0"
End If
// ---------------------------------------------------------------------------
// CRMCSS - Do not display message if cancelling an order
// ---------------------------------------------------------------------------
// SAR 5136951
If PO cFreeGoodCatWarning [EV01] is equal to "1"
     If VA frm_cFreeGoodExitEnabled_EV01 [EV01] is equal to "1"
     And VA frm_cOKButtonClicked_EV01 [EV01] is not equal to "1"
          VA evt_cContinueFGCacheLoop_EV01 [EV01] = "1"
          While VA evt_cContinueFGCacheLoop_EV01 [EV01] is equal to "1"
               F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                    "2" -> cFile [EV01]
                    "5" -> cAction [EV02]
                    FI Computerid [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                    FC Order Number [DOCO] -> mnOrderNo [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szOrderCo [KCOO]
                    "1" -> cSuppressErrorMsg [EV03]
                    VA evt_szReadCacheError_DTAI [DTAI] <- szErrorMsgId [DTAI]
                    VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
                    "5" -> cNumKeys [EV04]
                    VA evt_szFreeGoddCatName_CATLG [CATLG] <- szFreeGoodCatalogName [CATLG]
                    VA evt_cFGItemSelected_EV01 [EV01] <- cItemSelected [EV01]
               If VA evt_cFGItemSelected_EV01 [EV01] is equal to "N"
                    If VA evt_szFreeGoddCatName_CATLG [CATLG] is not equal to <Blank>
                    And VA evt_szFreeGoddCatName_CATLG [CATLG] is not equal to <NULL>
                    And VA evt_szFreeGoddCatName_CATLG [CATLG] is not equal to "0"
                         VA evt_cContinueFGCacheLoop_EV01 [EV01] = "0"
                         Set Control Error(HC &OK, "42B2")
                         // Close the free good cache cursor
                         F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                              "2" -> cFile [EV01]
                              "6" -> cAction [EV02]
                              VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
                    End If
               End If
               If VA evt_szReadCacheError_DTAI [DTAI] is not equal to <Blank>
               And VA evt_szReadCacheError_DTAI [DTAI] is not equal to <NULL>
               And VA evt_szReadCacheError_DTAI [DTAI] is not equal to "0"
                    VA evt_cContinueFGCacheLoop_EV01 [EV01] = "0"
               End If
          End While
     End If
     VA frm_cOKButtonClicked_EV01 [EV01] = "1"
End If
// End SAR 5136951
// SAR# 4541912 Begin
VA evt_CallDisplayBeforeAccept [EV01] = "0"
If VA frm_CheckOKButtonClicked [EV01] is equal to "0"
And PO cPromptforCustomerSegmentItems [CSIP] is equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
     VA evt_CallDisplayBeforeAccept [EV01] = "1"
     VA frm_CheckOKButtonClicked [EV01] = "1"
     //
     // SAR 7855925 - Pass VA frm_DateRequested
     // SAR 8348415 - Passed FormActionCode
     Call App:P42440 Form:W42440A Version:VA frm_szCustSegItemsVersion_CSIV
          "1" -> cCalledFrom [PROM]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCache [EV01]
          VA evt_CheckCSIReturnValue [EV01] <- cCheckReturnValue [EV01]
          FC Address Number [AN8] -> mnSoldToAddressNumber [AN8]
          VA frm_DateRequested_DRQJ [DRQJ] -> jdDateRequested [DRQJ]
          VA frm_cFormActionCode_ACTN [ACTN] -> cFormActionCode [ACTN]
     If VA evt_CheckCSIReturnValue [EV01] is equal to "1"
          Press Button(FC PROCESS: Load Grid From Cache)
          Set Control Error(HC &OK, "42B1")
          VA frm_INT02_Warnings [INT02] = "0"
     End If
End If
// SAR# 4541912 Begin
If VA evt_CallDisplayBeforeAccept [EV01] is not equal to "1"
     //                             SAR REVISION LOG
     // SAR #                   PROGRAMMER                   DATE
     // 4392961                   VK6272082                 07/31/00
     //
     // SAR 3272108
     If VA frm_mnCreditJobNum_JOBS [JOBS] is not equal to "0"
          // SAR 3406866, Pass in PEID and TCID
          F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
               VA frm_mnCreditJobNum_JOBS [JOBS] <> mnJobNo [JOBS]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               UNDEFINED <> mnFromLineNo [LNID]
               UNDEFINED <> mnThruLineNo [LNID]
               UNDEFINED <> cClearHeaderWF [EV01]
               "2" -> cClearDetailWF [EV02]
               UNDEFINED <> szProgramID [PID]
               UNDEFINED <> mnWKRelatedOrderProcess [MATH02]
               UNDEFINED <> szCMVersion [VERS]
               UNDEFINED <> cGenericChar1_EV01 [EV01]
               UNDEFINED <> cGenericChar2_EV02 [EV02]
               UNDEFINED <> szGenericString1_DL01 [DL01]
               UNDEFINED <> mnSODRelatedJobNumber [MATH01]
               FI mnProcessID [PEID] -> mnProcessID [PEID]
               FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     End If
     //
     // SAR 1997324
     If VA frm_EV17_Hdr_Work_File [EV17] is not equal to "1"
          Set Control Focus(FC Grid)
          // SAR 3305580 - if in CSS mode, call Begin Doc to write the customer PO if it
          // has changed
     Else
          If PO cShoppingCartMode [CART] is not equal to <Blank>
          And PO cShoppingCartMode [CART] is not equal to <NULL>
               If VA frm_szPrevCSSCustPO_VR01 [VR01] is not equal to FC Reference [VR01]
                    If SV Form_ Mode is equal to CO ADD_MODE
                         VA frm_EV17_Hdr_Work_File [EV17] = <NULL>
                         Set Control Focus(FC Grid)
                    End If
               End If
          End If
     End If
     //
     //     If header values have been changed, issue an error message if all grid
     //     rows have not been loaded.
     //
     If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     And VA frm_cGridFilled [EV01] is not equal to "Y"
          Set Edit Control Error(FC Order Number, "052S")
     End If
     //
     // Prepayment Processing
     If PO cActivatePrepayProcess [EV01] is equal to "1"
          // SAR 7248893
          If VA frm_ACTI_Action_Code [ACTI] is equal to "A"
          Or VA frm_ACTI_Action_Code [ACTI] is equal to "C"
               // SAR 7172657 - Check VA frm_cPrepaymentWindowCalledYN
               // is equal to "C" instead of "N"
               If VA frm_cPrepaymentWindowCalledYN [EV01] is equal to "C"
                    // SAR 3055672 - Begin ADD
                    // Only display the error for Prepayment orders.
                    VA frm_szSpecialHandlingCode_SPHD [SPHD] = <Blank>
                    GetUDC(X0005.GetUDC)
                         "RYIN" -> szDataDictionaryItem [DTAI]
                         UNDEFINED <> szSystemCode [SY]
                         UNDEFINED <> szRecordTypeCode [RT]
                         UNDEFINED <> szUserDefinedCode [KY]
                         UNDEFINED <> mnKeyFieldLength [AS]
                         UNDEFINED <> szLanguagePreference [LNGP]
                         UNDEFINED <> szDescription001 [DL01]
                         UNDEFINED <> szDescription002 [DL02]
                         VA frm_szSpecialHandlingCode_SPHD [SPHD] <- szSpecialHandlingCode [SPHD]
                         UNDEFINED <> cUdcOwnershipFlag [UDCO]
                         UNDEFINED <> cHardCodedYn [HRDC]
                         UNDEFINED <> cSuppressErrorMessage [EV01]
                         "1" -> szErrorMessageId [DTAI]
                         VA frm_cPaymentInstrument_RYIN [RYIN] -> cUDCOne [EV01]
                    If VA frm_szSpecialHandlingCode_SPHD [SPHD] is equal to ("11","12","13")
                         Set Control Error(HC &OK, "114Y")
                         // SAR 7367032 - Display Before Accept Does not display
                         GetErrorCount(B9800250.GetErrorCount)
                              VA frm_INT02_Warnings [INT02] <- nNumberOfWarnings [INT01]
                         Stop Processing
                    End If
                    // SAR 3055672 - End ADD
               End If
          End If
     End If
     //
     // SAR 6143011 - OP Display Before Accept
     //
     // Always call Display Before Accept if Process Tab option is turned on
     //
     VA evt_cCallP42232_EV01 [EV01] = "0"
     //
     If PO cDisplayBeforeAccept [CK01] is equal to "1"
          // SAR 8320332 - Set the warning to run the RowExit&ChangedAsynch event
          // before DisplayBeforeAccept screen is called.  - Added IF cond. and ELSE
          If VA frm_HeaderValuesChanged [EV01] is equal to "1"
          And VA frm_CK01_OKButtonPrevClicked [CK01] is not equal to "Y"
               Set Control Error(HC &OK, "031W")
               VA frm_CK01_OKButtonPrevClicked [CK01] = "Y"
          Else
               // SAR 7173772 - Set the warning to run the RowExit&ChangedAsynch event before
               // DisplayBeforeAccept screen is called
               If VA frm_cBaskRepInAddMode_EV01 [EV01] is equal to "1"
                    Set Control Error(HC &OK, "031W")
                    VA frm_cBaskRepInAddMode_EV01 [EV01] = "0"
               End If
               // SAR 7173772 - End
          End If
          // ---------------------------------------------------------------------------
          // CRMCSS
          // Even if display before accept processing option is on, but if OK button has
          // been pressed after cancelling an order, then we should never show display
          // before accept screen.
          // ---------------------------------------------------------------------------
          If VA frm_cCancelOrderAction_EV01 [EV01] is not equal to "1"
               VA evt_cCallP42232_EV01 [EV01] = "1"
          End If
     Else
          //
          // If the user performs a promise using Scenerio Manager, only call Display
          // Before Accept if the processing option is set and the promise was
          // successful.
          //
          If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
          And VA frm_cDisplayBeforeAcceptMode [EV01] is equal to "1"
               VA evt_cCallP42232_EV01 [EV01] = "1"
          Else
               //
               // If the user performs a successful Auto Promise, always call Display Before
               // Accept.
               //
               If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
               And VA frm_PromisingModeforOP [EV01] is equal to "0"
                    VA evt_cCallP42232_EV01 [EV01] = "1"
               End If
          End If
     End If
     If VA evt_cCallP42232_EV01 [EV01] is equal to "1"
          //
          // SAR 4392961 BEGIN - issue a warning to trigger Row Exit/Change and
          // update repriced amounts for DBA
          If VA frm_cRepriceRowsProcessed [EV01] is equal to "Y"
          And VA frm_CK01_OKButtonPrevClicked [CK01] is equal to "N"
               VA frm_CK01_OKButtonPrevClicked [CK01] = "Y"
               Set Control Error(HC &OK, "031W")
               // SAR 5779501
               GetErrorCount(B9800250.GetErrorCount)
                    UNDEFINED <> nNumberOfErrors [INT01]
                    VA frm_INT02_Warnings [INT02] <- nNumberOfWarnings [INT01]
               // SAR 5779501 End
          Else
               // SAR 4392961 END
               //
               // SAR 8109123 - Added the condition to get the error count as well in the
               // newly added event variable evt_INT02_Errors.
               If VA frm_INT02_Warnings [INT02] is equal to "0"
               And VA evt_INT02_Errors [INT02] is equal to "0"
                    GetErrorCount(B9800250.GetErrorCount)
                         VA evt_INT02_Errors [INT02] <- nNumberOfErrors [INT01]
                         VA frm_INT02_Warnings [INT02] <- nNumberOfWarnings [INT01]
               Else
                    VA frm_INT02_Warnings [INT02] = "0"
                    VA evt_INT02_Errors [INT02] = "0"
               End If
               // ********************************************************************
               // SAR 5814943 - Begins
               If VA frm_cDisplayBeforeAcceptMode [EV01] is equal to "1"
               Or VA frm_PromisingModeforOP [EV01] is equal to "0"
                    If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
                         VA frm_JobNumberInUse [JOBS] = VA frm_SavedJobNumberForOP [JOBS]
                    Else
                         //     SAR 7163021 - BEGIN
                         VA frm_JobNumberInUse [JOBS] = FI Jobnumber [JOBS]
                         // SAR 8925438 - Do not terminate Parts List cache from P4210. Work Order BSFN
                         // terminates it after Work Order EndDoc.
                         //     SAR 7163021 - END
                    End If
               Else
                    VA frm_JobNumberInUse [JOBS] = FI Jobnumber [JOBS]
               End If
               //
               // SAR 3272108 Begin
               If SV Form_ Mode is equal to CO COPY_MODE
                    // SAR 8109123 - Added Condition if there is no error then call Order
                    // Acceptance form.
                    If VA frm_INT02_Warnings [INT02] is equal to "0"
                    And VA frm_INT01_Inserted_Row_Counter [INT01] is equal to "0"
                    And VA evt_INT02_Errors [INT02] is equal to "0"
                         // SAR 4966507 - pass CSS PO into P42232
                         // ********************************************************************
                         // SAR 5814943 - Order Promising pass in JobNumberInUse which was set earlier
                         // ********************************************************************
                         // CRM CSS - pass in Form Title & Cust X Ref Type
                         // =============================================
                         // SAR 8955605 - Pass the Use Taxed Prices flag variable and Sales Taxed
                         // Prices Constant into Display Before Accept form
                         // =============================================
                         Call App:P42232 Form:W42232A Version:Undefined
                              FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szOrderNoCompany [KCOO]
                              FC Address Number [AN8] -> mnSoldTo [AN8]
                              FC Ship To [SHAN] -> mnShipTo [SHAN]
                              FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRCD]
                              FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
                              FC Mode (F) [CRRM] -> cCurrencyMode [EV01]
                              FC Currency Code [CRCD] -> szForeignCurrencyCode [CRDC]
                              VA frm_cOrderAcceptedYN [EV05] <- cAcceptOrderYN [EV02]
                              VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCacheOrWF [EV02]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              VA frm_JobNumberInUse [JOBS] -> mnJobnumberA [JOBS]
                              FC OTOT: Order Total Display [TOT1] -> mnAmountOrderTotal [OTOT]
                              VA frm_TOTC_Total_Cost [TOTC] -> mnAmountOrderCost [ECST]
                              FC FAP-Foreign Total Display [TOT2] -> mnAmountForeignOpen [FAP]
                              VA frm_FCST_Foreign_Total_Cost [FCST] -> mnAmountForeignTotalC [FCST]
                              PO cDisableorHideCost [EV03] -> cHideCost [EV03]
                              PO cDisableorHidePrice [EV04] -> cHidePrice [EV04]
                              PO CurrencyCodeFrom [CRCD] -> szAsIfCurrencyCode [CRCD]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
                              PO cOrderPromising [EV01] -> cPOOrderPromising [EV01]
                              VA frm_szFormTitle [CFGS] -> szFormTitle_CFGS [CFGS]
                              PO szCustomerItemNumberXREF [XRT4] -> szPOCustXRefType_XRT4 [XRT4]
                              VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
                         If VA frm_cOrderAcceptedYN [EV05] is equal to "N"
                              Set Edit Control Error(FC Previous Order Number, "051J")
                              VA frm_INT02_Warnings [INT02] = "0"
                         End If
                    Else
                         If VA frm_INT01_Inserted_Row_Counter [INT01] is not equal to "0"
                              Set Edit Control Error(HC &OK, "031W")
                         End If
                    End If
               Else
                    // SAR 7325609 - Reverted SAR 6968549
                    // SAR 8109123 - Added Condition if there is no errro then call Order
                    // Acceptance form.
                    // SAR 8216480
                    If VA frm_INT02_Warnings [INT02] is equal to "0"
                    And VA evt_INT02_Errors [INT02] is equal to "0"
                    Or VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
                    And VA frm_cOrderAcceptedYN [EV05] is not equal to "N"
                         // SAR 4966507 - pass CSS PO into P42232
                         // ********************************************************************
                         // SAR 5814943 - Order Promising pass in JobNumberInUse which was set earlier
                         // ********************************************************************
                         // CRM CSS - pass in Form Title & Cust X Ref Type
                         // =============================================
                         // SAR 8955605 - Pass the Use Taxed Prices flag variable and Sales Taxed
                         // Prices Constant into Display Before Accept form
                         // =============================================
                         Call App:P42232 Form:W42232A Version:Undefined
                              FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szOrderNoCompany [KCOO]
                              FC Address Number [AN8] -> mnSoldTo [AN8]
                              FC Ship To [SHAN] -> mnShipTo [SHAN]
                              FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRCD]
                              FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
                              FC Mode (F) [CRRM] -> cCurrencyMode [EV01]
                              FC Currency Code [CRCD] -> szForeignCurrencyCode [CRDC]
                              VA frm_cOrderAcceptedYN [EV05] <- cAcceptOrderYN [EV02]
                              VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCacheOrWF [EV02]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              VA frm_JobNumberInUse [JOBS] -> mnJobnumberA [JOBS]
                              FC OTOT: Order Total Display [TOT1] -> mnAmountOrderTotal [OTOT]
                              VA frm_TOTC_Total_Cost [TOTC] -> mnAmountOrderCost [ECST]
                              FC FAP-Foreign Total Display [TOT2] -> mnAmountForeignOpen [FAP]
                              VA frm_FCST_Foreign_Total_Cost [FCST] -> mnAmountForeignTotalC [FCST]
                              PO cDisableorHideCost [EV03] -> cHideCost [EV03]
                              PO cDisableorHidePrice [EV04] -> cHidePrice [EV04]
                              PO CurrencyCodeFrom [CRCD] -> szAsIfCurrencyCode [CRCD]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
                              PO cOrderPromising [EV01] -> cPOOrderPromising [EV01]
                              VA frm_szFormTitle [CFGS] -> szFormTitle_CFGS [CFGS]
                              PO szCustomerItemNumberXREF [XRT4] -> szPOCustXRefType_XRT4 [XRT4]
                              VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
                              VA frm_cSalesTaxedPrices_TPSC [TPSC] -> cSalesTaxedPricesConstant [TPSC]
                    End If
                    // SAR 5040714- moved endif here
                    If VA frm_cOrderAcceptedYN [EV05] is equal to "N"
                         // ********************************************************************
                         // SAR# 5814943 - Order Promising: When Revise Button is clicked, delete
                         // Work File with the New Job Number and set the OPStateFlag to '0'
                         // ********************************************************************
                         If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
                              //     SAR 7163021 - BEGIN
                              F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
                                   VA frm_JobNumberInUse [JOBS] -> mnJobNo [JOBS]
                                   VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                   VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
                                   VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
                                   VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
                                   FI mnProcessID [PEID] -> mnProcessID [PEID]
                                   FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              //     SAR 7163021 - END
                              //
                              // SAR 8232914 - F41021WF recs pertaining original job number needs to be
                              // deleted here
                              F41021WFDelete(N4207140.F41021WFDelete)
                                   VA frm_SavedJobNumberForOP [JOBS] -> mnJobnumber [JOBS]
                              // SAR 6925223
                              If VA frm_INT02_Warnings [INT02] is equal to "0"
                                   CleanUpConfigurationData(B3202010.CleanUpConfigurationData)
                                        VA frm_SavedJobNumberForOP [JOBS] -> mnJobNumber [JOBS]
                                        "1" -> cSuppressErrorMessage [SUPPS]
                              End If
                              VA frm_cOrderPromisingStateFlag [EV01] = "0"
                              // SAR 8216480
                              VA frm_cOrderAcceptedYN [EV05] = <Blank>
                         End If
                         // SAR 5814943 - Ends
                         Set Edit Control Error(FC Previous Order Number, "051J")
                         //
                    End If
                    // sar 5040714-Moved Endif from here
               End If
               // SAR 3272108 End
          End If
     End If
     //     Hide previous order information.
     //
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Hide Control(FC Document Key Company [EKCO])
          Hide Control(FC Order Type [DCTO])
          Hide Control(FC Order Number [DOCO])
          Hide Control(FC Order Number [DOCO])
          Hide Control(FC Order Type [DCTO])
          Hide Control(FC Document Key Company [EKCO])
     Else
          Hide Control(FC Order Number [DOCO])
          Hide Control(FC Order Type [DCTO])
          Hide Control(FC Document Key Company [EKCO])
     End If
End If
// SAR 6437123 - Begin
VA frm_cIsOkButtonClicked_EV01 [EV01] = "1"
// SAR 6437123 - End
// End SAR # 4541912, End if condition to check call Display Before Accept
//
// SAR 7260251 - Localization for Russia
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "ED1" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_EV01_NewRecords [EV01] -> cNewRecords [EV01]
     VA frm_EV22_cCacheOn [EV22] -> cTableCache [EV02]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_mnLocJobNumber_JOBS [JOBS] -> mnLocJobNumber [JOBS]

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df5e7-a23a-11d0-a204-0000f6728a56
=============================================
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210) [Include in Transaction]
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "CSD" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_EV01_NewRecords [EV01] -> cNewRecords [EV01]
     VA frm_EV22_cCacheOn [EV22] -> cTableCache [EV02]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_mnLocJobNumber_JOBS [JOBS] -> mnLocJobNumber [JOBS]
//
// SAR 1859298
// SAR 6880926
If SV Form_ Mode is equal to CO COPY_MODE
Or PO cAutoBlanketRelease [EV24] is equal to <Blank>
     VA frm_cSuppressBlanketsRls_EV04 [EV04] = "1"
Else
     VA frm_cSuppressBlanketsRls_EV04 [EV04] = "0"
End If
//
// If Web Mode, clear the CSS Cache
// ---------------------------------------------------------------------------
// CRMCSS - Do not clear cache in update mode.
// ---------------------------------------------------------------------------
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
And SV Form_ Mode is not equal to CO UPDATE_MODE
     CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo) [Include in Transaction]
          VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
          FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
          "D" -> cActionCode [ACTN]
          VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
     //
     // 6545212 CRM CSS - suppress the Override logic after OK
     VA frm_cSuppressOverrideAfterAdd [EV01] = "1"
     //
End If
If PO cStoreAndForwardMode [SO15] is equal to "1"
     VA frm_SO15_cCMProcessEdits [SO15] = "2"
End If
//
// SAR 5216847, 5953388
If VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] is equal to <Blank>
Or VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] is equal to <NULL>
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
SetSuppressVIDAccumSOED01(B4205102.SetSuppressVIDAccumSOED01)
     VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szEndDocSOEMBFFlags [SOEF]
     VA frm_cB4502340AccumFlag_EV01 [EV01] -> cValue [EV01]
     UNDEFINED <> cErrorCode [ERRC]
SetFormModeSOED02(B4205102.SetFormModeSOED02)
     VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szEndDocSOEMBFFlags [SOEF]
     VA frm_cFormActionCode_ACTN [ACTN] -> cValue [EV01]
// SAR 6897939- TP implementation for SOE
SetEDCalledFromSOED16(B4205102.SetEDCalledFromSOED16)
     VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szEndDocSOEMBFFlags [SOEF]
     "3" -> cValue [EV01]
//
// Set SOE Flag for Approval Processing
// SAR 5953388-Use Set function
// //SAR 5960609 - Added OR part of the if condition
//
// SAR 7705935 - Flag should be set when Line is cancelled.
If VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
And PO cUseAuditLog [EV01] is equal to "1"
And VA frm_cAuditLogRev_EV01 [EV01] is equal to "1"
And VA frm_ACTI_Action_Code [ACTI] is equal to "C"
Or VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
And PO cUseAuditLog [EV01] is equal to "1"
And VA frm_cAuditLogRev_EV01 [EV01] is not equal to "1"
And VA frm_ACTI_Action_Code [ACTI] is equal to "A"
Or GC Last Stat [LTTR] is equal to "980"
And VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
And PO cUseAuditLog [EV01] is equal to "1"
And VA frm_ACTI_Action_Code [ACTI] is equal to "C"
     SetActivateAuditLogSOED08(B4205102.SetActivateAuditLogSOED08)
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szEndDocSOEMBFFlags [SOEF]
          "1" -> cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     If VA frm_cApprovalRequired_EV01 [EV01] is equal to "1"
          Call App:P98805 Form:W98805B Version: 
               UNDEFINED <> cDisplayMessage [EV01]
     End If
End If
// End SAR 5216847
// *******************************************************************
// SAR 5814943 - Begins
// If the OrderPromisingStateFlage is 1, then clear SOE Work File which has
// the old Job Number and assign the new Job Number to FI Jobnumber
If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
     F4211ClearWorkFile(B4200310.F4211ClearWorkFile) [Include in Transaction]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
          VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     // SAR 6904772 Begin
     CacheProcessPrepaymentRecords(B0000954.CacheProcessPrepaymentRecords)
          FI Jobnumber [JOBS] -> mnMBFJobnumber [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szMBFComputerID [CTID]
          "8" -> cCacheActionCode [ACTN]
          "0" -> mnNumberOfKeys [NKEYS]
     //
     // SAR 6925223 -Begin
     CleanUpConfigurationData(B3202010.CleanUpConfigurationData)
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
          "1" -> cSuppressErrorMessage [SUPPS]
     // SAR 8925438 - Do not terminate Parts List cache from P4210. Work Order BSFN
     // terminates it after Work Order EndDoc.
     // SAR 6925223 Ends
     //
     // SAR 8232914 - F41021WF recs pertaining original job number needs to be
     // deleted here
     F41021WFDelete(N4207140.F41021WFDelete)
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     FI Jobnumber [JOBS] = VA frm_SavedJobNumberForOP [JOBS]
     // SAR 6925223
     // SAR 6904772 End
End If
// SAR 5814943 - Ends
// 6880205- Invalid delete of F41021WF
InitializeOrderDetailVariables(B4302920.InitializeOrderDetailVariables)
     VA frm_SOEComputerID_CTID [CTID] <- szComputerID [CTID]
If VA frm_cCommitInvInED_EV01 [EV01] is not equal to "1"
     CacheProcessUniqueF41021WF(B4902110.CacheProcessUniqueF41021WF)
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
          VA frm_UniqueKeyIDF41021WF_UKID [UKID] <- mnUniqueKeyIDInternal [UKID]
          "1" -> szCacheActionCode [CACTN]
          "2" -> mnNumberKeys [NKEYS]
          "1" -> cSuppressErrorMessage [SUPPS]
Else
     GetNextUniqueKeyID(X00022.GetNextUniqueKeyID)
          "F41021WF" -> szObjectName [OBNM]
          VA frm_UniqueKeyIDF41021WF_UKID [UKID] <- mnUniqueKeyID [UKID]
     CacheProcessUniqueF41021WF(B4902110.CacheProcessUniqueF41021WF)
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
          VA frm_UniqueKeyIDF41021WF_UKID [UKID] -> mnUniqueKeyIDInternal [UKID]
          "2" -> szCacheActionCode [CACTN]
          "3" -> mnNumberKeys [NKEYS]
          "1" -> cSuppressErrorMessage [SUPPS]
End If
// 8425089 - Move these assignments calls up for TP.
VA frm_mnCMJobNo [JOBS] = FI Jobnumber [JOBS]
VA frm_szComputerID_CTID [CTID] = FI Computerid [CTID]
VA frm_mnTransactionID [TCID] = FI mnTransactionID [TCID]
VA frm_mnProcessID [PEID] = FI mnProcessID [PEID]
// *******************************************************************
// SAR 3406866, Pass in PEID and TCID
// SAR 5216847 - pass SOEF
// SAR 6802426 - In CSS End Doc will be called INLINE
If PO cShoppingCartMode [CART] is equal to <Blank>
     F4211FSEndDoc(B4200310.F4211FSEndDoc) [Asynchronous, Include in Transaction]
          FI Jobnumber [JOBS] -> mnCMJobNo [JOBS]
          FC Order Number [DOCO] -> mnSalesOrderNo [DOC]
          VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <> cCMErrorCondition [ERRC]
          FC Order Type [DCTO] -> szOrderType [DCT]
          FC Order Company [KCOO] -> szKeyCompany [KCO]
          FC OTOT: Order Total Display [TOT1] -> mnOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] -> mnForeignOrderTotal [FAP]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          "EP4210" -> szProgramID [JPID]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          VA frm_TMCR_Time_Of_Day [TMCR] -> mnTimeOfDay [TDAY]
          VA frm_TOTC_Total_Cost [TOTC] -> mnTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] -> mnForeignTotalCost [FCST]
          VA frm_cSuppressBlanketsRls_EV04 [EV04] -> cSuppressRlvBlnktFlag [EV02]
          VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
          VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV04]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV05]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FI mnRelatedOrderSetIdentifier [ROSID] -> mnRelatedOrderSetIdentifier [ROSID]
          FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
          FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
Else
     F4211FSEndDoc(B4200310.F4211FSEndDoc) [Include in Transaction]
          FI Jobnumber [JOBS] -> mnCMJobNo [JOBS]
          FC Order Number [DOCO] -> mnSalesOrderNo [DOC]
          VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <> cCMErrorCondition [ERRC]
          FC Order Type [DCTO] -> szOrderType [DCT]
          FC Order Company [KCOO] -> szKeyCompany [KCO]
          FC OTOT: Order Total Display [TOT1] -> mnOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] -> mnForeignOrderTotal [FAP]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          "EP4210" -> szProgramID [JPID]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          VA frm_TMCR_Time_Of_Day [TMCR] -> mnTimeOfDay [TDAY]
          VA frm_TOTC_Total_Cost [TOTC] -> mnTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] -> mnForeignTotalCost [FCST]
          VA frm_cSuppressBlanketsRls_EV04 [EV04] -> cSuppressRlvBlnktFlag [EV02]
          VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
          VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV04]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV05]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FI mnRelatedOrderSetIdentifier [ROSID] -> mnRelatedOrderSetIdentifier [ROSID]
          FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
          FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
End If
// ********************************************************************
// Sar # 5775631
// commented for SAR 7817646
! Could not resolve variable: 1710 = "1"
// *****************************************************************
// SAR# 5406835 Begin
// Update commission tables, F4215 & F42160.
ProcessSalesCommissions(B4205090.ProcessSalesCommissions) [Include in Transaction]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     "2" -> cCalledFrom [EV01]
     VA frm_cFormActionCode_ACTN [ACTN] -> cActionCode [ACTI]
     "1" -> cSuppressErrorMessage [SUPPS]
// Clear Commission Caches
ProcessSalesCommissions(B4205090.ProcessSalesCommissions)
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     "3" -> cCalledFrom [EV01]
     "1" -> cSuppressErrorMessage [SUPPS]
// End SAR# 5406835
// SAR 3406866, Clear out PEID/TCID after OK clicked
FI mnProcessID [PEID] = "0"
FI mnTransactionID [TCID] = "0"
//
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     // SAR 6019693 - Don't pass CTID
     CacheProcessHeaderToDetailChange(B4002390.CacheProcessHeaderToDetailChange)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
          UNDEFINED <> mnCacheLineNumber [MATH01]
          UNDEFINED <> szHeaderTableColumn [DTAI]
          UNDEFINED <> szString [DL01]
          UNDEFINED <> mnAddressNumber [AN8]
          UNDEFINED <> jdDate [TRDJ]
          UNDEFINED <> cCharacter [EV01]
          UNDEFINED <> mnAmount [MATH01]
          UNDEFINED <> szComputerID [CTID]
          "4" -> cCacheActionCode [EV01]
          UNDEFINED <> mnCacheNameJobNumber [JOBS]
          UNDEFINED <> cMoreRecordsExist [EV02]
          UNDEFINED <> idhCursor [GENLNG]
End If
//
VA frm_XLIN_CurrentGridLineNo [XLIN] = "0"
VA frm_LNID_Last_Line_Number [LNID] = "0"
VA frm_EV19_End_Doc_Called [EV19] = "1"
If PO cTransferOrderEntry [EV25] is equal to "1"
     FC Document Key Company [EKCO] = VA frm_OKC_From_Company [OKC]
     FC Order Type [DCTO] = FC Order Type [DCTO]
     FC Order Number [DOCO] = FC Order Number [DOC1]
     FC Document Key Company [EKCO] = VA frm_ALPH_PO_Number [ALPH]
     FC Order Type [DCTO] = FC Order Type [DCIN]
     FC Order Number [DOCO] = FC Order Number [DOC2]
Else
     FC Order Number [DOCO] = FC Order Number [DOCO]
     FC Order Type [DCTO] = FC Order Type [DCTO]
     FC Document Key Company [EKCO] = FC Order Company [KCOO]
     Enable Control(FC Exchange Rate [CRR])
End If
FI DocumentOrderInvoiceE [DOCO] = FC Order Number [DOCO]
FI OrderType [DCTO] = FC Order Type [DCTO]
FI CompanyKeyOrderNo [KCOO] = FC Document Key Company [EKCO]
If PO cTransferOrderEntry [EV25] is equal to "1"
     Show Control(FC Document Key Company [EKCO])
     Show Control(FC Order Type [DCTO])
     Show Control(FC Order Number [DOCO])
     Show Control(FC Order Number [DOCO])
     Show Control(FC Order Type [DCTO])
     Show Control(FC Document Key Company [EKCO])
Else
     Show Control(FC Order Number [DOCO])
     Show Control(FC Order Type [DCTO])
     Show Control(FC Document Key Company [EKCO])
End If
//
//
//     Initlalize program work fields for the next transaction.
//
FI Amountordergross [OTOT] = "0"
FI Amountforeignopen [FAP] = "0"
FI Jobnumber [JOBS] = "0"
VA frm_LNIX_Prev_WF_Line_Num [LNIX] = "0"
VA frm_EV07_Template_Called [EV07] = "0"
//
// SAR # 1915843
// Initialize Default Line variable fields for next transaction.
//
VA frm_CNDJ_Default_Date [CNDJ] = <NULL>
VA frm_RSDJ_Default_Date [RSDJ] = <NULL>
VA frm_PDDJ_Default_Date [PDDJ] = <NULL>
VA frm_DRQJ_Default_Date [DRQJ] = <NULL>
VA frm_MCU_Default_Branch [MCU] = <NULL>
VA frm_EV13_Protect_Customer_PO [EV13] = <Blank>
VA frm_VR01_Default_Cust_PO [VR01] = <Blank>
// SAR 7093140
VA frm_cCallFrmLoadGridCache [EV01] = "0"
// SAR 5814943
VA frm_cOrderPromisingStateFlag [EV01] = "0"
//
//     If called from header revisions, exit this form back to header.
//
// SAR 3752953 - move cancel to clear screen after add so that TP will not cause
// the transaction to be rolled back
If FI UpdatedToHdrWF [EV20] is equal to "1"
Else
     //
     // Else initialize variables for the next transaction
     //
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Enable Control(FC Parent Business Unit [MCU1])
          Enable Control(FC Business Unit 2 [MCU2])
          Enable Control(FC Landed Cost Rule [PRP5])
          Enable Control(FC Order Date [TRDJ])
          Enable Control(FC Order Number [DOC2])
          Enable Control(FC Order Type [DCIN])
          Enable Control(FC To Currency Code [CRDC])
          Enable Control(FC Exchange Rate (Divisor) [CRRD])
          Enable Control(FC Order Number [DOC1])
          Enable Control(FC Order Type [DCTO])
          Enable Control(FC Currency Code [CRCD])
          Enable Control(FC Exchange Rate [CRR])
          // SAR 7624545
          Enable Control(FC Business Unit [MCU])
          // SAR 8955602 - Initialize the UTP check boxes for the next order after
          // commit
          // Initialize the UTP check boxes for the next order after commit
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               Enable Control(FC Use Taxed Prices [UTP])
          End If
          //
          Set Control Focus(FC Parent Business Unit [MCU1])
          // SAR 8714528
          VA frm_ALPH_PO_Number [ALPH] = <NULL>
     Else
          FC To Currency Code [CRDC] = <Blank>
          VA frm_TOTC_Total_Cost [TOTC] = "0"
          VA frm_FCST_Foreign_Total_Cost [FCST] = "0"
          FC OTOT: Order Total Display [TOT1] = "0"
          VA frm_DATE03_Commitment_Dt [DATE03] = <Blank>
          // ************************************************************************
          // SAR 2953260
          // Only reset this flag when not on a COPY mode.
          // ************************************************************************
          If SV Form_ Mode is not equal to CO COPY_MODE
               VA frm_EV17_Hdr_Work_File [EV17] = "0"
          End If
          FC Order Number [DOCO] = "0"
          //
          Enable Control(FC Exchange Rate [CRR])
          Enable Control(FC Currency Code [CRCD])
          Enable Control(FC Order Number [DOCO])
          Enable Control(FC Order Type [DCTO])
          Enable Control(FC Order Date [TRDJ])
          Enable Control(FC Long Address Number [ALKY])
          Enable Control(FC Long Address Number [ALKY])
          Enable Control(FC Ship To [SHAN])
          Enable Control(FC Address Number [AN8])
          Enable Control(FC Business Unit [MCU])
          // SAR 2441441
          Enable Control(FC Reference [VR01])
          //
          // Sar 5745941 - Enable the fields on the Customer Set Tab for Order Entry.
          Enable Control(FC Address Number to use for Tax [AUFT])
          Enable Control(FC Address Number to use for Transportation [AUFI])
          Enable Control(FC Long Address Number [ALKY])
          Enable Control(FC Long Address Number [ALKY])
          Enable Control(FC Long Address Number [ALKY])
          Enable Control(FC Long Address Number [ALKY])
          // SAR 8955602 - Initialize the UTP check boxes for the next order after
          // commit
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               Enable Control(FC Use Taxed Prices [UTP])
          End If
          //
          // Sar 5745941 - End
          //
          If VA frm_EMCU_DfltHdrBranchPlant [EMCU] is greater than "            "
               Set Control Focus(FC Long Address Number [ALKY])
          Else
               FC Order Company [KCOO] = <Blank>
               Set Control Focus(FC Business Unit [MCU])
          End If
     End If
     //
     // SAR 8953108 - Apparel Enhancement
     // Enable the Apparel Collection fields for next transaction
     //
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
          Enable Control(FC Collection [C9COLL])
          Enable Control(FC SeasonCode [C9SEAC])
          Enable Control(FC Season Year [C9SEAY])
          Enable Control(FC Price Reference Date [C9PRDJ])
     End If
     //
End If
//
// ************************************************************************
// SAR# 5113442
VA frm_mnLargestMCLNUsed [MCLN] = "0"
VA grd_MatrixTemplate_TMPL [TMPL] = <Blank>
VA grd_MatrixSegment1_SEG1 [SEG1] = <Blank>
// ************************************************************************
// SAR 6897939- TP implementation for SOE( Backout SAR 6301120)
! // SAR 6301120 - Code moved back to this event from 'Clear Screen After Add'
! If PO cShoppingCartMode [CART] is greater than <Blank>
     ! Press Button(HC Cancel/Close)
! End If
// sar - 6988814
VA frm_cOrderReleasedFromBlanket [EV01] = "N"


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Cancel/Close
Event: Button Clicked
Event GUID: 6cb85261-49ca-11d3-a309-00105a1c0327
=============================================
// 
// SAR 3305580 - make sure that Begin Doc is run and updates the Customer PO for
// CSS mode
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     If VA frm_szPrevCSSCustPO_VR01 [VR01] is not equal to FC Reference [VR01]
          If SV Form_ Mode is equal to CO ADD_MODE
               VA frm_EV17_Hdr_Work_File [EV17] = <NULL>
               Set Control Focus(FC Grid)
          End If
     End If
End If
// SAR 4954143 & Sar # 5775631 & SAR 7817646
// SAR 8317539 – Delete the records from F00165 for newly added gridlines only
If VA frm_cFirstAddRow_EV01 [EV01] is equal to "1"
     VA frm_mnTempMathNumeric01 [MATH01] = [VA frm_mnTempMathNumeric01 [MATH01]]+1
     Get Max Grid Rows(FC Grid, VA frm_mnMaxMathNumeric01)
     While VA frm_mnTempMathNumeric01 [MATH01] is less than VA frm_mnMaxMathNumeric01 [MATH01]
          Get Grid Row(FC Grid, VA frm_mnTempMathNumeric01)
          Media Object Structures(GT4211A,  <Default Media Object>,  <Delete>, VA frm_cStatusEverestEventPoint01, FC Order Number, FC Order Type, FC Order Company, GC LineNumber)
          VA frm_mnTempMathNumeric01 [MATH01] = [VA frm_mnTempMathNumeric01 [MATH01]]+1
     End While
End If
// SAR 7817646
// Sar # 5775631
// SAR 4945143
// 
// SAR 8648856
// SAR 8455659 - Delete the Header Attachments F00165
If FI Jobnumber [JOBS] is not equal to "0"
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
          Media Object Structures(GT4201A, <Default Media Object>,  <Exist>, VA frm_cStatusEverestEventPoint01, FC Order Number, FC Order Type, FC Order Company)
          If VA frm_cStatusEverestEventPoint01 [EV01] is equal to "1"
               Media Object Structures(GT4201A, <Default Media Object>,  <Delete>, VA frm_cStatusEverestEventPoint01, FC Order Number, FC Order Type, FC Order Company)
          End If
          // 8516950 - Delete Order Address records from F4006
          DeleteOrderAddress(B4006.DeleteOrderAddress)
               FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
               FC Order Type [DCTO] -> szDocumentType [DCTO]
               FC Order Company [KCOO] -> szDocumentCompany [KCOO]
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Cancel/Close
Event: Post Button Clicked
Event GUID: 90933788-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 6897939- TP implementation for SOE ,Program ID of TP4210 is passed
If FI Jobnumber [JOBS] is not equal to "0"
     If PO cShoppingCartMode [CART] is equal to <Blank>
     Or PO cShoppingCartMode [CART] is equal to <NULL>
          // SAR 3406866, Pass in PEID and TCID
          F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               "0" -> mnFromLineNo [LNID]
               "0" -> mnThruLineNo [LNID]
               VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
               VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
               "TP4210" -> szProgramID [PID]
               VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          // SAR 2850720 - delete cache if in CSS change or copy mode 
     Else
          If SV Form_ Mode is equal to CO COPY_MODE
          Or SV Form_ Mode is equal to CO UPDATE_MODE
               // SAR 3406866, Pass in PEID and TCID
               F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
                    FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    "0" -> mnFromLineNo [LNID]
                    "0" -> mnThruLineNo [LNID]
                    VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
                    VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
                    "TP4210" -> szProgramID [PID]
                    VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          End If
     End If
End If
If VA frm_mnCreditJobNum_JOBS [JOBS] is not equal to "0"
     // SAR 3406866, Pass in PEID and TCID
     F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
          VA frm_mnCreditJobNum_JOBS [JOBS] <> mnJobNo [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          "2" -> cClearDetailWF [EV02]
          "TP4210" -> szProgramID [PID]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
End If
// 
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     // SAR 8800281 - Don't pass CTID
     CacheProcessHeaderToDetailChange(B4002390.CacheProcessHeaderToDetailChange)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
          "4" -> cCacheActionCode [EV01]
End If
If PO cActivatePrepayProcess [EV01] is equal to "1"
     CacheProcessPrepaymentRecords(B0000954.CacheProcessPrepaymentRecords)
          FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNumber [KCOO]
          "000" -> szOrderSuffix [SFXO]
          "01" -> szPrepaymentOriginationFlag [POF]
          VA frm_mnCreditJobNum_JOBS [JOBS] -> mnMBFJobnumber [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szMBFComputerID [CTID]
          "5" -> cCacheActionCode [ACTN]
          "5" -> mnNumberOfKeys [NKEYS]
          "0" -> cSuppressErrorMessage [SUPPS]
          "0" -> cSequentialFetch [EV01]
End If
// 
// SAR 6974789 
// Order went through APS and user clicks cancel, clear the work file with OP
// Jobnumber as well.
If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
     F4211ClearWorkFile(B4200310.F4211ClearWorkFile) [Include in Transaction]
          VA frm_SavedJobNumberForOP [JOBS] -> mnJobNo [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
          VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     // 
     // SAR 8232914 - F41021WF recs pertaining original job number needs to be
     // deleted here
     F41021WFDelete(N4207140.F41021WFDelete)
          VA frm_SavedJobNumberForOP [JOBS] -> mnJobnumber [JOBS]
     CacheProcessPrepaymentRecords(B0000954.CacheProcessPrepaymentRecords)
          VA frm_SavedJobNumberForOP [JOBS] -> mnMBFJobnumber [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szMBFComputerID [CTID]
          "8" -> cCacheActionCode [ACTN]
          "0" -> mnNumberOfKeys [NKEYS]
     CleanUpConfigurationData(B3202010.CleanUpConfigurationData)
          VA frm_SavedJobNumberForOP [JOBS] -> mnJobNumber [JOBS]
          "1" -> cSuppressErrorMessage [SUPPS]
Else
     CleanUpConfigurationData(B3202010.CleanUpConfigurationData)
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
          "1" -> cSuppressErrorMessage [SUPPS]
End If
// 
// 
// SAR 7551008
If FI mnProcessID [PEID] is greater than "0"
And FI mnTransactionID [TCID] is greater than "0"
     DeletePendingReleaseBlanketWF(B4205310.DeletePendingReleaseBlanketWF)
          "0" -> mnOrderNumber [DOCO]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
End If
// 
// SAR 7260251 - Localization for Russia
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "CAN" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_EV01_NewRecords [EV01] -> cNewRecords [EV01]
     VA frm_EV22_cCacheOn [EV22] -> cTableCache [EV02]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_mnLocJobNumber_JOBS [JOBS] -> mnLocJobNumber [JOBS]
// 
// SAR 8594974 Begin - This call is to clear all user / file / application for
// the application
If VA frm_szReserveAppID_PID [PID] is equal to <Blank>
     F00095RemoveReservation(N0000602.F00095RemoveReservation)
          SL UserID -> szUserId [USER]
          "F4211" -> szNameObject [OBNM]
          VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
          VA frm_szUniqueIDRecReserve_PID [PID] -> szApplication [PID]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Service Level Rules
Event: Button Clicked
Event GUID: 4e3e89f4-e4e2-4f5e-bc38-99c5c3eea75c
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idB4200310CacheHand_GENLNG [GENLNG]
evt_szComputerID_CTID [CTID]
----------------------------------------
VA evt_idB4200310CacheHand_GENLNG [GENLNG] = "0"
VA evt_szComputerID_CTID [CTID] = <NULL>
Clear Control Error(HC Service &Level Rules)
Clear Control Error(HC Service Level &Rules)
//
If VA frm_szComputerID_CTID [CTID] is greater than <Blank>
     VA evt_szComputerID_CTID [CTID] = VA frm_szComputerID_CTID [CTID]
Else
     VA evt_szComputerID_CTID [CTID] = FI Computerid [CTID]
End If
//
//    Get Sales Order Header Cache
RetrieveF42UI01Pointer(B4208010.RetrieveF42UI01Pointer)
     VA frm_EV22_cCacheOn [EV22] -> cCacheOrWorkfile [EV01]
     "1" -> nIndexID [INT01]
     VA evt_idB4200310CacheHand_GENLNG [GENLNG] <- idF42UI01Pointer [GENLNG]
     VA evt_szComputerID_CTID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     "1" -> cSuppressErrorMessages [SUPP]
//
//     If Header Cache does not exist then call Begin Doc - B4200310
If VA evt_idB4200310CacheHand_GENLNG [GENLNG] is less than or equal to "0"
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA evt_szComputerID_CTID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
          VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
          VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
Else
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA evt_idB4200310CacheHand_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If
//
If FI Jobnumber [JOBS] is greater than "0"
     Call App:P4277711 Form:W4277711A Version:Undefined
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKey [KCOO]
          FI Computerid [CTID] -> szComputerID [CTID]
          "1" -> nOrderOrLine [INT01]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC  
Event: Button Clicked
Event GUID: fe50a76f-f865-43f3-99d8-aa57caf7837d
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szP49T10ErrorID_DTAI [DTAI]
evt_idB4200310CacheHndl_GENLNG [GENLNG]
evt_szB49T1020ErrorID_DTAI [DTAI]
evt_szComputerID_CTID [CTID]
evt_cModeProcessing_MODE [MODE]
----------------------------------------
//
// ---------------------------------------------------------------------------
//    SAR 8538278 - 9.0 OTM Rate Shopping Enhancement
// ---------------------------------------------------------------------------
Clear Control Error(HC Rate Sho&pping)
Clear Control Error(HC Rate Shop&ping)
//
If VA frm_szComputerID_CTID [CTID] is greater than <Blank>
     VA evt_szComputerID_CTID [CTID] = VA frm_szComputerID_CTID [CTID]
Else
     VA evt_szComputerID_CTID [CTID] = FI Computerid [CTID]
End If
//
//    Get Sales Order Header Cache
RetrieveF42UI01Pointer(B4208010.RetrieveF42UI01Pointer)
     VA frm_EV22_cCacheOn [EV22] -> cCacheOrWorkfile [EV01]
     "1" -> nIndexID [INT01]
     VA evt_idB4200310CacheHndl_GENLNG [GENLNG] <- idF42UI01Pointer [GENLNG]
     VA evt_szComputerID_CTID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     "1" -> cSuppressErrorMessages [SUPP]
//
//     If Header Cache does not exist then call Begin Doc - B4200310
If VA evt_idB4200310CacheHndl_GENLNG [GENLNG] is less than or equal to "0"
     // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
     // SAR 8955612 - Passed variable BeginDocSOEMBFFlag to BeginDoc
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA evt_szComputerID_CTID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
          VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
          VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
Else
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA evt_idB4200310CacheHndl_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If
//
If FI Jobnumber [JOBS] is greater than "0"
     UploadSOLinesForRateShopping(B49T1050.UploadSOLinesForRateShopping)
          "0" -> cSuppressErrorMessage_SUPPS [SUPPS]
          VA evt_szP49T10ErrorID_DTAI [DTAI] <- szErrorMessageID_DTAI [DTAI]
          VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF_EV01 [EV01]
          VA evt_szComputerID_CTID [CTID] -> szComputerID_CTID [CTID]
          FI Jobnumber [JOBS] -> mnCacheJobNumber_JOBS [JOBS]
          <Blank> -> szSessionKey_SNKY [SNKY]
          "0" -> mnLineNumberXREF_LNIX [LNIX]
          FC Order Number [DOCO] -> mnOrderNumber_DOCO [DOCO]
          FC Order Type [DCTO] -> szOrderType_DCTO [DCTO]
          FC Order Company [KCOO] -> szOrderCompany_KCOO [KCOO]
          "0" -> mnLineNumber_LNID [LNID]
          "000" -> szOrderSuffix_SFXO [SFXO]
     //
     RSQueryCacheFetch(B49T1020.RSQueryCacheFetch)
          "1" -> nIndexNumber [INT01]
          "1" -> nNumberOfKeys [INT02]
          "0" -> cReturnCursor [EV01]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA evt_szB49T1020ErrorID_DTAI [DTAI] <- szErrorMessageID [DTAI]
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
     If VA evt_szB49T1020ErrorID_DTAI [DTAI] is less than or equal to <Blank>
          Call App:P49T15 Form:W49T15B Version:Undefined
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               SL UserID -> szUserID [USER]
     End If
     //
     //    Open Rate Inquiry and Result Selection interface
     Call App:P49T10 Form:W49T10A Version:Undefined
          FI Jobnumber [JOBS] -> mnCacheJobNumber [JOBS]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          "0" -> mnLineNumber [LNID]
          "000" -> szOrderSuffix [SFXO]
          FC Address Number [AN8] -> mnCustomerNumber [AN8]
          FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          FC Exchange Rate [CRR] -> mnCurrencyConverRateOv [CRR]
          VA evt_cModeProcessing_MODE [MODE] <- cModeProcessing [MODE]
     //
     // SAR 8921951 - Do not set this error.  It is not possible to correct it, and
     // therefore this design weakness has been communicated via documentation.
     ! If VA evt_cModeProcessing_MODE [MODE] is equal to "1"
          ! Set Control Error(HC Rate Sho&pping, "49T221")
     ! End If
     //
End If
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Address Book Information
Event: Button Clicked
Event GUID: bfc00b31-53bf-11d2-a72b-0000f6a025f4
=============================================
Call App:P01012 Form:W01012B Version:ZJDE0001
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szAddressType1 [AT1]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Order Address Window
Event: Button Clicked
Event GUID: b1ae0800-e3c6-11d2-a28a-00105a1c0327
=============================================
// SAR 4294034 - pass transacton date to P4006
If FC Order Date [TRDJ] is equal to Null Date
     VA frm_jdOrderDate_TRDJ [TRDJ] = date_today()
Else
     VA frm_jdOrderDate_TRDJ [TRDJ] = FC Order Date [TRDJ]
End If
// 
// SAR 8354276 - Cache P4210 & P03013 Version for P4006
// to retrieve Address Book (P01012) Processing Options
// 
// Intialize the Cache
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "1" -> cActionCode [ACTN]
// 
// Add P4210 & P03013 Versions to Cache 
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "2" -> cActionCode [ACTN]
     PO szP03013Vers [VL17] -> szP03013Version [VERS]
     "EP4210" -> szCallingProgramId [PID]
// 
Call App:P4006 Form:W4006B Version: 
     FC Address Number [AN8] -> AddressNumber [AN8]
     FC Ship To [SHAN] -> ShipToNumber [SHAN]
     FC Order Number [DOCO] -> OrderNumber [DOCO]
     FC Order Type [DCTO] -> OrderType [DCTO]
     FC Order Company [KCOO] -> OrderCompany [KCOO]
     "S" -> CalledFromSales_S_OrPurch_P [EV01]
     UNDEFINED <> InquiryMode [EV02]
     UNDEFINED <> BatchOrderAddress [EV03]
     UNDEFINED <> EDIOrderAddress [EV04]
     UNDEFINED <> FileName [FILE]
     UNDEFINED <> EdiDocumentNumber [EDOC]
     UNDEFINED <> EdiDocumentType [EDCT]
     UNDEFINED <> CompanyKeyEdiOrder [EKCO]
     UNDEFINED <> EdiLineNumber [EDLN]
     PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
     VA frm_jdOrderDate_TRDJ [TRDJ] -> jdDateTransactionJulian [TRDJ]
     FC Deliver To [DVAN] -> mnDeliverToNumber [DVAN]
     FC Forwarded To [FTAN] -> mnForwardedToNumber [FTAN]
     FC Address Number - Invoiced To [ITAN] -> mnInvoiceToNumber [ITAN]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Auto Promise
Event: Button Clicked
Event GUID: 652c01ea-18e2-4a7e-a514-87cc77b72843
=============================================
// SAR #7789665-Begin
If VA frm_cRepriceRowsProcessed [EV01] is equal to "Y"
     Set Control Error(FC Grid, "OPRE1")
     Call App:P4210OP Form:W4210OPB Version:Undefined
     Press Button(HC &OK/&Select)
     Clear Control Error(FC Grid)
End If
// SAR #7789665-End
// SAR 5814943 - Begins
// Initialize the state flag to zero in case of multiple promise attempts ,
// This Variable has 4 states:
// 0 -  Initialized in Dialog is Initialized for SO Detail form. User never
// took the form exit if state is 0
// 1 - Success
// 2 - User Pressed the Cancel Button
// 3 - Send Message returns error
// 4 - Receive Message returns error
//
// Two Promising Modes
// 0 - Auto Promise
// 1 - Scenario Manager
//
// ***************************************************************
// Before we go further, check the Processing Option to see if user has turned
// on any of these Processing Options, if so, give out a warning message
If PO cAvailabilityCheck [EV12] is equal to ("1","2")
Or PO cCommitPreference [EV23] is equal to ("1","2")
Or PO szPreferenceSchedule [PRSN] is equal to "1"
     Set Control Error(HC Auto Promise, "42B11")
End If
VA frm_cOrderPromisingStateFlag [EV01] = "0"
VA frm_PromisingModeforOP [EV01] = "0"
// ***************************************************************
// Save the original Job Number into the SavedJobNumberForOP and pass it to
// the blocking form.   If the SavedJobNumberForOP changes, we will still have
// the original Job Number in the FI Jobnumber
// ***************************************************************
If VA grd_RowExitChangeAsynchTrigger [EV01] is not equal to "1"
     // SAR 7638664- Always pass the job number to order promising
     If FI Jobnumber [JOBS] is equal to <NULL>
     Or FI Jobnumber [JOBS] is equal to "0"
     Or FI Jobnumber [JOBS] is less than or equal to <Blank>
          // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
          F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
               FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
               VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
               VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
               VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
               VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
               VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
               "EP4210" -> szCMProgramID [PID]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               FC Order Company [KCOO] <> szOrderCo [KCOO]
               FC Order Number [DOCO] <> mnOrderNo [DOCO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBusinessUnit [MCU]
               VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
               VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
               VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNo [SHAN]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               FC Reference [VR01] <> szReference [VR01]
               VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
               VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
               FC Mode (F) [CRRM] -> cMode [CRRM]
               FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
               FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
               VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
               VA frm_USER_User_ID [USER] <> szUserID [USER]
               FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
               VA frm_szCreditMessage_CM [CM] <- szWKCreditMesg [CM]
               VA frm_szTempCreditMessage_TSTA [TSTA] <- szWKTempCreditMesg [TSTA]
               VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
               <Blank> -> cWKSourceOfData [EV06]
               <Blank> -> cWKProcMode [EV07]
               VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
               VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
               VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
               "1" -> cRetrieveOrderNo [EV02]
               VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
               FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
               FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
               VA frm_cOPLL_DetailFirst [OPLL] <- cOPPartialLineShipmentAllowed [OPLL]
               VA frm_cOPBA_DetailFirst [OPBA] <- cOPBackorderAllowed [OPBA]
               VA frm_cOPMS_DetailFirst [OPMS] <- cOPMultiSourcingAllowed [OPMS]
               VA frm_cOPSS_DetailFirst [OPSS] <- cOPSubstituteAllowed [OPSS]
               FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
               FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
               FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
               FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
               FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
               FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
               FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
               FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
               FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
               FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
               VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
     End If
End If
VA frm_SavedJobNumberForOP [JOBS] = FI Jobnumber [JOBS]
//
//
// SAR 8585461 - For 9.0 OP Integrations project, the call to P4210OP is
// replaced by a BSFN B4205000 (Call OP Sales Query Business Service)
//
! Call App:P4210OP Form:W4210OPA Version:Undefined
!      VA frm_PromisingModeforOP [EV01] -> cPromisingMode [EV01]
!      VA frm_SavedJobNumberForOP [JOBS] <> mnJobNumber [JOBS]
!      VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
!      FC Order Number [DOCO] -> mnOrderNumber [DOCO]
!      FC Order Type [DCTO] -> szOrderType [DCTO]
!      FC Order Company [KCOO] -> szOrderCompany [KCOO]
!      VA frm_szErrorMessageForOP [DTAI] <- szErrorMessageID [DTAI]
!      VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF [EV01]
!      VA frm_cOrderPromisingStateFlag [EV01] <> cOrderPromisingStateFlag [EV01]
!      SL VersionName -> szSalesOrderEntryVersion [VERS]
CallOPSalesQueryBusinessService(B4205000.CallOPSalesQueryBusinessService)
     VA frm_SavedJobNumberForOP [JOBS] <> mnJobNumber [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF [EV01]
     SL VersionName -> szSOEVersion [VERS]
     "1" -> cSuppressError [EV01]
     VA frm_szErrorMessageForOP [DTAI] <- szErrorMessageID [DTAI]
     VA frm_cOrderPromisingStateFlag [EV01] <> cOrderPromisingStateFlag [EV01]
//
//
If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
     Press Button(HC &OK/&Select)
Else
     Set Control Error(HC Auto Promise, VA frm_szErrorMessageForOP)
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Sales Order Header Revision
Event: Button Clicked
Event GUID: 7324de90-36d5-11d2-9a9a-0000f64da757
=============================================
Call App:P4210 Form:W4210G Version:ZJDE0001
     FC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     FC Order Type [DCTO] -> Ordertype [DCTO]
     FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Everesteventpoint01 [EV01]
     UNDEFINED <> UpdatedToHdrWF [EV20]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> Addressnumber [AN8]
     UNDEFINED <> Addressnumbershipto [SHAN]
     UNDEFINED <> Datetransactionjulian [TRDJ]
     UNDEFINED <> Currencymode [CRRM]
     UNDEFINED <> Currencycodefrom [CRCD]
     UNDEFINED <> Currencyconverrateov [CRR]
     UNDEFINED <> Amountordergross [OTOT]
     UNDEFINED <> Amountforeignopen [FAP]
     UNDEFINED <> Computerid [CTID]
     UNDEFINED <> Jobnumber [JOBS]
     UNDEFINED <> Currencycodeto [CRDC]
     UNDEFINED <> Advancedsalespricingyn [ADVP]
     UNDEFINED <> Pricingbasedondate [CP01]
     UNDEFINED <> Priceretrievaluom [UMB1]
     UNDEFINED <> Processuomconversions [BUMC]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> Deliveryinstructline1 [DEL1]
     UNDEFINED <> Deliveryinstructline2 [DEL2]
     UNDEFINED <> Priceadjusmentschedulen [ASN]
     UNDEFINED <> Discounttrade [TRDC]
     UNDEFINED <> Carrier [CARS]
     UNDEFINED <> Routecode [ROUT]
     UNDEFINED <> Stopcode [STOP]
     UNDEFINED <> Zonenumber [ZON]
     UNDEFINED <> Freighthandlingcode [FRTH]
     UNDEFINED <> Applyfreightyn [AFT]
     UNDEFINED <> Commissioncode1 [CMC1]
     UNDEFINED <> Ratecommission1 [CMR1]
     UNDEFINED <> Commissioncode2 [CMC2]
     UNDEFINED <> Ratecommission2 [CMR2]
     UNDEFINED <> Authorizationnocredit [AUTN]
     UNDEFINED <> Acctnocrbank [CACT]
     UNDEFINED <> Dateexpired [CEXP]
     UNDEFINED <> Paymenttermscode01 [PTC]
     UNDEFINED <> Paymentinstrumenta [RYIN]
     UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
     UNDEFINED <> Unitofmeasurevoldisp [VUMD]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Header Commissions Lookup
Event: Button Clicked
Event GUID: b7d0b957-132a-4d8f-8347-352660a33b38
=============================================
// SAR# 4648630 Begin
Call App:P42150 Form:W42150A Version:Undefined
     FC Address Number [AN8] <> mnAddressNumber [AN8]
     UNDEFINED <> jdDateExpirJulian [CXPJ]
     FC Order Type [DCTO] <> szOrderType [DCTO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     VA frm_cFormActionCode_ACTN [ACTN] -> cActionCode [ACTI]
     FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
     UNDEFINED <> cApplicationCalledFrom [APCF]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Multi Item Search and Return
Event: Button Clicked
Event GUID: 8a2c0d61-36f7-11d2-9a9a-0000f64da757
=============================================
Call App:P40ITM2 Form:W40ITM2F Version:ZJDE0001
     UNDEFINED <> mnIdentifierShortItem [ITM]
     FC Business Unit [MCU] -> szCostCenter [MCU]
     UNDEFINED <> szLocation [LOCN]
     UNDEFINED <> szLot [LOTN]
     UNDEFINED <> mnQtyOnHandPrimaryUn [PQOH]
     UNDEFINED <> szUnitOfMeasureAsInput [UOM]
     UNDEFINED <> jdDateLayerExpiration [MMEJ]
     UNDEFINED <> cLotStatusCode [LOTS]
     UNDEFINED <> mnLotPotency [LOTP]
     UNDEFINED <> szLotGrade [LOTG]
     UNDEFINED <> cVisualAssistMode [EV01]
     UNDEFINED <> cQualityMode [EV01]
     UNDEFINED <> szLocationE1 [LOCNE1]
     UNDEFINED <> szItemNoUnknownFormat [UITM]
// 
// 2673321
VA frm_EV01_LoadGridFromCacheDone [EV01] = "1"
// 
Press Button(FC PROCESS: Load Grid From Cache)
// 
// 2673321
DeleteCacheMemory(B4100380.DeleteCacheMemory)
     VA frm_GENLNG_CacheHandle [GENLNG] <> idCacheHandle [GENLNG]
VA frm_EV01_LoadGridFromCacheDone [EV01] = "0"
Press Button(FC ProcessOrderTemplate)
// 


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Customer Segment Items
Event: Button Clicked
Event GUID: 85a74d26-a6a5-4b37-ba22-d4ef8af447b5
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_CheckCSIReturnValue [EV01]
----------------------------------------
// SAR# 4541912 Begin
// SAR 8348415 - Pass Buying Segment Code and Action code 
Call App:P42440 Form:W42440A Version:VA frm_szCustSegItemsVersion_CSIV
     BC Buying Segment Code (F4201.0) [BSC] -> szBuyingSegmentCode [BSC]
     "1" -> cCalledFrom [PROM]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCache [EV01]
     VA evt_CheckCSIReturnValue [EV01] <- cCheckReturnValue [EV01]
     FC Address Number [AN8] -> mnSoldToAddressNumber [AN8]
     VA frm_cFormActionCode_ACTN [ACTN] -> cFormActionCode [ACTN]
If VA evt_CheckCSIReturnValue [EV01] is equal to "1"
     Press Button(FC PROCESS: Load Grid From Cache)
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Order Templates Inquiry
Event: Button Clicked
Event GUID: 90932885-a23d-11d0-a204-0000f6728a56
=============================================
VA frm_GENLNG_CacheHandle [GENLNG] = "0"
If PO cOrderTemplateAddress [EV21] is equal to "1"
     // SAR 6348155 - Begin
     Call App:P4015 Form:W4015A Version:Undefined
          FC Address Number [AN8] -> AddressNumber [AN8]
          PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
          "1" -> ProtectAddressNumber [EV02]
          VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
          "2" -> CalledFromPODetail [EV03]
          FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
          FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
     // SAR 6348155 - End
Else
     // SAR 6348155 - Begin
     Call App:P4015 Form:W4015A Version:Undefined
          FC Ship To [SHAN] -> AddressNumber [AN8]
          PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
          "1" -> ProtectAddressNumber [EV02]
          VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
          "2" -> CalledFromPODetail [EV03]
          FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
          FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
     // SAR 6348155 - End
End If
Press Button(FC PROCESS: Load Grid From Cache)
// SAR 7602952
Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
// SAR 7819641
// SAR 8929485
! If VA frm_MaxGridRows [MATH01] is greater than "1.00"
     ! Delete Grid Row(FC Grid, VA frm_MaxGridRows)
     ! VA frm_MaxGridRows [MATH01] = [VA frm_MaxGridRows [MATH01]]-1
     ! VA frm_LNID_Last_Line_Number [LNID] = [VA frm_LNID_Last_Line_Number [LNID]]-[PO mnDefaultLineIncrement [LNIX]]
     ! Get Grid Row(FC Grid, VA frm_MaxGridRows)
     ! GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
! End If
VA frm_EV07_Template_Called [EV07] = "1"


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Create Credit Memo
Event: Button Clicked
Event GUID: 5ef15ce9-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnLastLineNumAssigned_LNIX [LNIX]
evt_nRowCount_INT01 [INT01]
----------------------------------------
If PO szSupplierMasterVers [VL09] is equal to or empty <Blank>
Or PO szSupplierMasterVers [VL09] is equal to or empty <NULL>
     PO szSupplierMasterVers [VL09] = "ZJDE0001"
End If
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     SL CountryCode -> szCountry [CTR]
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "XI1" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     VA frm_mnLocJobNumber_JOBS [JOBS] <> mnLocJobNumber [JOBS]
// 6772141-Get next LNIX and pass it to P42025
GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobNo [JOBS]
     VA evt_mnLastLineNumAssigned_LNIX [LNIX] <- mnWFLineNo [LNIX]
// SOM Taxed Unit Price
// Retreive the Use Taxed Prices Flag for the Order selected
VA frm_cUseTaxedPricesCredit_UTP [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
Call App:P42025 Form:W42025A Version:PO szSupplierMasterVers
     "1" -> cCalledFromSOE01 [EV01]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     VA frm_mnCreditJobNum_JOBS [JOBS] <> mnJobnumberA [JOBS]
     VA evt_mnLastLineNumAssigned_LNIX [LNIX] -> mnLastLineNumberUsed [LNIX]
     "2" -> cUseCacheorWF [EV22]
     VA frm_mnCreditSoldTo_AN8 [AN8] <- mnAddressNumber [AN8]
     VA frm_mnCreditShipTo_SHAN [SHAN] <- mnAddressNumberShipTo [SHAN]
     VA frm_szCreditBranch_MCUZ [MCUZ] <- szCostCenter [MCU]
     VA frm_szCreditCustCurrency_CRCD [CRCD] <- szCurrencyCodeFrom [CRCD]
     VA frm_mnCreditExhgeRate_CRR [CRR] <- mnCurrencyConverRateOv [CRR]
If VA frm_mnCreditJobNum_JOBS [JOBS] is not equal to "0"
     VA frm_cCreditMemoProcess_EV24 [EV24] = "1"
     If FI UpdatedToHdrWF [EV20] is not equal to "1"
     And SV Form_ Mode is not equal to CO UPDATE_MODE
          If FC Address Number [AN8] is equal to "0"
               FC Address Number [AN8] = VA frm_mnCreditSoldTo_AN8 [AN8]
          End If
          If FC Ship To [SHAN] is equal to "0"
               FC Ship To [SHAN] = VA frm_mnCreditShipTo_SHAN [SHAN]
          End If
          If FC Business Unit [MCU] is equal to or empty <Blank>
               FC Business Unit [MCU] = VA frm_szCreditBranch_MCUZ [MCUZ]
          End If
          If FC Currency Code [CRCD] is equal to or empty <Blank>
               FC Currency Code [CRCD] = VA frm_szCreditCustCurrency_CRCD [CRCD]
               // SAR 5800031
               If FC Exchange Rate [CRR] is equal to "0"
                    FC Exchange Rate [CRR] = VA frm_mnCreditExhgeRate_CRR [CRR]
               End If
          End If
          // SOM Taxed Unit Price
          // Assign the value if User has not entered any value Prior to clicking Credit
          // Memo Exit
          If VA frm_cUseTaxedPrices_UTP [UTP] is not equal to("0","1")
               FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPricesCredit_UTP [UTP]
               VA frm_cUseTaxedPrices_UTP [UTP] = VA frm_cUseTaxedPricesCredit_UTP [UTP]
          End If
     End If
     //
     // 2673321
     VA frm_EV01_LoadGridFromCacheDone [EV01] = "1"
     //
     Press Button(FC PROCESS: Load Grid From Cache)
     //  SAR 8972109 For credit memo , domestic price is not recalculating from
     
     // override foreign  price only on last line.
     Get Max Grid Rows(FC Grid, VA evt_nRowCount_INT01)
     If VA evt_nRowCount_INT01 [INT01] is not equal to "0"
          VA evt_nRowCount_INT01 [INT01] = [VA evt_nRowCount_INT01 [INT01]]-1
     End If
     Change Row Selection(FC Grid, VA evt_nRowCount_INT01,  <Selected (1)>)
     Set Control Focus(HC &OK/&Select)
     Change Row Selection(FC Grid, VA evt_nRowCount_INT01,  <Unselected (0)>)
     //
     N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
          SL CountryCode -> szCountry [CTR]
          "P4210" -> szCallingAppl [PID]
          "W4210A" -> szCallingForm [FID]
          "CS1" -> szFormAction [FATN]
          SL VersionName -> szCallingVers [VERS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          "000" -> szOrderSuffix [SFXO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA frm_mnCreditJobNum_JOBS [JOBS] -> mnCreditJobNum [JOBS]
          VA frm_mnLocJobNumber_JOBS [JOBS] -> mnLocJobNumber [JOBS]
     //
     // 2673321
     ! Insert Grid Buffer Row(FC Grid,  <After Last Row>,  <Yes>,  <No>,  <Yes>,  <Yes>,  <Yes>)
     //
     ! F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
     !      VA frm_mnCreditJobNum_JOBS [JOBS] <> mnJobNo [JOBS]
     !      VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     !      UNDEFINED <> mnFromLineNo [LNID]
     !      UNDEFINED <> mnThruLineNo [LNID]
     !      UNDEFINED <> cClearHeaderWF [EV01]
     !      "1" -> cClearDetailWF [EV02]
     !      UNDEFINED <> szProgramID [PID]
     !      UNDEFINED <> mnWKRelatedOrderProcess [MATH02]
     !      UNDEFINED <> szCMVersion [VERS]
     VA frm_cCreditMemoProcess_EV24 [EV24] = "0"
     ! VA frm_mnCreditJobNum_JOBS [JOBS] = "0"
End If
//
// 2673321
DeleteCacheMemory(B4100380.DeleteCacheMemory)
     VA frm_GENLNG_CacheHandle [GENLNG] <> idCacheHandle [GENLNG]
VA frm_EV01_LoadGridFromCacheDone [EV01] = "0"
Press Button(FC ProcessOrderTemplate)
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Reprice Sales Order - Order and Basket Group Adjustments
Event: Button Clicked
Event GUID: 909343c8-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_EV01_BasketFreeGood [EV01]
evt_GENLNG_F45UI73hRequest [GENLNG]
evt_LNID_LineNbr_FG [LNID]
evt_SOQS_QuantityShipped_FG [SOQS]
evt_UOM_UnitOfMeasure_FG [UOM]
evt_UPRC_UnitPrice_FG [UPRC]
evt_LNTY_LineType_FG [LNTY]
evt_LITM_ItemNmber_FG [LITM]
evt_EKEY_MoreFreeGoods [EKEY]
evt_LNID_SODtlParentForBsktFG [LNID]
evt_SLNE_ParentSOLineNumber [SLNE]
evt_UNCS_UnitCost_FG [UNCS]
evt_MATH09_NextAvailableRow [MATH09]
evt_UORG_UnitTransactionQty_FG [UORG]
evt_SOBK_UnitQuanBackorHeld_FG [SOBK]
evt_SOCN_UnitQtyCanceled_FG [SOCN]
evt_mnAmountOpen1_AOPN [AOPN]
evt_mnDiscountCash_CADC [CADC]
evt_mnCurrencyConverRateOv_CRR [CRR]
evt_mnDiscountFactor_DSPR [DSPR]
evt_mnDaysPastExpiration_EXDP [EXDP]
evt_mnFromPotency_FRMP [FRMP]
evt_mnGrossWeight_GRWT [GRWT]
evt_mnUnitPrimaryQtyOrder_PQOR [PQOR]
evt_mnQuantityRelieved_QRLV [QRLV]
evt_mnQtyShippedToDate_QTYT [QTYT]
evt_mnUnitsQuantityFuture_SONE [SONE]
evt_mnExtendedCostTransf_TCST [TCST]
evt_mnThruPotency_THRP [THRP]
evt_mnDiscountTrade_TRDC [TRDC]
evt_mnUnitsOpenQuantity_UOPN [UOPN]
evt_cAdjustmentExists_EV01 [EV01]
evt_cContinueFGCacheLoop_EV01 [EV01]
evt_szReadCacheError_DTAI [DTAI]
evt_idFreeGoodCacheCursor [GENLNG]
evt_szFreeGoodCatName_CATLG [CATLG]
evt_szFGOrigOrderNumber_OORN [OORN]
evt_cB4502340Mode_EV01 [EV01]
evt_jdDateEffectiveRates_EFT [EFT]
evt_jdCurrConvTransDate_DGJ [DGJ]
evt_cB4500090Called_EV01 [EV01]
evt_cMoreF4550LinestoProcess [EV01]
evt_idF4550CacheCursor [GENLNG]
evt_cBasketAccumulationRule [BSKTA]
evt_cBasketPricingRule [BSKTP]
evt_cEnhancedBasketYN [EV01]
evt_mnF4213IFactorValue [FVTR]
evt_szBasketUOM [UOM]
evt_cR42750PrefProcess_EV01 [EV01]
evt_cLoopMode_EV01 [EV01]
evt_mnLoopCount_MATH01 [MATH01]
evt_cPreferenceFound_EV01 [EV01]
evt_szPrefPaymentTerms_PTC [PTC]
evt_PriceHistAltKeySrce_SRCFD [SRCFD]
evt_RateCodeFrieghtMisc_FRAT [FRAT]
evt_szItemGroup_PRGR [PRGR]
evt_szShipCommodityClass_SHCM [SHCM]
evt_szShipConditionsCode_SHCN [SHCN]
evt_szStopCode_STOP [STOP]
evt_szPrimaryUOM_UOM1 [UOM1]
evt_mnPrefCacheLineNo_LNIX [LNIX]
evt_szPrefRetrievalError_DTAI [DTAI]
evt_cSalesOrder08_SO08 [SO08]
evt_cPymtTermSelectMeth_EV01 [EV01]
evt_szRepriceGroup_RPRC [RPRC]
evt_szNewPaymentTerms_PTC [PTC]
evt_cSalesOrderStatus09_SO09 [SO09]
evt_mnCacheItemNumber [ITM]
evt_mnCacheItemGroupKeyID [IGID]
evt_cPriceOverrideCode_PROV [PROV]
evt_FGLineNoIncrement [LNID]
evt_szFG_GlClass_GLC [GLC]
evt_mnDetachedAdjDomestic_DETD [DETD]
evt_mnDetachedAdjForeign_DETF [DETF]
evt_cCurrencyMode [CRRM]
evt_mnFreeGoodRelatedPrice [UPRC]
evt_FUP_ForeignUnitPrice_FG [FUP]
evt_cB4201070ErrorCode_ERRC [ERRC]
evt_cFormMode_EV01 [EV01]
evt_cCacheChangedYN_EV01 [EV01]
evt_mnLineNumber_LNID [LNID]
evt_mnUnitPrice_UPRC [UPRC]
evt_mnForeignUnitPrice_FUP [FUP]
evt_mnExtendedPrice_AEXP [AEXP]
evt_mnForeignExtPrice_FEA [FEA]
evt_mnUndoUnitPrice_UPRC [UPRC]
evt_mnUndoForeignUnitPrice_FUP [FUP]
evt_mnUndoExtendedPrice_AEXP [AEXP]
evt_mnUndoForeignExtPrice_FEA [FEA]
evt_cOrderRepIndicator_ORP [ORP]
evt_mnF42UI11WFLineNumber_LNIX [LNIX]
evt_szUnitOfMeasure_UOM [UOM]
evt_szLineType_LNTY [LNTY]
evt_szCostCenter_MCU [MCU]
evt_cPreprocessorCalled_EV01 [EV01]
evt_idRepriceCachePtr_GENLNG [GENLNG]
evt_szPriceAdjustmentSch_ASN [ASN]
evt_cUndoOrderRepIndicator_ORP [ORP]
evt_cCacheErrorCode_EV01 [EV01]
evt_mnUndoRevisionLevel_AREV [AREV]
evt_szBasketRepriceGroup_RPRC [RPRC]
evt_szOrderRepriceGroup_ORPR [ORPR]
evt_szDescription_DESC [DESC]
evt_mnIdentifier2ndItem_LITM [LITM]
evt_cLineRepriced_EV01 [EV01]
evt_cInsertCode_EV01 [EV01]
evt_mnGridRowCounter [MATH01]
evt_szSODetailFlags_ALPH [ALPH]
evt_cPriceHisDatamapExist_EV01 [EV01]
evt_cMatrixParentItem_EV01 [EV01]
evt_cR42750FromScratch_EV01 [EV01]
evt_cR42750PreserveFG_EV01 [EV01]
evt_cTempRecdWrittenToWF_EV01 [EV01]
evt_cDirtyKitAddedToCache [EV01]
evt_cKitComponent_EV01 [EV01]
evt_cDirectShip_EV01 [EV01]
evt_mnTaxedUnitPrice_TUPRC [TUPRC]
evt_mnTaxedExtPrice_TAEXP [TAEXP]
evt_mnUnitTaxAmt_UTA [UTA]
evt_mnExtTaxAmt_ETA [ETA]
evt_mnForTaxedUnitPrice_TFUP [TFUP]
evt_mnForTaxedExtPrice_TFEA [TFEA]
evt_mnForUnitTaxAmt_FUTA [FUTA]
evt_mnForExtTaxAmt_FETA [FETA]
----------------------------------------
//
VA evt_szSODetailFlags_ALPH [ALPH] = <NULL>
VA evt_cDirtyKitAddedToCache [EV01] = <Blank>
// SAR 6732229
VA frm_nRepriceCounter_INT01 [INT01] = [VA frm_nRepriceCounter_INT01 [INT01]]+1
If VA frm_cGridFilled [EV01] is not equal to "Y"
And VA frm_ACTI_Action_Code [ACTI] is not equal to "A"
     Set Control Error(HC &Reprice Order, "051K")
Else
     // Volume Incentives will need form mode
     If SV Form_ Mode is equal to CO UPDATE_MODE
          VA evt_cFormMode_EV01 [EV01] = "2"
     Else
          VA evt_cFormMode_EV01 [EV01] = "1"
     End If
     // SAR 8311364 - Retrieve POs for reprice from scratch
     RetrieveR42750ProcOpts(B4500120.RetrieveR42750ProcOpts)
          PO szR42750Vers [VL04] -> szProcOptsVersion [VERS]
          VA frm_szR42750SelectNextStatus [NXTR] <- szSelectStatusCodeNext [NXTR]
          VA frm_szR42750DefaultNextStatus [NXTR] <- szDefaultStatusCodeNext [NXT2]
          VA frm_cR42750RepeatReprice [EV01] <- cRepeatReprice [EV01]
          VA evt_cR42750PrefProcess_EV01 [EV01] <- cBasketPreference [EV01]
          VA evt_cPymtTermSelectMeth_EV01 [EV01] <- cPaymentTermsSelectMeth [EV02]
          VA evt_cR42750FromScratch_EV01 [EV01] <- cRepriceFromScratch [EV01]
          VA evt_cR42750PreserveFG_EV01 [EV01] <- cPreserveFreeGoods [EV01]
     // Load reprice cache for each grid line
     Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
     VA frm_mnCurrentGridRow [MATH01] = "1"
     While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_mnNumGridRows [MATH01]
          Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
          //
          // SAR 8704344 - Do not load Kit Component Lines to Reprice Cache as they are
          // not included in Repricing Calculation (Bypassed in B4500542).
          //
          VA evt_cKitComponent_EV01 [EV01] = "0"
          If GC Kit Master Line No [KTLN] is not equal to "0"
          And GC Related Kit Cpnt [RKIT] is equal to "0"
               VA evt_cKitComponent_EV01 [EV01] = "1"
          End If
          // SAR# 8891741-Don't load Matrix Parent item to Reprice Cache. Because, the
          // Matrix Parent item will be removed once the matrix component loaded into
          // the sales Order detail.
          VA evt_cMatrixParentItem_EV01 [EV01] = "0"
          If GC Line Number [LNID] is equal to GC Matrix Control Line Number [MCLN]
               VA evt_cMatrixParentItem_EV01 [EV01] = "1"
          End If
          // SAR# 8891741-Don't Process Matrix Parent Item
          If VA evt_cKitComponent_EV01 [EV01] is not equal to "1"
          And VA evt_cMatrixParentItem_EV01 [EV01] is not equal to "1"
               //
               // SAR 8643609 - Use VA grd_EV18_UpdatedtoDetailWF instead of VA
               // grd_cRepriceWrittenToWF_EV01 to check the line is written to Cache
               // Also, determine EditLine Preprocess has been called before and set the flag
               // SAR 8918327 - Reprice for Direct Ship orders
               //
               RetrieveStringElement(B4002410.RetrieveStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
                    "11" -> nPosition [INT01]
                    VA evt_cDirectShip_EV01 [EV01] <- cCharacter [EV01]
               If VA evt_cDirectShip_EV01 [EV01] is equal to "1"
               Or VA evt_cDirectShip_EV01 [EV01] is equal to "2"
                    VA grd_cRepriceWrittenToWF_EV01 [EV01] = "1"
               Else
                    VA grd_cRepriceWrittenToWF_EV01 [EV01] = VA grd_EV18_UpdatedtoDetailWF [EV18]
               End If
               If GC Source of Data [EV17] is equal to "7"
                    VA evt_cPreprocessorCalled_EV01 [EV01] = "1"
               End If
               //
               // SAR 6869233 - In Update mode, if F42UI11 is not yet loaded for the grid
               // line, get a new mnF42UI11WFLineNumber and pass it in.
               If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is less than or equal to "0"
                    // SAR 6732229
                    // SAR 8643609 - Remove the code to set VA grd_cRepriceWrittenToWF_EV01
                    If FI Jobnumber [JOBS] is less than or equal to "0"
                         GetInternalNextNumber(B0000564.GetInternalNextNumber)
                              FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
                    End If
                    GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                         FI Computerid [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
                    // SAR 6732229
                    // SAR 8643609 - Remove the code to set VA grd_cRepriceWrittenToWF_EV01
               End If
               ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
                    GC CLVL-PC Lev (wf) [CLVL] -> szGenericString [DSC1]
                    VA frm_AREV_mnRevision_Level [AREV] <- mnNumericValue [ITM]
               // SAR 6732229
               If VA grd_VC01B_Line_Repriced [VC01B] is not equal to "Y"
                    VA grd_UPAX_Undo_Reprice_UP [UPAX] = GC Unit Price [UPRC]
                    VA grd_PRIC_Undo_Reprice_Foreign [PRIC] = GC Foreign Unit Price [FUP]
                    VA grd_mnUndoRepriceExtended_AEXP [AEXP] = GC Extended Price [AEXP]
                    VA grd_mnUndoReprcExtForeign_FEA [FEA] = GC Foreign Extended Price [FEA]
                    VA grd_PRN_Undo_Rep_Rev_Lvl [PRN] = VA frm_AREV_mnRevision_Level [AREV]
                    //
                    // SAR 8955609 - Save off current taxed prices for Cancel Reprice to use
                    If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                         VA grd_mnUndoTaxedUnitPrice_TUPRC [TUPRC] = GC Taxed Unit Price [TUPRC]
                         VA grd_mnUndoForTaxedUnitPri_TFUP [TFUP] = GC Foreign Taxed Unit Price [TFUP]
                         VA grd_mnUndoTaxedExtPrice_TAEXP [TAEXP] = GC Taxed Extended Price [TAEXP]
                         VA grd_mnUndForTaxedExtPrice_TFEA [TFEA] = GC Foreign Taxed Extended Price [TFEA]
                         VA grd_mnUndoUnitTaxAmt_UTA [UTA] = GC Unit Tax Amount [UTA]
                         VA grd_mnUndoForUnitTaxAmt_FUTA [FUTA] = GC Foreign Unit Tax Amount [FUTA]
                         VA grd_mnUndoExtTaxAmt_ETA [ETA] = GC Extended Tax Amount [ETA]
                         VA grd_mnUndoFoExtTaxAmt_FETA [FETA] = GC Foreign Extended Tax Amount [FETA]
                    End If
                    //
                    VA grd_VC01A_Undo_Rep_Ind [VC01A] = GC Order Repriced Indicator [ORP]
               End If
               //
               // SAR 8002844 - Check whether Price History Data Map Exists. When SO
               // is just re-inquired and Reprice Order is clicked, Begin Doc/Edit Line is
               // not called. So Price History Data Map does not Exist, then Create & set it.
               //
               PricingHistoryDatamapExist(B4504590.PricingHistoryDatamapExist)
                    FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    VA evt_cPriceHisDatamapExist_EV01 [EV01] <- cPriceHistoryDatamapExist [EV01]
               If VA evt_cPriceHisDatamapExist_EV01 [EV01] is not equal to "1"
                    CreatePricingHistoryDatamap(B4504590.CreatePricingHistoryDatamap)
                         FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    SetPricingHistoryCacheFlag(B4504590.SetPricingHistoryCacheFlag)
                         FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                         VA frm_EV22_cCacheOn [EV22] -> cPriceHistoryCacheFlag [EV01]
               End If
               //
               GetRepriceCacheParameters(B4500542.GetRepriceCacheParameters)
                    FI Computerid [CTID] <> szComputerID [CTID]
                    FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    GC Line Number [LNID] -> mnLineNumber [LNID]
                    <Blank> -> szOrderSuffix [SFXO]
                    GC Order Repriced Indicator [ORP] <> cOrderRepricedIndicator [ORP]
                    VA grd_cRepriceWrittenToWF_EV01 [EV01] -> cUpdatetoDetailWF [EV01]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnF42UI11WFLineNo [LNIX]
                    VA frm_szCustPricingGroup [PRGR] <- szGroupCustomerPriceGp [CPGP]
                    GC Price Effective Date [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
                    "1" -> cCallingObject [EV01]
                    VA frm_cAdjRetrievalMethod_AJRM [AJRM] <> cAdjustmentRetrievalMethod [AJRM]
                    BC Price and Adjustment Schedule (F4201.0) [ASN] -> szPriceAdjustmentSchedule [ASN]
                    VA frm_sz_HeaderAdjSchedule_ASN [ASN] <> szScheduleToProcess [ASN]
                    PO szPreferenceSchedule [PRSN] <> szPreferenceSchedulePO [ASN]
                    VA frm_DistConstPrefSchedule_PRSN [PRSN] <> szDistConstantsPrefSch [ASN]
                    VA evt_cLoopMode_EV01 [EV01] <> cLoopMode [EV01]
                    VA grd_RPRC_Basket_Reprice_Grp [RPRC] <> szRepriceBasketPriceCat [RPRC]
                    VA grd_ORPR_Order_Reprice_Grp [ORPR] <> szOrderRepriceCategory [ORPR]
                    VA evt_mnCurrencyConverRateOv_CRR [CRR] <- mnCurrencyConverRateOv [CRR]
                    VA evt_mnAmountOpen1_AOPN [AOPN] <- mnAmountOpen1 [AOPN]
                    VA evt_mnDiscountCash_CADC [CADC] <- mnDiscountCash [CADC]
                    VA evt_mnDaysPastExpiration_EXDP [EXDP] <- mnDaysPastExpiration [EXDP]
                    VA evt_mnFromPotency_FRMP [FRMP] <- mnFromPotency [FRMP]
                    VA evt_mnGrossWeight_GRWT [GRWT] <- mnGrossWeight [GRWT]
                    VA evt_mnUnitsQuantityFuture_SONE [SONE] <- mnUnitsQuantityFuture [SONE]
                    VA evt_mnExtendedCostTransf_TCST [TCST] <- mnExtendedCostTransfer [TCST]
                    VA evt_mnThruPotency_THRP [THRP] <- mnThruPotency [THRP]
                    VA evt_mnDiscountTrade_TRDC [TRDC] <- mnDiscountTrade [TRDC]
                    VA evt_mnUnitsOpenQuantity_UOPN [UOPN] <- mnUnitsOpenQuantity [UOPN]
                    VA evt_mnUnitPrimaryQtyOrder_PQOR [PQOR] <- mnUnitsPrimaryQtyOrder [PQOR]
                    VA evt_mnQuantityRelieved_QRLV [QRLV] <- mnQuantityRelieved [QRLV]
                    VA evt_mnQtyShippedToDate_QTYT [QTYT] <- mnQuantityShippedToDate [QTYT]
                    VA evt_szItemGroup_PRGR [PRGR] <- szItemGroup [PRGR]
                    VA evt_szShipCommodityClass_SHCM [SHCM] <- szShippingCommodityClass [SHCM]
                    VA evt_szShipConditionsCode_SHCN [SHCN] <- szShippingConditionsCode [SHCN]
                    VA evt_szStopCode_STOP [STOP] <- szStopCode [STOP]
                    VA grd_LPRC_Unit_List_Price [LPRC] <> mnAmtListPricePerUnit [LPRC]
                    VA grd_FPRC_Foreign_List_Price [FPRC] <> mnAmountListPriceForeign [FPRC]
                    VA evt_szPrimaryUOM_UOM1 [UOM1] <- szUnitOfMeasurePrimary [UOM1]
                    VA grd_APUM_UM_Ent [APUM] <- szUnitOfMeasureEntUP [APUM]
                    VA evt_RateCodeFrieghtMisc_FRAT [FRAT] <- szRateCodeFrieghtMisc [FRAT]
                    VA grd_STKT_Stocking_Type [STKT] -> cStockingType [STKT]
                    GC Method of Price Calculation [PMTH] <> cMethodOfPriceCalcula [PMTH]
                    GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                    VA frm_EV22_cCacheOn [EV22] -> cUpdateWFCache [EV22]
               // SAR 8643609 - Pass the Preprocess called flag to store to reprice cache
               // SAR 8955609 - Pass in taxed prices, taxed price override code, tax date
               CacheProcessRepriceCache(B4500541.CacheProcessRepriceCache)
                    FI Computerid [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    FI mnProcessID [PEID] -> mnProcessID [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    <Blank> -> szOrderSuffix [SFXO]
                    GC Line Number [LNID] -> mnLineNumber [LNID]
                    <Blank> -> cInsertCode [EV01]
                    GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                    GC Quantity Ordered [UORG] -> mnQuantityOrdered [UORG]
                    GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
                    GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [FUP]
                    GC Extended Price [AEXP] -> mnAmountExtendedPrice [AEXP]
                    GC Foreign Extended Price [FEA] -> mnAmountForeignExtPrice [FEA]
                    GC Extended Cost [ECST] -> mnAmountExtendedCost [ECST]
                    GC Foreign Extended Cost [FEC] -> mnAmountForeignExtCost [FEC]
                    GC Order Repriced Indicator [ORP] -> cOrderRepricedIndicator [ORP]
                    VA grd_cRepriceWrittenToWF_EV01 [EV01] <> cUpdatetoDetailWF [EV15]
                    GC % Profit Margin [PRMG] -> mnProfitMargin [MATH01]
                    BC Payment Terms Code (F4211.0) [PTC] -> szPaymentTermsCode [PTC]
                    VA grd_SO08_Price_Adj_Line [SO08] -> cSalesOrderStatus08 [SO08]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnF42UI11WFLineNo [LNIX]
                    VA frm_AREV_mnRevision_Level [AREV] -> mnAdjustmentRevisionLevel [AREV]
                    VA frm_ItemGroupKeyID_IGID [IGID] -> mnItemGroupKeyID [IGID]
                    GC Wt U/M [WTUM] -> szWeightUnitOfMeasure [WTUM]
                    GC UM  [UOM] -> szTransactionUOM [UOM]
                    GC PR UM [UOM4] -> szPricingUnitOfMeasure [UOM4]
                    VA grd_APUM_UM_Ent [APUM] -> szUnitOfMeasureEntUP [APUM]
                    GC Location  [LOCN] -> szLocation [LOCN]
                    GC Lot Serial Number [LOTN] -> szLot [LOTN]
                    GC Ln Ty [LNTY] -> szLineType [LNTY]
                    FC Address Number [AN8] -> mnSoldTo [AN8]
                    GC Ship To Number [SHAN] -> mnShipTo [AN8]
                    VA frm_szCustPricingGroup [PRGR] -> szGroupCustomerPriceGp [CPGP]
                    GC Price Effective Date [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
                    VA evt_mnDetachedAdjDomestic_DETD [DETD] -> mnDetachedAdjDomestic [DETD]
                    VA evt_mnDetachedAdjForeign_DETF [DETF] -> mnDetachedAdjForeign [DETF]
                    GC Quantity Backordered [SOBK] -> mnUnitsQuanBackorHeld [SOBK]
                    GC Business Unit [MCU] -> szCostCenter [MCU]
                    VA grd_LPRC_Unit_List_Price [LPRC] -> mnAmtListPricePerUnit [LPRC]
                    VA grd_FPRC_Foreign_List_Price [FPRC] -> mnAmountListPriceForeign [FPRC]
                    VA evt_cPreprocessorCalled_EV01 [EV01] -> cAPChangedYN [EV01]
                    "1" -> cCallingObject [EV01]
                    VA frm_sz_HeaderAdjSchedule_ASN [ASN] -> szPriceAdjustmentScheduleN [ASN]
                    VA grd_VC01A_Undo_Rep_Ind [VC01A] -> cUndoRepriceIndicator [ORP]
                    PO szPreferenceSchedule [PRSN] -> szPreferenceSchedule [ASN]
                    "1" -> cSuppressErrorMessage [EV01]
                    "2" -> cCacheActionCode [ACTN]
                    VA grd_PRN_Undo_Rep_Rev_Lvl [PRN] -> mnUndoRevisionLevel [AREV]
                    VA grd_RPRC_Basket_Reprice_Grp [RPRC] -> szRepriceBasketPriceCat [RPRC]
                    VA grd_ORPR_Order_Reprice_Grp [ORPR] -> szOrderRepriceCategory [ORPR]
                    VA evt_mnCurrencyConverRateOv_CRR [CRR] -> mnCurrencyConverRateOv [CRR]
                    GC Quantity Shipped [SOQS] -> mnUnitsQuantityShipped [SOQS]
                    GC Unit Weight [ITWT] -> mnAmountUnitWeight [ITWT]
                    GC Unit Volume [ITVL] -> mnAmountUnitVolume [ITVL]
                    GC Quantity Canceled [SOCN] -> mnUnitsQuantityCanceled [SOCN]
                    VA evt_mnAmountOpen1_AOPN [AOPN] -> mnAmountOpen1 [AOPN]
                    VA evt_mnDiscountCash_CADC [CADC] -> mnDiscountCash [CADC]
                    VA evt_mnDaysPastExpiration_EXDP [EXDP] -> mnDaysPastExpiration [EXDP]
                    VA evt_mnFromPotency_FRMP [FRMP] -> mnFromPotency [FRMP]
                    VA evt_mnGrossWeight_GRWT [GRWT] -> mnGrossWeight [GRWT]
                    VA evt_mnUnitsQuantityFuture_SONE [SONE] -> mnUnitsQuantityFuture [SONE]
                    VA evt_mnExtendedCostTransf_TCST [TCST] -> mnExtendedCostTransfer [TCST]
                    VA evt_mnThruPotency_THRP [THRP] -> mnThruPotency [THRP]
                    VA evt_mnDiscountTrade_TRDC [TRDC] -> mnDiscountTrade [TRDC]
                    VA evt_mnUnitsOpenQuantity_UOPN [UOPN] -> mnUnitsOpenQuantity [UOPN]
                    VA evt_mnUnitPrimaryQtyOrder_PQOR [PQOR] -> mnUnitsPrimaryQtyOrder [PQOR]
                    VA evt_mnQuantityRelieved_QRLV [QRLV] -> mnQuantityRelieved [QRLV]
                    VA evt_mnQtyShippedToDate_QTYT [QTYT] -> mnQuantityShippedToDate [QTYT]
                    GC Agreement Number [DMCT] -> szContractNumberDistributi [DMCT]
                    GC Duty Sts [DTYS] -> szDutyStatus [DTYS]
                    GC End Use [EUSE] -> szEndUse [EUSE]
                    VA evt_szItemGroup_PRGR [PRGR] -> szItemGroup [PRGR]
                    VA evt_szShipCommodityClass_SHCM [SHCM] -> szShippingCommodityClass [SHCM]
                    VA evt_szShipConditionsCode_SHCN [SHCN] -> szShippingConditionsCode [SHCN]
                    VA evt_szStopCode_STOP [STOP] -> szStopCode [STOP]
                    GC PC 1 [UPC1] -> szPriceCode1 [UPC1]
                    GC PC 2 [UPC2] -> szPriceCode2 [UPC2]
                    GC PC 3 [UPC3] -> szPriceCode3 [UPC3]
                    GC Sec UM [UOM2] -> szUnitOfMeasureSecondary [UOM2]
                    GC Secondary Qty Ordered [SQOR] -> mnUnitsSecondaryQtyOr [SQOR]
                    GC Next Stat [NXTR] -> szStatusCodeNext [NXTR]
                    VA evt_RateCodeFrieghtMisc_FRAT [FRAT] -> szRateCodeFrieghtMisc [FRAT]
                    GC Last Stat [LTTR] -> szStatusCodeLast [LTTR]
                    GC Item Number [UITM] -> szIdentifier2ndItem [LITM]
                    GC Price Over Cd [PROV] -> cPriceOverrideCode [PROV]
                    VA grd_cPaymentTermsOverride_PMTO [PMTO] -> cPaymentTermsOverride [PMTO]
                    BC Manufacturing Variance Accounting Flag (F4211.0) [SO16] -> cManufacturingVarianceFlag [EV01]
                    GC Method of Price Calculation [PMTH] -> cMethodOfPriceCalcula [PMTH]
                    VA grd_STKT_Stocking_Type [STKT] -> cStockingType [STKT]
                    GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
                    GC Unit Cost [UNCS] -> mnAmountUnitCost [UNCS]
                    GC Foreign Unit Cost [FUC] -> mnAmountForeignUnitCost [FUC]
                    VA grd_LineEvaluatedforReprice [EV01] -> cLineEvaluatedforReprice [EV01]
                    VA frm_cWrittentoF40UI74 [EV01] -> cWrittentoF40UI74 [EV01]
                    VA grd_VC01B_Line_Repriced [VC01B] -> cLineRepriced [EV01]
                    FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                    GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
                    VA evt_szPrimaryUOM_UOM1 [UOM1] -> szUnitOfMeasurePrimary [UOM1]
                    BC Parent Number (F4211.0) [AAID] -> mnAddressNumberParent [PA8]
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlags [ALPH]
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szSOEMBFInternalFlags [SOEF]
                    GC Promised Ship [PPDJ] -> jdPromisedShipDate [PPDJ]
                    GC Kit Component Dirty Flag [KITDIRTY] -> cKitDirty [KITDIRTY]
                    GC Taxed Unit Price [TUPRC] -> mnTaxedUnitPrice [TUPRC]
                    GC Taxed Extended Price [TAEXP] -> mnTaxedExtendedPrice [TAEXP]
                    GC Foreign Taxed Unit Price [TFUP] -> mnForeignTaxedUnitPrice [TFUP]
                    GC Foreign Taxed Extended Price [TFEA] -> mnForeignTaxedExtendedPrice [TFEA]
                    GC Taxed Price Override Code [TPROV] -> cTaxedPriceOverrideCode [TPROV]
                    GC Internal SO Tax Date [DTXJ] -> jdInternalSOTaxDate [DTXJ]
               //
               // SAR 8470787 - Set a warning message if we just added a dirty kit to the
               // re-price cache (first time only)
               If GC Kit Component Dirty Flag [KITDIRTY] is equal to "1"
               And VA evt_cDirtyKitAddedToCache [EV01] is not equal to "1"
                    VA evt_cDirtyKitAddedToCache [EV01] = "1"
                    Set Control Error(FC Grid, "42B47")
               End If
               //
               // Sar 6869233 - RowIsExitedChangedAsynch logic needs to get triggered before
               // the order is saved. Set this flag to issue a warning in OK button logic
               // and trigger RowIsExitedChangedAsynch.
               //
               // SAR 7173772 - Merged the condition for ADD mode with the changes made
               // under SAR 6869233
               If VA grd_RPRC_Basket_Reprice_Grp [RPRC] is not equal to <Blank>
                    If SV Form_ Mode is equal to CO ADD_MODE
                         VA frm_cBaskRepInAddMode_EV01 [EV01] = "1"
                    Else
                         If SV Form_ Mode is equal to CO UPDATE_MODE
                              VA frm_cBaskRepInUpdateMode_EV01 [EV01] = "1"
                         End If
                    End If
               End If
               // SAR 7173772 - End
               // SAR 8704344 - End If - Kit Components
          End If
          VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
     End While
     // ---------------------------------------------------------------------------
     // Call reprice function to perform all repricing functionality. Function will
     // also update reprice cache and then assign to grid
     // SAR 6498081 - Pass in cCacheOn variable
     // ---------------------------------------------------------------------------
     // SAR 7144859 - Passed 'frm_szVersion_VERS' to szVersion
     // SAR 8209669 - Pass in scratch PO, free good PO, last line number assigned,
     // and cProcessRFS
     // SAR 8620079 - Pass in currency conversion method
     // SAR 8955609 - Pass in UTP flag
     ProcessRepriceAdjustments(B4500542.ProcessRepriceAdjustments)
          VA evt_cLoopMode_EV01 [EV01] <> cLoopMode [EV01]
          VA evt_cSalesOrderStatus09_SO09 [SO09] <- cSalesOrderStatus09 [SO09]
          VA evt_cCacheChangedYN_EV01 [EV01] <- cCacheChangedYN [EV01]
          FC To Currency Code [CRDC] -> szCurrencyCodeFrom [CRCD]
          FC Currency Code [CRCD] -> szCurrencyCodeTo [CRDC]
          FC Exchange Rate [CRR] -> mnExchangeRate [CRR]
          VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFromCur [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateToCurre [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <> cCurrencyConversionMethod [CRCM]
          PO szPreferenceSchedule [PRSN] -> szPreferenceSchedulePO [ASN]
          VA frm_DistConstPrefSchedule_PRSN [PRSN] -> szDistConstPrefSch [ASN]
          FC Order Date [TRDJ] -> jdOrderDate [PEFJ]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          SL CurrencyProcessing -> cCurrencyProcessing [EV01]
          VA frm_cAdjRetrievalMethod_AJRM [AJRM] -> cAdjustmentRetrievalMethod [AJRM]
          VA frm_szR42750DefaultNextStatus [NXTR] -> szDefaultStatusCodeNextPO [NXTR]
          VA frm_cR42750RepeatReprice [EV01] -> cRepeatReprice [EV01]
          VA evt_cR42750PrefProcess_EV01 [EV01] -> cBasketPreference [EV01]
          VA evt_cPymtTermSelectMeth_EV01 [EV01] -> cPaymentTermsSelectionMethod [EV01]
          VA evt_cR42750FromScratch_EV01 [EV01] -> cRepriceFromScratch [EV01]
          FC Order Company [KCOO] -> szCompany [KCOO]
          "1" -> cCallingObject [EV01]
          VA frm_sz_HeaderAdjSchedule_ASN [ASN] -> szScheduleToProcess [ASN]
          FI Computerid [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          "1" -> cProcessVID [EV01]
          <Blank> -> cProcessGPM [EV01]
          "1" -> cProcessRFS [EV01]
          PO cAvailabilityCheck [EV12] -> cPOAvailabilityChecking [EV01]
          VA frm_szVersion_VERS [VERS] -> szVersion [VERS]
          VA frm_cFreeGoodExitEnabled_EV01 [EV01] <> cFreeGoodExitEnabledYN [EV01]
          VA frm_EV22_cCacheOn [EV22] -> cWritetoWFFlag [EV01]
          VA frm_LNID_Last_Line_Number [LNID] -> mnLastLineNumberAssigned [LNID]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          VA frm_EV22_cCacheOn [EV22] -> cUseCacheorWF [EV01]
          VA evt_cR42750PreserveFG_EV01 [EV01] -> cPreserveFreeGoods [EV01]
          VA evt_cFormMode_EV01 [EV01] -> cFormMode [EV01]
          VA frm_szR42750SelectNextStatus [NXTR] -> szStatusCodeNextPO [NXTR]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
     VA frm_cWrittentoF40UI74 [EV01] = "1"
     //
     // SAR 7151240
     VA frm_cB4502340AccumFlag_EV01 [EV01] = "1"
     //
     If VA evt_cCacheChangedYN_EV01 [EV01] is equal to "1"
          VA evt_cCacheChangedYN_EV01 [EV01] = "0"
          // Retrieve reprice cache
          // SAR 8311364 - Pass back cUpdatetoDetailWF
          // SAR 8704344 - Retrieve alph flag to the event variable instead of GC
          // variable (similar to SAR 8311356 fix below)
          // SAR 8955609 - Pass back taxed prices
          CacheProcessRepriceCache(B4500541.CacheProcessRepriceCache)
               FI Computerid [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
               FI mnProcessID [PEID] -> mnProcessID [PEID]
               FI mnTransactionID [TCID] -> mnTransactionID [TCID]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               <Blank> -> szOrderSuffix [SFXO]
               VA evt_mnLineNumber_LNID [LNID] <- mnLineNumber [LNID]
               VA evt_cInsertCode_EV01 [EV01] <- cInsertCode [EV01]
               VA evt_mnUnitPrice_UPRC [UPRC] <- mnUnitPrice [UPRC]
               VA evt_mnForeignUnitPrice_FUP [FUP] <- mnForeignUnitPrice [FUP]
               VA evt_mnExtendedPrice_AEXP [AEXP] <- mnAmountExtendedPrice [AEXP]
               VA evt_mnForeignExtPrice_FEA [FEA] <- mnAmountForeignExtPrice [FEA]
               VA evt_mnUndoUnitPrice_UPRC [UPRC] <- mnPreviousUnitPrice [UPRC]
               VA evt_mnUndoForeignUnitPrice_FUP [FUP] <- mnPreviousForUnitPrice [FUP]
               VA evt_mnUndoExtendedPrice_AEXP [AEXP] <- mnPreviousExtPrice [AEXP]
               VA evt_mnUndoForeignExtPrice_FEA [FEA] <- mnPreviousForeignExtPrice [FEA]
               VA evt_cOrderRepIndicator_ORP [ORP] <- cOrderRepricedIndicator [ORP]
               VA evt_cTempRecdWrittenToWF_EV01 [EV01] <- cUpdatetoDetailWF [EV15]
               VA evt_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnF42UI11WFLineNo [LNIX]
               VA frm_AREV_mnRevision_Level [AREV] <- mnAdjustmentRevisionLevel [AREV]
               VA evt_szUnitOfMeasure_UOM [UOM] <- szTransactionUOM [UOM]
               VA evt_szLineType_LNTY [LNTY] <- szLineType [LNTY]
               VA evt_mnDetachedAdjDomestic_DETD [DETD] <- mnDetachedAdjDomestic [DETD]
               VA evt_mnDetachedAdjForeign_DETF [DETF] <- mnDetachedAdjForeign [DETF]
               VA evt_szCostCenter_MCU [MCU] <- szCostCenter [MCU]
               VA evt_cPreprocessorCalled_EV01 [EV01] <- cAPChangedYN [EV01]
               VA evt_idRepriceCachePtr_GENLNG [GENLNG] <> idCachePtr [GENLNG]
               VA evt_szPriceAdjustmentSch_ASN [ASN] <- szPriceAdjustmentScheduleN [ASN]
               VA evt_cUndoOrderRepIndicator_ORP [ORP] <- cUndoRepriceIndicator [ORP]
               VA evt_cCacheErrorCode_EV01 [EV01] <- cCacheErrorCode [EV01]
               "8" -> nNumberOfKeys [INT01]
               "1" -> cSuppressErrorMessage [EV01]
               "1" -> cCacheActionCode [ACTN]
               VA evt_mnUndoRevisionLevel_AREV [AREV] <- mnUndoRevisionLevel [AREV]
               "1" -> cSequentialFetch [EV01]
               VA evt_szBasketRepriceGroup_RPRC [RPRC] <- szRepriceBasketPriceCat [RPRC]
               VA evt_szOrderRepriceGroup_ORPR [ORPR] <- szOrderRepriceCategory [ORPR]
               VA evt_szDescription_DESC [DESC] <- szDescription [DESC]
               VA evt_mnIdentifier2ndItem_LITM [LITM] <- szIdentifier2ndItem [LITM]
               VA evt_cLineRepriced_EV01 [EV01] <- cLineRepriced [EV01]
               VA evt_szSODetailFlags_ALPH [ALPH] <> szSalesOrderFlags [ALPH]
               VA evt_mnTaxedUnitPrice_TUPRC [TUPRC] <- mnTaxedUnitPrice [TUPRC]
               VA evt_mnTaxedExtPrice_TAEXP [TAEXP] <- mnTaxedExtendedPrice [TAEXP]
               VA evt_mnUnitTaxAmt_UTA [UTA] <- mnUnitTaxAmount [UTA]
               VA evt_mnExtTaxAmt_ETA [ETA] <- mnExtendedTaxAmount [ETA]
               VA evt_mnForTaxedUnitPrice_TFUP [TFUP] <- mnForeignTaxedUnitPrice [TFUP]
               VA evt_mnForTaxedExtPrice_TFEA [TFEA] <- mnForeignTaxedExtendedPrice [TFEA]
               VA evt_mnForUnitTaxAmt_FUTA [FUTA] <- mnForeignUnitTaxAmount [FUTA]
               VA evt_mnForExtTaxAmt_FETA [FETA] <- mnForeignExtendedTaxAmount [FETA]
          // SAR 6663171
          VA evt_mnGridRowCounter [MATH01] = "1"
          While VA evt_cCacheErrorCode_EV01 [EV01] is equal to "0"
               // SAR 8311364 - Do not process a canceled line
               Get Grid Row(FC Grid, VA evt_mnGridRowCounter)
               //
               // SAR# 8891741- If the current row is Matrix Parent item then skip it
               If GC Line Number [LNID] is equal to GC Matrix Control Line Number [MCLN]
                    VA evt_mnGridRowCounter [MATH01] = [VA evt_mnGridRowCounter [MATH01]]+1
                    Get Grid Row(FC Grid, VA evt_mnGridRowCounter)
               End If
               // SAR 8691811 - If current grid row is a Kit component, then get the next
               // grid row by matching the LNIX of the grid record and reprice cache record.
               If GC Kit Master Line No [KTLN] is not equal to "0"
               And GC Related Kit Cpnt [RKIT] is equal to "0"
                    While VA evt_mnF42UI11WFLineNumber_LNIX [LNIX] is not equal to VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
                    And VA evt_mnGridRowCounter [MATH01] is less than or equal to VA frm_mnNumGridRows [MATH01]
                         VA evt_mnGridRowCounter [MATH01] = [VA evt_mnGridRowCounter [MATH01]]+1
                         Get Grid Row(FC Grid, VA evt_mnGridRowCounter)
                    End While
               End If
               //
               If GC Next Stat [NXTR] is not equal to "999"
                    // Basket adjustment
                    If VA evt_cInsertCode_EV01 [EV01] is equal to "1"
                         ! Get Grid Row(FC Grid, VA evt_mnF42UI11WFLineNumber_LNIX)
                         // SAR 6663171
                         ! Get Grid Row(FC Grid, VA evt_mnGridRowCounter)
                         GC Unit Price [UPRC] = VA evt_mnUnitPrice_UPRC [UPRC]
                         GC Foreign Unit Price [FUP] = VA evt_mnForeignUnitPrice_FUP [FUP]
                         GC Extended Price [AEXP] = VA evt_mnExtendedPrice_AEXP [AEXP]
                         GC Foreign Extended Price [FEA] = VA evt_mnForeignExtPrice_FEA [FEA]
                         //
                         // SAR 8955609 - Load taxed prices fetched from reprice cache to grid
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              GC Taxed Unit Price [TUPRC] = VA evt_mnTaxedUnitPrice_TUPRC [TUPRC]
                              GC Taxed Extended Price [TAEXP] = VA evt_mnTaxedExtPrice_TAEXP [TAEXP]
                              GC Unit Tax Amount [UTA] = VA evt_mnUnitTaxAmt_UTA [UTA]
                              GC Extended Tax Amount [ETA] = VA evt_mnExtTaxAmt_ETA [ETA]
                              GC Foreign Taxed Unit Price [TFUP] = VA evt_mnForTaxedUnitPrice_TFUP [TFUP]
                              GC Foreign Taxed Extended Price [TFEA] = VA evt_mnForTaxedExtPrice_TFEA [TFEA]
                              GC Foreign Unit Tax Amount [FUTA] = VA evt_mnForUnitTaxAmt_FUTA [FUTA]
                              GC Foreign Extended Tax Amount [FETA] = VA evt_mnForExtTaxAmt_FETA [FETA]
                         End If
                         //
                         VA grd_RPRC_Basket_Reprice_Grp [RPRC] = VA evt_szBasketRepriceGroup_RPRC [RPRC]
                         VA grd_ORPR_Order_Reprice_Grp [ORPR] = VA evt_szOrderRepriceGroup_ORPR [ORPR]
                         VA grd_VC01B_Line_Repriced [VC01B] = VA evt_cLineRepriced_EV01 [EV01]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = VA evt_mnF42UI11WFLineNumber_LNIX [LNIX]
                         GC Order Repriced Indicator [ORP] = VA evt_cOrderRepIndicator_ORP [ORP]
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              VA frm_AREV_mnRevision_Level [AREV] -> mnMathNumeric01 [MATH01]
                              GC CLVL-PC Lev (wf) [CLVL] <- szVideoConstant30A [VC30A]
                         If VA evt_cPreprocessorCalled_EV01 [EV01] is equal to "1"
                              GC Source of Data [EV17] = "7"
                         End If
                         // SAR 8311364 - Load the Record Written to WF flag to grid variable for next
                         // EditLine call. B4500542 may change this flag value when repricing from
                         // scratch.
                         // SAR 8955609 - Also load the Record Written to WF flag if using taxed prices
                         // because B4500542 may change the flag value when repricing for taxed orders.
                         If VA evt_cR42750FromScratch_EV01 [EV01] is equal to "1"
                         Or VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = VA evt_cTempRecdWrittenToWF_EV01 [EV01]
                         End If
                    Else
                         // Order Level Adjustment
                         If VA evt_cInsertCode_EV01 [EV01] is equal to "2"
                              VA frm_mnCurrentGridRow [MATH01] = VA frm_mnNumGridRows [MATH01]
                              // SAR 6847245
                              Insert Grid Row(FC Grid, VA frm_mnCurrentGridRow)
                              Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
                              VA grd_RPRC_Basket_Reprice_Grp [RPRC] = VA evt_szBasketRepriceGroup_RPRC [RPRC]
                              VA grd_ORPR_Order_Reprice_Grp [ORPR] = VA evt_szOrderRepriceGroup_ORPR [ORPR]
                              GC Item Number [UITM] = VA evt_szDescription_DESC [DESC]
                              GC Description  [DSC1] = VA evt_szDescription_DESC [DESC]
                              GC Business Unit [MCU] = VA evt_szCostCenter_MCU [MCU]
                              GC Ln Ty [LNTY] = VA evt_szLineType_LNTY [LNTY]
                              GC Last Stat [LTTR] = "920"
                              GC Next Stat [NXTR] = VA frm_szR42750DefaultNextStatus [NXTR]
                              GC Quantity Ordered [UORG] = "0"
                              GC Unit Price [UPRC] = VA evt_mnUnitPrice_UPRC [UPRC]
                              GC Foreign Unit Price [FUP] = VA evt_mnForeignUnitPrice_FUP [FUP]
                              GC Extended Price [AEXP] = VA evt_mnExtendedPrice_AEXP [AEXP]
                              GC Foreign Extended Price [FEA] = VA evt_mnForeignExtPrice_FEA [FEA]
                              GC Order Repriced Indicator [ORP] = VA evt_cOrderRepIndicator_ORP [ORP]
                              VA grd_VC01B_Line_Repriced [VC01B] = VA evt_cLineRepriced_EV01 [EV01]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = VA evt_mnF42UI11WFLineNumber_LNIX [LNIX]
                              GC Price Over Cd [PROV] = "1"
                              GC Source of Data [EV17] = "7"
                              VA grd_ACTI_ActionHidden [ACTI] = "A"
                              GC Adj. Schedule [ASN] = VA evt_szPriceAdjustmentSch_ASN [ASN]
                              GC UM  [UOM] = VA evt_szUnitOfMeasure_UOM [UOM]
                              // SAR 8311356 - frm_LNID_Last_Line_Number has the correct value for the newly
                              // added order level adj line.
                              GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
                              //
                              // SAR 8955609 - Load taxed prices fetched from reprice cache to grid
                              If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                                   GC Taxed Unit Price [TUPRC] = VA evt_mnTaxedUnitPrice_TUPRC [TUPRC]
                                   GC Taxed Extended Price [TAEXP] = VA evt_mnTaxedExtPrice_TAEXP [TAEXP]
                                   GC Unit Tax Amount [UTA] = VA evt_mnUnitTaxAmt_UTA [UTA]
                                   GC Extended Tax Amount [ETA] = VA evt_mnExtTaxAmt_ETA [ETA]
                                   GC Foreign Taxed Unit Price [TFUP] = VA evt_mnForTaxedUnitPrice_TFUP [TFUP]
                                   GC Foreign Taxed Extended Price [TFEA] = VA evt_mnForTaxedExtPrice_TFEA [TFEA]
                                   GC Foreign Unit Tax Amount [FUTA] = VA evt_mnForUnitTaxAmt_FUTA [FUTA]
                                   GC Foreign Extended Tax Amount [FETA] = VA evt_mnForExtTaxAmt_FETA [FETA]
                                   //
                                   // SAR 8955609 - EditLine has been called in B4500542 to calculate taxed
                                   // price. Therefore order adj line has been written to cache/WF and the
                                   // cRecWrittenToWF flag needs to be loaded for next EditLine call.
                                   VA grd_EV18_UpdatedtoDetailWF [EV18] = VA evt_cTempRecdWrittenToWF_EV01 [EV01]
                              End If
                              //
                              ConvertNumericToString(B0000045.ConvertNumericToString)
                                   VA frm_AREV_mnRevision_Level [AREV] -> mnMathNumeric01 [MATH01]
                                   GC CLVL-PC Lev (wf) [CLVL] <- szVideoConstant30A [VC30A]
                              If VA evt_cInsertCode_EV01 [EV01] is equal to "2"
                              And GC ALPH - SO Detail Flags (wf) [ALPH] is equal to <Blank>
                                   GC ALPH - SO Detail Flags (wf) [ALPH] = VA evt_szSODetailFlags_ALPH [ALPH]
                              End If
                              SetPricingSOLineInfoALPH08(B4205100.SetPricingSOLineInfoALPH08)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "1" -> cValue [EV01]
                              VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
                              VA frm_mnNumGridRows [MATH01] = [VA frm_mnNumGridRows [MATH01]]+1
                              // SAR 8311356 - Update the last grid line number with next line number
                              Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
                              IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                   VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                   PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
                                   GC Line Number [LNID] <- mnOutputLineNumber [XLIN]
                              Delete Grid Row(FC Grid, VA frm_mnCurrentGridRow)
                         Else
                              // Volume Incentive adjustment
                              If VA evt_cInsertCode_EV01 [EV01] is equal to "3"
                                   Get Grid Row(FC Grid, VA evt_mnLineNumber_LNID)
                                   GC Unit Price [UPRC] = VA evt_mnUnitPrice_UPRC [UPRC]
                                   GC Foreign Unit Price [FUP] = VA evt_mnForeignUnitPrice_FUP [FUP]
                                   //
                                   // SAR 8955609 - Load updated extended prices to grid.
                                   GC Extended Price [AEXP] = VA evt_mnExtendedPrice_AEXP [AEXP]
                                   GC Foreign Extended Price [FEA] = VA evt_mnForeignExtPrice_FEA [FEA]
                                   //
                                   GC Order Repriced Indicator [ORP] = VA evt_cOrderRepIndicator_ORP [ORP]
                                   //
                                   // SAR 8955609 - Load taxed prices fetched from reprice cache to grid
                                   If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                                        GC Taxed Unit Price [TUPRC] = VA evt_mnTaxedUnitPrice_TUPRC [TUPRC]
                                        GC Taxed Extended Price [TAEXP] = VA evt_mnTaxedExtPrice_TAEXP [TAEXP]
                                        GC Unit Tax Amount [UTA] = VA evt_mnUnitTaxAmt_UTA [UTA]
                                        GC Extended Tax Amount [ETA] = VA evt_mnExtTaxAmt_ETA [ETA]
                                        GC Foreign Taxed Unit Price [TFUP] = VA evt_mnForTaxedUnitPrice_TFUP [TFUP]
                                        GC Foreign Taxed Extended Price [TFEA] = VA evt_mnForTaxedExtPrice_TFEA [TFEA]
                                        GC Foreign Unit Tax Amount [FUTA] = VA evt_mnForUnitTaxAmt_FUTA [FUTA]
                                        GC Foreign Extended Tax Amount [FETA] = VA evt_mnForExtTaxAmt_FETA [FETA]
                                        //
                                        // Also load the Record Written to WF flag if using taxed prices because
                                        // B4500542 may change the flag value when repricing for taxed orders.
                                        VA grd_EV18_UpdatedtoDetailWF [EV18] = VA evt_cTempRecdWrittenToWF_EV01 [EV01]
                                   End If
                                   //
                                   VA grd_DETD_Detached_Adjustment [DETD] = [VA grd_DETD_Detached_Adjustment [DETD]]+[VA evt_mnDetachedAdjDomestic_DETD [DETD]]
                                   VA grd_DETF_Foreign_Detached_Adj [DETF] = [VA grd_DETF_Foreign_Detached_Adj [DETF]]+[VA evt_mnDetachedAdjForeign_DETF [DETF]]
                              Else
                                   ! Get Grid Row(FC Grid, VA evt_mnGridRowCounter)
                                   GC Order Repriced Indicator [ORP] = VA evt_cOrderRepIndicator_ORP [ORP]
                                   // SAR 8311364 - Remove previous free good line or order adjustment line.
                                   If VA evt_cR42750FromScratch_EV01 [EV01] is equal to "1"
                                        If VA grd_SO08_Price_Adj_Line [SO08] is equal to "5"
                                        And VA evt_cR42750PreserveFG_EV01 [EV01] is not equal to "1"
                                        Or GC Last Stat [LTTR] is equal to "920"
                                             Delete Grid Row(FC Grid, VA evt_mnGridRowCounter)
                                             VA frm_mnNumGridRows [MATH01] = [VA frm_mnNumGridRows [MATH01]]-1
                                             VA evt_mnGridRowCounter [MATH01] = [VA evt_mnGridRowCounter [MATH01]]-1
                                        End If
                                   End If
                              End If
                         End If
                    End If
                    //
                    If VA evt_cLoopMode_EV01 [EV01] is not equal to "A"
                         Enable Control(HC Cancel R&eprice)
                    End If
                    //
                    If VA frm_cFreeGoodExitEnabled_EV01 [EV01] is equal to "1"
                         Enable Control(HC Free G&ood Catalog)
                    End If
                    //
                    If SL CurrencyProcessing is equal to "N"
                    Or FC Mode (F) [CRRM] is equal to "D"
                         VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Unit Price [UPRC]
                         VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Extended Price [AEXP]
                         // SAR 8955603 - Store the saved taxed prices for order line
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Taxed Unit Price [TUPRC]
                              VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Taxed Extended Price [TAEXP]
                         End If
                    Else
                         VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Foreign Unit Price [FUP]
                         VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Foreign Extended Price [FEA]
                         // SAR 8955603 - Store the saved taxed prices for order line
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Foreign Taxed Unit Price [TFUP]
                              VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Foreign Taxed Extended Price [TFEA]
                         End If
                    End If
                    //
               End If
               // Retrieve next reprice cache record
               // SAR 8311356 - Retrieve alph flag to the event variable instead of GC ALPH -
               // SO Detail Flags
               // SAR 8311364 - Pass back cUpdatetoDetailWF
               // SAR 8955609 - Pass back taxed prices
               CacheProcessRepriceCache(B4500541.CacheProcessRepriceCache)
                    FI Computerid [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    FI mnProcessID [PEID] -> mnProcessID [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    <Blank> -> szOrderSuffix [SFXO]
                    VA evt_mnLineNumber_LNID [LNID] <- mnLineNumber [LNID]
                    VA evt_cInsertCode_EV01 [EV01] <- cInsertCode [EV01]
                    VA evt_mnUnitPrice_UPRC [UPRC] <- mnUnitPrice [UPRC]
                    VA evt_mnForeignUnitPrice_FUP [FUP] <- mnForeignUnitPrice [FUP]
                    VA evt_mnExtendedPrice_AEXP [AEXP] <- mnAmountExtendedPrice [AEXP]
                    VA evt_mnForeignExtPrice_FEA [FEA] <- mnAmountForeignExtPrice [FEA]
                    VA evt_mnUndoUnitPrice_UPRC [UPRC] <- mnPreviousUnitPrice [UPRC]
                    VA evt_mnUndoForeignUnitPrice_FUP [FUP] <- mnPreviousForUnitPrice [FUP]
                    VA evt_mnUndoExtendedPrice_AEXP [AEXP] <- mnPreviousExtPrice [AEXP]
                    VA evt_mnUndoForeignExtPrice_FEA [FEA] <- mnPreviousForeignExtPrice [FEA]
                    VA evt_cOrderRepIndicator_ORP [ORP] <- cOrderRepricedIndicator [ORP]
                    VA evt_cTempRecdWrittenToWF_EV01 [EV01] <- cUpdatetoDetailWF [EV15]
                    VA evt_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnF42UI11WFLineNo [LNIX]
                    VA frm_AREV_mnRevision_Level [AREV] <- mnAdjustmentRevisionLevel [AREV]
                    VA evt_szUnitOfMeasure_UOM [UOM] <- szTransactionUOM [UOM]
                    VA evt_szLineType_LNTY [LNTY] <- szLineType [LNTY]
                    VA evt_mnDetachedAdjDomestic_DETD [DETD] <- mnDetachedAdjDomestic [DETD]
                    VA evt_mnDetachedAdjForeign_DETF [DETF] <- mnDetachedAdjForeign [DETF]
                    VA evt_szCostCenter_MCU [MCU] <- szCostCenter [MCU]
                    VA evt_cPreprocessorCalled_EV01 [EV01] <- cAPChangedYN [EV01]
                    VA evt_idRepriceCachePtr_GENLNG [GENLNG] <> idCachePtr [GENLNG]
                    VA evt_szPriceAdjustmentSch_ASN [ASN] <- szPriceAdjustmentScheduleN [ASN]
                    VA evt_cUndoOrderRepIndicator_ORP [ORP] <- cUndoRepriceIndicator [ORP]
                    VA evt_cCacheErrorCode_EV01 [EV01] <- cCacheErrorCode [EV01]
                    "8" -> nNumberOfKeys [INT01]
                    "1" -> cSuppressErrorMessage [EV01]
                    "6" -> cCacheActionCode [ACTN]
                    VA evt_mnUndoRevisionLevel_AREV [AREV] <- mnUndoRevisionLevel [AREV]
                    "1" -> cSequentialFetch [EV01]
                    VA evt_szBasketRepriceGroup_RPRC [RPRC] <- szRepriceBasketPriceCat [RPRC]
                    VA evt_szOrderRepriceGroup_ORPR [ORPR] <- szOrderRepriceCategory [ORPR]
                    VA evt_szDescription_DESC [DESC] <- szDescription [DESC]
                    VA evt_mnIdentifier2ndItem_LITM [LITM] <- szIdentifier2ndItem [LITM]
                    VA evt_cLineRepriced_EV01 [EV01] <- cLineRepriced [EV01]
                    VA evt_szSODetailFlags_ALPH [ALPH] <- szSalesOrderFlags [ALPH]
                    VA evt_mnTaxedUnitPrice_TUPRC [TUPRC] <- mnTaxedUnitPrice [TUPRC]
                    VA evt_mnTaxedExtPrice_TAEXP [TAEXP] <- mnTaxedExtendedPrice [TAEXP]
                    VA evt_mnUnitTaxAmt_UTA [UTA] <- mnUnitTaxAmount [UTA]
                    VA evt_mnExtTaxAmt_ETA [ETA] <- mnExtendedTaxAmount [ETA]
                    VA evt_mnForTaxedUnitPrice_TFUP [TFUP] <- mnForeignTaxedUnitPrice [TFUP]
                    VA evt_mnForTaxedExtPrice_TFEA [TFEA] <- mnForeignTaxedExtendedPrice [TFEA]
                    VA evt_mnForUnitTaxAmt_FUTA [FUTA] <- mnForeignUnitTaxAmount [FUTA]
                    VA evt_mnForExtTaxAmt_FETA [FETA] <- mnForeignExtendedTaxAmount [FETA]
               // SAR 6663171- increment the grid row counter
               VA evt_mnGridRowCounter [MATH01] = [VA evt_mnGridRowCounter [MATH01]]+1
          End While
     End If
End If
// Terminate Cache
CacheProcessRepriceCache(B4500541.CacheProcessRepriceCache)
     FI Computerid [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     FI mnProcessID [PEID] -> mnProcessID [PEID]
     FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     "8" -> cCacheActionCode [ACTN]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Freight Information
Event: Button Clicked
Event GUID: 278ade32-199c-11d2-9a79-0000f64da757
=============================================
F4215EditDoc(N4900010.F4215EditDoc)
     FI Jobnumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cSuppressErrorMessages [EV01]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cErrorCode [ERRC]
// Begin SAR 5096566 - ADD
If PO szP4915Vers [VL16] is equal to <Blank>
Or PO szP4915Vers [VL16] is equal to <NULL>
     PO szP4915Vers [VL16] = "ZJDE0001"
End If
// End  SAR 5096566 - ADD
// 
// Begin SAR 5096566 - Change
// SAR 8942576 - Pass in the Order Company in order to retrieve Routing
// Options for the correct Shipment
Call App:P4915 Form:W4915O Version:PO szP4915Vers
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FI Jobnumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "0" -> cRoutingOptionsExit [EV01]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
// End SAR 5096566 - Change


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Routing Options
Event: Button Clicked
Event GUID: b0b0efd1-5879-11d2-9acb-0000f64da757
=============================================
//  
// ************************************************************************
// SAR 2907298
// ************************************************************************
//  
! Call App:P4980 Form:W4980A Version: 
!      FI Jobnumber [JOBS] <> mnTransportationJobNumber [JOBS]
!      UNDEFINED <> mnShipmentNumber [SHPN]
!      UNDEFINED <> mnRoutingStepNumber [RSSN]
!      UNDEFINED <> mnLoadNumber [LDNM]
!      UNDEFINED <> szPlanningDepot [VMCU]
!      UNDEFINED <> szModeOfTransport [MOT]
!      UNDEFINED <> mnCarrier [CARS]
!      UNDEFINED <> jdDatePromisedShipment [PPDJ]
!      UNDEFINED <> jdDatePromisedDelivery [RSDJ]
!      UNDEFINED <> mnDistance [DSTN]
!      UNDEFINED <> szUnitofMeasureDistance [UMD1]
!      UNDEFINED <> cSelectedFlag [EV01]
F4215EditDoc(N4900010.F4215EditDoc)
     FI Jobnumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cSuppressErrorMessages [EV01]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cErrorCode [ERRC]
// SAR 8942576 - Pass in the Order Company in order to retrieve Routing
// Options for the correct Shipment
Call App:P4915 Form:W4915O Version:ZJDE0001
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FI Jobnumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cRoutingOptionsExit [EV01]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Header Attachments
Event: Button Clicked
Event GUID: e3c1aed0-eb68-11d2-9b2a-00105a1c004a
=============================================
VA frm_Generic_Text_EV01 [EV01] = <Blank>
// 
// SAR 8455659 - Copy the Media text from the Original Sales order, if the
// current Sales order is not having the Media text and Original Sales order
// is having the Media text
If SV Form_ Mode is equal to CO COPY_MODE
     If PO cCopyTextOption [EV16] is equal to "2"
     Or PO cCopyTextOption [EV16] is equal to "3"
          // SAR 8455659 - Check whether the Current Salse order is having the Media
          // Text or not
          Media Object Structures(GT4201A, <Default Media Object>,  <Exist>, VA frm_Generic_Text_EV01, FC Order Number, FC Order Type, FC Order Company)
          If VA frm_Generic_Text_EV01 [EV01] is not equal to "1"
               // SAR 8455659 - Check whether the Original Salse order is having the Media
               // Text or not
               Media Object Structures(GT4201A, <Default Media Object>, <Exist>, VA frm_Generic_Text_EV01, FI DocumentOrderInvoiceE, FI OrderType, FI CompanyKeyOrderNo)
               If VA frm_Generic_Text_EV01 [EV01] is equal to "1"
                    ProcessGenericText(B4208410.ProcessGenericText)
                         FC Order Number [DOCO] -> mnDocOrderInvoiceF4201_DOCO [DOCO]
                         FC Order Type [DCTO] -> szOrderTypeF4201_DCTO [DCTO]
                         FC Order Company [KCOO] -> szCompanyKeyOrderNoF4201_KCOO [KCOO]
                         VA frm_OORN_Original_Order_No [OORN] -> szOriginalPoSoNumberF4201_OORN [OORN]
                         FI OrderType [DCTO] -> szOriginalOrderTypeF4201_OCTO [OCTO]
                         FI CompanyKeyOrderNo [KCOO] -> szCompanyKeyOriginalF4201_OKCO [OKCO]
                         "H" -> cFile_EV01 [EV01]
                         "C" -> cMode_EV01 [EV01]
               End If
          End If
     End If
End If
// 
Media Object Structures(GT4201A, <Default Media Object>, <Edit>, <First Text Item>, VA frm_Generic_Text_EV01, FC Order Number, FC Order Type, FC Order Company)
// *************************************************************************
// SAR 3011549 - Begin ADD
// *************************************************************************
If VA frm_Generic_Text_EV01 [EV01] is equal to "1"
     VA frm_cHeaderText_ATXT [ATXT] = "Y"
Else
     VA frm_cHeaderText_ATXT [ATXT] = <Blank>
End If
// SAR 3011549 - End ADD


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Transaction Control
Event: Button Clicked
Event GUID: a251adc1-43fb-11d2-af8d-0000f6783f07
=============================================
// 
If VA frm_CTID_Computer_ID [CTID] is equal to <Blank>
Or VA frm_CTID_Computer_ID [CTID] is equal to <NULL>
     GetLocalComputerId(B9800181.GetLocalComputerId)
          VA frm_CTID_Computer_ID [CTID] <- szMachineKey [MKEY]
End If
// 
If FC Order Number [DOCO] is equal to "0"
     F4201GetOrderNoFromNextNumber(B4200030.F4201GetOrderNoFromNextNumber)
          FC Order Number [DOCO] <- mnOrderNumber [DOCO]
          UNDEFINED <> mnNextNoIndex [ORNN]
          FC Order Company [KCOO] -> szKeyCompany [KCOO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Date [TRDJ] -> jdTransactionDate [TRDJ]
          UNDEFINED <> mnCentury [CTRY]
          UNDEFINED <> mnFiscalYear [FY]
End If
// 
If VA frm_TRNK_szTransactionKey [TRNK] is equal to <Blank>
Or VA frm_TRNK_szTransactionKey [TRNK] is equal to <NULL>
     ConvertOrderTransactionKey(B4001060.ConvertOrderTransactionKey)
          VA frm_TRNK_szTransactionKey [TRNK] <- szTransactionKey [TRNK]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKey [KCOO]
          UNDEFINED <> szOrderSuffix [SFXO]
          UNDEFINED <> szEditedTransactionKey [TRNK]
          UNDEFINED <> cSeparator [SEP]
          "0" -> cConversionMode [MODE]
End If
// 
VA frm_TRNY_szTransactionType [TRNY] = "ZS"
Call App:P0041Z1 Form:W0041Z1B Version: 
     "EP4210" -> ProgramId [PID]
     VA frm_TRNK_szTransactionKey [TRNK] -> Transactionkey [TRNK]
     VA frm_TRNY_szTransactionType [TRNY] -> Transactiontype [TRNY]
     "0" -> Transactioncontrolnumber [TRNM]
     VA frm_CTID_Computer_ID [CTID] -> Computerid [CTID]
     VA frm_USER_User_ID [USER] -> Userid [USER]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Prepayment
Event: Button Clicked
Event GUID: c6a2d270-c61c-11d2-9b07-00105a1c0024
=============================================
// SAR 6904772 Begin
// =======================================================
// SAR  8972753 - SOM Taxed Unit Price
// Pass Use Taxed Price flag and Retrieve from Cache Flag to
// P004201 Prepayments application
// =======================================================
If VA frm_cOrderPromisingStateFlag [EV01] is equal to "1"
     Call App:P004201 Form:W004201B Version:Undefined
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          "000" -> szOrderSuffix [SFXO]
          "01" -> szPrepaymentOriginationFlag [POF]
          VA frm_SavedJobNumberForOP [JOBS] -> mnJobnumberA [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          VA frm_cPrepaymentWindowCalledYN [EV01] <- PrepaymentWindowCalledYN [EV01]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
          VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCacheOrWF [EV02]
Else
     Call App:P004201 Form:W004201B Version:Undefined
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          "000" -> szOrderSuffix [SFXO]
          "01" -> szPrepaymentOriginationFlag [POF]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          VA frm_cPrepaymentWindowCalledYN [EV01] <- PrepaymentWindowCalledYN [EV01]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
          VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCacheOrWF [EV02]
End If
// SAR 6904772 End


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Free Good Catalog
Event: Button Clicked
Event GUID: 7a6792e6-3615-4907-8892-c32682d4e96f
=============================================
// SAR 5136951
// SAR 8889895  Passing P4210 Version Info
Call App:P45731 Form:W45731A Version:Undefined
     FI Computerid [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Order Date [TRDJ] -> jdDateEffectiveJulian1 [EFTJ]
     VA frm_szVersion_VERS [VERS] -> szVersion [VERS]
     FI mnProcessID [PEID] -> mnProcessID [PEID]
     FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     "S" -> FormCalledFromOrderEntry [EV01]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Cancel Order Reprice
Event: Button Clicked
Event GUID: f57df169-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_MATH09_CurrentGridRow_2 [MATH09]
evt_OGNO_OriginalLineNumber [OGNO]
evt_mnFGWorkFileLineNbr [LNIX]
evt_szErrorMessage [DTAI]
evt_mnFGParentWFLineNo [SLNE]
evt_GENLNG_F45UI73hRequest [GENLNG]
evt_GENLNG_F45UI73hRequest1 [GENLNG]
evt_cSalesOrderStatus08 [SO08]
evt_szFreeGoodCatalogName [CATLG]
evt_cMatrixParentItem_EV01 [EV01]
evt_cKitComponent_EV01 [EV01]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 3735660                   VK6272082                 03/25/00
//
// If EV01_CancelBasketFreeGoods is equal to '1', this button has been pressed

// rom Reprice Orders.  We need to clear all of the free goods added from basket
// rders before doing the reprice.  We also do not want to clear the Free Good

// ache for the basket free goods.
//
// SAR 2825313
// sar 5899422-Removed the IF condition
VA frm_cCancelReprice [VC01B] = "Y"
VA frm_mnCurrentGridRow [MATH01] = "1"
Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_mnNumGridRows [MATH01]
     Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
     //
     // SAR 8704344 - Do not Process Kit Component Lines for Cancel Reprice as they
     // are not included in Repricing Calculation (Bypassed in B4500542).
     VA evt_cKitComponent_EV01 [EV01] = "0"
     If GC Kit Master Line No [KTLN] is not equal to "0"
     And GC Related Kit Cpnt [RKIT] is equal to "0"
          VA evt_cKitComponent_EV01 [EV01] = "1"
     End If
     // SAR# 8891741 -Don't Process MatrixParent Item for cancel Reprice.
     VA evt_cMatrixParentItem_EV01 [EV01] = "0"
     If GC Line Number [LNID] is equal to GC Matrix Control Line Number [MCLN]
          VA evt_cMatrixParentItem_EV01 [EV01] = "1"
     End If
     // SAR# 8891741-Don't Process Matrix Parent Item
     If VA evt_cKitComponent_EV01 [EV01] is not equal to "1"
     And VA evt_cMatrixParentItem_EV01 [EV01] is not equal to "1"
          //
          // SAR 5451257
          If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
               GC % Profit Margin [PRMG] = "0"
          End If
          //
          // Cancel basket level adjustments.
          //
          ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
               GC CLVL-PC Lev (wf) [CLVL] -> szGenericString [DSC1]
               VA frm_AREV_mnRevision_Level [AREV] <- mnNumericValue [ITM]
               UNDEFINED <> cErrorCode [ERRC]
          // Check to see if line has been basket repriced during current order entry
          // session.
          If VA grd_VC01B_Line_Repriced [VC01B] is equal to "Y"
               // SAR 2825313
               // sar 5899422-Removed the IF condition
               If VA grd_PRN_Undo_Rep_Rev_Lvl [PRN] is equal to VA frm_AREV_mnRevision_Level [AREV]
                    GC Unit Price [UPRC] = VA grd_UPAX_Undo_Reprice_UP [UPAX]
                    GC Foreign Unit Price [FUP] = VA grd_PRIC_Undo_Reprice_Foreign [PRIC]
                    // SAR 2695504
                    GC Extended Price [AEXP] = VA grd_mnUndoRepriceExtended_AEXP [AEXP]
                    GC Foreign Extended Price [FEA] = VA grd_mnUndoReprcExtForeign_FEA [FEA]
                    //
                    // SAR 8955609 - Restore saved taxed prices and tax amounts
                    If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                         GC Taxed Unit Price [TUPRC] = VA grd_mnUndoTaxedUnitPrice_TUPRC [TUPRC]
                         GC Foreign Taxed Unit Price [TFUP] = VA grd_mnUndoForTaxedUnitPri_TFUP [TFUP]
                         GC Taxed Extended Price [TAEXP] = VA grd_mnUndoTaxedExtPrice_TAEXP [TAEXP]
                         GC Foreign Taxed Extended Price [TFEA] = VA grd_mnUndForTaxedExtPrice_TFEA [TFEA]
                         GC Unit Tax Amount [UTA] = VA grd_mnUndoUnitTaxAmt_UTA [UTA]
                         GC Foreign Unit Tax Amount [FUTA] = VA grd_mnUndoForUnitTaxAmt_FUTA [FUTA]
                         GC Extended Tax Amount [ETA] = VA grd_mnUndoExtTaxAmt_ETA [ETA]
                         GC Foreign Extended Tax Amount [FETA] = VA grd_mnUndoFoExtTaxAmt_FETA [FETA]
                    End If
                    //
                    // SAR 3735660 BEGIN
                    GC Order Repriced Indicator [ORP] = VA grd_VC01A_Undo_Rep_Ind [VC01A]
                    // SAR 3735660 BEGIN
                    // Delete basket group adjustments from F40UI74
                    F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                         "3" -> cActionCode [ACTN]
                         "2" -> cFromPrimaryFile [EV01]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerIdPrimary [CTID]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNoPrimaryWF [XLIN]
                         FC Order Number [DOCO] -> mnDocNoPrimary [DOCO]
                         FC Order Type [DCTO] -> szDocTypePrimary [DCTO]
                         FC Order Company [KCOO] -> szKeyCoPrimary [KCOO]
                         GC Line Number [LNID] -> mnLineNoPrimaryFile [LNID]
                         UNDEFINED <> cSumPrimaryFile [EV02]
                         UNDEFINED <> mnUnitPricePrimary [UPRC]
                         UNDEFINED <> mnForeignPricePrimary [FUP]
                         UNDEFINED <> cToSecondaryFile [EV03]
                         UNDEFINED <> szComputerIdSecondary [CTID]
                         UNDEFINED <> mnLineNoSecondaryWF [XLIN]
                         UNDEFINED <> szDocTypeSecondary [OCTO]
                         UNDEFINED <> szKeyCoSecondary [OKCO]
                         UNDEFINED <> mnLineNoSecondaryFile [OGNO]
                         UNDEFINED <> cSumSecondaryFile [EV04]
                         UNDEFINED <> mnUnitPriceSecondary [UPRC]
                         UNDEFINED <> mnForeignPriceSecondary [FUP]
                         "1" -> cSuppressErrors [EV05]
                         UNDEFINED <> szErrorMessageId [DTAI]
                         UNDEFINED <> mnDocNoSecondary [DOCO]
                         FI Jobnumber [JOBS] -> mnJobNoPrimary [JOBS]
                         UNDEFINED <> mnJobNoSecondary [JOBS]
                         VA frm_AREV_mnRevision_Level [AREV] -> mnAdjRevisionLvlPrimary [AREV]
                         UNDEFINED <> mnAdjRevisionLvlSecondary [AREV]
                         "8" -> cNumPrimaryKeys [EV06]
                         UNDEFINED <> mnSumDetachedPrimary [UPR2]
                         UNDEFINED <> mnFrgnSumDetachedPrimary [FUP]
                         UNDEFINED <> cNumSecondaryKeys [EV07]
                         UNDEFINED <> mnSumDetachedSecondary [UPR3]
                         UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
                         UNDEFINED <> mnUnitCostPrimary [UNCS]
                         UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
                         UNDEFINED <> mnUnitCostSecondary [UNCS]
                         UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
                         UNDEFINED <> szProgramId [PID]
                         "2" -> cAdjustmentTypePrimary [OLVL]
                         UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
                         UNDEFINED <> cProcessingMode [EV01]
                         FI mnProcessID [PEID] <> mnProcessIDPrimary [PEID]
                         FI mnTransactionID [TCID] <> mnTransactionIDPrimary [TCID]
                         UNDEFINED <> mnProcessIDSecondary [PEID]
                         UNDEFINED <> mnTransactionIDSecondary [TCID]
                         UNDEFINED <> szOrderSuffixPrimary [SFXO]
                         UNDEFINED <> szOrderSuffixSecondary [SFXO]
                         UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
                         UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
                         UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
                         UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
                         UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
                         UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
                         UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
                         UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
                         UNDEFINED <> mnTierPrimary [TIER]
                         UNDEFINED <> mnTierSecondary [TIER]
                         UNDEFINED <> cIncludeOrExcludeCode [INX]
                         UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
                         UNDEFINED <> szCurrencyCodeFrom [CRCD]
                         UNDEFINED <> szCurrencyCodeTo [CRDC]
                         UNDEFINED <> mnTriangulationRateFrom [TRR1]
                         UNDEFINED <> mnTriangulationRateTo [TRR2]
                         UNDEFINED <> cCurrencyConversionMethod [CRCM]
                         UNDEFINED <> mnCurrencyConverRate [CRR]
                    // SAR 6672191- Recalculate the price history
                    F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                         "0" -> cActionCode [ACTN]
                         "2" -> cFromPrimaryFile [EV01]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerIdPrimary [CTID]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNoPrimaryWF [XLIN]
                         FC Order Number [DOCO] -> mnDocNoPrimary [DOCO]
                         FC Order Type [DCTO] -> szDocTypePrimary [DCTO]
                         FC Order Company [KCOO] -> szKeyCoPrimary [KCOO]
                         GC Line Number [LNID] -> mnLineNoPrimaryFile [LNID]
                         "2" -> cSumPrimaryFile [EV02]
                         "1" -> cSuppressErrors [EV05]
                         FI Jobnumber [JOBS] -> mnJobNoPrimary [JOBS]
                         VA frm_AREV_mnRevision_Level [AREV] -> mnAdjRevisionLvlPrimary [AREV]
                         FI mnProcessID [PEID] <> mnProcessIDPrimary [PEID]
                         FI mnTransactionID [TCID] <> mnTransactionIDPrimary [TCID]
               Else
                    If VA grd_PRN_Undo_Rep_Rev_Lvl [PRN] is equal to "0"
                    And VA frm_AREV_mnRevision_Level [AREV] is equal to "1"
                         GC Unit Price [UPRC] = VA grd_UPAX_Undo_Reprice_UP [UPAX]
                         GC Foreign Unit Price [FUP] = VA grd_PRIC_Undo_Reprice_Foreign [PRIC]
                         // SAR 2695504
                         GC Extended Price [AEXP] = VA grd_mnUndoRepriceExtended_AEXP [AEXP]
                         GC Foreign Extended Price [FEA] = VA grd_mnUndoReprcExtForeign_FEA [FEA]
                         //
                         // SAR 8955609 - Restore saved taxed prices and tax amounts
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              GC Taxed Unit Price [TUPRC] = VA grd_mnUndoTaxedUnitPrice_TUPRC [TUPRC]
                              GC Foreign Taxed Unit Price [TFUP] = VA grd_mnUndoForTaxedUnitPri_TFUP [TFUP]
                              GC Taxed Extended Price [TAEXP] = VA grd_mnUndoTaxedExtPrice_TAEXP [TAEXP]
                              GC Foreign Taxed Extended Price [TFEA] = VA grd_mnUndForTaxedExtPrice_TFEA [TFEA]
                              GC Unit Tax Amount [UTA] = VA grd_mnUndoUnitTaxAmt_UTA [UTA]
                              GC Foreign Unit Tax Amount [FUTA] = VA grd_mnUndoForUnitTaxAmt_FUTA [FUTA]
                              GC Extended Tax Amount [ETA] = VA grd_mnUndoExtTaxAmt_ETA [ETA]
                              GC Foreign Extended Tax Amount [FETA] = VA grd_mnUndoFoExtTaxAmt_FETA [FETA]
                         End If
                         //
                         //      This was a hidden grid field. There shouldn't be a QBE line for it.
                         //
                         // Copy F4074 records back to F40UI74.
                         F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                              "2" -> cActionCode [ACTN]
                              "1" -> cFromPrimaryFile [EV01]
                              UNDEFINED <> szComputerIdPrimary [CTID]
                              UNDEFINED <> mnLineNoPrimaryWF [XLIN]
                              FC Order Number [DOCO] -> mnDocNoPrimary [DOCO]
                              FC Order Type [DCTO] -> szDocTypePrimary [DCTO]
                              FC Order Company [KCOO] -> szKeyCoPrimary [KCOO]
                              GC Line Number [LNID] -> mnLineNoPrimaryFile [LNID]
                              UNDEFINED <> cSumPrimaryFile [EV02]
                              UNDEFINED <> mnUnitPricePrimary [UPRC]
                              UNDEFINED <> mnForeignPricePrimary [FUP]
                              "2" -> cToSecondaryFile [EV03]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerIdSecondary [CTID]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNoSecondaryWF [XLIN]
                              FC Order Type [DCTO] -> szDocTypeSecondary [OCTO]
                              FC Order Company [KCOO] -> szKeyCoSecondary [OKCO]
                              GC Line Number [LNID] -> mnLineNoSecondaryFile [OGNO]
                              UNDEFINED <> cSumSecondaryFile [EV04]
                              UNDEFINED <> mnUnitPriceSecondary [UPRC]
                              UNDEFINED <> mnForeignPriceSecondary [FUP]
                              "1" -> cSuppressErrors [EV05]
                              UNDEFINED <> szErrorMessageId [DTAI]
                              FC Order Number [DOCO] -> mnDocNoSecondary [DOCO]
                              UNDEFINED <> mnJobNoPrimary [JOBS]
                              FI Jobnumber [JOBS] -> mnJobNoSecondary [JOBS]
                              UNDEFINED <> mnAdjRevisionLvlPrimary [AREV]
                              VA frm_AREV_mnRevision_Level [AREV] -> mnAdjRevisionLvlSecondary [AREV]
                              UNDEFINED <> cNumPrimaryKeys [EV06]
                              UNDEFINED <> mnSumDetachedPrimary [UPR2]
                              UNDEFINED <> mnFrgnSumDetachedPrimary [FUP]
                              UNDEFINED <> cNumSecondaryKeys [EV07]
                              UNDEFINED <> mnSumDetachedSecondary [UPR3]
                              UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
                              UNDEFINED <> mnUnitCostPrimary [UNCS]
                              UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
                              UNDEFINED <> mnUnitCostSecondary [UNCS]
                              UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
                              UNDEFINED <> szProgramId [PID]
                              UNDEFINED <> cAdjustmentTypePrimary [OLVL]
                              UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
                              UNDEFINED <> cProcessingMode [EV01]
                              UNDEFINED <> mnProcessIDPrimary [PEID]
                              UNDEFINED <> mnTransactionIDPrimary [TCID]
                              FI mnProcessID [PEID] <> mnProcessIDSecondary [PEID]
                              FI mnTransactionID [TCID] <> mnTransactionIDSecondary [TCID]
                              UNDEFINED <> szOrderSuffixPrimary [SFXO]
                              UNDEFINED <> szOrderSuffixSecondary [SFXO]
                              UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
                              UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
                              UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
                              UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
                              UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
                              UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
                              UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
                              UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
                              UNDEFINED <> mnTierPrimary [TIER]
                              UNDEFINED <> mnTierSecondary [TIER]
                              UNDEFINED <> cIncludeOrExcludeCode [INX]
                              UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
                              UNDEFINED <> szCurrencyCodeFrom [CRCD]
                              UNDEFINED <> szCurrencyCodeTo [CRDC]
                              UNDEFINED <> mnTriangulationRateFrom [TRR1]
                              UNDEFINED <> mnTriangulationRateTo [TRR2]
                              UNDEFINED <> cCurrencyConversionMethod [CRCM]
                              UNDEFINED <> mnCurrencyConverRate [CRR]
                    End If
               End If
               // SAR 3364791 Begin
               If SL CurrencyProcessing is equal to "N"
               Or FC Mode (F) [CRRM] is equal to "D"
                    VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Unit Price [UPRC]
                    VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Extended Price [AEXP]
                    // SAR 8955603 - Store the saved taxed prices for order line
                    If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                         VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Taxed Unit Price [TUPRC]
                         VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Taxed Extended Price [TAEXP]
                    End If
               Else
                    VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Foreign Unit Price [FUP]
                    VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Foreign Extended Price [FEA]
                    // SAR 8955603 - Store the saved taxed prices for order line
                    If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                         VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Foreign Taxed Unit Price [TFUP]
                         VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Foreign Taxed Extended Price [TFEA]
                    End If
               End If
               // SAR 3364791 End
               //
               // SAR 3735660 BEGIN - Deleted code below and moved/modified to include order
               // adjustment free goods
               //
               // -----------------------------------------------------------------------------
               // SAR 3735660 END
               // -----------------------------------------------------------------------------
               //
               // SAR 2825313
               // sar 5899422-Removed the IF condition
               VA grd_VC01B_Line_Repriced [VC01B] = "N"
               //
               // SAR 3735660 BEGIN
          Else
               If VA grd_LineEvaluatedforReprice [EV01] is equal to "Y"
                    GC Order Repriced Indicator [ORP] = VA grd_VC01A_Undo_Rep_Ind [VC01A]
               End If
               // SAR 3735660 END
               //
          End If
          // SAR 2825313
          // sar 5899422-Removed the IF condition
          //
          // Cancel order level adjustments.
          //
          If GC Last Stat [LTTR] is equal to "920"
          And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to or empty <Blank>
                    VA grd_EV18_UpdatedtoDetailWF [EV18] = "8"
                    Hide Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               Else
                    // SAR 3011549 - Begin/End CHANGE
                    // SAR 3406866, Pass inout  PEID and TCID
                    // Begin SAR 5507169 - Disable F4211 Edit Line and Add Press Button(Delete Lines
                    Press Button(FC Delete Lines)
                    // SAR 5958269 - Decrease the current grid row count by 1 if a row is actually
                    // deleted instead of hidden.
                    VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]-1
               End If
          End If
          // SAR 8704344 - End If - Kit component
     End If
     // SAR 5899422-Deleted the free good logic and added it below
     VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
     // SAR 5958269
     If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "1"
          Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
     End If
End While
// sar 5899422- Begin Free Good Logic
F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
     "2" -> cFile [EV01]
     "5" -> cAction [EV02]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobNo [JOBS]
     VA evt_mnFGWorkFileLineNbr [LNIX] <- mnWFLineNo [LNIX]
     FC Order Number [DOCO] -> mnOrderNo [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCo [KCOO]
     UNDEFINED <> mnParentLineNo [OGNO]
     UNDEFINED <> mnLineNo [LNID]
     UNDEFINED <> sz2ndItemNo [LITM]
     UNDEFINED <> mnQtyShipped [SOQS]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> cFreeGoodType [FGTY]
     "1" -> cSuppressErrorMsg [EV03]
     VA evt_szErrorMessage [DTAI] <- szErrorMsgId [DTAI]
     VA evt_GENLNG_F45UI73hRequest [GENLNG] <> idhCursor [GENLNG]
     UNDEFINED <> mnRelatedPrice [RPRI]
     UNDEFINED <> mnRelatedItemNo [ITMR]
     UNDEFINED <> szLineType [LNTY]
     UNDEFINED <> mnUnitCost [UNCS]
     UNDEFINED <> szGLClass [GLC]
     VA evt_mnFGParentWFLineNo [SLNE] <- mnParentWFLineNo [RLLN]
     UNDEFINED <> cCurrencyMode [CRMD]
     "5" -> cNumKeys [EV04]
     UNDEFINED <> mnUnitsTransactionQty [UORG]
     UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
     UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
     UNDEFINED <> szFreeGoodCatalogName [CATLG]
     UNDEFINED <> szPriceAdjustmentType [AST]
     UNDEFINED <> cItemSelected [EV01]
     UNDEFINED <> cSubledgerInformation [SBIF]
     UNDEFINED <> cProcessingMode [MODE]
     VA evt_cSalesOrderStatus08 [SO08] <- cSalesOrderStatus08 [SO08]
While VA evt_szErrorMessage [DTAI] is less than or equal to <Blank>
     If VA evt_cSalesOrderStatus08 [SO08] is equal to "5"
          // Edit Line Call to Bypass free good line
          F4211FSEditLine(B4200310.F4211FSEditLine)
               FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
               "B" -> cCMLineAction [ACTN]
               "1" -> cCMProcessEdits [EV01]
               VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
               "1" -> cCMRecdWrittenToWF [EV04]
               VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
               UNDEFINED <> cCMErrorConditions [ERRC]
               FC Order Company [KCOO] -> szOrderCo [KCOO]
               FC Order Number [DOCO] -> mnOrderNo [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               "0" -> mnLineNo [LNID]
               UNDEFINED <> szBusinessUnit [MCU]
               UNDEFINED <> mnShipToNo [SHAN]
               UNDEFINED <> jdRequestedDate [DRQJ]
               UNDEFINED <> jdPromisedDate [PDDJ]
               UNDEFINED <> jdCancelDate [CNDJ]
               UNDEFINED <> jdPromisedDlvryDate [RSDJ]
               UNDEFINED <> szItemNo [UITM]
               UNDEFINED <> szLocation [LOCN]
               UNDEFINED <> szLotNo [LOTN]
               UNDEFINED <> szDescription1 [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> szLineType [LNTY]
               UNDEFINED <> szLastStatus [LTTR]
               UNDEFINED <> szNextStatus [NXTR]
               UNDEFINED <> mnQtyOrdered [UORG]
               UNDEFINED <> mnQtyShipped [SOQS]
               UNDEFINED <> mnQtyBackordered [SOBK]
               UNDEFINED <> mnQtyCanceled [SOCN]
               UNDEFINED <> mnUnitPrice [UPRC]
               UNDEFINED <> mnExtendedPrice [AEXP]
               UNDEFINED <> mnUnitCost [UNCS]
               UNDEFINED <> mnExtendedCost [ECST]
               UNDEFINED <> szPrintMesg [INMG]
               UNDEFINED <> cPaymentInstrument [RYIN]
               UNDEFINED <> szAdjustmentSchedule [ASN]
               UNDEFINED <> cSalesTaxableYN [TAX1]
               UNDEFINED <> cAssociatedText [ATXT]
               UNDEFINED <> szTransactionUOM [UOM]
               UNDEFINED <> szPricingUOM [UOM4]
               UNDEFINED <> mnItemWeight [ITWT]
               UNDEFINED <> szWeightUOM [WTUM]
               UNDEFINED <> mnForeignUnitPrice [FUP]
               UNDEFINED <> mnForeignExtPrice [FEA]
               UNDEFINED <> mnForeignUnitCost [FUC]
               UNDEFINED <> mnForeignExtCost [FEC]
               UNDEFINED <> szPricingCategoryLevel [CLVL]
               UNDEFINED <> mnDiscountFactor [DSPR]
               VA evt_mnFGWorkFileLineNbr [LNIX] -> mnCMLineNo [XLIN]
               UNDEFINED <> szCMProgramID [JPID]
               UNDEFINED <> szCMVersion [VERS]
               UNDEFINED <> mnSupplierNo [VEND]
               UNDEFINED <> szRelatedKitItemNo [RLIT]
               UNDEFINED <> mnKitMasterLineNo [KTLN]
               UNDEFINED <> mnComponentLineNo [CPNT]
               UNDEFINED <> mnRelatedKitComponent [RKIT]
               UNDEFINED <> mnNoOfCpntPerParent [KTP]
               UNDEFINED <> cOverridePrice [PROV]
               UNDEFINED <> cOverrideCost [CSTO]
               UNDEFINED <> szUserID [USER]
               UNDEFINED <> jdDateUpdated [UPMJ]
               UNDEFINED <> mnWKOrderTotal [OTOT]
               UNDEFINED <> mnWKForeignOrderTotal [FAP]
               UNDEFINED <> mnWKTotalCost [TOTC]
               UNDEFINED <> mnWKForeignTotalCost [FCST]
               UNDEFINED <> cWKProcessingType [EV05]
               UNDEFINED <> cWKSourceOfData [EV06]
               UNDEFINED <> cWKCheckAvailability [EV07]
               UNDEFINED <> mnLastLineNoAssigned [LNIX]
               UNDEFINED <> cStockingType [STKT]
               UNDEFINED <> szOriginalOrderKeyCo [OKCO]
               UNDEFINED <> szOriginalOrderNo [OORN]
               UNDEFINED <> szOriginalOrderType [OCTO]
               UNDEFINED <> mnOriginalOrderLineNo [OGNO]
               UNDEFINED <> cParentItmMethdOfPriceCalcn [PMTH]
               UNDEFINED <> szLandedCost [PRP5]
               UNDEFINED <> mnWKSuppressProcess [MATH01]
               UNDEFINED <> mnShortItemNo [ITM]
               UNDEFINED <> mnWKRelatedOrderProcess [MATH02]
               UNDEFINED <> mnSODLineNo [EDLN]
               UNDEFINED <> mnPriceAdjRevLevel [AREV]
               UNDEFINED <> szSalesOrderFlags [ALPH]
               UNDEFINED <> mnSODDocNo [EDOC]
               UNDEFINED <> szSODDocType [EDCT]
               UNDEFINED <> szSODOrderCo [EKCO]
               UNDEFINED <> szTransferOrderToBranch [TMCU]
               UNDEFINED <> mnDomesticDetachedAdj [DETD]
               UNDEFINED <> mnForeignDetachedAdj [DETF]
               UNDEFINED <> mnSODWFLineNo [DOC]
               UNDEFINED <> szGeneric2CharString [DCT]
               UNDEFINED <> mnTOEPOExchangeRate [CRRD]
               UNDEFINED <> szTOEPOCurrencyCode [CRCE]
               UNDEFINED <> mnDRPKeyId [UKID]
               UNDEFINED <> mnSoldToCust [AN8]
               UNDEFINED <> szF4201BranchPlant [EMCU]
               UNDEFINED <> szSoldToCurrencyCode [CRCD]
               UNDEFINED <> cConsolidationFlag [EV08]
               UNDEFINED <> jdPriceEffectiveDate [PEFJ]
               UNDEFINED <> mnWOWFLineNo [LNIX]
               UNDEFINED <> mnLineNoIncrement [LINN]
               UNDEFINED <> mnParentWFLineNo [SLNE]
               UNDEFINED <> cStatusInWarehouse [SWMS]
               UNDEFINED <> cBypassCommitments [EV09]
               UNDEFINED <> szProductSource [PSR]
               UNDEFINED <> szProductSourceType [PSRY]
               UNDEFINED <> mnSequenceNumber [SEQ]
               UNDEFINED <> szAgreementNumber [DMCT]
               UNDEFINED <> mnAgreementSupplement [DMCS]
               UNDEFINED <> mnAgreementsFound [AFND]
               UNDEFINED <> szModeOfTransport [MOT]
               UNDEFINED <> szDutyStatus [DTYS]
               UNDEFINED <> szLineofBusiness [LOB]
               UNDEFINED <> jdPromisedShip [LOAD]
               UNDEFINED <> szEndUse [EUSE]
               UNDEFINED <> szPriceCode1 [UPC1]
               UNDEFINED <> szPriceCode2 [UPC2]
               UNDEFINED <> szPriceCode3 [UPC3]
               UNDEFINED <> szItemFlashMessage [IFLA]
               UNDEFINED <> szCompanyKeyRelated [RKCO]
               UNDEFINED <> szRelatedPoSoNumber [RORN]
               UNDEFINED <> szRelatedOrderType [RCTO]
               UNDEFINED <> mnRelatedPoSoLineNo [RLLN]
               UNDEFINED <> cGenericChar3 [EV02]
               UNDEFINED <> mnProfitMargin [PRMG]
               UNDEFINED <> mnQuantityAvailable [QAVAL]
               UNDEFINED <> cRequestScheduleFlag [SO13]
               UNDEFINED <> cOrderProcessType [EV05]
               UNDEFINED <> cGenericChar2 [EV10]
               UNDEFINED <> mnSODRelatedJobNumber [MATH10]
               UNDEFINED <> szGenericString [DL01]
               UNDEFINED <> mnCarrier [CARS]
               UNDEFINED <> szGenericString2_DL02 [DL02]
               UNDEFINED <> mnGenericMathNumeric1_MATH01 [MATH01]
               UNDEFINED <> mnGenericMathNumeric2_MATH02 [MATH02]
               UNDEFINED <> mnItemVolume_ITVL [ITVL]
               UNDEFINED <> szVolumeUOM_VLUM [VLUM]
               UNDEFINED <> szRevenueBusinessUnit [EMCU]
               UNDEFINED <> szCustomerPO_VR01 [VR01]
               UNDEFINED <> szReference2Vendor_VR02 [VR02]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
               UNDEFINED <> cPaymentTermsOverride [PMTO]
               UNDEFINED <> cBasedonDate [DTBS]
               UNDEFINED <> mnRequestedDeliveryTime [DRQT]
               UNDEFINED <> szReleaseNumber [RLNU]
               UNDEFINED <> mnPromisedPickTime [PDTT]
               UNDEFINED <> mnTimeOriginalPromised [OPTT]
               UNDEFINED <> mnActualShipmentTime [ADTM]
               UNDEFINED <> mnScheduledShipmnentTime [PMDT]
               UNDEFINED <> mnTimeFuture2 [PSTM]
               UNDEFINED <> szPortOfEntryExit [POE]
               UNDEFINED <> szBuyingSegmentCode [BSC]
               UNDEFINED <> mnBatchQtyInBOM [BQTY]
               UNDEFINED <> szSOEMBFInternalFlags [SOEF]
               UNDEFINED <> mnDualQuantity [SQOR]
               UNDEFINED <> szDualUOM [UOM2]
               UNDEFINED <> mnMatrixControlLineNo [MCLN]
               UNDEFINED <> szPromotionID [PMTN]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> mnOverrideForeignBasePrice [OVFBPRC]
               UNDEFINED <> mnOverrideBasePrice [OVBPRC]
               UNDEFINED <> mnListPrice [LPRC]
               UNDEFINED <> mnForeignListPrice [FPRC]
               UNDEFINED <> mnTotalQuantityFG [MATH01]
               UNDEFINED <> cCrossDockFlagYN [XDCK]
               UNDEFINED <> mnAddressNumberDeliveredTo [DVAN]
               UNDEFINED <> szListPriceUoM [APUM]
               UNDEFINED <> mnDescTaskOrderNumber [DOCO]
               UNDEFINED <> szDescTaskOrderType [DCTO]
               UNDEFINED <> szGlClass [GLC]
               UNDEFINED <> mnAmountPOCost [ECST]
               UNDEFINED <> mnTransferCost [ECST]
               UNDEFINED <> mnPromisedDeliveryTime [RSDT]
          // Delete the F45UI73 cache record
          F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
               "2" -> cFile [EV01]
               "4" -> cAction [EV02]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA evt_mnFGWorkFileLineNbr [LNIX] -> mnWFLineNo [LNIX]
               FC Order Number [DOCO] -> mnOrderNo [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCo [KCOO]
               UNDEFINED <> mnParentLineNo [OGNO]
               UNDEFINED <> mnLineNo [LNID]
               UNDEFINED <> sz2ndItemNo [LITM]
               UNDEFINED <> mnQtyShipped [SOQS]
               UNDEFINED <> szUnitOfMeasure [UOM]
               UNDEFINED <> cFreeGoodType [FGTY]
               "1" -> cSuppressErrorMsg [EV03]
               VA evt_szErrorMessage [DTAI] <- szErrorMsgId [DTAI]
               UNDEFINED <> idhCursor [GENLNG]
               UNDEFINED <> mnRelatedPrice [RPRI]
               UNDEFINED <> mnRelatedItemNo [ITMR]
               UNDEFINED <> szLineType [LNTY]
               UNDEFINED <> mnUnitCost [UNCS]
               UNDEFINED <> szGLClass [GLC]
               VA evt_mnFGParentWFLineNo [SLNE] -> mnParentWFLineNo [RLLN]
               UNDEFINED <> cCurrencyMode [CRMD]
               "5" -> cNumKeys [EV04]
               UNDEFINED <> mnUnitsTransactionQty [UORG]
               UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
               UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
               UNDEFINED <> szFreeGoodCatalogName [CATLG]
               UNDEFINED <> szPriceAdjustmentType [AST]
               UNDEFINED <> cItemSelected [EV01]
               UNDEFINED <> cSubledgerInformation [SBIF]
               UNDEFINED <> cProcessingMode [MODE]
               UNDEFINED <> cSalesOrderStatus08 [SO08]
     End If
     // Fetch the next cache record
     F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
          "2" -> cFile [EV01]
          "5" -> cAction [EV02]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          VA evt_mnFGWorkFileLineNbr [LNIX] <- mnWFLineNo [LNIX]
          FC Order Number [DOCO] -> mnOrderNo [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCo [KCOO]
          UNDEFINED <> mnParentLineNo [OGNO]
          UNDEFINED <> mnLineNo [LNID]
          UNDEFINED <> sz2ndItemNo [LITM]
          UNDEFINED <> mnQtyShipped [SOQS]
          UNDEFINED <> szUnitOfMeasure [UOM]
          UNDEFINED <> cFreeGoodType [FGTY]
          "1" -> cSuppressErrorMsg [EV03]
          VA evt_szErrorMessage [DTAI] <- szErrorMsgId [DTAI]
          VA evt_GENLNG_F45UI73hRequest [GENLNG] <> idhCursor [GENLNG]
          UNDEFINED <> mnRelatedPrice [RPRI]
          UNDEFINED <> mnRelatedItemNo [ITMR]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> mnUnitCost [UNCS]
          UNDEFINED <> szGLClass [GLC]
          VA evt_mnFGParentWFLineNo [SLNE] <- mnParentWFLineNo [RLLN]
          UNDEFINED <> cCurrencyMode [CRMD]
          "5" -> cNumKeys [EV04]
          UNDEFINED <> mnUnitsTransactionQty [UORG]
          UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
          UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
          UNDEFINED <> szFreeGoodCatalogName [CATLG]
          UNDEFINED <> szPriceAdjustmentType [AST]
          UNDEFINED <> cItemSelected [EV01]
          UNDEFINED <> cSubledgerInformation [SBIF]
          UNDEFINED <> cProcessingMode [MODE]
          VA evt_cSalesOrderStatus08 [SO08] <- cSalesOrderStatus08 [SO08]
End While
// sar 5899422-End Free Good Logic
// SAR 2825313
// 5899422-Remove IF condition
VA frm_cCancelReprice [VC01B] = "N"
Disable Control(HC Cancel R&eprice)
// 5899422-Check to see if the Free goods Catalog exit needs to be
// enabled/disabled
VA frm_cFreeGoodExitEnabled_EV01 [EV01] = "0"
VA evt_szErrorMessage [DTAI] = <NULL>
Disable Control(HC Free G&ood Catalog)
F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
     "2" -> cFile [EV01]
     "5" -> cAction [EV02]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobNo [JOBS]
     VA evt_mnFGWorkFileLineNbr [LNIX] <- mnWFLineNo [LNIX]
     FC Order Number [DOCO] -> mnOrderNo [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCo [KCOO]
     UNDEFINED <> mnParentLineNo [OGNO]
     UNDEFINED <> mnLineNo [LNID]
     UNDEFINED <> sz2ndItemNo [LITM]
     UNDEFINED <> mnQtyShipped [SOQS]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> cFreeGoodType [FGTY]
     "1" -> cSuppressErrorMsg [EV03]
     VA evt_szErrorMessage [DTAI] <- szErrorMsgId [DTAI]
     VA evt_GENLNG_F45UI73hRequest1 [GENLNG] <> idhCursor [GENLNG]
     UNDEFINED <> mnRelatedPrice [RPRI]
     UNDEFINED <> mnRelatedItemNo [ITMR]
     UNDEFINED <> szLineType [LNTY]
     UNDEFINED <> mnUnitCost [UNCS]
     UNDEFINED <> szGLClass [GLC]
     VA evt_mnFGParentWFLineNo [SLNE] <- mnParentWFLineNo [RLLN]
     UNDEFINED <> cCurrencyMode [CRMD]
     "5" -> cNumKeys [EV04]
     UNDEFINED <> mnUnitsTransactionQty [UORG]
     UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
     UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
     VA evt_szFreeGoodCatalogName [CATLG] <- szFreeGoodCatalogName [CATLG]
     UNDEFINED <> szPriceAdjustmentType [AST]
     UNDEFINED <> cItemSelected [EV01]
     UNDEFINED <> cSubledgerInformation [SBIF]
     UNDEFINED <> cProcessingMode [MODE]
     VA evt_cSalesOrderStatus08 [SO08] <- cSalesOrderStatus08 [SO08]
While VA evt_szErrorMessage [DTAI] is less than or equal to <Blank>
     If VA frm_cFreeGoodExitEnabled_EV01 [EV01] is not equal to "1"
          If VA evt_szFreeGoodCatalogName [CATLG] is not equal to <Blank>
               Enable Control(HC Free G&ood Catalog)
               VA frm_cFreeGoodExitEnabled_EV01 [EV01] = "1"
          Else
               Disable Control(HC Free G&ood Catalog)
               VA frm_cFreeGoodExitEnabled_EV01 [EV01] = "0"
          End If
          If VA frm_cFreeGoodExitEnabled_EV01 [EV01] is not equal to "1"
               F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                    "2" -> cFile [EV01]
                    "5" -> cAction [EV02]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                    VA evt_mnFGWorkFileLineNbr [LNIX] <- mnWFLineNo [LNIX]
                    FC Order Number [DOCO] -> mnOrderNo [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szOrderCo [KCOO]
                    UNDEFINED <> mnParentLineNo [OGNO]
                    UNDEFINED <> mnLineNo [LNID]
                    UNDEFINED <> sz2ndItemNo [LITM]
                    UNDEFINED <> mnQtyShipped [SOQS]
                    UNDEFINED <> szUnitOfMeasure [UOM]
                    UNDEFINED <> cFreeGoodType [FGTY]
                    "1" -> cSuppressErrorMsg [EV03]
                    VA evt_szErrorMessage [DTAI] <- szErrorMsgId [DTAI]
                    VA evt_GENLNG_F45UI73hRequest1 [GENLNG] <> idhCursor [GENLNG]
                    UNDEFINED <> mnRelatedPrice [RPRI]
                    UNDEFINED <> mnRelatedItemNo [ITMR]
                    UNDEFINED <> szLineType [LNTY]
                    UNDEFINED <> mnUnitCost [UNCS]
                    UNDEFINED <> szGLClass [GLC]
                    VA evt_mnFGParentWFLineNo [SLNE] <- mnParentWFLineNo [RLLN]
                    UNDEFINED <> cCurrencyMode [CRMD]
                    "5" -> cNumKeys [EV04]
                    UNDEFINED <> mnUnitsTransactionQty [UORG]
                    UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
                    UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
                    VA evt_szFreeGoodCatalogName [CATLG] <- szFreeGoodCatalogName [CATLG]
                    UNDEFINED <> szPriceAdjustmentType [AST]
                    UNDEFINED <> cItemSelected [EV01]
                    UNDEFINED <> cSubledgerInformation [SBIF]
                    UNDEFINED <> cProcessingMode [MODE]
                    VA evt_cSalesOrderStatus08 [SO08] <- cSalesOrderStatus08 [SO08]
          End If
     End If
End While
//
VA frm_mnCurrentGridRow [MATH01] = "1"
Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
// // SAR 8480571 Add condition to check Line type , If line type is blank
// then delete the row, otherwise show it .
While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_mnNumGridRows [MATH01]
     Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
     If GC Item Number [UITM] is equal to or empty <Blank>
     And GC Ln Ty [LNTY] is equal to <Blank>
          Delete Grid Row(FC Grid, VA frm_mnCurrentGridRow)
          Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
          VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]-1
     End If
     VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
End While
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Delete All Lines and Exit
Event: Button Clicked
Event GUID: d2c5ba71-1ceb-4fd9-9ec9-0b290a3ee0a2
=============================================
// 
// SAR 6131571
// 
VA frm_cWasOkButtonPressed_EV01 [EV01] = <Blank>
// 
Call App:P4210 Form:W4210C Version:Undefined
     VA frm_cWasOkButtonPressed_EV01 [EV01] <- cIsOkclicked [EV01]
// 

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Delete All Lines and Exit
Event: Post Button Clicked
Event GUID: d43c1c13-97cb-4ac3-bb7c-6f13f534ddc5
=============================================
// 
If VA frm_cWasOkButtonPressed_EV01 [EV01] is equal to "1"
     // SAR 6131571
     // ---------------------------------------------------------------------------
     // CRM CSS - Allow in UPDATE mode also
     // ---------------------------------------------------------------------------
     If FI Jobnumber [JOBS] is not equal to "0"
          If PO cShoppingCartMode [CART] is greater than <Blank>
               If SV Form_ Mode is equal to CO ADD_MODE
               Or SV Form_ Mode is equal to CO UPDATE_MODE
                    F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         "0" -> mnFromLineNo [LNID]
                         "0" -> mnThruLineNo [LNID]
                         VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
                         VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
                         "EP4210" -> szProgramID [PID]
                         VA frm_MATH01_Related_Proc_Flag [MATH01] <- mnWKRelatedOrderProcess [MATH02]
                         VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                         UNDEFINED <> cGenericChar1_EV01 [EV01]
                         UNDEFINED <> cGenericChar2_EV02 [EV02]
                         UNDEFINED <> szGenericString1_DL01 [DL01]
                         UNDEFINED <> mnSODRelatedJobNumber [MATH01]
                         FI mnProcessID [PEID] -> mnProcessID [PEID]
                         FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
                         VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
                         UNDEFINED <> szVersion [VERS]
                         FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                         UNDEFINED <> szCostCenter [MCU]
                         UNDEFINED <> mnAddressNumberShipTo [SHAN]
                         "D" -> cActionCode [ACTN]
                         UNDEFINED <> mnAddressNumberParent [PA8]
                         UNDEFINED <> mnSoldToAddressNumber [AN8]
                         VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
                         UNDEFINED <> mnLineNumIncrement [LINN]
                         UNDEFINED <> cPreviousSessionFound [EV01]
                         UNDEFINED <> cGenericChar_EV01 [EV01]
                         UNDEFINED <> szGenericString_DL01 [DL01]
                         UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
                         UNDEFINED <> szUserReservedCode [URCD]
                         UNDEFINED <> mnUserReservedAmount [URAT]
                         UNDEFINED <> jdUserReservedDate [URDT]
                         UNDEFINED <> mnUserReservedNumber [URAB]
                         UNDEFINED <> szUserReservedReference [URRF]
                         UNDEFINED <> szShipToStructureType [OSTP]
                         UNDEFINED <> szBaseCurrencyCode [CRDC]
                         UNDEFINED <> szCustomerCurrencyCode [CRCD]
                    Press Button(HC Cancel/Close)
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Regional Information
Event: Button Clicked
Event GUID: 63b1d073-f9b6-4f16-8261-993638742e07
=============================================
// SAR 7260251 - Localization for Russia
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "XI4" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_EV01_NewRecords [EV01] -> cNewRecords [EV01]
     VA frm_EV22_cCacheOn [EV22] -> cTableCache [EV02]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_mnLocJobNumber_JOBS [JOBS] -> mnLocJobNumber [JOBS]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Sales Order Entry using Collection Templates
Event: Button Clicked
Event GUID: cb7eaa0f-7da0-45d5-bb8d-775214386d2f
=============================================
// SAR 8953108 - Apparel Enhancement
// Display the Collection Template Search & Select for the user to select the
// template. If template is selected, then call Apparel Matrix Entry (PCW10)
//
Call App:PCW43 Form:WCW43A Version:Undefined
     VA frm_szCollectiTemplName_C9MOSA [C9MOSA] <- szC9MOSA-Collection_Modele [C9MOSA]
//
If VA frm_szCollectiTemplName_C9MOSA [C9MOSA] is greater than <Blank>
     VA frm_cApprlPressButtonMode_EV01 [EV01] = "2"
     Press Button(FC CallApparelMatrixEntry)
     VA frm_cCollTemplatesDone_EV01 [EV01] = <NULL>
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Service Level Rules
Event: Button Clicked
Event GUID: b84340e1-0bbb-4e13-907f-e3650e3a4e15
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idB4200310CacheHand_GENLNG [GENLNG]
evt_szComputerID_CTID [CTID]
----------------------------------------
VA evt_idB4200310CacheHand_GENLNG [GENLNG] = "0"
VA evt_szComputerID_CTID [CTID] = <NULL>
Clear Control Error(HC Service &Level Rules)
Clear Control Error(HC Service Level &Rules)
//
If VA frm_szComputerID_CTID [CTID] is greater than <Blank>
     VA evt_szComputerID_CTID [CTID] = VA frm_CTID_Computer_ID [CTID]
Else
     VA evt_szComputerID_CTID [CTID] = FI Computerid [CTID]
End If
//
//    Get Sales Order Header Cache
RetrieveF42UI01Pointer(B4208010.RetrieveF42UI01Pointer)
     VA frm_EV22_cCacheOn [EV22] -> cCacheOrWorkfile [EV01]
     "1" -> nIndexID [INT01]
     VA evt_idB4200310CacheHand_GENLNG [GENLNG] <- idF42UI01Pointer [GENLNG]
     VA evt_szComputerID_CTID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     "1" -> cSuppressErrorMessages [SUPP]
//
//     If Header Cache does not exist then call Begin Doc - B4200310
If VA evt_idB4200310CacheHand_GENLNG [GENLNG] is less than or equal to "0"
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA evt_szComputerID_CTID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
          VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
          VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
Else
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA evt_idB4200310CacheHand_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If
//
Call App:P4277711 Form:W4277711A Version:Undefined
     FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKey [KCOO]
     FI Computerid [CTID] -> szComputerID [CTID]
     "2" -> nOrderOrLine [INT01]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC  
Event: Button Clicked
Event GUID: 99157340-ac9e-4993-852c-9fffcb1cf67b
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idB4200310CacheHndl_GENLNG [GENLNG]
evt_szP49T10ErrorID_DTAI [DTAI]
evt_szB49T1050ErrorID_DTAI [DTAI]
evt_szB49T1020ErrorID_DTAI [DTAI]
evt_szComputerID_CTID [CTID]
evt_cModeProcessing_MODE [MODE]
----------------------------------------
//
// ---------------------------------------------------------------------------
//    SAR 8538278 - 9.0 OTM Rate Shopping Enhancement
// ---------------------------------------------------------------------------
Clear Control Error(HC Rate Sho&pping)
Clear Control Error(HC Rate Shop&ping)
//
If VA frm_szComputerID_CTID [CTID] is greater than <Blank>
     VA evt_szComputerID_CTID [CTID] = VA frm_szComputerID_CTID [CTID]
Else
     VA evt_szComputerID_CTID [CTID] = FI Computerid [CTID]
End If
//
//    Get Sales Order Header Cache
RetrieveF42UI01Pointer(B4208010.RetrieveF42UI01Pointer)
     VA frm_EV22_cCacheOn [EV22] -> cCacheOrWorkfile [EV01]
     "1" -> nIndexID [INT01]
     VA evt_idB4200310CacheHndl_GENLNG [GENLNG] <- idF42UI01Pointer [GENLNG]
     VA evt_szComputerID_CTID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     "1" -> cSuppressErrorMessages [SUPP]
//
//     If Header Cache does not exist then call Begin Doc - B4200310
If VA evt_idB4200310CacheHndl_GENLNG [GENLNG] is less than or equal to "0"
     // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
     // SAR 8955612 - Passed variable BeginDocSOEMBFFlag to BeginDoc
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA evt_szComputerID_CTID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
          VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
          VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
Else
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA evt_idB4200310CacheHndl_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If
//
If FI Jobnumber [JOBS] is greater than "0"
     UploadSOLinesForRateShopping(B49T1050.UploadSOLinesForRateShopping)
          "0" -> cSuppressErrorMessage_SUPPS [SUPPS]
          VA evt_szB49T1050ErrorID_DTAI [DTAI] <- szErrorMessageID_DTAI [DTAI]
          VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF_EV01 [EV01]
          VA evt_szComputerID_CTID [CTID] -> szComputerID_CTID [CTID]
          FI Jobnumber [JOBS] -> mnCacheJobNumber_JOBS [JOBS]
          <Blank> -> szSessionKey_SNKY [SNKY]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF_LNIX [LNIX]
          FC Order Number [DOCO] -> mnOrderNumber_DOCO [DOCO]
          FC Order Type [DCTO] -> szOrderType_DCTO [DCTO]
          FC Order Company [KCOO] -> szOrderCompany_KCOO [KCOO]
          GC Line Number [LNID] -> mnLineNumber_LNID [LNID]
          "000" -> szOrderSuffix_SFXO [SFXO]
     //
     RSQueryCacheFetch(B49T1020.RSQueryCacheFetch)
          "1" -> nIndexNumber [INT01]
          "1" -> nNumberOfKeys [INT02]
          "0" -> cReturnCursor [EV01]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA evt_szB49T1020ErrorID_DTAI [DTAI] <- szErrorMessageID [DTAI]
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
     If VA evt_szB49T1020ErrorID_DTAI [DTAI] is less than or equal to <Blank>
          Call App:P49T15 Form:W49T15B Version:Undefined
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               SL UserID -> szUserID [USER]
     End If
     //
     //    Open Rate Inquiry and Result Selection interface
     Call App:P49T10 Form:W49T10A Version:Undefined
          FI Jobnumber [JOBS] -> mnCacheJobNumber [JOBS]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          "000" -> szOrderSuffix [SFXO]
          FC Address Number [AN8] -> mnCustomerNumber [AN8]
          FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          FC Exchange Rate [CRR] -> mnCurrencyConverRateOv [CRR]
          VA evt_cModeProcessing_MODE [MODE] <- cModeProcessing [MODE]
     //
     // SAR 8921951 - Do not set this error.  It is not possible to correct it, and
     // therefore this design weakness has been communicated via documentation.
     ! If VA evt_cModeProcessing_MODE [MODE] is equal to "1"
          ! Set Control Error(HC Rate Shop&ping, "49T221")
     ! End If
     //
End If
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Sales Order Entry
Event: Button Clicked
Event GUID: f4f35401-1e45-11d2-9a82-0000f64da757
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_FormCancelled [CYN]
evt_cRevisionMade_EV01 [EV01]
evt_mnWoQuantityCompleted_SOQS [SOQS]
evt_OrigScheduledPickDate_PDDJ [PDDJ]
evt_mnWODocNumber_DOCO [DOCO]
evt_DoesWOExist_ERRC [ERRC]
evt_OriginalShipTo_SHAN [SHAN]
evt_szPrevTaxArea_TXA1 [TXA1]
evt_szPrevTaxExplanationCode [EXR1]
evt_szPricingCategory_PRGR [PRGR]
evt_cSalesTaxable_TAX1 [TAX1]
----------------------------------------
//
//      If the line has not been processed by EditLine yet, then
//      the F42UI11 Work File Line No will be zero.
//      Increment the Last Line Number used by one to give
//      the Work File Line No that will be used.
//
If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
     // SAR 4155042-Begin
     If FI Jobnumber [JOBS] is less than or equal to "0"
          GetInternalNextNumber(B0000564.GetInternalNextNumber)
               FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
     End If
     GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
     VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
End If
//
//      Set Form Cancelled Flag
//
// SAR 4074701 BEGIN - Assume Cancelled
VA evt_FormCancelled [CYN] = "1"
// SAR 4074701 END
VA evt_szPricingCategory_PRGR [PRGR] = <Blank>
//
// SAR 6109543
VA evt_OrigScheduledPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
// SAR 7201358
VA evt_OriginalShipTo_SHAN [SHAN] = GC Ship To Number [SHAN]
//
// SAR 8350785 - Check for changes in the Tax Explanation Code and Tax
// Rate/Area for kits.  These changes need to be propagated to the component
// lines
// 8955603 - Check for tax field changes for taxed orders as well.
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
Or VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
     VA frm_TaxRateArea [TXA1] = GC Tax Area [TXA1]
     VA frm_TaxExplanationCode [EXR1] = GC Tax Explanation [EXR1]
     VA evt_cSalesTaxable_TAX1 [TAX1] = GC Taxable  [TAX1]
End If
//
// SAR 3494376- Added D to allow completed Orders to be viewed
// SAR 6233104 - Allow access to SOE Additional , Add mode with Errors
If VA grd_ACTI_ActionHidden [ACTI] is equal to "C"
Or VA grd_ACTI_ActionHidden [ACTI] is equal to "D"
Or VA grd_EV18_UpdatedtoDetailWF [EV18] is greater than "0"
Or VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
And VA frm_ERRC_Error_Code [ERRC] is greater than "0"
     // SAR# 4541912 Begin, Modified to pass in Detail Line BSC in to additional
     // information screen.
     // SAR# 5242682 - pass PMTN, PRJM
     VA evt_cRevisionMade_EV01 [EV01] = VA grd_ACTI_ActionHidden [ACTI]
     // SAR 5510106 - Begin/End CHANGE - Pass GLClass
     // SAR 5589272 - Begin/End CHANGE Don't pass the GL Class
     // SAR 6386961 Pass Release Number
     // SAR 8925996 - Pass out item price group
     Call App:P4210 Form:W4210B Version:VA frm_szVersion_VERS
          FC Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] <> OrderType [DCTO]
          FC Order Company [KCOO] <> CompanyKeyOrderNo [KCOO]
          GC Line Number [LNID] <> LineNumber [LNID]
          FC Address Number [AN8] <> Addressnumber [AN8]
          GC Ship To Number [SHAN] <> Addressnumbershipto [SHAN]
          GC Carrier Number [CARS] <> Carrier [CARS]
          GC Unit Weight [ITWT] <> Amountunitweight [ITWT]
          GC Wt U/M [WTUM] <> Weightunitofmeasure [WTUM]
          GC Unit Volume [ITVL] <> Amountunitvolume [ITVL]
          GC Vol U/M [VLUM] <> Volumeunitofmeasure [VLUM]
          GC Request Date [DRQJ] <> Daterequestedjulian [DRQJ]
          GC Sched Pick [PDDJ] <> ScheduledPickDate [PDDJ]
          GC Promised Delivery [RSDJ] <> PromisedDeliveryDate [RSDJ]
          GC Cancel Date [CNDJ] <> Canceldate [CNDJ]
          FC Order Date [TRDJ] <> Datetransactionjulian [TRDJ]
          GC Taxable  [TAX1] <> Taxableyn [TAX1]
          GC Tax Area [TXA1] <> Taxarea1 [TXA1]
          GC Tax Explanation [EXR1] <> Taxexplantationcode1 [EXR1]
          GC Adj. Schedule [ASN] <> Priceadjustmentschedulen [ASN]
          VA evt_szPricingCategory_PRGR [PRGR] <- Pricingcategory [PRGR]
          GC Pay Inst [RYIN] <> Paymentinstrumenta [RYIN]
          GC Print Message [INMG] <> Printmessage1 [INMG]
          GC OKCO- Doc Co (wf) [OKCO] <> Companykeyoriginal [OKCO]
          GC Original Order No [OORN] <> Originalposonumber [OORN]
          GC Orig Ord Type [OCTO] <> Originalordertype [OCTO]
          GC Original Line Number [OGNO] <> Originallinenumber [OGNO]
          VA grd_szRelatedCompany_RKCO [RKCO] <> Companykeyrelated [RKCO]
          VA grd_szRelatedOrderNumber_RORN [RORN] <> Relatedposonumber [RORN]
          VA grd_szRelatedOrderType_RCTO [RCTO] <> Relatedordertype [RCTO]
          VA grd_szRelatedLineNumber_RLLN [RLLN] <> Relatedposolineno [RLLN]
          GC Kit Master Line No [KTLN] <> Linenumberkitmaster [KTLN]
          GC Kit Cpnt Line No [CPNT] <> Componenetnumber [CPNT]
          GC Related Kit Cpnt [RKIT] <> Relatedkitcomponent [RKIT]
          GC Business Unit [MCU] <> szBusiness_Unit_F4211 [MCU]
          VA grd_ACTI_ActionHidden [ACTI] <> Actioncode [ACTI]
          VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
          FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnLineNumberXREF [LNIX]
          VA frm_EV22_cCacheOn [EV22] <> cCMUseWorkFiles [EV01]
          VA evt_FormCancelled [CYN] <> cCanceled [CYN]
          VA frm_ADVP_cAdv_Pricing [ADVP] <> cAdvancedSalesPricingYN [ADVP]
          GC Mod Trn [MOT] <> ModeofTransport [MOT]
          GC Promised Ship [PPDJ] <> jdPromisedShipDate [PPDJ]
          VA frm_cDisablePriceFields_EV01 [EV01] -> cDisablePriceFields [EV01]
          VA grd_cCrossDockFlagYN_XDCK [XDCK] <> cCrossDockFlagYN [XDCK]
          VA grd_mnCrossDokingPriority_XPTY [XPTY] <> mnCrossDockingPriority [XPTY]
          VA grd_mnCrossDockOrdeNumber_XORN [XORN] <> mnCrossDockOrderNumber [XORN]
          VA grd_szCrossDockOrderType_XCTO [XCTO] <> szCrossDockOrderType [XCTO]
          VA grd_szCrossDockCmpyKey_XKCO [XKCO] <> szCrossDockCmpyKeyOrderNo [XKCO]
          VA grd_szCrossDockOrdeSuffix_XSFX [XSFX] <> szCrossDockOrderSuffix [XSFX]
          VA grd_mnCrossDockLineNumber_XLLN [XLLN] <> mnCrossDockLineNumber [XLLN]
          VA grd_cItemCrossDockFlagYN_XDCK [XDCK] -> cItemBranckCrossDockFlag [XDCK]
          VA grd_szDetailLineBSC [BSC] -> szDetailLineBSC [BSC]
          VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
          VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
          GC Project Number [PRJM] <> mnProjectNumber [PRJM]
          VA grd_szPromotionID_PMTN [PMTN] <> szPromotionID [PMTN]
          VA frm_PromotionsSystemFlag_PRSF [PRSF] -> cPromotionsSystemFlag [PRSF]
          GC Deliver To [DVAN] <> mnDeliveredTo [DVAN]
          GC Chg Ord [CORD] -> mnChange_Order_Number_F4211 [CORD]
          GC Revision Reason [RFRV] <> szRevision_Reason_F4211 [RFRV]
          GC Pending Approval [PEND] -> cPending_Approval_Flag_F42 [PEND]
          VA evt_cRevisionMade_EV01 [EV01] <> cRevisionMade [EV01]
          VA frm_cBypassAuditLogging_EV01 [EV01] -> cBypassAuditLogging [EV01]
          FC Change Order [CORD] -> mnNextRevisionNumber [CORD]
          VA frm_cFirstRevision_EV01 [EV01] -> cFirstRevision [EV01]
          VA frm_cDisableOPBackOrderFlag [EV01] -> cDisableOPBackOrderFlag [EV01]
          VA frm_cDisableSubstituteFlag [EV01] -> cDisableOPSustituteFlag [EV01]
          VA frm_cDisableOPPartialShipFlag [EV01] -> cDisableOPPartialShipFlag [EV01]
          VA frm_cDisableOPMultiSourceFlag [EV01] -> cDisableOPMultiSourceFlag [EV01]
          GC Release Number [RLNU] <> szReleaseNumber [RLNU]
          GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
          GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
          GC Scheduled Ship Time [PMDT] <> mnScheduledShipmentTime [PMDT]
          GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
          GC Kit Component Dirty Flag [KITDIRTY] -> cKitComponentDirtyFlag [KITDIRTY]
          VA grd_cKitCompPostCutoffStatus [EV01] -> cKitCompPastCutoffStatus [EV01]
     If VA evt_cRevisionMade_EV01 [EV01] is equal to "2"
          Press Button(FC Audit Logging)
          Press Button(FC Approval)
     Else
          If VA evt_cRevisionMade_EV01 [EV01] is equal to "1"
               Press Button(FC Audit Logging)
          Else
               VA frm_cRetFromCanAddInfo_EV01 [EV01] = "1"
          End If
     End If
     // SAR 8925996 - Set internal flag 26
     If VA evt_szPricingCategory_PRGR [PRGR] is not equal to <Blank>
     And VA evt_FormCancelled [CYN] is not equal to "1"
          This enabled line failed XML conversion. Type = Business Function
     End If
     // sar 5390765
     VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
     //
     // SAR 8350785 - For kit lines, if the Tax Explanation Code or Tax Rate/Area
     // changed, set the flag to trigger the data propagation logic in EditLine
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          If VA frm_TaxRateArea [TXA1] is not equal to GC Tax Area [TXA1]
          Or VA frm_TaxExplanationCode [EXR1] is not equal to GC Tax Explanation [EXR1]
               SetTaxFieldEnteredSOEL25(B4205101.SetTaxFieldEnteredSOEL25)
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                    "1" -> cValue [EV01]
          Else
               SetTaxFieldEnteredSOEL25(B4205101.SetTaxFieldEnteredSOEL25)
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                    "0" -> cValue [EV01]
          End If
     End If
End If
//
// 8955603 - Set cTaxFieldChanged_EV01 to trigger row processing for Display
// Before Accept to have the right tax value.
If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
     If VA frm_TaxRateArea [TXA1] is not equal to GC Tax Area [TXA1]
     Or VA frm_TaxExplanationCode [EXR1] is not equal to GC Tax Explanation [EXR1]
     Or VA evt_cSalesTaxable_TAX1 [TAX1] is not equal to GC Taxable  [TAX1]
          VA frm_cTaxFieldChanged_EV01 [EV01] = "1"
     End If
End If
//
// SAR 6997307 - Run RequestDateChange logic on Hidden Button
If VA grd_PrevRequestedDate [DRQJ] is not equal to GC Request Date [DRQJ]
     Press Button(FC RequestedDate Changed)
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "0"
     End If
End If
//
// SAR 6109543 - If Scheduled Pick Date is changed from SOE Additiaonal Info
// then set CfgItemProcessed flag to trigger Configured Items window
If VA evt_OrigScheduledPickDate_PDDJ [PDDJ] is not equal to GC Sched Pick [PDDJ]
And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
          GC Related PO/SO No [RORN] -> szInputString [AA15]
          VA evt_mnWODocNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
          UNDEFINED <> cReturnedErrorCode [ERR]
     VerifyWorkOrderExists(B3100180.VerifyWorkOrderExists)
          VA evt_mnWODocNumber_DOCO [DOCO] -> mnDocumentNumber [DOCO]
          VA evt_DoesWOExist_ERRC [ERRC] <- cErrorCode [ERRC]
          UNDEFINED <> szCostCenter [MCU]
          UNDEFINED <> szSubsidiary [SUB]
          UNDEFINED <> szDocumentType [DCTO]
          UNDEFINED <> mnOrderQuantity [UORG]
          UNDEFINED <> szUnitOfMeasure [UOM]
          VA evt_mnWoQuantityCompleted_SOQS [SOQS] <- mnQuantityShipped [SOQS]
          UNDEFINED <> mnQuantityScrapped [SOCN]
     If VA evt_DoesWOExist_ERRC [ERRC] is equal to "1"
          If VA evt_mnWoQuantityCompleted_SOQS [SOQS] is equal to "0"
               VA grd_EV25_CfgItemProcessed [EV25] = "0"
          End If
     Else
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     End If
End If
//
// SAR 7201358 - If ShipTo is changed from SOE Additional Info, set
// CfgItemProcessed flag to trigger Configured item window
If VA evt_OriginalShipTo_SHAN [SHAN] is not equal to GC Ship To Number [SHAN]
And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
End If
//
// SAR 3527772
If GC Item Number [UITM] is not equal to <Blank>
And GC Item Number [UITM] is not equal to <NULL>
Or GC Description  [DSC1] is not equal to <Blank>
And GC Description  [DSC1] is not equal to <NULL>
     If VA evt_FormCancelled [CYN] is equal to "0"
          GC Source of Data [EV17] = "7"
          //
          // SAR 3616249
          If VA frm_mnCreditJobNum_JOBS [JOBS] is not equal to "0"
               VA frm_mnCreditJobNum_JOBS [JOBS] = "0"
          End If
          //
          //     Force a change on the Grid in case only those controls which
          //      are not on the Grid have been changed on the Form.
          //
     Else
          // ************************************************************************
          // SAR 2746121 - Begin/End ADD
          // Only change the Source of Data when it was not originally a 7.
          // ************************************************************************
          If GC Source of Data [EV17] is not equal to "7"
               GC Source of Data [EV17] = "6"
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Check Price and Availability
Event: Button Clicked
Event GUID: f57df5fa-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSalesOrderFlag09 [SO09]
evt_mnAdjustedUnitPrice_UPRC [UPRC]
evt_PaymentResponsibleCode_PRC [PRC]
----------------------------------------
// SAR 5160311- If an item number was not entered, then prevent the user from
// going to the Check Price and Availibility application
If GC Item Number [UITM] is not equal to <Blank>
And GC Item Number [UITM] is not equal to <NULL>
     If PO szChkPriceAvailnqVers [VL07] is equal to or empty <Blank>
     Or PO szChkPriceAvailnqVers [VL07] is equal to or empty <NULL>
          PO szChkPriceAvailnqVers [VL07] = "ZJDE0001"
     End If
     //
     RetrieveStringElement(B4002410.RetrieveStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
          "1" -> nPosition [INT01]
          VA frm_cInterBranchFlag_EV24 [EV24] <- cCharacter [EV01]
     // SAR 7012565- always send FC Business Unit to Check Price.
     // In P4074, Detail Branch will be retrieved to send to Edit Line.
     // SAR 6234676  - Use cInterbranch Flag rather than null, blank, zero check
     ! If VA frm_cInterBranchFlag_EV24 [EV24] is equal to "1"
          VA frm_szCheckPriceBranch_MCU [MCU] = FC Business Unit [MCU]
     ! Else
          ! VA frm_szCheckPriceBranch_MCU [MCU] = GC Business Unit [MCU]
     ! End If
     //
     // SAR 4369577
     If GC Kit Master Line No [KTLN] is greater than "0"
     Or GC Related Item No [RLIT] is greater than <Blank>
          VA frm_cCheckPriceOrAdjustment [EV01] = <Blank>
     Else
          VA frm_cCheckPriceOrAdjustment [EV01] = "C"
     End If
     //
     If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
          // SAR 5476673- Pass Adj.Schedule both directions for pricing
          // SAR 5559567
          // SAR 6067089 Job Number must be passed to check price
          If FI Jobnumber [JOBS] is less than or equal to "0"
               GetInternalNextNumber(B0000564.GetInternalNextNumber)
                    FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
          End If
          If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
               GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
               VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
          End If
          // SAR 8617697 : Calling PriceHistoryExit,ButtonClickedPreProcessing BSFN, to
          // get PaymentResponsibleCode. This is used to disable changes in price using
          // CheckPrice if SO is generated from SB
          If GC Orig Ord Type [OCTO] is not equal to <NULL>
               PriceHistoryButtonClickPreproc(B4504210.PriceHistoryButtonClickPreproc)
                    GC Price Over Cd [PROV] -> cPriceOverrideCode [EV01]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnWFLineNumberXREF [LNIX]
                    FI Computerid [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] -> mnPreviousWFLineNumberXREF [LNIX]
                    GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
                    VA frm_DTAI_szErrorMsgCode [DTAI] <> szErrorMsgCode [DTAI]
                    PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV01]
                    GC Related Kit Cpnt [RKIT] -> mnRelatedKitComponent [ITM]
                    PO szNonUpdatableStatus [NXT2] -> szNonUpdateableStatus [NXTR]
                    GC Next Stat [NXTR] -> szStatusCodeNext [NXTR]
                    VA evt_PaymentResponsibleCode_PRC [PRC] <- szPaymentResponsibleCode [PRC]
          End If
          //
          // SAR 8932150 - Set price history cache flag if it has not been set
          Press Button(FC Set Price History Cache Flag)
          //
          // Price Catagory Level is assigned in Check Price and Passed Back to P4210
          //
          // SAR 7482153 - calling the new form W4074D instead of the previous form
          ! Call App:P4074 Form:W4074C Version:PO szChkPriceAvailnqVers
          !      VA frm_CTID_Computer_ID [CTID] -> ComputerID [CTID]
          !      FI Jobnumber [JOBS] -> JobNumber [JOBS]
          !      VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> LineNumber2 [XLIN]
          !      FC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
          !      FC Order Type [DCTO] -> Ordertype [DCTO]
          !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
          !      GC Line Number [LNID] -> Linenumber [LNID]
          !      GC Item Number [UITM] -> Itemnounknownformat [UITM]
          !      GC Description  [DSC1] -> Descriptionline1 [DSC1]
          !      VA grd_UORG_OrigQtyOrdered [UORG] -> Unitstransactionqty [UORG]
          !      GC UM  [UOM] -> Unitofmeasureasinput [UOM]
          !      GC PR UM [UOM4] <> Unitofmeasurepricing [UOM4]
          !      FC Address Number [AN8] -> Addressnumber [AN8]
          !      GC Short Item No [ITM] -> Identifiershortitem [ITM]
          !      FC Mode (F) [CRRM] -> Currencymode [CRRM]
          !      GC Unit Price [UPRC] -> Amtpriceperunit2 [UPRC]
          !      GC Unit Price [UPRC] <- Amtlistpriceperunit [LPRC]
          !      GC Unit Cost [UNCS] -> Amountunitcost [UNCS]
          !      GC Foreign Unit Cost [FUC] -> Amountforeignunitcost [FUC]
          !      GC Quantity Shipped [SOQS] -> Unitsquantityshipped [SOQS]
          !      GC Quantity Backordered [SOBK] -> Unitsquanbackorheld [SOBK]
          !      GC Foreign Unit Price [FUP] <- Amountlistpriceforeign [FPRC]
          !      VA frm_szCheckPriceBranch_MCU [MCU] -> Costcenter [MCU]
          !      GC Lot Serial Number [LOTN] -> Lot [LOTN]
          !      GC Foreign Unit Price [FUP] -> Amtpriceperunitupr2 [UPR2]
          !      FC Currency Code [CRCD] -> Currencycodefrom [CRCD]
          !      FC To Currency Code [CRDC] -> Currencycodeto [CRDC]
          !      GC Price Over Cd [PROV] -> Priceoverridecode [PROV]
          !      GC CLVL-PC Lev (wf) [CLVL] <> Pricingcategorylevel1 [CLVL]
          !      GC Price Effective Date [PEFJ] -> Datepriceeffectivedate [PEFJ]
          !      GC Adj. Schedule [ASN] <> Priceadjustmentschedulen [ASN]
          !      FC Ship To [SHAN] -> Addressnumbershipto [SHAN]
          !      VA frm_cCheckPriceOrAdjustment [EV01] -> CheckPriceOrAdjustments [EV01]
          !      PO szChkPriceAvailnqVers [VL07] -> szVersion [VERS]
          !      VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedTotal [DETF]
          !      VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedTotal [DETD]
          !      PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
          !      GC Location  [LOCN] -> szLocation [LOCN]
          !      PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
          !      FI mnProcessID [PEID] <> mnProcess_ID_F40UI74 [PEID]
          !      FI mnTransactionID [TCID] <> mnTransaction_ID_F40UI74 [TCID]
          !      VA evt_cSalesOrderFlag09 [SO09] <- cSalesOrderStatus09 [SO09]
          !      VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          //
          // 8467473
          // Pass SO08 to price history app
          //
          Call App:P4074 Form:W4074D Version:PO szChkPriceAvailnqVers
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnWFLineNumber [XLIN]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompany [KCOO]
               VA frm_szCheckPriceBranch_MCU [MCU] -> szCostCenter [MCU]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               FC Ship To [SHAN] -> mnShipTo [SHAN]
               GC Short Item No [ITM] -> mnShortItemNo [ITM]
               GC Item Number [UITM] -> szItemUnknownFormat [UITM]
               VA grd_UORG_OrigQtyOrdered [UORG] -> mnQuantityOrdered [UORG]
               GC Quantity Shipped [SOQS] -> mnQuantityShipped [SOQS]
               GC Quantity Backordered [SOBK] -> mnQuantityBackordered [SOBK]
               GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
               GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [UPR2]
               GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
               GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
               GC Unit Price [UPRC] <- mnListPrice [LPRC]
               GC Foreign Unit Price [FUP] <- mnForeignListPrice [FPRC]
               VA grd_DETD_Detached_Adjustment [DETD] <> mnDetachedTotal [DETD]
               VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedTotal [DETF]
               PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
               PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
               GC Description  [DSC1] -> szDescriptionLine [DSC1]
               GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
               GC PR UM [UOM4] <> szUnitOfMeasurePricing [UOM4]
               VA evt_PaymentResponsibleCode_PRC [PRC] -> szPaymentResponsibiCode [PRC]
               FC Mode (F) [CRRM] -> cCurrencyMode [CRRM]
               FC Exchange Rate [CRR] -> mnCurrencyConvRate [CRR]
               FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
               FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
               GC Lot Serial Number [LOTN] -> szLot [LOTN]
               GC Location  [LOCN] -> szLocation [LOCN]
               GC Price Effective Date [PEFJ] -> jdPriceEffectiveDate [PEFJ]
               GC Price Over Cd [PROV] -> cPriceOverrideCode [PROV]
               GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel1 [CLVL]
               GC Adj. Schedule [ASN] <> szPriceAdjSchedule [ASN]
               VA frm_cCheckPriceOrAdjustment [EV01] -> cCheckPriceOrAdjustments [EV01]
               VA grd_SO08_Price_Adj_Line [SO08] -> cSOLineInfoSO08 [SO08]
               VA evt_cSalesOrderFlag09 [SO09] <- cAdjTypeAppliedSO09 [SO09]
               VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
               PO szChkPriceAvailnqVers [VL07] -> szVersion [VERS]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          // 8429741 - Set value for SalesOrderFlag09 in GC ALPH SalesOrderFlag
          If VA evt_cSalesOrderFlag09 [SO09] is not equal to <NULL>
               ChangeStringElement(B4002410.ChangeStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                    "9" -> nPosition [INT01]
                    VA evt_cSalesOrderFlag09 [SO09] -> cCharacter [EV01]
          End If
          // End SAR 8467473
          //
     Else
          // SAR 8542365: Using Foreign Unit Price or Unit Price as AdjustedUnitPrice
          // based on currency code and base currency code being same
          If FC Currency Code [CRCD] is not equal to FC To Currency Code [CRDC]
               VA evt_mnAdjustedUnitPrice_UPRC [UPRC] = [GC Foreign Unit Price [FUP]]
          Else
               VA evt_mnAdjustedUnitPrice_UPRC [UPRC] = [GC Unit Price [UPRC]]
          End If
          //
          Call App:P41261 Form:W41261A Version:Undefined
               GC Short Item No [ITM] -> Identifiershortitem [ITM]
               VA frm_szCheckPriceBranch_MCU [MCU] -> Costcenter [MCU]
               FC Address Number [AN8] -> CustomerNumber [AN8]
               VA frm_CRYR_Currency_Control [CRYR] -> CurrencyConversion [CRYR]
               FC Mode (F) [CRRM] -> Currencymode [CRRM]
               FC Currency Code [CRCD] -> CustomerCurrencyCode [CRCD]
               FC To Currency Code [CRDC] -> BranchCurrencyCode [CRDC]
               GC PR UM [UOM4] -> PricingUnitofMeasure [UOM4]
               VA evt_mnAdjustedUnitPrice_UPRC [UPRC] <> Unitpriceperprimary [PRIC]
               FC Exchange Rate [CRR] <> CurrencyConvRate [CRR]
               "1" -> CalledFromFlag [EV01]
          // SAR 8542365 Based on customer and B/P Currency code copy adjustedUnitprice
          // value to GC UnitPrice or Foreign unit Price field.
          If FC Currency Code [CRCD] is not equal to FC To Currency Code [CRDC]
               GC Foreign Unit Price [FUP] = [VA evt_mnAdjustedUnitPrice_UPRC [UPRC]]
          Else
               GC Unit Price [UPRC] = [VA evt_mnAdjustedUnitPrice_UPRC [UPRC]]
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Price History Window
Event: Button Clicked
Event GUID: f57df5fb-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_PaymentResponsibleCode_PRC [PRC]
evt_CurrencyModeCompare [CRRM]
evt_cSalesOrderFlag09 [SO09]
evt_PriceHistoryBlanketFlag [EV01]
evt_cPriceAdjHist_SO09 [SO09]
evt_cFormMode [EV01]
----------------------------------------
//                                  SAR REVISION LOG
// SAR #                         PROGRAMMER                      DATE
// 4599655                     VK6272082                        10/16/00
// 4718992                     VK6272082                        12/05/00
// 
If PO szChkPriceAvailnqVers [VL07] is equal to or empty <Blank>
Or PO szChkPriceAvailnqVers [VL07] is equal to or empty <NULL>
     PO szChkPriceAvailnqVers [VL07] = "ZJDE0001"
End If
If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
     // SAR2437847
     // SAR 5953388
     VA evt_cFormMode [EV01] = "0"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          VA evt_cFormMode [EV01] = "U"
     End If
     PriceHistoryButtonClickPreproc(B4504210.PriceHistoryButtonClickPreproc)
          GC Price Over Cd [PROV] <> cPriceOverrideCode [EV01]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnWFLineNumberXREF [LNIX]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnPreviousWFLineNumberXREF [LNIX]
          GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
          VA frm_DTAI_szErrorMsgCode [DTAI] <> szErrorMsgCode [DTAI]
          PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV01]
          GC Related Kit Cpnt [RKIT] -> mnRelatedKitComponent [ITM]
          PO szNonUpdatableStatus [NXT2] -> szNonUpdateableStatus [NXTR]
          GC Next Stat [NXTR] -> szStatusCodeNext [NXTR]
          VA evt_PaymentResponsibleCode_PRC [PRC] <> szPaymentResponsibleCode [PRC]
          VA evt_cFormMode [EV01] -> cFormMode [EV01]
          VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV01]
     // 
     // Begin SAR#  3517953 Pricing Change
     // SAR 4256871
     // SAR 4381859 Retrieve the Sales Order Status08 flag into the
     // OverridePriceF4074_ev01 variable .The override Price_ABAS is stored in  
     // SO08 Flag in P4074 to get passed into P4210 as a reprice indicator. 
     // SAR 5559567
     // 
     // SAR 7487923 - Begins
     VA frm_mnBfRowExitUnitPrice_UPRC [UPRC] = GC Unit Price [UPRC]
     // 
     // SAR 7482153 - calling the new form W4074D instead of the previous form
     // SAR 8470787 - Pass Kit Dirty flag to P4074 to prevent pricing changes on
     // dirty kits
     ! Call App:P4074 Form:W4074C Version:PO szChkPriceAvailnqVers
     !      VA frm_CTID_Computer_ID [CTID] -> ComputerID [CTID]
     !      FI Jobnumber [JOBS] <> JobNumber [JOBS]
     !      VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> LineNumber2 [XLIN]
     !      FC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     !      FC Order Type [DCTO] -> Ordertype [DCTO]
     !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     !      GC Line Number [LNID] -> Linenumber [LNID]
     !      GC Item Number [UITM] -> Itemnounknownformat [UITM]
     !      GC Description  [DSC1] -> Descriptionline1 [DSC1]
     !      VA grd_UORG_OrigQtyOrdered [UORG] -> Unitstransactionqty [UORG]
     !      GC UM  [UOM] -> Unitofmeasureasinput [UOM]
     !      GC PR UM [UOM4] -> Unitofmeasurepricing [UOM4]
     !      FC Address Number [AN8] -> Addressnumber [AN8]
     !      GC Short Item No [ITM] -> Identifiershortitem [ITM]
     !      FC Mode (F) [CRRM] -> Currencymode [CRRM]
     !      GC Unit Price [UPRC] -> Amtpriceperunit2 [UPRC]
     !      VA evt_PaymentResponsibleCode_PRC [PRC] -> PaymentResponsibiCode [PRC]
     !      GC Unit Price [UPRC] <- Amtlistpriceperunit [LPRC]
     !      GC Unit Cost [UNCS] -> Amountunitcost [UNCS]
     !      GC Foreign Unit Cost [FUC] -> Amountforeignunitcost [FUC]
     !      GC Quantity Shipped [SOQS] -> Unitsquantityshipped [SOQS]
     !      GC Quantity Backordered [SOBK] -> Unitsquanbackorheld [SOBK]
     !      GC Foreign Unit Price [FUP] <- Amountlistpriceforeign [FPRC]
     !      GC Business Unit [MCU] -> Costcenter [MCU]
     !      FC Exchange Rate [CRR] -> Currencyconverrateov [CRR]
     !      GC Lot Serial Number [LOTN] -> Lot [LOTN]
     !      GC Foreign Unit Price [FUP] -> Amtpriceperunitupr2 [UPR2]
     !      FC Currency Code [CRCD] -> Currencycodefrom [CRCD]
     !      FC To Currency Code [CRDC] -> Currencycodeto [CRDC]
     !      GC Price Over Cd [PROV] -> Priceoverridecode [PROV]
     !      GC CLVL-PC Lev (wf) [CLVL] <> Pricingcategorylevel1 [CLVL]
     !      GC Price Effective Date [PEFJ] -> Datepriceeffectivedate [PEFJ]
     !      GC Adj. Schedule [ASN] -> Priceadjustmentschedulen [ASN]
     !      FC Ship To [SHAN] -> Addressnumbershipto [SHAN]
     !      "A" -> CheckPriceOrAdjustments [EV01]
     !      VA grd_OverridePriceF4074_ev01 [EV01] <- Salesorderstatus08 [SO08]
     !      VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedTotal [DETF]
     !      VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedTotal [DETD]
     !      PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
     !      GC Location  [LOCN] -> szLocation [LOCN]
     !      PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
     !      FI mnProcessID [PEID] <> mnProcess_ID_F40UI74 [PEID]
     !      FI mnTransactionID [TCID] <> mnTransaction_ID_F40UI74 [TCID]
     !      VA evt_cSalesOrderFlag09 [SO09] <- cSalesOrderStatus09 [SO09]
     !      VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
     Call App:P4074 Form:W4074D Version:PO szChkPriceAvailnqVers
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] <> mnJobNumber [JOBS]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnWFLineNumber [XLIN]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          GC Business Unit [MCU] -> szCostCenter [MCU]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          FC Ship To [SHAN] -> mnShipTo [SHAN]
          GC Short Item No [ITM] -> mnShortItemNo [ITM]
          GC Item Number [UITM] -> szItemUnknownFormat [UITM]
          VA grd_UORG_OrigQtyOrdered [UORG] -> mnQuantityOrdered [UORG]
          GC Quantity Shipped [SOQS] -> mnQuantityShipped [SOQS]
          GC Quantity Backordered [SOBK] -> mnQuantityBackordered [SOBK]
          GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
          GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [UPR2]
          GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
          GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
          GC Unit Price [UPRC] <- mnListPrice [LPRC]
          GC Foreign Unit Price [FUP] <- mnForeignListPrice [FPRC]
          VA grd_DETD_Detached_Adjustment [DETD] <> mnDetachedTotal [DETD]
          VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedTotal [DETF]
          PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
          PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
          GC Description  [DSC1] -> szDescriptionLine [DSC1]
          GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
          GC PR UM [UOM4] -> szUnitOfMeasurePricing [UOM4]
          VA evt_PaymentResponsibleCode_PRC [PRC] -> szPaymentResponsibiCode [PRC]
          FC Mode (F) [CRRM] -> cCurrencyMode [CRRM]
          FC Exchange Rate [CRR] -> mnCurrencyConvRate [CRR]
          FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          GC Lot Serial Number [LOTN] -> szLot [LOTN]
          GC Location  [LOCN] -> szLocation [LOCN]
          GC Price Effective Date [PEFJ] -> jdPriceEffectiveDate [PEFJ]
          GC Price Over Cd [PROV] -> cPriceOverrideCode [PROV]
          GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel1 [CLVL]
          GC Adj. Schedule [ASN] -> szPriceAdjSchedule [ASN]
          "A" -> cCheckPriceOrAdjustments [EV01]
          VA grd_OverridePriceF4074_ev01 [EV01] <- cSOLineInfoSO08 [SO08]
          VA evt_cSalesOrderFlag09 [SO09] <- cAdjTypeAppliedSO09 [SO09]
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          GC Kit Component Dirty Flag [KITDIRTY] -> cPreventPriceChanges [EV01]
     // 
     If GC Unit Price [UPRC] is not equal to VA frm_mnBfRowExitUnitPrice_UPRC [UPRC]
          Press Button(FC Approval)
          Press Button(FC Audit Logging)
     End If
     // SAR 7487923 - Ends
     // 
     // SAR 5953388
     // SAR 8470787 - Skip the post-processing call for dirty kits
     If GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
          If GC Related Item No [RLIT] is less than or equal to <Blank>
          Or GC Related Kit Cpnt [RKIT] is greater than "0"
               PriceHistoryButtonClickPostproc(B4504210.PriceHistoryButtonClickPostproc)
                    GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                    GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                    GC Foreign Unit Price [FUP] <> mnForUnitPrice [FUP]
                    GC Foreign Extended Price [FEA] <> mnForExtendedPrice [FEA]
                    FC Mode (F) [CRRM] -> cCurrencyMode [CRRM]
                    VA grd_OverridePriceF4074_ev01 [EV01] <> cOverridePriceF4074 [EV01]
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    VA grd_UCSTR_Saved_Unit_Price [UCSTR] <> mnSavedUnitPrice [UCSTR]
                    VA evt_cSalesOrderFlag09 [SO09] <> cSalesOrderFlag09 [SO09]
                    VA grd_cManualAdjExists [EV01] <> cManualAdjExists [EV01]
                    UNDEFINED <> szEditLineSOEMBFFlags [SOEF]
          End If
     End If
Else
     ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
          GC CLVL-PC Lev (wf) [CLVL] -> szGenericString [DSC1]
          VA frm_AREV_mnRevision_Level [AREV] <- mnNumericValue [ITM]
          UNDEFINED <> cErrorCode [ERRC]
     Call App:P4074 Form:W4074A Version:PO szChkPriceAvailInqVers
          VA frm_CTID_Computer_ID [CTID] -> ComputerID [CTID]
          FI Jobnumber [JOBS] -> Jobnumber [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> LineNumber2 [XLIN]
          VA frm_AREV_mnRevision_Level [AREV] -> AdjustmentRevisionLevel [AREV]
          FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> OrderType [DCTO]
          FC Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
          GC Line Number [LNID] -> LineNumber [LNID]
          "0" -> SequenceNumber [OSEQ]
          FI mnProcessID [PEID] <> mnProcess_ID_F40UI74 [PEID]
          FI mnTransactionID [TCID] <> mnTransaction_ID_F40UI74 [TCID]
          UNDEFINED <> mnPriceHistoryAltKey [AKID]
          UNDEFINED <> mnTier [TIER]
          UNDEFINED <> mnSubSequenceNumber [SUBSEQ]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Supply and Demand Window
Event: Button Clicked
Event GUID: 9093317a-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_OldPickDate_PDDJ [PDDJ]
----------------------------------------
If PO szP4021Vers [VL02] is equal to or empty <Blank>
Or PO szP4021Vers [VL02] is equal to or empty <NULL>
     PO szP4021Vers [VL02] = "ZJDE0001"
End If
// 
VA evt_OldPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
Call App:P4021 Form:W4021B Version:PO szP4021Vers
     GC Business Unit [MCU] -> InputBranch [MCU]
     GC UM  [UOM] -> InputUOM [UOM]
     GC Quantity Ordered [UORG] -> InputRequestQty [TRQT]
     GC Item Number [UITM] -> InputPrimaryItem [UITM]
     GC Sched Pick [PDDJ] <> Promiseddate [PDDJ]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
If GC Sched Pick [PDDJ] is not equal to VA evt_OldPickDate_PDDJ [PDDJ]
     // SAR 8959166 Start
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
     // SAR 8959166 End
     GC Promised Ship [PPDJ] = <Blank>
     GC Promised Delivery [RSDJ] = <Blank>
     // 11836695 - Pick Date Entered flag is set as 1 if Scheduled pick date is
     // selected through supply demand inquiry (P4021) form.
     VA grd_cPickDateEntered_EV01 [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Production Allocation Window
Event: Button Clicked
Event GUID: 9093277c-a23d-11d0-a204-0000f6728a56
=============================================
VA frm_SOQS_mnShipQty [SOQS] = GC Quantity Shipped [SOQS]
VA frm_SOBK_mnBackorderQty [SOBK] = GC Quantity Backordered [SOBK]
VA frm_SOCN_mnCancelQty [SOCN] = GC Quantity Canceled [SOCN]
// 
//     Call Product Allocation Window and only update GC quantities if no error
//     so that Row is Exited and Changed will be triggered.
// 
Call App:P42131 Form:W42131A Version:Undefined
     VA frm_CTID_Computer_ID [CTID] -> ComputerID [CTID]
     FI Jobnumber [JOBS] -> JobNumber [JOBS]
     VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> LineNumber2 [XLIN]
     VA frm_SOQS_mnShipQty [SOQS] <> Unitsquantityshipped [SOQS]
     VA frm_SOBK_mnBackorderQty [SOBK] <> Unitsquanbackorheld [SOBK]
     VA frm_SOCN_mnCancelQty [SOCN] <> Unitsquantitycanceled [SOCN]
     VA frm_ERRC_Error_Code [ERRC] <- Errorcode [ERRC]
     GC Item Number [UITM] -> Itemnounknownformat [UITM]
     GC UM  [UOM] -> Unitofmeasure [UM]
If VA frm_ERRC_Error_Code [ERRC] is equal to "0"
     GC Quantity Shipped [SOQS] = VA frm_SOQS_mnShipQty [SOQS]
     GC Quantity Backordered [SOBK] = VA frm_SOBK_mnBackorderQty [SOBK]
     GC Quantity Canceled [SOCN] = VA frm_SOCN_mnCancelQty [SOCN]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Inventory Commitment Window
Event: Button Clicked
Event GUID: 90932fcd-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSourceOfData_EV17 [EV17]
----------------------------------------
// 
//   Once grade & potency is implemented - the hookups will need to be made. 
// 
Call App:P42130 Form:W42130A Version:Undefined
     GC Short Item No [ITM] -> ShortItemNumber [ITM]
     GC Business Unit [MCU] <> BranchPlant [MCU]
     GC Location  [LOCN] -> Location [LOCN]
     GC Lot Serial Number [LOTN] -> Lot [LOTN]
     VA frm_CTID_Computer_ID [CTID] -> ComputerID [CTID]
     FI Jobnumber [JOBS] -> JobNumber [JOBS]
     FC Order Number [DOCO] -> DocumentNumber [DOCO]
     FC Order Type [DCTO] -> DocumentType [DCTO]
     FC Order Company [KCOO] -> DocumentCompany [KCOO]
     GC Line Number [LNID] -> LineNumber [LNID]
     GC Ln Ty [LNTY] -> LineType [LNTY]
     GC Item Number [UITM] -> 2ndItemNumber [LITM]
     GC UM  [UOM] -> TransUnitOfMeasure [UOM]
     GC Quantity Ordered [UORG] -> TransactionQty [UORG]
     GC Quantity Shipped [SOQS] <> QtyShipped [SOQS]
     GC Quantity Backordered [SOBK] <> QtyBackordered [SOBK]
     GC Quantity Canceled [SOCN] <> QtyCancelled [SOCN]
     GC Sched Pick [PDDJ] -> PromiseShipDate [PDDJ]
     GC PR UM [UOM4] -> PrimaryUom [UOM1]
     GC Line Number [LNID] -> LineNumberF42UI11 [XLIN]
     GC Promised Delivery [RSDJ] -> PromisedDelDate [RSDJ]
     VA frm_cOkOrCancelInvCommits [EV01] <> OkOrCancel [EV01]
     VA frm_cChngsMadeToQtysInvCommits [EV01] <> ChangesMadeToQtys [EV02]
     FI mnProcessID [PEID] -> mnProcessID [PEID]
     FI mnTransactionID [TCID] -> mnTransactionID [TCID]
// 
// sar 5390765
VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
// 
If VA frm_cChngsMadeToQtysInvCommits [EV01] is equal to "1"
     VA grd_MATH01_SuppressProcess [MATH01] = [VA grd_MATH01_SuppressProcess [MATH01]]+32
     // SAR 6360496 - Next 3 lines of code added to force Row Exit & Changed events
     // to execute after coming back from this P42130.  Source of Data is not
     // changed.
     VA evt_cSourceOfData_EV17 [EV17] = GC Source of Data [EV17]
     GC Source of Data [EV17] = "#"
     GC Source of Data [EV17] = VA evt_cSourceOfData_EV17 [EV17]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Detail Commissions Lookup
Event: Button Clicked
Event GUID: cb5f5091-6c35-4555-b278-a5dae0eb2f5b
=============================================
// SAR# 4648630 Begin
Call App:P42150 Form:W42150B Version:Undefined
     FC Address Number [AN8] <> mnAddressNumber [AN8]
     UNDEFINED <> jdDateExpirJulian [CXPJ]
     FC Order Type [DCTO] <> szOrderType [DCTO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     VA frm_cFormActionCode_ACTN [ACTN] -> cActionCode [ACTI]
     FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
     UNDEFINED <> cApplicationCalledFrom [APCF]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Order Detail Attachments
Event: Button Clicked
Event GUID: f57df5f8-a23a-11d0-a204-0000f6728a56
=============================================
VA frm_EV09_Gen_Text_Row [EV09] = <Blank>
// SAR 8159526 - Calling the gid row-eixt inline and Asynch vents when we are
// doing changes on text attachments alone to update the related order
// attachments 
If GC Related PO/SO No [RORN] is not equal to <Blank>
And GC Related PO/SO No [RORN] is not equal to <NULL>
And GC Related PO/SO No [RORN] is not equal to "0"
And SV Form_ Mode is equal to CO UPDATE_MODE
     GC Associated Text [ATXT] = <Blank>
End If
// 
// SAR 8455659 - Copy the Media text from the Original Sales order, if the
// current Sales order is not having the Media text and Original Sales order
// is having the Media text
If SV Form_ Mode is equal to CO COPY_MODE
     If PO cCopyTextOption [EV16] is equal to "1"
     Or PO cCopyTextOption [EV16] is equal to "2"
          // SAR 8455659 - Check whether the Current Salse order is having the Media
          // Text or not
          Media Object Structures(GT4211A, <Default Media Object>,  <Exist>, VA frm_EV09_Gen_Text_Row, FC Order Number, FC Order Type, FC Order Company, GC LineNumber)
          If VA frm_EV09_Gen_Text_Row [EV09] is not equal to "1"
               // SAR 8455659 - Check whether the Original Salse order is having the Media
               // Text or not
               Media Object Structures(GT4211A, <Default Media Object>, <Exist>, VA frm_EV09_Gen_Text_Row, FI DocumentOrderInvoiceE, FI OrderType, FI CompanyKeyOrderNo, GC OriginalLine Number)
               If VA frm_EV09_Gen_Text_Row [EV09] is equal to "1"
                    ProcessGenericText(B4208410.ProcessGenericText)
                         FC Order Number [DOCO] -> mnDocOrderInvoiceF4211_DOCO [DOCO]
                         GC Line Number [LNID] -> mnLineNumberF4211_LNID [LNID]
                         FC Order Type [DCTO] -> szOrderTypeF4211_DCTO [DCTO]
                         FC Order Company [KCOO] -> szCompanyKeyOrderNoF4211_KCOO [KCOO]
                         VA frm_OORN_Original_Order_No [OORN] -> szOriginalPoSoNumberF4211_OORN [OORN]
                         GC Original Line Number [OGNO] -> mnOriginalLineNumberF4211_OGNO [OGNO]
                         FI OrderType [DCTO] -> szOriginalOrderTypeF4211_OCTO [OCTO]
                         FI CompanyKeyOrderNo [KCOO] -> szCompanyKeyOriginalF4211_OKCO [OKCO]
                         "D" -> cFile_EV01 [EV01]
                         "C" -> cMode_EV01 [EV01]
               End If
          End If
     End If
End If
// 
Media Objects(GT4211A, <Edit>, VA frm_EV09_Gen_Text_Row, FC Order Number, FC Order Type, FC Order Company, GC LineNumber)
// SAR 8455659 - MediaObjecs API is returning 1, if attachment exists, else
// returning 0. So, not required to check explicitly whether the  sales order
// is having the media attachments or not.
! // SAR 6368922 Begin
! Media Object Structures(GT4211A,  <Default Media Object>,  <Exist>, VA frm_EV09_Gen_Text_Row, FC Order Number, FC Order Type, FC Order Company, GC LineNumber)
If VA frm_EV09_Gen_Text_Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Current Row>, <Yes>)
     GC Associated Text [ATXT] = "Y"
Else
     Set Grid Text Indicator(FC Grid, <Current Row>, <No>)
     GC Associated Text [ATXT] = <Blank>
     // SAR 6368922 End
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Item Summary Availability
Event: Button Clicked
Event GUID: f57df767-a23a-11d0-a204-0000f6728a56
=============================================
// ---------------------------------------------------------------------------
// CRM CSS
// ---------------------------------------------------------------------------
If PO cShoppingCartMode [CART] is greater than <Blank>
And VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
     Call App:P41204 Form:W41204B Version:ZJDE0001
          GC Short Item No [ITM] -> mnItemNumberShort [ITM]
          GC Business Unit [MCU] -> szBranch [MCU]
          "O" -> cFromPortalComp [EV02]
          VA frm_mnUserABNumber [AN8] -> mnAddressNumber [AN8]
          "X" -> cItemNumberFlag [EV04]
Else
     Call App:P41202 Form:W41202A Version:ZJDE0001
          GC Short Item No [ITM] -> Identifiershortitem [ITM]
          GC Business Unit [MCU] -> Costcenter [MCU]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          UNDEFINED <> mnUnitsTransactionQty [UORG]
          UNDEFINED <> jdDateTransactionJulian [TRDJ]
End If
// 
// 


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Picture of Item
Event: Button Clicked
Event GUID: f57df768-a23a-11d0-a204-0000f6728a56
=============================================
Media Objects(GT4101, <Edit>, VA frm_EV09_Gen_Text_Row, GC ShortItem No)
If VA frm_EV09_Gen_Text_Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Kit and Configurator Selection Window
Event: Button Clicked
Event GUID: 90932515-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idF4101Pointer_GENLNG [GENLNG]
----------------------------------------
// 
// SAR 8537241 - Enable Repeat for Grid option
// 
If VA grd_STKT_Stocking_Type [STKT] is equal to ("C","K")
And GC Next Stat [NXTR] is not equal to "999"
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "0"
     Else
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
     End If
     // 
     If GC Method of Price Calculation [PMTH] is equal to <Blank>
     Or GC Method of Price Calculation [PMTH] is equal to <NULL>
     Or GC Method of Price Calculation [PMTH] is equal to "0"
          GetItemMasterByShortItem(X4101.GetItemMasterByShortItem)
               GC Short Item No [ITM] -> mnShortItemNumber [ITM]
               VA evt_idF4101Pointer_GENLNG [GENLNG] <> idF4101LongRowPtr [GENLNG]
               UNDEFINED <> cErrorCode [ERRC]
               "1" -> cReturnPtr [EV01]
               "1" -> cSuppressErrorMsg [EV02]
               UNDEFINED <> szErrorMsgID [DTAI]
               UNDEFINED <> szDescription1 [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> sz2ndItemNumber [LITM]
               UNDEFINED <> sz3rdItemNumber [AITM]
               UNDEFINED <> szItemFlashMessage [IFLA]
               UNDEFINED <> szAlternateDesc1 [DSC1]
               UNDEFINED <> szAlternateDesc2 [DSC2]
               UNDEFINED <> szLngPref [LNGP]
               UNDEFINED <> cLngPrefType [EV01]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
          GetItemMasterPriceInfo(B4100205.GetItemMasterPriceInfo)
               UNDEFINED <> szItemPriceGroup [PRGR]
               UNDEFINED <> szBasketRepriceGroup [RPRC]
               UNDEFINED <> szOrderRepriceGroup [ORPR]
               UNDEFINED <> cSalesPriceLevel [PLEV]
               UNDEFINED <> cPurchasingPriceLevel [PPLV]
               UNDEFINED <> cGradePotencyPricing [PRPO]
               GC Method of Price Calculation [PMTH] <- cKitPricingMethod [PMTH]
               VA evt_idF4101Pointer_GENLNG [GENLNG] <> idF4101RowPointer [GENLNG]
               UNDEFINED <> cCostLevel [CLEV]
          FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
               VA evt_idF4101Pointer_GENLNG [GENLNG] -> idGenericLong [GENLNG]
     End If
     // 
     // SAR# 2878853
     If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
     Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
     Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "0"
          // SAR 5031295 - Do this for cnfiguator as well
          If SV Form_ Mode is equal to CO UPDATE_MODE
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    // SAR 8667598
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] = [VA frm_LNIX_Prev_WF_Line_Num [LNIX]]+1
                    // SAR 8926255 - Roll Back SAR 8867598
                    CopySOInfoToWorkFiles(B4200690.CopySOInfoToWorkFiles)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerid [CTID]
                         FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
                         VA frm_LNIX_Prev_WF_Line_Num [LNIX] -> mnLinenumberxref [LNIX]
                         "1" -> cSourceofdata [EV02]
                         "2" -> cMode [EV03]
                         FC Order Company [KCOO] -> szCompanykeyorderno [KCOO]
                         FC Order Type [DCTO] -> szOrdertype [DCTO]
                         FC Order Number [DOCO] -> mnDocumentorderinvoicee [DOCO]
                         GC Line Number [LNID] -> mnLinenumber [LNID]
                         UNDEFINED <> szStatuscodenext [NXTR]
                         UNDEFINED <> szErrormessageid [DTAI]
                         "1" -> cSuppresserrormessage [EV01]
                         <Blank> -> cReturnPtr [EV04]
                         UNDEFINED <> idHeaderPtr [GENLNG]
                         UNDEFINED <> idDetailPtr [GENLNG]
                         VA frm_EV22_cCacheOn [EV22] -> cWriteToWorkFileOrCache [EV05]
                         UNDEFINED <> cBasedOnStatus [STBOW]
                         UNDEFINED <> jdDateUpdated [UPMJ]
                         UNDEFINED <> mnTimeOfDay [TDAY]
                         UNDEFINED <> szUserId [USER]
                         "C" -> cActionCode [ACTN]
                         UNDEFINED <> idDetailPtr2 [GENLNG]
                         UNDEFINED <> mnLastLineNumberUsed [LNIX]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = VA frm_LNIX_Prev_WF_Line_Num [LNIX]
                    VA grd_EV18_UpdatedtoDetailWF [EV18] = "1"
                    // SAR 8938830 - Set price history datamap cache flag if it has not been set
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                         Press Button(FC Set Price History Cache Flag)
                    End If
               End If
          End If
     End If
     // SAR# 2878853
     // SAR 6200986- Set a flag to 1 when user takes the row exit to kit/config
     VA frm_RowExitToKitAndConfig [EV01] = "1"
     Press Button(FC Kit and Configurator processing)
     VA frm_RowExitToKitAndConfig [EV01] = "0"
     // SAR 6200986- Reset  flag to 0 
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "1"
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC View Kit Components
Event: Button Clicked
Event GUID: 83e053ff-ef15-46aa-a13e-2ac67cd8594a
=============================================
// 
// SAR 8537241 - Enable Repeat for Grid option
// 
// SAR 8367190
// Add row exit to view kit components
// 
// SAR 8537241 - Only call for Kit Parent
// 
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     Call App:P420112 Form:W420112H Version:Undefined
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
          GC Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
          GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
          GC Business Unit [MCU] -> szCostCenter [MCU]
          GC Quantity Ordered [UORG] -> mnUnitsTransactionQty [UORG]
          "S" -> cCallingApp [EV01]
          GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
          PO cAvailabilityCheck [EV12] -> cAvailabilityCheck [EV01]
          PO cEHideClosedLines [EV06] -> cHideClosedLines [EV01]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentWFLineNumber [SLNE]
          VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWorkFile [EV02]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Customer Segment Items
Event: Button Clicked
Event GUID: eadbbdd7-5824-4483-8581-18a1be362000
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_CheckCSIReturnValue [EV01]
----------------------------------------
// SAR# 4541912 Begin
// SAR 8348415 - Passed Requested Date
Call App:P42440 Form:W42440A Version:VA frm_szCustSegItemsVersion_CSIV
     VA grd_szDetailLineBSC [BSC] -> szBuyingSegmentCode [BSC]
     "1" -> cCalledFrom [PROM]
     GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCache [EV01]
     VA evt_CheckCSIReturnValue [EV01] <- cCheckReturnValue [EV01]
     FC Address Number [AN8] -> mnSoldToAddressNumber [AN8]
     GC Request Date [DRQJ] -> jdDateRequested [DRQJ]
If VA evt_CheckCSIReturnValue [EV01] is equal to "1"
     Press Button(FC PROCESS: Load Grid From Cache)
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Substitute/Complementary/Replacement Items Window
Event: Button Clicked
Event GUID: 5ef15cea-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ContinueProcess [EV02]
evt_StoreBO [SOBK]
evt_StoreCancel [SOCN]
evt_StoreShipped [SOQS]
evt_StoreReturned [QTYT]
evt_WorkQty_1 [UORG]
evt_WorkQty_2 [UORG]
evt_WorkQty_3 [UORG]
evt_StoreLNTY [LNTY]
evt_StoreNXTR [NXTR]
evt_StoreINMG [INMG]
evt_StoreUPRC [UPRC]
evt_StorePROV [PROV]
evt_ZCNL_Flag [EV07]
evt_StoreUOM [UOM]
evt_StoreUOM4 [UOM4]
evt_StoreMCU [MCU]
evt_SkipThis [EV02]
evt_GridRowNumber [RRN]
evt_mnUnitPrice [UPRC]
evt_CMLineNoForCopyF40UI74 [LNIX]
evt_mnAdjRevisionLvlSec [MATH01]
evt_mnOne_AREV [AREV]
evt_szCancelStatusCodeNxt_NXTR [NXTR]
evt_mnOverrideBasePrice_OVBPRC [OVBPRC]
evt_mnB4100380AdjRevLev_AREV [AREV]
evt_mnUnitPricefromGrid_UPRC [UPRC]
evt_mnShortItemNumber_ITM [ITM]
evt_mnStoreDemandId_DEID [DEID]
evt_cDemandSchedEnabled_MEOW [PSIG]
evt_szStoreReleaseNumber_RLNU [RLNU]
evt_jdStoreDateRelease_RLDJ [RLDJ]
evt_mnStoreReleaseTime_RLTM [RLTM]
evt_jdStorePromShipDate_PPDJ [PPDJ]
evt_mnStorePromShipTime_PMDT [PMDT]
evt_jdStoreDateRequested_DRQJ [DRQJ]
evt_mnStoreTimeRequested_DRQT [DRQT]
evt_jdStorePromDelDate_RSDJ [RSDJ]
evt_mnStorePromDelTime_RSDT [RSDT]
evt_szStorePullSignal_PSIG [PSIG]
evt_cKitComponent_EV01 [EV01]
evt_cFormMode_EV01 [EV01]
----------------------------------------
//
// SAR 8537241 - Enable Repeat for Grid option
// Do not process for Kit Component
// Determine of grid row is Kit Component
VA evt_cKitComponent_EV01 [EV01] = <Blank>
If GC Related Kit Cpnt [RKIT] is equal to "0"
And GC Kit Master Line No [KTLN] is greater than "0"
     VA evt_cKitComponent_EV01 [EV01] = "1"
End If
//
// SAR 8338276 Fetching the cache line number when it is zero in update mode
// it happens in reinquire mode when there are no changes in the grid line
// and it is not processed.)
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
     GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
     VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
End If
//
// SAR 7956742 - If the Order is just re-inquired and no processing is
// triggered by the user, then the Job No and WF Line No will be Zero.
// Get the Job Number and WF Line no.
//
If VA evt_cKitComponent_EV01 [EV01] is not equal to "1"
     If FI Jobnumber [JOBS] is less than or equal to "0"
          GetInternalNextNumber(B0000564.GetInternalNextNumber)
               FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
     End If
     If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
          GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
     End If
     //
     // SAR 5574855 Begin- Short Item Number variable
     VA evt_mnShortItemNumber_ITM [ITM] = GC Short Item No [ITM]
     If VA evt_mnShortItemNumber_ITM [ITM] is equal to <Blank>
     Or VA evt_mnShortItemNumber_ITM [ITM] is equal to <NULL>
     Or VA evt_mnShortItemNumber_ITM [ITM] is equal to "0"
     And GC Item Number [UITM] is not equal to <Blank>
          GetItemWithShortOrUnknownItem(N4200940.GetItemWithShortOrUnknownItem)
               VA evt_mnShortItemNumber_ITM [ITM] <- mnIdentifiershortitem [ITM]
               GC Item Number [UITM] -> szItemnounknownformat [UITM]
     End If
     // SAR 5574855 End
     //
     //      If the Stocking Type is either O for Obsolete, or
     //      U for Obsolete - Use Up, then treat as a Replacement
     //      and set the Replacement and SubstituteIndicator values
     //      accordingly
     //
     // SAR 5266271
     VA evt_mnOne_AREV [AREV] = "1"
     VA evt_szCancelStatusCodeNxt_NXTR [NXTR] = "999"
     VA evt_CMLineNoForCopyF40UI74 [LNIX] = VA frm_LNIX_Prev_WF_Line_Num [LNIX]
     // End SAR 5266271
     If VA grd_STKT_Stocking_Type [STKT] is equal to "O"
     Or VA grd_STKT_Stocking_Type [STKT] is equal to "U"
          VA frm_Replacement [RPL] = "Y"
          VA frm_SubstituteIndicator [SO05] = "1"
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "O"
               VA frm_QuantityToPass [SOQS] = GC Quantity Ordered [UORG]
          End If
          If VA grd_STKT_Stocking_Type [STKT] is equal to "U"
               VA frm_QuantityToPass [SOQS] = [GC Quantity Backordered [SOBK]]+[GC Quantity Canceled [SOCN]]
          End If
     Else
          //
          VA frm_Replacement [RPL] = <Blank>
          //
          If PO szSubstituteItemXRef [XRT] is not equal to <Blank>
          And PO szSubstituteItemXRef [XRT] is not equal to <NULL>
               // SAR 5882591- Added if condition
               If GC Subsitution Exists [SBST] is not equal to <Blank>
               And GC Subsitution Exists [SBST] is not equal to <NULL>
                    VA frm_SubstituteIndicator [SO05] = "1"
               Else
                    VA frm_SubstituteIndicator [SO05] = <Blank>
               End If
          Else
               If PO szSubstituteItemXRef [XRT] is equal to <Blank>
               Or PO szSubstituteItemXRef [XRT] is equal to <NULL>
                    VA frm_SubstituteIndicator [SO05] = <Blank>
               End If
          End If
          //
          VA frm_QuantityToPass [SOQS] = [GC Quantity Backordered [SOBK]]+[GC Quantity Canceled [SOCN]]
     End If
     // SAR 7173115 - Moved codefix of SAR 6874454 out of if condition
     // SAR 6874454 - Begin
     If VA grd_APUM_UM_Ent [APUM] is less than or equal to <Blank>
          VA grd_APUM_UM_Ent [APUM] = GC PR UM [UOM4]
     End If
     // SAR 6874454 - End
     //
     //      Retrieve the current Grid Row to Grid Buffer for possible
     //      use later on, if it is necessary to insert a Grid Row
     //
     Copy Grid Row To Grid Buffer(FC Grid,  <Current Row>)
     VA evt_StoreMCU [MCU] = GB Business Unit [MCU]
     VA evt_StoreLNTY [LNTY] = GB Ln Ty [LNTY]
     VA evt_SkipThis [EV02] = "0"
     //
     // SAR 6386961 Begin
     If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
          If GC Demand Key [DEID] is not equal to <NULL>
          And GC Demand Key [DEID] is not equal to "0"
          And VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
               VA evt_mnStoreDemandId_DEID [DEID] = GC Demand Key [DEID]
               VA evt_szStorePullSignal_PSIG [PSIG] = GC Pull Signal [PSIG]
               VA evt_szStoreReleaseNumber_RLNU [RLNU] = GC Release Number [RLNU]
               VA evt_jdStoreDateRelease_RLDJ [RLDJ] = GC Release Date [RLDJ]
               VA evt_mnStoreReleaseTime_RLTM [RLTM] = GC Release Time [RLTM]
               VA evt_mnStorePromDelTime_RSDT [RSDT] = GC Promised Del  Time [RSDT]
               VA evt_jdStorePromDelDate_RSDJ [RSDJ] = GC Promised Delivery [RSDJ]
               VA evt_mnStoreTimeRequested_DRQT [DRQT] = GC Requested Del  Time [DRQT]
               VA evt_jdStoreDateRequested_DRQJ [DRQJ] = GC Request Date [DRQJ]
               VA evt_mnStorePromShipTime_PMDT [PMDT] = GC Scheduled Ship Time [PMDT]
               VA evt_jdStorePromShipDate_PPDJ [PPDJ] = GC Promised Ship [PPDJ]
          End If
     End If
     // SAR 6386961 End
     //
     FI Currencymode [CRRM] = FC Mode (F) [CRRM]
     If FC To Currency Code [CRDC] is not equal to FC Currency Code [CRCD]
          If VA grd_mnListPriceForeign_FPRC [FPRC] is equal to <Blank>
          Or VA grd_mnListPriceForeign_FPRC [FPRC] is equal to <Blank>
          Or VA grd_mnListPriceForeign_FPRC [FPRC] is equal to "0"
               VA evt_mnUnitPrice [UPRC] = VA grd_FPRC_Foreign_List_Price [FPRC]
          Else
               VA evt_mnUnitPrice [UPRC] = VA grd_mnListPriceForeign_FPRC [FPRC]
          End If
          VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] = VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC]
          // End SAR 5266271
          // SAR 5413648
          VA evt_mnUnitPricefromGrid_UPRC [UPRC] = GC Foreign Unit Price [FUP]
          // End SAR 5413648
     Else
          If VA grd_mnListPrice_LPRC [LPRC] is equal to <Blank>
          Or VA grd_mnListPrice_LPRC [LPRC] is equal to <Blank>
          Or VA grd_mnListPrice_LPRC [LPRC] is equal to "0"
               VA evt_mnUnitPrice [UPRC] = VA grd_LPRC_Unit_List_Price [LPRC]
          Else
               VA evt_mnUnitPrice [UPRC] = VA grd_mnListPrice_LPRC [LPRC]
          End If
          VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] = VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC]
          // End SAR 5266271
          // SAR 5413648
          VA evt_mnUnitPricefromGrid_UPRC [UPRC] = GC Unit Price [UPRC]
          // End SAR 5413648
     End If
     // SAR 6366628 - Begin
     If VA grd_szListPriceUoM_APUM [APUM] is equal to <Blank>
     Or VA grd_szListPriceUoM_APUM [APUM] is equal to <NULL>
          VA grd_szListPriceUoM_APUM [APUM] = VA grd_APUM_UM_Ent [APUM]
     End If
     // SAR 6366628 - End
     //
     // SAR 3228342
     GC WF Line Number [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
     //
     // SAR 2877316 - Pass in SubstituteIndicator and Replacement from P42260 so that
     // we know which operation users have chosen to do.  Otherwise, if we set S,A,R
     // all three in the processing options, the values for them are all being set to
     // "1"
     //
     // SAR 5266271
     // SAR 5413648 - pass APUM and grid unit price in
     // SAR 5574855 - Pass Short Item Number variable
     // SAR 8325635 to prevent the deletion of F40UI74 records
     VA evt_CMLineNoForCopyF40UI74 [LNIX] = [VA evt_CMLineNoForCopyF40UI74 [LNIX]]+1
     // SAR 8338276 Passed the form variable to cUseCacheorWF to indicate cache or
     // Work File	
     // SAR 8955607 - Pass Use Taxed Prices
     Call App:P42260 Form:W42260A Version:Undefined
          PO szSubstituteItemXRef [XRT] -> szSubstXRefType [XRT]
          FC Address Number [AN8] -> mnAddressNumberSoldTo [AN8]
          VA evt_StoreMCU [MCU] -> szBranchPlant [MCU]
          GC Description Line 2 [DSC2] -> szDescriptionLine2 [DSC2]
          GC PR UM [UOM4] -> szUnitofMeasurePricing [UOM4]
          VA frm_QuantityToPass [SOQS] <> mnQuantity [SOBK]
          GC UM  [UOM] -> szUnitofMeasureasInput [UOM]
          GC Request Date [DRQJ] -> jdTransactionDate [TRDJ]
          VA frm_SubstituteIndicator [SO05] <> cSubstituteIndicator [SO05]
          GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
          "1" -> cModusOperandi [MODE]
          VA frm_Replacement [RPL] <> cReplacement [RPL]
          PO cUseSubsItemPrice [EV15] -> cPriceSource [PSRC]
          FC Business Unit [MCU] -> szCostCenterHeader [EMCU]
          FI Currencymode [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] -> szCurrencyCodeTo [CRDC]
          FC Exchange Rate [CRR] -> mnExchangeRate [CRR]
          VA evt_mnUnitPrice [UPRC] -> mnOriginalItemPrice [UPRC]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          VA evt_mnShortItemNumber_ITM [ITM] -> mnIdentifierShortItem [ITM]
          GC Description  [DSC1] -> szDescriptionLine1 [DSC1]
          VA grd_LPRC_Unit_List_Price [LPRC] -> mnAmountSellingPrice [SPRC]
          VA frm_NumberofCacheEntries [RRN] <> mnNumberofCacheEntries [RRN]
          PO szComplementaryItemXRef [XRT2] -> szComplXRefType [XRT2]
          PO szReplacementItemXREF [XRT3] -> szReplXRefType [XRTC]
          VA evt_StoreLNTY [LNTY] -> szLineType [LNTY]
          PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV01]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          VA frm_CTID_Computer_ID [CTID] -> szWorkStationId [JOBN]
          VA evt_CMLineNoForCopyF40UI74 [LNIX] -> mnLineNumberXREF [LNIX]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          GC Adj. Schedule [ASN] -> szPriceAdjustmentScheduleN [ASN]
          GC CLVL-PC Lev (wf) [CLVL] -> szPricingCategoryLevel1 [CLVL]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          GC Price Effective Date [PEFJ] -> jdDateEffectiveJulian1 [EFTJ]
          VA frm_szVersion_VERS [VERS] -> szVersion [VERS]
          VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
          GC Quantity Ordered [UORG] -> mnUnitsTransactionQty [UORG]
          FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
          GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
          VA evt_mnUnitPricefromGrid_UPRC [UPRC] -> mnOrigItemSOEUnitPrice [UPRC]
          VA grd_szListPriceUoM_APUM [APUM] -> szListPriceUOM [APUM]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
     //
     //      Process Replacement Cancellation
     //
     // SAR 2877316 - Start re-arrange the code so that the quantity calculation will
     // start here instead of when doing the substitute.
     //
     If VA frm_Replacement [RPL] is equal to "Y"
     Or VA frm_SubstituteIndicator [SO05] is equal to "1"
          VA evt_ContinueProcess [EV02] = "1"
          //
          //      Were any Quantities Selected ? If not, ignore the rest of the process
          //
          If VA frm_QuantityToPass [SOQS] is equal to "0"
               VA evt_ContinueProcess [EV02] = "0"
          End If
          //
          // SAR 3322208
          If GC Quantity Shipped [SOQS] is greater than "0"
          And GC Quantity Backordered [SOBK] is equal to "0"
               VA frm_SubstituteIndicator [SO05] = "0"
          End If
          //
          //      If the Backorder Quantity and the Cancelled Quantity are zero
          //      then ignore the rest of the process
          //
          If GC Quantity Backordered [SOBK] is less than or equal to "0"
          And GC Quantity Canceled [SOCN] is less than or equal to "0"
               VA evt_ContinueProcess [EV02] = "0"
          End If
          //
          If VA evt_ContinueProcess [EV02] is equal to "1"
               //
               //      Store Quantities
               //
               VA evt_StoreBO [SOBK] = GC Quantity Backordered [SOBK]
               VA evt_StoreCancel [SOCN] = GC Quantity Canceled [SOCN]
               VA evt_StoreShipped [SOQS] = GC Quantity Shipped [SOQS]
               VA evt_StoreReturned [QTYT] = VA frm_QuantityToPass [SOQS]
               //
               //      Determine the new Cancelled Quantity bt subtracting the Substituted
               //      Quantity from the Original Cancelled Quantity
               //
               VA evt_WorkQty_1 [UORG] = [VA evt_StoreCancel [SOCN]]-[VA evt_StoreReturned [QTYT]]
               If VA evt_WorkQty_1 [UORG] is less than or equal to "0"
                    VA evt_WorkQty_2 [UORG] = abs([VA evt_WorkQty_1 [UORG]])
                    VA evt_StoreReturned [QTYT] = VA evt_StoreCancel [SOCN]
               End If
               //
               //      Determine the new Backorder Quantity by subtracting the
               //      Returned Quantity from the Original Backordered Quantity
               //
               VA evt_WorkQty_3 [UORG] = [VA evt_StoreBO [SOBK]]-[VA evt_WorkQty_2 [UORG]]
               If VA evt_WorkQty_3 [UORG] is less than or equal to "0"
                    VA evt_WorkQty_2 [UORG] = VA evt_StoreBO [SOBK]
                    VA evt_WorkQty_3 [UORG] = 0
                    VA evt_StoreBO [SOBK] = 0
               End If
               //
               GC Quantity Backordered [SOBK] = VA evt_WorkQty_3 [UORG]
               //
               //      Calculate the new Order Quantity by adding the Quantity Shipped,
               //      the new Backordered and Cancelled Quantities
               //
               VA evt_WorkQty_1 [UORG] = ([VA evt_StoreCancel [SOCN]]+[VA evt_StoreShipped [SOQS]])+[VA evt_WorkQty_3 [UORG]]
               //
               VA evt_StoreReturned [QTYT] = [VA evt_StoreReturned [QTYT]]+[VA evt_WorkQty_2 [UORG]]
               //
               //      If the new Order Quantity is zero, then do not create a new line
               //      for cancelled Backorder Quantity
               //
               If VA evt_WorkQty_1 [UORG] is equal to "0"
                    GC Quantity Ordered [UORG] = VA evt_StoreReturned [QTYT]
               Else
                    GC Quantity Ordered [UORG] = VA evt_WorkQty_1 [UORG]
               End If
               //
               //      Process Replacement Balancing
               //
               // SAR 2443702
               // SAR 3553321 Condition this assignment
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    If VA grd_ACTI_ActionHidden [ACTI] is equal to <Blank>
                    Or VA grd_ACTI_ActionHidden [ACTI] is equal to <NULL>
                         VA grd_ACTI_ActionHidden [ACTI] = "C"
                    End If
               End If
          End If
     End If
     If VA frm_Replacement [RPL] is equal to "Y"
          //
          //      Was any Quantity Returned ?
          //
          If VA frm_QuantityToPass [SOQS] is less than or equal to "0"
               //
               // SAR 2840281 Add the following condition to avoid wrong cancelling.
               //
               If VA frm_NumberofCacheEntries [RRN] is not equal to "0"
                    If GC Last Stat [LTTR] is less than or equal to "980"
                         GC Last Stat [LTTR] = "980"
                         Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
                         Set Grid Font(FC Grid,  <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                         Set Grid Font(FC Grid,  <Current Row>, GC BlanketsExists, <Wingdings,Regular,12,Black>)
                         Set Grid Font(FC Grid,  <Current Row>, GC AssociationExists, <Wingdings,Regular,12,Black>)
                         Set Grid Font(FC Grid, <Current Row>, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
                    End If
               End If
          Else
               If GC Quantity Canceled [SOCN] is equal to GC Quantity Ordered [UORG]
                    If GC Last Stat [LTTR] is less than or equal to "980"
                         GC Last Stat [LTTR] = "985"
                    End If
                    GC Next Stat [NXTR] = "999"
                    Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC BlanketsExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC AssociationExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid, <Current Row>, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
                    VA evt_ZCNL_Flag [EV07] = "2"
                    VA evt_SkipThis [EV02] = "1"
               Else
                    If GC Quantity Canceled [SOCN] is equal to "0"
                         GC Foreign Unit Price [FUP] = 0
                         GC Unit Price [UPRC] = 0
                         GC Foreign Extended Price [FEA] = 0
                         GC Extended Price [AEXP] = 0
                         VA grd_EV05_Ext_Price_Changed [EV05] = "1"
                         VA grd_EV06_Unit_Price_Changed [EV06] = "1"
                         GC Price Over Cd [PROV] = "1"
                         //
                         // This situation is for when a replacement item "cancels" the original item
                         // ordered.  The original item's last & next status get changed to 985 & 999.
                         //
                         If VA evt_WorkQty_1 [UORG] is equal to "0"
                              GC Last Stat [LTTR] = "985"
                              GC Next Stat [NXTR] = "999"
                              Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC BlanketsExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC AssociationExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid, <Current Row>, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
                              GC Quantity Shipped [SOQS] = 0
                              GC Quantity Backordered [SOBK] = 0
                              GC Quantity Canceled [SOCN] = GC Quantity Ordered [UORG]
                              VA evt_StoreReturned [QTYT] = "0"
                              VA evt_SkipThis [EV02] = "1"
                              VA evt_ZCNL_Flag [EV07] = "2"
                         Else
                              If VA evt_StoreCancel [SOCN] is less than VA evt_StoreReturned [QTYT]
                                   VA evt_ZCNL_Flag [EV07] = "1"
                              Else
                                   VA evt_ZCNL_Flag [EV07] = "2"
                              End If
                         End If
                    Else
                         GC Quantity Backordered [SOBK] = 0
                         VA evt_StoreReturned [QTYT] = GC Quantity Canceled [SOCN]
                         GC Quantity Canceled [SOCN] = 0
                         GC Quantity Ordered [UORG] = GC Quantity Shipped [SOQS]
                         VA evt_ZCNL_Flag [EV07] = "1"
                    End If
               End If
               //
               //      Store fields from Current Row
               //
               VA evt_StoreLNTY [LNTY] = GB Ln Ty [LNTY]
               VA evt_StoreUPRC [UPRC] = GB Unit Price [UPRC]
               VA evt_StoreNXTR [NXTR] = GB Next Stat [NXTR]
               VA evt_StoreUOM [UOM] = VA grd_APUM_UM_Ent [APUM]
               VA evt_StoreUOM4 [UOM4] = GB PR UM [UOM4]
               //
          End If
          //
          // SAR 3078102
          VA frm_ReplacementDone [EV02] = "1"
          //
     End If
     //
     //      Process Substitution Cancellation
     //
     // 3040032 Add two ANDs to the condition so that to prevent wrong cancelling
     If VA evt_SkipThis [EV02] is not equal to "1"
     And VA frm_QuantityToPass [SOQS] is not equal to "0"
     And VA frm_NumberofCacheEntries [RRN] is not equal to "0"
          If VA frm_SubstituteIndicator [SO05] is equal to "1"
               //
               If VA evt_WorkQty_1 [UORG] is equal to "0"
                    GC Quantity Canceled [SOCN] = GC Quantity Ordered [UORG]
                    //
                    //      Set LastStatus based upon Substitution
                    //
                    // SAR# 2450865
                    VA evt_StoreNXTR [NXTR] = GB Next Stat [NXTR]
                    GB Last Stat [LTTR] = "986"
                    GB Next Stat [NXTR] = "999"
                    //
                    // SAR 2877316 -  We will still need these, so enabled again
                    GC Last Stat [LTTR] = "986"
                    GC Next Stat [NXTR] = "999"
                    //
                    // Begin SAR # 7202078
                    GC Cancel Date [CNDJ] = date_today()
                    // End SAR # 7202078
                    //
                    Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC BlanketsExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid,  <Current Row>, GC AssociationExists, <Wingdings,Regular,12,Black>)
                    Set Grid Font(FC Grid, <Current Row>, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
                    VA evt_StoreReturned [QTYT] = 0
                    VA evt_ZCNL_Flag [EV07] = "2"
               Else
                    If VA evt_StoreCancel [SOCN] is less than VA evt_StoreReturned [QTYT]
                         VA evt_ZCNL_Flag [EV07] = "1"
                    Else
                         VA evt_ZCNL_Flag [EV07] = "2"
                    End If
               End If
               //
               VA evt_StoreReturned [QTYT] = [VA evt_StoreReturned [QTYT]]-[VA evt_StoreCancel [SOCN]]
               //
               //      Store fields from Current Row
               //
               VA evt_StoreLNTY [LNTY] = GB Ln Ty [LNTY]
               VA evt_StoreUPRC [UPRC] = GB Unit Price [UPRC]
               //
               VA evt_StoreUOM [UOM] = VA grd_APUM_UM_Ent [APUM]
               VA evt_StoreUOM4 [UOM4] = GB PR UM [UOM4]
               //
          End If
     End If
     //
     //      Insert extra Grid Row for Cancelled Backorder Quantity
     //
     // SAR 8956108
     If SV Form_ Mode is equal to CO ADD_MODE
          VA evt_cFormMode_EV01 [EV01] = "A"
     Else
          If SV Form_ Mode is equal to CO UPDATE_MODE
               VA evt_cFormMode_EV01 [EV01] = "U"
          Else
               VA evt_cFormMode_EV01 [EV01] = "C"
          End If
     End If
     //
     RetrieveLargestSubstituteLineNum(B4208490.RetrieveLargestSubstituteLineNum)
          FC Order Company [KCOO] -> szCompanyKeyOrderNo_KCOO [KCOO]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE_DOCO [DOCO]
          FC Order Type [DCTO] -> szOrderType_DCTO [DCTO]
          GC Line Number [LNID] -> mnLineNumber_LNID [LNID]
          VA grd_mnLineNumber_LNID [LNID] <- mnHighestLineNumber_LNID [LNID]
          "1" -> cSuppressErrorMessage_EV01 [EV01]
          "2" -> cCMWriteToWFFlag_EV03 [EV03]
          FI Computerid [CTID] -> szComputerID_CTID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
          VA evt_cFormMode_EV01 [EV01] -> cFormMode_EV01 [EV01]
          GC Original Order No [OORN] -> szOriginalSoNumber_OORN [OORN]
          GC Orig Ord Type [OCTO] -> szOriginalOrderType_OCTO [OCTO]
          GC OKCO- Doc Co (wf) [OKCO] -> szCompanyKeyOriginal_OKCO [OKCO]
     //
     If VA evt_ZCNL_Flag [EV07] is equal to "1"
          //
          // SAR 2443702
          // SAR 2877316 - This assignment is necessary because the  previous assignment
          // somehow got lost when comes to this point
          // SAR 3553321 Condition the following assignment
          If SV Form_ Mode is equal to CO UPDATE_MODE
               If VA grd_ACTI_ActionHidden [ACTI] is equal to <Blank>
               Or VA grd_ACTI_ActionHidden [ACTI] is equal to <NULL>
                    VA grd_ACTI_ActionHidden [ACTI] = "C"
               End If
          Else
               VA grd_ACTI_ActionHidden [ACTI] = "A"
          End If
          //
          GB Quantity Canceled [SOCN] = VA evt_StoreReturned [QTYT]
          GB Quantity Ordered [UORG] = VA evt_StoreReturned [QTYT]
          GB Quantity Backordered [SOBK] = 0
          GB Quantity Shipped [SOQS] = 0
          //
          // SAR 8956108
          IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
               VA grd_mnLineNumber_LNID [LNID] -> mnInputLineNumber [LNID]
               ".001" -> mnLineNumberIncrement [LNIX]
               VA grd_mnLineNumber_LNID [LNID] <- mnOutputLineNumber [XLIN]
          GB Line Number [LNID] = VA grd_mnLineNumber_LNID [LNID]
          //
          GB Business Unit [MCU] = VA evt_StoreMCU [MCU]
          //
          If VA frm_Replacement [RPL] is equal to "Y"
               If GB Last Stat [LTTR] is not equal to "980"
                    GB Last Stat [LTTR] = "985"
               End If
          Else
               GB Last Stat [LTTR] = "986"
          End If
          GB Next Stat [NXTR] = "999"
          //
          // Begin SAR # 7202078
          GB Cancel Date [CNDJ] = date_today()
          // End SAR # 7202078
          //
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = "0"
          //
          // SAR 5266271
          GB Price Over Cd [PROV] = "1"
          VA evt_CMLineNoForCopyF40UI74 [LNIX] = [VA evt_CMLineNoForCopyF40UI74 [LNIX]]+1
          GB F40UI74 Line Number [LNIX] = VA evt_CMLineNoForCopyF40UI74 [LNIX]
          // SAR 6386961 Begin
          If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
               If GC Demand Key [DEID] is not equal to <NULL>
               And GC Demand Key [DEID] is not equal to "0"
               And VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
                    GB Demand Key [DEID] = VA evt_mnStoreDemandId_DEID [DEID]
                    GB Pull Signal [PSIG] = VA evt_szStorePullSignal_PSIG [PSIG]
                    GB Release Date [RLDJ] = VA evt_jdStoreDateRelease_RLDJ [RLDJ]
                    GB Release Time [RLTM] = VA evt_mnStoreReleaseTime_RLTM [RLTM]
                    GB Release Number [RLNU] = VA evt_szStoreReleaseNumber_RLNU [RLNU]
                    GB Promised Ship [PPDJ] = VA evt_jdStorePromShipDate_PPDJ [PPDJ]
                    GB Scheduled Ship Time [PMDT] = VA evt_mnStorePromShipTime_PMDT [PMDT]
                    GB Request Date [DRQJ] = VA evt_jdStoreDateRequested_DRQJ [DRQJ]
                    GB Requested Del  Time [DRQT] = VA evt_mnStoreTimeRequested_DRQT [DRQT]
                    GB Promised Delivery [RSDJ] = VA evt_jdStorePromDelDate_RSDJ [RSDJ]
                    GB Promised Del  Time [RSDT] = VA evt_mnStorePromDelTime_RSDT [RSDT]
                    GB Source of Data [EV17] = "7"
                    GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                         FI Computerid [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         GB WF Line Number [LNIX] <- mnWFLineNo [LNIX]
                    F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
                         FI Computerid [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         GB WF Line Number [LNIX] -> mnWFLineNo [LNIX]
                         VA evt_szStorePullSignal_PSIG [PSIG] -> szPullSignal [PSIG]
                         VA evt_jdStoreDateRelease_RLDJ [RLDJ] -> jdDateRelease [RLDJ]
                         VA evt_mnStoreReleaseTime_RLTM [RLTM] -> mnTimeRelease [RLTM]
                         VA evt_mnStoreDemandId_DEID [DEID] -> mnDemandUniqueKey [DEID]
               End If
          End If
          // SAR 6386961 End
          // SAR 6507857
          VA frm_InsertGBCalledinSub_EV01 [EV01] = "1"
          Insert Grid Buffer Row(FC Grid,  <After Current Row>,  <Yes>,  <No>,  <Yes>,  <Yes>,  <Yes>)
          //
          Get Selected Grid Row Number(FC Grid, VA evt_GridRowNumber)
          VA evt_GridRowNumber [RRN] = [VA evt_GridRowNumber [RRN]]+1
          Set Grid Font(FC Grid, VA evt_GridRowNumber,  <All Columns>, <,Regular,10,Black>)
          Set Grid Font(FC Grid, VA evt_GridRowNumber, GC AgreementExists, <Wingdings,Regular,12,Black>)
          Set Grid Font(FC Grid, VA evt_GridRowNumber, GC BlanketsExists, <Wingdings,Regular,12,Black>)
          Set Grid Font(FC Grid, VA evt_GridRowNumber, GC AssociationExists, <Wingdings,Regular,12,Black>)
          Set Grid Font(FC Grid, VA evt_GridRowNumber, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
     End If
     //
     //
     If VA frm_NumberofCacheEntries [RRN] is greater than "0"
          //
          //      Retrieve Grid Row Number
          //
          Get Selected Grid Row Number(FC Grid, VA frm_GridRowCounter)
          //
          //      Store Values from Current Grid Row
          //
          Copy Grid Row To Grid Buffer(FC Grid, VA frm_GridRowCounter)
          VA evt_StoreLNTY [LNTY] = GB Ln Ty [LNTY]
          // SAR 2877316 - We need this, so enabled now
          VA evt_StoreNXTR [NXTR] = GB Next Stat [NXTR]
          Clear Grid Buffer(FC Grid)
          //
          //      Unload the records returned in the memory cache
          //
          VA frm_cachecursor_GENLNG [GENLNG] = "0"
          VA frm_EV21_LastCacheRecord [EV21] = "0"
          While VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
               If FI Currencymode [CRRM] is equal to "F"
                    // SAR 5266271
                    // SAR 5413648 - load pricing UoM instead of transaction UoM
                    // 8955530-Do not load the Pricing UOM for the substitute item as it would be
                    // loaded by the editline
                    UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
                         GB Item Number [UITM] <> szItemNumber [UITM]
                         GB Business Unit [MCU] <> szBranchPlant [MCU]
                         VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
                         GB Quantity Ordered [UORG] <> mnQuantity [UORG]
                         GB PR UM [UOM4] -> szUnitOfMeasure [UOM]
                         <Blank> -> cSuppressTerminateCache [EV02]
                         GB Foreign Unit Price [FUP] <> mnUnitCost [PRRC]
                         VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                         VA evt_mnB4100380AdjRevLev_AREV [AREV] <> mnAdjustmentRevisionLevel [AREV]
                         GB Price Over Cd [PROV] <- cPriceOverrideCode [PROV]
                    // SAR 5413648 - load UoM for new line with UoM from original line
                    // SAR 6500381- Begin
                    // UOM is not copied for complementary Item and Editline would get the right
                    // UOM for the complimentary Item
                    If VA frm_SubstituteIndicator [SO05] is equal to <NULL>
                    And VA frm_Replacement [RPL] is equal to "N"
                    Else
                         GB UM  [UOM] = GC UM  [UOM]
                    End If
                    // SAR 6500381- End
               Else
                    // SAR 5266271
                    // SAR 5413648 - load pricing UoM instead of transaction UoM
                    // 8955530-Do not load the Pricing UOM  as it would be
                    // loaded by the editline
                    UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
                         GB Item Number [UITM] <> szItemNumber [UITM]
                         GB Business Unit [MCU] <> szBranchPlant [MCU]
                         VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
                         GB Quantity Ordered [UORG] <> mnQuantity [UORG]
                         GB PR UM [UOM4] -> szUnitOfMeasure [UOM]
                         <Blank> -> cSuppressTerminateCache [EV02]
                         GB Unit Price [UPRC] <> mnUnitCost [PRRC]
                         VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                         VA evt_mnB4100380AdjRevLev_AREV [AREV] <> mnAdjustmentRevisionLevel [AREV]
                         GB Price Over Cd [PROV] <- cPriceOverrideCode [PROV]
                    // SAR 5413648 - load UoM for new line with UoM from original line
                    // SAR 6500381- Begin
                    // UOM is not copied for complementary Item and Editline would get the right
                    // UOM for the complimentary Item
                    If VA frm_SubstituteIndicator [SO05] is equal to <NULL>
                    And VA frm_Replacement [RPL] is equal to "N"
                    Else
                         GB UM  [UOM] = GC UM  [UOM]
                    End If
                    // SAR 6500381- End
               End If
               If VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
                    // SAR 8956108
                    IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                         VA grd_mnLineNumber_LNID [LNID] -> mnInputLineNumber [LNID]
                         ".001" -> mnLineNumberIncrement [LNIX]
                         VA grd_mnLineNumber_LNID [LNID] <- mnOutputLineNumber [XLIN]
                    GB Line Number [LNID] = VA grd_mnLineNumber_LNID [LNID]
                    //
                    // SAR 5041792
                    VA grd_APUM_UM_Ent [APUM] = VA evt_StoreUOM [UOM]
                    //
                    If VA frm_Replacement [RPL] is equal to "Y"
                         GB Last Stat [LTTR] = "915"
                         GB Next Stat [NXTR] = "   "
                    Else
                         GB Last Stat [LTTR] = "916"
                         GB Next Stat [NXTR] = "   "
                    End If
                    //
                    //      Set Sales Order Status flag - SO05
                    //
                    // SAR 5953388-Use Init function
                    InitializeSOALPHString(B4205100.InitializeSOALPHString)
                         GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    // *************************************************************************
                    // SAR 3110117 - Begin/End CHANGE
                    // Use position 5 instead of 4.
                    // *************************************************************************
                    ChangeStringElement(B4002410.ChangeStringElement)
                         GB ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                         "5" -> nPosition [INT01]
                         "1" -> cCharacter [EV01]
                    VA evt_CMLineNoForCopyF40UI74 [LNIX] = [VA evt_CMLineNoForCopyF40UI74 [LNIX]]+1
                    GB F40UI74 Line Number [LNIX] = VA evt_CMLineNoForCopyF40UI74 [LNIX]
                    F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                         "2" -> cActionCode [ACTN]
                         "2" -> cFromPrimaryFile [EV01]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerIdPrimary [CTID]
                         GC WF Line Number [LNIX] -> mnLineNoPrimaryWF [XLIN]
                         FC Order Number [DOCO] -> mnDocNoPrimary [DOCO]
                         FC Order Type [DCTO] -> szDocTypePrimary [DCTO]
                         FC Order Company [KCOO] -> szKeyCoPrimary [KCOO]
                         GC Line Number [LNID] -> mnLineNoPrimaryFile [LNID]
                         UNDEFINED <> cSumPrimaryFile [EV02]
                         UNDEFINED <> mnUnitPricePrimary [UPRC]
                         UNDEFINED <> mnForeignPricePrimary [FUP]
                         "2" -> cToSecondaryFile [EV03]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerIdSecondary [CTID]
                         VA evt_CMLineNoForCopyF40UI74 [LNIX] -> mnLineNoSecondaryWF [XLIN]
                         FC Order Type [DCTO] -> szDocTypeSecondary [OCTO]
                         FC Order Company [KCOO] -> szKeyCoSecondary [OKCO]
                         GB Line Number [LNID] -> mnLineNoSecondaryFile [OGNO]
                         UNDEFINED <> cSumSecondaryFile [EV04]
                         UNDEFINED <> mnUnitPriceSecondary [UPRC]
                         UNDEFINED <> mnForeignPriceSecondary [FUP]
                         "1" -> cSuppressErrors [EV05]
                         UNDEFINED <> szErrorMessageId [DTAI]
                         FC Order Number [DOCO] -> mnDocNoSecondary [DOCO]
                         FI Jobnumber [JOBS] -> mnJobNoPrimary [JOBS]
                         FI Jobnumber [JOBS] -> mnJobNoSecondary [JOBS]
                         VA evt_mnB4100380AdjRevLev_AREV [AREV] -> mnAdjRevisionLvlPrimary [AREV]
                         VA evt_mnOne_AREV [AREV] -> mnAdjRevisionLvlSecondary [AREV]
                         UNDEFINED <> cNumPrimaryKeys [EV06]
                         UNDEFINED <> mnSumDetachedPrimary [UPR2]
                         UNDEFINED <> mnFrgnSumDetachedPrimary [FUP]
                         UNDEFINED <> cNumSecondaryKeys [EV07]
                         UNDEFINED <> mnSumDetachedSecondary [UPR3]
                         UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
                         UNDEFINED <> mnUnitCostPrimary [UNCS]
                         UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
                         UNDEFINED <> mnUnitCostSecondary [UNCS]
                         UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
                         UNDEFINED <> szProgramId [PID]
                         UNDEFINED <> cAdjustmentTypePrimary [OLVL]
                         UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
                         UNDEFINED <> cProcessingMode [EV01]
                         FI mnProcessID [PEID] -> mnProcessIDPrimary [PEID]
                         FI mnTransactionID [TCID] -> mnTransactionIDPrimary [TCID]
                         FI mnProcessID [PEID] -> mnProcessIDSecondary [PEID]
                         FI mnTransactionID [TCID] -> mnTransactionIDSecondary [TCID]
                         UNDEFINED <> szOrderSuffixPrimary [SFXO]
                         UNDEFINED <> szOrderSuffixSecondary [SFXO]
                         UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
                         UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
                         UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
                         UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
                         UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
                         UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
                         UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
                         UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
                         UNDEFINED <> mnTierPrimary [TIER]
                         UNDEFINED <> mnTierSecondary [TIER]
                         UNDEFINED <> cIncludeOrExcludeCode [INX]
                         UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
                         UNDEFINED <> szCurrencyCodeFrom [CRCD]
                         UNDEFINED <> szCurrencyCodeTo [CRDC]
                         UNDEFINED <> mnTriangulationRateFrom [TRR1]
                         UNDEFINED <> mnTriangulationRateTo [TRR2]
                         UNDEFINED <> cCurrencyConversionMethod [CRCM]
                         UNDEFINED <> mnCurrencyConverRate [CRR]
                    GB CLVL-PC Lev (wf) [CLVL] = "1"
                    // End SAR 5266271
                    // SAR 5953388-Use Set function
                    SetAdjTypesAppliedALPH09(B4205100.SetAdjTypesAppliedALPH09)
                         GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "1" -> cValue [EV01]
                         UNDEFINED <> cErrorCode [ERRC]
                    //
                    // SAR 6386961 Begin
                    If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
                         If GC Demand Key [DEID] is not equal to <NULL>
                         And GC Demand Key [DEID] is not equal to "0"
                         And VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
                              GB Demand Key [DEID] = VA evt_mnStoreDemandId_DEID [DEID]
                              GB Pull Signal [PSIG] = VA evt_szStorePullSignal_PSIG [PSIG]
                              GB Release Date [RLDJ] = VA evt_jdStoreDateRelease_RLDJ [RLDJ]
                              GB Release Time [RLTM] = VA evt_mnStoreReleaseTime_RLTM [RLTM]
                              GB Release Number [RLNU] = VA evt_szStoreReleaseNumber_RLNU [RLNU]
                              GB Promised Ship [PPDJ] = VA evt_jdStorePromShipDate_PPDJ [PPDJ]
                              GB Scheduled Ship Time [PMDT] = VA evt_mnStorePromShipTime_PMDT [PMDT]
                              GB Request Date [DRQJ] = VA evt_jdStoreDateRequested_DRQJ [DRQJ]
                              GB Requested Del  Time [DRQT] = VA evt_mnStoreTimeRequested_DRQT [DRQT]
                              GB Promised Delivery [RSDJ] = VA evt_jdStorePromDelDate_RSDJ [RSDJ]
                              GB Promised Del  Time [RSDT] = VA evt_mnStorePromDelTime_RSDT [RSDT]
                              GB Source of Data [EV17] = "7"
                              GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                                   FI Computerid [CTID] -> szComputerID [CTID]
                                   FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                                   GB WF Line Number [LNIX] <- mnWFLineNo [LNIX]
                              F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
                                   FI Computerid [CTID] -> szComputerID [CTID]
                                   FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                                   GB WF Line Number [LNIX] -> mnWFLineNo [LNIX]
                                   VA evt_szStorePullSignal_PSIG [PSIG] -> szPullSignal [PSIG]
                                   VA evt_jdStoreDateRelease_RLDJ [RLDJ] -> jdDateRelease [RLDJ]
                                   VA evt_mnStoreReleaseTime_RLTM [RLTM] -> mnTimeRelease [RLTM]
                                   VA evt_mnStoreDemandId_DEID [DEID] -> mnDemandUniqueKey [DEID]
                         End If
                    End If
                    // SAR 6386961 End
                    // SAR 6507857
                    VA frm_InsertGBCalledinSub_EV01 [EV01] = "1"
                    Insert Grid Buffer Row(FC Grid,  <After Current Row>,  <Yes>,  <No>,  <Yes>,  <Yes>,  <Yes>)
               End If
          End While
          //
          //
          If VA frm_cachecursor_GENLNG [GENLNG] is not equal to "0"
          Or VA frm_cachecursor_GENLNG [GENLNG] is not equal to <NULL>
               FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
                    VA frm_cachecursor_GENLNG [GENLNG] <> idGenericLong [GENLNG]
          End If
     End If
     If PO szComplementaryItemXRef [XRT2] is not equal to <Blank>
          VA frm_QuantityToPass [SOQS] = [GC Quantity Shipped [SOQS]]+[GC Quantity Backordered [SOBK]]
          VA frm_Replacement [RPL] = <Blank>
          VA frm_SubstituteIndicator [SO05] = <Blank>
          If VA frm_QuantityToPass [SOQS] is greater than "0"
               If VA frm_NumberofCacheEntries [RRN] is greater than "0"
                    //
                    Get Selected Grid Row Number(FC Grid, VA frm_GridRowCounter)
                    //
                    //      Store values from Current Grid Row
                    //
                    Copy Grid Row To Grid Buffer(FC Grid, VA frm_GridRowCounter)
                    //
                    VA evt_StoreMCU [MCU] = GB Business Unit [MCU]
                    VA evt_StoreLNTY [LNTY] = GB Ln Ty [LNTY]
                    Clear Grid Buffer(FC Grid)
                    //
                    //      Unload the records returned in the memory cache
                    //
                    VA frm_cachecursor_GENLNG [GENLNG] = "0"
                    VA frm_EV21_LastCacheRecord [EV21] = "0"
                    While VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
                         //
                         // SAR 1886173 - add if statement around "Cache, Get Memory to check for Foreign
                         // or Domestic Price.
                         If FI Currencymode [CRRM] is equal to "F"
                              // SAR 5413648 - load pricing UoM instead of transaction UoM
                              UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
                                   GB Item Number [UITM] <> szItemNumber [UITM]
                                   GB Business Unit [MCU] <> szBranchPlant [MCU]
                                   UNDEFINED <> szLocation [LOCN]
                                   UNDEFINED <> szLotNumber [LOTN]
                                   UNDEFINED <> szCatalogNumber [CATN]
                                   UNDEFINED <> mnSupplierNumber [VEND]
                                   UNDEFINED <> mnOrderNumber [DOCO]
                                   UNDEFINED <> szKeyCompany [KCOO]
                                   UNDEFINED <> szSuffixNumber [SFXO]
                                   UNDEFINED <> mnOrderLineNumber [LNID]
                                   VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
                                   UNDEFINED <> szDocumentType [DCTO]
                                   GB Quantity Ordered [UORG] <> mnQuantity [UORG]
                                   GB PR UM [UOM4] <> szUnitOfMeasure [UOM]
                                   <Blank> -> cSuppressTerminateCache [EV02]
                                   GB Foreign Unit Price [FUP] <> mnUnitCost [PRRC]
                                   UNDEFINED <> nSequenceNumber [INT01]
                                   UNDEFINED <> szMemoLot1 [LOT1]
                                   UNDEFINED <> szMemoLot2 [LOT2]
                                   UNDEFINED <> szMemoLot3 [LOT3]
                                   VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                                   UNDEFINED <> szVendorLotNumber [RLOT]
                                   UNDEFINED <> jdDateLayerExpiration [MMEJ]
                                   UNDEFINED <> cLotStatusCode [LOTS]
                                   UNDEFINED <> mnIdentifierShortItem [ITM]
                                   UNDEFINED <> mnQtyOnHandPrimaryUn [PQOH]
                                   UNDEFINED <> mnLotPotency [LOTP]
                                   UNDEFINED <> szLotGrade [LOTG]
                                   UNDEFINED <> szDescriptionLine1 [DSC1]
                                   UNDEFINED <> cStockingType [STKT]
                                   UNDEFINED <> mnQuantityAvailable [QAVAL]
                                   UNDEFINED <> mnDualQuantity [DQTY]
                                   UNDEFINED <> szUnitOfMeasureSecondary [UOM2]
                                   UNDEFINED <> jdBasedOnDate [BODJ]
                                   UNDEFINED <> jdLotEffectivityDate [DLEJ]
                                   UNDEFINED <> jdOnHandDate [OHDJ]
                                   UNDEFINED <> jdSellByDate [SBDJ]
                                   UNDEFINED <> jdBestBeforeDate [BBDJ]
                                   UNDEFINED <> jdUserLotDate1 [U1DJ]
                                   UNDEFINED <> jdUserLotDate2 [U2DJ]
                                   UNDEFINED <> jdUserLotDate3 [U3DJ]
                                   UNDEFINED <> jdUserLotDate4 [U4DJ]
                                   UNDEFINED <> jdUserLotDate5 [U5DJ]
                                   UNDEFINED <> cBasePriceIndicator [BPIND]
                                   UNDEFINED <> cAdjustmentIndicator [ADIND]
                                   UNDEFINED <> mnAdjustmentRevisionLevel [AREV]
                                   UNDEFINED <> cPriceOverrideCode [PROV]
                              // SAR 5413648 - load UoM for new line with UoM from original line
                              // SAR 6500381- Begin
                              // UOM is not copied for complementary Item and Editline would get the right
                              // UOM for the complimentary Item
                              If VA frm_SubstituteIndicator [SO05] is equal to <NULL>
                              And VA frm_Replacement [RPL] is equal to "N"
                              Else
                                   GB UM  [UOM] = GC UM  [UOM]
                              End If
                              // SAR 6500381- End
                         Else
                              // SAR 5413648 - load pricing UoM instead of transaction UoM
                              UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
                                   GB Item Number [UITM] <> szItemNumber [UITM]
                                   GB Business Unit [MCU] <> szBranchPlant [MCU]
                                   UNDEFINED <> szLocation [LOCN]
                                   UNDEFINED <> szLotNumber [LOTN]
                                   UNDEFINED <> szCatalogNumber [CATN]
                                   UNDEFINED <> mnSupplierNumber [VEND]
                                   UNDEFINED <> mnOrderNumber [DOCO]
                                   UNDEFINED <> szKeyCompany [KCOO]
                                   UNDEFINED <> szSuffixNumber [SFXO]
                                   UNDEFINED <> mnOrderLineNumber [LNID]
                                   VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
                                   UNDEFINED <> szDocumentType [DCTO]
                                   GB Quantity Ordered [UORG] <> mnQuantity [UORG]
                                   GB PR UM [UOM4] <> szUnitOfMeasure [UOM]
                                   <Blank> -> cSuppressTerminateCache [EV02]
                                   GB Unit Price [UPRC] <> mnUnitCost [PRRC]
                                   UNDEFINED <> nSequenceNumber [INT01]
                                   UNDEFINED <> szMemoLot1 [LOT1]
                                   UNDEFINED <> szMemoLot2 [LOT2]
                                   UNDEFINED <> szMemoLot3 [LOT3]
                                   VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                                   UNDEFINED <> szVendorLotNumber [RLOT]
                                   UNDEFINED <> jdDateLayerExpiration [MMEJ]
                                   UNDEFINED <> cLotStatusCode [LOTS]
                                   UNDEFINED <> mnIdentifierShortItem [ITM]
                                   UNDEFINED <> mnQtyOnHandPrimaryUn [PQOH]
                                   UNDEFINED <> mnLotPotency [LOTP]
                                   UNDEFINED <> szLotGrade [LOTG]
                                   UNDEFINED <> szDescriptionLine1 [DSC1]
                                   UNDEFINED <> cStockingType [STKT]
                                   UNDEFINED <> mnQuantityAvailable [QAVAL]
                                   UNDEFINED <> mnDualQuantity [DQTY]
                                   UNDEFINED <> szUnitOfMeasureSecondary [UOM2]
                                   UNDEFINED <> jdBasedOnDate [BODJ]
                                   UNDEFINED <> jdLotEffectivityDate [DLEJ]
                                   UNDEFINED <> jdOnHandDate [OHDJ]
                                   UNDEFINED <> jdSellByDate [SBDJ]
                                   UNDEFINED <> jdBestBeforeDate [BBDJ]
                                   UNDEFINED <> jdUserLotDate1 [U1DJ]
                                   UNDEFINED <> jdUserLotDate2 [U2DJ]
                                   UNDEFINED <> jdUserLotDate3 [U3DJ]
                                   UNDEFINED <> jdUserLotDate4 [U4DJ]
                                   UNDEFINED <> jdUserLotDate5 [U5DJ]
                                   UNDEFINED <> cBasePriceIndicator [BPIND]
                                   UNDEFINED <> cAdjustmentIndicator [ADIND]
                                   UNDEFINED <> mnAdjustmentRevisionLevel [AREV]
                                   UNDEFINED <> cPriceOverrideCode [PROV]
                              // SAR 5413648 - load UoM for new line with UoM from original line
                              // SAR 6500381- Begin
                              // UOM is not copied for complementary Item and Editline would get the right
                              // UOM for the complimentary Item
                              If VA frm_SubstituteIndicator [SO05] is equal to <NULL>
                              And VA frm_Replacement [RPL] is equal to "N"
                              Else
                                   GB UM  [UOM] = GC UM  [UOM]
                              End If
                              // SAR 6500381- End
                         End If
                         If VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
                              VA grd_ACTI_ActionHidden [ACTI] = "A"
                              //
                              // SAR 1847351
                              If PO cUseSubsItemPrice [EV15] is not equal to "1"
                                   // Use original item's price.
                                   GB Price Over Cd [PROV] = "1"
                              End If
                              //
                              //
                              GB Last Stat [LTTR] = "916"
                              //
                              // SAR 6507857
                              VA frm_InsertGBCalledinSub_EV01 [EV01] = "1"
                              Insert Grid Buffer Row(FC Grid,  <After Current Row>,  <Yes>,  <No>,  <Yes>,  <Yes>,  <Yes>)
                         End If
                    End While
                    //
                    //      Free the handle to the cache
                    //
                    If VA frm_cachecursor_GENLNG [GENLNG] is not equal to "0"
                    Or VA frm_cachecursor_GENLNG [GENLNG] is not equal to <NULL>
                         FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
                              VA frm_cachecursor_GENLNG [GENLNG] <> idGenericLong [GENLNG]
                    End If
               End If
          End If
     End If
     //
     //      SAR # 1028831
     //      End of additions for Get Substitute/Complementary/Replacement
     //      Items - BF N4201100
     //
     // SAR 5266271
     If GC Next Stat [NXTR] is not equal to VA evt_szCancelStatusCodeNxt_NXTR [NXTR]
     And VA evt_ContinueProcess [EV02] is equal to "1"
          GC CLVL-PC Lev (wf) [CLVL] = [GC CLVL-PC Lev (wf) [CLVL]]+1
     Else
          If GC Next Stat [NXTR] is equal to VA evt_szCancelStatusCodeNxt_NXTR [NXTR]
               GC Price Over Cd [PROV] = "1"
          Else
               // if this GC is not set to zero, duplicate LNIX values cause F42UI11 cache add
               // failures
               GC WF Line Number [LNIX] = "0"
          End If
     End If
     If FI Currencymode [CRRM] is equal to "F"
          VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] = VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC]
     Else
          VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] = VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC]
     End If
     // End SAR 5266271
     // SAR 6507857
     VA frm_InsertGBCalledinSub_EV01 [EV01] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Sales Blanket Order Information
Event: Button Clicked
Event GUID: 909339e0-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnBlanketShipTo_SHAN [SHAN]
evt_mnBlanketAddressNumber_AN8 [AN8]
evt_mnBlanketDeliverTo_DVAN [DVAN]
evt_szBlanketCustomerPO_VR01 [VR01]
----------------------------------------
If GC Blankets Exists [BLKT] is greater than <Blank>
     //     SAR 8719950 prevent call EditLine on non-auto display BLANKET
     // 
     VA frm_cManualBlanketRelease_EV01 [EV01] = "1"
     Press Button(FC BlanketReleaseSelect)
     VA frm_cManualBlanketRelease_EV01 [EV01] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Cancel Sales Detail Line
Event: Button Clicked
Event GUID: f57df5f6-a23a-11d0-a204-0000f6728a56
=============================================
//
// SAR 8971207 - If Line is already cancelled, do not process again
If VA grd_cLineCancelled_EV01 [EV01] is not equal to "1"
     // SAR 7705935 - Begins
     // To pop up warning when a SO line is cancelled without giving warning
     If PO cRequiredReasonCode [EV02] is equal to "1"
     And VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
     And GC Revision Reason [RFRV] is less than or equal to <Blank>
     And VA frm_ACTI_Action_Code [ACTI] is equal to "C"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC RevisionReason, "0003")
          Stop Processing
     End If
     // SAR 7705935 - Ends
     // SAR 5451257
     If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
          GC % Profit Margin [PRMG] = "0"
     End If
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          // SAR 2883871
          Press Button(FC Delete Lines)
     Else
          SetELCalledFromSOEL16(B4205101.SetELCalledFromSOEL16)
               VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
               "3" -> cValue [EV01]
          // 6897939- set the internal flag
          // **************************************************************************
          // SAR 3489817 - Begin ADD
          // Prepayment Processing.  When ATS == 05, deletions are not allowed
          // to the sales order line.
          // **************************************************************************
          If PO cActivatePrepayProcess [EV01] is equal to "1"
               F004201.Open
                    
               If SV File_IO_Status is equal to CO SUCCESS
               Or SV File_IO_Status is equal to CO TABLE_ALREADY_OPEN
                    VA frm_SFXO_szOrderSuffix [SFXO] = "000"
                    VA frm_SEQ_mnSequenceNumber [SEQ] = 0
                    VA frm_POF_szPrepayOrigination [POF] = "01"
                    F004201.FetchSingle  [Index 1: DOCO, DCTO, KCOO +]
                         FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                         FC Order Type [DCTO] = TK Order Type [DCTO]
                         FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                         VA frm_SFXO_szOrderSuffix [SFXO] = TK Order Suffix [SFXO]
                         GC Line Number [LNID] = TK Line Number [LNID]
                         VA frm_SEQ_mnSequenceNumber [SEQ] = TK Sequence Number [SEQ]
                         VA frm_POF_szPrepayOrigination [POF] = TK PrepaymentOriginationFlag [POF]
                         VA frm_ATS_szPrepayTransStatus [ATS] <- TK Prepayment Transaction Status [ATS]
                    If VA frm_ATS_szPrepayTransStatus [ATS] is equal to "05"
                         Set Control Error(FC Grid, "114U")
                         F004201.Close
                              
                         Stop Processing
                    End If
               End If
               F004201.Close
                    
          End If
          // SAR 3489817 - End ADD
          //
          // SAR 2771132
          // SAR 4957993 - modify condition
          If PO cShoppingCartMode [CART] is greater than <Blank>
          And PO cShoppingCartMode [CART] is not equal to <NULL>
          And PO cShoppingCartMode [CART] is not equal to "0"
               ChangeStringElement(B4002410.ChangeStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                    "26" -> nPosition [INT01]
                    "1" -> cCharacter [EV01]
               // SAR 3650931 - allow users to cancel CSS line
               If SV Form_ Mode is equal to CO COPY_MODE
               Or SV Form_ Mode is equal to CO UPDATE_MODE
                    If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
                    Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
                    Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "0"
                         // // SAR 4957993 - add condition
                         If PO szNonUpdatableStatus [NXT2] is not equal to <Blank>
                         And PO szNonUpdatableStatus [NXT2] is not equal to <NULL>
                         And PO szNonUpdatableStatus [NXT2] is not equal to "0"
                         And GC Next Stat [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = "0"
                         Else
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = "1"
                         End If
                    End If
               End If
          End If
          //
          If GC Kit Master Line No [KTLN] is equal to "0"
          And GC Kit Cpnt Line No [CPNT] is equal to "0"
               //     Only allow to Cancel-Line on Master Item on this button
               //
               // SAR 3011549 - Begin/End CHANGE
               // SAR 3186488 - Begin/End CHANGE
               // SAR 3406866, Pass in PEID and TCID
               // SAR 3806894 - pass in foreign unit cost
               // sar 5224417
               // SAR 6250967 - Invalid ProgramID
               // SAR 6386961 Pass Release Number
               // SAR 6368922 Pass GC Associated Text
               // SAR 7705935 - GC Revision Reason -> szGenericString2_DL0
               // SAR 8311495-Pass GC Customer PO
               // SAR 8968732 - Taxed Prices Enhancement - Pass Taxed Prices
               // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
               // Production Short Number
               F4211FSEditLine(B4200310.F4211FSEditLine)
                    FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                    "D" -> cCMLineAction [ACTN]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                    VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                    VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    GC Line Number [LNID] <> mnLineNo [LNID]
                    GC Business Unit [MCU] <> szBusinessUnit [MCU]
                    GC Ship To Number [SHAN] -> mnShipToNo [SHAN]
                    GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                    GC Sched Pick [PDDJ] -> jdPromisedDate [PDDJ]
                    GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                    GC Promised Delivery [RSDJ] -> jdPromisedDlvryDate [RSDJ]
                    GC Item Number [UITM] -> szItemNo [UITM]
                    GC Location  [LOCN] -> szLocation [LOCN]
                    GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                    GC Description  [DSC1] -> szDescription1 [DSC1]
                    GC Description Line 2 [DSC2] -> szDescription2 [DSC2]
                    GC Ln Ty [LNTY] -> szLineType [LNTY]
                    GC Last Stat [LTTR] <> szLastStatus [LTTR]
                    GC Next Stat [NXTR] <> szNextStatus [NXTR]
                    GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                    GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                    GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                    GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                    GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
                    GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                    GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
                    GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                    GC Print Message [INMG] <> szPrintMesg [INMG]
                    GC Pay Inst [RYIN] -> cPaymentInstrument [RYIN]
                    GC Adj. Schedule [ASN] -> szAdjustmentSchedule [ASN]
                    GC Taxable  [TAX1] -> cSalesTaxableYN [TAX1]
                    GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                    GC UM  [UOM] -> szTransactionUOM [UOM]
                    GC PR UM [UOM4] -> szPricingUOM [UOM4]
                    GC Unit Weight [ITWT] -> mnItemWeight [ITWT]
                    GC Wt U/M [WTUM] -> szWeightUOM [WTUM]
                    GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [FUP]
                    GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                    GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
                    GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                    "EP4210" -> szCMProgramID [JPID]
                    SL VersionName -> szCMVersion [VERS]
                    GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                    GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                    GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                    GC Price Over Cd [PROV] -> cOverridePrice [PROV]
                    VA grd_CSTO_Cost_Over [CSTO] -> cOverrideCost [CSTO]
                    VA frm_USER_User_ID [USER] -> szUserID [USER]
                    BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                    FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                    FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                    VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                    VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                    GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                    GC OKCO- Doc Co (wf) [OKCO] -> szOriginalOrderKeyCo [OKCO]
                    GC Original Order No [OORN] -> szOriginalOrderNo [OORN]
                    GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
                    GC Original Line Number [OGNO] -> mnOriginalOrderLineNo [OGNO]
                    GC Short Item No [ITM] -> mnShortItemNo [ITM]
                    VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                    VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                    VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                    GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                    GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                    GC Line of Business [LOB] <> szLineofBusiness [LOB]
                    GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                    GC End Use [EUSE] <> szEndUse [EUSE]
                    GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                    GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                    GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                    GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
                    VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                    VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                    VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                    VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                    GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                    GB Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                    GC Carrier Number [CARS] <> mnCarrier [CARS]
                    GC Revision Reason [RFRV] -> szGenericString2_DL02 [DL02]
                    VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                    GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                    GC Reference  [VR01] -> szCustomerPO_VR01 [VR01]
                    FI mnProcessID [PEID] -> mnProcessID [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                    GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                    GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                    GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szSOEMBFInternalFlags [SOEF]
                    GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                    GC Sec UM [UOM2] <> szDualUOM [UOM2]
                    GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
                    GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                    GC Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
                    GC Kit Component Dirty Flag [KITDIRTY] -> cKitComponentDirtyFlag [KITDIRTY]
                    GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                    GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                    GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                    GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                    GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                    GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                    GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                    GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                    GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                    GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                    GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                    GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
               If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
                    Set Grid Font(FC Grid, <Current Row>,  <All Columns>, <,Regular,10,Black>)
               End If
               //
               //     Set ER to cancel line components in K&C processing button
               //     Otherwise this event wil get endless loop with repeat for grid OPTION
               //     Must reset control flag ProcessCancelLine every use.
               //
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    VA frm_STKT_ProcessCancelLine [STKT] = VA grd_STKT_Stocking_Type [STKT]
                    VA frm_LNID_Cancel [LNID] = GC Line Number [LNID]
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                         //
                         // SAR 7328148, when from and through line no are there, means kit windowd
                         // opened and oked, need to call 1170 in bypass mode to clear the F42UI11 on
                         // those records, the second 1170 will then based on F4211 to canceled the
                         // components, this may result outof sync parent/children. If issue arise, we
                         // can cancel the parent based on F4211 record as well.
                         // Note: 1 cRecordWrittentoWF = 1
                         If VA grd_LIN_Through_Line_Number [LIN] is greater than "0"
                         And VA grd_LINN_From_Line_Number [LINN] is greater than "0"
                              CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
                                   "1" -> cSuppressErrorMessage [SUPPS]
                                   FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
                                   FC Order Type [DCTO] -> szSO_Type [DCTO]
                                   FC Order Company [KCOO] -> szSO_Company [KCOO]
                                   VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
                                   FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                                   VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                   VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
                                   VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
                                   "P4210" -> szProgramId [PID]
                                   SL VersionName -> szVersion [VERS]
                                   BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                                   VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
                                   VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
                                   VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                                   FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                                   FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                                   VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                                   VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                                   "B" -> cCMLineAction [ACTN]
                                   "1" -> cCMRecdWrittenToWF [EV18]
                                   VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                                   GC Ln Ty [LNTY] -> szParentLineType [LNTY]
                                   PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
                                   GB Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
                         End If
                         //
                         CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
                              "1" -> cSuppressErrorMessage [SUPPS]
                              FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
                              FC Order Type [DCTO] -> szSO_Type [DCTO]
                              FC Order Company [KCOO] -> szSO_Company [KCOO]
                              VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
                              FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
                              VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
                              "P4210" -> szProgramId [PID]
                              SL VersionName -> szVersion [VERS]
                              BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
                              VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
                              VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                              FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                              "D" -> cCMLineAction [ACTN]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] -> cCMRecdWrittenToWF [EV18]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                              GC Ln Ty [LNTY] -> szParentLineType [LNTY]
                              PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
                              GB Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
                    End If
                    // SAR#5072396 - Call Configurator Cancel Components function for configured ite
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                         CancelConfiguredComponents(B3201590.CancelConfiguredComponents)
                              "42" -> szProductCode [SY]
                              VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              "000" -> szOrderSuffix [SFXO]
                              VA frm_LNID_Cancel [LNID] -> mnLineNumber [LNID]
                              FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              SL VersionName -> szVersion [VERS]
                              "TP4210" -> szProgramId [PID]
                              VA frm_EV22_cCacheOn [EV22] -> cUseCache [EV01]
                              VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
                              BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProc [MATH01]
                              FC OTOT: Order Total Display [TOT1] -> mnAmountOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] -> mnAmountForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] -> mnAmountTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] -> mnAmountForeignTotalCost [FCST]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] -> cRecordInDetailWorkFile [EV01]
                         CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
                              "1" -> cSuppressErrorMessage [SUPPS]
                              FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
                              FC Order Type [DCTO] -> szSO_Type [DCTO]
                              FC Order Company [KCOO] -> szSO_Company [KCOO]
                              VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
                              FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
                              VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
                              "P4210" -> szProgramId [PID]
                              SL VersionName -> szVersion [VERS]
                              BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
                              VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
                              VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                              FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                              "D" -> cCMLineAction [ACTN]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] -> cCMRecdWrittenToWF [EV18]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                              GC Ln Ty [LNTY] -> szParentLineType [LNTY]
                              PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
                    End If
                    // End of SAR#5072396
                    //
                    Press Button(FC Kit and Configurator processing)
                    VA frm_STKT_ProcessCancelLine [STKT] = "0"
               End If
          End If
     End If
     // SAR 8971207 - Set the variable to 1 if Line is cancelled once
     VA grd_cLineCancelled_EV01 [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Set Unit and Extended Price to Zero
Event: Button Clicked
Event GUID: 90933c77-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 5953388
// BUG 11054756
If PO cDisableorHidePrice [EV04] is not equal to "1"
And PO cDisableorHidePrice [EV04] is not equal to "2"
And VA grd_cLntyProtectPrice_PDC1 [PDC1] is not equal to "1"
And VA grd_cLntyProtectPrice_PDC1 [PDC1] is not equal to "Y"
     // SAR 7765006 - passing szEditLineSOEMBFFlag and cPricingOnOverride
     // SAR 8955603 - Zero out taxed prices
     ZeroPriceExitButtonClicked(B4504210.ZeroPriceExitButtonClicked)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
          VA grd_EV05_Ext_Price_Changed [EV05] <> cExtendedPriceChanged [EV05]
          VA grd_EV06_Unit_Price_Changed [EV06] <> cUnitPriceChanged [EV06]
          VA grd_UCSTR_Saved_Unit_Price [UCSTR] <> mnSavedUnitPrice [UCSTR]
          VA grd_XEXP_Saved_Ext_Price [XEXP] <> mnSavedExtendedPrice [XEXP]
          GC Price Over Cd [PROV] <> cPriceOverrideCode [EV01]
          GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
          GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
          GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
          GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
          VA frm_ADVP_cAdv_Pricing [ADVP] -> cAdvancedSalesPricingYN [ADVP]
          GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
          VA grd_AREV_Rev_Lev [AREV] <> mnAdjustmentRevisionLevel [AREV]
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          VA frm_cPricingOnOverride_CP28 [CP28] -> cPricingOnOverridePrice [CP28]
          GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
          GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
          GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
          GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
          GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
          GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
          GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
          GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
          GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
          VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] <> mnSavedTaxedUnitPrice [UCSTR]
          VA grd_SavedTaxedExtPrice_XEXP [XEXP] <> mnSavedTaxedExtendedPrice [XEXP]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
     //
     // SAR 7487923 - Begins
     Press Button(FC Approval)
     Press Button(FC Audit Logging)
     // SAR 7487923 - Ends
     //
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Set Unit and Extended Cost to zero
Event: Button Clicked
Event GUID: e6b10844-74f0-11d3-9b4c-00105a1c004a
=============================================
// SAR 2597971 - Begin ADD 
// Sar 5364444
If PO cDisableorHideCost [EV03] is not equal to "1"
And PO cDisableorHideCost [EV03] is not equal to "2"
     VA grd_EV07_Unit_Cost_Changed [EV07] = "1"
     VA grd_EV08_Ext_Cost_Changed [EV08] = "1"
     VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = "0"
     VA grd_XCST_Saved_Ext_Cost [XCST] = "0"
     VA grd_CSTO_Cost_Over [CSTO] = "1"
     GC Unit Cost [UNCS] = "0"
     GC Extended Cost [ECST] = "0"
     GC Foreign Unit Cost [FUC] = "0"
     GC Foreign Extended Cost [FEC] = "0"
     // 
     // SAR 7487923 - Begins
     Press Button(FC Audit Logging)
     // SAR 7487923 - Ends
     // 
End If
// SAR 2597971 - End ADD 


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Bypass Processing for Current Line
Event: Button Clicked
Event GUID: 90933f11-a23d-11d0-a204-0000f6728a56
=============================================
If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
     // 7817646 - begin
     Media Object Structures(GT4211A,  <Default Media Object>,  <Delete>, VA frm_cStatusEverestEventPoint01, FC Order Number, FC Order Type, FC Order Company, GC LineNumber)
     // 7817646 - end
     // SAR 2883871
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA frm_STKT_ProcessCancelLine [STKT] = VA grd_STKT_Stocking_Type [STKT]
     End If
     Press Button(FC Delete Lines)
     VA frm_STKT_ProcessCancelLine [STKT] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Select Agreement
Event: Button Clicked
Event GUID: 5ef15cf0-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 3761219 - Begin/End CHANGE
Call App:P38200W Form:W38200WB Version: 
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
     GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
     GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
     VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
     VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
     VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     "000" -> szOrderSuffix [SFXO]
     UNDEFINED <> cUpdateGeneralLedger [UPGL]
     UNDEFINED <> cPriceatAmbiantorStandard [PRAS]
     GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
     UNDEFINED <> szAdjustmentSchedule [ASN]
     UNDEFINED <> mnPartner [PTNR]
     UNDEFINED <> szUnitOfMeasureAsInput [UOM]
     UNDEFINED <> cAgreementType [DMTC]
     UNDEFINED <> cCommingledOtherOwner [CMOO]
     GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
! If GC Agreement Number [DMCT] is not equal to <Blank>
     ! F4211SalesOrderAgreementCache(B3800080.F4211SalesOrderAgreementCache)
     !      FI Jobnumber [JOBS] -> mnJobNumber_JOBS [JOBS]
     !      VA frm_CTID_Computer_ID [CTID] -> szComputerID_CTID [CTID]
     !      GC Agreement Number [DMCT] <> szAgreementNumber_DMCT [DMCT]
     !      GC Supp No [DMCS] <> mnAgreementSupplement_DMCS [DMCS]
     !      UNDEFINED <> szProductSource_PSR [PSR]
     !      UNDEFINED <> szProductSourceType_PSRY [PSRY]
     !      UNDEFINED <> mnSequenceNumber_SEQ [SEQ]
     !      FC Order Number [DOCO] -> mnOrderNumber_DOCO [DOCO]
     !      FC Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     !      FC Order Company [KCOO] -> szOrderKeyCompany_KCOO [KCOO]
     !      GC Line Number [LNID] -> mnLineNumber_LNID [LNID]
     !      UNDEFINED <> mnAgreementsFound_AFND [AFND]
     !      VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF_LNIX [LNIX]
     !      "3" -> cModeProcessing_MODE [MODE]
     !      UNDEFINED <> mnNumberOfLines_NLIN [NLIN]
     !      UNDEFINED <> szOrderSuffix_SFXO [SFXO]
     !      UNDEFINED <> idCacheCursor_GENLNG [GENLNG]
     !      UNDEFINED <> mnNumberOfKeys_CDL [CDL]
     !      UNDEFINED <> cLastRecordRead_EV01 [EV01]
     !      UNDEFINED <> cErrorCode_ERRC [ERRC]
     !      UNDEFINED <> cSuppressErrorMessage_SUPPS [SUPPS]
! End If
// SAR 4292151 - Begin ADD
If SL CurrencyProcessing is equal to "N"
     If GC Unit Price [UPRC] is not equal to VA grd_UCSTR_Saved_Unit_Price [UCSTR]
          GC Extended Price [AEXP] = "0"
     End If
Else
     // SAR 5580260
     If FC Mode (F) [CRRM] is equal to "F"
     And SV Form_ Mode is equal to CO ADD_MODE
     And GC Unit Price [UPRC] is not equal to "0"
     And GC Foreign Unit Price [FUP] is equal to "0"
          GC Foreign Unit Price [FUP] = GC Unit Price [UPRC]
          GC Unit Price [UPRC] = "0"
     End If
     // 
     If FC Mode (F) [CRRM] is equal to "D"
     And GC Unit Price [UPRC] is not equal to VA grd_UCSTR_Saved_Unit_Price [UCSTR]
     Or FC Mode (F) [CRRM] is equal to "F"
     And GC Foreign Unit Price [FUP] is not equal to VA grd_UCSTR_Saved_Unit_Price [UCSTR]
          GC Extended Price [AEXP] = "0"
          GC Foreign Extended Price [FEA] = "0"
     End If
End If
// SAR 4292151 - End ADD


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Select Ship To
Event: Button Clicked
Event GUID: 60fa6811-4c0d-11d3-a30e-00105a1c0327
=============================================
// SAR 3202062 - based on the processing option, CSS users can select a ship to
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     If PO szOrganizationTypeStructur [OSTP] is not equal to <Blank>
     And PO szOrganizationTypeStructur [OSTP] is not equal to <NULL>
          Call App:P0150S Form:W0150SA Version: 
               PO szOrganizationTypeStructur [OSTP] -> szOrganizationTypeStructur [OSTP]
               VA frm_mnUserABNumber_AN8 [AN8] -> mnAddressNumberParent [PA8]
               VA frm_mnSelectedCSSShipTo_SHAN [SHAN] <- mnAddressNumber [AN8]
               VA frm_szSelectedShipToName_DL01 [DL01] <- szDescription001 [DL01]
     Else
          Call App:P0150R Form:W0150RA Version: 
               VA frm_mnUserABNumber_AN8 [AN8] -> mnAddressNumber [AN8]
               VA frm_mnSelectedCSSShipTo_SHAN [SHAN] <- mnCompanyNumber_2 [AN8]
               VA frm_szSelectedShipToName_DL01 [DL01] <- szCompanyName [DL01]
     End If
End If
If VA frm_mnSelectedCSSShipTo_SHAN [SHAN] is not equal to <Blank>
And VA frm_mnSelectedCSSShipTo_SHAN [SHAN] is not equal to <NULL>
And VA frm_mnSelectedCSSShipTo_SHAN [SHAN] is not equal to "0"
And VA frm_szSelectedShipToName_DL01 [DL01] is not equal to <Blank>
And VA frm_szSelectedShipToName_DL01 [DL01] is not equal to <NULL>
     GC Ship To Number [SHAN] = VA frm_mnSelectedCSSShipTo_SHAN [SHAN]
     GC Description  [DL01] = VA frm_szSelectedShipToName_DL01 [DL01]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Regional Information
Event: Button Clicked
Event GUID: 5ef15ce6-e064-11d1-9ac9-00600832fe19
=============================================
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "XIT" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     "000" -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     VA grd_ACTI_ActionHidden [ACTI] -> cNewRecords [EV01]
     FC Address Number [AN8] -> mnAddressNumber [AN8]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Configured Related Orders
Event: Button Clicked
Event GUID: a0686ca6-9d9d-43d1-ac2a-b0333ae45ef9
=============================================
// SAR#5072396 - Begin
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     // Display the Configured Related Orders Form
     // The Form Interconnect DS is solely based on the Configured design document.
     // One or more objects in the line below was partially resolved.Please check!!!
     Call App:P3201 Form:W3201A Version:Undefined
          UNDEFINED <> mnConfigurationIDNumber [CFGID]
          UNDEFINED <> mnComponentIDNumber [CFGCID]
          "42" -> szProductCode [SY]
          GC Order Co [KCOO] -> szOrder_Company_Order_Numb [KCOO]
          GC Order Number [DOCO] -> mnDocument_Order_No_Invoic [DOCO]
          GC Or Ty [DCTO] -> szOrder_Type_F3201 [DCTO]
          UNDEFINED <> szOrder_Suffix_F3201 [SFXO]
          GC Line Number [LNID] -> mnLine_Number_F3201 [LNID]
End If
// SAR#5072396 - End


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Display Configured Generic Text
Event: Button Clicked
Event GUID: bf23c53c-4487-4f26-8056-7ddcb4533061
=============================================
GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     GC Business Unit [MCU] -> szBranch [MCU]
     GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
     <Blank> -> cSuppressErrorMessage [EV01]
     FC DTAI-Error Msg ID [DTAI] <- szErrorMessageID [DTAI]
If FC DTAI-Error Msg ID [DTAI] is not equal to <Blank>
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, FC DTAI-Error Msg ID)
Else
     // SAR#5072396-Begin
     If VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4790")
     Else
          // Display the Configured Generic Text  GT3201
          // The Interconnect DS is solely based on the Configured design document.
          // One or more objects in the line below was partially resolved.Please check!!!
          VA frm_szErrorMessageIDForConfg [DTAI] = <NULL>
          VA frm_BogusStatusForConfgGeneric [ALPH] = <NULL>
          // SAR 5495305
          GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
               "42" -> szSystemCode [SY]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKey [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               BC Order Suffix (F4211.0) [SFXO] -> szOrderSuffix [SFXO]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_szErrorMessageIDForConfg [DTAI] <- szErrorMessageID [DTAI]
               VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
               VA frm_mnComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
               UNDEFINED <> szProgramId [PID]
          If VA frm_szErrorMessageIDForConfg [DTAI] is equal to <Blank>
               Media Object Structures(GT3201, <Default Media Object>, <Display>, <First Text Item>, VA frm_BogusStatusForConfgGeneric, VA frm_ConfigurationIDNumber, VA frm_mnComponentIDNumber)
          End If
     End If
     // SAR#5072396-End
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Matrix Order Entry
Event: Button Clicked
Event GUID: 5c3f45af-2c3e-4757-a8b9-bb1eb92033c6
=============================================
// *************************************************************************
// SAR#5113442
If VA grd_cMatrixControlled123_MIC [MIC] is equal to "1"
Or VA grd_cMatrixControlled123_MIC [MIC] is equal to "2"
Or GC Matrix Control Line Number [MCLN] is greater than "0"
     Press Button(FC Matrix Order)
End If
// *************************************************************************


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Segmented Item Availability
Event: Button Clicked
Event GUID: c33f0686-096c-11d4-9793-000629b033eb
=============================================
Call App:P41206 Form:W41206A Version:ZJDE0001
     GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
     FC Business Unit [MCU] -> szBranchPlant [MCU]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Volume Based UpSelling
Event: Button Clicked
Event GUID: c1a72446-6059-4808-a031-14d5aff076ab
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnOriginalQtyOrdered_UORG [UORG]
evt_szOrigUnitofMeasure_UOM [UOM]
----------------------------------------
//    SAR 7481433 Begin
If GC Volume UpSell Opportunity Exists [UPEX] is equal to "X"
     // SAR 5633579
     VA evt_mnOriginalQtyOrdered_UORG [UORG] = GC Quantity Ordered [UORG]
     VA evt_szOrigUnitofMeasure_UOM [UOM] = GC UM  [UOM]
     // End SAR 5633579
     // SAR 5510587
     Call App:P40722 Form:W40722B Version:Undefined
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
          GC Quantity Ordered [UORG] <> mnQuantityMinimum [MNQ]
          GC UM  [UOM] <> szUnitOfMeasureAsInput [UOM]
     // SAR 5633579
     If GC Quantity Ordered [UORG] is equal to <Blank>
     Or GC Quantity Ordered [UORG] is equal to <NULL>
     Or GC Quantity Ordered [UORG] is equal to "0"
          GC Quantity Ordered [UORG] = VA evt_mnOriginalQtyOrdered_UORG [UORG]
     End If
     If GC UM  [UOM] is equal to <Blank>
     Or GC UM  [UOM] is equal to <NULL>
     Or GC UM  [UOM] is equal to "0"
          GC UM  [UOM] = VA evt_szOrigUnitofMeasure_UOM [UOM]
     End If
     If VA evt_mnOriginalQtyOrdered_UORG [UORG] is not equal to GC Quantity Ordered [UORG]
          GC Quantity Canceled [SOCN] = "0"
          GC Quantity Backordered [SOBK] = "0"
          GC Quantity Shipped [SOQS] = "0"
     End If
     // End SAR 5633579
End If
//    SAR 7481433 End


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Exit to Revision History
Event: Button Clicked
Event GUID: 99f03350-e732-4ef9-b87d-2d805ac407ef
=============================================
// 
// Exit to Revision History
// 
Call App:P42420 Form:W42420B Version: 
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Chg Ord [CORD] -> mnNumberChangeOrder [CORD]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Delete Line
Event: Button Clicked
Event GUID: 64503371-a620-43a8-99da-3cc4420888c7
=============================================
// 
// SAR 6131571
// 
Press Button(HC Bypass &New Line)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: HC Generate Production Number
Event: Button Clicked
Event GUID: c8041e17-4685-4083-af43-8023d54bb305
=============================================
// AutoGenerate Production Number
If PO szProductionNumberType [PRODT] is not equal to <Blank>
And PO szProductionNumberType [PRODT] is not equal to <NULL>
     ! GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     !      GC Business Unit [MCU] -> szBranch [MCU]
     !      GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     !      "1" -> cSuppressErrorMessage [EV01]
     !      "0" -> idF4102Pointer [GENLNG]
     !      Could not resolve variable: 2274 <- cPMPNEnabledYN [PNYN]
     If VA grd_cSuppressPNGenerate_EV01 [EV01] is not equal to "2"
     And VA grd_cPMPNEnabled_PNYN [PNYN] is equal to "Y"
          If GC Production Number [PMPN] is equal to or empty <Blank>
          Or GC Production Number [PMPN] is equal to <NULL>
               GenerateProductionNumber(B3402200.GenerateProductionNumber)
                    FC Order Company [KCOO] -> szCompanyKey [KCO]
                    PO szProductionNumberType [PRODT] -> szProductionNumberType [PRODT]
                    GC Item Number [UITM] -> szItemNumber [LITM]
                    FC Address Number [AN8] -> mnCustomer [AN8]
                    GC Production Number [PMPN] <- szProductionNumber [PMPN]
               If GC GeneratedProduction NumberShort [PNS] is equal to <Blank>
               Or GC GeneratedProduction NumberShort [PNS] is equal to <NULL>
               Or GC GeneratedProduction NumberShort [PNS] is equal to "0"
                    X0010GetNextNumber(X0010.X0010GetNextNumber)
                         "34" -> szSystemCode [SY]
                         "4" -> mnNextNumberingIndexNo [NNIX]
                         GC GeneratedProduction NumberShort [PNS] <- mnNextNumber001 [N001]
               End If
               If GC Production Number [PMPN] is not equal to <Blank>
               And GC Production Number [PMPN] is not equal to <NULL>
                    GC Production Number [PMPN] = concat([GC Production Number [PMPN]], [GC GeneratedProduction NumberShort [PNS]])
               Else
                    ConvertMath_NumericToString(B8000094.ConvertMath_NumericToString)
                         GC GeneratedProduction NumberShort [PNS] -> mnMathNumeric01 [MATH01]
                         GC Production Number [PMPN] <- szString [PV01]
               End If
               GC Production Number Short [PNS] = GC GeneratedProduction NumberShort [PNS]
               VA grd_cProdNoGeneratedYN_EV01 [EV01] = "1"
               Set Control Focus(FC Grid)
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Number
Event: Control Exited/Changed-Inline
Event GUID: 5ef15ce7-e064-11d1-9ac9-00600832fe19
=============================================
If SV Form_ Mode is equal to CO ADD_MODE
     Clear Edit Control Error(FC Order Number [DOCO])
     If FC Order Number [DOCO] is not equal to <Blank>
          VA frm_DTAI_szErrorMsgCode [DTAI] = <Blank>
          VerifyAndGetSalesHdr(B4200340.VerifyAndGetSalesHdr)
               FC Order Number [DOCO] -> mnOrderNo [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szKeyCompany [KCOO]
               "2" -> cCallType [EV01]
               VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMesg [DTAI]
               "1" -> cSuppressErrorMesg [EV02]
               "0" -> cReturnPtr [EV03]
               UNDEFINED <> idF4201Ptr [GENLNG]
               UNDEFINED <> cHistoryRecordFlag [EV04]
          If VA frm_DTAI_szErrorMsgCode [DTAI] is not equal to <Blank>
               Set Edit Control Error(FC Order Number, "0002")
          End If
          VA frm_DTAI_szErrorMsgCode [DTAI] = <NULL>
     End If
End If
// 
// SAR 1997324
// ************************************************************************
// SAR 2953260 
// Only reset this flag when not on a COPY mode.
// ************************************************************************
// 
If SV Form_ Mode is not equal to CO COPY_MODE
     VA frm_EV17_Hdr_Work_File [EV17] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Type
Event: Control Exited/Changed-Asynch
Event GUID: f57df5e9-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Type [DCTO] is less than or equal to <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
// 
// SAR 1997324
// ************************************************************************
// SAR 2953260 
// Only reset this flag when not on a COPY mode.
// ************************************************************************
If SV Form_ Mode is not equal to CO COPY_MODE
     VA frm_EV17_Hdr_Work_File [EV17] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Company
Event: Control Exited/Changed-Asynch
Event GUID: 90932e40-a23d-11d0-a204-0000f6728a56
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     // 7400411 - Check Null and Zero as well
     If FC Order Company [KCOO] is not equal to <Blank>
     And FC Order Company [KCOO] is not equal to <NULL>
     And FC Order Company [KCOO] is not equal to "0"
          If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
          And FC To Currency Code [CRDC] is equal to or empty <Blank>
               // SAR 8577189 - Format the company before calling Get Company Currency Code 
               FormatCompany(B0000095.FormatCompany)
                    FC Order Company [KCOO] <- szBehaviorEditString [BHVREDTST]
                    FC Order Company [KCOO] -> szCompany [CO]
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    FC Order Company [KCOO] -> szCompany [CO]
                    FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
          End If
     End If
     // 
     // SAR 1997324
     // ************************************************************************
     // SAR 2953260 
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Business Unit
Event: Control Exited/Changed-Inline
Event GUID: a5d85d3b-2bd5-475d-81df-bb7f1277772d
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
          // SAR# 5384293 - The If condition is the opposite of what it should be
          // SAR 7400411
          ! If FC Business Unit [MCU] is less than or equal to <Blank>
          ! And PO cDefaultShipToBranch [EV02] is equal to "1"
               ! GetDefaultBranch(B4000370.GetDefaultBranch)
               !      FC Business Unit [MCU] <- szBranch [MCU]
               !      UNDEFINED <> szApprovalRouteCode [ARTG]
          ! End If
          //
          // SAR 4439707
          If FC Business Unit [MCU] is not equal to <Blank>
          And FC Business Unit [MCU] is not equal to <Blank>
          And FC Business Unit [MCU] is not equal to "0"
               RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
                    FC Business Unit [MCU] -> szCostCenter [MCU0]
                    FC Order Company [KCOO] <- szCompany [CO]
                    UNDEFINED <> szCostCenterDescription [DL01]
          End If
          //
          // SAR  4298238, 7400411
          If FC Order Company [KCOO] is not equal to <Blank>
          And FC Order Company [KCOO] is not equal to <NULL>
          And FC Order Company [KCOO] is not equal to "0"
               Clear Control Error(FC Order Company [KCOO])
               If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
                    RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                         FC Order Company [KCOO] -> szCompany [CO]
                         FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
                         UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                         UNDEFINED <> cPostByCurrency [ABIN]
               End If
               // SAR 8955602 - If B/P is changed then, re-retrieve the UTP flag
               If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
                    // Customer Tax Prices = 1 if Customer Billing Information is by Sold To
                    // customer and is 2 if Customer Billing Information is by Ship To customer
                    // Based on this value, retrieve the value of Use Taxed Prices flag set for
                    // the Sold To/Ship To customer address number
                    // For Sold To Customer
                    If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
                         VA frm_mnCustAddNumber_AN8 [AN8] = FC Address Number [AN8]
                         VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
                    End If
                    //
                    // For Ship To Customer
                    If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
                         VA frm_mnCustAddNumber_AN8 [AN8] = FC Ship To [SHAN]
                         VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
                    End If
                    //
                    If VA frm_mnCustAddNumber_AN8 [AN8] is not equal to <NULL>
                    And VA frm_mnCustAddNumber_AN8 [AN8] is not equal to <Blank>
                         // Retrieve value for Taxed Unit Price
                         If VA frm_cGridFocused_EV01 [EV01] is equal to "1"
                         Or SV Form_ Mode is not equal to CO COPY_MODE
                              // For Credit Orders if no values are entered by user then the values
                              // returened from P42025 application should be retained
                              If VA frm_cUseTaxedPricesCredit_UTP [UTP] is not equal to("0","1")
                                   Press Button(FC Get UTP From Tag Customer Master)
                              End If
                         Else
                              If SV Form_ Mode is equal to CO COPY_MODE
                              And VA frm_szPrevMCU_MCU [MCU] is not equal to FC Business Unit [MCU]
                                   VA frm_szPrevMCU_MCU [MCU] = FC Business Unit [MCU]
                                   Press Button(FC Get UTP From Tag Customer Master)
                              End If
                         End If
                    End If
               End If
               //
          End If
     End If
     //
     // SAR 1997321
     // ************************************************************************
     // SAR 2953260
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: 94e779a0-a5b9-11d2-a1f4-00105a1bfebf
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cCustomerStatus_CUSTS [CUSTS]
----------------------------------------
If FC Long Address Number [ALKY] is not equal to <Blank>
     // SAR 3193899 - modified parameters to allow Long addressnumbers to be entered
     // in standard text and let the Business function default Short Address
     //
     // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
     FC Description [DL01] = <Blank>
     // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
     // SAR 5370131 - Use N0100061 instead of B0100016
     ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
     !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Address Number [AN8] <- mnAddressNumber [AN8]
     !      UNDEFINED <> szTaxid [TAX]
     !      "5" -> cInputSelection [EV01]
     !      UNDEFINED <> cSuccessFlag [EV02]
     !      Could not resolve Form Control. 373 <> szNameAlpha [ALPH]
     !      UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Description [DL01] <> szNameAlpha [ALPH]
     // SAR 3372571 - Begin/End DISABLE
     ! FC Long Address Number [ALKY] = [FC Address Number [AN8]]
     // SAR 3372571 - Begin ADD
     If FC Address Number [AN8] is equal to "0"
     And PO cAddNewCustomersToAB [EV17] is equal to "1"
          Call App:P01012 Form:W01012B Version:ZJDEC003
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               UNDEFINED <> szAddressType1 [AT1]
          // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
          FC Description [DL01] = <Blank>
          // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
          // SAR 5370131 - Use N0100061 instead of B0100016
          ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
          !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          !      FC Address Number [AN8] <- mnAddressNumber [AN8]
          !      UNDEFINED <> szTaxid [TAX]
          !      "5" -> cInputSelection [EV01]
          !      UNDEFINED <> cSuccessFlag [EV02]
          !      Could not resolve Form Control. 373 <> szNameAlpha [ALPH]
          !      UNDEFINED <> szLongAddressKey [MLNM]
          ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
               FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
               FC Address Number [AN8] <- mnAddressNumber [AN8]
               "5" -> cInputSelection [EV01]
               FC Description [DL01] <> szNameAlpha [ALPH]
     End If
     // SAR 3372571 - End ADD
     // SAR 3530912 - Begin ADD
Else
     // SAR# 6795060
     If PO cShoppingCartMode [CART] is equal to or empty <Blank>
          FC Address Number [AN8] = "0"
     End If
     // SAR 3530912 - End ADD
End If
//
If PO cTransferOrderEntry [EV25] is not equal to "1"
     // SAR #1784599
     // SAR # 2323250 Disable the following Lines
     ! If PO cDefaultShipToBranch [EV02] is equal to "1"
     ! And FC Business Unit [MCU] is less than or equal to <Blank>
          ! VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          !      FC Address Number [AN8] -> mnAddressNumber [AN8]
          !      UNDEFINED <> szAlphaName [ALPH]
          !      UNDEFINED <> jdAddressEffectiveDate [EFTB]
          !      UNDEFINED <> szTaxCertificate [TXCT]
          !      UNDEFINED <> szCreditMessage [CM]
          !      UNDEFINED <> mnRelatedAddress1 [AN81]
          !      UNDEFINED <> mnRelatedAddress2 [AN82]
          !      UNDEFINED <> mnRelatedAddress3 [AN83]
          !      UNDEFINED <> mnRelatedAddress4 [AN84]
          !      UNDEFINED <> mnRelatedAddress5 [AN85]
          !      UNDEFINED <> mnRelatedAddress6 [AN86]
          !      FC Business Unit [MCU] <- szBranchPlant [MCU]
          !      UNDEFINED <> szLanguagePreference [LNGP]
          !      UNDEFINED <> szErrorMessage [DTAI]
          !      "1" -> cSuppressError [ERR]
          !      UNDEFINED <> szTaxID [TAX]
          !      UNDEFINED <> cPersonCorporationCode [TAXC]
     ! End If
     // End #1784599
     //
     // SAR 2992592
     If FC Long Address Number [ALKY] is greater than "0"
          Clear Control Error(FC Long Address Number [ALKY])
          VA frm_TSTA_Credit_Message [TSTA] = <NULL>
          ! F0301.FetchSingle  [Index 1: ]
          !      FC Address Number [AN8] <- TK Address Number [AN8]
          !      VA frm_TSTA_Credit_Message [TSTA] <- TK Temporary Credit Message [TSTA]
          !      VA frm_sz_OrderTempSoldTo_ORTP [ORTP] <- TK Order Template [ORTP]
          // SAR 2992592
          If FC Address Number [AN8] is not equal to "0"
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    FC Order Company [KCOO] -> szCompany [CO]
                    VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                    VA frm_sz_OrderTempSoldTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                    FC Address Number [AN8] -> mnCustomerNumber [AN8]
                    VA evt_cCustomerStatus_CUSTS [CUSTS] <> cCustomerStatus [CUSTS]
               // Check is customer is active or inactive - CRM changes - LR5496703
               If SV Error_Status is equal to CO SUCCESS
                    If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                         Set Control Error(FC Long Address Number, "CUSTS1")
                         Stop Processing
                    End If
               End If
          End If
          ! VA frm_ERRC_Error_Code [ERRC] = <NULL>
          ! GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
          !      FC Address Number [AN8] -> mnSoldToAddress [AN8]
          !      "1" -> cSuppressErrorMsg [EV02]
          !      VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
          !      VA frm_TSTA_Credit_Message [TSTA] <- szTemporaryCreditMsg [TSTA]
          !      UNDEFINED <> cBillingAddressNumber [BADT]
          !      UNDEFINED <> szTaxExplainationCode [EXR1]
          !      UNDEFINED <> cCustomerPORequireDate [PORQ]
          !      UNDEFINED <> szPaymentTerms [TRAR]
          !      UNDEFINED <> cPaymentInstructions [RYIN]
          !      UNDEFINED <> szCurrencyCode [CRCD]
          !      UNDEFINED <> szAdjustmentSchedule [ASN]
          !      UNDEFINED <> szCustomerPricingGroup [CPGP]
          !      UNDEFINED <> mnInvoiceCopies [INVC]
          !      UNDEFINED <> szHoldCode [HOLD]
          !      UNDEFINED <> szPrintMsg [INMG]
          !      UNDEFINED <> cPricePickList [PLST]
          !      UNDEFINED <> cBackOrderAllowed [BACK]
          !      UNDEFINED <> cPriorityCode [PRIO]
          !      UNDEFINED <> mnTradeDiscount [TRDC]
          !      UNDEFINED <> mnMaximumOrder [MAXO]
          !      UNDEFINED <> mnMinimumOrder [MINO]
          !      UNDEFINED <> mnRelatedAddressNum [AN8R]
          !      UNDEFINED <> cInvoiceConsolidation [ICON]
          !      UNDEFINED <> cSendInvoiceTo [SITO]
          !      UNDEFINED <> cCreditCheckLevel [ARTO]
          !      UNDEFINED <> cCreditHoldExempt [EXHD]
          !      UNDEFINED <> szABAmntCurrCode [CRCA]
          !      UNDEFINED <> szGLClassCode [ARC]
          !      UNDEFINED <> cDeliveryNotFlag [EDF1]
          !      UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
          !      UNDEFINED <> cItemRestrictions [EDF2]
          !      UNDEFINED <> szCompany [CO]
          !      UNDEFINED <> cAbcCodeSales [ABC1]
          !      UNDEFINED <> cAbcCodeMargin [ABC2]
          !      UNDEFINED <> cAbcCodeAverageDays [ABC3]
          !      UNDEFINED <> mnAverageDaysToPay [AVD]
          !      UNDEFINED <> szBuyingSegmentCode [BSC]
          !      UNDEFINED <> cBypassAuditLogging [BYAL]
          // SAR 2992592
          If SV Error_Status is not equal to CO SUCCESS
          Or FC Address Number [AN8] is equal to "0"
               //
               // SAR 3372571 - Begin/End CHANGE
               If PO cAddNewCustomersToAB [EV17] is equal to "1"
               And SV Error_Status is not equal to CO SUCCESS
               And FC Address Number [AN8] is not equal to "0"
                    ! Call App:P0101 Form:W0101H Version:ZJDE0003
                    !      FC Address Number [AN8] <> Addressnumber [AN8]
                    // SAR 3278411 - Begin/End CHANGE
                    // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
                    ! Call App:P01012 Form:W01012B Version:ZJDEC003
                    !      FC Address Number [AN8] <> mnAddressNumber [AN8]
                    !      UNDEFINED <> szAddressType1 [AT1]
                    Call App:P03013 Form:W03013B Version:ZJDE0001
                         FC Address Number [AN8] -> mnAddressNumber [AN8]
                         UNDEFINED <> szCompany [CO]
                         UNDEFINED <> mn_Tab_ToGoTo [MATH01]
                         UNDEFINED <> szCountryForPayroll [CCPR]
                         UNDEFINED <> szAlternateAddressKey [ALKY]
                         UNDEFINED <> mnAddressNumberParent [PA8]
                         UNDEFINED <> szCreditMessage [CM]
                         UNDEFINED <> szTaxId [TAX]
                         UNDEFINED <> cPersonCorporationCode [TAXC]
                         UNDEFINED <> szAdditionalIndividualTax [TX2]
                         UNDEFINED <> szCalledFrom [SYS]
                    // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
                    VA frm_TSTA_Credit_Message [TSTA] = <NULL>
                    ! F0301.FetchSingle  [Index 1: ]
                    !      FC Address Number [AN8] <- TK Address Number [AN8]
                    !      VA frm_TSTA_Credit_Message [TSTA] <- TK Temporary Credit Message [TSTA]
                    !      VA frm_sz_OrderTempSoldTo_ORTP [ORTP] <- TK Order Template [ORTP]
                    MBFCustomerMaster(N0100042.MBFCustomerMaster)
                         "I" -> cActionCode [ACTN]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         FC Order Company [KCOO] -> szCompany [CO]
                         VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                         VA frm_sz_OrderTempSoldTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                         FC Address Number [AN8] -> mnCustomerNumber [AN8]
                         VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
                    ! VA frm_ERRC_Error_Code [ERRC] = <NULL>
                    ! GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
                    !      FC Address Number [AN8] -> mnSoldToAddress [AN8]
                    !      "1" -> cSuppressErrorMsg [EV02]
                    !      VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
                    !      VA frm_TSTA_Credit_Message [TSTA] <- szTemporaryCreditMsg [TSTA]
                    !      UNDEFINED <> cBillingAddressNumber [BADT]
                    !      UNDEFINED <> szTaxExplainationCode [EXR1]
                    !      UNDEFINED <> cCustomerPORequireDate [PORQ]
                    !      UNDEFINED <> szPaymentTerms [TRAR]
                    !      UNDEFINED <> cPaymentInstructions [RYIN]
                    !      UNDEFINED <> szCurrencyCode [CRCD]
                    !      UNDEFINED <> szAdjustmentSchedule [ASN]
                    !      UNDEFINED <> szCustomerPricingGroup [CPGP]
                    !      UNDEFINED <> mnInvoiceCopies [INVC]
                    !      UNDEFINED <> szHoldCode [HOLD]
                    !      UNDEFINED <> szPrintMsg [INMG]
                    !      UNDEFINED <> cPricePickList [PLST]
                    !      UNDEFINED <> cBackOrderAllowed [BACK]
                    !      UNDEFINED <> cPriorityCode [PRIO]
                    !      UNDEFINED <> mnTradeDiscount [TRDC]
                    !      UNDEFINED <> mnMaximumOrder [MAXO]
                    !      UNDEFINED <> mnMinimumOrder [MINO]
                    !      UNDEFINED <> mnRelatedAddressNum [AN8R]
                    !      UNDEFINED <> cInvoiceConsolidation [ICON]
                    !      UNDEFINED <> cSendInvoiceTo [SITO]
                    !      UNDEFINED <> cCreditCheckLevel [ARTO]
                    !      UNDEFINED <> cCreditHoldExempt [EXHD]
                    !      UNDEFINED <> szABAmntCurrCode [CRCA]
                    !      UNDEFINED <> szGLClassCode [ARC]
                    !      UNDEFINED <> cDeliveryNotFlag [EDF1]
                    !      UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
                    !      UNDEFINED <> cItemRestrictions [EDF2]
                    ! //
                    If SV Error_Status is not equal to CO SUCCESS
                         Set Control Error(FC Long Address Number, "0037")
                         Stop Processing
                    Else
                         // CRM changes - Inactive Customer Support - LR5496703
                         If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                              Set Control Error(FC Long Address Number, "CUSTS1")
                              Stop Processing
                         End If
                    End If
               Else
                    Set Control Error(FC Long Address Number, "0037")
                    Stop Processing
               End If
          End If
          //
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               Show Control(FC TEMP CREDIT MESSAGE [DL01])
               // SAR 7898204 Passed the language Preference to get Customised Message
               // description
               GetUDC(X0005.GetUDC)
                    "TSTA" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC TEMP CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    "1" -> cSuppressErrorMessage [EV01]
          Else
               Hide Control(FC TEMP CREDIT MESSAGE [DL01])
          End If
          //
          VA frm_TSTA_Credit_Message [TSTA] = <NULL>
          VA frm_DTAI_szErrorMsgCode [DTAI] = <NULL>
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               FC Description [DL01] <- szAlphaName [ALPH]
               VA frm_TSTA_Credit_Message [TSTA] <- szCreditMessage [CM]
               VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMessage [DTAI]
               "1" -> cSuppressError [ERR]
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               Show Control(FC CREDIT MESSAGE [DL01])
               // SAR 7898204 Passed the language Preference to get Customised Message
               // description
               GetUDC(X0005.GetUDC)
                    "CM" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    "1" -> cSuppressErrorMessage [EV01]
          Else
               Hide Control(FC CREDIT MESSAGE [DL01])
          End If
          // SAR 8955602 - If the taxed prices enhancement is on and the constant is set
          // to retrieve the Use Taxed Prices flag from the sold to customer, retrieve
          // it.
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          And VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
               // Customer Tax Prices = 1 if Customer Billing Information is by Sold To
               // customer. Get the value of Use Taxed Prices flag set for the Sold To
               // customer
               VA frm_mnCustAddNumber_AN8 [AN8] = FC Address Number [AN8]
               VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
               If VA frm_cGridFocused_EV01 [EV01] is equal to "1"
               Or SV Form_ Mode is not equal to CO COPY_MODE
                    Press Button(FC Get UTP From Tag Customer Master)
               Else
                    If SV Form_ Mode is equal to CO COPY_MODE
                    And VA frm_mnPrevSoldTo_AN8 [AN8] is not equal to FC Address Number [AN8]
                         VA frm_mnPrevSoldTo_AN8 [AN8] = FC Address Number [AN8]
                         Press Button(FC Get UTP From Tag Customer Master)
                    End If
               End If
          End If
          //
     End If
     //
     // SAR 1997324
     // ************************************************************************
     // SAR 2953260
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
     End If
     VA frm_EV17_Hdr_Work_File [EV17] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Asynch
Event GUID: e851f260-a636-11d2-a1f6-00105a1bfebf
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     //
     // SAR 1965737
     // In Copy or add mode, if Ship To number is changed, reflect the
     // changes in the detail.
     //
     If SV Form_ Mode is equal to CO COPY_MODE
     Or SV Form_ Mode is equal to CO ADD_MODE
          Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
          VA frm_mnCurrentGridRow [MATH01] = "1"
          While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_mnNumGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               If GC Ship To Number [SHAN] is equal to VA frm_mnOrginalShipToNumb_SHAN [SHAN]
               Or GC Ship To Number [SHAN] is equal to <Blank>
                    GC Ship To Number [SHAN] = FC Ship To [SHAN]
               End If
               VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
          End While
     End If
     VA frm_mnOrginalShipToNumb_SHAN [SHAN] = FC Ship To [SHAN]
     //
     If PO cOrderTemplateAddress [EV21] is equal to "2"
          // SAR 3288951, Retrieve ShipTo Template
          ! F0301.FetchSingle  [Index 1: ]
          !      FC Ship To [SHAN] <- TK Address Number [AN8]
          !      VA frm_sz_OrderTempShipTo_ORTP [ORTP] <- TK Order Template [ORTP]
          MBFCustomerMaster(N0100042.MBFCustomerMaster)
               "I" -> cActionCode [ACTN]
               UNDEFINED <> cUpdateMasterFile [EV01]
               UNDEFINED <> cProcessEdits [EV01]
               "1" -> cSuppressErrorMessage [SUPPS]
               UNDEFINED <> szErrorMessageID [DTAI]
               UNDEFINED <> szVersion [VERS]
               UNDEFINED <> szAlternateAddressKey [ALKY]
               UNDEFINED <> szCreditMessage [CM]
               FC Order Company [KCOO] -> szCompany [CO]
               UNDEFINED <> szPolicyName [PLYN]
               UNDEFINED <> mnPolicyNumber [PLY]
               UNDEFINED <> cAutoReceipt [ATCS]
               UNDEFINED <> szAutoReceiptsExecutionList [ARL]
               UNDEFINED <> szAutoReceiptAlgorithm [ALGM]
               UNDEFINED <> mnPayorAddressNumber [PYR]
               UNDEFINED <> szARClass [ARC]
               UNDEFINED <> szCostCenterArDefault [MCUR]
               UNDEFINED <> szObjectAcctsReceivable [OBAR]
               UNDEFINED <> szSubsidiaryAcctsReceiv [AIDR]
               UNDEFINED <> szCompanyKeyARModel [KCOR]
               UNDEFINED <> mnDocArDefaultJe [DCAR]
               UNDEFINED <> szDocTyArDefaultJe [DTAR]
               UNDEFINED <> szCurrencyCodeFrom [CRCD]
               UNDEFINED <> szTaxArea1 [TXA1]
               UNDEFINED <> szTaxExplanationCode1 [EXR1]
               UNDEFINED <> mnAmountCreditLimit [ACL]
               UNDEFINED <> cArHoldInvoices [HDAR]
               UNDEFINED <> szPaymentTermsAR [TRAR]
               UNDEFINED <> cSendStatementToCP [STTO]
               UNDEFINED <> cPaymentInstrumentA [RYIN]
               UNDEFINED <> cPrintStatementYN [STMT]
               UNDEFINED <> cAutoCash_2 [ATCS]
               UNDEFINED <> cSendInvoiceToCP [SITO]
               UNDEFINED <> cSequenceForLedgrInq [SQNL]
               UNDEFINED <> szStatementCycle [CYCN]
               UNDEFINED <> cBalForwardOpenItem [BO]
               VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
               UNDEFINED <> cCreditCkHandlingCode [CKHC]
               UNDEFINED <> jdDateLastCreditReview [DLC]
               UNDEFINED <> cDelinquencyLetter [DNLT]
               UNDEFINED <> szLastCreditReview [PLCR]
               UNDEFINED <> jdDateRecallforReview [RVDJ]
               UNDEFINED <> mnDaysSalesOutstanding [DSO]
               UNDEFINED <> szCreditManager [CMGR]
               UNDEFINED <> szCollectionManager [CLMG]
               UNDEFINED <> mnNumberDunningLetters [DLQT]
               UNDEFINED <> jdDateLastDunningLetterJul [DLQJ]
               UNDEFINED <> cNumberReminders [NBRR]
               UNDEFINED <> cCollectionReport [COLL]
               UNDEFINED <> mnNoSentReminders2 [NBR2]
               UNDEFINED <> mnNoSentReminders3 [NBR3]
               UNDEFINED <> mnNoSentCollection [NBCL]
               UNDEFINED <> cApplyFinChargesYN [AFC]
               UNDEFINED <> mnFinChrgDaysFutureU [FD]
               UNDEFINED <> mnPercentageFactor [FP]
               UNDEFINED <> cFinanChgeCreateEntr [CFCE]
               UNDEFINED <> cMiscCode2 [AB2]
               UNDEFINED <> jdDateLastStatementDate_2 [DT1J]
               UNDEFINED <> jdDateFirstInvoiceJulian [DFIJ]
               UNDEFINED <> jdDateLastInvoiceJulian [DLIJ]
               UNDEFINED <> cAbcCodeSales [ABC1]
               UNDEFINED <> cAbcCodeMargin [ABC2]
               UNDEFINED <> cAbcCodeAverageDays [ABC3]
               UNDEFINED <> jdDateFinancialStmtsonHand [FNDJ]
               UNDEFINED <> jdDateHighBalanceJulian [DHBJ]
               UNDEFINED <> jdDateLastPaid [DLP]
               UNDEFINED <> szDunBradstreetRating [DB]
               UNDEFINED <> jdDateDunBradstreet [DNBJ]
               UNDEFINED <> szTrwNumber [TRW]
               UNDEFINED <> jdTRWDateJ [TWDJ]
               UNDEFINED <> mnAverageDaysToPay [AVD]
               UNDEFINED <> szCurrencyCodeAmounts [CRCA]
               UNDEFINED <> mnAmountDue [AD]
               UNDEFINED <> mnAmtPyFinanceCharges [AFCP]
               UNDEFINED <> mnAmtYtdFinanceCharges [AFCY]
               UNDEFINED <> mnAmtInvoicedThisYr [ASTY]
               UNDEFINED <> mnAmtInvoicedPriorYr [SPYE]
               UNDEFINED <> mnAmountHighBalance [AHB]
               UNDEFINED <> mnAmountLastPaid [ALP]
               UNDEFINED <> mnAmountAddressBook [ABAM]
               UNDEFINED <> mnAmount1 [ABA1]
               UNDEFINED <> mnAmountOpenOrder [APRC]
               UNDEFINED <> mnOrdersYearToDate [OYTD]
               UNDEFINED <> mnOrdersPriorYear [OPY]
               UNDEFINED <> szPersonOpeningAcct [POPN]
               UNDEFINED <> jdDateAccountOpenedJulian [DAOJ]
               UNDEFINED <> mnRelatedAddressNo [AN8R]
               UNDEFINED <> jdNextInvoiceDate [NIVD]
               UNDEFINED <> szUserReservedCode [URCD]
               UNDEFINED <> jdUserReservedDate [URDT]
               UNDEFINED <> mnUserReservedAmount [URAT]
               UNDEFINED <> mnUserReservedNumber [URAB]
               UNDEFINED <> szUserReservedReference [URRF]
               UNDEFINED <> mnClaimsManager [MAN8]
               UNDEFINED <> AN8OutputOnly [AN8]
               UNDEFINED <> mnAltPayor [ARPY]
               UNDEFINED <> mnNoSentReminders1 [NBR1]
               UNDEFINED <> mnMinimumOrderValue [MINO]
               UNDEFINED <> mnMaximumOrderValue [MAXO]
               UNDEFINED <> cBillingAddressType [BADT]
               VA frm_sz_OrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
               UNDEFINED <> mnDiscountTrade [TRDC]
               UNDEFINED <> szPrintMessage1 [INMG]
               UNDEFINED <> cExemptCreditHold [EXHD]
               UNDEFINED <> szHoldOrdersCode [HOLD]
               UNDEFINED <> szRouteCode [ROUT]
               UNDEFINED <> szStopCode [STOP]
               UNDEFINED <> szZoneNumber [ZON]
               UNDEFINED <> mnCarrier [CARS]
               UNDEFINED <> szDeliveryInstructLine1 [DEL1]
               UNDEFINED <> szDeliveryInstructLine2 [DEL2]
               UNDEFINED <> mnLeadtimeTransit [LTDT]
               UNDEFINED <> szFreightHandlingCode [FRTH]
               UNDEFINED <> cApplyFreightYN [AFT]
               UNDEFINED <> cPartialShipmntsAllowY [APTS]
               UNDEFINED <> cSubstitutesAllowedYN [SBAL]
               UNDEFINED <> cBackordersAllowedYN [BACK]
               UNDEFINED <> cCustomerPORequiredYN [PORQ]
               UNDEFINED <> cPriorityProcessing [PRIO]
               UNDEFINED <> cAccountsReceivableCps [ARTO]
               UNDEFINED <> mnInvoiceCopies [INVC]
               UNDEFINED <> cInvoiceConsolidation [ICON]
               UNDEFINED <> cBillFrequency [BLFR]
               UNDEFINED <> jdDateLicenseExpiratio [LEDJ]
               UNDEFINED <> cPricePickListYN [PLST]
               UNDEFINED <> cMergeOrdersYN [MORD]
               UNDEFINED <> cPalletControl [PALC]
               UNDEFINED <> mnCommissionCode1 [CMC1]
               UNDEFINED <> mnRateCommission1 [CMR1]
               UNDEFINED <> mnCommissionCode2 [CMC2]
               UNDEFINED <> mnRateCommission2 [CMR2]
               UNDEFINED <> szUnitOfMeasureWhtDisp [WUMD]
               UNDEFINED <> szUnitOfMeasureVolDisp [VUMD]
               UNDEFINED <> cBatchProcessingMode [EDPM]
               UNDEFINED <> cCustomerTypeIdentifier [EDCI]
               UNDEFINED <> cItemTypeIdentifier [EDII]
               UNDEFINED <> mnQuantityDecimals [EDQD]
               UNDEFINED <> mnAmountDecimals [EDAD]
               UNDEFINED <> cDeliveryNote [EDF1]
               UNDEFINED <> cItemRestrictions [EDF2]
               UNDEFINED <> cSpecialInstruction01 [SI01]
               UNDEFINED <> cSpecialInstruction02 [SI02]
               UNDEFINED <> cSpecialInstruction03 [SI03]
               UNDEFINED <> cSpecialInstruction04 [SI04]
               UNDEFINED <> cSpecialInstruction05 [SI05]
               UNDEFINED <> szPriceAdjustmentScheduleN [ASN]
               UNDEFINED <> cPricingBasedOnDate [CP01]
               UNDEFINED <> cPrintAdjustmentsonInvoic [DSPA]
               UNDEFINED <> cCorrespondenceMethod [CRMD]
               UNDEFINED <> mnAdminCreditLimit [AMCR]
               UNDEFINED <> szReportCodeAddBook001 [AC01]
               UNDEFINED <> szReportCodeAddBook002 [AC02]
               UNDEFINED <> szReportCodeAddBook003 [AC03]
               UNDEFINED <> szReportCodeAddBook004 [AC04]
               UNDEFINED <> szReportCodeAddBook005 [AC05]
               UNDEFINED <> szReportCodeAddBook006 [AC06]
               UNDEFINED <> szReportCodeAddBook007 [AC07]
               UNDEFINED <> szReportCodeAddBook008 [AC08]
               UNDEFINED <> szReportCodeAddBook009 [AC09]
               UNDEFINED <> szReportCodeAddBook011 [AC11]
               UNDEFINED <> szReportCodeAddBook012 [AC12]
               UNDEFINED <> szReportCodeAddBook013 [AC13]
               UNDEFINED <> szReportCodeAddBook014 [AC14]
               UNDEFINED <> szReportCodeAddBook015 [AC15]
               UNDEFINED <> szReportCodeAddBook016 [AC16]
               UNDEFINED <> szReportCodeAddBook017 [AC17]
               UNDEFINED <> szReportCodeAddBook018 [AC18]
               UNDEFINED <> szReportCodeAddBook019 [AC19]
               UNDEFINED <> szCategoryCodeAddressBook2 [AC21]
               UNDEFINED <> szCategoryCodeAddressBk22 [AC22]
               UNDEFINED <> szCategoryCodeAddressBk23 [AC23]
               UNDEFINED <> szCategoryCodeAddressBk24 [AC24]
               UNDEFINED <> szCategoryCodeAddressBk25 [AC25]
               UNDEFINED <> szCategoryCodeAddressBk26 [AC26]
               UNDEFINED <> szCategoryCodeAddressBk27 [AC27]
               UNDEFINED <> szCategoryCodeAddressBk28 [AC28]
               UNDEFINED <> szCategoryCodeAddressBk29 [AC29]
               UNDEFINED <> szCategoryCodeAddressBk30 [AC30]
               UNDEFINED <> szProgramNameShippingLabel [SLPG]
               UNDEFINED <> szVersionNameShippingLabel [SLDW]
               UNDEFINED <> szConfigurationPickandPack [CFPP]
               UNDEFINED <> szConfigurationStandardCar [CFSP]
               UNDEFINED <> cDefaultConfiguration [CFDF]
               UNDEFINED <> cRequiresPackagingCode [RQ01]
               UNDEFINED <> cRequiresWeightCode [RQ02]
               UNDEFINED <> cRequiresIdentificationCo [RQ03]
               UNDEFINED <> szDefaultIdentificationCod [DR03]
               UNDEFINED <> cRequiresIdentificationCode2 [RQ04]
               UNDEFINED <> cRequiresTransportationMe [RQ05]
               UNDEFINED <> cRequiresRouting [RQ06]
               UNDEFINED <> cRequiresEquipment [RQ07]
               UNDEFINED <> cRequiresReferenceNumber1 [RQ08]
               UNDEFINED <> szDefaultReferenceNumberQu [DR08]
               UNDEFINED <> cRequiresReferenceNumber2 [RQ09]
               UNDEFINED <> szUserId [USER]
               UNDEFINED <> szProgramId [PID]
               UNDEFINED <> szWorkStationId [JOBN]
               UNDEFINED <> jdDateUpdated [UPMJ]
               UNDEFINED <> mnTimeLastUpdated [UPMT]
               UNDEFINED <> szGroupCustomerPriceGp [CPGP]
               UNDEFINED <> szDefaultIdentificationCQ2 [DR04]
               UNDEFINED <> szDefaultIdentificationCQ [DR09]
               FC Ship To [SHAN] -> mnCustomerNumber [AN8]
               UNDEFINED <> OldCreditLimit [AA]
               UNDEFINED <> szTaxId [TAX]
               UNDEFINED <> szCompanyPolicyNum [KCO]
               UNDEFINED <> szPolicyDescription [FDNM]
               UNDEFINED <> mnAddressNumberParent [PA8]
               UNDEFINED <> mnParentNumberOriginal [PA8]
               UNDEFINED <> szAcctNoInputMode [ANI]
               UNDEFINED <> mnOkToDelete [MATH01]
               UNDEFINED <> cPersonCorporationCode [TAXC]
               UNDEFINED <> szTaxId2 [TX2]
               UNDEFINED <> mnSuccessfullyProcessed [MATH01]
               UNDEFINED <> szVersionconsolidated [VER]
               UNDEFINED <> szReportCodeAddBook010 [AC10]
               UNDEFINED <> szReportCodeAddBook020 [AC20]
               UNDEFINED <> mnCreditWorkflowStarted [MATH01]
               UNDEFINED <> szCountryForPayroll [CCPR]
               UNDEFINED <> cDirectionIndicator [DRIN]
               UNDEFINED <> szBuyingSegmentCode [BSC]
               UNDEFINED <> cBypassAuditLogging [BYAL]
               UNDEFINED <> cPurgeFlag [PRGF]
               UNDEFINED <> cFutureUseDateFlag [EFTF]
               UNDEFINED <> jdFutureUseDate [EFTB]
               UNDEFINED <> szOPBusinessObjective [OPBO]
               UNDEFINED <> cAPSBusinessUnit [APSB]
     End If
     //
     // SAR 1997324
     // ************************************************************************
     // SAR 2953260
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: e851f261-a636-11d2-a1f6-00105a1bfebf
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cCustomerStatus_CUSTS [CUSTS]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                 DATE
// 3777843                VK6272082                    02/21/00
//
If FC Long Address Number [ALKY] is not equal to <Blank>
     // SAR 3193899 - modified parameters to allow Long addressnumbers to be entered
     // in standard text and let the Business function default Short Address
     //
     // SAR 5370131 - Use N0100061 instead of B0100016
     ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
     !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Ship To [SHAN] <- mnAddressNumber [AN8]
     !      UNDEFINED <> szTaxid [TAX]
     !      "5" -> cInputSelection [EV01]
     !      UNDEFINED <> cSuccessFlag [EV02]
     !      Could not resolve Form Control. 374 <> szNameAlpha [ALPH]
     !      UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Description [DL01] <> szNameAlpha [ALPH]
     // SAR 3372571 - Begin/End DISABLE
     ! FC Long Address Number [ALKY] = [FC Ship To [SHAN]]
     // SAR 3372571 - Begin ADD
     If FC Ship To [SHAN] is equal to "0"
     And PO cAddNewCustomersToAB [EV17] is equal to "1"
          Call App:P01012 Form:W01012B Version:ZJDEC003
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               UNDEFINED <> szAddressType1 [AT1]
          // SAR 5370131 - Use N0100061 instead of B0100016
          ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
          !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          !      FC Ship To [SHAN] <- mnAddressNumber [AN8]
          !      UNDEFINED <> szTaxid [TAX]
          !      "5" -> cInputSelection [EV01]
          !      UNDEFINED <> cSuccessFlag [EV02]
          !      Could not resolve Form Control. 374 <> szNameAlpha [ALPH]
          !      UNDEFINED <> szLongAddressKey [MLNM]
          ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
               FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
               FC Ship To [SHAN] <- mnAddressNumber [AN8]
               "5" -> cInputSelection [EV01]
               FC Description [DL01] <> szNameAlpha [ALPH]
     End If
     // SAR 3372571 - End ADD
Else
     // SAR 3530912 - Begin/End ADD
     // SAR# 6795060
     If PO cShoppingCartMode [CART] is equal to or empty <Blank>
          FC Ship To [SHAN] = "0"
     End If
     // *************************************************************************
     // SAR 2938828 - Begin/End Change
     // The condition will be expanded so that the Ship To Address will only
     // be defaulted after Begin Doc has been called.
     // *************************************************************************
     If FC Address Number [AN8] is not equal to "0"
     And VA frm_EV17_Hdr_Work_File [EV17] is not equal to "0"
          FC Long Address Number [ALKY] = [FC Long Address Number [ALKY]]
          FC Ship To [SHAN] = FC Address Number [AN8]
     End If
End If
//
// SAR 2811624
//
// *************************************************************************
// SAR 2938828 - Begin/End Change
// The condition will be expanded so that the Ship To Address will only
// be defaulted after Begin Doc has been called.
// *************************************************************************
// SAR 2992592
If FC Long Address Number [ALKY] is not equal to <Blank>
     If FC Long Address Number [ALKY] is equal to <Blank>
     And VA frm_EV17_Hdr_Work_File [EV17] is not equal to "0"
          FC Long Address Number [ALKY] = FC Long Address Number [ALKY]
          FC Address Number [AN8] = [FC Long Address Number [ALKY]]
     End If
     //
     If PO cTransferOrderEntry [EV25] is not equal to "1"
          //
          // SAR 2992592
          If FC Long Address Number [ALKY] is not equal to "0"
               // SAR 3372571 - Begin/End ADD
               Clear Control Error(FC Long Address Number [ALKY])
               VA frm_TSTA_Credit_Message [TSTA] = <NULL>
               // SAR 2992592
               // SAR 3372571 - Begin/End CHANGE
               If FC Ship To [SHAN] is not equal to "0"
                    // SAR 6078141 passes ShipTo template to VA frm_szOrderTempShipTo_ORTP
                    MBFCustomerMaster(N0100042.MBFCustomerMaster)
                         "I" -> cActionCode [ACTN]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         FC Order Company [KCOO] -> szCompany [CO]
                         VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                         VA frm_sz_OrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                         FC Ship To [SHAN] -> mnCustomerNumber [AN8]
                         VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
                    // Check if customer is inactive - CRM changes - LR5496703
                    If SV Error_Status is equal to CO SUCCESS
                         If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                              Set Control Error(FC Long Address Number-Shipto, "CUSTS1")
                         End If
                    End If
               End If
               //
               // SAR 2992592
               If SV Error_Status is not equal to CO SUCCESS
               Or FC Ship To [SHAN] is equal to "0"
                    //
                    // SAR 3372571 - Begin/End CHANGE
                    If PO cAddNewCustomersToAB [EV17] is equal to "1"
                    And SV Error_Status is not equal to CO SUCCESS
                    And FC Ship To [SHAN] is not equal to "0"
                         // SAR 3278411 - Begin/End CHANGE
                         Call App:P01012 Form:W01012B Version:ZJDEC003
                              FC Address Number [AN8] <> mnAddressNumber [AN8]
                              UNDEFINED <> szAddressType1 [AT1]
                         VA frm_TSTA_Credit_Message [TSTA] = <NULL>
                         // SAR 3372571 - Begin/End CHANGE
                         // SAR 6078141 passes ShipTo template to VA frm_szOrderTempShipTo_ORTP
                         MBFCustomerMaster(N0100042.MBFCustomerMaster)
                              "I" -> cActionCode [ACTN]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              FC Order Company [KCOO] -> szCompany [CO]
                              VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                              VA frm_sz_OrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                              FC Ship To [SHAN] -> mnCustomerNumber [AN8]
                              VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
                         //
                         If SV Error_Status is not equal to CO SUCCESS
                              // SAR# 4364282 - Change Error0037 to 3490 for more meaningfulness
                              Set Control Error(FC Long Address Number-Shipto, "3490")
                              // SAR 4853254 Begin/End - Setting flag for invalid Ship To
                              VA frm_cShipToValid_ANSCRT [ANSCRT] = "N"
                              Stop Processing
                         Else
                              If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                                   Set Control Error(FC Long Address Number-Shipto, "CUSTS1")
                              End If
                         End If
                         // SAR 3372571 - Begin ADD
                    Else
                         // SAR# 4364282 - Change Error0037 to 3490 for more meaningfulness
                         Set Control Error(FC Long Address Number-Shipto, "3490")
                         // SAR 4853254 Begin/End - Setting flag for invalid Ship To
                         VA frm_cShipToValid_ANSCRT [ANSCRT] = "N"
                         Stop Processing
                         // SAR 3372571 - End ADD
                    End If
               End If
               //
               // SAR 3777843 Begin
               ! If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
                    ! Show Control(FC TEMP CREDIT MESSAGE [DL01])
                    ! GetUDC(X0005.GetUDC)
                    !      "TSTA" -> szDataDictionaryItem [DTAI]
                    !      "00" -> szSystemCode [SY]
                    !      "CM" -> szRecordTypeCode [RT]
                    !      VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    !      UNDEFINED <> mnKeyFieldLength [AS]
                    !      UNDEFINED <> szLanguagePreference [LNGP]
                    !      FC TEMP CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    !      UNDEFINED <> szDescription002 [DL02]
                    !      UNDEFINED <> szSpecialHandlingCode [SPHD]
                    !      UNDEFINED <> cUdcOwnershipFlag [UDCO]
                    !      UNDEFINED <> cHardCodedYn [HRDC]
                    !      "1" -> cSuppressErrorMessage [EV01]
                    !      UNDEFINED <> szErrorMessageId [DTAI]
                    !      UNDEFINED <> cUDCOne [EV01]
               ! Else
                    ! Hide Control(FC TEMP CREDIT MESSAGE [DL01])
               ! End If
               // SAR 3777843 Ends
               //
               VA frm_TSTA_Credit_Message [TSTA] = <NULL>
               VA frm_DTAI_szErrorMsgCode [DTAI] = <NULL>
               VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
                    FC Address Number [AN8] <> mnAddressNumber [AN8]
                    FC Description [DL01] <- szAlphaName [ALPH]
                    VA frm_TSTA_Credit_Message [TSTA] <- szCreditMessage [CM]
                    VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMessage [DTAI]
                    "1" -> cSuppressError [ERR]
               If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
                    Show Control(FC CREDIT MESSAGE [DL01])
                    // SAR 7898204 Passed the language Preference to get Customised Message
                    // description
                    GetUDC(X0005.GetUDC)
                         "CM" -> szDataDictionaryItem [DTAI]
                         "00" -> szSystemCode [SY]
                         "CM" -> szRecordTypeCode [RT]
                         VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                         SL LanguagePreference -> szLanguagePreference [LNGP]
                         FC CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                         "1" -> cSuppressErrorMessage [EV01]
               Else
                    Hide Control(FC CREDIT MESSAGE [DL01])
               End If
          End If
          // ************************************************************************
          // SAR 2953260
          // Only reset this flag when not on a COPY mode.
          // ************************************************************************
          If SV Form_ Mode is not equal to CO COPY_MODE
               VA frm_EV17_Hdr_Work_File [EV17] = "0"
          End If
     End If
     // SAR 8955602 - If the taxed prices system constant is on and setup to
     // retrieve the taxed prices flag from the ship to customer, retrieve it.
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     And VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
          // Customer Tax Prices = 2 if Customer Billing Information is by Ship To
          // customer. Get the value of Use Taxed Prices flag set for the Ship To
          // customer
          VA frm_mnCustAddNumber_AN8 [AN8] = FC Ship To [SHAN]
          VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
          If VA frm_cGridFocused_EV01 [EV01] is equal to "1"
          Or SV Form_ Mode is not equal to CO COPY_MODE
               Press Button(FC Get UTP From Tag Customer Master)
          Else
               If SV Form_ Mode is equal to CO COPY_MODE
               And VA frm_mnPrevShipTo_AN8 [AN8] is not equal to FC Ship To [SHAN]
                    VA frm_mnPrevShipTo_AN8 [AN8] = FC Ship To [SHAN]
                    Press Button(FC Get UTP From Tag Customer Master)
               End If
          End If
     End If
     //
End If
// End of SAR 2811624


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Use Taxed Prices
Event: Selection Changed
Event GUID: 9798e14a-c61c-409c-ad91-adc26aacac8f
=============================================
// SAR 8955602 - Checkbox and logic added.
GetErrorCount(B9800250.GetErrorCount)
     VA frm_nErrorCount_INT01 [INT01] <- nNumberOfErrors [INT01]
     VA frm_nWarningCount_INT01 [INT01] <- nNumberOfWarnings [INT01]
If VA frm_cInvalidUTPChange_EV01 [EV01] is not equal to "1"
Or VA frm_nErrorCount_INT01 [INT01] is not equal to "0"
     VA frm_cUseTaxedPrices_UTP [UTP] = FC Use Taxed Prices [UTP]
     // Hide/Show the grid fields based on the UTP checkbox value and the
     // currency mode
     // Update the header cache when Begin Doc is called
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
     If FC Use Taxed Prices [UTP] is equal to "1"
          If FC Mode (F) [CRRM] is equal to "F"
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Show Grid Column(FC Grid, GC Foreign TaxedExtended Price)
               Show Grid Column(FC Grid, GC Foreign UnitTax Amount)
          Else
               Show Grid Column(FC Grid, GC Unit TaxAmount)
               Show Grid Column(FC Grid, GC ExtendedTax Amount)
               Show Grid Column(FC Grid, GC TaxedUnit Price)
               Show Grid Column(FC Grid, GC TaxedExtended Price)
          End If
     Else
          Hide Grid Column(FC Grid, GC Unit TaxAmount)
          Hide Grid Column(FC Grid, GC ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC TaxedUnit Price)
          Hide Grid Column(FC Grid, GC TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign UnitTax Amount)
     End If
End If
VA frm_cInvalidUTPChange_EV01 [EV01] = "0"


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Date
Event: Control Exited/Changed-Asynch
Event GUID: f57df5ea-a23a-11d0-a204-0000f6728a56
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     // SAR 1997324
     // ************************************************************************
     // SAR 2953260 
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Date
Event: Control is Exited
Event GUID: 6eed1920-bafa-11d2-a797-00105a1bfecd
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     If FC Order Date [TRDJ] is equal to <NULL>
          FC Order Date [TRDJ] = date_today()
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Reference
Event: Control Exited/Changed-Asynch
Event GUID: b50d1501-5485-11d2-a72d-0000f6a025f4
=============================================
// SAR 3072536 Move to Inline

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Reference
Event: Control Exited/Changed-Inline
Event GUID: e4930d23-1d2c-11d3-a1d2-00104bc73106
=============================================
// Start of SAR 2480159
If PO cTransferOrderEntry [EV25] is not equal to "1"
     // ************************************************************************
     // SAR 2953260 
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     // 
     // SAR 3072536/Begin, Disable the if Condition and Clear the Error
     ! If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
          Clear Control Error(FC Reference [VR01])
     ! End If
     // SAR 3072536/End
     // 
End If
// End of SAR 2480159
// DUP SAR 5434203 - Customer PO Protected
If SV Form_ Mode is equal to CO COPY_MODE
And FC Reference [VR01] is not equal to <Blank>
And FC Reference [VR01] is not equal to <NULL>
And FC Reference [VR01] is not equal to "0"
     VerifyCustomerPONumberIsUnique(B4200130.VerifyCustomerPONumberIsUnique)
          FC Reference [VR01] -> szCustomerPONumber [VR01]
          FC Address Number [AN8] -> mnCustomerNumber [AN8]
          UNDEFINED <> cErrorCode [ERRC]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Add Last Entry Row to Grid
Event GUID: f57df5e3-a23a-11d0-a204-0000f6728a56
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4365349                   VK6272082                 07/12/00
//
// SAR#5113442-If line number is already incremented by a matrix item insert
// do not increment it again
// SAR#5113442-Begin
If VA frm_cLineIncrementedY [EV01] is not equal to "1"
     IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
          VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
          PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
          GC Line Number [LNID] <- mnOutputLineNumber [XLIN]
     VA frm_cLineIncrementedY [EV01] = "0"
End If
// SAR#5113442-End
//
// SAR 3718552 - Begin/End ADD
// If this is the first row added then check the Line Number against
// F4211 and F42119 to verify that it is a unique number. Succeeding
// rows added does not need to be checked because the first
// call already retrieved the highest number so we just need to
// continue incrementing it.
If VA frm_cFirstAddRow_EV01 [EV01] is equal to <Blank>
Or VA frm_cFirstAddRow_EV01 [EV01] is equal to <NULL>
     GetF4211NextLineNumber(B4200320.GetF4211NextLineNumber)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
          PO mnDefaultLineIncrement [LNIX] -> mnLineIncrement [MATH06]
          GC Line Number [LNID] <> mnLineNumber [LNID]
          UNDEFINED <> szErrorMsgID [DTAI]
          "1" -> cSuppressErrorMsg [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     // *************************************************************************
     // SAR#5113442
     If VA frm_ProductVariantsModule_MEOW [MEOW] is equal to "1"
          FindLargestMCLNUsed(B4204070.FindLargestMCLNUsed)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompany [KCOO]
               VA frm_mnLargestMCLNUsed [MCLN] <- mnMatrixControlLineNo [MCLN]
               VA frm_cFoundInF4211OrF42119 [EV01] <- cErrorCode [ERRC]
          If VA frm_cFoundInF4211OrF42119 [EV01] is equal to "2"
               VA frm_mnLargestMCLNUsed [MCLN] = "0"
          End If
     End If
     // *************************************************************************
     VA frm_cFirstAddRow_EV01 [EV01] = "1"
     // SAR# 3686651
     VA frm_mnStoredLineNumber_LNID [LNID] = GC Line Number [LNID]
End If
//
// Begin of SAR 2442961
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_mnNewLineNumCopyMode_LNID [LNID] = [GC Line Number [LNID]]-1
End If
// End of SAR 2442961
//
// The following logic is replaced by the above named ER
//
// SAR#5113442-Begin
If VA frm_LNID_Last_Line_Number [LNID] is less than GC Line Number [LNID]
     VA frm_LNID_Last_Line_Number [LNID] = GC Line Number [LNID]
Else
     GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
End If
// SAR#5113442-End
//
VA grd_EV18_UpdatedtoDetailWF [EV18] = "0"
GC Ln Ty [LNTY] = PO szDefaultLinetype [LNTY]
VA grd_UCSTR_Saved_Unit_Price [UCSTR] = "0"
VA grd_XEXP_Saved_Ext_Price [XEXP] = "0"
// SAR 8955603 - Zero out saved taxed prices.
VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = "0"
VA grd_SavedTaxedExtPrice_XEXP [XEXP] = "0"
VA grd_EV06_Unit_Price_Changed [EV06] = "2"
VA grd_EV05_Ext_Price_Changed [EV05] = "2"
VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = "0"
VA grd_XCST_Saved_Ext_Cost [XCST] = "0"
VA grd_EV07_Unit_Cost_Changed [EV07] = "2"
VA grd_EV08_Ext_Cost_Changed [EV08] = "2"
//
// SAR 6968012
VA grd_mnPurchaseUnitCostSaved [UNCS] = "0"
VA grd_mnPurchaseExtCostSaved [ECST] = "0"
VA grd_cPurchaseUnitCostChanged [EV01] = "2"
VA grd_cPurchaseExtCostChanged [EV02] = "2"
//
// SAR 4365349 BEGIN - ADD
If PO cDisableorHidePrice [EV04] is not equal to "1"
Or PO cDisableorHidePrice [EV04] is not equal to "2"
     If GC Ln Ty [LNTY] is equal to VA frm_cPrevLineType_LNTY [LNTY]
          If VA frm_cPrevLntyProtectPrice_EV01 [EV01] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               // SAR 5330594 - sales based on date
               //
               // SAR 8955603 - Disable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          End If
     Else
          F40205.FetchSingle  [Index 1: line type file]
               GC Ln Ty [LNTY] = TK Line Type [LNTY]
               VA grd_cLntyProtectPrice_PDC1 [PDC1] <- TK Print on Document 1 (Y/N) [PDC1]
          If VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "1"
          Or VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "Y"
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               // SAR 5330594 - sales based on date
               //
               // SAR 8955603 - Disable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          End If
          VA frm_cPrevLntyProtectPrice_EV01 [EV01] = VA grd_cLntyProtectPrice_PDC1 [PDC1]
          VA frm_cPrevLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
     End If
End If
// SAR 4365349 END - ADD
//
// SAR 5953388-Use Inititalization function
InitializeSOALPHString(B4205100.InitializeSOALPHString)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
//
// SAR 2018651
VA frm_cGridFilled [EV01] = "Y"
//
//    SET THE ACTION  TO ADD
//
VA grd_ACTI_ActionHidden [ACTI] = "A"
//
// SAR 6437123 - Begin/End
// Added one more condition cIsOKButtonClicked is not equal to 1
If VA frm_EV07_Template_Called [EV07] is not equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
And PO cHeaderOrDetailFirst [EV19] is equal to "1"
And PO cOrderTemplateAddress [EV21] is not equal to <Blank>
And VA frm_cIsOkButtonClicked_EV01 [EV01] is not equal to "1"
     VA frm_GENLNG_CacheHandle [GENLNG] = "0"
     If PO szOrderTemplate [ORTP] is greater than <Blank>
          // SAR 4183406- Pass in BP to retrieve correct primary item number
          // SAR 4650342 - Pass in Processing Mode
          Call App:P40215 Form:W40215A Version: 
               PO szOrderTemplate [ORTP] -> OrderTemplate [ORTP]
               FC Address Number [AN8] -> AddressNumber [AN8]
               PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
               FC Order Date [TRDJ] -> TransactionDate [TRDJ]
               UNDEFINED <> OpenOrdersVersion [VERS]
               FC Order Type [DCTO] -> OrderType [DCTO]
               VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
               FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
     Else
          If PO cOrderTemplateAddress [EV21] is not equal to <Blank>
          And PO cOrderTemplateAddress [EV21] is not equal to <NULL>
               If PO cOrderTemplateAddress [EV21] is equal to "1"
                    If VA frm_sz_OrderTempSoldTo_ORTP [ORTP] is greater than <Blank>
                         // SAR 4183406- Pass in BP to retrieve correct primary item number
                         Call App:P40215 Form:W40215A Version: 
                              VA frm_sz_OrderTempSoldTo_ORTP [ORTP] -> OrderTemplate [ORTP]
                              FC Address Number [AN8] -> AddressNumber [AN8]
                              PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                              FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                              UNDEFINED <> OpenOrdersVersion [VERS]
                              FC Order Type [DCTO] -> OrderType [DCTO]
                              VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                              FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                    Else
                         // ************************************************************************
                         // SAR 4329807 - Begin ADD
                         // Need to determine if an Order Template Exists
                         // ************************************************************************
                         VA frm_mnTemplateAddress_AN8 [AN8] = FC Address Number [AN8]
                         Press Button(FC TemplateExists)
                         If VA frm_cOrderTemplateExists_EV01 [EV01] is equal to "1"
                              // SAR 4329807 - End ADD
                              // SAR 6348155 - Begin
                              Call App:P4015 Form:W4015A Version:Undefined
                                   VA frm_mnTemplateAddress_AN8 [AN8] -> AddressNumber [AN8]
                                   PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                                   "1" -> ProtectAddressNumber [EV02]
                                   VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
                                   "2" -> CalledFromPODetail [EV03]
                                   FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                              // SAR 6348155 - End
                         End If
                    End If
               Else
                    If VA frm_sz_OrderTempShipTo_ORTP [ORTP] is greater than <Blank>
                         // SAR 4183406- Pass in BP to retrieve correct primary item number
                         // SAR 4650342 - Pass in Processing Mode
                         Call App:P40215 Form:W40215A Version: 
                              VA frm_sz_OrderTempShipTo_ORTP [ORTP] -> OrderTemplate [ORTP]
                              FC Ship To [SHAN] -> AddressNumber [AN8]
                              PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                              FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                              UNDEFINED <> OpenOrdersVersion [VERS]
                              FC Order Type [DCTO] -> OrderType [DCTO]
                              VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                              FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                    Else
                         // ************************************************************************
                         // SAR 4329807 - Begin ADD
                         // Need to determine if an Order Template Exists
                         // ************************************************************************
                         VA frm_mnTemplateAddress_AN8 [AN8] = FC Ship To [SHAN]
                         Press Button(FC TemplateExists)
                         If VA frm_cOrderTemplateExists_EV01 [EV01] is equal to "1"
                              // SAR 4329807 - End ADD
                              // SAR 6348155 - Begin
                              Call App:P4015 Form:W4015A Version:Undefined
                                   VA frm_mnTemplateAddress_AN8 [AN8] -> AddressNumber [AN8]
                                   PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                                   "1" -> ProtectAddressNumber [EV02]
                                   VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
                                   "2" -> CalledFromPODetail [EV03]
                                   FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                              // SAR 6348155 - End
                         End If
                    End If
               End If
          End If
     End If
     Press Button(FC PROCESS: Load Grid From Cache)
     GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
     VA frm_EV07_Template_Called [EV07] = "1"
End If
// SAR 4622915
If PO cDisablePricingRelated [EV01] is equal to "1"
     //
     //
     Disable Grid(FC Grid,  <All Rows>, GC RevenueBusiness Unit)
     Disable Grid(FC Grid, <All Rows>, GC PayInst)
     Disable Grid(FC Grid,  <All Rows>, GC EndUse)
     Disable Grid(FC Grid, <All Rows>, GC Adj.Schedule)
     Disable Grid(FC Grid,  <All Rows>, GC PC1)
     Disable Grid(FC Grid,  <All Rows>, GC PC2)
     Disable Grid(FC Grid, <All Rows>, GC PC3)
     Disable Grid(FC Grid, <All Rows>, GC Line ofBusiness)
     Disable Grid(FC Grid, <All Rows>, GC CarrierNumber)
     Disable Grid(FC Grid, <All Rows>, GC DutySts)
     Disable Grid(FC Grid, <All Rows>, GC ModTrn)
     Disable Grid(FC Grid, <All Rows>, GC AgreementSupplement)
     Disable Grid(FC Grid, <All Rows>, GC AgreementNumber)
     // SAR 5494134
     Disable Control(FC Price Effective [PEFJ])
     Disable Grid(FC Grid,  <All Rows>, GC Price EffectiveDate)
End If
// End SAR 4622915

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Double Click on Row Header
Event GUID: f57df5e4-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(HC De&tail Attachments)

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Set Focus on Grid
Event GUID: f57e03e1-a23a-11d0-a204-0000f6728a56
=============================================
//                        SAR REVISION LOG
// SAR#             PROGRAMMER            DATE
// 4209240           VK6272082           05/12/00
// SAR 6851244 - Begin
//
// SAR 8953108 - Apparel Enhancement
// Validate the Collection if not already validated (Note: Collection values
// are validated and disabled when coming thro Header first and Update mode)
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If VA frm_cCollValidationDone_EV01 [EV01] is not equal to "1"
          VA frm_cApprlPressButtonMode_EV01 [EV01] = "2"
          Press Button(FC ValidateCollection)
          //
          // If Collection validation fails, then disable the grid. Make the
          // user correct the header errors first and then enable the grid.
          //
          If VA frm_cCollValidationErrors_ERRC [ERRC] is equal to "1"
               Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
               Stop Processing
          Else
               Enable Grid(FC Grid,  <All Rows>,  <All Columns>)
          End If
     End If
End If
//
// SAR 8955603 - Set variable frm_cGridFocused to '1'
If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     VA frm_cGridFocused_EV01 [EV01] = "1"
End If
//
VA frm_MCU_ToBranch_Previous [MCU] = FC Business Unit 2 [MCU2]
// SAR 6851244 - End
// SAR 2837509
If FC Order Date [TRDJ] is equal to <Blank>
Or FC Order Date [TRDJ] is equal to <NULL>
     FC Order Date [TRDJ] = date_today()
End If
// Sar # 6164583
// SAR 6500971
If PO cUseAuditLog [EV01] is equal to "1"
And FC Address Number [AN8] is greater than "0"
And VA frm_EV17_Hdr_Work_File [EV17] is equal to "0"
Or VA frm_EV17_Hdr_Work_File [EV17] is equal to <Blank>
     GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
          FC Address Number [AN8] -> mnSoldToAddress [AN8]
          <NULL> <> cSuppressErrorMsg [EV02]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> szTemporaryCreditMsg [TSTA]
          UNDEFINED <> cBillingAddressNumber [BADT]
          UNDEFINED <> szTaxExplainationCode [EXR1]
          UNDEFINED <> cCustomerPORequireDate [PORQ]
          UNDEFINED <> szPaymentTerms [TRAR]
          UNDEFINED <> cPaymentInstructions [RYIN]
          UNDEFINED <> szCurrencyCode [CRCD]
          UNDEFINED <> szAdjustmentSchedule [ASN]
          UNDEFINED <> szCustomerPricingGroup [CPGP]
          UNDEFINED <> mnInvoiceCopies [INVC]
          UNDEFINED <> szHoldCode [HOLD]
          UNDEFINED <> szPrintMsg [INMG]
          UNDEFINED <> cPricePickList [PLST]
          UNDEFINED <> cBackOrderAllowed [BACK]
          UNDEFINED <> cPriorityCode [PRIO]
          UNDEFINED <> mnTradeDiscount [TRDC]
          UNDEFINED <> mnMaximumOrder [MAXO]
          UNDEFINED <> mnMinimumOrder [MINO]
          UNDEFINED <> mnRelatedAddressNum [AN8R]
          UNDEFINED <> cInvoiceConsolidation [ICON]
          UNDEFINED <> cSendInvoiceTo [SITO]
          UNDEFINED <> cCreditCheckLevel [ARTO]
          UNDEFINED <> cCreditHoldExempt [EXHD]
          UNDEFINED <> szABAmntCurrCode [CRCA]
          UNDEFINED <> szGLClassCode [ARC]
          UNDEFINED <> cDeliveryNotFlag [EDF1]
          UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
          UNDEFINED <> cItemRestrictions [EDF2]
          FC Order Company [KCOO] -> szCompany [CO]
          UNDEFINED <> cAbcCodeSales [ABC1]
          UNDEFINED <> cAbcCodeMargin [ABC2]
          UNDEFINED <> cAbcCodeAverageDays [ABC3]
          UNDEFINED <> mnAverageDaysToPay [AVD]
          UNDEFINED <> szBuyingSegmentCode [BSC]
          VA frm_cBypassAuditLogging_EV01 [EV01] <- cBypassAuditLogging [BYAL]
          UNDEFINED <> szOPBusinessObjective [OPBO]
Else
     VA frm_cBypassAuditLogging_EV01 [EV01] = <Blank>
End If
//
// SAR# 5465042
VA frm_PreviousCustomerPO_VR01 [VR01] = FC Reference [VR01]
//
// SAR 3067905 Begin, SAR 3138494, Begin/End Add Transfer Condition
If FC Address Number [AN8] is equal to <Blank>
And FC Ship To [SHAN] is equal to <Blank>
And PO cTransferOrderEntry [EV25] is not equal to "1"
     Set Control Error(FC Long Address Number, "041H")
     Set Control Error(FC Long Address Number-Shipto, "041I")
     Stop Processing
Else
     Clear Control Error(FC Long Address Number [ALKY])
     // SAR 4853254 - added if condition for invalid Ship To
     If VA frm_cShipToValid_ANSCRT [ANSCRT] is not equal to "N"
          Clear Control Error(FC Long Address Number [ALKY])
     End If
End If
// SAR 3067905 End
//
// SAR#2435446
// Highlight LandedCostRule field if it is required field and if it's not filled
If PO cMandatoryLandedCost [EV01] is equal to "1"
And PO cTransferOrderEntry [EV25] is equal to "1"
     If FC Landed Cost Rule [PRP5] is equal to <Blank>
     Or FC Landed Cost Rule [PRP5] is equal to <NULL>
          Set Control Error(FC Landed Cost Rule, "0003")
          // SAR 8442276  Begin- Set Transfer order error flag to '1' when there is
          // error on Landed cost control
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
     Else
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
          GetUDC(X0005.GetUDC)
               "41" -> szSystemCode [SY]
               "P5" -> szRecordTypeCode [RT]
               FC Landed Cost Rule [PRP5] -> szUserDefinedCode [KY]
               "1" -> cSuppressErrorMessage [EV01]
               VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMessageId [DTAI]
          If VA frm_DTAI_szErrorMsgCode [DTAI] is not equal to <Blank>
          And VA frm_DTAI_szErrorMsgCode [DTAI] is not equal to <NULL>
          And VA frm_DTAI_szErrorMsgCode [DTAI] is not equal to "0"
               VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
          End If
     End If
End If
// End of SAR#2435446
//
// SAR # 8442276 - If an error is set on Transfer Order Don't execute Transfer
// order Press button event rules
If PO cTransferOrderEntry [EV25] is equal to "1"
And VA frm_Transfer_Order_Errors_EV01 [EV01] is equal to "0"
     Press Button(FC Transfer Orders)
End If
//
If VA frm_Transfer_Order_Errors_EV01 [EV01] is equal to "1"
     //     SAR 3665876 - Begin
     If VA frm_ACTI_Action_Code [ACTI] is equal to "A"
          Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
     End If
Else
     // Begin SAR 4790863
     // SAR 8720344 - modified fix of SAR 8442276 so that to Grid is  Enabled only
     // for Add mode
     If SV Form_ Mode is equal to CO ADD_MODE
          Enable Grid(FC Grid,  <All Rows>,  <All Columns>)
     End If
     // End 4790863
     //
     // SAR 1997324 - All the code involving the call to and return from BeginDoc hav
     // been moved from 'Row is Exited/Changed Asynch' to this event.
     //
     VA frm_ERRC_Error_Code [ERRC] = "0"
     VA frm_EV23_cBeginDocError [EV23] = "0"
     //
     //     If the header data has not been validated, call F4211 Begin Doc to verify
     //     the header data.
     //
     If VA frm_EV17_Hdr_Work_File [EV17] is not equal to "1"
     And VA frm_ACTI_Action_Code [ACTI] is equal to "A"
          VA frm_EV03_Valid_Order_Number [EV03] = "0"
          //
          // Blank out the exchange rate before calling the BeginDoc unless user enter it
          // manully.
          //
          If FC Exchange Rate [CRR] is greater than <Blank>
          And VA frm_cIsExcangeRateEntered_EV01 [EV01] is not equal to "1"
               // SAR 4263991
               If VA frm_mnCreditJobNum_JOBS [JOBS] is equal to <Blank>
               Or VA frm_mnCreditJobNum_JOBS [JOBS] is equal to <NULL>
               Or VA frm_mnCreditJobNum_JOBS [JOBS] is equal to "0"
                    FC Exchange Rate [CRR] = <NULL>
                    VA frm_cIsExcangeRateEntered_EV01 [EV01] = <NULL>
               End If
          End If
          //
          // SAR # 1846382
          If SV Form_ Mode is equal to CO COPY_MODE
               // ***********************************************************************
               // SAR 3011549 - Begin ADD
               // ***********************************************************************
               If PO cCopyTextOption [EV16] is equal to ("2","3")
                    Media Object Structures(GT4201A,  <Default Media Object>,  <Exist>, VA frm_Generic_Text_EV01, FI DocumentOrderInvoiceE, VA frm_ODCT_Original_Order_Type, VA frm_OKCO_Original_Order_Co)
                    If VA frm_Generic_Text_EV01 [EV01] is equal to "1"
                         VA frm_cHeaderText_ATXT [ATXT] = "Y"
                    End If
               End If
               // SAR 3011549 - End ADD
               // ***********************************************************************
               // SAR 3011549 - Begin/End CHANGE
               // Associated Text flag will not be passed when calling Begin Doc.
               // SAR 2940119 - Begin/End CHANGE
               // SAR 3406866, Pass in/out PEID and TCID
               // SAR 3530912 - Begin/End CHANGE
               // SAR 5308881 - BEGIN/END - Date Sensitive Customer Sets
               // ***********************************************************************
               // SAR 5475531 - Begin/End Credit Message Default if shipto is entered first
               // SAR 8932433 - pass the requested date
               // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
               // SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
               F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
                    FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
                    VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
                    "EP4210" -> szCMProgramID [PID]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    FC Business Unit [MCU] <> szBusinessUnit [MCU]
                    VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
                    VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
                    VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
                    FC Address Number [AN8] <> mnAddressNumber [AN8]
                    FC Ship To [SHAN] <> mnShipToNo [SHAN]
                    FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
                    FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
                    FC Reference [VR01] <> szReference [VR01]
                    VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
                    VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
                    FC Mode (F) [CRRM] -> cMode [CRRM]
                    FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
                    FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
                    VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    VA frm_USER_User_ID [USER] <> szUserID [USER]
                    FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
                    VA frm_szCreditMessage_CM [CM] <- szWKCreditMesg [CM]
                    VA frm_szTempCreditMessage_TSTA [TSTA] <- szWKTempCreditMesg [TSTA]
                    VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
                    "1" -> cWKSourceOfData [EV06]
                    <Blank> -> cWKProcMode [EV07]
                    FI DocumentOrderInvoiceE [DOCO] -> mnSODDocNo [EDOC]
                    VA frm_ODCT_Original_Order_Type [ODCT] -> szSODDocType [EDCT]
                    VA frm_OKCO_Original_Order_Co [OKCO] -> szSODOrderCo [EKCO]
                    VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
                    VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
                    VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
                    "1" -> cRetrieveOrderNo [EV02]
                    VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
                    FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
                    FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                    FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
                    FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
                    FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
                    FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
                    FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
                    FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
                    VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
          Else
               // SAR 3011549 - Begin/End CHANGE
               // SAR 3406866, Pass in/out PEID and TCID
               // SAR 3530912 - Begin/End CHANGE
               // SAR 5308881 - BEGIN/END - Date Sensitive Customer Sets
               // *******************************************************************
               // SAR 5814943 - Begins
               // If chose from Detail First, set indicators to Additional Info to disable
               // flags if they are off in the header
               // SAR 5475531 - Begin/End Credit Message Default if shipto is entered first
               // SAR 8932433 - pass the requested Date
               // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
               // SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
               F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
                    FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
                    VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
                    "EP4210" -> szCMProgramID [PID]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    FC Business Unit [MCU] <> szBusinessUnit [MCU]
                    VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
                    VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
                    VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
                    FC Address Number [AN8] <> mnAddressNumber [AN8]
                    FC Ship To [SHAN] <> mnShipToNo [SHAN]
                    FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
                    FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
                    FC Reference [VR01] <> szReference [VR01]
                    VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
                    VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
                    FC Mode (F) [CRRM] -> cMode [CRRM]
                    FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
                    FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
                    VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    VA frm_USER_User_ID [USER] <> szUserID [USER]
                    FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
                    VA frm_szCreditMessage_CM [CM] <- szWKCreditMesg [CM]
                    VA frm_szTempCreditMessage_TSTA [TSTA] <- szWKTempCreditMesg [TSTA]
                    VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
                    <Blank> -> cWKSourceOfData [EV06]
                    <Blank> -> cWKProcMode [EV07]
                    VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
                    VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
                    VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
                    "1" -> cRetrieveOrderNo [EV02]
                    VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
                    FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
                    FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                    VA frm_cOPLL_DetailFirst [OPLL] <- cOPPartialLineShipmentAllowed [OPLL]
                    VA frm_cOPBA_DetailFirst [OPBA] <- cOPBackorderAllowed [OPBA]
                    VA frm_cOPMS_DetailFirst [OPMS] <- cOPMultiSourcingAllowed [OPMS]
                    VA frm_cOPSS_DetailFirst [OPSS] <- cOPSubstituteAllowed [OPSS]
                    FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
                    FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
                    FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
                    FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
                    FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
                    FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
                    FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
                    VA frm_cUseTaxedPrices_UTP [UTP] <> cUseTaxedPrices [UTP]
               Press Button(FC Set Use Taxed Prices After Begin Doc)
               //
               // Sar 5737896 - Let Begin Doc get the Currency code and assign that value to
               // the FC So Trans Currency Code field
               If PO cTransferOrderEntry [EV25] is equal to "1"
               And FC Currency Code [CRCD] is equal to <Blank>
                    FC Currency Code [CRCD] = FC Currency Code [CRCD]
               End If
          End If
          // SAR 8585461 - Scenario Manager processing option removed
          If PO cOrderPromising [EV01] is equal to "1"
               If VA frm_cOPBA_DetailFirst [OPBA] is equal to "N"
                    VA frm_cDisableOPBackOrderFlag [EV01] = "1"
               Else
                    VA frm_cDisableOPBackOrderFlag [EV01] = "0"
               End If
               If VA frm_cOPLL_DetailFirst [OPLL] is equal to "N"
                    VA frm_cDisableOPPartialShipFlag [EV01] = "1"
               Else
                    VA frm_cDisableOPPartialShipFlag [EV01] = "0"
               End If
               If VA frm_cOPMS_DetailFirst [OPMS] is equal to "N"
                    VA frm_cDisableOPMultiSourceFlag [EV01] = "1"
               Else
                    VA frm_cDisableOPMultiSourceFlag [EV01] = "0"
               End If
               If VA frm_cOPSS_DetailFirst [OPSS] is equal to "N"
                    VA frm_cDisableSubstituteFlag [EV01] = "1"
               Else
                    VA frm_cDisableSubstituteFlag [EV01] = "0"
               End If
          End If
          // SAR 5814943 - Ends
          // SAR 3305580 - load the CSS PO field
          If PO cShoppingCartMode [CART] is not equal to <Blank>
          And PO cShoppingCartMode [CART] is not equal to <NULL>
               // SAR# 5465042-Begin
               If VA frm_PreviousCustomerPO_VR01 [VR01] is not equal to FC Reference [VR01]
                    Clear Control Error(FC Reference [VR01])
                    // SAR 5308881 - BEGIN/END - Date Sensitive Customer Sets
                    // SAR 5475531 - Begin/End Credit Message Default if shipto is entered first
                    // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
                    F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
                         FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
                         VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
                         VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                         VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                         VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                         VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
                         "EP4210" -> szCMProgramID [PID]
                         VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                         FC Order Company [KCOO] <> szOrderCo [KCOO]
                         FC Order Number [DOCO] <> mnOrderNo [DOCO]
                         FC Order Type [DCTO] <> szOrderType [DCTO]
                         FC Business Unit [MCU] <> szBusinessUnit [MCU]
                         VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
                         VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
                         VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
                         FC Address Number [AN8] <> mnAddressNumber [AN8]
                         FC Ship To [SHAN] <> mnShipToNo [SHAN]
                         FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
                         FC Reference [VR01] <> szReference [VR01]
                         VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
                         VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
                         FC Mode (F) [CRRM] -> cMode [CRRM]
                         FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
                         FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
                         VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                         VA frm_USER_User_ID [USER] <> szUserID [USER]
                         FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
                         VA frm_szCreditMessage_CM [CM] <- szWKCreditMesg [CM]
                         VA frm_szTempCreditMessage_TSTA [TSTA] <- szWKTempCreditMesg [TSTA]
                         VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
                         <Blank> -> cWKSourceOfData [EV06]
                         <Blank> -> cWKProcMode [EV07]
                         VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
                         VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
                         VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
                         "1" -> cRetrieveOrderNo [EV02]
                         VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
                         FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
                         FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
                         FI mnProcessID [PEID] <> mnProcessID [PEID]
                         FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                         VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                         FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                         FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
                         FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
                         FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
                         FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
                         FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
                         FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
                         FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
                         FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
                         FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
                         VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
                    //
               End If
               // SAR# 5465042-End
               FC Reference [VR01] = FC Reference [VR01]
               VA frm_szPrevCSSCustPO_VR01 [VR01] = FC Reference [VR01]
               // SAR 6212080 - Evaluate Currency Codes for CSS Column Defaults
               If SL CurrencyProcessing is not equal to "N"
                    If FC To Currency Code [CRDC] is equal to <Blank>
                    Or FC To Currency Code [CRDC] is equal to <NULL>
                         FC To Currency Code [CRDC] = VA frm_szCSSBaseCurrencyCode_CRDC [CRDC]
                    End If
                    If FC Currency Code [CRCD] is equal to <Blank>
                    Or FC Currency Code [CRCD] is equal to <NULL>
                         FC Currency Code [CRCD] = VA frm_szCSSCurrencyCode_CRCD [CRCD]
                    End If
               End If
          End If
          //
          // SAR 2840521
          If VA frm_cSoldToBACKAllowed_BACK [BACK] is less than or equal to <Blank>
               GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
                    FC Address Number [AN8] -> mnSoldToAddress [AN8]
                    "1" -> cSuppressErrorMsg [EV02]
                    UNDEFINED <> cErrorCode [ERRC]
                    UNDEFINED <> szTemporaryCreditMsg [TSTA]
                    UNDEFINED <> cBillingAddressNumber [BADT]
                    UNDEFINED <> szTaxExplainationCode [EXR1]
                    UNDEFINED <> cCustomerPORequireDate [PORQ]
                    UNDEFINED <> szPaymentTerms [TRAR]
                    UNDEFINED <> cPaymentInstructions [RYIN]
                    UNDEFINED <> szCurrencyCode [CRCD]
                    UNDEFINED <> szAdjustmentSchedule [ASN]
                    UNDEFINED <> szCustomerPricingGroup [CPGP]
                    UNDEFINED <> mnInvoiceCopies [INVC]
                    UNDEFINED <> szHoldCode [HOLD]
                    UNDEFINED <> szPrintMsg [INMG]
                    UNDEFINED <> cPricePickList [PLST]
                    VA frm_cSoldToBACKAllowed_BACK [BACK] <- cBackOrderAllowed [BACK]
                    UNDEFINED <> cPriorityCode [PRIO]
                    UNDEFINED <> mnTradeDiscount [TRDC]
                    UNDEFINED <> mnMaximumOrder [MAXO]
                    UNDEFINED <> mnMinimumOrder [MINO]
                    UNDEFINED <> mnRelatedAddressNum [AN8R]
                    UNDEFINED <> cInvoiceConsolidation [ICON]
                    UNDEFINED <> cSendInvoiceTo [SITO]
                    UNDEFINED <> cCreditCheckLevel [ARTO]
                    UNDEFINED <> cCreditHoldExempt [EXHD]
                    UNDEFINED <> szABAmntCurrCode [CRCA]
                    UNDEFINED <> szGLClassCode [ARC]
                    UNDEFINED <> cDeliveryNotFlag [EDF1]
                    UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
                    UNDEFINED <> cItemRestrictions [EDF2]
                    FC Order Company [KCOO] -> szCompany [CO]
                    UNDEFINED <> cAbcCodeSales [ABC1]
                    UNDEFINED <> cAbcCodeMargin [ABC2]
                    UNDEFINED <> cAbcCodeAverageDays [ABC3]
                    UNDEFINED <> mnAverageDaysToPay [AVD]
                    UNDEFINED <> szBuyingSegmentCode [BSC]
                    UNDEFINED <> cBypassAuditLogging [BYAL]
                    UNDEFINED <> szOPBusinessObjective [OPBO]
          End If
          //
          // SAR 2801645 If Long Sold To Address No is not enterred, default it from
          // BeginDoc
          //
          If FC Long Address Number [ALKY] is equal to <Blank>
          And FC Address Number [AN8] is not equal to "0"
               ScrubAddressNumber(B0100016.ScrubAddressNumber)
                    FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    "2" -> cInputSelection [EV01]
                    FC Description [DL01] <> szNameAlpha [ALPH]
          End If
          //
          // SAR 2938828 - Begin Add
          If FC Long Address Number [ALKY] is equal to <Blank>
          And FC Address Number [AN8] is not equal to "0"
               ScrubAddressNumber(B0100016.ScrubAddressNumber)
                    FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
                    FC Ship To [SHAN] -> mnAddressNumber [AN8]
                    "2" -> cInputSelection [EV01]
                    FC Description [DL01] <> szNameAlpha [ALPH]
          End If
          // SAR 2938828 - End Add
          //
          ! If VA frm_EV03_Valid_Order_Number [EV03] is equal to "1"
               ! Set Edit Control Error(FC Order Number, "0002")
          ! Else
               ! Clear Edit Control Error(FC Order Number [DOCO])
          ! End If
          If VA frm_ERRC_Error_Code [ERRC] is equal to "2"
               VA frm_EV23_cBeginDocError [EV23] = "1"
               // SAR 1997324
               Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
          Else
               // Enable the order address form exit
               Enable Control(HC Order Addre&ss)
               //
               VA frm_EV17_Hdr_Work_File [EV17] = "1"
               // SAR 1997324
               // Begin SAR 4790863
               // SAR 8793762 - If Header is processed succesfully then enable the grid in
               // copy mode.
               If SV Form_ Mode is equal to CO ADD_MODE
               Or SV Form_ Mode is equal to CO COPY_MODE
                    Enable Grid(FC Grid,  <All Rows>,  <All Columns>)
               End If
               // End 4790863
               //
               Disable Control(FC Mode (F) [CRRM])
               If FC To Currency Code [CRDC] is equal to FC Currency Code [CRCD]
                    FC Mode (F) [CRRM] = "D"
                    Press Button(FC Hide/Show Currency (HIDDEN))
                    Disable Control(FC Exchange Rate [CRR])
               Else
                    //  SAR 8955603 - Also need to push the Hide/Show Currency button at this time
                    // for foreign order when taxed pricing is on in order to hide/show the right
                    // price columns. This is because the hide and show are based on the taxed
                    // pricing flag which is available at this time and may not be available yet
                    // when the price columns are displayed initially.
                    If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
                         Press Button(FC Hide/Show Currency (HIDDEN))
                    End If
               End If
          End If
     End If
     // SAR 6480519
     If VA frm_EV03_Valid_Order_Number [EV03] is equal to "1"
          Set Edit Control Error(FC Order Number, "0002")
     Else
          Clear Edit Control Error(FC Order Number [DOCO])
     End If
     //
     // SAR 8955603 - Disable tax amount columns
     If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          Disable Grid(FC Grid, <All Rows>, GC Unit TaxAmount)
          Disable Grid(FC Grid, <All Rows>, GC ExtendedTax Amount)
          Disable Grid(FC Grid, <All Rows>, GC Foreign ExtendedTax Amount)
          Disable Grid(FC Grid, <All Rows>, GC Foreign ExtendedTax Amount)
     End If
     //
     // SAR 8955603 - Put the logic for disabling/hiding prices in a push button
     // and add logic for disabling/hiding taxed prices.
     Press Button(FC Disable/Hide Price)
     //
     // SAR 8955603 - Disable/Hide price columns logic has been moved to a push
     // button.  Add condition for the logic that was built in the disable/hide
     // price columns logic
     If PO cDisableorHidePrice [EV04] is not equal to("1","2")
          If SV Engine_Type is equal to CO HTML_ENGINE
          Or SV Engine_Type is equal to CO JAVA_ENGINE
               If VA frm_cPrevLntyProtectPrice_EV01 [EV01] is equal to "1"
               Or VA frm_cPrevLntyProtectPrice_EV01 [EV01] is equal to "Y"
                    Disable Grid(FC Grid,  <All Rows>, GC UnitPrice)
                    Disable Grid(FC Grid,  <All Rows>, GC ExtendedPrice)
                    Disable Grid(FC Grid,  <All Rows>, GC ForeignUnit Price)
                    Disable Grid(FC Grid,  <All Rows>, GC ForeignExtended Price)
                    // SAR 8955603 - Disable taxed price columns
                    If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                         Disable Grid(FC Grid, <All Rows>, GC TaxedUnit Price)
                         Disable Grid(FC Grid, <All Rows>, GC TaxedExtended Price)
                         Disable Grid(FC Grid, <All Rows>, GC Foreign TaxedExtended Price)
                         Disable Grid(FC Grid, <All Rows>, GC Foreign TaxedExtended Price)
                    End If
               End If
          End If
     End If
     //
     // 5595998 End
     If PO cDisableorHideCost [EV03] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC UnitCost)
          Disable Grid(FC Grid,  <All Rows>, GC ExtendedCost)
          Disable Grid(FC Grid,  <All Rows>, GC Foreign UnitCost)
          Disable Grid(FC Grid,  <All Rows>, GC Foreign ExtendedCost)
     Else
          If PO cDisableorHideCost [EV03] is equal to "2"
               Hide Grid Column(FC Grid, GC UnitCost)
               Hide Grid Column(FC Grid, GC ExtendedCost)
               Hide Grid Column(FC Grid, GC Foreign UnitCost)
               Hide Grid Column(FC Grid, GC Foreign ExtendedCost)
          End If
     End If
     //
     If PO cDisableStatusCodes [EV05] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC LastStatus)
          Disable Grid(FC Grid,  <All Rows>, GC NextStatus)
     End If
     //
     // SAR 6078141Begins
     If PO cOrderTemplateAddress [EV21] is equal to "1"
     And VA frm_sz_OrderTempSoldTo_ORTP [ORTP] is equal to <Blank>
          MBFCustomerMaster(N0100042.MBFCustomerMaster)
               "I" -> cActionCode [ACTN]
               "1" -> cSuppressErrorMessage [SUPPS]
               FC Order Company [KCOO] -> szCompany [CO]
               VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
               VA frm_sz_OrderTempSoldTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
               FC Address Number [AN8] -> mnCustomerNumber [AN8]
     Else
          If PO cOrderTemplateAddress [EV21] is equal to "2"
          And VA frm_sz_OrderTempShipTo_ORTP [ORTP] is equal to <Blank>
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    FC Order Company [KCOO] -> szCompany [CO]
                    VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                    VA frm_sz_OrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                    FC Ship To [SHAN] -> mnCustomerNumber [AN8]
          End If
     End If
     // SAR 6078141 Ends
     //
     // 2673321
     //
     // SAR 6418281  - Added condition to check if called from LoadGridCache
     // SAR# 6795060: Skip Template if in CSS Shopping Cart
     If PO cShoppingCartMode [CART] is equal to or empty <Blank>
          If VA frm_EV01_LoadGridFromCacheDone [EV01] is not equal to "1"
          And VA frm_cCallFrmLoadGridCache [EV01] is not equal to "1"
               Press Button(FC ProcessOrderTemplate)
          End If
     End If
     //
     If VA frm_cSpotRateAllowed [EV20] is equal to "1"
          Disable Control(FC Exchange Rate [CRR])
     End If
     //
     If FC To Currency Code [CRDC] is equal to FC Currency Code [CRCD]
          Disable Control(FC Exchange Rate (Divisor) [CRRD])
          Disable Control(FC Exchange Rate [CRR])
     End If
     // SAR 8949181
     If PO cShoppingCartMode [CART] is equal to "1"
          If PO cOverrideCarrierNumber [EV01] is equal to <Blank>
          Or PO cOverrideCarrierNumber [EV01] is equal to <NULL>
               Disable Grid(FC Grid,  <All Rows>, GC CarrierNumber)
          End If
     End If
End If
// SAR 5475531 - Begin
// SAR 8348394 - Display credit msg correspond to  frm_szCreditMessage_CM
// which is returned by BeginDoc
If VA frm_szCreditMessage_CM [CM] is greater than <Blank>
     // SAR 8348394 - No need to get the msg if it is already shown
     If FC CREDIT MESSAGE [DL01] is equal to or empty <Blank>
          Show Control(FC CREDIT MESSAGE [DL01])
          // SAR 7898204 Passed the language Preference to get Customised Message
          // description
          GetUDC(X0005.GetUDC)
               "CM" -> szDataDictionaryItem [DTAI]
               "00" -> szSystemCode [SY]
               "CM" -> szRecordTypeCode [RT]
               VA frm_szCreditMessage_CM [CM] -> szUserDefinedCode [KY]
               SL LanguagePreference -> szLanguagePreference [LNGP]
               FC CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
// SAR 8348394 - Display temp credit msg correspond to
// frm_szTempCreditMessage_TSTA which is returned by beginDoc
If VA frm_szTempCreditMessage_TSTA [TSTA] is greater than <Blank>
     // SAR 8348394 - No need to get the msg if it is already shown
     If FC TEMP CREDIT MESSAGE [DL01] is equal to or empty <Blank>
          Show Control(FC TEMP CREDIT MESSAGE [DL01])
          // SAR 7898204 Passed the language Preference to get Customised Message
          // description
          GetUDC(X0005.GetUDC)
               "TSTA" -> szDataDictionaryItem [DTAI]
               "00" -> szSystemCode [SY]
               "CM" -> szRecordTypeCode [RT]
               VA frm_szTempCreditMessage_TSTA [TSTA] -> szUserDefinedCode [KY]
               SL LanguagePreference -> szLanguagePreference [LNGP]
               FC TEMP CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
// SAR 5475531 - End
//
If PO cEnableGrossProfitPricing [EV01] is not equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC ProfitMargin)
End If
Disable Grid(FC Grid,  <All Rows>, GC QuantityAvailable)
Disable Grid(FC Grid,  <All Rows>, GC Item FlashMessage)
//
// SAR 6968012
Disable Grid(FC Grid, <All Rows>, GC Purchase OrderExtended Cost)
//
// SAR#5113442
If VA frm_ProductVariantsModule_MEOW [MEOW] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC Matrix ControlLine Number)
End If
// Begin SAR 4648630
// add a begin doc error return...
If SV Form_ Mode is equal to CO ADD_MODE
And PO cHideCommission [EV09] is not equal to "1"
     Enable Control(HC &Header Commissions)
End If
// SAR 5308881 - BEGIN - Date Sensitive Customer Sets
If VA frm_UseCustomerSet_CP19 [CP19] is equal to "1"
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Deliver To (F4201.0) [DVAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Invoiced To (F4201.0) [ITAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Forwarded To (F4201.0) [FTAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Paid By (F4201.0) [PBAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// SAR 5308881 - BEGIN - Date Sensitive Customer Sets
Disable Grid(FC Grid,  <All Rows>, GC Kit ComponentProcessed)

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Row is Entered
Event GUID: 61c6b621-c11f-11d2-a79d-00105a1bfecd
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_LineErrorCount_INT01 [INT01]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4393593                   VK6272082                 07/24/00
// 7144111                   IC8859725                 06/17/04
//
// SAR 8397882
VA grd_OrigLocation_LOCN [LOCN] = GC Location  [LOCN]
VA grd_OrigLot_LOTN [LOTN] = GC Lot Serial Number [LOTN]
VA grd_Orig_QuantityCanceled_SOCN [SOCN] = GC Quantity Canceled [SOCN]
// SAR 7144111 Start
VA grd_PrevItemNumber_UITM [UITM] = GC Item Number [UITM]
// SAR 7144111 End
//
// SAR 7141463
VA grd_PrevSchedulePickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
VA grd_PreviousLot_LOTN [LOTN] = GC Lot Serial Number [LOTN]
// sar 6867625
VA grd_PrevRequestedDate [DRQJ] = GC Request Date [DRQJ]
// Sar 5492817 Begin
! If PO szNonUpdatableStatus [NXT2] is greater than "0"
! And GC Next Stat [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
! And SV Form_ Mode is equal to CO COPY_MODE
! And GC Next Stat [NXTR] is less than "999"
     ! Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
! End If
// Sar 5492817 End
// SAR 2766034
GB Quantity Ordered [UORG] = GC Quantity Ordered [UORG]
//
// SAR 2848785
//
If GC WHSE Status [SWMS] is equal to "O"
     Disable Control(HC &Cancel Line)
Else
     // SAR 2883871
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Enable Control(HC &Cancel Line)
     End If
End If
//
// SAR 3161547
If VA grd_cEnableHCBlanketOrders [EV01] is equal to "1"
And GC Next Stat [NXTR] is not equal to "999"
     Enable Control(HC &Blanket Orders)
Else
     Disable Control(HC &Blanket Orders)
End If
//
// SAR 4393593 BEGIN ADD -disable Zero Price for kit component lines
If GC Kit Master Line No [KTLN] is not equal to "0"
Or GC Related Item No [RLIT] is not equal to <Blank>
     Disable Control(HC &Zero Price)
Else
     // SAR 5953388
     If PO cDisableorHidePrice [EV04] is not equal to "1"
     And PO cDisableorHidePrice [EV04] is not equal to "2"
          Enable Control(HC &Zero Price)
          If BC Status - In Warehouse (F4211.0) [SWMS] is equal to "I"
               Disable Control(HC &Zero Price)
          End If
     End If
End If
// SAR 4393593 END
// SAR# 4648630 Begin
If SV Form_ Mode is equal to CO ADD_MODE
And PO cHideCommission [EV09] is not equal to "1"
     Enable Control(HC &Detail Commissions)
End If
//
// If Line is Pending Approval, Disable Cancel
//
If GC Pending Approval [PEND] is not equal to <Blank>
     Disable Control(HC &Cancel Line)
End If
//    SAR 7481433 Begin
! // SAR 5510587
! If VA grd_cVolumeUpsellExists_EV01 [EV01] is equal to "1"
     ! Enable Control(HC Volume Based UpSell)
! Else
     ! Disable Control(HC Volume Based UpSell)
! End If
//    SAR 7481433 End
//
// SAR 6386961 Begin
// SAR 6908976 - remove else part so that the Cancel line is disabled in ADD ,
// COPY MODE
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     If GC Demand Key [DEID] is not equal to <NULL>
     And GC Demand Key [DEID] is not equal to "0"
     And VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
          Disable Control(HC &Cancel Line)
     End If
End If
// SAR 6386961 End
If GC cGetFromHistory [EV01] is equal to "1"
     If VA grd_STKT_Stocking_Type [STKT] is less than or equal to <Blank>
          GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
               GC Business Unit [MCU] -> szBranch [MCU]
               GC Short Item No [ITM] -> mnShortItemNumber [ITM]
               VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
               UNDEFINED <> cIssueTypeCode [ITC]
               UNDEFINED <> cPlanningCode [MPST]
               UNDEFINED <> mnPlanningFence [MTF1]
               UNDEFINED <> mnFreezeFence [MTF2]
               UNDEFINED <> mnMessageDisplayFence [MTF3]
               UNDEFINED <> mnTimeFence [MTF4]
               UNDEFINED <> cPlanningFenceRule [MPSP]
               UNDEFINED <> cFixedVariableLeadtime [MRPP]
               UNDEFINED <> mnLeadtimeLevel [LTLV]
               UNDEFINED <> mnLeadtimeMfg [LTMF]
               UNDEFINED <> mnLeadtimeCumulative [LTCM]
               UNDEFINED <> mnLeadtimePerUnit [LTPU]
               UNDEFINED <> mnMFGLeadtimeQty [MLQ]
               UNDEFINED <> mnShrinkFactor [SRNK]
               UNDEFINED <> cShrinkFactorMethod [SRKF]
               UNDEFINED <> cOrderPolicyCode [OPC]
               UNDEFINED <> mnOrderPolicyValue [OPV]
               UNDEFINED <> mnAccountingCostQuantity [ACQ]
               UNDEFINED <> cTimeBasisCode [TIMB]
               UNDEFINED <> mnMoveHours [MOVD]
               UNDEFINED <> mnQueueHours [QUED]
               UNDEFINED <> mnStandardSetupHours [SETL]
               UNDEFINED <> cErrorIndicator [ERRC]
               UNDEFINED <> mnPlannerNumber [ANPL]
               UNDEFINED <> mnLowLevelCode [LLX]
               "1" -> cSuppressErrorMessage [EV01]
               UNDEFINED <> szErrorMessageID [DTAI]
               UNDEFINED <> cNetChangeFlag [MRPC]
               "0" -> idF4102Pointer [GENLNG]
               UNDEFINED <> szLineType [LNTY]
               UNDEFINED <> mnSafetyStock [SAFE]
               UNDEFINED <> cLotStatusCode [LOTS]
               UNDEFINED <> cAbcCode [ABCS]
               UNDEFINED <> cAllocateByLot [CMGL]
               UNDEFINED <> szMasterPlanning [PRP5]
               UNDEFINED <> mnBuyer [BUYR]
               UNDEFINED <> cPotencyControl [OT1Y]
               UNDEFINED <> mnStandardPotency [STDP]
               UNDEFINED <> cLotExpDateCalcMeth [LECM]
               UNDEFINED <> cActiveIngredientFlag [AING]
               UNDEFINED <> cCrossDockFlagYN [XDCK]
     End If
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          VA grd_EV12_KitProcessed [EV12] = "1"
          VA frm_cDidQtyOrderedChng [ERRC] = "1"
     Else
          If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
               VA grd_EV25_CfgItemProcessed [EV25] = "1"
          End If
     End If
End If
//
// SAR 8711851 -  Not to disable Grid in ADD or COPY Mode
// // BUG 11042042-  Not to disable Grid in in Update Mode
If PO szNonUpdatableStatus [NXT2] is greater than "0"
And GC Next Stat [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
And SV Form_ Mode is equal to CO UPDATE_MODE
And GC Next Stat [NXTR] is less than "999"
     Disable Control(HC &Kits/Configurator)
     ! Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
Else
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     And SV Form_ Mode is equal to CO UPDATE_MODE
     And GC Next Stat [NXTR] is less than "999"
          // Check component status, only if PO is set to check cutoff status and kit is
          // not yet dirty.
          If PO szNonUpdatableStatus [NXT2] is greater than "0"
          And GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
          And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
          And VA grd_EditLine_ErrorCode_ERRC [ERRC] is not equal to "1"
               // Check if any of the kit's component is past the cut-off status
               VerifyKitCompIsPostCutoffStatus(B4208370.VerifyKitCompIsPostCutoffStatus)
                    FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szOrderCompany [KCOO]
                    GC Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
                    VA grd_cKitCompPostCutoffStatus [EV01] <- cIsKitCompPostCutOff [EV01]
                    PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
          End If
          //
          // If its dirty kit or component past the cutoff status, disable the fields
          // that triggers KitSelectionWindow and its RowExit.
          If VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
          Or GC Kit Component Dirty Flag [KITDIRTY] is equal to "1"
               Disable Control(HC &Kits/Configurator)
               Disable Grid(FC Grid,  <Currently Selected Row>, GC Branch/Plant)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC1)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC2)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC3)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
               Disable Grid(FC Grid, <Currently Selected Row>, GC UoM)
               Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedDate)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityShipped)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityBackordered)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityCanceled)
               //
               If VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
               Or GC Kit Component Dirty Flag [KITDIRTY] is equal to "1"
                    // If PO set to hide KitComponents, then issue a warning to let the user know
                    // these KitSelectionWindow trigger fields are disabled because one of its
                    // component is past the cutoff status or the kit is dirty.
                    If PO cHideKitComponents [EV11] is greater than <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered, "42B31")
                    End If
               End If
          Else
               // SAR 8537241 Enable Kit row exit
               Enable Control(HC &Kits/Configurator)
          End If
     Else
          If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          Or VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          And VA grd_EditLine_ErrorCode_ERRC [ERRC] is not equal to "1"
               //
               // SAR 8610971 - Disable the Kits/Configurator row exit in copy mode for kit
               // lines that were copied.  The user can't use the row exit to P41351 because
               // the component lines cannot be managed correctly until the sales order is
               // saved.
               //
               If SV Form_ Mode is equal to CO COPY_MODE
               And VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               And GC Original Line Number [OGNO] is greater than <Blank>
                    Disable Control(HC &Kits/Configurator)
               Else
                    Enable Control(HC &Kits/Configurator)
               End If
          Else
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               And SV Form_ Mode is equal to CO ADD_MODE
               And PO cHideKitComponents [EV11] is greater than <Blank>
               And VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered, "42B31")
               Else
                    // SAR 8537241 Disable Kit row exit
                    Disable Control(HC &Kits/Configurator)
               End If
          End If
     End If
End If
//
// Sar 6988814 - Lock  Price related fields, if this order is released from
// blanket.
If VA frm_cOrderReleasedFromBlanket [EV01] is equal to "Y"
     // SAR 7571623 Begins - When additional lines are added to an order that is
     
     // enerated from a quote order, price fields get locked. To resolve this,
     
     // ollowing if condition is added. According to this condition, the fields get
     // locked only when the form is in update mode and when the quantity is 
     
     // eleased from an already existing blanket.
     If SV Form_ Mode is equal to CO UPDATE_MODE
     And VA grd_BlanketOrdersFound_EV02 [EV02] is greater than or equal to "1"
          Disable Grid(FC Grid,  <Currently Selected Row>, GC UnitPrice)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedPrice)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC ForeignUnit Price)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC ForeignExtended Price)
          //
          // SAR 8955607 - Taxed Prices Enhancement - Disable Taxed Price fields
          //  if the Line is released from Blanket to retain the prices from Blanket.
          //
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
          End If
     End If
     // SAR 7571623 Ends
End If
// SAR 7209886 - BEGIN
VA grd_InitialUnitWeight [ITWT] = GC Unit Weight [ITWT]
// SAR 7209886 - END
If VA grd_ACTI_ActionHidden [ACTI] is equal to or empty <Blank>
     RetrieveStringElement(B4002410.RetrieveStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
          "27" -> nPosition [INT01]
          VA frm_CheckForReleaseBlankt_EV01 [EV01] <- cCharacter [EV01]
     If VA frm_CheckForReleaseBlankt_EV01 [EV01] is equal to "1"
          VA grd_ACTI_ActionHidden [ACTI] = "A"
     End If
End If
// SAR 8367190
// Only enable Row Exit View Kit Components for a Kit Parent
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     Enable Control(HC View Kit Components)
Else
     Disable Control(HC View Kit Components)
End If
//
// SAR 8470787 - Disable Check Price exit for dirty kit lines
// SAR# 8921530 To disable Check Price for Transfer Order & InterCompany Order
RetrieveStringElement(B4002410.RetrieveStringElement)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
     "1" -> nPosition [INT01]
     VA frm_cInterBranchFlag_EV24 [EV24] <- cCharacter [EV01]
// SAR 8968981 - Disable Check price for Configured parent, Related component
If GC Kit Component Dirty Flag [KITDIRTY] is equal to "1"
Or PO cTransferOrderEntry [EV25] is equal to "1"
Or VA frm_cInterBranchFlag_EV24 [EV24] is greater than "0"
Or GC Last Stat [LTTR] is equal to "914"
Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
Or GC Related Kit Cpnt [RKIT] is not equal to <NULL>
     Disable Control(HC Check &Price)
Else
     If PO cDisableorHidePrice [EV04] is equal to "2"
          Disable Control(HC Check &Price)
     Else
          Enable Control(HC Check &Price)
     End If
End If
// SAR 8537241
// Disable Subs/Comp row exit for kit components
If GC Related Kit Cpnt [RKIT] is equal to "0"
And GC Kit Master Line No [KTLN] is greater than "0"
     Disable Control(HC &Subst/Compl Items)
Else
     Enable Control(HC &Subst/Compl Items)
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Row is Selected (Web Only)
Event GUID: 788a3dba-3a96-4b6e-8b81-d379bf536463
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szComputerID_CTID [CTID]
evt_idB4200310Handle_GENLNG [GENLNG]
----------------------------------------
// SAR 8944140:  OFW prep for row exit to Service Level Rules (SLR) form
//
If VA frm_szComputerID_CTID [CTID] is greater than <Blank>
     VA evt_szComputerID_CTID [CTID] = VA frm_szComputerID_CTID [CTID]
Else
     VA evt_szComputerID_CTID [CTID] = FI Computerid [CTID]
End If
//
//    Get Sales Order Header Cache
RetrieveF42UI01Pointer(B4208010.RetrieveF42UI01Pointer)
     VA frm_EV22_cCacheOn [EV22] -> cCacheOrWorkfile [EV01]
     "1" -> nIndexID [INT01]
     VA evt_idB4200310Handle_GENLNG [GENLNG] <- idF42UI01Pointer [GENLNG]
     VA evt_szComputerID_CTID [CTID] -> szComputerID [CTID]
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     "1" -> cSuppressErrorMessages [SUPP]
//
//     If Header Cache does not exist then call Begin Doc - B4200310
If VA evt_idB4200310Handle_GENLNG [GENLNG] is less than or equal to "0"
     // SAR 8969881 - Map additional F4201 fields to the begin doc call
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA evt_szComputerID_CTID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          BC Document Company (Original Order) (F4201.0) [OKCO] -> szOriginalOrderCo [OKCO]
          BC Original Order Number (F4201.0) [OORN] -> szOriginalOrderNo [OORN]
          BC Original Order Type (F4201.0) [OCTO] -> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          BC Date - Requested (F4201.0) [DRQJ] -> jdRequestedDate [DRQJ]
          BC Date - Order/Transaction (F4201.0) [TRDJ] -> jdOrderDate [TRDJ]
          BC Date - Promised Shipment (F4201.0) [PPDJ] -> jdPromisedDate [PDDJ]
          BC Date - Cancel (F4201.0) [CNDJ] -> jdCancelDate [CNDJ]
          BC Reference (F4201.0) [VR01] -> szReference [VR01]
          BC Delivery Instructions Line 1 (F4201.0) [DEL1] -> szDeliveryInstructions1 [DEL1]
          BC Delivery Instructions Line 2 (F4201.0) [DEL2] -> szDeliveryInstructions2 [DEL2]
          BC Print Message (F4201.0) [INMG] -> szPrintMesg [INMG]
          BC Payment Terms Code (F4201.0) [PTC] -> szPaymentTerm [PTC]
          BC Payment Instrument (F4201.0) [RYIN] -> cPaymentInstrument [RYIN]
          BC Price and Adjustment Schedule (F4201.0) [ASN] -> szAdjustmentSchedule [ASN]
          BC Discount - Trade (F4201.0) [TRDC] -> mnTradeDiscount [TRDC]
          BC Tax Expl Code 1 (F4201.0) [EXR1] -> szTaxExplanationCode [EXR1]
          BC Tax Rate/Area (F4201.0) [TXA1] -> szTaxArea [TXA1]
          BC Certificate, Tax Exemption (F4201.0) [TXCT] -> szCertificate [TXCT]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          BC Hold Orders Code (F4201.0) [HOLD] -> szHoldOrdersCode [HOLD]
          BC Price Pick List (Y/N) (F4201.0) [PLST] -> cPricePickListYN [PLST]
          BC Invoice Copies (F4201.0) [INVC] -> mnInvoiceCopies [INVC]
          BC Buyer Number (F4201.0) [ANBY] -> mnBuyerNumber [ANBY]
          BC Carrier Number (F4201.0) [CARS] -> mnCarrier [CARS]
          BC Route Code (F4201.0) [ROUT] -> szRouteCode [ROUT]
          BC Stop Code (F4201.0) [STOP] -> szStopCode [STOP]
          BC Zone Number (F4201.0) [ZON] -> szZoneNumber [ZON]
          BC Freight Handling Code (F4201.0) [FRTH] -> szFreightHandlingCode [FRTH]
          BC Apply Freight - Y/N (F4201.0) [AFT] -> cApplyFreightYN [AFT]
          BC Unit of Measure - Weight Display (F4201.0) [WUMD] -> szWeightDisplayUOM [WUMD]
          BC Unit of Measure - Volume Display (F4201.0) [VUMD] -> szVolumeDisplayUOM [VUMD]
          BC Authorization Number - Credit Approval (F4201.0) [AUTN] -> szAuthorizationNo [AUTN]
          BC Account Number - Credit/Bank (F4201.0) [CACT] -> szCreditBankAcctNo [CACT]
          BC Date - Expired (Julian) (F4201.0) [CEXP] -> jdCreditBankExpiredDate [CEXP]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          BC Pricing Group (F4201.0) [PRGP] -> szPricingGroup [PRGP]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          BC Document (Order #, Invoice, etc.) (F4201.0) [DOC1] -> mnRMANumber [DOC1]
          BC Document Type (F4201.0) [DCT4] -> szRMADocType [DCT4]
          BC Date - Price Effective Date (F4201.0) [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
          BC OP Business Objective (F4201.0) [OPBO] -> szOPBusinessObjective [OPBO]
          BC OP Partial Order Shipment (F4201.0) [OPPL] -> cOPPartialOrderShipmentAllowed [OPPL]
          BC OP Partial Ship Line Items (F4201.0) [OPLL] -> cOPPartialLineShipmentAllowed [OPLL]
          BC Backorders Allowed (Y/N) (F4201.0) [BACK] -> cOPBackorderAllowed [OPBA]
          BC OP Allow Multi Source (F4201.0) [OPMS] -> cOPMultiSourcingAllowed [OPMS]
          BC OP Allow Substitutes (F4201.0) [OPSS] -> cOPSubstituteAllowed [OPSS]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          BC Requested Delivery Time (F4201.0) [DRQT] -> mnRequestedDeliveryTime [DRQT]
          BC Mode of Transport (F4201.0) [MOT] -> szModeOfTransport [MOT]
          BC Reason Code (F4201.0) [RCD] -> szReasonCode [RCD]
          FC Long Address Number [ALKY] <> szLongAddressNumberDeliveredTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberInvoicedTo [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberPaidBy [ALKY]
          FC Long Address Number [ALKY] <> szLongAddressNumberForwardedTo [ALKY]
Else
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA evt_idB4200310Handle_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If
//
If FI Jobnumber [JOBS] is greater than "0"
     // Mark orderline as selected for display on SLR form (P4277711)
     If VA frm_cSystem42WInstalled_EV01 [EV01] is greater than "0"
     And GC Order Score Override [OSCOREO] is greater than "0"
          UpdateSLRDetailCache(B4277782.UpdateSLRDetailCache)
               "1" -> nIndexNumber [INT01]
               "6" -> nNumberOfKeys [INT02]
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               FI Computerid [CTID] -> szComputerID [CTID]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompany [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               "1" -> cSelectedLineFlag [EV01]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
     End If
End If
//
// Bug# 11904723 - PMPN Enhancement - Begin
// Disable Prod No. Generation if Item is not Production Controlled or if Prod
// No is not blank
If VA grd_cSuppressPNGenerate_EV01 [EV01] is equal to "2"
     Disable Control(HC Generate Prod No.)
Else
     If GC Production Number [PMPN] is not equal to <Blank>
     And GC Production Number [PMPN] is not equal to <NULL>
          Disable Control(HC Generate Prod No.)
     Else
          Enable Control(HC Generate Prod No.)
     End If
End If
// Bug# 11904723 - PMPN Enhancement - End

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Row is Unselected (Web Only)
Event GUID: 89d275ef-4c66-492e-93e5-73f0c02754e9
=============================================
// SAR 8944140:  OFW prep for row exit to Service Level Rules (SLR) form
// Mark orderline as selected for display on SLR form (P4277711)
If VA frm_cSystem42WInstalled_EV01 [EV01] is greater than "0"
And GC Order Score Override [OSCOREO] is greater than "0"
     UpdateSLRDetailCache(B4277782.UpdateSLRDetailCache)
          "1" -> nIndexNumber [INT01]
          "6" -> nNumberOfKeys [INT02]
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
          FI Computerid [CTID] -> szComputerID [CTID]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          "0" -> cSelectedLineFlag [EV01]
          VA frm_mnF42UI11LineNo [LNIX] -> mnLineNumberXREF [LNIX]
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Row Exit & Changed - Inline
Event GUID: 955ceb01-5df4-11d2-a738-0000f6a025f4
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ShowSupplyAndDemand_EV01 [EV01]
----------------------------------------
// SAR 6507857
If VA frm_InsertGBCalledinSub_EV01 [EV01] is equal to "1"
     Stop Processing
End If
// SAR 3206442
If VA grd_EV25_CfgItemProcessed [EV25] is equal to <Blank>
Or VA grd_EV25_CfgItemProcessed [EV25] is equal to <NULL>
Or VA grd_EV25_CfgItemProcessed [EV25] is equal to "0"
And VA frm_ConfgProcessed_EV25 [EV25] is greater than <Blank>
     VA grd_EV25_CfgItemProcessed [EV25] = VA frm_ConfgProcessed_EV25 [EV25]
End If
//
// ---------------------------------------------------------------------------
// 6545212 CRM CSS
// ---------------------------------------------------------------------------
If VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
     GC Item Number [UITM] = GC Item Number [UITM]
End If
//
// SAR 8953108 - Apparel Enhancement
// For Matrix Item, when PCW10 is called the Qty Ordered value is passed to
// control the qty that can be entered in PCW10. Send the Qty entered by the
// user instead of system defaulted Qty. Store the Qty entered by the User.
// Not conditioned for Apparel, so it could be re-used if required for others.
//
VA grd_mnQtyEnteredByUser_UORG [UORG] = GC Quantity Ordered [UORG]
//
// SAR 7841304 - Populate GC line number for order promising when importing
// grid line that has a blank line number
If PO cOrderPromising [EV01] is not equal to <Blank>
And PO cOrderPromising [EV01] is not equal to <NULL>
And PO cOrderPromising [EV01] is not equal to "0"
     If GC Line Number [LNID] is equal to <Blank>
     Or GC Line Number [LNID] is equal to <NULL>
     Or GC Line Number [LNID] is equal to "0"
          GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
          //
          // SAR 7841304 - Delete the last grid row
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          Delete Grid Row(FC Grid, VA frm_MaxGridRows)
          //
          // SAR 7841304 - Trigger Add Last Entry Row to Grid to add a new last grid row
          // with the correct GC LineNumber
          VA frm_MaxGridRows [MATH01] = [VA frm_MaxGridRows [MATH01]]-1
          Get Grid Row(FC Grid, VA frm_MaxGridRows)
          // SAR 7841304 - Grid valuable assignment is necessary to trigger Add Last
          // Entry Row to Grid
          GC Line Number [LNID] = GC Line Number [LNID]
     End If
End If
// SAR 8347076 - Begin ADD
// Product Allocation Warning increments suppress
// flag with 4, if any grid row has been changed then the warning must be
// redisplayed. This flag must be reset for redisplay Product Allocation
// Warning. To reset flag, decrease its value with 4
// ************************************************************************
//
GetProdAllocDoneALPH10(B4205100.GetProdAllocDoneALPH10)
     GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
     VA grd_cProdAllocExists_EV01 [EV01] <- cValue [EV01]
If VA grd_cProdAllocExists_EV01 [EV01] is equal to "1"
     VA grd_MATH01_SuppressProcess [MATH01] = [VA grd_MATH01_SuppressProcess [MATH01]]-4
End If
// SAR 8347076- End ADD

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Grid
Event: Row Exit & Changed - Asynch
Event GUID: f57df5e5-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_Protect_Price_EV01 [EV01]
evt_jdOldSchedulePickDate_PDDJ [PDDJ]
evt_cKitConfigWinOpened_EV01 [EV01]
evt_mn_ActualQtyEntered_UORG [UORG]
evt_mn_ActualQtyEntOppSgn_UORG [UORG]
evt_mnForDomUnitPrice_UPRC [UPRC]
evt_mnOverrideBasePrice_OVBPRC [OVBPRC]
evt_szPromoRevLev_CLVL [CLVL]
evt_cPromoExists_EV01 [EV01]
evt_mnPromoRevNum_AREV [AREV]
evt_mnPromoWFLineNo_LNIX [LNIX]
evt_mnNumGridRows_LNID [LNID]
evt_cPromoExclusivityConflict [EV01]
evt_szErrorMessageID [DTAI]
evt_idF45UI73CacheCursor [GENLNG]
evt_NewSubstitute_EV01 [EV01]
evt_cCSSItemError_EV01 [EV01]
evt_mnShortItemNumber_ITM [ITM]
evt_szBranchPlant_MCU [MCU]
evt_cLineCancelled_EV01 [EV01]
evt_cKitProcessingRequired_EV1 [EV01]
evt_cItemRecordFound_EV02 [EV02]
evt_ShowSupplyAndDemand_EV01 [EV01]
evt_mnCreditJobnumber_JOBS [JOBS]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 3735660                   VK6272082                 03/25/00
// 4478714                   VK6272082                 09/13/00
// 5648068                          Arti                           01/28/02
// 6476931                   LF6356964                 02/04/03
// 6380622                   BC7158396                 08/04/03
// 6897939                   AK7095647                 11/24/03
// 7201690                  IC8867872                   08/25/04
// SAR# 5465042
// SAR 6507857
// 7638664                  AK7095647                 04/29/05
// 7785226                  AK7095647                 08/26/05
// 8957881                 DL5673327                 06/08/10
//
// SAR 8953108 - Apparel Enhancement
// Check if Collection Template is entered and call the Apparel Matrix Entry
// (PCW10). Do not go through this check if  the row is added from PCW10.
// New rows from PCW10 is added by Load Grid From Cache Button and it sets
// GC Row Inserted From PCW10 = 1 to indicate the row is added by PCW10
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If GC Row Inserted  From PCW10 [EV01] is not equal to "1"
          VA frm_cApprlPressButtonMode_EV01 [EV01] = "1"
          Press Button(FC CallApparelMatrixEntry)
          //
          // If the PCW10 is called for Collection template, then current grid row is
          // already deleted.Do not process the rest of this event for the deleted row.
          //
          If VA frm_cCollTemplatesDone_EV01 [EV01] is equal to "1"
               VA frm_cCollTemplatesDone_EV01 [EV01] = <NULL>
               Stop Processing
          End If
     End If
End If
//
VA grd_EditLine_ErrorCode_ERRC [ERRC] = "0"
VA grd_cSupressBOMExplosion_EV01 [EV01] = "0"
//
// Bug# 11904723 - PMPN Enhancement - Begin
// Set SuppressProdNBoGenerate variable to
//  1 - To suppress Prod No auto generate but validate if GC not blank
// 2 = Do not process Productio Number at all
If VA frm_cPMPNInstalled_EV01 [EV01] is equal to "1"
And VA grd_cSuppressPNGenerate_EV01 [EV01] is not equal to "2"
     If GC GeneratedProduction NumberShort [PNS] is not equal to <Blank>
     And GC GeneratedProduction NumberShort [PNS] is not equal to <NULL>
     And GC GeneratedProduction NumberShort [PNS] is not equal to "0"
          VA grd_cSuppressPNGenerate_EV01 [EV01] = "1"
     Else
          VA grd_cSuppressPNGenerate_EV01 [EV01] = "0"
     End If
     If VA grd_cProdNoChangedYN_EV01 [EV01] is equal to "1"
     And VA grd_cProdNoGeneratedYN_EV01 [EV01] is not equal to "1"
          GC Production Number Short [PNS] = "0"
     End If
Else
     VA grd_cSuppressPNGenerate_EV01 [EV01] = "2"
End If
// Bug# 11904723 - PMPN Enhancement - End
//
// SAR 8350785 - Pass a flag to EditLine to indicate whether the Kit Selection
// Window (P41351) will be called for the kit line
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And VA grd_EV12_KitProcessed [EV12] is equal to "0"
     VA evt_cKitProcessingRequired_EV1 [EV01] = "1"
Else
     VA evt_cKitProcessingRequired_EV1 [EV01] = "0"
End If
//
If VA frm_InsertGBCalledinSub_EV01 [EV01] is equal to "1"
     Stop Processing
End If
// SAR 7228286
VA evt_mnShortItemNumber_ITM [ITM] = <NULL>
// SAR 8729218
VA evt_cItemRecordFound_EV02 [EV02] = "0"
// SAR 6607954
// Value 1 of grd_cWasBranchBlank_EV01 means the detail branch was blank
// before EditLine call. We use this valuable to tell whether inventory
// commitment preference is activated for the detail line. If this grid
// valuable is 1, then commitment preference is activated for this line and
// sourcing will be done when EditLine is run in add mode.
If GC Business Unit [MCU] is less than or equal to <Blank>
     VA grd_cWasBranchBlank_EV01 [EV01] = "1"
Else
     VA grd_cWasBranchBlank_EV01 [EV01] = "0"
End If
// SAR# 8918535- To Copy correct job Number for Credit Orders and other type
// f Orders.
If VA frm_cCreditMemoExit [EV24] is equal to "1"
     VA evt_mnCreditJobnumber_JOBS [JOBS] = GC CreditJobNumber [JOBS]
Else
     VA evt_mnCreditJobnumber_JOBS [JOBS] = VA frm_mnCreditJobNum_JOBS [JOBS]
End If
VA frm_PreviousCustomerPO_VR01 [VR01] = FC Reference [VR01]
// SAR 5266271
If GC F40UI74 Line Number [LNIX] is not equal to <Blank>
And GC F40UI74 Line Number [LNIX] is not equal to <NULL>
And GC F40UI74 Line Number [LNIX] is not equal to "0"
     VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = GC F40UI74 Line Number [LNIX]
End If
// End SAR 5266271
// SAR 5510106 - Begin ADD
If FI mnProjectNumber [PRJM] is greater than "0"
     GC Project Number [PRJM] = FI mnProjectNumber [PRJM]
End If
// SAR 5510106 - End ADD
// SAR 5216847
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <Blank>
Or VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <NULL>
     // SAR 5953388-Use Initialization function
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// SAR 5953388-Use Set function
SetSuppressVIDAccumSOEL04(B4205101.SetSuppressVIDAccumSOEL04)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     VA frm_cB4502340AccumFlag_EV01 [EV01] -> cValue [EV01]
// End SAR 5216847
// 6897939 - TP implementation
SetELCalledFromSOEL16(B4205101.SetELCalledFromSOEL16)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     "3" -> cValue [EV01]
//
// 7534566 (Begin) - For a Configured Item, Configurator will handle the free
// good, not SOE.
//
If GC Business Unit [MCU] is equal to <Blank>
Or GC Business Unit [MCU] is equal to <NULL>
     VA evt_szBranchPlant_MCU [MCU] = FC Business Unit [MCU]
Else
     VA evt_szBranchPlant_MCU [MCU] = GC Business Unit [MCU]
End If
//
// Bug 11676971 : Passing Cross reference code,An8
VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
     GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
     VA evt_szBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
     <Blank> -> cSymbolidentifier [SYMID]
     VA evt_mnShortItemNumber_ITM [ITM] <- mnShortItemNumber [ITM]
     FC Address Number [AN8] -> mnAddressnumber [AN8]
     "0" -> cReturnPtr [EV01]
     "1" -> cSuppressErrorMsg [EV02]
     "1" -> cCallType [EV01]
     "1" -> cCrossRefMode [MODE]
     SL DateToday -> jdExpirationDate [EXDJ]
// Bug# 11904723 - PMPN Enhancement - Retreive PMPNEnabledYN
GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     VA evt_szBranchPlant_MCU [MCU] -> szBranch [MCU]
     VA evt_mnShortItemNumber_ITM [ITM] -> mnShortItemNumber [ITM]
     VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
     "1" -> cSuppressErrorMessage [EV01]
     "0" -> idF4102Pointer [GENLNG]
     VA grd_cPMPNEnabled_PNYN [PNYN] <- cPMPNEnabledYN [PNYN]
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     If VA frm_cGenerateWO_EV01 [EV01] is equal to or empty <Blank>
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               GC Ln Ty [LNTY] -> szLineType [LNTY]
               VA frm_cGenerateWO_EV01 [EV01] <- cGenerateWorkOrder [GWO]
               "1" -> cSuppressErrorMessage [EV01]
     End If
     //
     // If LOCN or LOT is entered for a non-manufacture kit, skip
     // KitSelectionWindow and hard error will be set in EditLine.
     If VA frm_cGenerateWO_EV01 [EV01] is not equal to("1","Y")
          ! If GC Location  [LOCN] is greater than <Blank>
          ! OrGC Lot Serial Number [LOTN] is greater than <Blank>
               If VA grd_cLocationEntered_YN [YN] is equal to "Y"
               And GC Location  [LOCN] is greater than <Blank>
               Or VA grd_cLotEntered_YN [YN] is equal to "Y"
               And GC Lot Serial Number [LOTN] is greater than <Blank>
                    VA grd_cSupressBOMExplosion_EV01 [EV01] = "1"
                    Disable Control(HC &Kits/Configurator)
               End If
          ! End If
     End If
End If
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     //      SAR 8957881 - Commitments will be done when F4211 Edit Line is
     //      executed upon return from P3210 for configured items.
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
     Or VA grd_ACTI_ActionHidden [ACTI] is equal to "1"
          VA grd_cByPassCommitment_EV09 [EV09] = "1"
     End If
     SetSuppressFreeGoodSOEL01(B4205101.SetSuppressFreeGoodSOEL01)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
          "1" -> cValue [EV01]
End If
// 7534566 (End)
//
If PO cShoppingCartMode [CART] is less than "1"
Or VA grd_cErrorConfigCSS_EV01 [EV01] is not equal to "2"
     Clear Grid Cell Error(FC Grid,  <Current Row>,  <All Columns>)
End If
// SAR 4945140
If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
     GC % Profit Margin [PRMG] = "0"
End If
//  SAR 8150337 - Cancel Comp when Kit CancelQTY = OrderQTY
//
VA evt_cLineCancelled_EV01 [EV01] = "0"
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And GC Next Stat [NXTR] is not equal to "999"
     If GC Quantity Canceled [SOCN] is equal to GC Quantity Ordered [UORG]
     And GC Quantity Shipped [SOQS] is equal to "0"
     And GC Quantity Backordered [SOBK] is equal to "0"
     And GC Quantity Ordered [UORG] is greater than "0"
          Press Button(HC &Cancel Line)
          VA evt_cLineCancelled_EV01 [EV01] = "1"
     End If
End If
//
// If Kit was dirty, due to individual processing or if any of the component
// is past the cutoff status, then display warning "Component Lines past
// cutoff status and shipped will not be cancelled".
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA evt_cLineCancelled_EV01 [EV01] is equal to "1"
     If PO szNonUpdatableStatus [NXT2] is greater than "0"
     And GC Kit Component Dirty Flag [KITDIRTY] is not equal to "1"
     And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
          // Check if any of the kit's component is past the cut-off status
          VerifyKitCompIsPostCutoffStatus(B4208370.VerifyKitCompIsPostCutoffStatus)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompany [KCOO]
               GC Kit Identifier  [KITID] -> mnKitIdentifier [KITID]
               VA grd_cKitCompPostCutoffStatus [EV01] <- cIsKitCompPostCutOff [EV01]
               PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
     End If
     If GC Kit Component Dirty Flag [KITDIRTY] is greater than <Blank>
     Or VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC QuantityCanceled, "42B34")
     End If
End If
//
// *************************************************************************
// SAR#5113442
If VA frm_ProductVariantsModule_MEOW [MEOW] is equal to "1"
     // Bug 11676971 : Passing ITM retrived from Cross Reference
     // Bug 13360450: Passing MCU
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          VA evt_mnShortItemNumber_ITM [ITM] -> mnShortItemNumber [ITM]
          GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
          "1" -> cSuppressErrorMessage [EV01]
          VA evt_szBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
          VA grd_MatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
          VA grd_MatrixSegment1_SEG1 [SEG1] <- szSegment1 [SEG1]
          VA grd_cMatrixControlled123_MIC [MIC] <- cMatrixControlled [MIC]
End If
// *************************************************************************
//     KIT line from P42216 should NOT initialize ALPH27
GetFrmBlktReleaseALPH27(B4205100.GetFrmBlktReleaseALPH27)
     GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
     VA frm_CheckForReleaseBlankt_EV01 [EV01] <- cValue [EV01]
If VA frm_CheckForReleaseBlankt_EV01 [EV01] is less than "3"
     //
     // SAR 7110245 - Begin
     If PO cAutoBlanketRelease [EV24] is not equal to <Blank>
     And SV Engine_Type is not equal to CO WINDOWS_ENGINE
     And VA frm_cBlanketCalled_EV01 [EV01] is not equal to "1"
     And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          If VA frm_CheckForReleaseBlankt_EV01 [EV01] is equal to "1"
               VA frm_CheckForReleaseBlankt_EV01 [EV01] = "0"
               SetFrmBlktReleaseALPH27(B4205100.SetFrmBlktReleaseALPH27)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    VA frm_CheckForReleaseBlankt_EV01 [EV01] -> cValue [EV01]
          End If
     End If
     // SAR 7110245 - End
     // SAR 2027320 - Initialize SO Detail Flag if the line was imported (i.e. Excel)
     If VA grd_ACTI_ActionHidden [ACTI] is equal to <Blank>
     Or VA grd_ACTI_ActionHidden [ACTI] is equal to <NULL>
          If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
          Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
               //
               //   6270626 Save substitute item flag, clear ALPH string only if not ON
               RetrieveStringElement(B4002410.RetrieveStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
                    "5" -> nPosition [INT01]
                    VA evt_NewSubstitute_EV01 [EV01] <- cCharacter [EV01]
               If VA evt_NewSubstitute_EV01 [EV01] is not equal to "1"
                    // SAR 7203097 - Added a condition to reinitialize GC ALPH - SO Detail Flags
                    If VA frm_cMultipleBlanket_EV01 [EV01] is equal to "2"
                    And SV Engine_Type is not equal to CO WINDOWS_ENGINE
                         VA frm_cMultipleBlanket_EV01 [EV01] = "0"
                    Else
                         InitializeSOALPHString(B4205100.InitializeSOALPHString)
                              GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    End If
               End If
               //
          End If
     End If
End If
//
// SAR 6887706 - Set flag 37 for user-entered dates
VA grd_cDatesEnteredFlag37_EV01 [EV01] = "0"
If VA grd_cDeliveryDateEntered_EV01 [EV01] is equal to "1"
And VA grd_cShipDateEntered_EV01 [EV01] is equal to "1"
     VA grd_cDatesEnteredFlag37_EV01 [EV01] = "3"
Else
     If VA grd_cDeliveryDateEntered_EV01 [EV01] is equal to "1"
          VA grd_cDatesEnteredFlag37_EV01 [EV01] = "1"
     End If
     If VA grd_cShipDateEntered_EV01 [EV01] is equal to "1"
          VA grd_cDatesEnteredFlag37_EV01 [EV01] = "2"
     End If
End If
ChangeStringElement(B4002410.ChangeStringElement)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
     "37" -> nPosition [INT01]
     VA grd_cDatesEnteredFlag37_EV01 [EV01] -> cCharacter [EV01]
//
// SAR 7999777
If VA grd_cPickDateEntered_EV01 [EV01] is equal to "1"
     SetPickDateEnteredSOEL22(B4205101.SetPickDateEnteredSOEL22)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
          VA grd_cPickDateEntered_EV01 [EV01] -> cValue [EV01]
End If
If FC Order Number [DOCO] is equal to or empty <Blank>
     If SV Form_ Mode is equal to CO COPY_MODE
     Or SV Form_ Mode is equal to CO ADD_MODE
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "16" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
     End If
End If
// 5648068-Copy Sales Transfer MCU field
If PO cTransferOrderEntry [EV25] is equal to "1"
     GC Business Unit [MCU] = FC Parent Business Unit [MCU1]
     // SAR 8862342 - Disable Linedefault B/P only for Transfer orders
     Disable Control(FC Business Unit [MCU])
     // SAR 8516722 copy RBU in Edit Line
     If GC Ship To Number [SHAN] is less than or equal to <Blank>
          GC Ship To Number [SHAN] = VA frm_AN84_Ship_To [AN84]
     End If
End If
// 5648068
// Transfer Order PO's
// SAR 8254742– Retaining the manual entered Grid value
If PO cTransferOrderEntry [EV25] is equal to "1"
And FC Business Unit 2 [MCU2] is not equal to <Blank>
     // SAR 8369507– If the detail landed cost rule is blank then default it with
     // header Landed cost rule
     If GC Cost Rule [PRP5] is equal to <Blank>
     Or GC Cost Rule [PRP5] is equal to <NULL>
          GC Cost Rule [PRP5] = FC Landed Cost Rule [PRP5]
     End If
     If PO cTurnOffTaxable [EV01] is equal to "1"
          GC Taxable  [TAX1] = "N"
     End If
End If
//
//     If next status >= PO update status, bypass this event.
// SAR# 3648021-  Update Mode Status on Changing Lines
//
// // BUG 11042042 set error 1308 on the Next Status grid column.
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA grd_ACTI_ActionHidden [ACTI] is not equal to "A"
     If PO szNonUpdatableStatus [NXT2] is not equal to <Blank>
     And PO szNonUpdatableStatus [NXT2] is less than or equal to GC Next Stat [NXTR]
     And PO szNonUpdatableStatus [NXT2] is not equal to <NULL>
     And GC Next Stat [NXTR] is less than "900"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC NextStatus, "1308")
          Stop Processing
     End If
End If
//
// Validate Reason Code was entered
//
If GC Revision Reason [RFRV] is greater than <Blank>
     GetUDC(X0005.GetUDC)
          "RFRV" -> szDataDictionaryItem [DTAI]
          "42" -> szSystemCode [SY]
          "RR" -> szRecordTypeCode [RT]
          GC Revision Reason [RFRV] -> szUserDefinedCode [KY]
          UNDEFINED <> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_sz_ErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_sz_ErrorMessage_DTAI [DTAI] is greater than <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RevisionReason, VA frm_sz_ErrorMessage_DTAI)
     Else
          // SAR 7448799
          If BC Revision Reason (F4211.0) [RFRV] is equal to GC Revision Reason [RFRV]
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RevisionReason, "830B")
          End If
     End If
Else
     If VA frm_cRetFromCanAddInfo_EV01 [EV01] is not equal to "1"
     And VA grd_cReasonCodeReq_EV01 [EV01] is equal to "1"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC RevisionReason, "0003")
     End If
End If
//
VA frm_cRetFromCanAddInfo_EV01 [EV01] = "0"
//
//   IF IT IS NOT A KIT COMPONENT LINE THEN EXECUTE CODE
//
GC Agreement Exists [AGRE] = <NULL>
GC Subsitution Exists [SBST] = <NULL>
GC Association Exists [ASSC] = <NULL>
GC Blankets Exists [BLKT] = <NULL>
//
//     Load default values to the appropriate grid columns before call Edit Line
VA frm_ERRC_Error_Code [ERRC] = "0"
//
// If Unit Price and Extended Price are not entered by the user or the user
// deleted the existing values to get the base price make the price override cod
// equal to 'Zero'.
//
// SAR 4256871
If VA frm_cCreditMemoExit [EV24] is not equal to "1"
     If FC Mode (F) [CRRM] is equal to "F"
          // SAR 6021849
          If VA grd_SO08_Price_Adj_Line [SO08] is not equal to "3"
          And VA grd_SO08_Price_Adj_Line [SO08] is not equal to "5"
               // SAR 8532175 - Kit component price displayed
               // SAR 8955603 - Initialize the taxed price override flag to 0
               If GC Kit Master Line No [KTLN] is less than or equal to "0"
                    If VA grd_EV06_Unit_Price_Changed [EV06] is not equal to "1"
                    And VA grd_EV05_Ext_Price_Changed [EV05] is not equal to "1"
                         If GC Foreign Unit Price [FUP] is equal to "0"
                         And GC Foreign Extended Price [FEA] is equal to "0"
                              GC Price Over Cd [PROV] = "0"
                         End If
                         If GC Foreign Taxed Unit Price [TFUP] is equal to "0"
                         And GC Foreign Taxed Extended Price [TFEA] is equal to "0"
                              GC Taxed Price Override Code [TPROV] = "0"
                         End If
                    End If
               End If
          End If
          If GC Foreign Unit Cost [FUC] is equal to "0"
          And VA grd_EV07_Unit_Cost_Changed [EV07] is greater than "1"
          And GC Foreign Extended Cost [FEC] is equal to "0"
          And VA grd_EV08_Ext_Cost_Changed [EV08] is not equal to "1"
               VA grd_CSTO_Cost_Over [CSTO] = "0"
          End If
     Else
          // SAR 6021849
          If VA grd_SO08_Price_Adj_Line [SO08] is not equal to "3"
          And VA grd_SO08_Price_Adj_Line [SO08] is not equal to "5"
               // SAR 8532175 - Kit component price displayed
               // SAR 8955603 - Initialize the taxed price override flag to 0
               If GC Kit Master Line No [KTLN] is less than or equal to "0"
                    If VA grd_EV06_Unit_Price_Changed [EV06] is not equal to "1"
                    And VA grd_EV05_Ext_Price_Changed [EV05] is not equal to "1"
                         If GC Unit Price [UPRC] is equal to "0"
                         And GC Extended Price [AEXP] is equal to "0"
                              GC Price Over Cd [PROV] = "0"
                         End If
                         If GC Taxed Unit Price [TUPRC] is equal to "0"
                         And GC Taxed Extended Price [TAEXP] is equal to "0"
                              GC Taxed Price Override Code [TPROV] = "0"
                         End If
                    End If
               End If
          End If
          If GC Unit Cost [UNCS] is equal to "0"
          And VA grd_EV07_Unit_Cost_Changed [EV07] is not equal to "1"
          And GC Extended Cost [ECST] is equal to "0"
          And VA grd_EV08_Ext_Cost_Changed [EV08] is not equal to "1"
               VA grd_CSTO_Cost_Over [CSTO] = "0"
          End If
     End If
     // SAR 6968012
     If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
          If GC Unit Cost [UNCS] is equal to "0"
          And VA grd_cPurchaseUnitCostChanged [EV01] is not equal to "1"
          And GC Extended Cost [ECST] is equal to "0"
          And VA grd_cPurchaseExtCostChanged [EV02] is not equal to "1"
               VA grd_cPurchaseCostOverride [CSTO] = "0"
          End If
     End If
     //
End If
//
//     If the header data has not been validated, call F4211 Begin Doc to verify
//     the header data.
//
// SAR 1997324 - The BeginDoc call has been moved to the 'Set Focus on Grid'
// event.  These lines should be disabled, but hav been enabled temporarily for
// Shopping Cart functionality.
//
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
Or FI szTOEToBranchPlant [MCU2] is not equal to <Blank>
     VA frm_ACTI_Action_Code [ACTI] = "A"
Else
     VA frm_ACTI_Action_Code [ACTI] = "C"
End If
If VA frm_EV17_Hdr_Work_File [EV17] is not equal to "1"
And VA frm_ACTI_Action_Code [ACTI] is equal to "A"
     VA frm_EV03_Valid_Order_Number [EV03] = "0"
     //
     // Blank out the exchange rate before calling the BeginDoc unless user enter it
     // manully.
     //
     If FC Exchange Rate [CRR] is greater than <Blank>
     And VA frm_cIsExcangeRateEntered_EV01 [EV01] is not equal to "1"
          FC Exchange Rate [CRR] = <NULL>
          VA frm_cIsExcangeRateEntered_EV01 [EV01] = <NULL>
     End If
     //
     // SAR # 1846382
     If SV Form_ Mode is equal to CO COPY_MODE
          // SAR 3011549 - Begin ADD
          If PO cCopyTextOption [EV16] is equal to ("2","3")
               Media Object Structures(GT4201A,  <Default Media Object>,  <Exist>, VA frm_Generic_Text_EV01, FI DocumentOrderInvoiceE, VA frm_ODCT_Original_Order_Type, VA frm_OKCO_Original_Order_Co)
               If VA frm_Generic_Text_EV01 [EV01] is equal to "1"
                    VA frm_cHeaderText_ATXT [ATXT] = "Y"
               End If
          End If
          //
          // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
          // SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
          F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
               FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
               VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
               VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
               VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
               VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
               VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
               "EP4210" -> szCMProgramID [PID]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               FC Order Company [KCOO] <> szOrderCo [KCOO]
               FC Order Number [DOCO] <> mnOrderNo [DOCO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBusinessUnit [MCU]
               VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
               VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
               VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNo [SHAN]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               FC Reference [VR01] <> szReference [VR01]
               VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
               VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
               FC Mode (F) [CRRM] -> cMode [CRRM]
               FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
               FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
               VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
               VA frm_USER_User_ID [USER] <> szUserID [USER]
               FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
               VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
               "1" -> cWKSourceOfData [EV06]
               <Blank> -> cWKProcMode [EV07]
               FI DocumentOrderInvoiceE [DOCO] -> mnSODDocNo [EDOC]
               GC Orig Ord Type [OCTO] -> szSODDocType [EDCT]
               GC OKCO- Doc Co (wf) [OKCO] -> szSODOrderCo [EKCO]
               VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
               VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
               VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
               "1" -> cRetrieveOrderNo [EV02]
               VA evt_Protect_Price_EV01 [EV01] -> cCommitInvInED [EV05]
               FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
               FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
               VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
               FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
               FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
               FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
               FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
               FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
               FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
               VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
          //
     Else
          //
          // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc to retrieve
          // UTP flag value
          // SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
          F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
               FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
               VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
               VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
               VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
               VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
               VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
               "EP4210" -> szCMProgramID [PID]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               FC Order Company [KCOO] <> szOrderCo [KCOO]
               FC Order Number [DOCO] <> mnOrderNo [DOCO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBusinessUnit [MCU]
               VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
               VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
               VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNo [SHAN]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               FC Reference [VR01] <> szReference [VR01]
               VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
               VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
               FC Mode (F) [CRRM] -> cMode [CRRM]
               FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
               FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
               VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
               VA frm_USER_User_ID [USER] <> szUserID [USER]
               FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
               VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
               <Blank> -> cWKSourceOfData [EV06]
               <Blank> -> cWKProcMode [EV07]
               VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
               VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
               VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
               "1" -> cRetrieveOrderNo [EV02]
               VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
               FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
               FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
               VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
               FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
               FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
               FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
               FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
               FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
               FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
               VA frm_cUseTaxedPrices_UTP [UTP] <> cUseTaxedPrices [UTP]
          // The common logic to enable and disable check boxes is present in this
          // hidden button
          Press Button(FC Set Use Taxed Prices After Begin Doc)
          //
     End If
     // SAR 3305580 - load the CSS PO field
     If PO cShoppingCartMode [CART] is not equal to <Blank>
     And PO cShoppingCartMode [CART] is not equal to <NULL>
          // SAR# 5465042-Begin
          If VA frm_PreviousCustomerPO_VR01 [VR01] is not equal to FC Reference [VR01]
               Clear Control Error(FC Reference [VR01])
               // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
               // SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
               F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
                    FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
                    VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
                    "EP4210" -> szCMProgramID [PID]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    FC Business Unit [MCU] <> szBusinessUnit [MCU]
                    VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
                    VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
                    VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
                    FC Address Number [AN8] <> mnAddressNumber [AN8]
                    FC Ship To [SHAN] <> mnShipToNo [SHAN]
                    FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
                    FC Reference [VR01] <> szReference [VR01]
                    VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
                    VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
                    FC Mode (F) [CRRM] -> cMode [CRRM]
                    FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
                    FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
                    VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    VA frm_USER_User_ID [USER] <> szUserID [USER]
                    FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
                    VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
                    <Blank> -> cWKSourceOfData [EV06]
                    <Blank> -> cWKProcMode [EV07]
                    VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
                    VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
                    VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
                    "1" -> cRetrieveOrderNo [EV02]
                    VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
                    FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
                    FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                    FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
                    FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
                    FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
                    FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
                    FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
                    VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
               //
          End If
          // SAR# 5465042-End
          FC Reference [VR01] = FC Reference [VR01]
          VA frm_szPrevCSSCustPO_VR01 [VR01] = FC Reference [VR01]
     End If
     If VA frm_EV03_Valid_Order_Number [EV03] is equal to "1"
          Set Edit Control Error(FC Order Number, "0002")
     Else
          Clear Edit Control Error(FC Order Number [DOCO])
     End If
     If VA frm_ERRC_Error_Code [ERRC] is equal to "2"
          VA frm_EV23_cBeginDocError [EV23] = "1"
     Else
          VA frm_EV17_Hdr_Work_File [EV17] = "1"
          Disable Control(FC Mode (F) [CRRM])
          If FC Exchange Rate [CRR] is equal to "0"
          And VA frm_ERRC_Error_Code [ERRC] is not equal to "1"
          And VA frm_mnTriangulationRateFrom [MATH01] is equal to "0"
          And VA frm_mnTriangulationRateTo [MATH01] is equal to "0"
               FC Mode (F) [CRRM] = "D"
               Press Button(FC Hide/Show Currency (HIDDEN))
               // SAR 3277056 - enable the Order Address exit after Begin Doc has run for CSS
               Enable Control(HC Order Addre&ss)
               // End SAR 3277056
          End If
     End If
End If
//
//     Do not call edit lines if the End Doc function has already been called or
//     the header data is invalid.
//    IF THERE WAS NO ERROR W/ BEGIN DOC
//
// SAR 8953108-Apparel Enhancement
// Check for Apparel Collection Validation Error as well
//
If VA frm_EV19_End_Doc_Called [EV19] is not equal to "1"
And VA frm_EV23_cBeginDocError [EV23] is not equal to "1"
And VA frm_cCollValidationErrors_ERRC [ERRC] is not equal to "1"
     //
     // SAR 7972793 If GC Customer PO has not been populated then default from FC
     If VA grd_RowExitChangeAsynchTrigger [EV01] is not equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
     And GC Reference  [VR01] is equal to <Blank>
     Or GC Reference  [VR01] is equal to <NULL>
          GC Reference  [VR01] = FC Reference [VR01]
     End If
     // Customer PO.
     //     Call the F4211 Edit Line to perform edits on data in the grid row.
     // SAR 5946188
     VA grd_BlanketOrdersFound_EV02 [EV02] = "0"
     //
     // Action must be set to 'A' for SOE lines that have been imported from a
     // spreadsheet
     If VA grd_ACTI_ActionHidden [ACTI] is equal to or empty <Blank>
          VA grd_ACTI_ActionHidden [ACTI] = "A"
     End If
     //
     // For Localizations
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
          VA frm_EV01_NewRecords [EV01] = "1"
     End If
     // Bug 11031555 - To Pass Header VR01 to Detail VR01 when the detail is left
     // blank.
     If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
     And GC Reference  [VR01] is less than or equal to <Blank>
          GC Reference  [VR01] = FC Reference [VR01]
     End If
     //
     //      Default in values from Line Default Tab
     //
     ! If FC Business Unit [MCU] is not equal to <Blank>
     ! And FC Business Unit [MCU] is not equal to <NULL>
     ! And GC Business Unit [MCU] is less than or equal to <Blank>
          // SAR 7624545
          If FC Business Unit [MCU] is not equal to <Blank>
          And FC Business Unit [MCU] is not equal to <NULL>
               // SAR  8345741 – Default from Line defaults only if user has not entered
               // Branch Plant
               If GC Business Unit [MCU] is equal to <Blank>
               Or GC Business Unit [MCU] is equal to <NULL>
                    GC Business Unit [MCU] = FC Business Unit [MCU]
                    // SAR 5390765
                    VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
               End If
               //
          End If
     ! End If
     If FC Requested [DRQJ] is not equal to ""
     And GC Request Date [DRQJ] is less than or equal to ""
          GC Request Date [DRQJ] = FC Requested [DRQJ]
     End If
     If FC Promised Delivery [RSDJ] is not equal to ""
     And GC Promised Delivery [RSDJ] is less than or equal to ""
          GC Promised Delivery [RSDJ] = FC Promised Delivery [RSDJ]
     End If
     If FC Scheduled Pick [PDDJ] is not equal to ""
     And GC Sched Pick [PDDJ] is less than or equal to ""
          GC Sched Pick [PDDJ] = FC Scheduled Pick [PDDJ]
     End If
     If FC Cancel Date [CNDJ] is not equal to ""
     And GC Cancel Date [CNDJ] is less than or equal to ""
          GC Cancel Date [CNDJ] = FC Cancel Date [CNDJ]
     End If
     // SAR 5330594 - sales based on date
     If FC Price Effective [PEFJ] is not equal to Null Date
          If GC Price Effective Date [PEFJ] is equal to Null Date
               GC Price Effective Date [PEFJ] = FC Price Effective [PEFJ]
               VA grd_cBasedonDate_DTBS [DTBS] = "O"
          End If
          //
          // SAR 8953108 - Apparel Enhancement
          // Default the Collection Price Eff Date if Line Default Price Effective Date
          // is blank; also set the SOEL06 flag with "O", so that the date is not
          // overridden by Sales Based on Date preference in Edit Line.
          //
     Else
          If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
               If FC Price Reference Date [C9PRDJ] is not equal to Null Date
                    If GC Price Effective Date [PEFJ] is equal to Null Date
                         GC Price Effective Date [PEFJ] = FC Price Reference Date [C9PRDJ]
                         VA grd_cBasedonDate_DTBS [DTBS] = "O"
                    End If
               End If
          End If
     End If
     //
     If VA grd_cBasedonDate_DTBS [DTBS] is equal to <Blank>
     Or VA grd_cBasedonDate_DTBS [DTBS] is equal to <NULL>
     Or VA grd_cBasedonDate_DTBS [DTBS] is equal to "0"
          VA grd_cBasedonDate_DTBS [DTBS] = "0"
     End If
     // SAR 5953388-Use Set Function
     SetPEFJSourceSOEL06(B4205101.SetPEFJSourceSOEL06)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
          VA grd_cBasedonDate_DTBS [DTBS] -> cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     //
     // =============================================================
     // Prepayment Processing.  When ATS == 05, changes and deletions are not allowed
     // to the sales order line.
     // =============================================================
     If PO cActivatePrepayProcess [EV01] is equal to "1"
          If VA frm_ACTI_Action_Code [ACTI] is equal to "C"
          Or VA frm_ACTI_Action_Code [ACTI] is equal to "D"
               F004201.Open
                    
               If SV File_IO_Status is equal to CO SUCCESS
               Or SV File_IO_Status is equal to CO TABLE_ALREADY_OPEN
                    VA frm_SFXO_szOrderSuffix [SFXO] = "000"
                    VA frm_SEQ_mnSequenceNumber [SEQ] = 0
                    VA frm_POF_szPrepayOrigination [POF] = "01"
                    F004201.FetchSingle  [Index 1: DOCO, DCTO, KCOO +]
                         FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                         FC Order Type [DCTO] = TK Order Type [DCTO]
                         FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                         VA frm_SFXO_szOrderSuffix [SFXO] = TK Order Suffix [SFXO]
                         GC Line Number [LNID] = TK Line Number [LNID]
                         VA frm_SEQ_mnSequenceNumber [SEQ] = TK Sequence Number [SEQ]
                         VA frm_POF_szPrepayOrigination [POF] = TK PrepaymentOriginationFlag [POF]
                         VA frm_ATS_szPrepayTransStatus [ATS] <- TK Prepayment Transaction Status [ATS]
                    If VA frm_ATS_szPrepayTransStatus [ATS] is equal to "05"
                         If GC Next Stat [NXTR] is equal to "999"
                              Set Control Error(FC Grid, "114U")
                         Else
                              Set Control Error(FC Grid, "141P")
                         End If
                         F004201.Close
                              
                         Stop Processing
                         // SAR 3489817 - End ADD
                    End If
               End If
               F004201.Close
                    
          End If
     End If
     //
     If PO cStoreAndForwardMode [SO15] is equal to "1"
     Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Or PO cStoreAndForwardMode [SO15] is equal to "3"
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "15" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
          VA grd_EV12_KitProcessed [EV12] = "1"
     End If
     //
     //
     // SAR 2771132
     If PO cShoppingCartMode [CART] is greater than <Blank>
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "26" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
     End If
     //
     // SAR 3228342
     //
     // 6545212 CRM CSS - server error
     //
     If VA frm_cUseCRMCSS_EV01 [EV01] is not equal to "1"
          If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to <Blank>
          Or VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
          And GC WF Line Number [LNIX] is greater than "0"
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = GC WF Line Number [LNIX]
          End If
     End If
     // *************************************************************************
     // SAR 3315391 - Begin ADD
     // Clients using any of the User Reserved fields MUST load it into the
     // various hidden GC fields provided for each User Reserved field.
     // The following codes will have to be enabled up 3315391 - End ADD.
     // *************************************************************************
     ! If GC User Code [URCD] is greater than <Blank>
     ! OrGC User Date [URDT] is greater than Null Date
     ! OrGC User Amount [URAT] is greater than "0"
     ! OrGC User Number [URAB] is greater than "0"
     ! OrGC User Reference [URRF] is greater than <Blank>
          ! If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
               ! VA frm_LNIX_Prev_WF_Line_Num [LNIX] = [VA frm_LNIX_Prev_WF_Line_Num [LNIX]]+1
               ! VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = VA frm_LNIX_Prev_WF_Line_Num [LNIX]
          ! End If
          ! F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
          !      VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
          !      FI Jobnumber [JOBS] <> mnJobNo [JOBS]
          !      VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnWFLineNo [LNIX]
          !      FC Order Company [KCOO] <> szKeyCo [KCOO]
          !      FC Order Number [DOCO] <> mnOrderNo [DOCO]
          !      FC Order Type [DCTO] <> szOrderType [DCTO]
          !      GC Line Number [LNID] <> mnLineNo [LNID]
          !      UNDEFINED <> jdOriginalPromisedDate [OPDJ]
          !      UNDEFINED <> jdPromisedPickDate [PPDJ]
          !      VA frm_szNULLValue [DCTO] <> szThruGrade [THGD]
          !      UNDEFINED <> mnThruPotency [THRP]
          !      VA frm_szNULLValue [DCTO] <> szFromGrade [FRGD]
          !      UNDEFINED <> mnFromPotency [FRMP]
          !      VA frm_szNULLValue [DCTO] <> szSalesReportingCode1 [SRP1]
          !      VA frm_szNULLValue [DCTO] <> szSalesReportingCode2 [SRP2]
          !      VA frm_szNULLValue [DCTO] <> szSalesReportingCode3 [SRP3]
          !      VA frm_szNULLValue [DCTO] <> szSalesReportingCode4 [SRP4]
          !      VA frm_szNULLValue [DCTO] <> szSalesReportingCode5 [SRP5]
          !      VA frm_szNULLValue [DCTO] <> szPurchasingReportCode1 [PRP1]
          !      VA frm_szNULLValue [DCTO] <> szPurchasingReportCode2 [PRP2]
          !      VA frm_szNULLValue [DCTO] <> szPurchasingReportCode3 [PRP3]
          !      VA frm_szNULLValue [DCTO] <> szPurchasingReportCode4 [PRP4]
          !      VA frm_szNULLValue [DCTO] <> szPurchasingReportCode5 [PRP5]
          !      UNDEFINED <> szPaymentTerms [PTC]
          !      VA frm_cNULLValue [EV01] <> cBasedonDate [DTBS]
          !      UNDEFINED <> mnDiscountTrade [TRDC]
          !      VA frm_szNULLValue [DCTO] <> szPricingCategory [PRGR]
          !      UNDEFINED <> mnDiscountCash [CADC]
          !      VA frm_szNULLValue [DCTO] <> szCompanyKey [KCO]
          !      UNDEFINED <> mnInvoiceNo [DOC]
          !      VA frm_szNULLValue [DCTO] <> szDocumentType [DCT]
          !      UNDEFINED <> szTaxArea [TXA1]
          !      UNDEFINED <> szTaxExplanationCode [EXR1]
          !      VA frm_cNULLValue [EV01] <> cPriorityProcessing [PRIO]
          !      VA frm_cNULLValue [EV01] <> cBackordersAllowedYN [BACK]
          !      VA frm_cNULLValue [EV01] <> cSubstitutesAllowedYN [SBAL]
          !      VA frm_szNULLValue [DCTO] <> szNatureOfTransaction [NTR]
          !      UNDEFINED <> szRouteCode [ROUT]
          !      UNDEFINED <> szStopCode [STOP]
          !      UNDEFINED <> szZoneNumber [ZON]
          !      UNDEFINED <> cApplyFreightYN [AFT]
          !      UNDEFINED <> szFreightHandlingCode [FRTH]
          !      VA frm_szNULLValue [DCTO] <> szShippingCommodityClass [SHCM]
          !      VA frm_szNULLValue [DCTO] <> szShippingConditionsCode [SHCN]
          !      VA frm_szNULLValue [DCTO] <> szSerialNumberLot [SERN]
          !      VA frm_szNULLValue [DCTO] <> szRepriceBasketPriceCat [RPRC]
          !      VA frm_szNULLValue [DCTO] <> szOrderRepriceCategory [ORPR]
          !      VA frm_szNULLValue [DCTO] <> szGlClass [GLC]
          !      VA frm_cNULLValue [EV01] <> cApplyCommissionYN [ACOM]
          !      VA frm_szNULLValue [DCTO] <> szReasonCode [RCD]
          !      VA frm_szNULLValue [DCTO] <> szUnitOfMeasureGrossWt [GWUM]
          !      VA frm_szNULLValue [DCTO] <> szSubledger [SBL]
          !      VA frm_cNULLValue [EV01] <> cSubledgerType [SBLT]
          !      VA frm_szNULLValue [DCTO] <> szCodeLocationTaxStat [LCOD]
          !      VA frm_cNULLValue [EV01] <> cWoOrderFreezeCode [UNCD]
          !      VA frm_cNULLValue [EV01] <> cCorrespondenceMethod [CRMD]
          !      GC User Code [URCD] <> szUserReservedCode [URCD]
          !      GC User Date [URDT] <> jdUserReservedDate [URDT]
          !      GC User Amount [URAT] <> mnUserReservedAmount [URAT]
          !      GC User Number [URAB] <> mnUserReservedNumber [URAB]
          !      GC User Reference [URRF] <> szUserReservedReference [URRF]
          !      VA frm_szNULLValue [DCTO] <> szRateCodeFrieghtMisc [FRAT]
          !      UNDEFINED <> jdDateInvoice [IVD]
          !      UNDEFINED <> cUseWorkfile_WFOC [WFOC]
          !      UNDEFINED <> cGenericChar1_EV01 [EV01]
          !      UNDEFINED <> cGenericChar2_EV02 [EV02]
          !      UNDEFINED <> szGenericString1_DL01 [DL01]
          !      UNDEFINED <> szGenericSting2_DL02 [DL02]
          !      UNDEFINED <> mnGenericMathNumeric1_MATH01 [MATH01]
          !      UNDEFINED <> mnGenericMathNumeric2_MATH02 [MATH02]
          !      VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF_EV01 [EV01]
          !      UNDEFINED <> mnProcessID [PEID]
          !      UNDEFINED <> mnTransactionID [TCID]
          !      UNDEFINED <> cKitConfigWindowOpened [FFU2]
          !      UNDEFINED <> mnShipmentNumber [SHPN]
          !      UNDEFINED <> cCrossDockFlagYN [XDCK]
          !      UNDEFINED <> mnCrossDockingPriority [XPTY]
          !      UNDEFINED <> mnCrossDockOrderNumber [XORN]
          !      UNDEFINED <> szCrossDockOrderType [XCTO]
          !      UNDEFINED <> szCrossDockOrderCompany [XKCO]
          !      UNDEFINED <> szCrossDockOrderSuffix [XSFX]
          !      UNDEFINED <> mnCrossDockLineNumber [XLLN]
          !      UNDEFINED <> szPullSignal [PSIG]
          !      UNDEFINED <> jdDateRelease [RLDJ]
          !      UNDEFINED <> mnTimeRelease [RLTM]
          !      UNDEFINED <> mnDemandUniqueKey [DEID]
          !      UNDEFINED <> mnBuyerNumber [ANBY]
          !      UNDEFINED <> szSOEMBFInternalFlags [SOEF]
          !      UNDEFINED <> cOPPartialLineShipmentAllowed [OPLL]
          !      UNDEFINED <> cOPBackorderAllowed [OPBA]
          !      UNDEFINED <> cOPSubstituteAllowed [OPSS]
          !      UNDEFINED <> szOPMultiSourceGroup [OPMG]
          !      UNDEFINED <> szOPShippingGroup [OPSG]
          !      UNDEFINED <> cOPPromiseLineYN [OPYN]
          !      UNDEFINED Could not find member in DSTR
          ! GC Source of Data [EV17] = "7"
     ! End If
     // SAR 3315391 - End ADD
     //
     // SAR 3982716-Begin,
     // When this is Kit/Config Componet Line and SOE is enterred
     // through Header First and Load Header to Detail PO is on. Call B4201280 to see
     // if Parent Kit/Config Window Opened, if opened  then suppress write to EditLin
     // Again.
     //
     // SAr 7835529 Modified the if condition and replaced PO HeaderORDtail with
     // EV17_Hdr_Work_File
     If SV Form_ Mode is equal to CO UPDATE_MODE
     And GC Kit Master Line No [KTLN] is greater than "0"
     And VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
     And PO cLoadHeaderToDetail [EV18] is equal to "1"
          // When RKIT is greater than 0, it is a Configurator Component
          If GC Related Kit Cpnt [RKIT] is greater than "0"
               // 4478714
               GetSalesOrderDetailFromCache(B4201280.GetSalesOrderDetailFromCache)
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    UNDEFINED <> mnLineNumberXREF [LNIX]
                    GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    GC Order Number [DOCO] -> mnDocumentOrderInvoice [DOCO]
                    GC Or Ty [DCTO] -> szOrderType [DCTO]
                    GC Related Kit Cpnt [RKIT] -> mnLineNumber [LNID]
                    UNDEFINED <> jdDateOriginalPromisde [OPDJ]
                    UNDEFINED <> jdDatePromisedPickJu [PPDJ]
                    UNDEFINED <> szThruGrade [THGD]
                    UNDEFINED <> mnThruPotency [THRP]
                    UNDEFINED <> szFromGrade [FRGD]
                    UNDEFINED <> mnFromPotency [FRMP]
                    UNDEFINED <> szCostCenterHeader [EMCU]
                    UNDEFINED <> szSalesReportingCode1 [SRP1]
                    UNDEFINED <> szSalesReportingCode2 [SRP2]
                    UNDEFINED <> szSalesReportingCode3 [SRP3]
                    UNDEFINED <> szSalesReportingCode4 [SRP4]
                    UNDEFINED <> szSalesReportingCode5 [SRP5]
                    UNDEFINED <> szPurchasingReportCode1 [PRP1]
                    UNDEFINED <> szPurchasingReportCode2 [PRP2]
                    UNDEFINED <> szPurchasingReportCode3 [PRP3]
                    UNDEFINED <> szPurchasingReportCode4 [PRP4]
                    UNDEFINED <> szPurchasingReportCode5 [PRP5]
                    UNDEFINED <> szPrintMessage [INMG]
                    UNDEFINED <> szPaymentTermsCode [PTC]
                    UNDEFINED <> cBasedonDate [DTBS]
                    UNDEFINED <> cPaymentInstrumentA [RYIN]
                    UNDEFINED <> mnDiscountTrade [TRDC]
                    UNDEFINED <> szPricingCategory [PRGR]
                    UNDEFINED <> mnDiscountCash [CADC]
                    UNDEFINED <> szCompanyKey [KCO]
                    UNDEFINED <> mnDocVoucherInvoiceE [DOC]
                    UNDEFINED <> szDocumentType [DCT]
                    UNDEFINED <> szPromationNumber [PRMO]
                    UNDEFINED <> mnDraftNumber [DFTN]
                    UNDEFINED <> szTaxArea1 [TXA1]
                    UNDEFINED <> szTaxExplanationCode [EXR1]
                    UNDEFINED <> cPriorityProcessing [PRIO]
                    UNDEFINED <> cBackordersAllowedYN [BACK]
                    UNDEFINED <> cSubstitutesAllowedYN [SBAL]
                    UNDEFINED <> szLineofBusiness [LOB]
                    UNDEFINED <> szEndUse [EUSE]
                    UNDEFINED <> szDutyStatus [DTYS]
                    UNDEFINED <> szCommodityCode [CDCD]
                    UNDEFINED <> szNatureOfTransaction [NTR]
                    UNDEFINED <> mnBuyerNumber [ANBY]
                    UNDEFINED <> mnCarrier [CARS]
                    UNDEFINED <> szModeOfTransport [MOT]
                    UNDEFINED <> szConditionsOfTransport [COT]
                    UNDEFINED <> szRouteCode [ROUT]
                    UNDEFINED <> szStopCode [STOP]
                    UNDEFINED <> szZoneNumber [ZON]
                    UNDEFINED <> cApplyFreightYN [AFT]
                    UNDEFINED <> szFreightHandlingCode [FRTH]
                    UNDEFINED <> cFreightCalculatedYN [FRTC]
                    UNDEFINED <> szShippingCommodityClass [SHCM]
                    UNDEFINED <> szShippingConditionsCode [SHCN]
                    UNDEFINED <> szSerialNumberLot [SERN]
                    UNDEFINED <> szGlClass [GLC]
                    UNDEFINED <> szLineStatus [STTS]
                    UNDEFINED <> mnSalespersonCommission1 [SLCM]
                    UNDEFINED <> mnSalesperson1 [SLSM]
                    UNDEFINED <> mnSalespersonCommission2 [SLC2]
                    UNDEFINED <> mnSalesperson2 [SLM2]
                    UNDEFINED <> cApplyCommission [ACOM]
                    UNDEFINED <> szReasonCode [RCD]
                    UNDEFINED <> szUnitOfMeasureGrossWt [GWUM]
                    UNDEFINED <> szPurchasingCostCenter [OMCU]
                    UNDEFINED <> szLedgerType [LT]
                    UNDEFINED <> szSubledger [SBL]
                    UNDEFINED <> cSubledgerType [SBLT]
                    UNDEFINED <> szCodeLocationTaxStat [LCOD]
                    UNDEFINED <> cStatusInWarehouse [SWMS]
                    UNDEFINED <> cWoOrderFreezeCode [UNCD]
                    UNDEFINED <> cCorrespondenceMethod [CRMD]
                    UNDEFINED <> szUserReservedCode [URCD]
                    UNDEFINED <> jdUserReservedDate [URDT]
                    UNDEFINED <> mnUserReservedAmount [URAT]
                    UNDEFINED <> mnUserReservedNumber [URAB]
                    UNDEFINED <> szUserReservedReference [URRF]
                    VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV01]
                    UNDEFINED <> szRateCodeFrieghtMisc [FRAT]
                    VA evt_cKitConfigWinOpened_EV01 [EV01] <- cKitConfigWindowOpened [FFU2]
                    "2" -> nCacheIndexID [INT01]
                    UNDEFINED <> szPromotionID [PMTN]
                    UNDEFINED <> mnProjectNumber [PRJM]
                    UNDEFINED <> cOPPartialShipLineItems [OPLL]
                    UNDEFINED <> cOPAllowSubstitutes [OPSS]
                    UNDEFINED <> cOPAllowBackorders [OPBA]
                    UNDEFINED <> szOPMultiSourceGroup [OPMG]
                    UNDEFINED <> szOPShippingGroup [OPSG]
                    UNDEFINED <> cOPPromiseLineYN [OPYN]
                    UNDEFINED <> cOPAllowMultiSource [OPMS]
                    UNDEFINED <> cFoundRecdInF42UI12 [EV01]
                    UNDEFINED <> mnDemandUniqueKey [DEID]
                    UNDEFINED <> szPullSignal [PSIG]
                    UNDEFINED <> jdDateRelease [RLDJ]
                    UNDEFINED <> mnTimeRelease [RLTM]
          Else
               // 4478714
               GetSalesOrderDetailFromCache(B4201280.GetSalesOrderDetailFromCache)
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                    UNDEFINED <> mnLineNumberXREF [LNIX]
                    GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    GC Order Number [DOCO] -> mnDocumentOrderInvoice [DOCO]
                    GC Or Ty [DCTO] -> szOrderType [DCTO]
                    GC Kit Master Line No [KTLN] -> mnLineNumber [LNID]
                    UNDEFINED <> jdDateOriginalPromisde [OPDJ]
                    UNDEFINED <> jdDatePromisedPickJu [PPDJ]
                    UNDEFINED <> szThruGrade [THGD]
                    UNDEFINED <> mnThruPotency [THRP]
                    UNDEFINED <> szFromGrade [FRGD]
                    UNDEFINED <> mnFromPotency [FRMP]
                    UNDEFINED <> szCostCenterHeader [EMCU]
                    UNDEFINED <> szSalesReportingCode1 [SRP1]
                    UNDEFINED <> szSalesReportingCode2 [SRP2]
                    UNDEFINED <> szSalesReportingCode3 [SRP3]
                    UNDEFINED <> szSalesReportingCode4 [SRP4]
                    UNDEFINED <> szSalesReportingCode5 [SRP5]
                    UNDEFINED <> szPurchasingReportCode1 [PRP1]
                    UNDEFINED <> szPurchasingReportCode2 [PRP2]
                    UNDEFINED <> szPurchasingReportCode3 [PRP3]
                    UNDEFINED <> szPurchasingReportCode4 [PRP4]
                    UNDEFINED <> szPurchasingReportCode5 [PRP5]
                    UNDEFINED <> szPrintMessage [INMG]
                    UNDEFINED <> szPaymentTermsCode [PTC]
                    UNDEFINED <> cBasedonDate [DTBS]
                    UNDEFINED <> cPaymentInstrumentA [RYIN]
                    UNDEFINED <> mnDiscountTrade [TRDC]
                    UNDEFINED <> szPricingCategory [PRGR]
                    UNDEFINED <> mnDiscountCash [CADC]
                    UNDEFINED <> szCompanyKey [KCO]
                    UNDEFINED <> mnDocVoucherInvoiceE [DOC]
                    UNDEFINED <> szDocumentType [DCT]
                    UNDEFINED <> szPromationNumber [PRMO]
                    UNDEFINED <> mnDraftNumber [DFTN]
                    UNDEFINED <> szTaxArea1 [TXA1]
                    UNDEFINED <> szTaxExplanationCode [EXR1]
                    UNDEFINED <> cPriorityProcessing [PRIO]
                    UNDEFINED <> cBackordersAllowedYN [BACK]
                    UNDEFINED <> cSubstitutesAllowedYN [SBAL]
                    UNDEFINED <> szLineofBusiness [LOB]
                    UNDEFINED <> szEndUse [EUSE]
                    UNDEFINED <> szDutyStatus [DTYS]
                    UNDEFINED <> szCommodityCode [CDCD]
                    UNDEFINED <> szNatureOfTransaction [NTR]
                    UNDEFINED <> mnBuyerNumber [ANBY]
                    UNDEFINED <> mnCarrier [CARS]
                    UNDEFINED <> szModeOfTransport [MOT]
                    UNDEFINED <> szConditionsOfTransport [COT]
                    UNDEFINED <> szRouteCode [ROUT]
                    UNDEFINED <> szStopCode [STOP]
                    UNDEFINED <> szZoneNumber [ZON]
                    UNDEFINED <> cApplyFreightYN [AFT]
                    UNDEFINED <> szFreightHandlingCode [FRTH]
                    UNDEFINED <> cFreightCalculatedYN [FRTC]
                    UNDEFINED <> szShippingCommodityClass [SHCM]
                    UNDEFINED <> szShippingConditionsCode [SHCN]
                    UNDEFINED <> szSerialNumberLot [SERN]
                    UNDEFINED <> szGlClass [GLC]
                    UNDEFINED <> szLineStatus [STTS]
                    UNDEFINED <> mnSalespersonCommission1 [SLCM]
                    UNDEFINED <> mnSalesperson1 [SLSM]
                    UNDEFINED <> mnSalespersonCommission2 [SLC2]
                    UNDEFINED <> mnSalesperson2 [SLM2]
                    UNDEFINED <> cApplyCommission [ACOM]
                    UNDEFINED <> szReasonCode [RCD]
                    UNDEFINED <> szUnitOfMeasureGrossWt [GWUM]
                    UNDEFINED <> szPurchasingCostCenter [OMCU]
                    UNDEFINED <> szLedgerType [LT]
                    UNDEFINED <> szSubledger [SBL]
                    UNDEFINED <> cSubledgerType [SBLT]
                    UNDEFINED <> szCodeLocationTaxStat [LCOD]
                    UNDEFINED <> cStatusInWarehouse [SWMS]
                    UNDEFINED <> cWoOrderFreezeCode [UNCD]
                    UNDEFINED <> cCorrespondenceMethod [CRMD]
                    UNDEFINED <> szUserReservedCode [URCD]
                    UNDEFINED <> jdUserReservedDate [URDT]
                    UNDEFINED <> mnUserReservedAmount [URAT]
                    UNDEFINED <> mnUserReservedNumber [URAB]
                    UNDEFINED <> szUserReservedReference [URRF]
                    VA frm_EV22_cCacheOn [EV22] -> cCMUseWorkFiles [EV01]
                    UNDEFINED <> szRateCodeFrieghtMisc [FRAT]
                    VA evt_cKitConfigWinOpened_EV01 [EV01] <- cKitConfigWindowOpened [FFU2]
                    "2" -> nCacheIndexID [INT01]
                    UNDEFINED <> szPromotionID [PMTN]
                    UNDEFINED <> mnProjectNumber [PRJM]
                    UNDEFINED <> cOPPartialShipLineItems [OPLL]
                    UNDEFINED <> cOPAllowSubstitutes [OPSS]
                    UNDEFINED <> cOPAllowBackorders [OPBA]
                    UNDEFINED <> szOPMultiSourceGroup [OPMG]
                    UNDEFINED <> szOPShippingGroup [OPSG]
                    UNDEFINED <> cOPPromiseLineYN [OPYN]
                    UNDEFINED <> cOPAllowMultiSource [OPMS]
                    UNDEFINED <> cFoundRecdInF42UI12 [EV01]
                    UNDEFINED <> mnDemandUniqueKey [DEID]
                    UNDEFINED <> szPullSignal [PSIG]
                    UNDEFINED <> jdDateRelease [RLDJ]
                    UNDEFINED <> mnTimeRelease [RLTM]
          End If
          //
          // If the kit/config window has been opened, do not process the line again
          If VA evt_cKitConfigWinOpened_EV01 [EV01] is equal to "1"
               Stop Processing
          End If
     End If
     // SAR 3982716-End
     //
     // SAR 4155042-Begin
     VA frm_LastLineNumOnAsynch_LNIX [LNIX] = VA frm_LNIX_Prev_WF_Line_Num [LNIX]
     // SAR 4155042-End
     //
     // SAR 4394342
     If SV Form_ Mode is equal to CO ADD_MODE
     And VA grd_cCalledFromP42216 [EV01] is equal to "1"
          GC Source of Data [EV17] = "1"
          ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
               GC Original Order No [OORN] -> szInputString [AA15]
               VA grd_SODOrderNumber [DOCO] <- mnOutputMathNumeric [MATH01]
               UNDEFINED <- cReturnedErrorCode [ERR]
          VA grd_SODOrderCompany [KCOO] = GC OKCO- Doc Co (wf) [OKCO]
          VA grd_SODOrderType [DCTO] = GC Orig Ord Type [OCTO]
          VA grd_SODLineNumber [LNID] = GC Original Line Number [OGNO]
     Else
          VA grd_SODOrderNumber [DOCO] = <NULL>
          VA grd_SODOrderCompany [KCOO] = <NULL>
          VA grd_SODOrderType [DCTO] = <NULL>
          VA grd_SODLineNumber [LNID] = <NULL>
     End If
     //
     // SAR 5830290
     //
     // SAR 4912752 - Storing Actual Input Quantity
     VA evt_mn_ActualQtyEntered_UORG [UORG] = GC Quantity Ordered [UORG]
     // ***********
     // Sar 5318481, we need to pass in a flag to indicating this is a credit memo
     // line from history to EL, but only the very first time.
     // SAR 6935659's Dup- Unit price with credit memo. Deleted AND condition.
     If GC cGetFromHistory [EV01] is equal to "1"
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "32" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
     Else
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "32" -> nPosition [INT01]
               "0" -> cCharacter [EV01]
     End If
     // Sar 5318481 End
     // **********
     If VA grd_CSTO_Cost_Over [CSTO] is equal to <Blank>
     Or VA grd_CSTO_Cost_Over [CSTO] is equal to <NULL>
          If GC cGetFromHistory [EV01] is equal to "1"
          And GC Price Over Cd [PROV] is equal to "1"
               VA grd_CSTO_Cost_Over [CSTO] = "1"
          End If
     End If
     //
     If SV Form_ Mode is equal to CO COPY_MODE
          //
          // SAR 7201690 Begin
          If GC Request Date [DRQJ] is equal to Null Date
               GC Request Date [DRQJ] = [FC Order Date [TRDJ]]
          End If
          //
          // SAR 8955607 - In Copy mode, if the UTP is changed,  make sure Unit Price is
          // not Zero if the Order is Dometic or Foreign Unit Price is not Zero if the
          // Order is Foreign before setting Price Override Code. Aso, Do not set PROV
          // for CFG Parent/Components.
          //
          If VA frm_cUseTaxedPrices_UTP [UTP] is not equal to VA frm_cOrigUseTaxedPrices_UTP [UTP]
               If VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
               And GC Related Kit Cpnt [RKIT] is less than or equal to "0"
                    If FC Mode (F) [CRRM] is equal to "D"
                    And GC Unit Price [UPRC] is not equal to "0"
                    Or FC Mode (F) [CRRM] is equal to "F"
                    And GC Foreign Unit Price [FUP] is not equal to "0"
                         GC Price Over Cd [PROV] = "1"
                         GC Taxed Price Override Code [TPROV] = "0"
                    End If
               End If
          End If
          //
          // SAR 7201690 End
          // SAR # 2591115 - Pass Line Number Increment and Parent Line Number
          // SAR#2126221-Pass in GC Source of Data instead of hardcoding '1'
          // ***********************************************************************
          // SAR 3011549 - Begin ADD
          // ***********************************************************************
          If PO cCopyTextOption [EV16] is not equal to "1"
          And PO cCopyTextOption [EV16] is not equal to "2"
               // SAR 6368922 Begin
               GC Associated Text [ATXT] = "N"
               // SAR 6368922 End
          End If
          // SAR 3011549 - End ADD
          // ***********************************************************************
          // SAR 3011549 - Begin/End CHANGE
          // Associated Text flag will not be passed when calling Edit Line.
          // SAR 2147209 - Begin/End CHANGE
          // Location will now be passed both ways so that the BSFN can get
          // the Display Format Location and be shown on the grid line.
          // SAR 3406866, Pass in/out PEID and TCID
          // ***********************************************************************
          // SAR 4222621- pass Item Number and Short Item Number both directions to allow
          // the MBF to be called with short item number and return all other item numbers
          // SAR 6968012
          If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
               If FI Jobnumber [JOBS] is equal to <Blank>
               Or FI Jobnumber [JOBS] is equal to <NULL>
               Or FI Jobnumber [JOBS] is equal to "0"
                    GetNextJobNumber(B3202190.GetNextJobNumber)
                         FI Jobnumber [JOBS] <- mnJobNumber [JOBS]
               End If
               If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to <Blank>
               Or VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to <NULL>
               Or VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
                    GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
                    // SAR 7485477
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
               End If
               ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                    VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                    GC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    GC Or Ty [DCTO] -> szOrderType [DCTO]
                    GC Order Co [KCOO] -> szOrderCompany [KCOO]
                    GC To Curr [CRDC] -> szPOCurrencyCode [CRDC]
                    GC PU UM [UOM3] -> szPOUnitOfMeasure [UOM3]
                    GC Unit Cost [UNCS] -> mnPOUnitCost [UNCS]
                    GC Extended Cost [ECST] -> mnPOExtendedCost [ECST]
                    GC Exchange Rate [CRRD] -> mnPOExchangeRate [CRRD]
                    VA grd_cPurchaseCostOverride [CSTO] -> cPOCostOverride [EV01]
                    "4" -> cCacheActionCode [EV02]
          End If
          //
          // SAR 4730705 - changed the form variable frm_MATH02_Num_Agreements to
          // grid variable grd_MATH02_Num_Agreements for agreements found
          // SAR 5216847 - pass in/out SOEF
          // SAR 5242682 - pass PMTN, PRJM
          // SAR 5266271 - pass in/out override and list prices
          // SAR 5330594 - sales based on date: pass in out GC price effective date
          // SAR 5308881 - pass in out deliver date - Date Sensitive Customer Sets
          // SAR 5413648 - pass APUM in/out of edit line
          //
          // SAR 5192654 - Extended Price Rounding
          If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
               // SAR 8955603 - Also get currency info for taxed extended prices and extended
               // tax amounts.
               DecimalsTriggerGetbyCRDCCRCD(B1100008.DecimalsTriggerGetbyCRDCCRCD)
                    FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                    FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                    GC Extended Price [AEXP] <> mnDomesticAmount01 [AN01]
                    GC Extended Cost [ECST] <> mnDomesticAmount02 [AN02]
                    FC OTOT: Order Total Display [TOT1] <> mnDomesticAmount03 [AN03]
                    GC Taxed Extended Price [TAEXP] <> mnDomesticAmount04 [AN04]
                    GC Extended Tax Amount [ETA] <> mnDomesticAmount05 [AN05]
                    GC Foreign Extended Price [FEA] <> mnForeignAmount01 [AN16]
                    GC Foreign Extended Cost [FEC] <> mnForeignAmount02 [AN17]
                    FC FAP-Foreign Total Display [TOT2] <> mnForeignAmount03 [AN18]
                    GC Foreign Taxed Extended Price [TFEA] <> mnForeignAmount04 [AN19]
                    GC Foreign Extended Tax Amount [FETA] <> mnForeignAmount05 [AN20]
          End If
          // SAR 5192654 - End
          // SAR 5098650 - Return Lot Number and assign to Grid Coulmn
          // SAR 5946188
          // SAR 6386961 - Pass Release Number
          // SAR 6368922 - Pass GC Associated Text
          // SAR 6666559 - Pass in revenue Business Unit
          // SAR 7485477
          // SAR 7538276 - commented this line.
          ! VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = [VA frm_LNIX_Prev_WF_Line_Num [LNIX]]+1
          // SAR 74977777 - Get the RelatedCompany_RKCO, szRelatedOrderType_RCTO and
          // szRelatedLineNumber_RLLN as we are doing in the rest of EditLine calls.
          // SAR 7538276 - passed GC Line Number to mnLineNo in the edit line
          // instead of   VA grd_mnF42UI11WFLineNumber_LNIX
          //
          // SAR 7812378  - Pass Customer PO
          // SAR 7972793 - Pass GC Customer PO instead of FC Customer PO
          // SAR 7970931 - Passed the variable VA grd_szRelatedLineNumber_RLLN
          // bidirectionally to EditLine, so the Line number is retained correctly in
          // Copy Mode
          // SAR 8688487 - To populate correct order type in OT in copy mode
          If PO cTransferOrderEntry [EV25] is equal to "1"
          And FC Order Type [DCIN] is not equal to <Blank>
               VA grd_szRelatedOrderType_RCTO [RCTO] = FC Order Type [DCIN]
          End If
          // SAR 8955602 - Passed new tax variables (GC values) to Edit Line function
          // Editt Line commits the Unit Tax Price values to F4211TX table
          // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
          // Production Short Number and SupressProdNoGenerate
          F4211FSEditLine(B4200310.F4211FSEditLine)
               FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
               VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
               VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
               VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
               VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
               VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
               VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
               FC Order Company [KCOO] <> szOrderCo [KCOO]
               FC Order Number [DOCO] <> mnOrderNo [DOCO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               GC Line Number [LNID] <> mnLineNo [LNID]
               GC Business Unit [MCU] <> szBusinessUnit [MCU]
               GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
               GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
               GC Sched Pick [PDDJ] <> jdPromisedDate [PDDJ]
               GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
               GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
               GC Item Number [UITM] <> szItemNo [UITM]
               GC Location  [LOCN] <> szLocation [LOCN]
               GC Lot Serial Number [LOTN] <> szLotNo [LOTN]
               GC Description  [DSC1] <> szDescription1 [DSC1]
               GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
               GC Ln Ty [LNTY] <> szLineType [LNTY]
               GC Last Stat [LTTR] <> szLastStatus [LTTR]
               GC Next Stat [NXTR] <> szNextStatus [NXTR]
               GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
               GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
               GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
               GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
               GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
               GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
               GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
               GC Extended Cost [ECST] <> mnExtendedCost [ECST]
               GC Print Message [INMG] <> szPrintMesg [INMG]
               GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
               GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
               GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
               GC Associated Text [ATXT] <> cAssociatedText [ATXT]
               GC UM  [UOM] <> szTransactionUOM [UOM]
               GC PR UM [UOM4] <> szPricingUOM [UOM4]
               GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
               GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
               GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
               GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
               GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
               GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
               GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
               "EP4210" -> szCMProgramID [JPID]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
               GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
               GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
               GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
               GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
               GC Price Over Cd [PROV] <> cOverridePrice [PROV]
               VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
               VA frm_USER_User_ID [USER] <> szUserID [USER]
               VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
               FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
               FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
               VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
               VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
               VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
               GC Source of Data [EV17] -> cWKSourceOfData [EV06]
               PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
               VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
               VA grd_STKT_Stocking_Type [STKT] <> cStockingType [STKT]
               GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
               GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
               GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
               GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
               GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
               GC Cost Rule [PRP5] <> szLandedCost [PRP5]
               VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
               GC Short Item No [ITM] <> mnShortItemNo [ITM]
               VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
               GC Original Line Number [OGNO] -> mnSODLineNo [EDLN]
               VA grd_AREV_Rev_Lev [AREV] <> mnPriceAdjRevLevel [AREV]
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
               FI DocumentOrderInvoiceE [DOCO] -> mnSODDocNo [EDOC]
               GC Orig Ord Type [OCTO] -> szSODDocType [EDCT]
               GC OKCO- Doc Co (wf) [OKCO] -> szSODOrderCo [EKCO]
               FC Business Unit 2 [MCU2] <> szTransferOrderToBranch [TMCU]
               VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
               VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
               FC Order Number [DOC2] <> mnSODWFLineNo [DOC]
               FC Order Type [DCIN] <> szGeneric2CharString [DCT]
               FC Exchange Rate (Divisor) [CRRD] <> mnTOEPOExchangeRate [CRRD]
               FC To Currency Code [CRDC] <> szTOEPOCurrencyCode [CRCE]
               GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
               GC Price Effective Date [PEFJ] <> jdPriceEffectiveDate [PEFJ]
               VA grd_LINN_LineNbrIncrement [LINN] -> mnLineNoIncrement [LINN]
               VA grd_SLNE_LineNumber [SLNE] -> mnParentWFLineNo [SLNE]
               VA grd_cByPassCommitment_EV09 [EV09] -> cBypassCommitments [EV09]
               VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
               VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
               VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
               GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
               GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
               VA grd_MATH02_Num_Agreements [MATH02] <- mnAgreementsFound [AFND]
               GC Mod Trn [MOT] <> szModeOfTransport [MOT]
               GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
               GC Line of Business [LOB] <> szLineofBusiness [LOB]
               GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
               GC End Use [EUSE] <> szEndUse [EUSE]
               GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
               GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
               GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
               GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
               VA grd_szRelatedCompany_RKCO [RKCO] <- szCompanyKeyRelated [RKCO]
               VA grd_szRelatedOrderNumber_RORN [RORN] <- szRelatedPoSoNumber [RORN]
               VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
               VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
               GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
               GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
               GC Carrier Number [CARS] <> mnCarrier [CARS]
               GC Revision Reason [RFRV] <> szGenericString2_DL02 [DL02]
               VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
               GC Unit Volume [ITVL] <> mnItemVolume_ITVL [ITVL]
               GC Vol U/M [VLUM] <> szVolumeUOM_VLUM [VLUM]
               GC Header Business Unit [EMCU] <> szRevenueBusinessUnit [EMCU]
               GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
               FI mnProcessID [PEID] <> mnProcessID [PEID]
               FI mnTransactionID [TCID] <> mnTransactionID [TCID]
               VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
               GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
               GC Release Number [RLNU] -> szReleaseNumber [RLNU]
               GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
               GC Scheduled Ship Time [PMDT] <> mnScheduledShipmnentTime [PMDT]
               VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
               VA grd_szDetailLineBSC [BSC] -> szBuyingSegmentCode [BSC]
               VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
               GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
               GC Sec UM [UOM2] <> szDualUOM [UOM2]
               GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
               VA grd_szPromotionID_PMTN [PMTN] <> szPromotionID [PMTN]
               GC Project Number [PRJM] -> mnProjectNumber [PRJM]
               VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] <> mnOverrideForeignBasePrice [OVFBPRC]
               VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
               VA grd_mnListPrice_LPRC [LPRC] <> mnListPrice [LPRC]
               VA grd_mnListPriceForeign_FPRC [FPRC] <> mnForeignListPrice [FPRC]
               VA grd_cItemCrossDockFlagYN_XDCK [XDCK] <- cCrossDockFlagYN [XDCK]
               GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
               VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUoM [APUM]
               GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
               GC Order Score Override [OSCOREO] <- cScoreOverride [OSCOREO]
               GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
               GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
               GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
               GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
               GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
               GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
               GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
               GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
               GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
               GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
               GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
               GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
               VA grd_cSuppressPNGenerate_EV01 [EV01] <> cSuppressProdNoGenerate [EV01]
               GC GeneratedProduction NumberShort [PNS] <> mnGeneratedProdNoShort [PNS]
               VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
          // SAR 7538276 - END
          //
          // SAR 6968012
          If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
               VA frm_cTransfer_Direct_Flag_S011 [SO11] = substr([GC ALPH - SO Detail Flags (wf) [ALPH]], "11", "12")
               If VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "2"
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC Purchase OrderCurrency Code)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderExchange Rate)
               End If
               If VA frm_cTransfer_Direct_Flag_S011 [SO11] is not equal to "2"
                    ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                         VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                         "5" -> cCacheActionCode [EV02]
               Else
                    ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                         VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                         GC Order Number [DOCO] -> mnOrderNumber [DOCO]
                         GC Or Ty [DCTO] -> szOrderType [DCTO]
                         GC Order Co [KCOO] -> szOrderCompany [KCOO]
                         GC To Curr [CRDC] <- szPOCurrencyCode [CRDC]
                         GC PU UM [UOM3] <- szPOUnitOfMeasure [UOM3]
                         GC Unit Cost [UNCS] <- mnPOUnitCost [UNCS]
                         GC Extended Cost [ECST] <- mnPOExtendedCost [ECST]
                         GC Exchange Rate [CRRD] <- mnPOExchangeRate [CRRD]
                         VA grd_cPurchaseCostOverride [CSTO] <- cPOCostOverride [EV01]
                         "1" -> cCacheActionCode [EV02]
               End If
          End If
          //
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "36" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
          // SAR 4924702 - Location exit
          VA grd_PreviousLocation_LOCN [LOCN] = GC Location  [LOCN]
          // SAR 5390765
          VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
     Else
          //
          // SAR 2591115 - Pass Line Number Increment and Parent Line Number
          // SAR 3011549 - Begin/End CHANGE
          // SAR 2147209 - Begin/End CHANGE
          // SAR 3406866 - Pass in/out PEID and TCID
          // SAR 4155042 - Pass the new VA to mnLastLineNoAssigned
          // SAR 4222621 - pass Item Number and Short Item Number both directions to
          // allow the MBF to be called with short item number and return all other item
          // numbers
          //
          // SAR 6968012
          If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
               If FI Jobnumber [JOBS] is equal to <Blank>
               Or FI Jobnumber [JOBS] is equal to <NULL>
               Or FI Jobnumber [JOBS] is equal to "0"
                    GetNextJobNumber(B3202190.GetNextJobNumber)
                         FI Jobnumber [JOBS] <- mnJobNumber [JOBS]
               End If
               If VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to <Blank>
               Or VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to <NULL>
               Or VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is equal to "0"
                    GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
               End If
               ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                    VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                    GC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    GC Or Ty [DCTO] -> szOrderType [DCTO]
                    GC Order Co [KCOO] -> szOrderCompany [KCOO]
                    GC To Curr [CRDC] -> szPOCurrencyCode [CRDC]
                    GC PU UM [UOM3] -> szPOUnitOfMeasure [UOM3]
                    GC Unit Cost [UNCS] -> mnPOUnitCost [UNCS]
                    GC Extended Cost [ECST] -> mnPOExtendedCost [ECST]
                    GC Exchange Rate [CRRD] -> mnPOExchangeRate [CRRD]
                    VA grd_cPurchaseCostOverride [CSTO] -> cPOCostOverride [EV01]
                    "4" -> cCacheActionCode [EV02]
          End If
          //
          // SAR 4730705 - changed the form variable frm_MATH02_Num_Agreements to
          // grid variable grd_MATH02_Num_Agreements for agreements found
          // SAR 5180557 - Get the mnWOWFLineNo from EditLine and pass to P32942
          // Configurator Item Specification later
          // ***********************************************************************
          // SAR 8729218 - Check if the matrix segment is defined in the B/P before
          // processing.
          If VA grd_cMatrixControlled123_MIC [MIC] is equal to "1"
               If GC Business Unit [MCU] is equal to <Blank>
                    GC Business Unit [MCU] = FC Business Unit [MCU]
               End If
               If GC Short Item No [ITM] is equal to <Blank>
               Or GC Short Item No [ITM] is equal to <NULL>
                    GetItemMasterBy2ndItem(X4101.GetItemMasterBy2ndItem)
                         GC Item Number [UITM] -> sz2ndItemNumber [LITM]
                         "0" -> cReturnPtr [EV01]
                         "0" -> cSuppressErrorMsg [EV02]
                         GC Short Item No [ITM] <- mnShortItemNumber [ITM]
               End If
               F4102GetBranchByItem(B4200930.F4102GetBranchByItem)
                    GC Short Item No [ITM] -> mnItemNo [ITM]
                    GC Business Unit [MCU] -> szBranchPlant [MCU]
                    "1" -> cMode [EV01]
                    VA evt_cItemRecordFound_EV02 [EV02] <- cRecordFound [EV02]
                    "1" -> cSuppressErrorMsg [EV03]
               If VA evt_cItemRecordFound_EV02 [EV02] is not equal to "1"
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Branch/Plant, "0294")
                    Stop Processing
               End If
          End If
          // SAR 8729218 - End
          // SAR 5113442
          // SAR 5422528 - Added Processing Option for Matrix parent
          If VA grd_cMatrixControlled123_MIC [MIC] is equal to "1"
          And PO cInventoryParent [SEGB] is equal to <Blank>
          And VA grd_ACTI_ActionHidden [ACTI] is not equal to "C"
               If GC Matrix Control Line Number [MCLN] is less than or equal to "0"
                    VA frm_cAddOrUpdateMatrixMode [EV01] = "1"
                    VA frm_mnLargestMCLNUsed [MCLN] = [VA frm_mnLargestMCLNUsed [MCLN]]+1
                    GC Matrix Control Line Number [MCLN] = VA frm_mnLargestMCLNUsed [MCLN]
                    Hide Grid Row(FC Grid,  <Currently Selected Row>)
               End If
          End If
          // SAR 5422528
          If VA grd_cMatrixControlled123_MIC [MIC] is not equal to "1"
          Or PO cInventoryParent [SEGB] is equal to "1"
          Or GC Matrix Control Line Number [MCLN] is less than or equal to "0"
               // SAR 5216847 - pass in/out SOEF
               // SAR 5242682 - pass PMTN,PRJM
               // SAR 5266271 - pass in/out override and list prices
               // SAR 5330594 - sales based on date: pass in out GC price effective date
               // SAR 5308881 - pass in out deliver date - Date Sensitive Customer Sets
               // SAR 5413648 - pass APUM in/out of edit line
               // SAR 5192654 - Extended Price Rounding
               If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
                    // SAR 8955603 - Also get currency info for taxed extended prices and extended
                    // tax amounts.
                    DecimalsTriggerGetbyCRDCCRCD(B1100008.DecimalsTriggerGetbyCRDCCRCD)
                         FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                         FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                         GC Extended Price [AEXP] <> mnDomesticAmount01 [AN01]
                         GC Extended Cost [ECST] <> mnDomesticAmount02 [AN02]
                         FC OTOT: Order Total Display [TOT1] <> mnDomesticAmount03 [AN03]
                         GC Taxed Extended Price [TAEXP] <> mnDomesticAmount04 [AN04]
                         GC Extended Tax Amount [ETA] <> mnDomesticAmount05 [AN05]
                         GC Foreign Extended Price [FEA] <> mnForeignAmount01 [AN16]
                         GC Foreign Extended Cost [FEC] <> mnForeignAmount02 [AN17]
                         FC FAP-Foreign Total Display [TOT2] <> mnForeignAmount03 [AN18]
                         GC Foreign Taxed Extended Price [TFEA] <> mnForeignAmount04 [AN19]
                         GC Foreign Extended Tax Amount [FETA] <> mnForeignAmount05 [AN20]
               End If
               // SAR 5192654 - End
               // SAR 5510106 - Begin/End CHANGE -Pass new parameters
               // SAR 5098650 - Return Lot Number and assign to Grid column
               // SAR 5589272 - Begin/End CHANGE -Pass new parameters
               // SAR 5946188
               // SAR 6386961 - Pass Release Number
               // SAR 6368922 - Pass GC Associated Text
               // SAR 7392676 - Commented  SAR 6770891
               //  SAR 6770891 - Begin
               ! If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    ! SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                    !      GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    !      "1" -> cValue [EV01]
               ! End If
               ! //  SAR 6770891- End
               // SAR 7812378  - Pass Customer PO
               // SAR 7972793 - Pass GC Customer PO instead of FC Customer PO
               // SAR 8805516 - Pass the GC CreditJobNumber to mnSODRelatedJobNumber
               // SAR 8918535 - Replaced from GC Credit Job Number to Evt Credit Job Number
               // SAR 8955602 - Passed new tax variables (GC values) to Edit Line function
               // Edit Line commits the Unit Tax Price values to F4211TX table
               // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
               // Production Short Number and SupressProdNoGenerate
               F4211FSEditLine(B4200310.F4211FSEditLine)
                    FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                    VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                    VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                    VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    GC Line Number [LNID] <> mnLineNo [LNID]
                    GC Business Unit [MCU] <> szBusinessUnit [MCU]
                    GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                    GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                    GC Sched Pick [PDDJ] <> jdPromisedDate [PDDJ]
                    GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                    GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                    GC Item Number [UITM] <> szItemNo [UITM]
                    GC Location  [LOCN] <> szLocation [LOCN]
                    GC Lot Serial Number [LOTN] <> szLotNo [LOTN]
                    GC Description  [DSC1] <> szDescription1 [DSC1]
                    GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                    GC Ln Ty [LNTY] <> szLineType [LNTY]
                    GC Last Stat [LTTR] <> szLastStatus [LTTR]
                    GC Next Stat [NXTR] <> szNextStatus [NXTR]
                    GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                    GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                    GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                    GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                    GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                    GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                    GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                    GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                    GC Print Message [INMG] <> szPrintMesg [INMG]
                    GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                    GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                    GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                    GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                    GC UM  [UOM] <> szTransactionUOM [UOM]
                    GC PR UM [UOM4] <> szPricingUOM [UOM4]
                    GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                    GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                    GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                    GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                    GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                    GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                    GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                    "EP4210" -> szCMProgramID [JPID]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                    GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                    GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                    GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                    GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
                    GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                    VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                    VA frm_USER_User_ID [USER] <> szUserID [USER]
                    VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                    FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                    VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                    VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                    VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                    GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                    PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                    VA frm_LastLineNumOnAsynch_LNIX [LNIX] <> mnLastLineNoAssigned [LNIX]
                    VA grd_STKT_Stocking_Type [STKT] <> cStockingType [STKT]
                    GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                    GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                    GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                    GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                    GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                    GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                    VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                    GC Short Item No [ITM] <> mnShortItemNo [ITM]
                    VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                    VA grd_SODLineNumber [LNID] -> mnSODLineNo [EDLN]
                    VA grd_AREV_Rev_Lev [AREV] <> mnPriceAdjRevLevel [AREV]
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                    VA grd_SODOrderNumber [DOCO] -> mnSODDocNo [EDOC]
                    VA grd_SODOrderType [DCTO] -> szSODDocType [EDCT]
                    VA grd_SODOrderCompany [KCOO] -> szSODOrderCo [EKCO]
                    FC Business Unit 2 [MCU2] <> szTransferOrderToBranch [TMCU]
                    VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                    VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                    FC Order Number [DOC2] <> mnSODWFLineNo [DOC]
                    FC Order Type [DCIN] <> szGeneric2CharString [DCT]
                    FC Exchange Rate (Divisor) [CRRD] <> mnTOEPOExchangeRate [CRRD]
                    FC To Currency Code [CRDC] <> szTOEPOCurrencyCode [CRCE]
                    GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
                    GC Price Effective Date [PEFJ] <> jdPriceEffectiveDate [PEFJ]
                    VA frm_mnWOLineNo_LNIX [LNIX] <- mnWOWFLineNo [LNIX]
                    VA grd_LINN_LineNbrIncrement [LINN] -> mnLineNoIncrement [LINN]
                    VA grd_SLNE_LineNumber [SLNE] -> mnParentWFLineNo [SLNE]
                    VA grd_cByPassCommitment_EV09 [EV09] -> cBypassCommitments [EV09]
                    VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
                    VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
                    VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
                    GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
                    GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
                    VA grd_MATH02_Num_Agreements [MATH02] <- mnAgreementsFound [AFND]
                    GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                    GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                    GC Line of Business [LOB] <> szLineofBusiness [LOB]
                    GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                    GC End Use [EUSE] <> szEndUse [EUSE]
                    GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                    GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                    GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                    GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                    VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                    VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                    VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                    VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                    GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                    GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                    VA evt_mnCreditJobnumber_JOBS [JOBS] <> mnSODRelatedJobNumber [MATH10]
                    GC Carrier Number [CARS] <> mnCarrier [CARS]
                    GC Revision Reason [RFRV] <> szGenericString2_DL02 [DL02]
                    VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                    GC Unit Volume [ITVL] <> mnItemVolume_ITVL [ITVL]
                    GC Vol U/M [VLUM] <> szVolumeUOM_VLUM [VLUM]
                    GC Header Business Unit [EMCU] <> szRevenueBusinessUnit [EMCU]
                    GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
                    GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
                    GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                    GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
                    GC Scheduled Ship Time [PMDT] <> mnScheduledShipmnentTime [PMDT]
                    VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
                    VA grd_szDetailLineBSC [BSC] <- szBuyingSegmentCode [BSC]
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                    GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                    GC Sec UM [UOM2] <> szDualUOM [UOM2]
                    GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
                    VA grd_szPromotionID_PMTN [PMTN] <> szPromotionID [PMTN]
                    GC Project Number [PRJM] -> mnProjectNumber [PRJM]
                    VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] <> mnOverrideForeignBasePrice [OVFBPRC]
                    VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
                    VA grd_mnListPrice_LPRC [LPRC] <> mnListPrice [LPRC]
                    VA grd_mnListPriceForeign_FPRC [FPRC] <> mnForeignListPrice [FPRC]
                    VA grd_cItemCrossDockFlagYN_XDCK [XDCK] <- cCrossDockFlagYN [XDCK]
                    GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUoM [APUM]
                    FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                    FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                    GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
                    GC Order Score Override [OSCOREO] <- cScoreOverride [OSCOREO]
                    GC Kit Identifier  [KITID] <> mnKitIdentifier [KITID]
                    GC Kit Component Dirty Flag [KITDIRTY] <> cKitComponentDirtyFlag [KITDIRTY]
                    VA evt_cKitProcessingRequired_EV1 [EV01] -> cKitProcessingRequired [EV11]
                    VA grd_LINN_From_Line_Number [LINN] <> mnKitFromLineNumber [LINN]
                    VA grd_LIN_Through_Line_Number [LIN] <> mnKitThruLineNumber [LIN]
                    GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                    GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                    GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                    GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                    GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                    GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                    GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                    GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                    GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                    GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                    GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                    GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                    VA grd_cSuppressPNGenerate_EV01 [EV01] <> cSuppressProdNoGenerate [EV01]
                    GC GeneratedProduction NumberShort [PNS] <> mnGeneratedProdNoShort [PNS]
                    VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
               //
               // Set edit-line error code, to check for enabling 'Kit&Config' RowExit.
               If VA frm_ERRC_Error_Code [ERRC] is not equal to "0"
               And VA frm_ERRC_Error_Code [ERRC] is not equal to <Blank>
                    VA grd_EditLine_ErrorCode_ERRC [ERRC] = "1"
               Else
                    //     Kit released from BLANKET should disable prices
                    //
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                         GetFrmBlktReleaseALPH27(B4205100.GetFrmBlktReleaseALPH27)
                              GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
                              VA frm_CheckForReleaseBlankt_EV01 [EV01] <- cValue [EV01]
                         If VA frm_CheckForReleaseBlankt_EV01 [EV01] is equal to "4"
                              Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
                              Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedPrice)
                              Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
                              Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
                              //
                              // SAR 8955607 - Taxed Prices Enhancement - Disable Taxed Price fields if the
                              // line is released from Blanket to retain the prices from Original Blanket.
                              //
                              If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                                   Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                                   Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                                   Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
                                   Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
                              End If
                         Else
                              // SAR 8955603 - Do not enable non-taxed price columns if using taxed prices.
                              If VA frm_cUseTaxedPrices_UTP [UTP] is not equal to "1"
                                   Enable Grid(FC Grid,  <Currently Selected Row>, GC UnitPrice)
                                   Enable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
                                   Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
                                   Enable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
                              End If
                         End If
                    End If
               End If
               // SAR 7831771 Begin
               If SV Form_ Mode is equal to CO UPDATE_MODE
               And VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "1"
               Or VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "2"
                    If VA frm_mnStoreLNID_LNID [LNID] is less than GC Line Number [LNID]
                         VA frm_mnStoreLNID_LNID [LNID] = GC Line Number [LNID]
                    End If
               End If
               // SAR 7831771 End
               // SAR 7209886 - BEGIN
               If VA frm_ERRC_Error_Code [ERRC] is equal to "2"
               And VA grd_WeightManuallyEntered [EV01] is not equal to "1"
                    GC Unit Weight [ITWT] = 0
               End If
               // SAR 7209886 – END
               //
               // SAR 7199243 Copy Original Commission Info to Credit Orders
               If GC cGetFromHistory [EV01] is equal to "1"
               And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
                    CopyCommissionsForCreditOrders(B4208190.CopyCommissionsForCreditOrders)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                         GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
                         GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
                         GC OKCO- Doc Co (wf) [OKCO] -> szOriginalCompanyKey [OKCO]
                         GC Original Line Number [OGNO] -> mnOriginalLineNumber [OGNO]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
               End If
               //
               // SAR 6968012
               // SAR 6968012
               If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
                    VA frm_cTransfer_Direct_Flag_S011 [SO11] = substr([GC ALPH - SO Detail Flags (wf) [ALPH]], "11", "12")
                    If VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "2"
                         Disable Grid(FC Grid,  <Currently Selected Row>, GC Purchase OrderCurrency Code)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderExchange Rate)
                    End If
                    If VA frm_cTransfer_Direct_Flag_S011 [SO11] is not equal to "2"
                         ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                              VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                              FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                              "5" -> cCacheActionCode [EV02]
                    Else
                         ProcessPOOverridesCache(B4208110.ProcessPOOverridesCache)
                              VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                              FI Jobnumber [JOBS] -> mnCMJobnumber [JOBS]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNumber [LNIX]
                              GC Order Number [DOCO] -> mnOrderNumber [DOCO]
                              GC Or Ty [DCTO] -> szOrderType [DCTO]
                              GC Order Co [KCOO] -> szOrderCompany [KCOO]
                              GC To Curr [CRDC] <- szPOCurrencyCode [CRDC]
                              GC PU UM [UOM3] <- szPOUnitOfMeasure [UOM3]
                              GC Unit Cost [UNCS] <- mnPOUnitCost [UNCS]
                              GC Extended Cost [ECST] <- mnPOExtendedCost [ECST]
                              GC Exchange Rate [CRRD] <- mnPOExchangeRate [CRRD]
                              VA grd_cPurchaseCostOverride [CSTO] <- cPOCostOverride [EV01]
                              "1" -> cCacheActionCode [EV02]
                    End If
               End If
               ChangeStringElement(B4002410.ChangeStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                    "36" -> nPosition [INT01]
                    "1" -> cCharacter [EV01]
               VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
          End If
          // SAR 4924702 - Location exit
          VA grd_PreviousLocation_LOCN [LOCN] = GC Location  [LOCN]
     End If
     //
     // SAR 6627251- Disable Grid colum item weight field for config parent line
     If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedWeight)
     End If
     // SAR# 5422528
     If VA grd_cMatrixControlled123_MIC [MIC] is equal to "1"
     And PO cInventoryParent [SEGB] is equal to <Blank>
     And GC Matrix Control Line Number [MCLN] is greater than "0"
          Press Button(FC Matrix Order)
     End If
     // End of SAR#5113442
     // ***********************************************************************
     // SAR 5732518
     If GC Quantity Ordered [UORG] is not equal to <Blank>
     And GC Quantity Ordered [UORG] is not equal to <NULL>
     And GC Quantity Ordered [UORG] is not equal to "0"
          // // SAR 4912752 - Resetting Quantities
          VA evt_mn_ActualQtyEntOppSgn_UORG [UORG] = [VA evt_mn_ActualQtyEntered_UORG [UORG]]*-1
          If GC Quantity Ordered [UORG] is equal to VA evt_mn_ActualQtyEntOppSgn_UORG [UORG]
          And VA frm_ERRC_Error_Code [ERRC] is equal to "2"
               GC Quantity Ordered [UORG] = VA evt_mn_ActualQtyEntered_UORG [UORG]
               //
               If GC Quantity Shipped [SOQS] is not equal to <Blank>
               Or GC Quantity Shipped [SOQS] is not equal to <NULL>
               Or GC Quantity Shipped [SOQS] is not equal to "0"
                    GC Quantity Shipped [SOQS] = [GC Quantity Shipped [SOQS]]*-1
               End If
               //
               If GC Quantity Backordered [SOBK] is not equal to <Blank>
               Or GC Quantity Backordered [SOBK] is not equal to <NULL>
               Or GC Quantity Backordered [SOBK] is not equal to "0"
                    GC Quantity Backordered [SOBK] = [GC Quantity Backordered [SOBK]]*-1
               End If
               //
               If GC Quantity Canceled [SOCN] is not equal to <Blank>
               Or GC Quantity Canceled [SOCN] is not equal to <NULL>
               Or GC Quantity Canceled [SOCN] is not equal to "0"
                    GC Quantity Canceled [SOCN] = [GC Quantity Canceled [SOCN]]*-1
               End If
          End If
     End If
     //
     // SAR 4155042-Begin
     If VA frm_LastLineNumOnAsynch_LNIX [LNIX] is greater than VA frm_LNIX_Prev_WF_Line_Num [LNIX]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA frm_LastLineNumOnAsynch_LNIX [LNIX]
     End If
     // SAR 4155042-End
     // SAR 3361653
     If FC Order Number [DOC2] is equal to "0"
     Or FC Order Number [DOC2] is equal to <NULL>
          ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
               VA grd_szRelatedOrderNumber_RORN [RORN] -> szInputString [AA15]
               FC Order Number [DOC2] <- mnOutputMathNumeric [MATH01]
               UNDEFINED <- cReturnedErrorCode [ERR]
     End If
     If FC Order Type [DCIN] is equal to <Blank>
     Or FC Order Type [DCIN] is equal to <NULL>
          FC Order Type [DCIN] = VA grd_szRelatedOrderType_RCTO [RCTO]
     End If
     If VA frm_ALPH_PO_Number [ALPH] is equal to <Blank>
     Or VA frm_ALPH_PO_Number [ALPH] is equal to <NULL>
          VA frm_ALPH_PO_Number [ALPH] = VA grd_szRelatedCompany_RKCO [RKCO]
     End If
     //
     // //SAR 3094014 - Store QtyOrdered for Confg item when the Confg Constants
     // Availability Check Flag is On and Confg Program will pass the QtyOrdered to S
     //
     If GC Quantity Ordered [UORG] is not equal to <Blank>
     Or GC Quantity Ordered [UORG] is not equal to <NULL>
          VA frm_StoreQtyOrderedForConfg [UORG] = GC Quantity Ordered [UORG]
     End If
     //
     // SAR 3078102
     If VA frm_ReplacementDone [EV02] is equal to "1"
          Clear Grid Cell Error(FC Grid,  <Current Row>,  <All Columns>)
          VA frm_ReplacementDone [EV02] = "0"
     End If
     //
     // ***********************************************************************
     // SAR 3055672 - Begin ADD
     // This is used only for PrePayments. Under the assumption that
     // Prepayments only handle one Payment Instrument then the
     // first non-blank Payment Instrument must be saved so it can be
     // used to determine whether to give the 114Y error or not once OK
     // button is pressed.
     // ***********************************************************************
     If VA frm_cPaymentInstrument_RYIN [RYIN] is equal to <Blank>
     Or VA frm_cPaymentInstrument_RYIN [RYIN] is equal to <NULL>
          VA frm_cPaymentInstrument_RYIN [RYIN] = GC Pay Inst [RYIN]
     End If
     // SAR 3055672 - End ADD
     If PO cDisableorHidePrice [EV04] is less than or equal to <Blank>
          RetrieveStringElement(B4002410.RetrieveStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
               "20" -> nPosition [INT01]
               VA evt_Protect_Price_EV01 [EV01] <- cCharacter [EV01]
     End If
     If VA evt_Protect_Price_EV01 [EV01] is equal to "1"
     Or PO cDisableorHidePrice [EV04] is greater than <Blank>
          Disable Grid(FC Grid,  <Current Row>, GC UnitPrice)
          Disable Grid(FC Grid,  <Current Row>, GC ExtendedPrice)
          Disable Grid(FC Grid,  <Current Row>, GC ForeignExtended Price)
          Disable Grid(FC Grid,  <Current Row>, GC ForeignUnit Price)
          // SAR 5330594 - sales based on date
          //
          // SAR 8955607 - Taxed Prices Enhancement - Disable Taxed Price Fields if the
          // Protect Price option is On in Line type constants or Proc option is set to
          // disable price fields
          //
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
          End If
     Else
          //  SAR 8292298 - DELETED the ELSE loop which enabled the Price Fields
          // SAR 5330594 - sales based on date
     End If
     //
     If PO cTransferOrderEntry [EV25] is equal to "1"
          FC Order Number [DOC1] = FC Order Number [DOCO]
     End If
     //
     GetUDCDescription(N0800031.GetUDCDescription)
          "IFLA" -> szDataDictionaryItem [DTAI]
          UNDEFINED <> szSystemCode [SY]
          UNDEFINED <> szUserDefinedCodes [RT]
          UNDEFINED <> cUserDefinedCode [EV01]
          GC It Mg [IFLA] -> szUserDefinedCode [KY]
          GC Description  [DL01] <- szDescription01 [DL01]
          UNDEFINED <> szDescription02 [DL02]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
     //
     // SAR 2050167 - Extract the Transfer/Direct Ship Flag from GC ALPH
     VA frm_cTransfer_Direct_Flag_S011 [SO11] = substr([GC ALPH - SO Detail Flags (wf) [ALPH]], "11", "12")
     //
     // SAR 7228286
     VA evt_mnShortItemNumber_ITM [ITM] = GC Short Item No [ITM]
     // SAR # 1880396
     // If Edit Line returns without error and the form is in Add
     // or Change mode, protect the Item Number.
     //
     // Sar # 6077789 - If VA grd_UpdatedtoDetailWF is NULL or Blank set it to '0'
     If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
     Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
          VA grd_EV18_UpdatedtoDetailWF [EV18] = "0"
     End If
     If VA frm_ACTI_Action_Code [ACTI] is equal to "A"
     And VA grd_EV18_UpdatedtoDetailWF [EV18] is not equal to "0"
     Or VA frm_ACTI_Action_Code [ACTI] is equal to "C"
     And VA grd_EV18_UpdatedtoDetailWF [EV18] is not equal to "0"
          Disable Grid(FC Grid, <Currently Selected Row>, GC ItemNumber)
          //
          // SAR 6104054 - Lock down the Item Number field
          VA grd_cItemFldLocked_EV01 [EV01] = "1"
     Else
          // SAR 6104054
          VA grd_cItemFldLocked_EV01 [EV01] = "0"
          Enable Grid(FC Grid,  <Current Row>, GC ItemNumber)
          // SAR 5565861
          If VA grd_ACTI_ActionHidden [ACTI] is not equal to "C"
               GC Short Item No [ITM] = <NULL>
          End If
          // END SAR 5565861
     End If
     //
     // 6545212 CRM CSS - set customer item error
     //
     If VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
          GetCSSItemErrorSOEL21(B4205101.GetCSSItemErrorSOEL21)
               VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
               VA evt_cCSSItemError_EV01 [EV01] <- cValue [EV01]
          If VA evt_cCSSItemError_EV01 [EV01] is equal to "1"
               Set Grid Color(FC Grid, <Currently Selected Row>, GC ItemNumber_CSS, <Red>)
          Else
               Set Grid Color(FC Grid, <Currently Selected Row>, GC ItemNumber_CSS, <Default>)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ItemNumber_CSS)
          End If
     End If
     //
     // SAR 1997324
     If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
     And VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is not equal to <Blank>
          Disable Control(FC Currency Code [CRCD])
          Disable Control(FC Exchange Rate [CRR])
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC Order Type [DCTO])
          Disable Control(FC Order Company [KCOO])
          Disable Control(FC Order Date [TRDJ])
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Address Number [AN8])
          Disable Control(FC Ship To [SHAN])
          Disable Control(FC Business Unit [MCU])
          Disable Control(FC Reference [VR01])
          // SAR 5308881 - BEGIN - Date Sensitive Customer Sets
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Long Address Number [ALKY])
          Disable Control(FC Address Number to use for Tax [AUFT])
          Disable Control(FC Address Number to use for Transportation [AUFI])
          // SAR 5308881 - END - Date Sensitive Customer Sets
          //
          // SAR 8953108 - Apparel Enhancement
          // Disable the Hdr collection fields after one line is entered and processed
          //
          If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
               Disable Control(FC Collection [C9COLL])
               Disable Control(FC SeasonCode [C9SEAC])
               Disable Control(FC Season Year [C9SEAY])
               Disable Control(FC Price Reference Date [C9PRDJ])
          End If
          //
          // SAR 2746113
          Disable Grid(FC Grid,  <Current Row>, GC LnTy)
          //
          If FC Order Company [KCOO] is greater than <Blank>
          And FC Order Number [DOCO] is greater than <Blank>
          And FC Order Type [DCTO] is greater than <Blank>
               Enable Control(HC Header Atta&chments)
          Else
               Disable Control(HC Header Atta&chments)
          End If
          //
          // SAR 8955602 - Freeze the new check boxes when header fields get freezed.
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               // SAR 8955602 - If the focus is brought back to the header from the grid then
               // the header fields will be disabled. But if the control is brought back to
               // the header by clicking on the UTP checkbox then its selection changed event
               // will be fired. This variable will prevent the logic in UTP checkbox event
               // from executing
               VA frm_cInvalidUTPChange_EV01 [EV01] = "1"
               Disable Control(FC Use Taxed Prices [UTP])
               // SAR 8955603 - For Shopping Cart mode Disable the CSS Use Taxed Price
               // checkbox also.
               If PO cShoppingCartMode [CART] is equal to "1"
                    Disable Control(FC CSS Use Taxed Prices [UTP])
               End If
          End If
          // SAR 8955602 Ends
     End If
     If VA frm_Transfer_Order_Errors_EV01 [EV01] is not equal to "1"
          // SAR 8955602 - Freeze the new check boxes when header fields get freezed.
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               // SAR 8955602 - If the focus is brought back to the header from the grid then
               // the header fields will be disabled. But if the control is brought back to
               // the header by clicking on the UTP checkbox then its selection changed event
               // will be fired. This variable will prevent the logic in UTP checkbox event
               // from executing
               VA frm_cInvalidUTPChange_EV01 [EV01] = "1"
               Disable Control(FC Use Taxed Prices [UTP])
          End If
          //
          Disable Control(FC Parent Business Unit [MCU1])
          Disable Control(FC Business Unit 2 [MCU2])
          Disable Control(FC Order Number [DOC1])
          Disable Control(FC Order Number [DOC2])
          Disable Control(FC Order Type [DCTO])
          Disable Control(FC Order Type [DCIN])
          Disable Control(FC Currency Code [CCF1])
          Disable Control(FC Currency Code [CCF2])
          Disable Control(FC Currency Code [CRCD])
          Disable Control(FC To Currency Code [CRDC])
          Disable Control(FC Exchange Rate [CRR])
          Disable Control(FC Exchange Rate (Divisor) [CRRD])
          Disable Control(FC Landed Cost Rule [PRP5])
          Disable Control(FC Order Date [TRDJ])
          // SAR 8862342 - Removed code for SAR SAR 7624545 and Disabled Linedefault B/P
          // only for Transfer orders
     End If
     //
     // SAR 1789867
     // SAR 3272108
     If SV Form_ Mode is equal to CO COPY_MODE
          VA frm_EV04_SOE_Detail_Flag [EV04] = <NULL>
          RetrieveStringElement(B4002410.RetrieveStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
               "38" -> nPosition [INT01]
               VA frm_EV04_SOE_Detail_Flag [EV04] <- cCharacter [EV01]
          If VA frm_EV04_SOE_Detail_Flag [EV04] is equal to "1"
               //
               // SAR 8775708 - Don't pop up the kit window if it's a copied line
               VA grd_EV12_KitProcessed [EV12] = "1"
               //
               // SAR 6548886
               If VA frm_mnCreditJobNum_JOBS [JOBS] is not equal to "0"
                    VA frm_EV04_SOE_Detail_Flag [EV04] = "0"
                    ChangeStringElement(B4002410.ChangeStringElement)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                         "38" -> nPosition [INT01]
                         VA frm_EV04_SOE_Detail_Flag [EV04] -> cCharacter [EV01]
               End If
               VA frm_INT01_Inserted_Row_Counter [INT01] = [VA frm_INT01_Inserted_Row_Counter [INT01]]-1
          End If
     End If
     //
     // SAR 5830290
     // SAR 8486033 To update the reprice indicator when user chooses cancel
     // reprice.
     If GC Order Repriced Indicator [ORP] is equal to "R"
     Or VA frm_cCancelReprice [VC01B] is equal to "N"
          //
          // SAR 3735660 BEGIN / END - Pass in GC Order Reprice indicator instead of
          // variable
          F42UI11UpdateSODInfo(B4201070.F42UI11UpdateSODInfo)
               VA frm_EV22_cCacheOn [EV22] -> cUpdateWorkFileOrCache [EV01]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GC Order Repriced Indicator [ORP] -> cOrderRepricedIndicator [ORP]
               "1" -> cSuppressErrorMessage [EV02]
               UNDEFINED <> szDataItem [DTAI]
               VA grd_ORPR_Order_Reprice_Grp [ORPR] -> szOrderRepriceCategory [ORPR]
               GC Adj. Schedule [ASN] -> szPriceAdjustmentSchedule [ASN]
               UNDEFINED <> cSalesOrderStatus09 [SO09]
               UNDEFINED <> cMode [EV01]
     End If
     VA frm_EV03_RelieveBlanketOrder [EV03] = "0"
     // SAR 5946188
     If VA grd_BlanketOrdersFound_EV02 [EV02] is equal to "2"
          // SAR 7551008
          GetFrmBlktReleaseALPH27(B4205100.GetFrmBlktReleaseALPH27)
               GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
               VA frm_CheckForReleaseBlankt_EV01 [EV01] <- cValue [EV01]
          // SAR 8642868- Original order number blanking out
          If VA grd_cCalledFromP42216 [EV01] is not equal to "1"
          And GC Original Order No [OORN] is less than or equal to "0"
          Or VA frm_CheckForReleaseBlankt_EV01 [EV01] is equal to "5"
               Set Grid Row Bitmap(FC Grid, <Current Row>,  <Check Mark>)
               // SAR 4393841 - don't set checkmark on the web
               If SV Engine_Type is equal to CO WINDOWS_ENGINE
                    Set Grid Font(FC Grid, <Current Row>, GC BlanketsExist, <Wingdings,Regular,12,Black>)
                    GC Blankets Exists [BLKT] = ü
               Else
                    GC Blankets Exists [BLKT] = "X"
               End If
               // SAR 3161547
               VA grd_cEnableHCBlanketOrders [EV01] = "1"
               // SAR 6277941 - Row is entered is not a critical event in HTML
               If SV Engine_Type is equal to CO HTML_ENGINE
                    Enable Control(HC &Blanket Orders)
               End If
          End If
     Else
          // SAR 3161547
          VA grd_cEnableHCBlanketOrders [EV01] = "0"
          GC Blankets Exists [BLKT] = <NULL>
          // SAR 8926330 Attachement icon disappears
          If GC Agreement Exists [AGRE] is equal to or empty <Blank>
          And GC Subsitution Exists [SBST] is equal to or empty <Blank>
          And GC Association Exists [ASSC] is equal to or empty <Blank>
          And GC Associated Text [ATXT] is equal to or empty <Blank>
               // SAR 6476931 Clear Check Mark
               Set Grid Row Bitmap(FC Grid, <Currently Selected Row>,  <Blank/Clear>)
          End If
          // SAR 5946188
          If VA grd_BlanketOrdersFound_EV02 [EV02] is equal to "1"
               Disable Grid(FC Grid,  <Current Row>, GC UnitPrice)
               // SAR 7846981
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               //
               // SAR 8955607 - Taxed Prices Enhancement - Disable Taxed Price fields if the
               // line is released from Blanket to retain the prices from Original Blanket.
               //
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          End If
     End If
     //
     // Check for Agreements
     //
     If PO cAgreementProcessing [SCH1] is not equal to <Blank>
     And PO cAgreementProcessing [SCH1] is not equal to <NULL>
          //
          // SAR 4730705 - changed the form variable frm_MATH02_Num_Agreements to
          // grid variable grd_MATH02_Num_Agreements
          If VA grd_MATH02_Num_Agreements [MATH02] is greater than "0"
               Set Grid Row Bitmap(FC Grid, <Current Row>,  <Check Mark>)
               // SAR 4393841 - don't set checkmark on the web
               If SV Engine_Type is equal to CO WINDOWS_ENGINE
                    Set Grid Font(FC Grid, <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                    GC Agreement Exists [AGRE] = ü
               Else
                    GC Agreement Exists [AGRE] = "X"
               End If
          End If
     End If
     //
     If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
          //
          // If the currency is off or the transaction was entered in domestic  currency
          // then copy the domestic prices and costs into the saved prices and costs
          // fields. Otherwise, copy the foregin prices and costs into the saved prices an
          // costs fields.
          //
          If SL CurrencyProcessing is equal to "N"
          Or FC Mode (F) [CRRM] is equal to "D"
               VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Unit Price [UPRC]
               VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Extended Price [AEXP]
               // SAR 8955603 - Store the saved taxed prices for order line
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Taxed Unit Price [TUPRC]
                    VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Taxed Extended Price [TAEXP]
               End If
               VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = GC Unit Cost [UNCS]
               VA grd_XCST_Saved_Ext_Cost [XCST] = GC Extended Cost [ECST]
               // SAR 6968012
               VA grd_mnPurchaseUnitCostSaved [UNCS] = GC Unit Cost [UNCS]
               VA grd_mnPurchaseExtCostSaved [ECST] = <NULL>
          Else
               VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Foreign Unit Price [FUP]
               VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Foreign Extended Price [FEA]
               // SAR 8955603 - Store the saved taxed prices for order line
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Foreign Taxed Unit Price [TFUP]
                    VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Foreign Taxed Extended Price [TFEA]
               End If
               VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = GC Foreign Unit Cost [FUC]
               VA grd_XCST_Saved_Ext_Cost [XCST] = GC Foreign Extended Cost [FEC]
          End If
     End If
     //
     //     If kit component line, zero out all price and cost extensions.
     //
     If GC Related Item No [RLIT] is greater than <Blank>
     And GC Related Kit Cpnt [RKIT] is less than or equal to "0"
          GC Extended Price [AEXP] = "0"
          GC Foreign Extended Price [FEA] = "0"
          GC Extended Cost [ECST] = "0"
          GC Foreign Extended Cost [FEC] = "0"
     End If
     //
     //     If F4211 grid data was edited successfully and this is a direct ship line
     //     call the F4311 Edit Line to create the purchase order detail line.
     //
     If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
          //
          // Begin of SAR 2442961
          If SV Form_ Mode is equal to CO COPY_MODE
          And VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          And VA frm_mnNewLineNumCopyMode_LNID [LNID] is greater than VA frm_mnLastLineNumCopyMode_LNID [LNID]
               VA frm_cKitProcFlagCopyMode_EV01 [EV01] = "1"
          End If
          // End of SAR 2442961
          //
          //     If there is no error on the detail line (per F4211 Edit line) and this is
          //     a kit parent item and in ADD mode, call the kit window program.
          //
          // SAR 4777677 B9 - Begin/End CHANGE
          // SAR 6789170 Begin-Change/End
          //
          If VA grd_EV25_CfgItemProcessed [EV25] is not equal to "0"
               Press Button(FC CFG Date Changed)
          End If
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          And VA grd_EV12_KitProcessed [EV12] is not equal to "1"
          And VA grd_cSupressBOMExplosion_EV01 [EV01] is not equal to "1"
          Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          And VA grd_EV25_CfgItemProcessed [EV25] is not equal to "1"
               //
               VA grd_EV12_KitProcessed [EV12] = "0"
               GetFrmBlktReleaseALPH27(B4205100.GetFrmBlktReleaseALPH27)
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
                    VA frm_CheckForReleaseBlankt_EV01 [EV01] <- cValue [EV01]
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               And VA frm_CheckForReleaseBlankt_EV01 [EV01] is not equal to "5"
                    If VA grd_BlanketOrdersFound_EV02 [EV02] is equal to "1"
                         //     BLANKET auto release Kit and components processed
                         //     Set warning on order quantity and bypass Kit Selection
                         //
                         Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC QuantityOrdered, "42B53")
                         VA grd_EV12_KitProcessed [EV12] = "1"
                    Else
                         If VA frm_CheckForReleaseBlankt_EV01 [EV01] is greater than "0"
                              If VA frm_CheckForReleaseBlankt_EV01 [EV01] is equal to "4"
                                   //     BLANKET Kit just processed components, bypass Kit Selection
                                   //
                                   VA grd_EV12_KitProcessed [EV12] = "1"
                              End If
                         Else
                              If VA grd_BlanketOrdersFound_EV02 [EV02] is equal to "2"
                              And PO cAutoDisplayAvailableBlanket [EV01] is equal to "1"
                              And GC Orig Ord Type [OCTO] is equal to <Blank>
                                   Press Button(FC BlanketReleaseSelect)
                                   If VA grd_cCalledFromP42216 [EV01] is equal to "1"
                                        VA grd_EV12_KitProcessed [EV12] = "1"
                                   Else
                                        //     Call Kit Selection due to cancel Blanket Release
                                        //
                                        VA grd_EV12_KitProcessed [EV12] = "0"
                                   End If
                              End If
                         End If
                    End If
               End If
               //     Kit just released from BLANKET should bypass Kit Selection
               //
               If VA grd_EV12_KitProcessed [EV12] is not equal to "1"
               Or VA grd_STKT_Stocking_Type [STKT] is not equal to "K"
                    Press Button(FC Kit and Configurator processing)
               End If
               //     Reset Blanket flag after populate components
               //
               SetFrmBlktReleaseALPH27(B4205100.SetFrmBlktReleaseALPH27)
                    GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                    "0" -> cValue [EV01]
               //
               VA grd_EV12_KitProcessed [EV12] = "1"
               VA grd_EV25_CfgItemProcessed [EV25] = "1"
               VA frm_cKitProcFlagCopyMode_EV01 [EV01] = "0"
          Else
               // SAR 7993527 - Set the error if we change the non Triggering kit window
               // in P4210
               If VA grd_cKitWindowError_EV01 [EV01] is equal to "1"
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "E42B6")
               End If
          End If
     End If
     //
     //     Run trigger to convert amounts to proper display decimals.
     //
     If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
          // SAR 8955603 - Also get currency info for taxed extended prices and extended
          // tax amounts.
          DecimalsTriggerGetbyCRDCCRCD(B1100008.DecimalsTriggerGetbyCRDCCRCD)
               FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
               FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
               GC Extended Price [AEXP] <> mnDomesticAmount01 [AN01]
               GC Extended Cost [ECST] <> mnDomesticAmount02 [AN02]
               FC OTOT: Order Total Display [TOT1] <> mnDomesticAmount03 [AN03]
               GC Taxed Extended Price [TAEXP] <> mnDomesticAmount04 [AN04]
               GC Extended Tax Amount [ETA] <> mnDomesticAmount05 [AN05]
               GC Foreign Extended Price [FEA] <> mnForeignAmount01 [AN16]
               GC Foreign Extended Cost [FEC] <> mnForeignAmount02 [AN17]
               FC FAP-Foreign Total Display [TOT2] <> mnForeignAmount03 [AN18]
               GC Foreign Taxed Extended Price [TFEA] <> mnForeignAmount04 [AN19]
               GC Foreign Extended Tax Amount [FETA] <> mnForeignAmount05 [AN20]
     End If
End If
//
//      Retain the quantity ordered for Kit maintenance processing.
//
VA grd_UORG_OrigQtyOrdered [UORG] = GC Quantity Ordered [UORG]
// sar 5057954
VA grd_OrigParentBranchPlant_MCU [MCU] = GC Business Unit [MCU]
// sar 5057954 end
//
//      SAR # 1028831
//      Check for Substitute Items by calling Business Function N4201100
//
//
// SAR 7228286
If VA evt_mnShortItemNumber_ITM [ITM] is less than or equal to <Blank>
     VA evt_mnShortItemNumber_ITM [ITM] = GC Short Item No [ITM]
Else
End If
//      Only process lines that have not been cancelled
//
If GC Last Stat [LTTR] is less than or equal to "980"
     VA frm_NumberofCacheEntries [RRN] = 0
     VA frm_CacheRRN [RRN] = 0
     //
     //      If Stocking Type is either O for Obsolete, or
     //      U for Obsolete - Use Up, then treat as a Replacement
     //      and set the variable VA_frmXRefType from the Processing Options
     //
     If VA grd_STKT_Stocking_Type [STKT] is equal to "O"
     Or VA grd_STKT_Stocking_Type [STKT] is equal to "U"
          VA frm_Replacement [RPL] = "Y"
          VA frm_SubstituteIndicator [SO05] = "1 "
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "O"
               VA frm_QuantityToPass [SOQS] = GC Quantity Ordered [UORG]
          End If
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "U"
               VA frm_QuantityToPass [SOQS] = [GC Quantity Backordered [SOBK]]+[GC Quantity Canceled [SOCN]]
          End If
          // ***********************************************************************
          // SAR 2939370 - Begin Add
          // ***********************************************************************
          If VA frm_szReplacementXref_XRT [XRT] is not equal to PO szReplacementItemXREF [XRT3]
               GetUDC(X0005.GetUDC)
                    UNDEFINED <> szDataDictionaryItem [DTAI]
                    "41" -> szSystemCode [SY]
                    "DT" -> szRecordTypeCode [RT]
                    PO szReplacementItemXREF [XRT3] -> szUserDefinedCode [KY]
                    "2.00" -> mnKeyFieldLength [AS]
                    UNDEFINED <> szLanguagePreference [LNGP]
                    UNDEFINED <> szDescription001 [DL01]
                    UNDEFINED <> szDescription002 [DL02]
                    UNDEFINED <> szSpecialHandlingCode [SPHD]
                    UNDEFINED <> cUdcOwnershipFlag [UDCO]
                    UNDEFINED <> cHardCodedYn [HRDC]
                    "1" -> cSuppressErrorMessage [EV01]
                    VA frm_sz_ErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
                    UNDEFINED <> cUDCOne [EV01]
               If VA frm_sz_ErrorMessage_DTAI [DTAI] is equal to <Blank>
                    VA frm_szReplacementXref_XRT [XRT] = PO szReplacementItemXREF [XRT3]
               Else
                    VA frm_szReplacementXref_XRT [XRT] = <Blank>
               End If
          End If
          VA frm_XRefType [XRT] = VA frm_szReplacementXref_XRT [XRT]
          // SAR 2939370 - End Add
     Else
          VA frm_Replacement [RPL] = <Blank>
          VA frm_SubstituteIndicator [SO05] = "1"
          //
          VA frm_QuantityToPass [SOQS] = [GC Quantity Backordered [SOBK]]+[GC Quantity Canceled [SOCN]]
          // ***********************************************************************
          // SAR 2939370 - Begin Add
          // ***********************************************************************
          If VA frm_szSubstituteXref_XRT [XRT] is not equal to PO szSubstituteItemXRef [XRT]
               GetUDC(X0005.GetUDC)
                    UNDEFINED <> szDataDictionaryItem [DTAI]
                    "41" -> szSystemCode [SY]
                    "DT" -> szRecordTypeCode [RT]
                    PO szSubstituteItemXRef [XRT] -> szUserDefinedCode [KY]
                    "2.00" -> mnKeyFieldLength [AS]
                    UNDEFINED <> szLanguagePreference [LNGP]
                    UNDEFINED <> szDescription001 [DL01]
                    UNDEFINED <> szDescription002 [DL02]
                    UNDEFINED <> szSpecialHandlingCode [SPHD]
                    UNDEFINED <> cUdcOwnershipFlag [UDCO]
                    UNDEFINED <> cHardCodedYn [HRDC]
                    "1" -> cSuppressErrorMessage [EV01]
                    VA frm_sz_ErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
                    UNDEFINED <> cUDCOne [EV01]
               If VA frm_sz_ErrorMessage_DTAI [DTAI] is equal to <Blank>
                    VA frm_szSubstituteXref_XRT [XRT] = PO szSubstituteItemXRef [XRT]
               Else
                    VA frm_szSubstituteXref_XRT [XRT] = <Blank>
               End If
          End If
          VA frm_XRefType [XRT] = VA frm_szSubstituteXref_XRT [XRT]
          // SAR 2939370 - End Add
     End If
     //
     // SAR 5712470
     If VA frm_XRefType [XRT] is not equal to <Blank>
     And VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
          If VA frm_QuantityToPass [SOQS] is greater than "0"
               // ***********************************************************************
               // SAR 2939370 - Begin Add
               // ***********************************************************************
               If VA frm_cSubstituteAllowed_SBAL [SBAL] is equal to <Blank>
               Or VA frm_cSubstituteAllowed_SBAL [SBAL] is equal to <NULL>
                    F42UI01CacheWF_ExistentCheck(B4201550.F42UI01CacheWF_ExistentCheck)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                         VA frm_EV22_cCacheOn [EV22] -> cCheck_1WF_2Cache [EV01]
                         VA frm_Char_EV09 [EV09] <- cF42UI01RecordFound [EV01]
                         UNDEFINED -> cSuppressErrorMessage [SUPPS]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         VA frm_cSubstituteAllowed_SBAL [SBAL] <- cSubstitutesAllowedYN [SBAL]
                         VA frm_cItemRestrictions_EDF2 [EDF2] <- cItemRestrictions [EDF2]
                         UNDEFINED <> szFreightHandlingCode [FRTH]
               End If
               // SAR 2939370 - End Add
               // ***********************************************************************
               // SAR 2939370 - Begin/End Change
               // Add Substitute Allowed and Item Restrictions as parms.
               // ***********************************************************************
               // SAR 7228286
               F4104GetXRefItems(N4201100.F4104GetXRefItems)
                    "0" -> cModusOperandi [MODE]
                    VA frm_NumberofCacheEntries [RRN] <> mnNumberofCacheEntries [RRN]
                    FC Address Number [AN8] -> mnAddressNumberSoldTo [AN8]
                    GC Business Unit [MCU] -> szBranchPlant [MCU]
                    VA frm_XRefType [XRT] -> szXRefType [XRT]
                    GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
                    GC PR UM [UOM4] -> szUnitOfMeasurePricing [UOM4]
                    VA frm_QuantityToPass [SOQS] <> mnQuantity [QTY]
                    GC Request Date [DRQJ] -> jdDateTransactionJulian [TRDJ]
                    VA frm_Replacement [RPL] -> cReplacement [RPL]
                    GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                    VA frm_SubstituteIndicator [SO05] -> cSubstituteIdicator [SO05]
                    VA evt_mnShortItemNumber_ITM [ITM] -> mnIdentifierShortItem [ITM]
                    VA frm_CacheRRN [RRN] <> mnCacheRRN [RRN]
                    "0" -> cAllOrAvailable [EV09]
                    GC Ln Ty [LNTY] -> szLineType [LNTY]
                    VA frm_cSubstituteAllowed_SBAL [SBAL] -> cSubstitutesAllowedYN [SBAL]
                    VA frm_cItemRestrictions_EDF2 [EDF2] -> cItemRestrictions [EDF2]
                    "DT" -> szUDCRecordType [RT]
               //
               //      If Xref details found, indicate that this Grid Row needs further
               //      inspection by setting the Row Header Bitmap
               //
               If VA frm_NumberofCacheEntries [RRN] is greater than "0"
                    Set Grid Row Bitmap(FC Grid, <Current Row>,  <Check Mark>)
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "SUBS_XREF")
                    // SAR 4393841 - don't set checkmark on the web
                    If SV Engine_Type is equal to CO WINDOWS_ENGINE
                         Set Grid Font(FC Grid, <Current Row>, GC SubstituteItem Exists, <Wingdings,Regular,12,Black>)
                         // SAR 8379465
                         GC Subsitution Exists [SBST] = ü
                    Else
                         GC Subsitution Exists [SBST] = "X"
                    End If
               Else
                    GC Subsitution Exists [SBST] = <NULL>
                    // SAR 8926330 Attachement icon disappears
                    If GC Blankets Exists [BLKT] is equal to or empty <Blank>
                    And GC Agreement Exists [AGRE] is equal to or empty <Blank>
                    And GC Association Exists [ASSC] is equal to or empty <Blank>
                    And GC Associated Text [ATXT] is equal to or empty <Blank>
                         // SAR 6476931 Clear Check Mark
                         Set Grid Row Bitmap(FC Grid, <Currently Selected Row>,  <Blank/Clear>)
                    End If
               End If
          End If
     End If
End If
//
//      Check for Complimentary Items by calling Business Function N4201100
//
// SAR 5712470
If PO szComplementaryItemXRef [XRT2] is not equal to <Blank>
And VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
     VA frm_NumberofCacheEntries [RRN] = 0
     VA frm_CacheRRN [RRN] = 0
     VA frm_QuantityToPass [SOQS] = [GC Quantity Shipped [SOQS]]+[GC Quantity Backordered [SOBK]]
     VA frm_XRefType [XRT] = PO szComplementaryItemXRef [XRT2]
     // SAR 2939370 - Begin Add
     If VA frm_szAssociatedXref_XRT [XRT] is not equal to PO szComplementaryItemXRef [XRT2]
          GetUDC(X0005.GetUDC)
               UNDEFINED <> szDataDictionaryItem [DTAI]
               "41" -> szSystemCode [SY]
               "DT" -> szRecordTypeCode [RT]
               PO szComplementaryItemXRef [XRT2] -> szUserDefinedCode [KY]
               "2.00" -> mnKeyFieldLength [AS]
               UNDEFINED <> szLanguagePreference [LNGP]
               UNDEFINED <> szDescription001 [DL01]
               UNDEFINED <> szDescription002 [DL02]
               UNDEFINED <> szSpecialHandlingCode [SPHD]
               UNDEFINED <> cUdcOwnershipFlag [UDCO]
               UNDEFINED <> cHardCodedYn [HRDC]
               "1" -> cSuppressErrorMessage [EV01]
               VA frm_sz_ErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
               UNDEFINED <> cUDCOne [EV01]
          If VA frm_sz_ErrorMessage_DTAI [DTAI] is equal to <Blank>
               VA frm_szAssociatedXref_XRT [XRT] = PO szComplementaryItemXRef [XRT2]
          Else
               VA frm_QuantityToPass [SOQS] = "0"
          End If
     End If
     // SAR 2939370 - End Add
     VA frm_Replacement [RPL] = <Blank>
     VA frm_SubstituteIndicator [SO05] = <Blank>
     // BUG 12607635 - Display associated items for negative quantity also
     If VA frm_QuantityToPass [SOQS] is not equal to "0"
          // SAR 2939370 - Begin Add
          If VA frm_cSubstituteAllowed_SBAL [SBAL] is equal to <Blank>
          Or VA frm_cSubstituteAllowed_SBAL [SBAL] is equal to <NULL>
               F42UI01CacheWF_ExistentCheck(B4201550.F42UI01CacheWF_ExistentCheck)
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                    VA frm_EV22_cCacheOn [EV22] -> cCheck_1WF_2Cache [EV01]
                    VA frm_Char_EV09 [EV09] <- cF42UI01RecordFound [EV01]
                    UNDEFINED -> cSuppressErrorMessage [SUPPS]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    VA frm_cSubstituteAllowed_SBAL [SBAL] <- cSubstitutesAllowedYN [SBAL]
                    VA frm_cItemRestrictions_EDF2 [EDF2] <- cItemRestrictions [EDF2]
                    UNDEFINED <> szFreightHandlingCode [FRTH]
          End If
          // SAR 2939370 - End Add
          // SAR 2939370 - Begin/End Change
          // Add Substitute Allowed and Item Restrictions as parms.
          // SAR 7228286
          F4104GetXRefItems(N4201100.F4104GetXRefItems)
               "0" -> cModusOperandi [MODE]
               VA frm_NumberofCacheEntries [RRN] <> mnNumberofCacheEntries [RRN]
               FC Address Number [AN8] -> mnAddressNumberSoldTo [AN8]
               GC Business Unit [MCU] -> szBranchPlant [MCU]
               VA frm_XRefType [XRT] -> szXRefType [XRT]
               GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
               GC PR UM [UOM4] -> szUnitOfMeasurePricing [UOM4]
               VA frm_QuantityToPass [SOQS] <> mnQuantity [QTY]
               GC Request Date [DRQJ] -> jdDateTransactionJulian [TRDJ]
               VA frm_Replacement [RPL] -> cReplacement [RPL]
               GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
               VA frm_SubstituteIndicator [SO05] -> cSubstituteIdicator [SO05]
               VA evt_mnShortItemNumber_ITM [ITM] -> mnIdentifierShortItem [ITM]
               VA frm_CacheRRN [RRN] -> mnCacheRRN [RRN]
               "0" -> cAllOrAvailable [EV09]
               GC Ln Ty [LNTY] -> szLineType [LNTY]
               VA frm_cSubstituteAllowed_SBAL [SBAL] -> cSubstitutesAllowedYN [SBAL]
               VA frm_cItemRestrictions_EDF2 [EDF2] -> cItemRestrictions [EDF2]
               "DT" -> szUDCRecordType [RT]
          //
          //      If Xref details found, indicate that this Grid Row needs further
          //      inspection by setting the Row Header Bitmap
          //
          If VA frm_NumberofCacheEntries [RRN] is greater than "0"
               Set Grid Row Bitmap(FC Grid, <Current Row>,  <Check Mark>)
               // SAR 8379465
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "ASSC_XREF")
               // SAR 4393841 - don't set checkmark on the web
               If SV Engine_Type is equal to CO WINDOWS_ENGINE
                    Set Grid Font(FC Grid, <Current Row>, GC AssociatedItem Exists, <Wingdings,Regular,12,Black>)
                    GC Association Exists [ASSC] = ü
               Else
                    GC Association Exists [ASSC] = "X"
               End If
          Else
               GC Association Exists [ASSC] = <NULL>
               // SAR 8926330 Attachement icon disappears
               If GC Agreement Exists [AGRE] is equal to or empty <Blank>
               And GC Blankets Exists [BLKT] is equal to or empty <Blank>
               And GC Subsitution Exists [SBST] is equal to or empty <Blank>
               And GC Associated Text [ATXT] is equal to or empty <Blank>
                    // SAR 6476931 Clear Check Mark
                    Set Grid Row Bitmap(FC Grid, <Currently Selected Row>,  <Blank/Clear>)
               End If
          End If
     End If
End If
//
// SAR # 1028831
// End of additions for Get Substitute/Complementary/Replacement
// Items - BF N4201100
//
// SAR 2559764 Delete Add condition
// SAR 8347068   Show S/D for if ICP is ON and Backorder>0,IF ICP is OFF then
// Show S/D  Quantity Available<0
VA evt_ShowSupplyAndDemand_EV01 [EV01] = "0"
If PO cAutoDisplaySDInquiry [EV20] is equal to "1"
And PO cAvailabilityCheck [EV12] is equal to ("1","2")
And GC Quantity Available [QAVAL] is less than "0"
     VA evt_ShowSupplyAndDemand_EV01 [EV01] = "1"
Else
     If PO cAutoDisplaySDInquiry [EV20] is equal to "1"
     And PO cAvailabilityCheck [EV12] is equal to ("1","2")
     And PO cCommitPreference [EV23] is equal to ("1","2")
     And GC Quantity Backordered [SOBK] is greater than "0"
          VA evt_ShowSupplyAndDemand_EV01 [EV01] = "1"
     End If
End If
If VA evt_ShowSupplyAndDemand_EV01 [EV01] is equal to "1"
     // SAR 1778455
     RetrieveStringElement(B4002410.RetrieveStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
          "39" -> nPosition [INT01]
          VA frm_EV07_Misc_Button_Process [EV07] <- cCharacter [EV01]
     If VA frm_EV07_Misc_Button_Process [EV07] is not equal to "1"
          VA frm_EV07_Misc_Button_Process [EV07] = "1"
          Clear Grid Buffer(FC Grid)
          Copy Grid Row To Grid Buffer(FC Grid,  <Current Row>)
          //
          // SAR 2667992
          VA evt_jdOldSchedulePickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
          //
          // SAR 8953108 - Apparel Enhancement
          // Check if its an Apparel root Item and reset the flag so that Supply &
          // Demand Inquiry (P4021) is not called for Apparel Root Item.
          //
          If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
               If GC Row Inserted  From PCW10 [EV01] is not equal to "1"
                    CheckApparelMatrixItem(B41F0040.CheckApparelMatrixItem)
                         GC Short Item No [ITM] -> mnItemNumberShort_Apparel [C9ITM]
                         VA grd_cApparelRootItem_EV01 [EV01] <- cRootItem [EV01]
                    If VA grd_cApparelRootItem_EV01 [EV01] is equal to "1"
                         VA frm_EV07_Misc_Button_Process [EV07] = "0"
                    End If
               End If
          End If
          //
          // SAR 8953108 - Modification for Apparel Enhancement to check the flag=1
          //
          If VA frm_EV07_Misc_Button_Process [EV07] is equal to "1"
               Press Button(FC Misc Button Processing)
          End If
          //
          // SAR 2667992
          If GB Sched Pick [PDDJ] is not equal to VA evt_jdOldSchedulePickDate_PDDJ [PDDJ]
               GC Sched Pick [PDDJ] = GB Sched Pick [PDDJ]
               //
               // Begin SAR 5145014 - ADD
               GC Promised Ship [PPDJ] = <Blank>
               GC Promised Delivery [RSDJ] = <Blank>
               If PO cAvailabilityCheck [EV12] is not equal to <Blank>
               And PO cAvailabilityCheck [EV12] is not equal to <NULL>
                    GC Quantity Shipped [SOQS] = "0"
                    GC Quantity Canceled [SOCN] = "0"
                    GC Quantity Backordered [SOBK] = "0"
               End If
               // End SAR 5145014 - ADD
               //
               // SAR 3011549 - Begin/End CHANGE
               // SAR 2147209 - Begin/End CHANGE
               // SAR 3406866, Pass in/out PEID and TCID
               // SAR 4222621- pass Item Number and Short Item Number both directions to allow
               // the MBF to be called with short item number and return all other item numbers
               //
               // SAR 4730705 - changed the form variable frm_MATH02_Num_Agreements to
               // grid variable grd_MATH02_Num_Agreements for agreements found
               // SAR 5216847 - pass in/out SOEF
               // SAR 5266271 - pass in/out override and list prices
               // SAR 5330594 - sales based on date: pass in out GC price effective date
               // SAR 5413648 - pass APUM in/out of edit line
               // Sar 5192654 - Extended Price Rounding
               If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
                    // SAR 8955603 - Also get currency info for taxed extended prices and extended
                    // tax amounts.
                    DecimalsTriggerGetbyCRDCCRCD(B1100008.DecimalsTriggerGetbyCRDCCRCD)
                         FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                         FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                         GC Extended Price [AEXP] <> mnDomesticAmount01 [AN01]
                         GC Extended Cost [ECST] <> mnDomesticAmount02 [AN02]
                         FC OTOT: Order Total Display [TOT1] <> mnDomesticAmount03 [AN03]
                         GC Taxed Extended Price [TAEXP] <> mnDomesticAmount04 [AN04]
                         GC Extended Tax Amount [ETA] <> mnDomesticAmount05 [AN05]
                         GC Foreign Extended Price [FEA] <> mnForeignAmount01 [AN16]
                         GC Foreign Extended Cost [FEC] <> mnForeignAmount02 [AN17]
                         FC FAP-Foreign Total Display [TOT2] <> mnForeignAmount03 [AN18]
                         GC Foreign Taxed Extended Price [TFEA] <> mnForeignAmount04 [AN19]
                         GC Foreign Extended Tax Amount [FETA] <> mnForeignAmount05 [AN20]
               End If
               // SAR 5192654 - End
               // SAR 5510106 - Begin/End CHANGE
               // SAR 5098650 - Return Lot Number and assign to Grid Column
               // SAR 5589272 - Begin/End CHANGE -Pass new parameters
               // SAR 5946188
               // SAR 6386961 - Pass Release Number
               // SAR 6368922 - Pass GC Associated Text
               // SAR 7812378  - Pass Customer PO
               // SAR 7972793 - Pass GC Customer PO instead of FC Customer PO
               // SAR 8805516 - Pass the GC CreditJobNumber to mnSODRelatedJobNumber
               // SAR 8918535 - Replaced from GC Credit Job Number to Evt Credit Job Number
               // SAR 8955602 - Passed new tax variables (GC values) to Edit Line function
               // Edit Line commits the Unit Tax Price values to F4211TX table
               // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
               // Production Short Number and SupressProdNoGenerate
               F4211FSEditLine(B4200310.F4211FSEditLine)
                    FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                    VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                    VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                    VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                    VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                    VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                    VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    FC Order Company [KCOO] <> szOrderCo [KCOO]
                    FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    FC Order Type [DCTO] <> szOrderType [DCTO]
                    GC Line Number [LNID] <> mnLineNo [LNID]
                    GC Business Unit [MCU] <> szBusinessUnit [MCU]
                    GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                    GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                    GC Sched Pick [PDDJ] <> jdPromisedDate [PDDJ]
                    GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                    GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                    GC Item Number [UITM] <> szItemNo [UITM]
                    GC Location  [LOCN] <> szLocation [LOCN]
                    GC Lot Serial Number [LOTN] <> szLotNo [LOTN]
                    GC Description  [DSC1] <> szDescription1 [DSC1]
                    GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                    GC Ln Ty [LNTY] <> szLineType [LNTY]
                    GC Last Stat [LTTR] <> szLastStatus [LTTR]
                    GC Next Stat [NXTR] <> szNextStatus [NXTR]
                    GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                    GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                    GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                    GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                    GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                    GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                    GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                    GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                    GC Print Message [INMG] <> szPrintMesg [INMG]
                    GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                    GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                    GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                    GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                    GC UM  [UOM] <> szTransactionUOM [UOM]
                    GC PR UM [UOM4] <> szPricingUOM [UOM4]
                    GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                    GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                    GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                    GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                    GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                    GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                    GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                    "EP4210" -> szCMProgramID [JPID]
                    VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                    GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                    GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                    GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                    GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                    GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
                    GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                    VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                    VA frm_USER_User_ID [USER] <> szUserID [USER]
                    VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                    FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                    VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                    VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                    VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                    GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                    PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                    VA grd_STKT_Stocking_Type [STKT] <> cStockingType [STKT]
                    GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                    GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                    GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                    GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                    GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                    GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                    VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                    GC Short Item No [ITM] <> mnShortItemNo [ITM]
                    VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                    VA grd_AREV_Rev_Lev [AREV] <> mnPriceAdjRevLevel [AREV]
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                    FC Business Unit 2 [MCU2] <> szTransferOrderToBranch [TMCU]
                    VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                    VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                    FC Order Number [DOC2] <> mnSODWFLineNo [DOC]
                    FC Order Type [DCIN] <> szGeneric2CharString [DCT]
                    FC Exchange Rate (Divisor) [CRRD] <> mnTOEPOExchangeRate [CRRD]
                    FC To Currency Code [CRDC] <> szTOEPOCurrencyCode [CRCE]
                    GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
                    GC Price Effective Date [PEFJ] <> jdPriceEffectiveDate [PEFJ]
                    VA grd_LINN_LineNbrIncrement [LINN] -> mnLineNoIncrement [LINN]
                    VA grd_SLNE_LineNumber [SLNE] -> mnParentWFLineNo [SLNE]
                    VA grd_cByPassCommitment_EV09 [EV09] -> cBypassCommitments [EV09]
                    VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
                    VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
                    VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
                    GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
                    GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
                    VA grd_MATH02_Num_Agreements [MATH02] <- mnAgreementsFound [AFND]
                    GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                    GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                    GC Line of Business [LOB] <> szLineofBusiness [LOB]
                    GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                    GC End Use [EUSE] <> szEndUse [EUSE]
                    GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                    GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                    GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                    GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                    VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                    VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                    VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                    VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                    GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                    GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                    VA evt_mnCreditJobnumber_JOBS [JOBS] <> mnSODRelatedJobNumber [MATH10]
                    GC Carrier Number [CARS] <> mnCarrier [CARS]
                    VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                    GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
                    GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
                    GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                    GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
                    GC Scheduled Ship Time [PMDT] <> mnScheduledShipmnentTime [PMDT]
                    VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                    GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                    GC Sec UM [UOM2] <> szDualUOM [UOM2]
                    VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] <> mnOverrideForeignBasePrice [OVFBPRC]
                    VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
                    VA grd_mnListPrice_LPRC [LPRC] <> mnListPrice [LPRC]
                    VA grd_mnListPriceForeign_FPRC [FPRC] <> mnForeignListPrice [FPRC]
                    VA grd_cItemCrossDockFlagYN_XDCK [XDCK] <- cCrossDockFlagYN [XDCK]
                    GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUoM [APUM]
                    FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                    FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                    FI szGlClass [GLC] -> szGlClass [GLC]
                    GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
                    GC Order Score Override [OSCOREO] <- cScoreOverride [OSCOREO]
                    GC Kit Identifier  [KITID] <> mnKitIdentifier [KITID]
                    GC Kit Component Dirty Flag [KITDIRTY] <> cKitComponentDirtyFlag [KITDIRTY]
                    VA evt_cKitProcessingRequired_EV1 [EV01] -> cKitProcessingRequired [EV11]
                    VA grd_LINN_From_Line_Number [LINN] <> mnKitFromLineNumber [LINN]
                    VA grd_LIN_Through_Line_Number [LIN] <> mnKitThruLineNumber [LIN]
                    GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                    GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                    GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                    GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                    GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                    GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                    GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                    GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                    GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                    GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                    GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                    GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                    VA grd_cSuppressPNGenerate_EV01 [EV01] <> cSuppressProdNoGenerate [EV01]
                    GC GeneratedProduction NumberShort [PNS] <> mnGeneratedProdNoShort [PNS]
                    VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
               //
               // Set edit-line error code, to check for enabling 'Kit&Config' RowExit.
               If VA frm_ERRC_Error_Code [ERRC] is greater than "0"
               Or VA frm_ERRC_Error_Code [ERRC] is greater than <Blank>
                    VA grd_EditLine_ErrorCode_ERRC [ERRC] = VA frm_ERRC_Error_Code [ERRC]
                    VA grd_EditLine_ErrorCode_ERRC [ERRC] = "1"
               End If
               ChangeStringElement(B4002410.ChangeStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                    "36" -> nPosition [INT01]
                    "1" -> cCharacter [EV01]
               // SAR 4924702 - Location exit
               VA grd_PreviousLocation_LOCN [LOCN] = GC Location  [LOCN]
               // SAR 5390765
               VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
          End If
          //
          Clear Grid Buffer(FC Grid)
          ChangeStringElement(B4002410.ChangeStringElement)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "39" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
     Else
          VA frm_EV07_Misc_Button_Process [EV07] = "0"
     End If
End If
// SAR # 2055734
If VA frm_cTransfer_Direct_Flag_S011 [SO11] is not equal to <Blank>
     If GC Primary Supplier [VEND] is not equal to <Blank>
          Disable Grid(FC Grid,  <Current Row>, GC SupplierNumber)
     End If
End If
//
// SAR 3202062 - if there is a ship to number, load the ship to description for
// CSS
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     If GC Ship To Number [SHAN] is greater than "0"
     And GC Ship To Number [SHAN] is not equal to <Blank>
     And GC Ship To Number [SHAN] is not equal to <NULL>
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               GC Ship To Number [SHAN] -> mnAddressNumber [AN8]
               GC Description  [DL01] <- szAddressBookDescription [ALPH]
     End If
End If
// SAR# 4541912 Begin
If VA grd_szDetailLineBSC [BSC] is equal to <Blank>
Or VA grd_szDetailLineBSC [BSC] is equal to <NULL>
     VA grd_szDetailLineBSC [BSC] = BC Buying Segment Code (F4211.0) [BSC]
End If
// SAR 5136951
If VA frm_cFreeGoodExitEnabled_EV01 [EV01] is not equal to "1"
     // SAR 5953388-Use Get function
     GetFreeGoodsFoundALPH17(B4205100.GetFreeGoodsFoundALPH17)
          GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
          VA grd_cFreeGoodExists_EV01 [EV01] <- cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     If VA grd_cFreeGoodExists_EV01 [EV01] is equal to "1"
          While VA frm_cFreeGoodExitEnabled_EV01 [EV01] is not equal to "1"
          And VA evt_szErrorMessageID [DTAI] is equal to <Blank>
          Or VA evt_szErrorMessageID [DTAI] is equal to <NULL>
               F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                    "2" -> cFile [EV01]
                    "5" -> cAction [EV02]
                    FI Computerid [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                    "1" -> cSuppressErrorMsg [EV03]
                    VA evt_szErrorMessageID [DTAI] <- szErrorMsgId [DTAI]
                    VA evt_idF45UI73CacheCursor [GENLNG] <> idhCursor [GENLNG]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentWFLineNo [RLLN]
                    "3" -> cNumKeys [EV04]
                    VA grd_szFreeGoodCatName [CATLG] <- szFreeGoodCatalogName [CATLG]
               If VA grd_szFreeGoodCatName [CATLG] is not equal to <Blank>
               And VA grd_szFreeGoodCatName [CATLG] is not equal to <NULL>
               And VA grd_szFreeGoodCatName [CATLG] is not equal to "0"
                    Enable Control(HC Free G&ood Catalog)
                    VA frm_cFreeGoodExitEnabled_EV01 [EV01] = "1"
                    // Close free good cache cursor
                    F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                         "2" -> cFile [EV01]
                         "6" -> cAction [EV02]
                         VA evt_idF45UI73CacheCursor [GENLNG] <> idhCursor [GENLNG]
               End If
          End While
     End If
End If
// SAR 4945140
VA grd_mnPrevProfitMargin_PRMG [PRMG] = GC % Profit Margin [PRMG]
//
// SAR#5113442
If GC Matrix Control Line Number [MCLN] is greater than "0"
     Disable Grid(FC Grid,  <Currently Selected Row>, GC LineNumber)
     // SAR# 5422528
     VA frm_cLineIncrementedY [EV01] = "0"
     If VA grd_cMatrixControlled123_MIC [MIC] is equal to "1"
          Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
     End If
End If
// SAR 5216847, 5953388
GetSuppressVIDAccumSOEL04(B4205101.GetSuppressVIDAccumSOEL04)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szEditLineSOEMBFFlags [SOEF]
     VA frm_cB4502340AccumFlag_EV01 [EV01] <- cValue [EV01]
     UNDEFINED <> cErrorCode [ERRC]
// End SAR 5216847
// SAR 5508057
If GC Promo Line [EV01] is equal to "1"
     // SAR 5836641
     If GC Price Over Cd [PROV] is equal to "1"
          //
          // SAR 5975077
          If VA grd_cManualAdjExists [EV01] is not equal to "1"
               F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                    "2" -> cActionCode [ACTN]
                    "2" -> cFromPrimaryFile [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerIdPrimary [CTID]
                    GC Promo Original LNIX Line Number [XLIN] -> mnLineNoPrimaryWF [XLIN]
                    FC Order Number [DOCO] -> mnDocNoPrimary [DOCO]
                    FC Order Type [DCTO] -> szDocTypePrimary [DCTO]
                    FC Order Company [KCOO] -> szKeyCoPrimary [KCOO]
                    GC Promo Original Line Number [LNID] -> mnLineNoPrimaryFile [LNID]
                    UNDEFINED <> cSumPrimaryFile [EV02]
                    UNDEFINED <> mnUnitPricePrimary [UPRC]
                    UNDEFINED <> mnForeignPricePrimary [FUP]
                    "2" -> cToSecondaryFile [EV03]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerIdSecondary [CTID]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNoSecondaryWF [XLIN]
                    FC Order Type [DCTO] -> szDocTypeSecondary [OCTO]
                    FC Order Company [KCOO] -> szKeyCoSecondary [OKCO]
                    GC Line Number [LNID] -> mnLineNoSecondaryFile [OGNO]
                    UNDEFINED <> cSumSecondaryFile [EV04]
                    UNDEFINED <> mnUnitPriceSecondary [UPRC]
                    UNDEFINED <> mnForeignPriceSecondary [FUP]
                    "1" -> cSuppressErrors [EV05]
                    UNDEFINED <> szErrorMessageId [DTAI]
                    FC Order Number [DOCO] -> mnDocNoSecondary [DOCO]
                    FI Jobnumber [JOBS] -> mnJobNoPrimary [JOBS]
                    FI Jobnumber [JOBS] -> mnJobNoSecondary [JOBS]
                    GC Promo Rev Level [AREV] -> mnAdjRevisionLvlPrimary [AREV]
                    "1" -> mnAdjRevisionLvlSecondary [AREV]
                    UNDEFINED <> cNumPrimaryKeys [EV06]
                    UNDEFINED <> mnSumDetachedPrimary [UPR2]
                    UNDEFINED <> mnFrgnSumDetachedPrimary [FUP]
                    UNDEFINED <> cNumSecondaryKeys [EV07]
                    UNDEFINED <> mnSumDetachedSecondary [UPR3]
                    UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
                    UNDEFINED <> mnUnitCostPrimary [UNCS]
                    UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
                    UNDEFINED <> mnUnitCostSecondary [UNCS]
                    UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
                    UNDEFINED <> szProgramId [PID]
                    UNDEFINED <> cAdjustmentTypePrimary [OLVL]
                    UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
                    UNDEFINED <> cProcessingMode [EV01]
                    FI mnProcessID [PEID] -> mnProcessIDPrimary [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionIDPrimary [TCID]
                    FI mnProcessID [PEID] -> mnProcessIDSecondary [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionIDSecondary [TCID]
                    UNDEFINED <> szOrderSuffixPrimary [SFXO]
                    UNDEFINED <> szOrderSuffixSecondary [SFXO]
                    UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
                    UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
                    UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
                    UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
                    UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
                    UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
                    UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
                    UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
                    UNDEFINED <> mnTierPrimary [TIER]
                    UNDEFINED <> mnTierSecondary [TIER]
                    UNDEFINED <> cIncludeOrExcludeCode [INX]
                    UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
                    UNDEFINED <> szCurrencyCodeFrom [CRCD]
                    UNDEFINED <> szCurrencyCodeTo [CRDC]
                    UNDEFINED <> mnTriangulationRateFrom [TRR1]
                    UNDEFINED <> mnTriangulationRateTo [TRR2]
                    UNDEFINED <> cCurrencyConversionMethod [CRCM]
                    UNDEFINED <> mnCurrencyConverRate [CRR]
          End If
          // SAR 5836641
          CheckPromoExclusivityConflict(N4500210.CheckPromoExclusivityConflict)
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
               FI mnProcessID [PEID] -> mnProcessID [PEID]
               FI mnTransactionID [TCID] -> mnTransactionID [TCID]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               "1" -> mnAdjustmentRevisionLevel [AREV]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               VA evt_cPromoExclusivityConflict [EV01] <- cExclusionConflictExistsYN [EV01]
               "S" -> cCallingMode [EV02]
          If VA evt_cPromoExclusivityConflict [EV01] is equal to "Y"
               Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "MEA")
          End If
     End If
Else
     // END SAR 5508057
     // SAR 5330594 - promotional items
     // SAR 5429375 - don't do promotional logic for direct ship or transfer orders
     If VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to <Blank>
     Or VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to <NULL>
     Or VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "0"
          If PO CrossReferencePromotional [XRT] is not equal to <Blank>
          And PO CrossReferencePromotional [XRT] is not equal to <NULL>
          And PO CrossReferencePromotional [XRT] is not equal to "0"
               If VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
                    If VA grd_ACTI_ActionHidden [ACTI] is equal to "D"
                    And GC Next Stat [NXTR] is equal to "999"
                         VA grd_cPromoAssigned_EV01 [EV01] = "1"
                    End If
                    If VA grd_cPromoAssigned_EV01 [EV01] is not equal to "1"
                         If FC To Currency Code [CRDC] is not equal to FC Currency Code [CRCD]
                              VA evt_mnForDomUnitPrice_UPRC [UPRC] = VA grd_mnListPriceForeign_FPRC [FPRC]
                              VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] = VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC]
                         Else
                              VA evt_mnForDomUnitPrice_UPRC [UPRC] = VA grd_mnListPrice_LPRC [LPRC]
                              VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] = VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC]
                         End If
                         VA evt_szPromoRevLev_CLVL [CLVL] = GC CLVL-PC Lev (wf) [CLVL]
                         // SAR 5413648 - pass APUM in
                         GetF4104PromotionalItem(N4004104.GetF4104PromotionalItem)
                              PO CrossReferencePromotional [XRT] -> szTypeCrossReferTypeC [XRT]
                              GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                              GC Price Effective Date [PEFJ] -> jdDateEffectiveJulian1 [EFTJ]
                              GB Item Number [UITM] <- szItemNoCustomerVendor [CITM]
                              UNDEFINED <> cBasePriceIndicator [BPIND]
                              UNDEFINED <> cAdjustmentIndicator [ADIND]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              GC Line Number [LNID] -> mnLineNumber [LNID]
                              VA evt_szPromoRevLev_CLVL [CLVL] <> szPricingCategoryLevel1 [CLVL]
                              PO cUseSubsItemPrice [EV15] -> cPriceSource [PSRC]
                              VA evt_mnForDomUnitPrice_UPRC [UPRC] -> mnOriginalItemBasePrice [UPRC]
                              VA evt_mnOverrideBasePrice_OVBPRC [OVBPRC] -> mnOverrideBasePrice [OVBPRC]
                              GB Price Over Cd [PROV] <- cPriceOverrideCode [PROV]
                              GC Adj. Schedule [ASN] -> szPriceAdjustmentScheduleN [ASN]
                              GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                              GC Business Unit [MCU] -> szCostCenter [MCU]
                              FC Address Number [AN8] -> mnSoldToCust [AN8]
                              GC Quantity Ordered [UORG] -> mnUnitsTransactionQty [UORG]
                              GC Ln Ty [LNTY] -> szLineType [LNTY]
                              FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                              FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
                              GC PR UM [UOM4] -> szUnitOfMeasurePricing [UOM4]
                              GC UM  [UOM] -> szTransactionUOM [UOM]
                              FC Mode (F) [CRRM] -> cCurrencyMode [CRRM]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              GB Unit Price [UPRC] <- mnUnitPrice [UPRC]
                              GB Foreign Unit Price [FUP] <- mnForeignUnitPrice [FUP]
                              VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFromCur [TRR1]
                              VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateToCurre [TRR2]
                              SL CurrencyProcessing -> cCurrencyConversionMethod [CRCM]
                              FC Exchange Rate [CRR] -> mnExchangeRate [CRR]
                              "S" -> cModeProcessing [MODE]
                              GC Item Number [UITM] -> szOriginalItemNo [UITM]
                              VA frm_szVersion_VERS [VERS] -> szVersion [VERS]
                              FC Order Date [TRDJ] -> jdTransactionDate [EFTJ]
                              VA evt_cPromoExists_EV01 [EV01] <- cF4104RecordExists [EV01]
                              VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUOM [APUM]
                         If VA evt_cPromoExists_EV01 [EV01] is equal to "1"
                              // SAR 5413648
                              GB UM  [UOM] = GC UM  [UOM]
                              // End SAR 5413648
                              GB Quantity Ordered [UORG] = GC Quantity Ordered [UORG]
                              IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                   GC Line Number [LNID] -> mnInputLineNumber [LNID]
                                   ".001" -> mnLineNumberIncrement [LNIX]
                                   GB Line Number [LNID] <- mnOutputLineNumber [XLIN]
                              ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                                   VA evt_szPromoRevLev_CLVL [CLVL] -> szInputString [AA15]
                                   VA evt_mnPromoRevNum_AREV [AREV] <- mnOutputMathNumeric [MATH01]
                                   UNDEFINED <- cReturnedErrorCode [ERR]
                              GB Promo Original LNIX Line Number [XLIN] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
                              GB Promo Original Line Number [LNID] = GC Line Number [LNID]
                              GB Promo Rev Level [AREV] = VA evt_mnPromoRevNum_AREV [AREV]
                              GB Promo Line [EV01] = "1"
                              // SAR 5975077 - Initialize ALPH string and set ALPH09
                              InitializeSOALPHString(B4205100.InitializeSOALPHString)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                              SetAdjTypesAppliedALPH09(B4205100.SetAdjTypesAppliedALPH09)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "1" -> cValue [EV01]
                                   UNDEFINED <> cErrorCode [ERRC]
                              // END SAR 5508057
                              GB CLVL-PC Lev (wf) [CLVL] = "1"
                              GB Last Stat [LTTR] = "917"
                              GC Last Stat [LTTR] = "990"
                              GC Next Stat [NXTR] = "999"
                              GC Quantity Shipped [SOQS] = "0"
                              GC Quantity Backordered [SOBK] = "0"
                              GC Quantity Canceled [SOCN] = GC Quantity Ordered [UORG]
                              GC Price Over Cd [PROV] = "1"
                              Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC AgreementExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC BlanketsExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid,  <Current Row>, GC AssociationExists, <Wingdings,Regular,12,Black>)
                              Set Grid Font(FC Grid, <Current Row>, GC SubsitutionExists, <Wingdings,Regular,12,Black>)
                              If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
                                   GC % Profit Margin [PRMG] = "0"
                              End If
                              // SAR 5308881 - pass in out deliver date - Date Sensitive Customer Sets
                              // SAR 5413648 - pass APUM in/out of edit line
                              // SAR 5510106 - Begin/End CHANGE
                              // SAR 5098650 - Return Lot Number and assign to Grid column
                              // SAR 5589272 - Begin/End CHANGE -Pass new parameters
                              // SAR 5946188
                              // SAR 6386961 - Pass Release Number
                              // SAR 6368922 - Pass GC Associated Text
                              //
                              // SAR 7812378 - Pass Customer PO
                              // SAR 7972793 - Pass GC Customer PO instead of FC Customer PO
                              // SAR 8805516 - Pass the GC CreditJobNumber to mnSODRelatedJobNumber
                              // SAR 8918535 - Replaced from GC Credit Job Number to Evt Credit Job Number
                              // SAR 8955602 - Passed new tax variables (GC values) to Edit Line function
                              // Edit Line commits the Unit Tax Price values to F4211TX table
                              // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
                              // Production Short Number and SupressProdNoGenerate
                              F4211FSEditLine(B4200310.F4211FSEditLine)
                                   FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                                   VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                                   VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                                   VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                                   VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                                   VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                                   VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                                   FC Order Company [KCOO] <> szOrderCo [KCOO]
                                   FC Order Number [DOCO] <> mnOrderNo [DOCO]
                                   FC Order Type [DCTO] <> szOrderType [DCTO]
                                   GC Line Number [LNID] <> mnLineNo [LNID]
                                   GC Business Unit [MCU] <> szBusinessUnit [MCU]
                                   GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                                   GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                                   GC Sched Pick [PDDJ] <> jdPromisedDate [PDDJ]
                                   GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                                   GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                                   GC Item Number [UITM] <> szItemNo [UITM]
                                   GC Location  [LOCN] <> szLocation [LOCN]
                                   GC Lot Serial Number [LOTN] <> szLotNo [LOTN]
                                   GC Description  [DSC1] <> szDescription1 [DSC1]
                                   GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                                   GC Ln Ty [LNTY] <> szLineType [LNTY]
                                   GC Last Stat [LTTR] <> szLastStatus [LTTR]
                                   GC Next Stat [NXTR] <> szNextStatus [NXTR]
                                   GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                                   GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                                   GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                                   GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                                   GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                                   GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                                   GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                                   GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                                   GC Print Message [INMG] <> szPrintMesg [INMG]
                                   GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                                   GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                                   GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                                   GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                                   GC UM  [UOM] <> szTransactionUOM [UOM]
                                   GC PR UM [UOM4] <> szPricingUOM [UOM4]
                                   GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                                   GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                                   GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                                   GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                                   GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                                   GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                                   GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                                   VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                                   "EP4210" -> szCMProgramID [JPID]
                                   VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                                   GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                                   GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                                   GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                                   GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                                   GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
                                   GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                                   VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                                   VA frm_USER_User_ID [USER] <> szUserID [USER]
                                   VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                                   FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                                   FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                                   VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                                   VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                                   VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                                   GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                                   PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                                   VA frm_LastLineNumOnAsynch_LNIX [LNIX] <> mnLastLineNoAssigned [LNIX]
                                   VA grd_STKT_Stocking_Type [STKT] <> cStockingType [STKT]
                                   GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                                   GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                                   GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                                   GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                                   GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                                   GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                                   VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                                   GC Short Item No [ITM] <> mnShortItemNo [ITM]
                                   VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                                   VA grd_SODLineNumber [LNID] -> mnSODLineNo [EDLN]
                                   VA grd_AREV_Rev_Lev [AREV] <> mnPriceAdjRevLevel [AREV]
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                                   VA grd_SODOrderNumber [DOCO] -> mnSODDocNo [EDOC]
                                   VA grd_SODOrderType [DCTO] -> szSODDocType [EDCT]
                                   VA grd_SODOrderCompany [KCOO] -> szSODOrderCo [EKCO]
                                   FC Business Unit 2 [MCU2] <> szTransferOrderToBranch [TMCU]
                                   VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                                   VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                                   FC Order Number [DOC2] <> mnSODWFLineNo [DOC]
                                   FC Order Type [DCIN] <> szGeneric2CharString [DCT]
                                   FC Exchange Rate (Divisor) [CRRD] <> mnTOEPOExchangeRate [CRRD]
                                   FC To Currency Code [CRDC] <> szTOEPOCurrencyCode [CRCE]
                                   GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
                                   GC Price Effective Date [PEFJ] <> jdPriceEffectiveDate [PEFJ]
                                   VA frm_mnWOLineNo_LNIX [LNIX] <- mnWOWFLineNo [LNIX]
                                   VA grd_LINN_LineNbrIncrement [LINN] -> mnLineNoIncrement [LINN]
                                   VA grd_SLNE_LineNumber [SLNE] -> mnParentWFLineNo [SLNE]
                                   VA grd_cByPassCommitment_EV09 [EV09] -> cBypassCommitments [EV09]
                                   VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
                                   VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
                                   VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
                                   GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
                                   GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
                                   VA grd_MATH02_Num_Agreements [MATH02] <- mnAgreementsFound [AFND]
                                   GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                                   GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                                   GC Line of Business [LOB] <> szLineofBusiness [LOB]
                                   GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                                   GC End Use [EUSE] <> szEndUse [EUSE]
                                   GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                                   GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                                   GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                                   GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                                   VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                                   VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                                   VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                                   VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                                   GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                                   GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                                   VA evt_mnCreditJobnumber_JOBS [JOBS] <> mnSODRelatedJobNumber [MATH10]
                                   GC Carrier Number [CARS] <> mnCarrier [CARS]
                                   VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                                   GC Unit Volume [ITVL] <> mnItemVolume_ITVL [ITVL]
                                   GC Vol U/M [VLUM] <> szVolumeUOM_VLUM [VLUM]
                                   GC Header Business Unit [EMCU] <> szRevenueBusinessUnit [EMCU]
                                   GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                                   FI mnProcessID [PEID] <> mnProcessID [PEID]
                                   FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                                   VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
                                   GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
                                   GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                                   GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
                                   GC Scheduled Ship Time [PMDT] <> mnScheduledShipmnentTime [PMDT]
                                   VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
                                   VA grd_szDetailLineBSC [BSC] <- szBuyingSegmentCode [BSC]
                                   VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                                   GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                                   GC Sec UM [UOM2] <> szDualUOM [UOM2]
                                   GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
                                   VA grd_szPromotionID_PMTN [PMTN] <> szPromotionID [PMTN]
                                   GC Project Number [PRJM] -> mnProjectNumber [PRJM]
                                   VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] <> mnOverrideForeignBasePrice [OVFBPRC]
                                   VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
                                   VA grd_mnListPrice_LPRC [LPRC] <> mnListPrice [LPRC]
                                   VA grd_mnListPriceForeign_FPRC [FPRC] <> mnForeignListPrice [FPRC]
                                   VA grd_cItemCrossDockFlagYN_XDCK [XDCK] <- cCrossDockFlagYN [XDCK]
                                   GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                                   VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUoM [APUM]
                                   FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                                   FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                                   GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
                                   GC Order Score Override [OSCOREO] <- cScoreOverride [OSCOREO]
                                   GC Kit Identifier  [KITID] <> mnKitIdentifier [KITID]
                                   GC Kit Component Dirty Flag [KITDIRTY] <> cKitComponentDirtyFlag [KITDIRTY]
                                   VA evt_cKitProcessingRequired_EV1 [EV01] -> cKitProcessingRequired [EV11]
                                   VA grd_LINN_From_Line_Number [LINN] <> mnKitFromLineNumber [LINN]
                                   VA grd_LIN_Through_Line_Number [LIN] <> mnKitThruLineNumber [LIN]
                                   GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                                   GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                                   GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                                   GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                                   GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                                   GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                                   GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                                   GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                                   GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                                   GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                                   GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                                   GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                                   VA grd_cSuppressPNGenerate_EV01 [EV01] <> cSuppressProdNoGenerate [EV01]
                                   GC GeneratedProduction NumberShort [PNS] <> mnGeneratedProdNoShort [PNS]
                                   VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
                              //
                              // Set edit-line error code, to check for enabling 'Kit&Config' RowExit.
                              If VA frm_ERRC_Error_Code [ERRC] is greater than "0"
                              Or VA frm_ERRC_Error_Code [ERRC] is greater than <Blank>
                                   VA grd_EditLine_ErrorCode_ERRC [ERRC] = VA frm_ERRC_Error_Code [ERRC]
                                   VA grd_EditLine_ErrorCode_ERRC [ERRC] = "1"
                              End If
                              ChangeStringElement(B4002410.ChangeStringElement)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                                   "36" -> nPosition [INT01]
                                   "1" -> cCharacter [EV01]
                              //
                              VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
                              // SAR 5942865 - Substitute text for multiple lines
                              TextSubstitutionErrorForMultLine(B4207010.TextSubstitutionErrorForMultLine)
                                   "42B6" -> szErrorMessageID [DTAI]
                                   UNDEFINED <> mnErrorCode [MATH06]
                                   GC Item Number [UITM] -> szSubstitutionText1 [DSCA]
                                   GB Item Number [UITM] -> szSubstitutionText2 [DSCA]
                                   UNDEFINED <> szSubstitutionText3 [DSCA]
                                   UNDEFINED <> szSubstitutionText4 [DSCA]
                                   UNDEFINED <> szSubstitutionText5 [DSCA]
                                   GC Item Number [UITM] -> szItemNo [UITM]
                                   UNDEFINED <> szGenericText1 [DESC]
                                   UNDEFINED <> szGenericText2 [DESC]
                                   UNDEFINED <> cGenericCharacter1 [EV01]
                                   UNDEFINED <> cGenericCharacter2 [EV01]
                                   UNDEFINED <> mnGenericMath1 [MATH01]
                                   UNDEFINED <> mnGenericMath2 [MATH01]
                              Get Max Grid Rows(FC Grid, VA evt_mnNumGridRows_LNID)
                              Insert Grid Buffer Row(FC Grid, VA evt_mnNumGridRows_LNID,  <Yes>,  <No>,  <Yes>,  <Yes>,  <Yes>)
                              VA grd_cPromoAssigned_EV01 [EV01] = "1"
                         End If
                    End If
               End If
          End If
     End If
End If
// End SAR 5330594
// SAR 5330594 - sales based on date
VA grd_jdPrevPriceEffDate_PEFJ [PEFJ] = GC Price Effective Date [PEFJ]
// SAR 5510587
If PO mnVolumeTolerancePercentage [INCRAM] is not equal to <Blank>
And PO mnVolumeTolerancePercentage [INCRAM] is not equal to <NULL>
And PO mnVolumeTolerancePercentage [INCRAM] is not equal to "0"
     // SAR 5953388-Use Get function
     GetUpsellCacheExistsSOEL09(B4205101.GetUpsellCacheExistsSOEL09)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szEditLineSOEMBFFlags [SOEF]
          VA grd_cVolumeUpsellExists_EV01 [EV01] <- cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     If VA grd_cVolumeUpsellExists_EV01 [EV01] is equal to "1"
          If SV Engine_Type is equal to CO WINDOWS_ENGINE
               Set Grid Font(FC Grid, <Currently Selected Row>, GC UpSellExists, <Wingdings,Regular,12,Black>)
               GC Volume UpSell Opportunity Exists [UPEX] = ü
          Else
               GC Volume UpSell Opportunity Exists [UPEX] = "X"
          End If
          If VA frm_cUpsellWarningSet_EV01 [EV01] is not equal to "1"
               Set Control Error(FC Grid, "45UP")
               VA frm_cUpsellWarningSet_EV01 [EV01] = "1"
          End If
          Enable Control(HC Volume Based UpSell)
     Else
          If SV Engine_Type is equal to CO WINDOWS_ENGINE
               GC Volume UpSell Opportunity Exists [UPEX] = <NULL>
          Else
               GC Volume UpSell Opportunity Exists [UPEX] = <NULL>
          End If
          //    SAR 7481433 Begin
          ! Disable Control(HC Volume Based UpSell)
          //    SAR 7481433 End
     End If
End If
// End SAR 5510587
//
// Begin SAR 6108910
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
     If GC It Mg [IFLA] is not equal to <Blank>
     Or GC It Mg [IFLA] is not equal to <NULL>
          Show Grid Column(FC Grid, GC Item FlashMessage)
     End If
End If
// End SAR 6108910
// SAR 6851244 - Begin
VA frm_MCU_ToBranch_Previous [MCU] = "     "
// SAR 6851244 - End
//
// SAR 6925223
// For configured item, need to call the partslist cache at the Post OK button
// click . Set the flag here based on the stocking type.
//
// SAR 8585461 - Scenario Manager processing option removed
If VA frm_cCallParttsListCache_EV01 [EV01] is not equal to "1"
And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
And PO cOrderPromising [EV01] is equal to "1"
     VA frm_cCallParttsListCache_EV01 [EV01] = "1"
End If
//
// SAR 6887706 - Save off dates for comparion in Col Exit & Changed
If VA grd_jdOrigDeliveryDate_RSDJ [RSDJ] is less than or equal to Null Date
     VA grd_jdOrigDeliveryDate_RSDJ [RSDJ] = GC Promised Delivery [RSDJ]
End If
If VA grd_jdOrigShipDate_PPDJ [PPDJ] is less than or equal to Null Date
     VA grd_jdOrigShipDate_PPDJ [PPDJ] = GC Promised Ship [PPDJ]
End If
//
// SAR 7855925 - Begins
VA frm_DateRequested_DRQJ [DRQJ] = GC Request Date [DRQJ]
// SAR 7855925 - Ends
//
// Set one variable that indicates Row Exit And Change Asynch Event gets
// triggered for the line-This change is done for Order Promising
VA grd_RowExitChangeAsynchTrigger [EV01] = "1"
// SAR 7999777
If VA grd_jdOrigPickDate_PDDJ [PDDJ] is less than or equal to Null Date
     VA grd_jdOrigPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
End If
// SAR# 7979979 - If the whole quantity is cancelled the Next status gets
// changed to 999. this is the condition when the row should be disbabled  to
// avoid  the override.
If GC Next Stat [NXTR] is equal to "999"
     Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
     VA grd_cEnableHCBlanketOrders [EV01] = "0"
     GC Blankets Exists [BLKT] = <NULL>
     //
     // SAR 8745728 - Clear the BitMap only if Substitue does not exist, because
     // Obsolete items gets cancelled; but if Substitute exists the check mark
     // should stay
     If GC Subsitution Exists [SBST] is equal to <Blank>
          Set Grid Row Bitmap(FC Grid, <Currently Selected Row>,  <Blank/Clear>)
     End If
End If
// SAR 8311364 - Load the SO08 grid variable for Reprice Order form exit to
// use.
GetPricingSOLineInfoALPH08(B4205100.GetPricingSOLineInfoALPH08)
     GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
     VA grd_SO08_Price_Adj_Line [SO08] <- cValue [EV01]
//
// SAR 8953108 - Apparel Enhancement
// Check if Apparel Matrix Item is entered and call the Apparel Matrix Entry
// (PCW10). Do not go through this check if the Edit Line call for Apparel
// Matrix Root Item errors out  or the row is added from PCW10. New rows
// from PCW10 is added by Load Grid From Cache Button and it sets
// GC Row Inserted From PCW10 = 1 to indicate the row is added by PCW10
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
          If GC Row Inserted  From PCW10 [EV01] is not equal to "1"
               VA frm_cApprlPressButtonMode_EV01 [EV01] = "3"
               Press Button(FC CallApparelMatrixEntry)
               //
               // If the PCW10 is called for Apparel Matrix Item, then current grid row is
               // already deleted.Do not process the rest of this event for the deleted row.
               //
               If VA frm_cApparelItemProcessed_EV01 [EV01] is equal to "1"
                    VA frm_cApparelItemProcessed_EV01 [EV01] = <NULL>
                    Stop Processing
               End If
          End If
          //
          // Validate whether the Item exists in the Collection by checking against
          // FCW07 and throw error or warning based on the processing option.
          //
          If VA frm_cCollectionInfoNotBlank_YN [YN] is equal to "Y"
          And GC Short Item No [ITM] is greater than "0"
          And GC Next Stat [NXTR] is not equal to "999"
               If PO cValidateItemsWithCollection [EV01] is equal to "1"
               Or PO cValidateItemsWithCollection [EV01] is equal to "2"
                    FCW07.FetchSingle  [Index 1: Collection Detail]
                         FC Collection [C9COLL] = TK Collection [C9COLL]
                         FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                         FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
                         GC Short Item No [ITM] = TK Short Item Number [C9ITM]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         If PO cValidateItemsWithCollection [EV01] is equal to "1"
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E41F03")
                         Else
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E41F04")
                         End If
                    End If
               End If
          End If
          //
     End If
End If
//
// Bug# 11904723 - PMPN Enhancement - Begin
If VA grd_cSuppressPNGenerate_EV01 [EV01] is not equal to "2"
     If GC Production Number [PMPN] is equal to <Blank>
     Or GC Production Number [PMPN] is equal to <NULL>
          Enable Control(HC Generate Prod No.)
     Else
          Disable Control(HC Generate Prod No.)
     End If
Else
     Disable Control(HC Generate Prod No.)
End If
VA grd_cProdNoChangedYN_EV01 [EV01] = "0"
VA grd_cProdNoGeneratedYN_EV01 [EV01] = "0"
// Bug# 11904723 - PMPN Enhancement - End
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Parent Business Unit
Event: Control Exited/Changed-Asynch
Event GUID: 8336bb01-31f9-11d2-9a97-0000f64da757
=============================================
If PO cTransferOrderEntry [EV25] is equal to "1"
     //
     //      Retrieve address and currency codes for From Branch Plant
     //
     F41001GetAddressNoFromBranch(N4101280.F41001GetAddressNoFromBranch)
          <Blank> -> szSystemCode [SY]
          FC Parent Business Unit [MCU1] -> szCostCenter [MCU]
          VA frm_AN8_Supplier [AN8] <- mnAddressNumber [AN8]
     If FC Parent Business Unit [MCU1] is less than or equal to <Blank>
          // SAR 5406608 Begins
          If VA frm_cFlagEverestEventPoint01 [EV01] is not equal to "1"
               Set Control Error(FC From Branch/Plant, "0003")
          Else
               VA frm_cFlagEverestEventPoint01 [EV01] = 0
          End If
          // SAR 5406608 ends here
     Else
          If VA frm_AN8_Supplier [AN8] is equal to <Blank>
          Or VA frm_AN8_Supplier [AN8] is equal to <NULL>
               Set Control Error(FC From Branch/Plant, "0052")
               VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
          Else
               // SAR# 8858546 Clear From Branch Plant Error, if already set
               Clear Control Error(FC Parent Business Unit [MCU1])
               VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
               //
               // SAR 8968923 - Blank out the Exchange rate information if B/P is changed.
               //
               FC To Currency Code [CRDC] = <Blank>
               FC Currency Code [CCF1] = <Blank>
               RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
                    FC Parent Business Unit [MCU1] -> szCostCenter [MCU0]
                    VA frm_OKC_From_Company [OKC] <- szCompany [CO]
               FC Order Company [KCOO] = VA frm_OKC_From_Company [OKC]
               // SAR 8805410 -  Currency Processing check is required only for Currency code
               //  retrieval not for Company retrieval
               //      Multi Currency
               If SL CurrencyProcessing is not equal to "N"
                    //
                    // 7381205 - Keep overridden PO transaction currency code
                    //
                    If FC To Currency Code [CRDC] is equal to <Blank>
                         GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
                              VA frm_AN8_Supplier [AN8] -> mnAddressNumber [AN8]
                              UNDEFINED <> mnCarrierNumber [ANCR]
                              UNDEFINED <> szPriceGroup [CPGP]
                              UNDEFINED <> szDeliveryInstructions1 [DEL1]
                              UNDEFINED <> szDeliveryInstructions2 [DEL2]
                              UNDEFINED <> cItemRestrictions [EDF2]
                              UNDEFINED <> szFreightHandlingCode [FRTH]
                              UNDEFINED <> szOrderHoldCode [HOLD]
                              UNDEFINED <> szPrintMessage [INMG]
                              UNDEFINED <> mnOrderCopies [INVC]
                              UNDEFINED <> mnMaximumOrderValue [MAXO]
                              UNDEFINED <> mnMinimumOrderValue [MINO]
                              UNDEFINED <> szOrderTemplate [ORTP]
                              UNDEFINED <> cPricePickList [PLST]
                              UNDEFINED <> szLandedCostRule [PRP5]
                              UNDEFINED <> szUnitOfMeasureVolume [VUMD]
                              UNDEFINED <> szUnitOfMeasureWeight [WUMD]
                              UNDEFINED <> szPaymentTerms [TRAP]
                              FC To Currency Code [CRDC] <- szSupplierCurrencyCode [CRRP]
                              UNDEFINED <> szTaxRateArea [TXA2]
                              UNDEFINED <> szTaxExplCode [EXR2]
                              UNDEFINED <> cCorrespondenceMethod [CRMD]
                              UNDEFINED <> cEvaluatedReceipts [AVCH]
                              UNDEFINED <> cErrorCode [ERR]
                              UNDEFINED <> szPriceAdjustmentSchedule [ASN]
                    End If
                    //
                    RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                         VA frm_OKC_From_Company [OKC] -> szCompany [CO]
                         FC Currency Code [CCF1] <- szCurrencyCode [CRCD]
                         UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                         UNDEFINED <> cPostByCurrency [ABIN]
                    //
                    // SAR 8968923 - If B/P is changed, reset the flag so application can call the
                    // Begin Doc again.
                    VA frm_EV17_Hdr_Work_File [EV17] = "0"
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Business Unit 2
Event: Control Exited/Changed-Asynch
Event GUID: 8336bb02-31f9-11d2-9a97-0000f64da757
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnRelatedAddressFlag [MATH01]
evt_mnRelatedAddressNo_01 [MATH01]
evt_mnRelatedAddressNo_02 [MATH01]
evt_mnRelatedAddressNo_03 [MATH01]
evt_mnRelatedAddressNo_04 [MATH01]
evt_mnRelatedAddressNo_05 [MATH01]
evt_mnRelatedAddressNo_06 [MATH01]
evt_szCompany_CO [CO]
evt_mnParentAddressNo_01 [MATH01]
----------------------------------------
If PO cTransferOrderEntry [EV25] is equal to "1"
     //
     //      Retrieve address and currency codes for To Branch Plant
     //
     If FC Business Unit 2 [MCU2] is less than or equal to <Blank>
          Set Control Error(FC To Branch/Plant, "0003")
     Else
          F41001GetAddressNoFromBranch(N4101280.F41001GetAddressNoFromBranch)
               <Blank> -> szSystemCode [SY]
               FC Business Unit 2 [MCU2] -> szCostCenter [MCU]
               VA frm_AN84_Ship_To [AN84] <- mnAddressNumber [AN8]
          If VA frm_AN84_Ship_To [AN84] is equal to <Blank>
          Or VA frm_AN84_Ship_To [AN84] is equal to <NULL>
               Set Control Error(FC To Branch/Plant, "0052")
               VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
          Else
               // SAR# 8858546 Clear From Branch Plant Error, if already set
               Clear Control Error(FC Business Unit 2 [MCU2])
               VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
               //
               // SAR 8968923 - Blank out the Exchange rate information if B/P is changed.
               //
               FC Currency Code [CRCD] = <Blank>
               FC Currency Code [CCF2] = <Blank>
               // SAR 7387666 Begin
               // SAR 8455763 Passing From branch plant
               RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
                    FC Parent Business Unit [MCU1] -> szCostCenter [MCU0]
                    VA evt_szCompany_CO [CO] <- szCompany [CO]
               // End SAr 8455673
               FC Address Number [AN8] = VA frm_AN84_Ship_To [AN84]
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    VA evt_szCompany_CO [CO] -> szCompany [CO]
                    VA evt_mnRelatedAddressFlag [MATH01] <- mnRelatedAddressNo [AN8R]
                    VA frm_AN84_Ship_To [AN84] -> mnCustomerNumber [AN8]
                    VA evt_mnParentAddressNo_01 [MATH01] <- mnAddressNumberParent [PA8]
               VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
                    VA frm_AN84_Ship_To [AN84] -> mnAddressNumber [AN8]
                    VA evt_mnRelatedAddressNo_01 [MATH01] <- mnRelatedAddress1 [AN81]
                    VA evt_mnRelatedAddressNo_02 [MATH01] <- mnRelatedAddress2 [AN82]
                    VA evt_mnRelatedAddressNo_03 [MATH01] <- mnRelatedAddress3 [AN83]
                    VA evt_mnRelatedAddressNo_04 [MATH01] <- mnRelatedAddress4 [AN84]
                    VA evt_mnRelatedAddressNo_05 [MATH01] <- mnRelatedAddress5 [AN85]
                    VA evt_mnRelatedAddressNo_06 [MATH01] <- mnRelatedAddress6 [AN86]
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "1.00"
                    If VA evt_mnParentAddressNo_01 [MATH01] is not equal to <Blank>
                    And VA evt_mnParentAddressNo_01 [MATH01] is not equal to <NULL>
                         FC Address Number [AN8] = VA evt_mnParentAddressNo_01 [MATH01]
                    End If
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "2.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_02 [MATH01]
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "3.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_03 [MATH01]
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "4.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_04 [MATH01]
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "5.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_05 [MATH01]
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "6.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_06 [MATH01]
               End If
               If VA evt_mnRelatedAddressFlag [MATH01] is equal to "7.00"
                    FC Address Number [AN8] = VA evt_mnRelatedAddressNo_01 [MATH01]
               End If
               // SAR 7387666 End
               // SAR 6851244 - Begin
               If VA frm_MCU_ToBranch_Previous [MCU] is not equal to FC Business Unit 2 [MCU2]
                    VA frm_EV17_Hdr_Work_File [EV17] = "0"
               End If
               // SAR 6851244 - End
               //      Multi Currency
               If SL CurrencyProcessing is not equal to "N"
                    RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
                         FC Business Unit 2 [MCU2] -> szCostCenter [MCU0]
                         VA frm_OKCO_To_Company [OKCO] <- szCompany [CO]
                         UNDEFINED <> szCostCenterDescription [DL01]
                    RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                         VA frm_OKCO_To_Company [OKCO] -> szCompany [CO]
                         FC Currency Code [CCF2] <- szCurrencyCode [CRCD]
                         UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                         UNDEFINED <> cPostByCurrency [ABIN]
                    //
                    // 7381205 - Keep overridden SO transaction currency code
                    //
                    If FC Currency Code [CRCD] is equal to <Blank>
                         GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
                              VA frm_AN84_Ship_To [AN84] -> mnSoldToAddress [AN8]
                              UNDEFINED <> cSuppressErrorMsg [EV02]
                              UNDEFINED <> cErrorCode [ERRC]
                              UNDEFINED <> szTemporaryCreditMsg [TSTA]
                              UNDEFINED <> cBillingAddressNumber [BADT]
                              UNDEFINED <> szTaxExplainationCode [EXR1]
                              UNDEFINED <> cCustomerPORequireDate [PORQ]
                              UNDEFINED <> szPaymentTerms [TRAR]
                              UNDEFINED <> cPaymentInstructions [RYIN]
                              FC Currency Code [CRCD] <- szCurrencyCode [CRCD]
                              UNDEFINED <> szAdjustmentSchedule [ASN]
                              UNDEFINED <> szCustomerPricingGroup [CPGP]
                              UNDEFINED <> mnInvoiceCopies [INVC]
                              UNDEFINED <> szHoldCode [HOLD]
                              UNDEFINED <> szPrintMsg [INMG]
                              UNDEFINED <> cPricePickList [PLST]
                              UNDEFINED <> cBackOrderAllowed [BACK]
                              UNDEFINED <> cPriorityCode [PRIO]
                              UNDEFINED <> mnTradeDiscount [TRDC]
                              UNDEFINED <> mnMaximumOrder [MAXO]
                              UNDEFINED <> mnMinimumOrder [MINO]
                              UNDEFINED <> mnRelatedAddressNum [AN8R]
                              UNDEFINED <> cInvoiceConsolidation [ICON]
                              UNDEFINED <> cSendInvoiceTo [SITO]
                              UNDEFINED <> cCreditCheckLevel [ARTO]
                              UNDEFINED <> cCreditHoldExempt [EXHD]
                              UNDEFINED <> szABAmntCurrCode [CRCA]
                              UNDEFINED <> szGLClassCode [ARC]
                              UNDEFINED <> cDeliveryNotFlag [EDF1]
                              UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
                              UNDEFINED <> cItemRestrictions [EDF2]
                              VA frm_OKC_From_Company [OKC] -> szCompany [CO]
                              UNDEFINED <> cAbcCodeSales [ABC1]
                              UNDEFINED <> cAbcCodeMargin [ABC2]
                              UNDEFINED <> cAbcCodeAverageDays [ABC3]
                              UNDEFINED <> mnAverageDaysToPay [AVD]
                              UNDEFINED <> szBuyingSegmentCode [BSC]
                              UNDEFINED <> cBypassAuditLogging [BYAL]
                              UNDEFINED <> szOPBusinessObjective [OPBO]
                    End If
                    //
               End If
          End If
          // SAR 8955602 - If the taxed prices functionality is on, retrieve the Use
          // Taxed Prices flag.
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               // Customer Tax Prices = 1 if Customer Billing Information is by Sold To
               // customer and is 2 if Customer Billing Information is by Ship To customer
               // Based on this value, retrieve the value of Use Taxed Prices flag set for
               // the Sold To/Ship To customer address number
               // For Sold To Customer
               If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
                    VA frm_mnCustAddNumber_AN8 [AN8] = FC Address Number [AN8]
                    VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
               End If
               //
               // For Ship To Customer
               If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
                    VA frm_mnCustAddNumber_AN8 [AN8] = VA frm_AN84_Ship_To [AN84]
                    VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
               End If
               //
               If VA frm_mnCustAddNumber_AN8 [AN8] is not equal to <NULL>
               And VA frm_mnCustAddNumber_AN8 [AN8] is not equal to <Blank>
                    // Retrieve value for Taxed Unit Price
                    If VA frm_cGridFocused_EV01 [EV01] is equal to "1"
                    Or SV Form_ Mode is not equal to CO COPY_MODE
                         Press Button(FC Get UTP From Tag Customer Master)
                    Else
                         If SV Form_ Mode is equal to CO COPY_MODE
                         And VA frm_szPrevMCU_MCU [MCU] is not equal to FC Business Unit 2 [MCU2]
                              VA frm_szPrevMCU_MCU [MCU] = FC Business Unit 2 [MCU2]
                              Press Button(FC Get UTP From Tag Customer Master)
                         End If
                    End If
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Use Taxed Prices
Event: Selection Changed
Event GUID: 7d5003a6-379d-4a74-807d-07953ba165e4
=============================================
// SAR 8955602 - Checkbox and logic added.
GetErrorCount(B9800250.GetErrorCount)
     VA frm_nErrorCount_INT01 [INT01] <- nNumberOfErrors [INT01]
     VA frm_nWarningCount_INT01 [INT01] <- nNumberOfWarnings [INT01]
If VA frm_cInvalidUTPChange_EV01 [EV01] is not equal to "1"
Or VA frm_nErrorCount_INT01 [INT01] is not equal to "0"
     VA frm_cUseTaxedPrices_UTP [UTP] = FC Use Taxed Prices [UTP]
     // Hide/Show the grid fields based on the UTP checkbox value and the
     // currency mode
     If FC Use Taxed Prices [UTP] is equal to "1"
          If FC Mode (F) [CRRM] is equal to "F"
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Show Grid Column(FC Grid, GC Foreign TaxedExtended Price)
               Show Grid Column(FC Grid, GC Foreign UnitTax Amount)
          Else
               Show Grid Column(FC Grid, GC Unit TaxAmount)
               Show Grid Column(FC Grid, GC ExtendedTax Amount)
               Show Grid Column(FC Grid, GC TaxedUnit Price)
               Show Grid Column(FC Grid, GC TaxedExtended Price)
          End If
     Else
          Hide Grid Column(FC Grid, GC Unit TaxAmount)
          Hide Grid Column(FC Grid, GC ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC TaxedUnit Price)
          Hide Grid Column(FC Grid, GC TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign UnitTax Amount)
     End If
End If
VA frm_cInvalidUTPChange_EV01 [EV01] = "0"


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Landed Cost Rule
Event: Control Exited/Changed-Asynch
Event GUID: 5d4e9d50-30a0-11d2-9a97-0000f64da757
=============================================
If PO cTransferOrderEntry [EV25] is equal to "1"
And PO cMandatoryLandedCost [EV01] is equal to "1"
     If FC Landed Cost Rule [PRP5] is equal to <Blank>
     Or FC Landed Cost Rule [PRP5] is equal to <NULL>
          Set Control Error(FC Landed Cost Rule, "0003")
          // SAR # 8442276 – Set Transfer order error flag when there is error on Landed
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
     Else
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Number
Event: Control Exited/Changed-Asynch
Event GUID: 6885fdc0-2862-4235-b25a-04f22e248dc0
=============================================
// SAR 8805583  : Reset the flag if  order number changed
// SAR 8943420 - Corrected the SAR 8805583 fix - specific to Transfer Orders
// only.
//
If PO cTransferOrderEntry [EV25] is equal to "1"
     VA frm_EV17_Hdr_Work_File [EV17] = "0"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Number
Event: Control Exited/Changed-Inline
Event GUID: 8806d731-49e6-11d3-a30a-00105a1c0327
=============================================
// SAR 3286294 - convert to string to be passed into edit line
ConvertNumericToString(B0000045.ConvertNumericToString)
     FC Order Number [DOC2] -> mnMathNumeric01 [MATH01]
     VA grd_szRelatedOrderNumber_RORN [RORN] <- szVideoConstant30A [VC30A]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Type
Event: Control Exited/Changed-Inline
Event GUID: 8806d732-49e6-11d3-a30a-00105a1c0327
=============================================
// SAR 3286294 -  passed into edit line
VA grd_szRelatedOrderType_RCTO [RCTO] = FC Order Type [DCIN]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Order Date
Event: Control Exited/Changed-Asynch
Event GUID: 025b7f61-2b3b-11d2-9a8f-0000f64da757
=============================================
If PO cTransferOrderEntry [EV25] is equal to "1"
     If FC Order Date [TRDJ] is less than or equal to <Blank>
          FC Order Date [TRDJ] = date_today()
     End If
     VA frm_EV17_Hdr_Work_File [EV17] = "0"
     FC Exchange Rate [CRR] = <NULL>
     // SAR 3449209 - No need to blank out the field. Disable the code
     ! FC Currency Code [CRCD] = <NULL>
     FC Exchange Rate (Divisor) [CRRD] = <NULL>
     // SAR 3449209 - No need to blank out the field. Disable the code
     ! FC To Currency Code [CRDC] = <NULL>
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Exchange Rate
Event: Control Exited/Changed-Inline
Event GUID: 8b63dc42-669c-4cb7-8791-1ba435b5e71d
=============================================
// SAR 5800218 - Begin ADD
If FC Exchange Rate [CRR] is not equal to "0"
And FC Exchange Rate [CRR] is not equal to <Blank>
And FC Exchange Rate [CRR] is not equal to <NULL>
     VA frm_cIsExcangeRateEntered_EV01 [EV01] = "1"
End If
// SAR 5800218 - End ADD


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC To Currency Code
Event: Control Exited/Changed-Inline
Event GUID: e45eb6c0-bc89-11d2-9769-0000396e080e
=============================================
// 
// SAR 2657735
Set Control Focus(FC Grid)
// 


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Currency Code
Event: Control Exited/Changed-Asynch
Event GUID: 90932e3f-a23d-11d0-a204-0000f6728a56
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
          If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
               If FC Currency Code [CRCD] is equal to FC To Currency Code [CRDC]
               And FC Currency Code [CRCD] is not equal to <Blank>
                    Disable Control(FC Mode (F) [CRRM])
                    Disable Control(FC Exchange Rate [CRR])
                    FC Mode (F) [CRRM] = "D"
                    FC Exchange Rate [CRR] = "0"
               Else
                    Enable Control(FC Mode (F) [CRRM])
                    Enable Control(FC Exchange Rate [CRR])
                    FC Mode (F) [CRRM] = "F"
               End If
               Press Button(FC Hide/Show Currency (HIDDEN))
          End If
     End If
     // 
     // SAR 1997324
     // ************************************************************************
     // SAR 2953260 
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Currency Code
Event: Control Exited/Changed-Inline
Event GUID: 06a0c841-300d-11d3-9b3d-00105a1c004a
=============================================
// **********************************************************************
// SAR 3215921 - Begin/End ADD
// If the Currency is changed, then reset the flag that will cause 
// Exchange Rate to be cleared in Set Focus on Grid on Row is Exit
// & Changed - Asynch.
// **********************************************************************
VA frm_cIsExcangeRateEntered_EV01 [EV01] = <Blank>


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Exchange Rate
Event: Control Exited/Changed-Asynch
Event GUID: 8c7e3a51-6215-11d2-a73e-0000f6a025f4
=============================================
If PO cTransferOrderEntry [EV25] is not equal to "1"
     // ************************************************************************
     // SAR 2953260 
     // Only reset this flag when not on a COPY mode.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA frm_EV17_Hdr_Work_File [EV17] = "0"
     End If
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Exchange Rate
Event: Control is Exited
Event GUID: a7c39d80-6212-11d2-a73e-0000f6a025f4
=============================================
// SAR 3215921 - Begin/End DELETE
! Was Value Entered(FC Exchange Rate, VA frm_cIsExcangeRateEntered_EV01)

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Exchange Rate
Event: Control Exited/Changed-Inline
Event GUID: 8f0c0c11-3006-11d3-9b3d-00105a1c004a
=============================================
// ***********************************************************************
// SAR 3215921 - Begin ADD
// ***********************************************************************
If FC Exchange Rate [CRR] is not equal to "0"
     VA frm_cIsExcangeRateEntered_EV01 [EV01] = "1"
End If
// SAR 3215921 - End ADD


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Mode (F)
Event: Selection Changed
Event GUID: f57e07e9-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(FC Hide/Show Currency (HIDDEN))


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Kit and Configurator processing
Event: Button Clicked
Event GUID: f57df5fd-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cP32942StoreAndForward [SO15]
evt_jdPromiseDeliveryDate_PPDJ [PPDJ]
evt_mnAdjRevisionLevel_AREV [AREV]
evt_cAgreementPriceFound_EV01 [EV01]
evt_cInterBranchFlag [EV01]
evt_mnOPVersion [MATH01]
evt_szOPVersion_OPVER [OPVER]
evt_szInventoryConfigLineType [LNTY]
evt_cCompPastCutoffStatus_EV01 [EV01]
evt_cReleasedFromBlanket_EV01 [EV01]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4478714                   VK6272082                 09/13/00
// 5715241                  RK5695569                02/12/02
// 6201276                  AK7095647                09/12/02
// 6200986                AK7095647                09/12/02
// 6480551                  BC7158396                02/07/03
// 6524921                   BC7158396               03/07/03
// 6596407                   DN8476450               06/23/03
//  As of 8/5/2004, P32942 is replaced by P3210 by SAR 7199243.
// 7338653                   TT5459806                09/17/04
// 8150361                   LR5644366      03/06/07 - Pass PO to P41351
// 8218101                   HC953119                11/14/07
// 8930811                 JT7568002                06/25/2009
//
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
And GC Lot Serial Number [LOTN] is greater than <Blank>
     //     SAR 7338653: Prevent display configuration for inventory cfg item
     F3293GetConfiguratorConstantRow(N3200570.F3293GetConfiguratorConstantRow)
          GC Business Unit [MCU] -> szCostcenter [MCU]
          VA evt_szInventoryConfigLineType [LNTY] <- szLinetype [LNTY]
     If VA evt_szInventoryConfigLineType [LNTY] is equal to GC Ln Ty [LNTY]
          Stop Processing
     End If
End If
// SAR 5451257
If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
     GC % Profit Margin [PRMG] = "0"
End If
Get Selected Grid Row Number(FC Grid, VA frm_mnCurrentGridRow)
If VA frm_STKT_ProcessCancelLine [STKT] is equal to "K"
Or VA frm_STKT_ProcessCancelLine [STKT] is equal to "C"
     //     Cancel all the components for the parent item
     //
     Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
     While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
          VA evt_cCompPastCutoffStatus_EV01 [EV01] = <Blank>
          VA frm_mnCurrentGridRow [MATH01] = 1+[VA frm_mnCurrentGridRow [MATH01]]
          Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
          If VA frm_STKT_ProcessCancelLine [STKT] is equal to "K"
          And VA frm_LNID_Cancel [LNID] is equal to GC Kit Master Line No [KTLN]
          Or VA frm_STKT_ProcessCancelLine [STKT] is equal to "C"
          And VA frm_LNID_Cancel [LNID] is equal to GC Kit Cpnt Line No [CPNT]
               //  SAR 8150337 - If the rec is Kit component, then cancel only un-relieved
               // component lines and lines not past the cutoff status.
               If PO szNonUpdatableStatus [NXT2] is greater than "0"
               And GC Next Stat [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
               And GC Next Stat [NXTR] is less than "999"
                    VA evt_cCompPastCutoffStatus_EV01 [EV01] = "1"
               End If
               //
               If VA frm_STKT_ProcessCancelLine [STKT] is equal to "K"
               And GC On Hand Updated [SO02] is not equal to "1"
               And VA evt_cCompPastCutoffStatus_EV01 [EV01] is not equal to "1"
               Or VA frm_STKT_ProcessCancelLine [STKT] is equal to "C"
                    Set Grid Font(FC Grid,  <Current Row>,  <All Columns>, <,Regular,10,Black>)
               End If
          Else
               // Commented out this assignment.  When a kit parent is partially backordered,
               // the split parent line could be on the next line just below the original
               // parent line (before the component lines of the original parent).
               ! VA frm_mnCurrentGridRow [MATH01] = VA frm_MaxGridRows [MATH01]
          End If
     End While
Else
     // SAR 8218101 - Fwd to cfg spec screen-cpy&upt
     // Do not pop Cfg or Kit Window while a copied line is being loaded,
     // but allow them to pop on newly added lines and when manually requested.
     If VA grd_EV12_KitProcessed [EV12] is not equal to "1"
     And VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     And VA grd_EV25_CfgItemProcessed [EV25] is not equal to "1"
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               If SV Form_ Mode is equal to CO ADD_MODE
                    VA frm_cAddOrMaintenanceMode [EV01] = "A"
               End If
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    VA frm_cAddOrMaintenanceMode [EV01] = "M"
               End If
          End If
          //
          // SAR 2587693
          // Change the parameters to the call of P41351. Replace BC Amount
          // Extended Price (P4211) and BC Amount - Foreign Extended Price (P4211) with
          // created variables VA frm_KitExtPrice and VA frm_KitForeignExtPrice
          // respectively.
          //
          If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               // SAR 3675767 - Support Kit in Transfer Order, pass Transfer To Branch/Plant,
               // Exchange Rate and Transaction Currency to the Kit Application
               // SAR 4262067-Pass Parent ShipTo to P41351
               //
               // SAR 4728832 if preference is on don't pass the promise delivery date. Pass in
               // the shipment date
               //
               // SAR 8925024 - Pass the Overriden Promised delivery
               ! If PO cUsePrefProcess [EV22] is equal to "1"
               ! And PO szP40400Vers [VL06] is not equal to <Blank>
                    ! VA evt_jdPromiseDeliveryDate_PPDJ [PPDJ] = <Blank>
               ! Else
                    VA evt_jdPromiseDeliveryDate_PPDJ [PPDJ] = GC Promised Delivery [RSDJ]
               ! End If
               // SAR 4822280
               VA grd_mnActualOrderQty_UORG [UORG] = GC Quantity Ordered [UORG]
               // SAR#4923460-Pass P41351 cDidQtyChngOnKitParent
               // SAR 6200986-Set ErrorCode to 1 ,if user take the row exit to kit/Config
               // window or if user is in Add mode and never clicked ok button in kit window.
               If VA frm_RowExitToKitAndConfig [EV01] is equal to "1"
                    VA frm_ERRC_Error_Code [ERRC] = "1"
               Else
                    // SAR 6225075- enable the cancel in change mode when adding a new so line for
                    // kit item
                    If VA grd_OKButtonClickedOnceYes [EV01] is not equal to "1"
                    And VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
                         VA frm_ERRC_Error_Code [ERRC] = "1"
                    Else
                         // BUG 13337445:   Reset the variable if P4210 has a warning msg
                         VA frm_ERRC_Error_Code [ERRC] = "0"
                    End If
               End If
               If GC cGetFromHistory [EV01] is equal to "1"
               And VA grd_LINN_From_Line_Number [LINN] is equal to "0"
               And VA grd_LIN_Through_Line_Number [LIN] is equal to "0"
                    GetKitLineNumberRange(B4205240.GetKitLineNumberRange)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumber [LNIX]
                         VA grd_LINN_From_Line_Number [LINN] <- mnFromLineNumber [LINN]
                         VA grd_LIN_Through_Line_Number [LIN] <- mnThroughLineNumber [LIN]
                         VA frm_EV22_cCacheOn [EV22] -> cUseWorkFileFlag [EV22]
               End If
               // SAR 6911711, added mnExtCostTransfer parameter
               // SAR 6995310
               // SAR 7993527 - Initialize the Kit Window Error before calling P41351.
               VA grd_cKitWindowError_EV01 [EV01] = "0"
               //
               GetFrmBlktReleaseALPH27(B4205100.GetFrmBlktReleaseALPH27)
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
                    VA evt_cReleasedFromBlanket_EV01 [EV01] <- cValue [EV01]
               If VA evt_cReleasedFromBlanket_EV01 [EV01] is greater than "0"
                    Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC LineNumber)
               End If
               //
               // SAR 8150361 - Pass cDisableOrHidePrice to P41351
               //
               Call App:P41351 Form:W41351A Version:Undefined
                    GC Short Item No [ITM] -> ItemNumberShortKit [KIT]
                    GC Business Unit [MCU] -> CostCenterAlt [MMCU]
                    "M" -> TypeBill [TBM]
                    FC Order Number [DOCO] -> DocumentNumber [DOCO]
                    FC Order Type [DCTO] -> OrderType [DCTO]
                    FC Order Company [KCOO] -> DocumentCompany [KCOO]
                    GC UM  [UOM] -> TransactionUOM [UOM]
                    GC Line Number [LNID] -> LineNumber [LNID]
                    GC Ln Ty [LNTY] -> LineType [LNTY]
                    GC Last Stat [LTTR] -> LastStatusCode [LTTR]
                    GC Next Stat [NXTR] -> NextStatusCode [NXTR]
                    GC PR UM [UOM4] -> PricingUOM [UOM4]
                    GC Request Date [DRQJ] -> RequestedDate [DRQJ]
                    FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                    GC Quantity Shipped [SOQS] <> QtyShipped [SOQS]
                    GC Quantity Backordered [SOBK] <> QtyBackOrdered [SOBK]
                    GC Quantity Canceled [SOCN] <> QtyCanceled [SOCN]
                    FC To Currency Code [CRDC] -> BaseCompanyCurrency [CRCD]
                    PO cAvailabilityCheck [EV12] -> CheckAvailabilty [CKAV]
                    VA frm_cSoldToBACKAllowed_BACK [BACK] -> BackordersAllowedYN [BACK]
                    GC Sched Pick [PDDJ] -> PromisedDeliveryDate [PDDJ]
                    FC Business Unit [MCU] -> HeaderBranchPlant [EMCU]
                    FC Address Number [AN8] -> SoldToAddrNum [AN8]
                    <Blank> -> WriteKitCompToF4211YN [EV05]
                    VA frm_cAddOrMaintenanceMode [EV01] -> AddOrMaintain [MODE]
                    GC Quantity Ordered [UORG] <> TransactionQty [UORG]
                    FC Currency Code [CRCD] -> CustomerCurrency [CRDC]
                    VA frm_KitExtPrice [UPRC] <- DomesticExtPrice [AEXP]
                    VA frm_KitForeignExtPrice [UPRC] <- ForeignExtPrice [FEA]
                    VA frm_mnExtCost_UNCS [UNCS] <- DomesticExtCost [ECST]
                    VA frm_mnForExtCost_FUC [FUC] <- ForeignExtCost [FEC]
                    PO szDefaultReasoncode [RCD] -> PODefaultReasonCode [VC03A]
                    VA frm_DATE03_Commitment_Dt [DATE03] -> OrderCommitmentDate [DATE01]
                    "N" -> ConvByBranch [BUMC]
                    "1" -> SalesPriceRetrievalUOM [UMB1]
                    "1" -> PriceEffectiveBasedOnDate [CP01]
                    "N" -> AdvancedPricing [ADVP]
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> LastLineNumberAssign [LNIX]
                    GC Method of Price Calculation [PMTH] <> PricingMethod [PMTH]
                    FI Jobnumber [JOBS] <> JobNumber [JOBS]
                    VA frm_CRYR_Currency_Control [CRYR] -> CurrencyConversion [CRYR]
                    VA frm_ERRC_Error_Code [ERRC] <> OKorCancel [EV01]
                    GC Item Number [UITM] -> PrimaryItemNumber [UITM]
                    SL VersionName -> SOEVersionID [VERS]
                    GC Taxable  [TAX1] <> TaxableYN [TAX1]
                    VA frm_EV22_cCacheOn [EV22] -> UseCacheOrWF [EV02]
                    VA grd_LINN_From_Line_Number [LINN] <> mnFromLineNumber [LINN]
                    VA grd_LIN_Through_Line_Number [LIN] <> mnThruLineNumber [LIN]
                    <Blank> -> cBatchMode [EV03]
                    VA evt_jdPromiseDeliveryDate_PPDJ [PPDJ] -> jdDatePromisedShipment [DPRJ]
                    "S" -> cCallingApplication [CALL]
                    PO cStoreAndForwardMode [SO15] -> cPOStoreAndForwardMode [SO15]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnF42UI11WFParentLineNumber [LNIX]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI mnProcessID [PEID] <> mnProcessID [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    FC Business Unit 2 [MCU2] -> szTransferToBranchPlantKitCpn [MCU2]
                    FC Exchange Rate (Divisor) [CRRD] -> mnPOExchangeRateKitCpn [CRRD]
                    FC To Currency Code [CRDC] -> szPOTransCurrencyKitCpn [CRDC]
                    GC Ship To Number [SHAN] -> mnShipToAddressNum [SHAN]
                    GC Promised Ship [PPDJ] -> jdDatePromisedShipDate [PPDJ]
                    VA frm_cDidQtyChngOnKitParent [ERRC] -> cQtyChangedOnKitParent [ERRC]
                    VA frm_mnExtCostTransfer_TCST [TCST] <- ExtCostTransfer [TCST]
                    VA grd_cKitCompPostCutoffStatus [EV01] <- cCompPastCutoffStatus [EV01]
                    PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV04]
               //
               // SAR 8150337 - If any of the component's next status is modified to  be past
               // cutoff status (during this KitSelectionWindow visit), disable the UORG,
               // UOM, B/P, RequestedDate, PriceCode1, PriceCode2 & PriceCode3 fields.
               // SAR 8350785 - Also disable qty shipped, backordered, and canceled if the
               // kit is dirty or a component is past the non-updatable status
               If VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC UoM)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Branch/Plant)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedDate)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC PC1)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC PC2)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC PC3)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityShipped)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityBackordered)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityCanceled)
                    Disable Control(HC &Kits/Configurator)
               End If
               //
               // SAR 6200986-  Pass ErrorCode to P41351
               VA frm_cDidQtyChngOnKitParent [ERRC] = "0"
               //
               // SAR 7231055 - Delete the Parent line from Cache (call Edit Line in B mode)
               // to prevent Parent Line getting updated if Kit window throws 0553 error.
               //
               If VA frm_ERRC_Error_Code [ERRC] is equal to "E"
                    //
                    // SAR 7358451 - If kit window throws error for 0553(Lot Expired) or 4788 (Kit
                    // Inbalancing), then we will set the error in SO screen and will set the
                    // KitWindowError to '1'.
                    //
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "E42B6")
                    VA grd_cKitWindowError_EV01 [EV01] = "1"
                    VA frm_ERRC_Error_Code [ERRC] = "0"
               End If
               //
               // SAR 2766034
               If VA frm_ERRC_Error_Code [ERRC] is equal to "0"
                    // SAR 4822280
                    GC Quantity Ordered [UORG] = VA grd_mnActualOrderQty_UORG [UORG]
                    GC Quantity Shipped [SOQS] = "0"
                    GC Quantity Backordered [SOBK] = "0"
                    GC Quantity Canceled [SOCN] = "0"
               End If
               // SAR 2587693
               BC Amount - Extended Price (F4211.0) [AEXP] = VA frm_KitExtPrice [UPRC]
               BC Amount - Foreign Extended Price (F4211.0) [FEA] = VA frm_KitForeignExtPrice [UPRC]
               // 2800212
               BC Amount - Foreign Extended Cost (F4211.0) [FEC] = VA frm_mnForExtCost_FUC [FUC]
               BC Amount - Extended Cost (F4211.0) [ECST] = VA frm_mnExtCost_UNCS [UNCS]
               //
          Else
               GB Ln Ty [LNTY] = GC Ln Ty [LNTY]
               // SAR 2924077
               GB Unit Weight [ITWT] = GC Unit Weight [ITWT]
               //
               If PO cStoreAndForwardMode [SO15] is equal to "1"
               Or PO cStoreAndForwardMode [SO15] is equal to "2"
                    VA evt_cP32942StoreAndForward [SO15] = "1"
               Else
                    VA evt_cP32942StoreAndForward [SO15] = <Blank>
               End If
               //
               // SAR 3206127
               GB Lot Serial Number [LOTN] = GC Lot Serial Number [LOTN]
               GB Location  [LOCN] = GC Location  [LOCN]
               //
               // //SAR 3094014 - Pass the QtyOrdered both ways so that when select qty
               // available from the confg program, this qty will be the same on Sales order.
               //
               // SAR#5180557 - Pass mnWOLineNo to Configurator
               // SAR# 5419978 - Per Configurator request, pass the transaction type
               RetrieveStringElement(B4002410.RetrieveStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
                    "1" -> nPosition [INT01]
                    VA frm_cInterBranchFlag_EV24 [EV24] <- cCharacter [EV01]
               If VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "1"
                    VA frm_cTransactionTypeForConfg [EV01] = "1"
               Else
                    If VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "2"
                         VA frm_cTransactionTypeForConfg [EV01] = "3"
                    Else
                         If VA frm_cInterBranchFlag_EV24 [EV24] is equal to "1"
                              VA frm_cTransactionTypeForConfg [EV01] = "2"
                         Else
                              VA frm_cTransactionTypeForConfg [EV01] = <Blank>
                         End If
                    End If
               End If
               // End of SAR# 5419978
               //
               // SAR 6925223
               // Retrieve the OP version for configurator processing.8.10 supports OP 3.1
               //
               // SAR 8585461 - Scenario Manager processing option removed
               If PO cOrderPromising [EV01] is equal to "1"
                    F34A10GetNumetrixExtractParams(N34A0950.F34A10GetNumetrixExtractParams)
                         "34A" -> szSystemCode [SY]
                         VA evt_szOPVersion_OPVER [OPVER] <- szOrderPromisingVersion [OPVER]
                    ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                         VA evt_szOPVersion_OPVER [OPVER] -> szInputString [AA15]
                         VA evt_mnOPVersion [MATH01] <- mnOutputMathNumeric [MATH01]
               End If
               //
               // SAR 6089077
               // SAR  6524921 - Configurator Self Service
               // SAR 6925223 - pass in the OP version
               //  As of 8/5/2004, P32942 is replaced by P3210 by SAR 7199243.
               //
               // SAR 8402830 - if szP32942Vers is blank then populate it with ZJDE0001 i.e
               // default version
               If PO szP32942Vers [VL13] is equal to <Blank>
               Or PO szP32942Vers [VL13] is equal to <NULL>
                    PO szP32942Vers [VL13] = "ZJDE0001"
               End If
               If PO cShoppingCartMode [CART] is equal to "1"
                    //  SAR 7833128 - Adding Version for P3210
                    // SAR 8805487 - Passing GC Line Number to ParentLineIndex
                    // SAR 8920257 - Pass in LNIX to mnParentLineIndex
                    Call App:P3210 Form:W3210B Version:PO szP32942Vers
                         GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
                         GC Business Unit [MCU] -> szCostCenter [MCU]
                         FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                         FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         VA grd_ACTI_ActionHidden [ACTI] -> cAddorChangeMode [EV01]
                         GC Quantity Ordered [UORG] <> mnUnitsTransactionQty [UORG]
                         GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
                         GB Unit Weight [ITWT] <> mnAmountUnitWeight [ITWT]
                         GC Wt U/M [WTUM] -> szWeightUnitOfMeasure [WTUM]
                         FC Address Number [AN8] -> mnAddressNumber [AN8]
                         VA frm_EV19_cCanceledOut [EV19] <- cCacncelledOut [EV01]
                         GB Ln Ty [LNTY] <> szLineType [LNTY]
                         VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
                         FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                         GC Promised Delivery [RSDJ] -> jdPromisedDeliveryDate [PDDJ]
                         GC Price Effective Date [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
                         GC Method of Price Calculation [PMTH] -> cMethodOfPriceCalcula [PMTH]
                         VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorCode [DTAI]
                         VA frm_KitExtPrice [UPRC] <- mnAmountExtendedPrice [AEXP]
                         VA frm_mnExtCost_UNCS [UNCS] <- mnAmountExtendedCost [ECST]
                         GC Sched Pick [PDDJ] -> jdDateReleaseJulian [RSDJ]
                         FC OTOT: Order Total Display [TOT1] <> mnAmountOrderGross [OTOT]
                         VA frm_KitForeignExtPrice [UPRC] <- mnAmountForeignExtPrice [FEA]
                         VA frm_mnForExtCost_FUC [FUC] <- mnAmountForeignExtCost [FEC]
                         GB Location  [LOCN] <> szLocation [LOCN]
                         GB Lot Serial Number [LOTN] <> szLot [LOTN]
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                         SL VersionName -> szSOEVersion [VERS]
                         VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH01]
                         VA frm_EV22_cCacheOn [EV22] -> cUseCacheInEditLine [EV01]
                         FC Mode (F) [CRRM] -> cForeignOrDomestic [EV01]
                         PO szP32942Vers [VL13] -> szVersionOfConfigurator [VERS]
                         PO cShoppingCartMode [CART] -> cWebModeFlag [EV01]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentLineIndex [LNIX]
                         VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                         FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRCD]
                         GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                         "42" -> szProductCode [SY]
                         "000" -> szOrderSuffix [SFXO]
                         FC Order Company [KCOO] -> szCompany [CO]
                         FC Business Unit [MCU] -> szHeaderCostCenter [EMCU]
                         GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                         FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
                         VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFromCur [TRR1]
                         VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateToCur [TRR2]
                         GC Vol U/M [VLUM] -> szVolumeUnitOfMeasure [VLUM]
                         GC Unit Volume [ITVL] <> mnAmountUnitVolume [ITVL]
                         FI mnProcessID [PEID] -> mnProcessID [PEID]
                         FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                         VA frm_mnWOLineNo_LNIX [LNIX] -> mnCacheKeyIndexWO [LNIX]
                         VA frm_cTransactionTypeForConfg [EV01] -> cTransactionType [EV01]
                         VA frm_mnAmtPOCost_ECST [ECST] <- mnAmountPOCost [ECST]
                         GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                         GC Business Unit [MCU] <- szCostCenterReturnValue [MCU]
                         VA evt_mnOPVersion [MATH01] -> mnOrderPromisingVersion [MATH01]
                         FC Business Unit 2 [MCU2] -> szTransferToBranch [MCU2]
                         GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
                         FC FAP-Foreign Total Display [TOT2] <> mnAmountForeignOpen [FAP]
                         VA evt_cP32942StoreAndForward [SO15] -> cStoreAndForwardMode [SO15]
                         GC Production Number [PMPN] -> szProductionNumber [PMPN]
                         GC Production Number Short [PNS] -> mnProductionNumberShort [PNS]
                    VA grd_cErrorConfigCSS_EV01 [EV01] = "0"
                    Clear Grid Cell Error(FC Grid, <Currently Selected Row>,  <All Columns>)
               Else
                    //  SAR 7833128 - Adding Version for P3210
                    // SAR 8805487 - Passing GC Line Number to ParentLineIndex
                    // SAR 8920257 - Pass in LNIX to mnParentLineIndex
                    // SAR 8927551 - Cfg WO incorrect after recalc
                    If VA frm_RowExitToKitAndConfig [EV01] is equal to "1"
                    And SV Form_ Mode is equal to CO UPDATE_MODE
                         Call App:P3210 Form:W3210B Version:PO szP32942Vers
                              GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
                              GC Business Unit [MCU] -> szCostCenter [MCU]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              GC Line Number [LNID] -> mnLineNumber [LNID]
                              VA grd_ACTI_ActionHidden [ACTI] -> cAddorChangeMode [EV01]
                              GC Quantity Ordered [UORG] <> mnUnitsTransactionQty [UORG]
                              GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
                              GB Unit Weight [ITWT] <> mnAmountUnitWeight [ITWT]
                              GC Wt U/M [WTUM] -> szWeightUnitOfMeasure [WTUM]
                              FC Address Number [AN8] -> mnAddressNumber [AN8]
                              VA frm_EV19_cCanceledOut [EV19] <- cCacncelledOut [EV01]
                              GB Ln Ty [LNTY] <> szLineType [LNTY]
                              VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
                              FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                              GC Promised Delivery [RSDJ] -> jdPromisedDeliveryDate [PDDJ]
                              GC Price Effective Date [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
                              GC Method of Price Calculation [PMTH] -> cMethodOfPriceCalcula [PMTH]
                              VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorCode [DTAI]
                              VA frm_KitExtPrice [UPRC] <- mnAmountExtendedPrice [AEXP]
                              VA frm_mnExtCost_UNCS [UNCS] <- mnAmountExtendedCost [ECST]
                              GC Sched Pick [PDDJ] -> jdDateReleaseJulian [RSDJ]
                              FC OTOT: Order Total Display [TOT1] <> mnAmountOrderGross [OTOT]
                              VA frm_KitForeignExtPrice [UPRC] <- mnAmountForeignExtPrice [FEA]
                              VA frm_mnForExtCost_FUC [FUC] <- mnAmountForeignExtCost [FEC]
                              GB Location  [LOCN] <> szLocation [LOCN]
                              GB Lot Serial Number [LOTN] <> szLot [LOTN]
                              VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                              FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                              SL VersionName -> szSOEVersion [VERS]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH01]
                              VA frm_EV22_cCacheOn [EV22] -> cUseCacheInEditLine [EV01]
                              FC Mode (F) [CRRM] -> cForeignOrDomestic [EV01]
                              PO szP32942Vers [VL13] -> szVersionOfConfigurator [VERS]
                              PO cShoppingCartMode [CART] -> cWebModeFlag [EV01]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentLineIndex [LNIX]
                              VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                              FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRCD]
                              GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                              "42" -> szProductCode [SY]
                              "000" -> szOrderSuffix [SFXO]
                              FC Order Company [KCOO] -> szCompany [CO]
                              FC Business Unit [MCU] -> szHeaderCostCenter [EMCU]
                              GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                              FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
                              VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFromCur [TRR1]
                              VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateToCur [TRR2]
                              GC Vol U/M [VLUM] -> szVolumeUnitOfMeasure [VLUM]
                              GC Unit Volume [ITVL] <> mnAmountUnitVolume [ITVL]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCacheKeyIndexWO [LNIX]
                              VA frm_cTransactionTypeForConfg [EV01] -> cTransactionType [EV01]
                              VA frm_mnAmtPOCost_ECST [ECST] <- mnAmountPOCost [ECST]
                              GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                              GC Business Unit [MCU] <- szCostCenterReturnValue [MCU]
                              VA evt_mnOPVersion [MATH01] -> mnOrderPromisingVersion [MATH01]
                              FC Business Unit 2 [MCU2] -> szTransferToBranch [MCU2]
                              GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
                              FC FAP-Foreign Total Display [TOT2] <> mnAmountForeignOpen [FAP]
                              VA evt_cP32942StoreAndForward [SO15] -> cStoreAndForwardMode [SO15]
                              GC Production Number [PMPN] -> szProductionNumber [PMPN]
                              GC Production Number Short [PNS] -> mnProductionNumberShort [PNS]
                    Else
                         // SAR 8975670 - Do not call P3210 when selecting credit order from history
                         If VA frm_mnCreditJobNum_JOBS [JOBS] is equal to <Blank>
                         Or VA frm_mnCreditJobNum_JOBS [JOBS] is equal to <NULL>
                         Or VA frm_mnCreditJobNum_JOBS [JOBS] is equal to "0"
                              Call App:P3210 Form:W3210B Version:PO szP32942Vers
                                   GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
                                   GC Business Unit [MCU] -> szCostCenter [MCU]
                                   FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                                   FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                                   FC Order Type [DCTO] -> szOrderType [DCTO]
                                   GC Line Number [LNID] -> mnLineNumber [LNID]
                                   VA grd_ACTI_ActionHidden [ACTI] -> cAddorChangeMode [EV01]
                                   GC Quantity Ordered [UORG] <> mnUnitsTransactionQty [UORG]
                                   GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
                                   GB Unit Weight [ITWT] <> mnAmountUnitWeight [ITWT]
                                   GC Wt U/M [WTUM] -> szWeightUnitOfMeasure [WTUM]
                                   FC Address Number [AN8] -> mnAddressNumber [AN8]
                                   VA frm_EV19_cCanceledOut [EV19] <- cCacncelledOut [EV01]
                                   GB Ln Ty [LNTY] <> szLineType [LNTY]
                                   VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
                                   FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                                   GC Promised Delivery [RSDJ] -> jdPromisedDeliveryDate [PDDJ]
                                   GC Price Effective Date [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
                                   GC Method of Price Calculation [PMTH] -> cMethodOfPriceCalcula [PMTH]
                                   VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorCode [DTAI]
                                   VA frm_KitExtPrice [UPRC] <- mnAmountExtendedPrice [AEXP]
                                   VA frm_mnExtCost_UNCS [UNCS] <- mnAmountExtendedCost [ECST]
                                   GC Sched Pick [PDDJ] -> jdDateReleaseJulian [RSDJ]
                                   FC OTOT: Order Total Display [TOT1] <> mnAmountOrderGross [OTOT]
                                   VA frm_KitForeignExtPrice [UPRC] <- mnAmountForeignExtPrice [FEA]
                                   VA frm_mnForExtCost_FUC [FUC] <- mnAmountForeignExtCost [FEC]
                                   GB Location  [LOCN] <> szLocation [LOCN]
                                   GB Lot Serial Number [LOTN] <> szLot [LOTN]
                                   VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                   FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                                   SL VersionName -> szSOEVersion [VERS]
                                   VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH01]
                                   VA frm_EV22_cCacheOn [EV22] -> cUseCacheInEditLine [EV01]
                                   FC Mode (F) [CRRM] -> cForeignOrDomestic [EV01]
                                   PO szP32942Vers [VL13] -> szVersionOfConfigurator [VERS]
                                   PO cShoppingCartMode [CART] -> cWebModeFlag [EV01]
                                   VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentLineIndex [LNIX]
                                   VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                                   FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRCD]
                                   GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                                   "42" -> szProductCode [SY]
                                   "000" -> szOrderSuffix [SFXO]
                                   FC Order Company [KCOO] -> szCompany [CO]
                                   FC Business Unit [MCU] -> szHeaderCostCenter [EMCU]
                                   GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                                   FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
                                   VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFromCur [TRR1]
                                   VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateToCur [TRR2]
                                   GC Vol U/M [VLUM] -> szVolumeUnitOfMeasure [VLUM]
                                   GC Unit Volume [ITVL] <> mnAmountUnitVolume [ITVL]
                                   FI mnProcessID [PEID] -> mnProcessID [PEID]
                                   FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                                   VA frm_mnWOLineNo_LNIX [LNIX] -> mnCacheKeyIndexWO [LNIX]
                                   VA frm_cTransactionTypeForConfg [EV01] -> cTransactionType [EV01]
                                   VA frm_mnAmtPOCost_ECST [ECST] <- mnAmountPOCost [ECST]
                                   GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                                   GC Business Unit [MCU] <- szCostCenterReturnValue [MCU]
                                   VA evt_mnOPVersion [MATH01] -> mnOrderPromisingVersion [MATH01]
                                   FC Business Unit 2 [MCU2] -> szTransferToBranch [MCU2]
                                   GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
                                   FC FAP-Foreign Total Display [TOT2] <> mnAmountForeignOpen [FAP]
                                   VA evt_cP32942StoreAndForward [SO15] -> cStoreAndForwardMode [SO15]
                                   GC Production Number [PMPN] -> szProductionNumber [PMPN]
                                   GC Production Number Short [PNS] -> mnProductionNumberShort [PNS]
                         End If
                    End If
                    // SAR 8959166-If Config item from inventory, set price override
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    And GB Lot Serial Number [LOTN] is greater than <Blank>
                         F3293GetConfiguratorConstantRow(N3200570.F3293GetConfiguratorConstantRow)
                              GC Business Unit [MCU] -> szCostcenter [MCU]
                              VA evt_szInventoryConfigLineType [LNTY] <- szLinetype [LNTY]
                         If VA evt_szInventoryConfigLineType [LNTY] is equal to GB Ln Ty [LNTY]
                              GC Price Over Cd [PROV] = "1"
                         End If
                    End If
                    // SAR 8959166-End-If Config item from inventory, set price override
               End If
               // SAR 3431691
               //
               // SAR 6480551 - Use Branch/Plant returned from P32942 even if changed by
               // Inventory Search
               GB Business Unit [MCU] = GC Business Unit [MCU]
               VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
               //
               If GB Ln Ty [LNTY] is not equal to GC Ln Ty [LNTY]
                    VerifyActivityRuleStatusCode(B4000260.VerifyActivityRuleStatusCode)
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         GB Ln Ty [LNTY] -> szLineType [LNTY]
                         UNDEFINED <> szLineStatusCode [TRTY]
                         GC Next Stat [NXTR] <- szNextStatus [NXTR]
                         UNDEFINED <> szStatusAllowed1 [A1TR]
                         UNDEFINED <> szStatusAllowed2 [A2TR]
                         UNDEFINED <> szStatusAllowed3 [A3TR]
                         UNDEFINED <> szStatusAllowed4 [A4TR]
                         UNDEFINED <> szStatusAllowed5 [A5TR]
                         UNDEFINED <> cSuppressErrorMessage [EV02]
                         UNDEFINED <> cErrorCode [ERR]
                         UNDEFINED <> mnNextNumber [ORNN]
                         UNDEFINED <> cLedgerRecordYN [WRTH]
               End If
               // End of SAR 3431691
               If GC Quantity Ordered [UORG] is not equal to VA frm_StoreQtyOrderedForConfg [UORG]
                    GB Quantity Canceled [SOCN] = <NULL>
                    GC Quantity Backordered [SOBK] = <NULL>
                    GC Quantity Shipped [SOQS] = <NULL>
               End If
               // //End of  SAR#3094014
               // //SAR#2795791
               GB Extended Price [AEXP] = VA frm_KitExtPrice [UPRC]
               GB Foreign Extended Price [FEA] = VA frm_KitForeignExtPrice [UPRC]
               GB Extended Cost [ECST] = VA frm_mnExtCost_UNCS [UNCS]
               GB Foreign Extended Cost [FEC] = VA frm_mnForExtCost_FUC [FUC]
               // 2800212
               If VA frm_DTAI_szErrorMsgCode [DTAI] is greater than <Blank>
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, VA frm_DTAI_szErrorMsgCode)
                    VA grd_EV25_CfgItemProcessed [EV25] = "0"
                    VA frm_ERRC_Error_Code [ERRC] = "1"
               Else
                    VA grd_EV25_CfgItemProcessed [EV25] = "1"
                    VA frm_ERRC_Error_Code [ERRC] = <NULL>
               End If
          End If
          //
          // Begin SAR 5715241
          // The following complex IF statement had corrupt specs. Hence it is being
          // broken down into simpler conditions. VA frm_cEV19cOKClickedForKit will be
          // set to '1' if the user processed the Kit Item inside app P41351
          // successfully and exited with OK button. VA frm_cEV01cOKClickedForConfigur
          // will be set to '1' if the user processed the Configured Item inside P32942
          // application and exited with OK button. In both these cases we want to do
          // the appropriate processing and create an order. Otherwise, we don't create
          // the order and delete the record from the cache.
          VA frm_EV19_cOKClickedForKit [EV19] = "0"
          VA frm_EV19_cOKClickedForConfigur [EV19] = "0"
          If VA frm_ERRC_Error_Code [ERRC] is equal to "1"
          And VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               VA frm_EV19_cOKClickedForKit [EV19] = "1"
               // SAR 6201276 -this variable is set to keep track whether OK button was ever
               // clicked in P41351.
               VA grd_OKButtonClickedOnceYes [EV01] = "1"
          End If
          If VA frm_ERRC_Error_Code [ERRC] is not equal to "1"
          And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          And VA frm_EV19_cCanceledOut [EV19] is not equal to "1"
               VA frm_EV19_cOKClickedForConfigur [EV19] = "1"
          End If
          If VA frm_EV19_cOKClickedForKit [EV19] is equal to "1"
          Or VA frm_EV19_cOKClickedForConfigur [EV19] is equal to "1"
               // End SAR 5715241
               // SAR 3982716-Begin, if OK back from Kit or Config Window, Callpreprocessor to
               // indicates it so the component lines will not call EditLine again (By setting
               // FFU2 field to 1)
               //
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    // 4478714
                    F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
                         VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                         FI Jobnumber [JOBS] -> mnJobNo [JOBS]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnWFLineNo [LNIX]
                         UNDEFINED <> szKeyCo [KCOO]
                         UNDEFINED <> mnOrderNo [DOCO]
                         UNDEFINED <> szOrderType [DCTO]
                         UNDEFINED <> mnLineNo [LNID]
                         UNDEFINED <> jdOriginalPromisedDate [OPDJ]
                         UNDEFINED <> jdPromisedPickDate [PPDJ]
                         UNDEFINED <> szThruGrade [THGD]
                         UNDEFINED <> mnThruPotency [THRP]
                         UNDEFINED <> szFromGrade [FRGD]
                         UNDEFINED <> mnFromPotency [FRMP]
                         UNDEFINED <> szSalesReportingCode1 [SRP1]
                         UNDEFINED <> szSalesReportingCode2 [SRP2]
                         UNDEFINED <> szSalesReportingCode3 [SRP3]
                         UNDEFINED <> szSalesReportingCode4 [SRP4]
                         UNDEFINED <> szSalesReportingCode5 [SRP5]
                         UNDEFINED <> szPurchasingReportCode1 [PRP1]
                         UNDEFINED <> szPurchasingReportCode2 [PRP2]
                         UNDEFINED <> szPurchasingReportCode3 [PRP3]
                         UNDEFINED <> szPurchasingReportCode4 [PRP4]
                         UNDEFINED <> szPurchasingReportCode5 [PRP5]
                         UNDEFINED <> szPaymentTerms [PTC]
                         UNDEFINED <> cBasedonDate [DTBS]
                         UNDEFINED <> mnDiscountTrade [TRDC]
                         UNDEFINED <> szPricingCategory [PRGR]
                         UNDEFINED <> mnDiscountCash [CADC]
                         UNDEFINED <> szCompanyKey [KCO]
                         UNDEFINED <> mnInvoiceNo [DOC]
                         UNDEFINED <> szDocumentType [DCT]
                         UNDEFINED <> szTaxArea [TXA1]
                         UNDEFINED <> szTaxExplanationCode [EXR1]
                         UNDEFINED <> cPriorityProcessing [PRIO]
                         UNDEFINED <> cBackordersAllowedYN [BACK]
                         UNDEFINED <> cSubstitutesAllowedYN [SBAL]
                         UNDEFINED <> szNatureOfTransaction [NTR]
                         UNDEFINED <> szRouteCode [ROUT]
                         UNDEFINED <> szStopCode [STOP]
                         UNDEFINED <> szZoneNumber [ZON]
                         UNDEFINED <> cApplyFreightYN [AFT]
                         UNDEFINED <> szFreightHandlingCode [FRTH]
                         UNDEFINED <> szShippingCommodityClass [SHCM]
                         UNDEFINED <> szShippingConditionsCode [SHCN]
                         UNDEFINED <> szSerialNumberLot [SERN]
                         UNDEFINED <> szRepriceBasketPriceCat [RPRC]
                         UNDEFINED <> szOrderRepriceCategory [ORPR]
                         UNDEFINED <> szGlClass [GLC]
                         UNDEFINED <> cApplyCommissionYN [ACOM]
                         UNDEFINED <> szReasonCode [RCD]
                         UNDEFINED <> szUnitOfMeasureGrossWt [GWUM]
                         UNDEFINED <> szSubledger [SBL]
                         UNDEFINED <> cSubledgerType [SBLT]
                         UNDEFINED <> szCodeLocationTaxStat [LCOD]
                         UNDEFINED <> cWoOrderFreezeCode [UNCD]
                         UNDEFINED <> cCorrespondenceMethod [CRMD]
                         UNDEFINED <> szUserReservedCode [URCD]
                         UNDEFINED <> jdUserReservedDate [URDT]
                         UNDEFINED <> mnUserReservedAmount [URAT]
                         UNDEFINED <> mnUserReservedNumber [URAB]
                         UNDEFINED <> szUserReservedReference [URRF]
                         UNDEFINED <> szRateCodeFrieghtMisc [FRAT]
                         UNDEFINED <> jdDateInvoice [IVD]
                         UNDEFINED <> cUseWorkfile_WFOC [WFOC]
                         UNDEFINED <> cGenericChar1_EV01 [EV01]
                         UNDEFINED <> cGenericChar2_EV02 [EV02]
                         UNDEFINED <> szGenericString1_DL01 [DL01]
                         UNDEFINED <> szGenericSting2_DL02 [DL02]
                         UNDEFINED <> mnGenericMathNumeric1_MATH01 [MATH01]
                         UNDEFINED <> mnGenericMathNumeric2_MATH02 [MATH02]
                         VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF_EV01 [EV01]
                         UNDEFINED <> mnProcessID [PEID]
                         UNDEFINED <> mnTransactionID [TCID]
                         "1" -> cKitConfigWindowOpened [FFU2]
                         UNDEFINED <> mnShipmentNumber [SHPN]
                         UNDEFINED <> cCrossDockFlagYN [XDCK]
                         UNDEFINED <> mnCrossDockingPriority [XPTY]
                         UNDEFINED <> mnCrossDockOrderNumber [XORN]
                         UNDEFINED <> szCrossDockOrderType [XCTO]
                         UNDEFINED <> szCrossDockOrderCompany [XKCO]
                         UNDEFINED <> szCrossDockOrderSuffix [XSFX]
                         UNDEFINED <> mnCrossDockLineNumber [XLLN]
                         UNDEFINED <> szPullSignal [PSIG]
                         UNDEFINED <> jdDateRelease [RLDJ]
                         UNDEFINED <> mnTimeRelease [RLTM]
                         UNDEFINED <> mnDemandUniqueKey [DEID]
                         UNDEFINED <> mnBuyerNumber [ANBY]
                         UNDEFINED <> szSOEMBFInternalFlags [SOEF]
                         UNDEFINED <> cOPPartialLineShipmentAllowed [OPLL]
                         UNDEFINED <> cOPBackorderAllowed [OPBA]
                         UNDEFINED <> cOPSubstituteAllowed [OPSS]
                         UNDEFINED <> szOPMultiSourceGroup [OPMG]
                         UNDEFINED <> szOPShippingGroup [OPSG]
                         UNDEFINED <> cOPPromiseLineYN [OPYN]
                         UNDEFINED Could not find member in DSTR
                         UNDEFINED <> cAPSFixSourceLocation [FXSR]
               End If
               // SAR 3982716-End
               //
               //     If the user presses the OK button from the kit window and the price of th
               //     kit parent is based on the roll up total of the components, call the F421
               //     edit line again to update the kit parent's unit price.
               //
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                    // SAR 6627197- Get the interbranch flag
                    GetInterbranchSOALPH01(B4205100.GetInterbranchSOALPH01)
                         GC ALPH - SO Detail Flags (wf) [ALPH] -> szSalesOrderFlagsString [ALPH]
                         VA evt_cInterBranchFlag [EV01] <- cValue [EV01]
                    If GC Method of Price Calculation [PMTH] is equal to "1"
                    Or GC Method of Price Calculation [PMTH] is equal to "4"
                         // SAR 2902104
                         If PO cShoppingCartMode [CART] is not equal to <Blank>
                         And PO cShoppingCartMode [CART] is not equal to <NULL>
                              ChangeStringElement(B4002410.ChangeStringElement)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                                   "24" -> nPosition [INT01]
                                   "1" -> cCharacter [EV01]
                         End If
                         // SAR 5645529
                         RetrieveStringElement(B4002410.RetrieveStringElement)
                              GC ALPH - SO Detail Flags (wf) [ALPH] -> szString [CALCIT]
                              "33" -> nPosition [INT01]
                              VA evt_cAgreementPriceFound_EV01 [EV01] <- cCharacter [EV01]
                         //
                         // SAR 8955607 - Zero out all Prices orignally calculated just based on Parent
                         // so that they will be re-calculated based on the rolled up Extended price
                         // from Kit Window.
                         //
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              If GC Taxed Price Override Code [TPROV] is not equal to "1"
                                   GC Taxed Unit Price [TUPRC] = "0"
                                   GC Taxed Extended Price [TAEXP] = "0"
                                   GC Unit Tax Amount [UTA] = "0"
                                   GC Extended Tax Amount [ETA] = "0"
                                   GC Foreign Taxed Unit Price [TFUP] = "0"
                                   GC Foreign Taxed Extended Price [TFEA] = "0"
                                   GC Foreign Unit Tax Amount [FUTA] = "0"
                                   GC Foreign Extended Tax Amount [FETA] = "0"
                              End If
                              //
                              // When SO is using Taxed Prices, when multiple Kit Blankets are selected from
                              // P42216, it is possible that non-taxed Blankets could be selected as well.
                              // They will have PROV set with Non-Taxed Prices instead of TPROV. Do not zero
                              // them out and Taxed Prices will be calculated by B4201500.
                              //
                              If GC Price Over Cd [PROV] is not equal to "1"
                                   GC Unit Price [UPRC] = "0"
                                   GC Extended Price [AEXP] = "0"
                                   GC Foreign Unit Price [FUP] = "0"
                                   GC Foreign Extended Price [FEA] = "0"
                              End If
                         Else
                              //
                              If GC Price Over Cd [PROV] is not equal to "1"
                              And VA evt_cAgreementPriceFound_EV01 [EV01] is not equal to "1"
                                   // SAR 5645529- Add one AND condition
                                   GC Unit Price [UPRC] = "0"
                                   GC Extended Price [AEXP] = BC Amount - Extended Price (F4211.0) [AEXP]
                                   GC Foreign Unit Price [FUP] = "0"
                                   GC Foreign Extended Price [FEA] = BC Amount - Foreign Extended Price (F4211.0) [FEA]
                              End If
                         End If
                    End If
                    //
                    // SAR 5893371
                    If GC Method of Price Calculation [PMTH] is equal to "2"
                         // SAR 8955607 - Zero out all prices if they are not overridden
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              If GC Taxed Price Override Code [TPROV] is not equal to "1"
                                   GC Taxed Unit Price [TUPRC] = "0"
                                   GC Taxed Extended Price [TAEXP] = "0"
                                   GC Unit Tax Amount [UTA] = "0"
                                   GC Extended Tax Amount [ETA] = "0"
                                   GC Foreign Taxed Unit Price [TFUP] = "0"
                                   GC Foreign Taxed Extended Price [TFEA] = "0"
                                   GC Foreign Unit Tax Amount [FUTA] = "0"
                                   GC Foreign Extended Tax Amount [FETA] = "0"
                                   VA frm_KitExtPrice [UPRC] = "0"
                                   VA frm_KitForeignExtPrice [UPRC] = "0"
                              End If
                              //
                              // When SO is using Taxed Prices, when multiple Kit Blankets are selected from
                              // P42216, it is possible that non-taxed Blankets could be selected as well.
                              // They will have PROV set with Non-Taxed Prices instead of TPROV. Do not zero
                              // them out and Taxed Prices will be calculated by B4201500.
                              //
                              If GC Price Over Cd [PROV] is not equal to "1"
                                   GC Unit Price [UPRC] = "0"
                                   GC Extended Price [AEXP] = "0"
                                   GC Foreign Unit Price [FUP] = "0"
                                   GC Foreign Extended Price [FEA] = "0"
                                   VA frm_KitExtPrice [UPRC] = "0"
                                   VA frm_KitForeignExtPrice [UPRC] = "0"
                              End If
                         Else
                              If GC Price Over Cd [PROV] is not equal to "1"
                              And VA evt_cAgreementPriceFound_EV01 [EV01] is not equal to "1"
                                   GC Unit Price [UPRC] = "0"
                                   GC Foreign Unit Price [FUP] = "0"
                                   // SAR 6627197
                                   VA frm_KitExtPrice [UPRC] = "0"
                                   VA frm_KitForeignExtPrice [UPRC] = "0"
                              End If
                         End If
                         If VA evt_cInterBranchFlag [EV01] is equal to "4"
                              VA frm_mnExtCost_UNCS [UNCS] = "0"
                              VA frm_mnForExtCost_FUC [FUC] = "0"
                         End If
                    End If
                    //
                    GC Unit Cost [UNCS] = "0"
                    GC Extended Cost [ECST] = BC Amount - Extended Cost (F4211.0) [ECST]
                    GC Foreign Unit Cost [FUC] = "0"
                    GC Foreign Extended Cost [FEC] = BC Amount - Foreign Extended Cost (F4211.0) [FEC]
                    //  SAR 2509281
                    // Begin SAR 5715241
                    // Disabling this line as this flag is being set earlier.
                    // End SAR 5715241
               End If
               //
               // Update Configured Items location, price, and cost
               //
               If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    // DUP SAR 4926118 - Reconfigure Bump Parent Status
                    GC Last Stat [LTTR] = <NULL>
                    GC Next Stat [NXTR] = <NULL>
                    //
                    GC Location  [LOCN] = GB Location  [LOCN]
                    GC Lot Serial Number [LOTN] = GB Lot Serial Number [LOTN]
                    GC Ln Ty [LNTY] = GB Ln Ty [LNTY]
                    GC Unit Weight [ITWT] = GB Unit Weight [ITWT]
                    // SAR#5072396 - Configurator will call EditLine directly to handle this now
                    // uncomment per configurator group
                    // SAR 6105874 Take away condition PROV != 1, the recalculated price will
                    
                    // till be processed for the parent line to be consistent with World
                    If GC Method of Price Calculation [PMTH] is not equal to <Blank>
                         //
                         // SAR 8955607 - Zero out all Prices orignally calculated just based on Parent
                         // so that they will be re-calculated based on the rolled up Extended price
                         // from Config Window.
                         //
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              If GC Taxed Price Override Code [TPROV] is not equal to "1"
                                   GC Taxed Unit Price [TUPRC] = "0"
                                   GC Taxed Extended Price [TAEXP] = "0"
                                   GC Unit Tax Amount [UTA] = "0"
                                   GC Extended Tax Amount [ETA] = "0"
                                   GC Foreign Taxed Unit Price [TFUP] = "0"
                                   GC Foreign Taxed Extended Price [TFEA] = "0"
                                   GC Foreign Unit Tax Amount [FUTA] = "0"
                                   GC Foreign Extended Tax Amount [FETA] = "0"
                              End If
                              //
                              If GC Price Over Cd [PROV] is not equal to "1"
                                   GC Unit Price [UPRC] = "0"
                                   GC Extended Price [AEXP] = "0"
                                   GC Foreign Unit Price [FUP] = "0"
                                   GC Foreign Extended Price [FEA] = "0"
                              End If
                         Else
                              GC Unit Price [UPRC] = "0"
                              GC Foreign Unit Price [FUP] = "0"
                              GC Extended Price [AEXP] = GB Extended Price [AEXP]
                              GC Foreign Extended Price [FEA] = GB Foreign Extended Price [FEA]
                         End If
                    End If
                    If VA grd_CSTO_Cost_Over [CSTO] is not equal to "1"
                         GC Unit Cost [UNCS] = "0"
                         GC Foreign Unit Cost [FUC] = "0"
                         GC Extended Cost [ECST] = GB Extended Cost [ECST]
                         GC Foreign Extended Cost [FEC] = GB Foreign Extended Cost [FEC]
                    End If
               End If
               //
               // SAR#2533839
               // If the Pricing Method is Equal to 2, since the EditLine has
               // already run and base price and advanced adjustment is applied, so the suppres
               // advanced pricing flag need to be set as well
               // SAR 2811392 - Remove the OR condition for PMTH = 2
               //
               If GC Method of Price Calculation [PMTH] is equal to "4"
                    // SAR 5953388 - Use Set function
                    SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "1" -> cValue [EV01]
                         UNDEFINED <> cErrorCode [ERRC]
               Else
                    SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "0" -> cValue [EV01]
                         UNDEFINED <> cErrorCode [ERRC]
               End If
               //
               // SAR 5645529 Begin
               If GC Method of Price Calculation [PMTH] is equal to ("1","4")
                    If GC Agreement Number [DMCT] is equal to <Blank>
                    Or GC Agreement Number [DMCT] is equal to <NULL>
                         If GC Method of Price Calculation [PMTH] is equal to "4"
                              SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "1" -> cValue [EV01]
                                   UNDEFINED <> cErrorCode [ERRC]
                         Else
                              SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "2" -> cValue [EV01]
                                   UNDEFINED <> cErrorCode [ERRC]
                         End If
                    Else
                         If VA evt_cAgreementPriceFound_EV01 [EV01] is not equal to "1"
                              If GC Method of Price Calculation [PMTH] is equal to "4"
                                   SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                                        GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                        "1" -> cValue [EV01]
                                        UNDEFINED <> cErrorCode [ERRC]
                              Else
                                   SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                                        GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                        "2" -> cValue [EV01]
                                        UNDEFINED <> cErrorCode [ERRC]
                              End If
                         Else
                              ChangeStringElement(B4002410.ChangeStringElement)
                                   GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                                   "19" -> nPosition [INT01]
                                   "1" -> cCharacter [EV01]
                         End If
                    End If
               Else
                    ChangeStringElement(B4002410.ChangeStringElement)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                         "19" -> nPosition [INT01]
                         "0" -> cCharacter [EV01]
               End If
               // SAR 5645529 End
               // SAR 2766675 - For Kits with a pricing method of 2, do not suppress base price
               // retrieval. (Add if condition - put existing call to String, Change String
               // Element in else clause).
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               And GC Method of Price Calculation [PMTH] is equal to "2"
                    // SAR 5953388 - Use Set function
                    SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "0" -> cValue [EV01]
                         UNDEFINED <> cErrorCode [ERRC]
               Else
                    SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "1" -> cValue [EV01]
                         UNDEFINED <> cErrorCode [ERRC]
               End If
               //
               // SAR 6887706 - Set flag 37 for user-entered dates
               VA grd_cDatesEnteredFlag37_EV01 [EV01] = "0"
               If VA grd_cDeliveryDateEntered_EV01 [EV01] is equal to "1"
               And VA grd_cShipDateEntered_EV01 [EV01] is equal to "1"
                    VA grd_cDatesEnteredFlag37_EV01 [EV01] = "3"
               Else
                    If VA grd_cDeliveryDateEntered_EV01 [EV01] is equal to "1"
                         VA grd_cDatesEnteredFlag37_EV01 [EV01] = "1"
                    End If
                    If VA grd_cShipDateEntered_EV01 [EV01] is equal to "1"
                         VA grd_cDatesEnteredFlag37_EV01 [EV01] = "2"
                    End If
               End If
               ChangeStringElement(B4002410.ChangeStringElement)
                    GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                    "37" -> nPosition [INT01]
                    VA grd_cDatesEnteredFlag37_EV01 [EV01] -> cCharacter [EV01]
               //
               // SAR 7999777 - If Pick Date is user entered, Set SOE Internal Flag 22 to 1
               If VA grd_cPickDateEntered_EV01 [EV01] is equal to "1"
                    SetPickDateEnteredSOEL22(B4205101.SetPickDateEnteredSOEL22)
                         VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                         VA grd_cPickDateEntered_EV01 [EV01] -> cValue [EV01]
               End If
               //
               // SAR 2587693
               // Change the parameters to the call of Edit Line. Replace GC Extended Price
               // and GC Foreign Extended Price  with VA frm_KitExtPrice and VA
               // KitForeignExtPrice respectively.
               //
               // SAR 3011549 - Begin/End CHANGE
               // SAR 2147209 - Begin/End CHANGE
               // SAR 3219753- Begin/End CHANGE
               // SAR 3406866, Pass in/out PEID and TCID
               // SAR 3763337 - Begin/End - Pass EMCU in/out of EL
               // SAR 4222621- pass Item Number and Short Item Number both directions to allow
               // the MBF to be called with short item number and return all other item numbers
               //
               // SAR 4799323
               //
               If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
               Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = 0
               End If
               // SAR#5072396 - Configurator will call EditLine directly now
               // add stocking type of C per configurator group
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    // DUP SAR 4926118 - Pass Next Status both ways instead of just in
                    // SAR 5946188
                    // 6089077
                    // SAR 6386961 Pass Release Number
                    // 6582030-Pass in the SOEMBFInternalFlag20 for manual adjustments to be
                    // preserved
                    // SAR 6368922 Pass GC Associated Text
                    // SAR 6911711,  passing in ExtCostTransfer for KitParent
                    // SAR 8087382 - Pass Price Effective Dates to Edit Line call for Parent
                    // SAR 8006950 - Pass the Project Number
                    // SAR 8955607 - Pass Taxed Prices fields to Edit Line
                    // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
                    // Production Short Number
                    F4211FSEditLine(B4200310.F4211FSEditLine)
                         FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                         VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                         VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                         VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                         VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                         VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
                         VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                         FC Order Company [KCOO] -> szOrderCo [KCOO]
                         FC Order Number [DOCO] -> mnOrderNo [DOCO]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         GC Line Number [LNID] -> mnLineNo [LNID]
                         GC Business Unit [MCU] -> szBusinessUnit [MCU]
                         GC Ship To Number [SHAN] -> mnShipToNo [SHAN]
                         GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                         GC Sched Pick [PDDJ] -> jdPromisedDate [PDDJ]
                         GC Cancel Date [CNDJ] -> jdCancelDate [CNDJ]
                         GC Promised Delivery [RSDJ] -> jdPromisedDlvryDate [RSDJ]
                         GC Item Number [UITM] <> szItemNo [UITM]
                         GC Location  [LOCN] <> szLocation [LOCN]
                         GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                         GC Description  [DSC1] -> szDescription1 [DSC1]
                         GC Description Line 2 [DSC2] -> szDescription2 [DSC2]
                         GC Ln Ty [LNTY] -> szLineType [LNTY]
                         GC Last Stat [LTTR] <> szLastStatus [LTTR]
                         GC Next Stat [NXTR] <> szNextStatus [NXTR]
                         GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                         GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                         GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                         GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                         GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                         VA frm_KitExtPrice [UPRC] <> mnExtendedPrice [AEXP]
                         GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                         VA frm_mnExtCost_UNCS [UNCS] <> mnExtendedCost [ECST]
                         GC Print Message [INMG] <> szPrintMesg [INMG]
                         GC Pay Inst [RYIN] -> cPaymentInstrument [RYIN]
                         GC Adj. Schedule [ASN] -> szAdjustmentSchedule [ASN]
                         GC Taxable  [TAX1] -> cSalesTaxableYN [TAX1]
                         GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                         GC UM  [UOM] -> szTransactionUOM [UOM]
                         GC PR UM [UOM4] -> szPricingUOM [UOM4]
                         GC Unit Weight [ITWT] -> mnItemWeight [ITWT]
                         GC Wt U/M [WTUM] -> szWeightUOM [WTUM]
                         GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                         VA frm_KitForeignExtPrice [UPRC] <> mnForeignExtPrice [FEA]
                         GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                         VA frm_mnForExtCost_FUC [FUC] <> mnForeignExtCost [FEC]
                         GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                         VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                         "EP4210" -> szCMProgramID [JPID]
                         SL VersionName -> szCMVersion [VERS]
                         GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                         GC Related Item No [RLIT] -> szRelatedKitItemNo [RLIT]
                         GC Kit Master Line No [KTLN] -> mnKitMasterLineNo [KTLN]
                         GC Kit Cpnt Line No [CPNT] -> mnComponentLineNo [CPNT]
                         GC Price Over Cd [PROV] -> cOverridePrice [PROV]
                         VA grd_CSTO_Cost_Over [CSTO] -> cOverrideCost [CSTO]
                         VA frm_USER_User_ID [USER] -> szUserID [USER]
                         VA frm_UPDJ_System_Date [UPDJ] -> jdDateUpdated [UPMJ]
                         FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                         FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                         VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                         VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                         VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                         GC Source of Data [EV17] <> cWKSourceOfData [EV06]
                         PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                         VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                         VA grd_STKT_Stocking_Type [STKT] -> cStockingType [STKT]
                         GC OKCO- Doc Co (wf) [OKCO] -> szOriginalOrderKeyCo [OKCO]
                         GC Original Order No [OORN] -> szOriginalOrderNo [OORN]
                         GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                         GC Original Line Number [OGNO] -> mnOriginalOrderLineNo [OGNO]
                         GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                         GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                         VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                         GC Short Item No [ITM] <> mnShortItemNo [ITM]
                         VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                         FC Business Unit 2 [MCU2] -> szTransferOrderToBranch [TMCU]
                         VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                         VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                         FC Exchange Rate (Divisor) [CRRD] -> mnTOEPOExchangeRate [CRRD]
                         FC To Currency Code [CRDC] -> szTOEPOCurrencyCode [CRCE]
                         GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
                         GC Price Effective Date [PEFJ] -> jdPriceEffectiveDate [PEFJ]
                         GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                         GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                         GC Line of Business [LOB] <> szLineofBusiness [LOB]
                         GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                         GC End Use [EUSE] <> szEndUse [EUSE]
                         GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                         GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                         GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                         GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                         GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                         GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                         GC Carrier Number [CARS] <> mnCarrier [CARS]
                         VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                         GC Unit Volume [ITVL] -> mnItemVolume_ITVL [ITVL]
                         GC Header Business Unit [EMCU] <> szRevenueBusinessUnit [EMCU]
                         GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                         FI mnProcessID [PEID] <> mnProcessID [PEID]
                         FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                         GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                         GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                         GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                         GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                         VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                         GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                         GC Sec UM [UOM2] <> szDualUOM [UOM2]
                         FI mnProjectNumber [PRJM] -> mnProjectNumber [PRJM]
                         GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                         FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                         FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                         VA frm_mnAmtPOCost_ECST [ECST] -> mnAmountPOCost [ECST]
                         VA frm_mnExtCostTransfer_TCST [TCST] -> mnTransferCost [ECST]
                         GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                         "1" -> cKitProcessingRequired [EV11]
                         GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                         GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                         GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                         GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                         GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                         GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                         GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                         GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                         GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                         GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                         GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                         GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                         "2" -> cSuppressProdNoGenerate [EV01]
                         GC GeneratedProduction NumberShort [PNS] -> mnGeneratedProdNoShort [PNS]
                         VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
               End If
               If SV Error_Status is equal to CO SUCCESS
                    //
                    // If the Currency is off or the currency Check box is not checked  i.e., the
                    // transaction was entered in domestic currency then assign the prices and costs
                    // values to saved prices and costs fields
                    //
                    If SL CurrencyProcessing is equal to "N"
                    Or FC Mode (F) [CRRM] is equal to "D"
                         // SAR 8955603 - Store the saved taxed prices for order line
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Taxed Unit Price [TUPRC]
                              VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Taxed Extended Price [TAEXP]
                         End If
                         // SAR 8955607 - Refresh Grid Column value with the Ext Price re-calculated by
                         // Edit Line
                         GC Extended Price [AEXP] = VA frm_KitExtPrice [UPRC]
                         VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Unit Price [UPRC]
                         VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = GC Unit Cost [UNCS]
                         VA grd_XCST_Saved_Ext_Cost [XCST] = GC Extended Cost [ECST]
                         VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Extended Price [AEXP]
                    Else
                         // SAR 8955603 - Store the saved taxed prices for order line
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                              VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Foreign Taxed Unit Price [TFUP]
                              VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Foreign Taxed Extended Price [TFEA]
                         End If
                         // SAR 8955607 - Refresh Grid Column value with the Ext Price re-calculated by
                         // Edit Line
                         GC Foreign Extended Price [FEA] = VA frm_KitForeignExtPrice [UPRC]
                         VA grd_UCSTR_Saved_Unit_Price [UCSTR] = GC Foreign Unit Price [FUP]
                         VA grd_XEXP_Saved_Ext_Price [XEXP] = GC Foreign Extended Price [FEA]
                         VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = GC Foreign Unit Cost [FUC]
                         VA grd_XCST_Saved_Ext_Cost [XCST] = GC Foreign Extended Cost [FEC]
                    End If
                    // SAR 3453030
                    If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                    And GC Last Stat [LTTR] is equal to "900"
                         GC Extended Cost [ECST] = "0"
                         GC Foreign Extended Cost [FEC] = "0"
                         GC Foreign Extended Price [FEA] = "0"
                         GC Extended Price [AEXP] = "0"
                    End If
                    // End of SAR 3453030
               End If
               //
               // Begin SAR 5715241
          Else
               // End SAR 5715241
               //
               //     IF THE USER PRESS THE CANCEL BUTTON IN THE KIT WINDOW
               //    AND  THE USER IS IN    ADD MODE
               //     CANCEL THE PARENT RECORD FROM THE WORK FILE - BECAUSE
               //    NO KIT COMPONENT LINES WERE WRITTEN TO THE WORK FILE
               // Begin SAR 5715241
               // Disabling this line as this flag is being set earlier.
               // End SAR 5715241
               //
               // SAR#5072396-Cofigurator will handle this on the Parent now also
               // add condition back per configurator group
               // SAR 6548616 - Add line action code instead of form action code when kit
               // components are cancelled out in kit window
               // Bug# 11738762
               If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               Or SV Form_ Mode is equal to CO ADD_MODE
                    // SAR 3011549 - Begin/End CHANGE
                    // SAR 3406866, Pass in/out PEID and TCID
                    // SAR 4222621- pass Item Number and Short Item Number both directions to allow
                    // the MBF to be called with short item number and return all other item numbers
                    // SAR 5946188
                    // SAR 6201276
                    If VA grd_OKButtonClickedOnceYes [EV01] is not equal to "1"
                         // SAR 6386961 Pass Release Number
                         // SAR 6368922 Pass GC Associated Text
                         // SAR 8006950 - Pass the Project Number
                         // SAR 8955607 - Pass Taxed Prices fields to Edit Line
                         // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
                         // Production Short Number
                         F4211FSEditLine(B4200310.F4211FSEditLine)
                              FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                              "D" -> cCMLineAction [ACTN]
                              "1" -> cCMProcessEdits [EV01]
                              VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                              VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                              VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                              FC Order Company [KCOO] <> szOrderCo [KCOO]
                              FC Order Number [DOCO] <> mnOrderNo [DOCO]
                              FC Order Type [DCTO] <> szOrderType [DCTO]
                              GC Line Number [LNID] <> mnLineNo [LNID]
                              FC Business Unit [MCU] <> szBusinessUnit [MCU]
                              GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                              GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                              GC Promised Delivery [RSDJ] <> jdPromisedDate [PDDJ]
                              GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                              GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                              GC Item Number [UITM] <> szItemNo [UITM]
                              GC Location  [LOCN] -> szLocation [LOCN]
                              GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                              GC Description  [DSC1] <> szDescription1 [DSC1]
                              GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                              GC Ln Ty [LNTY] -> szLineType [LNTY]
                              GC Last Stat [LTTR] <> szLastStatus [LTTR]
                              GC Next Stat [NXTR] <> szNextStatus [NXTR]
                              GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                              GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                              GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                              GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                              GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                              GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                              GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                              GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                              GC Print Message [INMG] <> szPrintMesg [INMG]
                              GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                              GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                              GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                              GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                              GC UM  [UOM] <> szTransactionUOM [UOM]
                              GC PR UM [UOM4] <> szPricingUOM [UOM4]
                              GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                              GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                              GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                              GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                              GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                              GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                              GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                              "EP4210" -> szCMProgramID [JPID]
                              SL VersionName -> szCMVersion [VERS]
                              GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                              GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                              GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                              GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                              GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                              VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                              VA frm_USER_User_ID [USER] <> szUserID [USER]
                              VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                              FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                              VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                              <Blank> -> cWKSourceOfData [EV06]
                              PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                              VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                              VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
                              GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                              GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                              GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                              GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                              GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                              GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                              VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                              GC Short Item No [ITM] <> mnShortItemNo [ITM]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                              GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                              VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                              VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                              GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                              GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                              GC Line of Business [LOB] <> szLineofBusiness [LOB]
                              GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                              GC End Use [EUSE] <> szEndUse [EUSE]
                              GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                              GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                              GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                              GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
                              GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                              GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                              GC Carrier Number [CARS] <> mnCarrier [CARS]
                              VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                              GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                              FI mnProcessID [PEID] <> mnProcessID [PEID]
                              FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                              GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                              GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                              GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                              GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                              VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                              GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                              GC Sec UM [UOM2] <> szDualUOM [UOM2]
                              FI mnProjectNumber [PRJM] -> mnProjectNumber [PRJM]
                              GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                              FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                              FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                              GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                              GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                              GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                              GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                              GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                              GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                              GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                              GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                              GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                              GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                              GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                              GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                              GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                              "1" -> cSuppressProdNoGenerate [EV01]
                              VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
                         // SAR 6894965
                         If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "8"
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = "0"
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] = "0"
                         End If
                    End If
               End If
               // SAR 2813777
               // SAR#5072396-Cofigurator will handle this on the Parent now also
               // add condition back per configurator group
               // Bug# 11738762 - Delete disabled lines
               If SV Form_ Mode is equal to CO ADD_MODE
               And VA frm_EV19_cCanceledOut [EV19] is equal to "1"
               Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
               And VA frm_EV19_cCanceledOut [EV19] is not equal to "1"
                    // SAR 3011549 - Begin/End CHANGE
                    // SAR 3406866, Pass in/out PEID and TCID
                    // SAR 4222621- pass Item Number and Short Item Number both directions to allow
                    // the MBF to be called with short item number and return all other item numbers
                    // SAR 5946188
                    // SAR 6386961 Pass Release Number
                    // SAR 6368922 Pass GC Associated Text
                    // SAR 8006950 - Pass the Project Number
                    // SAR 8955607 - Pass Taxed Prices fields to Edit Line
                    ! F4211FSEditLine(B4200310.F4211FSEditLine)
                    !      FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                    !      "D" -> cCMLineAction [ACTN]
                    !      "1" -> cCMProcessEdits [EV01]
                    !      VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                    !      VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                    !      VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                    !      VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                    !      FC Order Company [KCOO] <> szOrderCo [KCOO]
                    !      FC Order Number [DOCO] <> mnOrderNo [DOCO]
                    !      FC Order Type [DCTO] <> szOrderType [DCTO]
                    !      GC Line Number [LNID] <> mnLineNo [LNID]
                    !      FC Business Unit [MCU] <> szBusinessUnit [MCU]
                    !      GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                    !      GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                    !      GC Promised Delivery [RSDJ] <> jdPromisedDate [PDDJ]
                    !      GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                    !      GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                    !      GC Item Number [UITM] <> szItemNo [UITM]
                    !      GC Location  [LOCN] -> szLocation [LOCN]
                    !      GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                    !      GC Description  [DSC1] <> szDescription1 [DSC1]
                    !      GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                    !      GC Ln Ty [LNTY] -> szLineType [LNTY]
                    !      GC Last Stat [LTTR] <> szLastStatus [LTTR]
                    !      GC Next Stat [NXTR] <> szNextStatus [NXTR]
                    !      GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                    !      GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                    !      GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                    !      GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                    !      GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                    !      GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                    !      GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                    !      GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                    !      GC Print Message [INMG] <> szPrintMesg [INMG]
                    !      GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                    !      GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                    !      GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                    !      GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                    !      GC UM  [UOM] <> szTransactionUOM [UOM]
                    !      GC PR UM [UOM4] <> szPricingUOM [UOM4]
                    !      GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                    !      GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                    !      GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                    !      GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                    !      GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                    !      GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                    !      GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                    !      VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                    !      "EP4210" -> szCMProgramID [JPID]
                    !      SL VersionName -> szCMVersion [VERS]
                    !      GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                    !      GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                    !      GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                    !      GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                    !      GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
                    !      GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                    !      VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                    !      VA frm_USER_User_ID [USER] <> szUserID [USER]
                    !      VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                    !      FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                    !      FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                    !      VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                    !      VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                    !      VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                    !      <Blank> -> cWKSourceOfData [EV06]
                    !      PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                    !      VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                    !      VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
                    !      GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                    !      GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                    !      GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                    !      GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                    !      GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                    !      GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                    !      VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                    !      GC Short Item No [ITM] <> mnShortItemNo [ITM]
                    !      VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                    !      GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                    !      VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                    !      VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                    !      GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                    !      GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                    !      GC Line of Business [LOB] <> szLineofBusiness [LOB]
                    !      GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                    !      GC End Use [EUSE] <> szEndUse [EUSE]
                    !      GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                    !      GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                    !      GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                    !      GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
                    !      GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                    !      GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                    !      GC Carrier Number [CARS] <> mnCarrier [CARS]
                    !      VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                    !      GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                    !      FI mnProcessID [PEID] <> mnProcessID [PEID]
                    !      FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                    !      GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                    !      GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                    !      GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                    !      GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                    !      VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szSOEMBFInternalFlags [SOEF]
                    !      GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                    !      GC Sec UM [UOM2] <> szDualUOM [UOM2]
                    !      FI mnProjectNumber [PRJM] -> mnProjectNumber [PRJM]
                    !      GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                    !      FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                    !      FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                    !      GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                    !      GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                    !      GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                    !      GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                    !      GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                    !      GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                    !      GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                    !      GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                    !      GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                    !      GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                    !      GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
               End If
               // Begin SAR 5715241
          End If
          // End SAR 5715241
     End If
End If
// SAR 5953388 - Use Set functions
// // SAR# 8768452 Kit Adjustment Overrridden Zero unit price
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And GC Method of Price Calculation [PMTH] is not equal to "1"
     SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
          "0" -> cValue [EV01]
Else
     If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               "0" -> cValue [EV01]
     End If
End If
SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     "0" -> cValue [EV01]
     UNDEFINED <> cErrorCode [ERRC]


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC PROCESS: Load Grid From Cache
Event: Button Clicked
Event GUID: 90932884-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szCustomerPO_VR01 [VR01]
evt_mnConfigLineNoInc_LINN [LINN]
evt_mnKitLineNoInc_LINN [LINN]
evt_mnTempRelatedKitCpt_RKIT [RKIT]
evt_TempKitMasterLineNo_KTLN [KTLN]
evt_cFirstImport_EV01 [EV01]
evt_cIsGridRowInserted_EV01 [EV01]
evt_szCustItemNum [CITM]
evt_szErrorID_DTAI [DTAI]
evt_szF4104Description1_DSC1 [DSC1]
evt_szF4104Description2_DSC2 [DSC2]
evt_cStockingType_STKT [STKT]
evt_cOrigUseTaxedPrices_UTP [UTP]
----------------------------------------
//
// Retrieve the current grid row and insert grid rows below that grid row
//
Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
If VA frm_mnNumGridRows [MATH01] is less than or equal to "0"
     VA frm_mnNumGridRows [MATH01] = [VA frm_mnNumGridRows [MATH01]]+1
End If
Clear Grid Buffer(FC Grid)
VA frm_EV21_LastCacheRecord [EV21] = "0"
VA frm_LNID_CacheLineNumber [LNID] = "0"
//
// While there are more records in the cache, insert grid rows
//
If PO mnDefaultLineIncrement [LNIX] is less than or equal to "0"
     PO mnDefaultLineIncrement [LNIX] = "1"
End If
VA frm_cachecursor_GENLNG [GENLNG] = "0"
// ******Begin SAR 4825721 - Initializing line numbering variables
VA evt_cFirstImport_EV01 [EV01] = "1"
VA evt_mnKitLineNoInc_LINN [LINN] = 1/100
VA evt_mnConfigLineNoInc_LINN [LINN] = 1/1000
// *******End SAR 4825721 - Initializing line numbering variables
While VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
     If VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
          // *****************************************************************************
          // SAR 4147798 Consolidate VA grd_EV25_CfgItemProcessed and
          // VA grd_EV12_KitProcessed into one indicator only: cGetFromHistory
          // *****************************************************************************
          GB cGetFromHistory [EV01] = "1"
          // SAR 4147798- End
          // *************************************************************************
          // SAR 2841671
          // Added Line Type as one of the Parameters to be returned by the BSFN.
          // *************************************************************************
          //
          // SAR 2921479 Pass Back The WF LineNumber
          //
          // SAR 5216847 - retrieve ALPH
          // SAR 5491734- return PC1,PC2, and PC3
          F42UI11RetrieveSODInfo(B4201070.F42UI11RetrieveSODInfo)
               "2" -> cRetrieveFromCache [EV01]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               VA frm_mnCreditJobNum_JOBS [JOBS] -> mnJobnumberA [JOBS]
               GB WF Line Number [LNIX] <- mnLineNumberXREF [LNIX]
               VA frm_CORD_PO_Order_Number [CORD] <- mnDocumentOrderInvoiceE [DOCO]
               GB Orig Ord Type [OCTO] <- szOrderType [DCTO]
               GB OKCO- Doc Co (wf) [OKCO] <- szCompanyKeyOrderNo [KCOO]
               GB Original Line Number [OGNO] <- mnLineNumber [LNID]
               "1" -> cSuppressErrorMessage [EV02]
               VA frm_EV21_LastCacheRecord [EV21] <- cErrorCode [EV02]
               "N" -> cActionCode [ACTN]
               VA frm_cachecursor_GENLNG [GENLNG] <> idF42UI11Handle [GENLNG]
               GB Description  [DSC1] <- szDescription [DSC1]
               GB UM  [UOM] <- szUnitOfMeasureAsInput [UOM]
               GB Quantity Ordered [UORG] <- mnUnitsTransactionQty [UORG]
               GB Taxable  [TAX1] <- cTaxableYN [TAX1]
               GB Ln Ty [LNTY] <- szLineType [LNTY]
               GB Unit Price [UPRC] <- mnAmtPricePerUnit2 [UPRC]
               GB PR UM [UOM4] <- szUnitOfMeasurePricing [UOM4]
               GB Unit Cost [UNCS] <- mnAmountUnitCost [UNCS]
               GB Foreign Unit Price [FUP] <- mnAmtForPricePerUnit [FUP]
               GB Foreign Unit Cost [FUC] <- mnAmountForeignUnitCost [FUC]
               BC Item Number - Short (F4211.0) [ITM] <- mnIdentifierShortItem [ITM]
               BC 2nd Item Number (F4211.0) [LITM] <- szIdentifier2ndItem [LITM]
               BC 3rd Item Number (F4211.0) [AITM] <- szIdentifier3rdItem [AITM]
               GB Business Unit [MCU] <- szBranchPlant [MCU]
               VA evt_TempKitMasterLineNo_KTLN [KTLN] <- mnKitMasterLineNumber [KTLN]
               VA evt_mnTempRelatedKitCpt_RKIT [RKIT] <- mnRelatedKitComponent [RKIT]
               VA grd_szCreditOrderFlags_ALPH [ALPH] <- szSalesOrderFlags [ALPH]
               GB Location  [LOCN] <- szLocation [LOCN]
               GB Lot Serial Number [LOTN] <- szLot [LOTN]
               GB Primary Supplier [VEND] <- mnSupplierNumber [VEND]
               GB PC 1 [UPC1] <- szPriceCode1 [UPC1]
               GB PC 2 [UPC2] <- szPriceCode2 [UPC2]
               GB PC 3 [UPC3] <- szPriceCode3 [UPC3]
               VA evt_szCustomerPO_VR01 [VR01] <- szCustomerPO [VR01]
               GB Adj. Schedule [ASN] <- szAdjustmentSchedule [ASN]
               GB Taxed Unit Price [TUPRC] <- mnTaxedUnitPrice [TUPRC]
               GB Taxed Extended Price [TAEXP] <- mnTaxedExtendedPrice [TAEXP]
               GB Foreign Taxed Unit Price [TFUP] <- mnForeignTaxedUnitPrice [TFUP]
               GB Foreign Taxed Extended Price [TFEA] <- mnForeignTaxedExtendedPrice [TFEA]
               GB Unit Tax Amount [UTA] <- mnUnitTaxAmount [UTA]
               GB Extended Tax Amount [ETA] <- mnExtendedTaxAmount [ETA]
               GB Foreign Unit Tax Amount [FUTA] <- mnForeignUnitTaxAmount [FUTA]
               GB Foreign Extended Tax Amount [FETA] <- mnForeignExtendedTaxAmount [FETA]
               GB Internal SO Tax Date [DTXJ] <- jdInternalSOTaxDate [DTXJ]
          // SAR 8955607 - Get the UTP flag for the Original Order to set the PROV/TPROV
          // flag accordingly
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
               VA evt_cOrigUseTaxedPrices_UTP [UTP] = "0"
               GetSalesOrderHeaderTaxTag(B4205360.GetSalesOrderHeaderTaxTag)
                    GB OKCO- Doc Co (wf) [OKCO] -> szCompanyKeyOrderNo [KCOO]
                    VA frm_CORD_PO_Order_Number [CORD] -> mnDocumentOrderInvoiceE [DOCO]
                    GB Orig Ord Type [OCTO] -> szOrderType [DCTO]
                    VA evt_cOrigUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
                    "1" -> cSuppressErrorMessage [SUPPS]
          End If
          GB Short Item No [ITM] = BC Item Number - Short (F4211.0) [ITM]
          // SAR 8805516 - Assign the frm_mnCreditJobNum_JOBS to GB CreditJobNumber to
          // store separately for each grid line
          // SAR# 8918535 - To copy Frm Credit Job Number to GB Credit Job Number field
          // for credit orders only. Because, Config item was using the same job number
          // for different purpose
          If VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
               GB CreditJobNumber [JOBS] = VA frm_mnCreditJobNum_JOBS [JOBS]
          End If
          //
          // SAR 5216847
          RetrieveStringElement(B4002410.RetrieveStringElement)
               VA grd_szCreditOrderFlags_ALPH [ALPH] -> szString [CALCIT]
               "9" -> nPosition [INT01]
               VA grd_cCreditMemoSO09_SO09 [SO09] <- cCharacter [EV01]
          If VA grd_cCreditMemoSO09_SO09 [SO09] is equal to "3"
          Or VA grd_cCreditMemoSO09_SO09 [SO09] is equal to "4"
               If VA frm_cCreditMemoVIDWarning_EV01 [EV01] is not equal to "1"
                    Set Control Error(FC Grid, "42B4")
                    VA frm_cCreditMemoVIDWarning_EV01 [EV01] = "1"
               End If
          End If
          // End SAR 5216847
          If VA evt_szCustomerPO_VR01 [VR01] is greater than <Blank>
               // SAR 4521866
               If FC Reference [VR01] is equal to <Blank>
               Or FC Reference [VR01] is equal to <NULL>
               Or FC Reference [VR01] is equal to "0"
                    FC Reference [VR01] = VA evt_szCustomerPO_VR01 [VR01]
               End If
          End If
          //
          ConvertNumericToString(B0000045.ConvertNumericToString)
               VA frm_CORD_PO_Order_Number [CORD] -> mnMathNumeric01 [MATH01]
               GB Original Order No [OORN] <- szVideoConstant30A [VC30A]
     Else
          If PO cShoppingCartMode [CART] is not equal to <Blank>
          And PO cShoppingCartMode [CART] is not equal to <NULL>
               // SAR 8955603 -Retrieve newly added values from F42UI11 cache
               F42UI11RetrieveSODInfo(B4201070.F42UI11RetrieveSODInfo)
                    VA frm_EV22_cCacheOn [EV22] -> cRetrieveFromCache [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnLineNumberXREF [LNIX]
                    VA frm_CORD_PO_Order_Number [CORD] <- mnDocumentOrderInvoiceE [DOCO]
                    GB Orig Ord Type [OCTO] <- szOrderType [DCTO]
                    GB OKCO- Doc Co (wf) [OKCO] <- szCompanyKeyOrderNo [KCOO]
                    GB Line Number [LNID] <- mnLineNumber [LNID]
                    "1" -> cSuppressErrorMessage [EV02]
                    VA frm_EV21_LastCacheRecord [EV21] <- cErrorCode [EV02]
                    "N" -> cActionCode [ACTN]
                    VA frm_cachecursor_GENLNG [GENLNG] <> idF42UI11Handle [GENLNG]
                    GB Description  [DSC1] <- szDescription [DSC1]
                    GB UM  [UOM] <- szUnitOfMeasureAsInput [UOM]
                    GB Quantity Ordered [UORG] <- mnUnitsTransactionQty [UORG]
                    GB Extended Price [AEXP] <- mnAmountExtendedPrice [AEXP]
                    GB Foreign Extended Price [FEA] <- mnAmountForeignExtPrice [FEA]
                    GB Taxable  [TAX1] <- cTaxableYN [TAX1]
                    GB Quantity Shipped [SOQS] <- mnUnitsQuantityShipped [SOQS]
                    GB Quantity Backordered [SOBK] <- mnUnitsQuanBackorHeld [SOBK]
                    GB Quantity Canceled [SOCN] <- mnUnitsQuantityCanceled [SOCN]
                    GB Ln Ty [LNTY] <- szLineType [LNTY]
                    GB Unit Price [UPRC] <- mnAmtPricePerUnit2 [UPRC]
                    GB PR UM [UOM4] <- szUnitOfMeasurePricing [UOM4]
                    GB Unit Cost [UNCS] <- mnAmountUnitCost [UNCS]
                    GB Extended Cost [ECST] <- mnAmountExtendedCost [ECST]
                    GB Foreign Unit Price [FUP] <- mnAmtForPricePerUnit [FUP]
                    GB Foreign Unit Cost [FUC] <- mnAmountForeignUnitCost [FUC]
                    GB Foreign Extended Cost [FEC] <- mnAmountForeignExtCost [FEC]
                    VA grd_ACTI_ActionHidden [ACTI] <- cF42UI11Action [EV03]
                    BC Item Number - Short (F4211.0) [ITM] <- mnIdentifierShortItem [ITM]
                    BC 2nd Item Number (F4211.0) [LITM] <- szIdentifier2ndItem [LITM]
                    BC 3rd Item Number (F4211.0) [AITM] <- szIdentifier3rdItem [AITM]
                    GB Business Unit [MCU] <- szBranchPlant [MCU]
                    VA frm_RCUP_Recrd_Unprcessed_Flag [RCUP] <- cUnprocessedRecordFlag [RCUP]
                    GB Kit Master Line No [KTLN] <- mnKitMasterLineNumber [KTLN]
                    GB Related Kit Cpnt [RKIT] <- mnRelatedKitComponent [RKIT]
                    GB ALPH - SO Detail Flags (wf) [ALPH] <- szSalesOrderFlags [ALPH]
                    GB Method of Price Calculation [PMTH] <- cParentItmMethdOfPriceCalcn [PMTH]
                    GB Location  [LOCN] <- szLocation [LOCN]
                    GB Lot Serial Number [LOTN] <- szLot [LOTN]
                    GB Unit Weight [ITWT] <- mnAmountUnitWeight [ITWT]
                    GB Last Stat [LTTR] <- szStatusCodeLast [LTTR]
                    GB Next Stat [NXTR] <- szStatusCodeNext [NXTR]
                    GB Request Date [DRQJ] <- jdDateRequested [DRQJ]
                    GB Sched Pick [PDDJ] <- jdScheduledPickDate [PDDJ]
                    GB Promised Ship [PPDJ] <- jdPromisedShipDate [PPDJ]
                    GB Cancel Date [CNDJ] <- jdCancelDate [CNDJ]
                    GB Promised Delivery [RSDJ] <- jdPromisedDeliverDt [RSDJ]
                    GB Cost Rule [PRP5] <- szLandedCost [PRP5]
                    GB Primary Supplier [VEND] <- mnSupplierNumber [VEND]
                    GB Ship To Number [SHAN] <- mnAddressNumberShipTo [SHAN]
                    GB Description Line 2 [DSC2] <- szDescriptionLine2 [DSC2]
                    GB Wt U/M [WTUM] <- szWeightUnitOfMeasure [WTUM]
                    GB Pay Inst [RYIN] <- cPaymentInstrument [RYIN]
                    GB Print Message [INMG] <- szPrintMessage [INMG]
                    GB Agreement Number [DMCT] <- szAgreementNumber [DMCT]
                    GB Supp No [DMCS] <- mnAgreementSupplmnt [DMCS]
                    GB Mod Trn [MOT] <- szModeOfTransport [MOT]
                    GB Duty Sts [DTYS] <- szDutyStatus [DTYS]
                    GB Carrier Number [CARS] <- mnCarrier [CARS]
                    GB Line of Business [LOB] <- szLineofBusiness [LOB]
                    GB End Use [EUSE] <- szEndUse [EUSE]
                    GB Header Business Unit [EMCU] <- szRevenueBusUnit [EMCU]
                    GB PC 1 [UPC1] <- szPriceCode1 [UPC1]
                    GB PC 2 [UPC2] <- szPriceCode2 [UPC2]
                    GB PC 3 [UPC3] <- szPriceCode3 [UPC3]
                    GB Taxed Unit Price [TUPRC] <- mnTaxedUnitPrice [TUPRC]
                    GB Taxed Extended Price [TAEXP] <- mnTaxedExtendedPrice [TAEXP]
                    GB Foreign Taxed Unit Price [TFUP] <- mnForeignTaxedUnitPrice [TFUP]
                    GB Foreign Taxed Extended Price [TFEA] <- mnForeignTaxedExtendedPrice [TFEA]
                    GB Unit Tax Amount [UTA] <- mnUnitTaxAmount [UTA]
                    GB Extended Tax Amount [ETA] <- mnExtendedTaxAmount [ETA]
                    GB Foreign Unit Tax Amount [FUTA] <- mnForeignUnitTaxAmount [FUTA]
                    GB Foreign Extended Tax Amount [FETA] <- mnForeignExtendedTaxAmount [FETA]
                    GB Internal SO Tax Date [DTXJ] <- jdInternalSOTaxDate [DTXJ]
               //
               //     Determine the primary item number to display using values from the
               //     Branch/Plant Constants F41001).
               //
               If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is less than or equal to <Blank>
                    ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                         BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
                         BC 2nd Item Number (F4211.0) [LITM] -> sz2ndItemNumber [LITM]
                         BC 3rd Item Number (F4211.0) [AITM] -> sz3rdItemNumber [AITM]
                         UNDEFINED <> cSymbolShortItem [SYM1]
                         UNDEFINED <> cSymbol2ndItem [SYM2]
                         UNDEFINED <> cSymbol3rdItem [SYM3]
                         FC Business Unit [MCU] -> szBranchPlant [MCU]
                         UNDEFINED <> szPrimaryItemNumber [UITM]
                         VA frm_SYMID_Primary_Item_Idntfr [SYMID] <- cSymbolidentifier [SYMID]
                         VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
                         "1" -> cSuppressErrorMsg [EV01]
                         UNDEFINED <> szErrorMsgID [DTAI]
                         UNDEFINED <> idPtrToF41001Record [GENLNG]
                         UNDEFINED <> szTemplate [TMPL]
                         UNDEFINED <> szSegment1 [SEG1]
                         UNDEFINED <> szSegment2 [SEG2]
                         UNDEFINED <> szSegment3 [SEG3]
                         UNDEFINED <> szSegment4 [SEG4]
                         UNDEFINED <> szSegment5 [SEG5]
                         UNDEFINED <> szSegment6 [SEG6]
                         UNDEFINED <> szSegment7 [SEG7]
                         UNDEFINED <> szSegment8 [SEG8]
                         UNDEFINED <> szSegment9 [SEG9]
                         UNDEFINED <> szSegment10 [SEG0]
                         UNDEFINED <> cMatrixControlled [MIC]
                         UNDEFINED <> cSymToIdentSegItem [SYM6]
                         UNDEFINED <> cSegmentSeparator [SEPS]
                    If VA frm_ERRC_Error_Code [ERRC] is equal to "1"
                         VA frm_SYMID_Primary_Item_Idntfr [SYMID] = "2"
                    End If
               End If
               If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "2"
               Or VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "1"
               And BC Item Number - Short (F4211.0) [ITM] is equal to "0"
                    GB Item Number [UITM] = BC 2nd Item Number (F4211.0) [LITM]
               Else
                    If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "3"
                         GB Item Number [UITM] = BC 3rd Item Number (F4211.0) [AITM]
                    Else
                         ConvertShortItemToLongItem(B4000450.ConvertShortItemToLongItem)
                              BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
                              GB Item Number [UITM] <- sz2ndItemNumber [LITM]
                    End If
               End If
               VA grd_EV25_CfgItemProcessed [EV25] = "1"
               //
               If VA frm_RCUP_Recrd_Unprcessed_Flag [RCUP] is not equal to "U"
               And VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
                    DecimalsTriggerGetbyCOCRCD(B1100007.DecimalsTriggerGetbyCOCRCD)
                         FC Order Company [KCOO] -> szCompany [CO]
                         FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                         GB Extended Price [AEXP] <> mnDomesticAmount01 [AN01]
                         GB Extended Cost [ECST] <> mnDomesticAmount02 [AN02]
                         UNDEFINED <> mnDomesticAmount03 [AN03]
                         UNDEFINED <> mnDomesticAmount04 [AN04]
                         UNDEFINED <> mnDomesticAmount05 [AN05]
                         UNDEFINED <> mnDomesticAmount06 [AN06]
                         UNDEFINED <> mnDomesticAmount07 [AN07]
                         UNDEFINED <> mnDomesticAmount08 [AN08]
                         UNDEFINED <> mnDomesticAmount09 [AN09]
                         UNDEFINED <> mnDomesticAmount10 [AN10]
                         UNDEFINED <> mnDomesticAmount11 [AN11]
                         UNDEFINED <> mnDomesticAmount12 [AN12]
                         UNDEFINED <> mnDomesticAmount13 [AN13]
                         UNDEFINED <> mnDomesticAmount14 [AN14]
                         UNDEFINED <> mnDomesticAmount15 [AN15]
                         GB Foreign Extended Price [FEA] <> mnForeignAmount01 [AN16]
                         GB Foreign Extended Cost [FEC] <> mnForeignAmount02 [AN17]
                         UNDEFINED <> mnForeignAmount03 [AN18]
                         UNDEFINED <> mnForeignAmount04 [AN19]
                         UNDEFINED <> mnForeignAmount05 [AN20]
                         UNDEFINED <> mnForeignAmount06 [AN21]
                         UNDEFINED <> mnForeignAmount07 [AN22]
                         UNDEFINED <> mnForeignAmount08 [AN23]
                         UNDEFINED <> mnForeignAmount09 [AN24]
                         UNDEFINED <> mnForeignAmount10 [AN25]
                         UNDEFINED <> mnForeignAmount11 [AN26]
                         UNDEFINED <> mnForeignAmount12 [AN27]
                         UNDEFINED <> mnForeignAmount13 [AN28]
                         UNDEFINED <> mnForeignAmount14 [AN29]
                         UNDEFINED <> mnForeignAmount15 [AN30]
                         UNDEFINED <> mnDomesticAmount16 [AN31]
                         UNDEFINED <> mnDomesticAmount17 [AN32]
                         UNDEFINED <> mnDomesticAmount18 [AN33]
                         UNDEFINED <> mnDomesticAmount19 [AN34]
                         UNDEFINED <> mnDomesticAmount20 [AN35]
                         UNDEFINED <> mnDomesticAmount21 [AN36]
                         UNDEFINED <> mnDomesticAmount22 [AN37]
                         UNDEFINED <> mnDomesticAmount23 [AN38]
                         UNDEFINED <> mnDomesticAmount24 [AN39]
                         UNDEFINED <> mnDomesticAmount25 [AN40]
                         UNDEFINED <> mnForeignAmount16 [AN41]
                         UNDEFINED <> mnForeignAmount17 [AN42]
                         UNDEFINED <> mnForeignAmount18 [AN43]
                         UNDEFINED <> mnForeignAmount19 [AN44]
                         UNDEFINED <> mnForeignAmount20 [AN45]
                         UNDEFINED <> mnForeignAmount21 [AN46]
                         UNDEFINED <> mnForeignAmount22 [AN47]
                         UNDEFINED <> mnForeignAmount23 [AN48]
                         UNDEFINED <> mnForeignAmount24 [AN49]
                         UNDEFINED <> mnForeignAmount25 [AN50]
               End If
               //
               // ---------------------------------------------------------------------------
               // 6545212 CRM CSS - display customer item number
               // ---------------------------------------------------------------------------
               If VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
               And VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
                    If PO szCustomerItemNumberXREF [XRT4] is greater than <Blank>
                         GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
                              BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
                              PO szCustomerItemNumberXREF [XRT4] -> szCrossReferenceType [XRT]
                              VA frm_mnUserABNumber [AN8] -> mnAddressNumber [AN8]
                              SL DateToday -> jdOrderDate [EXDJ]
                              VA evt_szErrorID_DTAI [DTAI] <- szErrorMesgID [DTAI]
                              "1" -> cSuppressErrorMesg [EV01]
                              VA evt_szCustItemNum [CITM] <- szCustomerSupplierItmNo [CITM]
                              VA evt_szF4104Description1_DSC1 [DSC1] <- szDescription1 [DSC1]
                              VA evt_szF4104Description2_DSC2 [DSC2] <- szDescription2 [DSC2]
                         If VA evt_szCustItemNum [CITM] is greater than <Blank>
                              GB Item Number [UITM] = VA evt_szCustItemNum [CITM]
                              GB Description  [DSC1] = VA evt_szF4104Description1_DSC1 [DSC1]
                              GB Description Line 2 [DSC2] = VA evt_szF4104Description2_DSC2 [DSC2]
                         Else
                              GB Item Number [UITM] = GB Item Number [UITM]
                         End If
                    Else
                         GB Item Number [UITM] = GB Item Number [UITM]
                    End If
               End If
               //
          Else
               //
               // -----------------------------------------------------------------------------
               // SAR 3096360, Add Condition to  Release Multiple  Blanket Orders
               // -----------------------------------------------------------------------------
               If VA frm_cBlanketCalled_EV01 [EV01] is equal to "1"
                    Press Button(FC ProcessBlanketOrder)
               Else
                    // Retrieve from cache that is used for Template Processing in regular (non-Web)
                    // mode
                    UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
                         GB Item Number [UITM] <- szItemNumber [UITM]
                         GB Business Unit [MCU] <- szBranchPlant [MCU]
                         GB Location  [LOCN] <- szLocation [LOCN]
                         GB Lot Serial Number [LOTN] <- szLotNumber [LOTN]
                         VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
                         GB Quantity Ordered [UORG] <- mnQuantity [UORG]
                         GB UM  [UOM] <- szUnitOfMeasure [UOM]
                         <Blank> -> cSuppressTerminateCache [EV02]
                         VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
               End If
          End If
     End If
     // SAR 8871759 - Don't set the UpdatedtoDetailWF. Edit Line will return the
     // correct value for this variable. Rolling back the change of 8583984
     //
     // SAR 8583984 - CSS - Populate the grd_EV18_UpdatedtoDetailWF flag value
     // incase updating an an order that was entered and saved in shopping cart
     // mode.
     ! If SV Form_ Mode is equal to CO ADD_MODE
     ! And PO cShoppingCartMode [CART] is greater than <Blank>
     ! And VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] is not equal to "0"
          ! VA grd_EV18_UpdatedtoDetailWF [EV18] = "1"
     ! End If
     //
     ! If VA grd_STKT_Stocking_Type [STKT] is less than or equal to <Blank>
          GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
               FC Business Unit [MCU] -> szBranch [MCU]
               BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
               VA evt_cStockingType_STKT [STKT] <- cStockingType [STKT]
               "1" -> cSuppressErrorMessage [EV01]
     ! End If
     //     Do not write Configured Components to grid in Shopping Cart mode
     If PO cShoppingCartMode [CART] is less than "1"
     Or GB Related Kit Cpnt [RKIT] is less than "1"
          // SAR 4147798 - Begin
          If VA frm_EV21_LastCacheRecord [EV21] is equal to "1"
               GB cGetFromHistory [EV01] = "0"
               VA grd_EV25_CfgItemProcessed [EV25] = "0"
               VA grd_EV12_KitProcessed [EV12] = "0"
          End If
          // SAR 4147798 - End
          //
          If VA frm_EV21_LastCacheRecord [EV21] is not equal to "1"
               If VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
                    If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is less than or equal to <Blank>
                         If FC Business Unit [MCU] is not equal to <Blank>
                              VA frm_szCreditBranch_MCUZ [MCUZ] = FC Business Unit [MCU]
                         End If
                         ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                              BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
                              BC 2nd Item Number (F4211.0) [LITM] -> sz2ndItemNumber [LITM]
                              BC 3rd Item Number (F4211.0) [AITM] -> sz3rdItemNumber [AITM]
                              UNDEFINED <> cSymbolShortItem [SYM1]
                              UNDEFINED <> cSymbol2ndItem [SYM2]
                              UNDEFINED <> cSymbol3rdItem [SYM3]
                              VA frm_szCreditBranch_MCUZ [MCUZ] -> szBranchPlant [MCU]
                              UNDEFINED <> szPrimaryItemNumber [UITM]
                              VA frm_SYMID_Primary_Item_Idntfr [SYMID] <- cSymbolidentifier [SYMID]
                              VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
                              "1" -> cSuppressErrorMsg [EV01]
                              UNDEFINED <> szErrorMsgID [DTAI]
                              UNDEFINED <> idPtrToF41001Record [GENLNG]
                              UNDEFINED <> szTemplate [TMPL]
                              UNDEFINED <> szSegment1 [SEG1]
                              UNDEFINED <> szSegment2 [SEG2]
                              UNDEFINED <> szSegment3 [SEG3]
                              UNDEFINED <> szSegment4 [SEG4]
                              UNDEFINED <> szSegment5 [SEG5]
                              UNDEFINED <> szSegment6 [SEG6]
                              UNDEFINED <> szSegment7 [SEG7]
                              UNDEFINED <> szSegment8 [SEG8]
                              UNDEFINED <> szSegment9 [SEG9]
                              UNDEFINED <> szSegment10 [SEG0]
                              UNDEFINED <> cMatrixControlled [MIC]
                              UNDEFINED <> cSymToIdentSegItem [SYM6]
                              UNDEFINED <> cSegmentSeparator [SEPS]
                         If VA frm_ERRC_Error_Code [ERRC] is equal to "1"
                              VA frm_SYMID_Primary_Item_Idntfr [SYMID] = "2"
                         End If
                    End If
                    If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "1"
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              BC Item Number - Short (F4211.0) [ITM] -> mnMathNumeric01 [MATH01]
                              GB Item Number [UITM] <- szVideoConstant30A [VC30A]
                    Else
                         If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "3"
                              GB Item Number [UITM] = BC 3rd Item Number (F4211.0) [AITM]
                         Else
                              GB Item Number [UITM] = BC 2nd Item Number (F4211.0) [LITM]
                         End If
                    End If
               End If
               //
               // *************************************************************************
               // SAR 2841671
               // Default  the PO Line Type only if it is not blanks.
               // *************************************************************************
               //
               If PO szDefaultLinetype [LNTY] is not equal to <Blank>
               And PO szDefaultLinetype [LNTY] is not equal to <NULL>
                    GB Ln Ty [LNTY] = PO szDefaultLinetype [LNTY]
               End If
               If PO cShoppingCartMode [CART] is not equal to <Blank>
               And PO cShoppingCartMode [CART] is not equal to <NULL>
               And GB Line Number [LNID] is not equal to "0"
               And GB Line Number [LNID] is not equal to <NULL>
                    VA frm_LNID_Last_Line_Number [LNID] = GB Line Number [LNID]
               Else
                    // Begin SAR 4825721
                    If VA evt_cFirstImport_EV01 [EV01] is not equal to "1"
                         If PO cShoppingCartMode [CART] is equal to <Blank>
                         Or PO cShoppingCartMode [CART] is equal to <NULL>
                              // If configurator child, increment the line # by .001
                              If VA frm_OrderGroupKeyID_OGID [OGID] is not equal to "0"
                                   IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                        VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                        VA frm_ItemGroupKeyID_IGID [IGID] -> mnLineNumberIncrement [LNIX]
                                        VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
                              Else
                                   // If kit child, increment the line # by .01
                                   // ********************
                                   // Sar 5318481, for credit memo, kit components are now processed by the MBF, an
                                   // components selected direcly from the P42025 will now be treated as stand alon
                                   // line(all the kit related information will be blank out).
                                   If VA evt_TempKitMasterLineNo_KTLN [KTLN] is not equal to "0"
                                   And VA evt_mnTempRelatedKitCpt_RKIT [RKIT] is equal to "0"
                                   And VA frm_cCreditMemoExit [EV24] is not equal to "1"
                                        IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                             VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                             VA frm_CustomerGroupKeyID_CGID [CGID] -> mnLineNumberIncrement [LNIX]
                                             VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
                                   Else
                                        IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                             VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                             PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
                                             VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
                                   End If
                              End If
                         Else
                              //     Configurator requires true line# to process CACHE
                              If VA frm_cCreditMemoProcess_EV24 [EV24] is not equal to "1"
                                   IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                        VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                        PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
                                        VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
                              End If
                         End If
                    Else
                         // SAR 4911071, Remove Assignment
                         VA evt_cFirstImport_EV01 [EV01] = "0"
                    End If
                    // SAR 4911071, Add Assignment
                    //     Line Number should not less than one
                    If VA frm_LNID_Last_Line_Number [LNID] is less than or equal to "0"
                         VA frm_LNID_Last_Line_Number [LNID] = "1"
                    End If
                    GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
                    // End SAR 4825721
               End If
               // Sar 5318481, take the GB ALPH out of the codition, then there is nothing in
               // the condition. Diable it
               //
               If GB ALPH - SO Detail Flags (wf) [ALPH] is equal to <Blank>
               Or GB ALPH - SO Detail Flags (wf) [ALPH] is equal to <NULL>
                    // SAR 5953388-Use Initialization function
                    InitializeSOALPHString(B4205100.InitializeSOALPHString)
                         GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               End If
               //
               If VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
                    GB Source of Data [EV17] = "6"
                    // SAR 3374139 - Begin ADD
                    // SAR# 7896209 CO From History, Changed Quantity
                    If VA grd_szCreditOrderFlags_ALPH [ALPH] is not equal to "1"
                    And PO cAgreementProcessing [SCH1] is less than or equal to <Blank>
                         // SAR 8955607 - Set the TRPOV / PROV flag based on the UTP falg reatined from
                         // Original Order
                         If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "0"
                              GB Price Over Cd [PROV] = "1"
                         Else
                              If VA evt_cOrigUseTaxedPrices_UTP [UTP] is equal to "1"
                                   GB Taxed Price Override Code [TPROV] = "1"
                              Else
                                   GB Price Over Cd [PROV] = "1"
                              End If
                         End If
                    End If
                    // SAR 3374139 - End ADD
                    // SAR 4256871
                    VA frm_cCreditMemoExit [EV24] = "1"
               End If
               // SAR 6418281
               VA frm_cCallFrmLoadGridCache [EV01] = "1"
               // SAR 4147798-Comment out, cGetFromHistory will handle now
               //
               // SAR 8953108 - Apparel Enhancement
               // Copy the dates returned from PCW10 to the newly added rows. Also set the
               // newly added hidden grid column (GC Row Inserted From PCW10 = 1) to indicate
               // the row is added from PCW10. This flag is used to skip collection template
               // and Apparel Matrix Item processing.
               //
               If VA frm_cApparelCalled_EV01 [EV01] is equal to "1"
                    GB Request Date [DRQJ] = VA frm_jdApparelReqDate_DRQJ [DRQJ]
                    GB Sched Pick [PDDJ] = VA frm_jdApparelSchdPickDate_PDDJ [PDDJ]
                    GB Promised Delivery [RSDJ] = VA frm_jdApparelPromDelDate_RSDJ [RSDJ]
                    GB Promised Ship [PPDJ] = VA frm_jdApparelPromShipDate_PPDJ [PPDJ]
                    GB Cancel Date [CNDJ] = VA frm_jdApparelCancelDate_CNDJ [CNDJ]
                    GB Row Inserted  From PCW10 [EV01] = "1"
               End If
               //
               //     Set error flag for Configured Item w/o configuration in CSS
               //
               VA evt_cIsGridRowInserted_EV01 [EV01] = "0"
               VA grd_cErrorConfigCSS_EV01 [EV01] = "0"
               If PO cShoppingCartMode [CART] is greater than "0"
               And GB Next Stat [NXTR] is not equal to "999"
                    If VA evt_cStockingType_STKT [STKT] is equal to "C"
                         If FC Order Number [DOCO] is greater than "0"
                              VA evt_mnTempRelatedKitCpt_RKIT [RKIT] = FC Order Number [DOCO]
                         Else
                              VA evt_mnTempRelatedKitCpt_RKIT [RKIT] = VA frm_CORD_PO_Order_Number [CORD]
                         End If
                         CacheProcessConfigurationID(B3201470.CacheProcessConfigurationID)
                              "1" -> cCacheActionCode [EV01]
                              "2" -> nIndexNumber [INT01]
                              "6" -> nNumberOfKeys [INT01]
                              VA evt_cIsGridRowInserted_EV01 [EV01] <- cCacheCodeError [EV01]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                              "42" -> szProductCode [SY]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              VA evt_mnTempRelatedKitCpt_RKIT [RKIT] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              "000" -> szOrderSuffix [SFXO]
                              GB Line Number [LNID] -> mnLineNumber [LNID]
                         If VA evt_cIsGridRowInserted_EV01 [EV01] is greater than "0"
                              VA grd_cErrorConfigCSS_EV01 [EV01] = "2"
                         End If
                    End If
               End If
               // SAR 7209915 - Insert Kit Component Rows as Protetected, non-selectable
               // and non-updateable row, as they are processed by Edit Line
               //
               If VA evt_TempKitMasterLineNo_KTLN [KTLN] is not equal to "0"
               And VA evt_mnTempRelatedKitCpt_RKIT [RKIT] is equal to "0"
                    Insert Grid Buffer Row(FC Grid, VA frm_mnNumGridRows,  <No>,  <Yes>,  <No>, <No>, <Yes>)
               Else
                    If VA evt_cStockingType_STKT [STKT] is equal to "K"
                    And VA frm_cBlanketCalled_EV01 [EV01] is equal to "1"
                         If GB Orig Ord Type [OCTO] is greater than <Blank>
                              //     Required Editline to call B4205220 to populate components
                              GB Price Over Cd [PROV] = "1"
                              SetFrmBlktReleaseALPH27(B4205100.SetFrmBlktReleaseALPH27)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "3" -> cValue [EV01]
                              SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "1" -> cValue [EV01]
                              SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "1" -> cValue [EV01]
                         Else
                              //     Required in row-exit asynch to bypass blanket
                              SetFrmBlktReleaseALPH27(B4205100.SetFrmBlktReleaseALPH27)
                                   GB ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                                   "5" -> cValue [EV01]
                         End If
                    End If
                    Insert Grid Buffer Row(FC Grid, VA frm_mnNumGridRows, <Yes>, <No>, <Yes>, <No>, <Yes>)
                    //
                    // SAR 8871759 - Don't get the Grid row for CSS.
                    If PO cShoppingCartMode [CART] is equal to <Blank>
                    Or PO cShoppingCartMode [CART] is equal to <NULL>
                         // SAR 8774801 - Assign stocking type to the right grid
                         Get Grid Row(FC Grid, VA frm_mnNumGridRows)
                         VA grd_STKT_Stocking_Type [STKT] = VA evt_cStockingType_STKT [STKT]
                    End If
                    //
                    // SAR 7203097 - Change the value to 2 if a new line is created for Blankets
                    If VA frm_cMultipleBlanket_EV01 [EV01] is equal to "1"
                         VA frm_cMultipleBlanket_EV01 [EV01] = "2"
                    End If
               End If
               //
               //     Set error for Configured Item w/o configuration in CSS
               If VA evt_cIsGridRowInserted_EV01 [EV01] is greater than "0"
                    Set Grid Cell Error(FC Grid, VA frm_mnNumGridRows, GC ItemNumber, "320D")
               End If
               // SAR 5926291-Set the cost override code to  1 if it is a credit oder from
               // history
               If VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
                    VA grd_CSTO_Cost_Over [CSTO] = "1"
               End If
               // SAR 5926291 - End
               VA frm_mnNumGridRows [MATH01] = [VA frm_mnNumGridRows [MATH01]]+1
               //
               // Begin SAR 4933377
               VA evt_cIsGridRowInserted_EV01 [EV01] = "1"
               // END SAR 4933377
               //
          End If
     End If
End While
//
// Begin SAR 4933377
//
If PO cShoppingCartMode [CART] is equal to <Blank>
Or PO cShoppingCartMode [CART] is equal to <NULL>
     If VA evt_cIsGridRowInserted_EV01 [EV01] is equal to "1"
          IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
               VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
               PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
               VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
     End If
End If
//
// End SAR 4933377
//
// SAR  3178921
//
If PO cShoppingCartMode [CART] is greater than <Blank>
     //
     // 6545212 CRM CSS - do not show old css text
     //
     If VA frm_cUseCRMCSS_EV01 [EV01] is not equal to "1"
          If VA frm_mnNumGridRows [MATH01] is greater than "1.00"
               Show Control(FC These are the items currently on your order.
               You may select 'OK' to continue with checkout, 
               or select more items.)
               Hide Control(FC Currently there are no items on your order.)
          Else
               Show Control(FC Currently there are no items on your order.)
               Hide Control(FC These are the items currently on your order.
               You may select 'OK' to continue with checkout, 
               or select more items.)
          End If
     Else
          If VA frm_cOverrideButtonClicked [EV01] is equal to "1"
               // ---------------------------------------------------------------------------
               // 6545212 CRM CSS - insert grid after deleting all rows, insert entry row
               // ---------------------------------------------------------------------------
               Insert Grid Buffer Row(FC Grid, VA frm_mnNumGridRows, <Yes>, <No>, <Yes>, <No>, <Yes>)
          End If
     End If
Else
     //     Perform row-exit to enable auto call P41351 after BLANKET split
     If VA frm_cBlanketCalled_EV01 [EV01] is equal to "1"
          Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
          Delete Grid Row(FC Grid, VA frm_mnNumGridRows)
          Insert Grid Buffer Row(FC Grid,  <After Last Row>,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
     End If
End If
//
// Update the last row
// SAR 3096360, Update last row for the Blanket Order
// SAR 6114914 - Begin - Update plast row for credit orders
//
// SAR 8953108 - Apparel Enhancement (Check for Apparel call as well)
//
If VA frm_EV07_Template_Called [EV07] is equal to "1"
Or VA frm_cBlanketCalled_EV01 [EV01] is equal to "1"
Or VA frm_cCreditMemoProcess_EV24 [EV24] is equal to "1"
Or VA frm_EV01_LoadGridFromCacheDone [EV01] is equal to "1"
Or VA frm_cApparelCalled_EV01 [EV01] is equal to "1"
     GB Ln Ty [LNTY] = PO szDefaultLinetype [LNTY]
     GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
     Update Grid Buffer Row(FC Grid, VA frm_mnNumGridRows,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
End If
// SAR 6114914 - End
//
// Free the handle to the cache
//
If VA frm_cachecursor_GENLNG [GENLNG] is not equal to "0"
And VA frm_cachecursor_GENLNG [GENLNG] is not equal to <NULL>
     FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
          VA frm_cachecursor_GENLNG [GENLNG] <> idGenericLong [GENLNG]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Hide/Show Currency (HIDDEN)
Event: Button Clicked
Event GUID: f57dfb36-a23a-11d0-a204-0000f6728a56
=============================================
If FC Mode (F) [CRRM] is equal to "D"
     If VA frm_ADVP_cAdv_Pricing [ADVP] is not equal to "Y"
          Hide Control(FC FAP-Foreign Total Display [TOT2])
     End If
     If PO cDisableorHidePrice [EV04] is less than "2"
          Hide Grid Column(FC Grid, GC ForeignUnit Price)
          Hide Grid Column(FC Grid, GC ForeignExtended Price)
          //
          // SAR 8955603 - Hide foreign taxed price columns regardless taxed pricing is
          // on or off.
          Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign UnitTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          //
          Show Grid Column(FC Grid, GC UnitPrice)
          Show Grid Column(FC Grid, GC ExtendedPrice)
          //
          // SAR 8955603 - Show/Hide domestic taxed price columns according to the taxed
          // prices flag.
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Show Grid Column(FC Grid, GC TaxedUnit Price)
               Show Grid Column(FC Grid, GC TaxedExtended Price)
               Show Grid Column(FC Grid, GC Unit TaxAmount)
               Show Grid Column(FC Grid, GC ExtendedTax Amount)
          Else
               Hide Grid Column(FC Grid, GC TaxedUnit Price)
               Hide Grid Column(FC Grid, GC TaxedExtended Price)
               Hide Grid Column(FC Grid, GC Unit TaxAmount)
               Hide Grid Column(FC Grid, GC ExtendedTax Amount)
          End If
          //
     End If
     If PO cDisableorHideCost [EV03] is less than "2"
          Hide Grid Column(FC Grid, GC Foreign UnitCost)
          Hide Grid Column(FC Grid, GC Foreign ExtendedCost)
          Show Grid Column(FC Grid, GC UnitCost)
          Show Grid Column(FC Grid, GC ExtendedCost)
     End If
Else
     If VA frm_ADVP_cAdv_Pricing [ADVP] is not equal to "Y"
          Hide Control(FC OTOT: Order Total Display [TOT1])
     End If
     If PO cDisableorHidePrice [EV04] is less than "2"
          Hide Grid Column(FC Grid, GC UnitPrice)
          Hide Grid Column(FC Grid, GC ExtendedPrice)
          //
          // SAR 8955603 - Hide domestic taxed price columns regardless taxed pricing is
          // on or off.
          Hide Grid Column(FC Grid, GC TaxedUnit Price)
          Hide Grid Column(FC Grid, GC TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Unit TaxAmount)
          Hide Grid Column(FC Grid, GC ExtendedTax Amount)
          //
          Show Grid Column(FC Grid, GC ForeignUnit Price)
          Show Grid Column(FC Grid, GC ForeignExtended Price)
          //
          // SAR 8955603 - Show/Hide foreign taxed price columns according to the taxed
          // prices flag.
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Show Grid Column(FC Grid, GC Foreign TaxedUnit Price)
               Show Grid Column(FC Grid, GC Foreign TaxedExtended Price)
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Else
               Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
               Hide Grid Column(FC Grid, GC Foreign UnitTax Amount)
               Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
               Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          End If
          //
     End If
     If PO cDisableorHideCost [EV03] is less than "2"
          Hide Grid Column(FC Grid, GC UnitCost)
          Hide Grid Column(FC Grid, GC ExtendedCost)
          Show Grid Column(FC Grid, GC Foreign UnitCost)
          Show Grid Column(FC Grid, GC Foreign ExtendedCost)
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Misc Button Processing
Event: Button Clicked
Event GUID: f57dfb37-a23a-11d0-a204-0000f6728a56
=============================================
// 5077314               NR7030835                    02/12/02
// SAR 1778455
// SAR 5595998 Begin
// This button is used for misc processes that need a button to press
// but aren't complex enough to merit their own button.
If VA frm_EV07_Misc_Button_Process [EV07] is equal to "0"
     //
     // SAR 8955603 - Put the logic for disabling/hiding prices in a push button
     // and add logic for disabling/hiding taxed prices.
     Press Button(FC Disable/Hide Price)
     //
     // SAR 8955603 - Disable/Hide price columns logic has been moved to a push
     // button.  Add condition for the logic that was built in the disable/hide
     // price columns logic
     If PO cDisableorHidePrice [EV04] is equal to "2"
          // 8281775 - Disbale Row Exit for Price History and Check Price if PO
          // for Hide Price is turned ON
          Disable Control(HC Price Histor&y)
          Disable Control(HC Check &Price)
     End If
     //
     If PO cDisableorHideCost [EV03] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC UnitCost)
          Disable Grid(FC Grid,  <All Rows>, GC ExtendedCost)
          Disable Grid(FC Grid,  <All Rows>, GC Foreign UnitCost)
          Disable Grid(FC Grid,  <All Rows>, GC Foreign ExtendedCost)
     Else
          If PO cDisableorHideCost [EV03] is equal to "2"
               Hide Grid Column(FC Grid, GC UnitCost)
               Hide Grid Column(FC Grid, GC ExtendedCost)
               Hide Grid Column(FC Grid, GC Foreign UnitCost)
               Hide Grid Column(FC Grid, GC Foreign ExtendedCost)
          End If
     End If
     If PO cDisableStatusCodes [EV05] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC LastStatus)
          Disable Grid(FC Grid,  <All Rows>, GC NextStatus)
     End If
Else
     If VA frm_EV07_Misc_Button_Process [EV07] is equal to "1"
          If PO szP4021Vers [VL02] is equal to or empty <Blank>
          Or PO szP4021Vers [VL02] is equal to or empty <NULL>
               PO szP4021Vers [VL02] = "ZJDE0001"
          End If
          //
          // Begin SAR 5145014 - CHANGE
          // Begin SAR 5077314 - Changing the Uom Passed as GB UOM
          Call App:P4021 Form:W4021B Version:PO szP4021Vers
               GB Business Unit [MCU] -> InputBranch [MCU]
               GB UM  [UOM] -> InputUOM [UOM]
               GB Quantity Ordered [UORG] -> InputRequestQty [TRQT]
               GB Item Number [UITM] -> InputPrimaryItem [UITM]
               GB Sched Pick [PDDJ] <> Promiseddate [PDDJ]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
          // End SAR 5077314
          // End SAR 5145014 - CHANGE
          //
     End If
End If
VA frm_EV07_Misc_Button_Process [EV07] = "0"


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC CSS Processing
Event: Button Clicked
Event GUID: 1c69e231-1049-11d2-9acc-00104b297363
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_UserID_Temp [USER]
----------------------------------------
//
If PO cShoppingCartMode [CART] is equal to "1"
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number [ALKY])
     Hide Tab Page(FC Tab Control51, TP Line Defaults)
     // SAR 8949181
     If PO cOverrideCarrierNumber [EV01] is equal to <Blank>
     Or PO cOverrideCarrierNumber [EV01] is equal to <NULL>
          Disable Grid(FC Grid,  <All Rows>, GC CarrierNumber)
     End If
End If
//
// Automatically disable price fields for ShoppingCartMode = 1 if they aren't
// already.
If PO cShoppingCartMode [CART] is equal to "1"
And PO cDisableorHidePrice [EV04] is less than or equal to <Blank>
     PO cDisableorHidePrice [EV04] = "1"
     // SAR 8955603 - Taxed Prices Enhancement
     Press Button(FC Disable/Hide Price)
End If
// SAR 2850720 - load the cache/workfile when doing an update in CSS mode
If SV Form_ Mode is equal to CO UPDATE_MODE
     CopySOInfoToWorkFiles(B4200690.CopySOInfoToWorkFiles)
          VA frm_CTID_Computer_ID [CTID] <> szComputerid [CTID]
          FI Jobnumber [JOBS] <- mnJobnumber [JOBS]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLinenumberxref [LNIX]
          "1" -> cSourceofdata [EV02]
          "2" -> cMode [EV03]
          FC Order Company [KCOO] -> szCompanykeyorderno [KCOO]
          FC Order Type [DCTO] -> szOrdertype [DCTO]
          FC Order Number [DOCO] -> mnDocumentorderinvoicee [DOCO]
          UNDEFINED <> mnLinenumber [LNID]
          UNDEFINED <> szStatuscodenext [NXTR]
          UNDEFINED <> szErrormessageid [DTAI]
          UNDEFINED <> cSuppresserrormessage [EV01]
          UNDEFINED <> cReturnPtr [EV04]
          UNDEFINED <> idHeaderPtr [GENLNG]
          UNDEFINED <> idDetailPtr [GENLNG]
          VA frm_EV22_cCacheOn [EV22] -> cWriteToWorkFileOrCache [EV05]
          UNDEFINED <> cBasedOnStatus [STBOW]
          UNDEFINED <> jdDateUpdated [UPMJ]
          UNDEFINED <> mnTimeOfDay [TDAY]
          UNDEFINED <> szUserId [USER]
          "C" -> cActionCode [ACTN]
          UNDEFINED <> idDetailPtr2 [GENLNG]
          VA frm_mnLastLineNumberUsed_LNIX [LNIX] <> mnLastLineNumberUsed [LNIX]
     CopySOInfoToWorkFiles(B4200690.CopySOInfoToWorkFiles)
          VA frm_CTID_Computer_ID [CTID] <> szComputerid [CTID]
          FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
          VA frm_mnLastLineNumberUsed_LNIX [LNIX] <> mnLinenumberxref [LNIX]
          "1" -> cSourceofdata [EV02]
          "1" -> cMode [EV03]
          FC Order Company [KCOO] -> szCompanykeyorderno [KCOO]
          FC Order Type [DCTO] -> szOrdertype [DCTO]
          FC Order Number [DOCO] -> mnDocumentorderinvoicee [DOCO]
          UNDEFINED <> mnLinenumber [LNID]
          UNDEFINED <> szStatuscodenext [NXTR]
          UNDEFINED <> szErrormessageid [DTAI]
          UNDEFINED <> cSuppresserrormessage [EV01]
          UNDEFINED <> cReturnPtr [EV04]
          UNDEFINED <> idHeaderPtr [GENLNG]
          UNDEFINED <> idDetailPtr [GENLNG]
          VA frm_EV22_cCacheOn [EV22] -> cWriteToWorkFileOrCache [EV05]
          UNDEFINED <> cBasedOnStatus [STBOW]
          UNDEFINED <> jdDateUpdated [UPMJ]
          UNDEFINED <> mnTimeOfDay [TDAY]
          UNDEFINED <> szUserId [USER]
          "C" -> cActionCode [ACTN]
          UNDEFINED <> idDetailPtr2 [GENLNG]
          UNDEFINED <> mnLastLineNumberUsed [LNIX]
     // SAR 2850720 - don't try to load from grid if in copy mode; no need to do so,
     // plus the action code was being overwritten
Else
     If SV Form_ Mode is not equal to CO COPY_MODE
          // Try to load grid from F42UI11 cache.  If lines are found, suppress fetch.
          Press Button(FC PROCESS: Load Grid From Cache)
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Transfer Orders
Event: Button Clicked
Event GUID: 6c148791-2bf3-11d2-9a90-0000f64da757
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSpotRateFlagSO_EV01 [EV01]
evt_cSpotRateFlagPO_EV01 [EV01]
evt_cSOExchangeRateError_EV01 [EV01]
evt_cPOExchangeRateError_EV01 [EV01]
----------------------------------------
VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
// SAR 8819352 - Initialize Error Status Variables.
VA evt_cPOExchangeRateError_EV01 [EV01] = "0"
VA evt_cSOExchangeRateError_EV01 [EV01] = "0"
If SL CurrencyProcessing is not equal to "N"
     //
     // SAR 8819352 - If there is no transfer order date then initilize it to
     // todays date.
     If FC Order Date [TRDJ] is equal to Null Date
          FC Order Date [TRDJ] = SL DateToday
     End If
     //      If transaction codes blank, set equal to base codes
     //
     If FC To Currency Code [CRDC] is equal to <Blank>
     And FC Currency Code [CCF1] is not equal to <Blank>
          FC To Currency Code [CRDC] = FC Currency Code [CCF1]
     End If
     // Sar 5737896 - – Comment out the code to get the FC SO Trans Currency Code
     // here, because we will use the value calculated by the begin doc.
     ! If FC Currency Code [CRCD] is equal to <Blank>
     ! And FC Currency Code [CCF2] is not equal to <Blank>
          ! FC Currency Code [CRCD] = FC Currency Code [CCF2]
     ! End If
     //
     //      If base and transaction codes equal, set exchange rate to 1.
     //      Otherwise, retrieve conversion information.
     //
     If FC Exchange Rate [CRR] is equal to "0"
          If FC Currency Code [CRCD] is not equal to <Blank>
          And FC Currency Code [CRCD] is not equal to <NULL>
          And FC Currency Code [CCF1] is not equal to <Blank>
          And FC Currency Code [CCF1] is not equal to <NULL>
               If FC Currency Code [CCF1] is not equal to FC Currency Code [CRCD]
                    GetExchRate(B0000033.GetExchRate)
                         FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                         FC Currency Code [CCF1] -> szCurrencyCodeTo [CRDC]
                         UNDEFINED <> mnAddressNumber [AN8]
                         FC Order Date [TRDJ] -> jdTransactionDate [DGJ]
                         VA frm_mnFromCurrConvRateMult_CRR [CRR] <- mnCurrConvRateMult [CRR]
                         VA frm_FromConversionDiv [CRR] <- mnCurrConvRateDiv [CRRD]
                         UNDEFINED <> jdDateEffectiveRates [EFT]
                         UNDEFINED <> mnDefaultRate [CRR]
                         VA frm_FromTriangulation1 [CRR] <- mnTriangulationRate1 [CRRD]
                         VA frm_FromTriangulation2 [CRR] <- mnTriangulationRate2 [CRR]
                         VA frm_cFromConversionMethod [EV20] <- cConversionMethod [CRCM]
                         UNDEFINED <> jdOverrideEffectiveDate [EFT]
                    // SAR 8819352 - Capture the error status of Exchange Rate Function before
                    // clearing the error.
                    If SV Error_Status is equal to CO ERROR
                         VA evt_cSOExchangeRateError_EV01 [EV01] = "1"
                    End If
                    Clear Control Error(FC Currency Code [CRCD])
               End If
          End If
     End If
     //
     If FC Exchange Rate (Divisor) [CRRD] is equal to "0"
          If FC To Currency Code [CRDC] is not equal to <Blank>
          And FC To Currency Code [CRDC] is not equal to <NULL>
          And FC Currency Code [CCF2] is not equal to <Blank>
          And FC Currency Code [CCF2] is not equal to <NULL>
               If FC Currency Code [CCF2] is not equal to FC To Currency Code [CRDC]
                    GetExchRate(B0000033.GetExchRate)
                         FC To Currency Code [CRDC] -> szCurrencyCodeFrom [CRCD]
                         FC Currency Code [CCF2] -> szCurrencyCodeTo [CRDC]
                         UNDEFINED <> mnAddressNumber [AN8]
                         FC Order Date [TRDJ] -> jdTransactionDate [DGJ]
                         VA frm_mnToCurrconvRateMult_CRR [CRR] <- mnCurrConvRateMult [CRR]
                         VA frm_ToConversionDiv [CRR] <- mnCurrConvRateDiv [CRRD]
                         UNDEFINED <> jdDateEffectiveRates [EFT]
                         UNDEFINED <> mnDefaultRate [CRR]
                         VA frm_ToTriangulation1 [CRR] <- mnTriangulationRate1 [CRRD]
                         VA frm_ToTriangulation2 [CRR] <- mnTriangulationRate2 [CRR]
                         VA frm_cToConversionMethod [EV20] <- cConversionMethod [CRCM]
                         UNDEFINED <> jdOverrideEffectiveDate [EFT]
                    // SAR 8819352 - Capture the error status of Exchange Rate Function before
                    // clearing the error.
                    If SV Error_Status is equal to CO ERROR
                         VA evt_cPOExchangeRateError_EV01 [EV01] = "1"
                    End If
                    Clear Control Error(FC To Currency Code [CRDC])
               End If
          End If
     End If
     //
     //      Set exchange rates from returned values.
     //
     If VA frm_cFromConversionMethod [EV20] is equal to "Y"
          FC Exchange Rate [CRR] = VA frm_mnFromCurrConvRateMult_CRR [CRR]
     End If
     If VA frm_cFromConversionMethod [EV20] is equal to "Z"
          FC Exchange Rate [CRR] = VA frm_FromConversionDiv [CRR]
     End If
     //
     If VA frm_cToConversionMethod [EV20] is equal to "Y"
          FC Exchange Rate (Divisor) [CRRD] = VA frm_mnToCurrconvRateMult_CRR [CRR]
     End If
     If VA frm_cToConversionMethod [EV20] is equal to "Z"
          FC Exchange Rate (Divisor) [CRRD] = VA frm_ToConversionDiv [CRR]
     End If
     //
     // SAR 8819352 - Only set error if the exchange rate falied, and the from and
     // to are different.
     If VA evt_cSOExchangeRateError_EV01 [EV01] is equal to "1"
     And FC Currency Code [CRCD] is not equal to FC Currency Code [CCF1]
          Set Control Error(FC SO Exchange Rate, "0003")
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
     End If
     If VA evt_cPOExchangeRateError_EV01 [EV01] is equal to "1"
     And FC Currency Code [CCF2] is not equal to FC To Currency Code [CRDC]
          Set Control Error(FC PO Exchange Rate, "0003")
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
     End If
     //
     //      Test exchange rate tolerances.
     //
     If FC Exchange Rate [CRR] is not equal to "0"
          If FC Currency Code [CCF1] is equal to FC Currency Code [CRCD]
               FC Exchange Rate [CRR] = "0"
               Disable Control(FC Exchange Rate [CRR])
          End If
          If VA frm_FromConversionDiv [CRR] is not equal to "0"
          Or VA frm_mnFromCurrConvRateMult_CRR [CRR] is not equal to "0"
               VA evt_cSpotRateFlagSO_EV01 [EV01] = "1"
          Else
               If VA frm_FromTriangulation1 [CRR] is not equal to "0"
               Or VA frm_FromTriangulation2 [CRR] is not equal to "0"
                    VA evt_cSpotRateFlagSO_EV01 [EV01] = "1"
               End If
          End If
     End If
     If VA evt_cSpotRateFlagSO_EV01 [EV01] is equal to "1"
          EditExchangeRateTolerance(B0000026.EditExchangeRateTolerance)
               VA frm_UPDJ_System_Date [UPDJ] <> jdTransactionDate [TRDJ]
               FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
               FC Currency Code [CCF1] <> szCurrencyCodeFrom [CRCD]
               FC Currency Code [CRCD] <> szCurrencyCodeTo [CRDC]
               UNDEFINED <> mnAddressNumber [AN8]
               UNDEFINED <> mnToleranceLimit [CRR]
          If FC Exchange Rate [CRR] is equal to "0"
               Disable Control(FC Exchange Rate [CRR])
          End If
     End If
     //
     If FC Exchange Rate (Divisor) [CRRD] is not equal to "0"
          If FC Currency Code [CCF2] is equal to FC To Currency Code [CRDC]
               FC Exchange Rate (Divisor) [CRRD] = "0"
               Disable Control(FC Exchange Rate (Divisor) [CRRD])
          End If
          If VA frm_ToConversionDiv [CRR] is not equal to "0"
          Or VA frm_mnToCurrconvRateMult_CRR [CRR] is not equal to "0"
               VA evt_cSpotRateFlagPO_EV01 [EV01] = "1"
          Else
               If VA frm_ToTriangulation1 [CRR] is not equal to "0"
               And VA frm_ToTriangulation2 [CRR] is not equal to "0"
                    VA evt_cSpotRateFlagPO_EV01 [EV01] = "1"
               End If
          End If
     End If
     If VA evt_cSpotRateFlagPO_EV01 [EV01] is equal to "1"
          EditExchangeRateTolerance(B0000026.EditExchangeRateTolerance)
               VA frm_UPDJ_System_Date [UPDJ] <> jdTransactionDate [TRDJ]
               FC Exchange Rate (Divisor) [CRRD] <> mnExchangeRate [CRR]
               FC Currency Code [CCF2] <> szCurrencyCodeFrom [CRCD]
               FC To Currency Code [CRDC] <> szCurrencyCodeTo [CRDC]
               UNDEFINED <> mnAddressNumber [AN8]
               UNDEFINED <> mnToleranceLimit [CRR]
          If FC Exchange Rate (Divisor) [CRRD] is equal to "0"
               Disable Control(FC Exchange Rate (Divisor) [CRRD])
          End If
     End If
End If
//
If FC Order Number [DOC2] is greater than <Blank>
And FC Order Type [DCIN] is greater than <Blank>
And FC Ship To [SHAN] is greater than <Blank>
     ConvertNumbersAndDatesToString(B7600920.ConvertNumbersAndDatesToString)
          FC Order Number [DOC2] -> NumberToBeConverted [MATH01]
          UNDEFINED <> DateToBeConverted [DATE01]
          VA frm_ALPH_PO_Number [ALPH] <- TargetString [REM1]
          UNDEFINED <> LenghtOfTargetString [INT01]
     VerifyCustomerPONumberIsUnique(B4200130.VerifyCustomerPONumberIsUnique)
          VA frm_ALPH_PO_Number [ALPH] -> szCustomerPONumber [VR01]
          FC Ship To [SHAN] -> mnCustomerNumber [AN8]
          VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
     // SAR 5315204 - Change If condition
     If VA frm_ERRC_Error_Code [ERRC] is not equal to <Blank>
     And VA frm_ERRC_Error_Code [ERRC] is not equal to <NULL>
     And VA frm_ERRC_Error_Code [ERRC] is not equal to "0"
          Set Control Error(FC PO Number, "045Q")
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
     End If
End If
//
// SAR2884452
If FC Business Unit 2 [MCU2] is less than or equal to <Blank>
     Set Control Error(FC To Branch/Plant, "0003")
Else
     F41001GetAddressNoFromBranch(N4101280.F41001GetAddressNoFromBranch)
          <Blank> -> szSystemCode [SY]
          FC Business Unit 2 [MCU2] -> szCostCenter [MCU]
          VA frm_AN84_Ship_To [AN84] <- mnAddressNumber [AN8]
     If VA frm_AN84_Ship_To [AN84] is equal to <Blank>
     Or VA frm_AN84_Ship_To [AN84] is equal to <NULL>
          Set Control Error(FC To Branch/Plant, "0052")
          VA frm_Transfer_Order_Errors_EV01 [EV01] = "1"
          // SAR 8955602 - Add Else clause and logic to retrieve the Use Taxed Prices
          // flag.
     Else
          If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          And VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
               // Customer Tax Prices = 2 if Customer Billing Information is by Ship To
               // customer. Get the value of Use Taxed Prices flag set for the Ship To
               // customer
               VA frm_mnCustAddNumber_AN8 [AN8] = VA frm_AN84_Ship_To [AN84]
               VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
               Press Button(FC Get UTP From Tag Customer Master)
          End If
     End If
End If
// SAR2884452
//      Copy transfer order fields to detail revision fields.
//
FC Order Type [DCTO] = FC Order Type [DCTO]
FC Business Unit [MCU] = FC Parent Business Unit [MCU1]
FC Order Number [DOCO] = FC Order Number [DOC1]
//
// 2764135
! FC Address Number [AN8] = VA frm_AN84_Ship_To [AN84]
FC Ship To [SHAN] = VA frm_AN84_Ship_To [AN84]
//
// SAR 8629882 - If NULL, do not copy transfer order date to order date
If FC Order Date [TRDJ] is greater than Null Date
     FC Order Date [TRDJ] = FC Order Date [TRDJ]
End If
//
If SL CurrencyProcessing is not equal to "N"
     FC Currency Code [CRCD] = FC Currency Code [CRCD]
     FC To Currency Code [CRDC] = FC Currency Code [CCF1]
     FC Exchange Rate [CRR] = FC Exchange Rate [CRR]
     If FC Currency Code [CRCD] is equal to FC To Currency Code [CRDC]
     And FC To Currency Code [CRDC] is not equal to <Blank>
          FC Mode (F) [CRRM] = "D"
     Else
          FC Mode (F) [CRRM] = "F"
     End If
     //
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC ProcessOrderTemplate
Event: Button Clicked
Event GUID: 943ea261-a430-11d2-9753-0000396e080e
=============================================
// 
// The following code is originally from Set Focus on Grid of Sales Order Entry
// Detail Revision form
// Call Templates if SOE is Detail first
// 
// ************************************************************************
// SAR 2692418 - Begin/End Change
// Add a new condition in the IF statement so that P40215 will 
// only be called if the P-Opt was set to automatic Order 
// Template processing.
// ************************************************************************
If VA frm_EV07_Template_Called [EV07] is not equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
And VA frm_cCreditMemoProcess_EV24 [EV24] is not equal to "1"
And PO cOrderTemplateAddress [EV21] is not equal to <Blank>
     VA frm_GENLNG_CacheHandle [GENLNG] = "0"
     If PO szOrderTemplate [ORTP] is greater than <Blank>
          // SAR 4183406- Pass in BP to retrieve correct primary item number
          // SAR 7658745 - Added a condtion to pass the correct Address Number to
          // Template master based on PO.
          If PO cOrderTemplateAddress [EV21] is equal to "1"
               Call App:P40215 Form:W40215A Version: 
                    PO szOrderTemplate [ORTP] -> OrderTemplate [ORTP]
                    FC Address Number [AN8] -> AddressNumber [AN8]
                    UNDEFINED <> ProcessingMode [EV01]
                    FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                    UNDEFINED <> OpenOrdersVersion [VERS]
                    FC Order Type [DCTO] -> OrderType [DCTO]
                    VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                    FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
          Else
               Call App:P40215 Form:W40215A Version:Undefined
                    PO szOrderTemplate [ORTP] -> OrderTemplate [ORTP]
                    FC Ship To [SHAN] -> AddressNumber [AN8]
                    FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                    FC Order Type [DCTO] -> OrderType [DCTO]
                    VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                    FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
          End If
     Else
          If PO cOrderTemplateAddress [EV21] is not equal to <Blank>
          And PO cOrderTemplateAddress [EV21] is not equal to <NULL>
               If PO cOrderTemplateAddress [EV21] is equal to "1"
                    If VA frm_sz_OrderTempSoldTo_ORTP [ORTP] is greater than <Blank>
                         // SAR 4183406- Pass in BP to retrieve correct primary item number
                         Call App:P40215 Form:W40215A Version: 
                              VA frm_sz_OrderTempSoldTo_ORTP [ORTP] -> OrderTemplate [ORTP]
                              FC Address Number [AN8] -> AddressNumber [AN8]
                              PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                              FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                              UNDEFINED <> OpenOrdersVersion [VERS]
                              FC Order Type [DCTO] -> OrderType [DCTO]
                              VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                              FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                    Else
                         // ************************************************************************
                         // SAR 4329807 - Begin ADD 
                         // Need to determine if an Order Template Exists
                         // ************************************************************************
                         VA frm_mnTemplateAddress_AN8 [AN8] = FC Address Number [AN8]
                         Press Button(FC TemplateExists)
                         If VA frm_cOrderTemplateExists_EV01 [EV01] is equal to "1"
                              // SAR 4329807 - End ADD 
                              // SAR 6348155 - Begin
                              Call App:P4015 Form:W4015A Version:ZJDE0001
                                   FC Address Number [AN8] -> AddressNumber [AN8]
                                   PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                                   "1" -> ProtectAddressNumber [EV02]
                                   VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
                                   "2" -> CalledFromPODetail [EV03]
                                   FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                                   FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                              // SAR 6348155 - End
                         End If
                    End If
               Else
                    If VA frm_sz_OrderTempShipTo_ORTP [ORTP] is greater than <Blank>
                         // SAR 4183406- Pass in BP to retrieve correct primary item number
                         Call App:P40215 Form:W40215A Version: 
                              VA frm_sz_OrderTempShipTo_ORTP [ORTP] -> OrderTemplate [ORTP]
                              FC Ship To [SHAN] -> AddressNumber [AN8]
                              UNDEFINED <> ProcessingMode [EV01]
                              FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                              UNDEFINED <> OpenOrdersVersion [VERS]
                              FC Order Type [DCTO] -> OrderType [DCTO]
                              VA frm_GENLNG_CacheHandle [GENLNG] -> CacheHandle [GENLNG]
                              FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                    Else
                         // ************************************************************************
                         // SAR 4329807 - Begin ADD 
                         // Need to determine if an Order Template Exists
                         // ************************************************************************
                         VA frm_mnTemplateAddress_AN8 [AN8] = FC Ship To [SHAN]
                         Press Button(FC TemplateExists)
                         If VA frm_cOrderTemplateExists_EV01 [EV01] is equal to "1"
                              // SAR 4329807 - End ADD 
                              // SAR 6348155 - Begin
                              Call App:P4015 Form:W4015A Version:ZJDE0001
                                   FC Ship To [SHAN] -> AddressNumber [AN8]
                                   PO cOrderTemplateAddress [EV21] -> ProcessingMode [EV01]
                                   "1" -> ProtectAddressNumber [EV02]
                                   VA frm_GENLNG_CacheHandle [GENLNG] <> CacheHandle [GENLNG]
                                   "2" -> CalledFromPODetail [EV03]
                                   FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                                   FC Business Unit [MCU] -> szTemplateBusinessUnit [MCU]
                              // SAR 6348155 - End
                         End If
                    End If
               End If
          End If
     End If
     Press Button(FC PROCESS: Load Grid From Cache)
     // SAR 7602952
     Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
     // SAR 7819641
     If PO cHeaderOrDetailFirst [EV19] is equal to <Blank>
     And VA frm_MaxGridRows [MATH01] is greater than "1.00"
     Or PO cHeaderOrDetailFirst [EV19] is not equal to <Blank>
     And VA frm_MaxGridRows [MATH01] is greater than "0"
          If PO cHeaderOrDetailFirst [EV19] is equal to <Blank>
               Delete Grid Row(FC Grid, VA frm_MaxGridRows)
               VA frm_MaxGridRows [MATH01] = [VA frm_MaxGridRows [MATH01]]-1
          End If
          VA frm_LNID_Last_Line_Number [LNID] = [VA frm_LNID_Last_Line_Number [LNID]]-[PO mnDefaultLineIncrement [LNIX]]
          // SAR 7198072 - Reset line number of new line
          Get Grid Row(FC Grid, VA frm_MaxGridRows)
          GC Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
          // SAR 7198072 - End
     End If
     VA frm_EV07_Template_Called [EV07] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Delete Lines
Event: Button Clicked
Event GUID: f0907630-fda3-11d2-97d4-000039c2050e
=============================================
// SAR 2883871
// 
// SAR 5451257
If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
     GC % Profit Margin [PRMG] = "0"
End If
// SAR 2771132
If PO cShoppingCartMode [CART] is greater than "0"
     ChangeStringElement(B4002410.ChangeStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
          "26" -> nPosition [INT01]
          "1" -> cCharacter [EV01]
End If
// 
// SAR#5072396 - Call Configurator Cancel Components function for configured ite
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     CancelConfiguredComponents(B3201590.CancelConfiguredComponents)
          "42" -> szProductCode [SY]
          VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          SL VersionName -> szVersion [VERS]
          "P4210" -> szProgramId [PID]
          VA frm_EV22_cCacheOn [EV22] -> cUseCache [EV01]
          VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
          BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
          VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProc [MATH01]
          FC OTOT: Order Total Display [TOT1] -> mnAmountOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] -> mnAmountForeignOrderTotal [FAP]
          VA frm_TOTC_Total_Cost [TOTC] -> mnAmountTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] -> mnAmountForeignTotalCost [FCST]
          "1" -> cSuppressErrorMessage [SUPPS]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          VA grd_EV18_UpdatedtoDetailWF [EV18] -> cRecordInDetailWorkFile [EV01]
Else
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
               "1" -> cSuppressErrorMessage [SUPPS]
               FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
               FC Order Type [DCTO] -> szSO_Type [DCTO]
               FC Order Company [KCOO] -> szSO_Company [KCOO]
               VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
               VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
               "P4210" -> szProgramId [PID]
               SL VersionName -> szVersion [VERS]
               BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
               VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
               VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
               VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
               FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
               FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
               VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
               VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
               "B" -> cCMLineAction [ACTN]
               VA grd_EV18_UpdatedtoDetailWF [EV18] -> cCMRecdWrittenToWF [EV18]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
               GC Ln Ty [LNTY] -> szParentLineType [LNTY]
     End If
End If
// End of SAR#5072396
// 
// SAR 3011549 - Begin/End CHANGE
// SAR 3406866, Pass in/out PEID and TCID
// SAR#5072396-Configurator itself will call EditLine
// SAR 6776176- Edit Line Still needs to be called to process parent in
// Configurator
! If VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
! OrPO cShoppingCartMode [CART] is equal to "1"
     // SAR 6386961 Pass Release Number
     // SAR 6368922 Pass GC Associated Text
     F4211FSEditLine(B4200310.F4211FSEditLine)
          FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
          "B" -> cCMLineAction [ACTN]
          "1" -> cCMProcessEdits [EV01]
          VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
          VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
          VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          GC Line Number [LNID] <> mnLineNo [LNID]
          GC Business Unit [MCU] <> szBusinessUnit [MCU]
          GC Ship To Number [SHAN] -> mnShipToNo [SHAN]
          GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
          GC Sched Pick [PDDJ] -> jdPromisedDate [PDDJ]
          GC Cancel Date [CNDJ] -> jdCancelDate [CNDJ]
          GC Promised Delivery [RSDJ] -> jdPromisedDlvryDate [RSDJ]
          GC Item Number [UITM] -> szItemNo [UITM]
          GC Location  [LOCN] -> szLocation [LOCN]
          GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
          GC Description  [DSC1] -> szDescription1 [DSC1]
          GC Description Line 2 [DSC2] -> szDescription2 [DSC2]
          GC Ln Ty [LNTY] -> szLineType [LNTY]
          GC Last Stat [LTTR] <> szLastStatus [LTTR]
          GC Next Stat [NXTR] <> szNextStatus [NXTR]
          GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
          GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
          GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
          GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
          GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
          GC Extended Price [AEXP] -> mnExtendedPrice [AEXP]
          GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
          GC Extended Cost [ECST] -> mnExtendedCost [ECST]
          GC Print Message [INMG] <> szPrintMesg [INMG]
          GC Pay Inst [RYIN] -> cPaymentInstrument [RYIN]
          GC Adj. Schedule [ASN] -> szAdjustmentSchedule [ASN]
          GC Taxable  [TAX1] -> cSalesTaxableYN [TAX1]
          GC Associated Text [ATXT] <> cAssociatedText [ATXT]
          GC UM  [UOM] -> szTransactionUOM [UOM]
          GC PR UM [UOM4] -> szPricingUOM [UOM4]
          GC Unit Weight [ITWT] -> mnItemWeight [ITWT]
          GC Wt U/M [WTUM] -> szWeightUOM [WTUM]
          GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [FUP]
          GC Foreign Extended Price [FEA] -> mnForeignExtPrice [FEA]
          GC Extended Cost [ECST] -> mnForeignUnitCost [FUC]
          GC Foreign Extended Cost [FEC] -> mnForeignExtCost [FEC]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
          "P4210" -> szCMProgramID [JPID]
          SL VersionName -> szCMVersion [VERS]
          GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
          GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
          GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
          GC Price Over Cd [PROV] -> cOverridePrice [PROV]
          VA grd_CSTO_Cost_Over [CSTO] -> cOverrideCost [CSTO]
          VA frm_USER_User_ID [USER] -> szUserID [USER]
          BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
          FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
          FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
          VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
          VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
          <Blank> -> cWKSourceOfData [EV06]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
          GC OKCO- Doc Co (wf) [OKCO] -> szOriginalOrderKeyCo [OKCO]
          GC Original Order No [OORN] -> szOriginalOrderNo [OORN]
          GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
          VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
          GC Short Item No [ITM] -> mnShortItemNo [ITM]
          VA frm_GridRowCounter [MATH01] <> mnWKRelatedOrderProcess [MATH02]
          VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
          VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
          GC Mod Trn [MOT] <> szModeOfTransport [MOT]
          GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
          GC Line of Business [LOB] <> szLineofBusiness [LOB]
          GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
          GC End Use [EUSE] <> szEndUse [EUSE]
          GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
          GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
          GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
          GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
          GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
          GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
          GC Carrier Number [CARS] <> mnCarrier [CARS]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
          GC Release Number [RLNU] -> szReleaseNumber [RLNU]
          GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
          GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szSOEMBFInternalFlags [SOEF]
          GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
          GC Sec UM [UOM2] <> szDualUOM [UOM2]
          GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
          GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
! End If
// SAR 6776176- End
// Configurator
Clear Grid Cell Error(FC Grid,  <Current Row>,  <All Columns>)
// SAR 7551008
ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
     GC Original Order No [OORN] -> szGenericString [DSC1]
     VA frm_mnDOCO_OriginalOrderNo [DOCO] <- mnNumericValue [ITM]
If VA frm_mnDOCO_OriginalOrderNo [DOCO] is greater than "0"
     GC Quantity Ordered [UORG] = 0-[GC Quantity Ordered [UORG]]
     UpdatePendingReleaseBlanketWF(B4205310.UpdatePendingReleaseBlanketWF)
          GC OKCO- Doc Co (wf) [OKCO] -> szKeyCompany [KCOO]
          VA frm_mnDOCO_OriginalOrderNo [DOCO] -> mnOrderNumber [DOCO]
          GC Orig Ord Type [OCTO] -> szOrderType [DCTO]
          GC Original Line Number [OGNO] -> mnLineNumber [LNID]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          GC Quantity Ordered [UORG] -> mnReleaseQty [UORG]
End If
Delete Grid Row(FC Grid,  <Current Row>)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC ProcessBlanketOrder
Event: Button Clicked
Event GUID: 438f2d31-13a0-11d3-a7e1-00105a1bfecd
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnUnitPriceBlanket_UPRC [UPRC]
evt_mnTaxedUnitPriceBlanket [TUPRC]
----------------------------------------
// -----------------------------------------------------------------------------
// SAR 3096360, Created to Allow Multiple Blankets to be Released
// -----------------------------------------------------------------------------
//
// SAR 8955607 - Map Taxed Prices Fields
UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
     GB Item Number [UITM] <- szItemNumber [UITM]
     GB Business Unit [MCU] <- szBranchPlant [MCU]
     GB Location  [LOCN] <- szLocation [LOCN]
     GB Lot Serial Number [LOTN] <- szLotNumber [LOTN]
     VA frm_mnDOCO_OriginalOrderNo [DOCO] <- mnOrderNumber [DOCO]
     GB OKCO- Doc Co (wf) [OKCO] <- szKeyCompany [KCOO]
     GB Original Line Number [OGNO] <- mnOrderLineNumber [LNID]
     VA frm_EV21_LastCacheRecord [EV21] <> cLastRecordReadFlag [EV01]
     GB Orig Ord Type [OCTO] <- szDocumentType [DCTO]
     GB Quantity Ordered [UORG] <- mnQuantity [UORG]
     GB UM  [UOM] <- szUnitOfMeasure [UOM]
     <Blank> -> cSuppressTerminateCache [EV02]
     VA evt_mnUnitPriceBlanket_UPRC [UPRC] <- mnUnitCost [PRRC]
     VA frm_cachecursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
     VA evt_mnTaxedUnitPriceBlanket [TUPRC] <- mnTaxedUnitPrice [TUPRC]
     GB Taxed Price Override Code [TPROV] <- cTaxedPriceOverrideCode [TPROV]
     GB Internal SO Tax Date [DTXJ] <- jdInternalSOTaxDate [DTXJ]
//
// SAR 7203097 - Set the flag if multiple lines to be created for blankets
If VA frm_EV21_LastCacheRecord [EV21] is greater than "1"
     VA frm_cMultipleBlanket_EV01 [EV01] = "1"
End If
//
// SAR 6607954
If PO cCommitPreference [EV23] is equal to ("1","2")
And VA frm_cWasBranchBlank_EV01 [EV01] is equal to "1"
And VA frm_ACTI_Action_Code [ACTI] is equal to "A"
And VA grd_STKT_Stocking_Type [STKT] is not equal to "K"
     GB Business Unit [MCU] = <Blank>
End If
//
ConvertNumericToString(B0000045.ConvertNumericToString)
     VA frm_mnDOCO_OriginalOrderNo [DOCO] -> mnMathNumeric01 [MATH01]
     GB Original Order No [OORN] <- szVideoConstant30A [VC30A]
// SAR 5760156
If VA frm_mnDOCO_OriginalOrderNo [DOCO] is greater than "0"
     UpdatePendingReleaseBlanketWF(B4205310.UpdatePendingReleaseBlanketWF)
          GB OKCO- Doc Co (wf) [OKCO] -> szKeyCompany [KCOO]
          VA frm_mnDOCO_OriginalOrderNo [DOCO] -> mnOrderNumber [DOCO]
          GB Orig Ord Type [OCTO] -> szOrderType [DCTO]
          GB Original Line Number [OGNO] -> mnLineNumber [LNID]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          VA frm_USER_User_ID [USER] -> szUserId [USER]
          GB Quantity Ordered [UORG] -> mnReleaseQty [UORG]
          GB UM  [UOM] -> szReleaseUOM_UOM [UOM]
          GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
          GB Item Number [UITM] -> szIdentifier2ndItem [LITM]
          VA frm_UPDJ_System_Date [UPDJ] -> jdDateUpdated [UPMJ]
          VA frm_TMCR_Time_Of_Day [TMCR] -> mnTimeOfDay [TDAY]
End If
//
// SAR 8955607 - Check for current  Original Order number instead of GC
// Original Order Number. Also set GB Price Override Code instead of GC Price
// Override Code
//
If GC Original Order No [OORN] is not equal to <Blank>
And GC Original Order No [OORN] is not equal to <Blank>
And GC Original Order No [OORN] is not equal to "0"
And GC Orig Ord Type [OCTO] is not equal to <Blank>
And GC Orig Ord Type [OCTO] is not equal to <Blank>
And GC Orig Ord Type [OCTO] is not equal to "0"
     GB Price Over Cd [PROV] = "1"
End If
//
If SL CurrencyProcessing is not equal to "N"
And FC Mode (F) [CRRM] is equal to "F"
     GB Foreign Unit Price [FUP] = VA evt_mnUnitPriceBlanket_UPRC [UPRC]
Else
     GB Unit Price [UPRC] = VA evt_mnUnitPriceBlanket_UPRC [UPRC]
End If
//
// SAR 8955607 - Taxed Prices Enhancement
If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
     //
     // If Taxed Price Override Code is set by P42216, that means Taxed Blanket is
     // selected. Zero out the Non-Taxed Prices and set TPROV.
     //
     If GB Taxed Price Override Code [TPROV] is equal to "1"
          GB Price Over Cd [PROV] = "0"
          GB Unit Price [UPRC] = "0"
          GB Foreign Unit Price [FUP] = "0"
          If SL CurrencyProcessing is not equal to "N"
          And FC Mode (F) [CRRM] is equal to "F"
               GB Foreign Taxed Unit Price [TFUP] = VA evt_mnTaxedUnitPriceBlanket [TUPRC]
          Else
               GB Taxed Unit Price [TUPRC] = VA evt_mnTaxedUnitPriceBlanket [TUPRC]
          End If
     End If
End If
//
// -----------------------------------------------------------------------------
// Set SO Flags [27] so, EL will not do blanket processing for Extra Lines
// -----------------------------------------------------------------------------
//
If GB Orig Ord Type [OCTO] is less than or equal to <Blank>
     If GB ALPH - SO Detail Flags (wf) [ALPH] is equal to <Blank>
     Or GB ALPH - SO Detail Flags (wf) [ALPH] is equal to <NULL>
          GB ALPH - SO Detail Flags (wf) [ALPH] = "0000000000000000000000000001000000000000"
     Else
          ChangeStringElement(B4002410.ChangeStringElement)
               GB ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
               "27" -> nPosition [INT01]
               "1" -> cCharacter [EV01]
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Empty Shopping Cart
Event: Button Clicked
Event GUID: d25ba071-259b-11d3-a7ee-00105a1bfecd
=============================================
// SAR 3178921, Be able to Delete WF in Add Mode
If FI Jobnumber [JOBS] is not equal to "0"
     If PO cShoppingCartMode [CART] is greater than <Blank>
     And SV Form_ Mode is equal to CO ADD_MODE
          // SAR 3406866, Pass in PEID and TCID
          F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
               "0" -> mnFromLineNo [LNID]
               "0" -> mnThruLineNo [LNID]
               VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
               VA frm_EV22_cCacheOn [EV22] -> cClearDetailWF [EV02]
               "EP4210" -> szProgramID [PID]
               VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProcess [MATH02]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               UNDEFINED <> cGenericChar1_EV01 [EV01]
               UNDEFINED <> cGenericChar2_EV02 [EV02]
               UNDEFINED <> szGenericString1_DL01 [DL01]
               UNDEFINED <> mnSODRelatedJobNumber [MATH01]
               FI mnProcessID [PEID] -> mnProcessID [PEID]
               FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          // SAR 3257581 - if the user wants to clear their order, also clear their CSS
          // cache/workfile record.  A new CSS record will be created once the user
          // re-enters P4210 or another CSS app
          CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
               VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
               UNDEFINED <> szVersion [VERS]
               FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
               UNDEFINED <> szCostCenter [MCU]
               UNDEFINED <> mnAddressNumberShipTo [SHAN]
               "D" -> cActionCode [ACTN]
               UNDEFINED <> mnAddressNumberParent [PA8]
               UNDEFINED <> mnSoldToAddressNumber [AN8]
               VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
               UNDEFINED <> mnLineNumIncrement [LINN]
               UNDEFINED <> cPreviousSessionFound [EV01]
               UNDEFINED <> cGenericChar_EV01 [EV01]
               UNDEFINED <> szGenericString_DL01 [DL01]
               UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
               UNDEFINED <> szUserReservedCode [URCD]
               UNDEFINED <> mnUserReservedAmount [URAT]
               UNDEFINED <> jdUserReservedDate [URDT]
               UNDEFINED <> mnUserReservedNumber [URAB]
               UNDEFINED <> szUserReservedReference [URRF]
               UNDEFINED <> szShipToStructureType [OSTP]
               UNDEFINED <> szBaseCurrencyCode [CRDC]
               UNDEFINED <> szCustomerCurrencyCode [CRCD]
          // End SAR 3257581
          Press Button(HC Cancel/Close)
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Reference
Event: Control Exited/Changed-Inline
Event GUID: 79ff3931-49c6-11d3-a309-00105a1c0327
=============================================
//
If PO cShoppingCartMode [CART] is equal to "1"
     // SAR 5216433 - Clear the Customer PO error
     Clear Control Error(FC Reference [VR01])
     // SAR 3305580 - populate the regular FC Customer PO with the FC CSS Customer PO
     FC Reference [VR01] = FC Reference [VR01]
     // SAR 5216433 - Call Begin Doc to validate Customer PO
     // SAR 8955602 - Passed variable cUseTaxedPrices_UTP to BeginDoc
     // SAR 8955612 - Passed variable BeginDocSOEMBFFlag to BeginDoc
     F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
          FI Jobnumber [JOBS] <> mnCMJobNumber [JOBS]
          VA frm_ACTI_Action_Code [ACTI] -> cCMDocAction [ACTI]
          VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
          VA frm_CTID_Computer_ID [CTID] -> szCMComputerID [CTID]
          VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
          VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
          "EP4210" -> szCMProgramID [PID]
          VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
          FC Order Company [KCOO] <> szOrderCo [KCOO]
          FC Order Number [DOCO] <> mnOrderNo [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBusinessUnit [MCU]
          VA frm_OKCO_Original_Order_Co [OKCO] <> szOriginalOrderCo [OKCO]
          VA frm_OORN_Original_Order_No [OORN] <> szOriginalOrderNo [OORN]
          VA frm_ODCT_Original_Order_Type [ODCT] <> szOriginalOrderType [OCTO]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNo [SHAN]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Reference [VR01] <> szReference [VR01]
          VA frm_sz_HeaderAdjSchedule_ASN [ASN] <- szAdjustmentSchedule [ASN]
          VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
          FC Mode (F) [CRRM] -> cMode [CRRM]
          FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
          VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
          VA frm_USER_User_ID [USER] <> szUserID [USER]
          FC To Currency Code [CRDC] <> szWKBaseCurrency [CRDC]
          VA frm_EV03_Valid_Order_Number [EV03] <- cWKInvalidSalesOrderNo [EV03]
          <Blank> -> cWKSourceOfData [EV06]
          <Blank> -> cWKProcMode [EV07]
          FI DocumentOrderInvoiceE [DOCO] -> mnSODDocNo [EDOC]
          VA frm_ODCT_Original_Order_Type [ODCT] -> szSODDocType [EDCT]
          VA frm_OKCO_Original_Order_Co [OKCO] -> szSODOrderCo [EKCO]
          VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
          "1" -> cRetrieveOrderNo [EV02]
          VA frm_cCommitInvInED_EV01 [EV01] -> cCommitInvInED [EV05]
          FC Long Address Number [ALKY] -> szLongAddressNumberShipto [ALKY]
          FC Long Address Number [ALKY] -> szLongAddressNumber [ALKY]
          FI mnProcessID [PEID] <> mnProcessID [PEID]
          FI mnTransactionID [TCID] <> mnTransactionID [TCID]
          VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
          FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
          FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
          FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
          FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
          FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC TemplateExists
Event: Button Clicked
Event GUID: fcaa45b7-6347-11d4-97ba-0000390d070e
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szUDCTempalteName_KY [KY]
----------------------------------------
// ***************************************************************************
// SAR 7137747 - Redesigned the logic to verify customer's related order
// templates
// ***************************************************************************
VA frm_cOrderTemplateExists_EV01 [EV01] = <Blank>
// SAR 7310933 Begin
// Do not display customer templates when user is different from
//  customer and web templates exist.
GetUserAddressBookNumber(B9800140.GetUserAddressBookNumber)
     SL UserID -> szUserIdentifier [USER]
     VA frm_mnUserABNumber [AN8] <- mnAddressBookNumber [AN8]
     "1" -> cSuppressErrorMessages [EV01]
// Verify if Web Template exists for Customer
F4015W.FetchSingle  [Index 1: Address Number, Order Template]
     VA frm_mnTemplateAddress_AN8 [AN8] = TK Address Number [AN8]
If SV File_IO_Status is equal to CO SUCCESS
And PO cShoppingCartMode [CART] is equal to "1"
     If VA frm_mnTemplateAddress_AN8 [AN8] is equal to VA frm_mnUserABNumber [AN8]
          F4015VerifyOrderTemplateExistenc(B4002130.F4015VerifyOrderTemplateExistenc)
               VA frm_mnTemplateAddress_AN8 [AN8] -> mnAddressNumber [AN8]
               VA frm_cOrderTemplateExists_EV01 [EV01] <- cOrderTemplateExists [EV01]
               "1" -> cSuppressErrorMessages [EV02]
     End If
Else
     // SAR 7902728 Removed the condition File_IO_Status is equal to error from the
     // below if condition as templates were not populated for Transfer Orders.
     If PO cShoppingCartMode [CART] is not equal to "1"
          // SAR 7310933 End
          F4015VerifyOrderTemplateExistenc(B4002130.F4015VerifyOrderTemplateExistenc)
               VA frm_mnTemplateAddress_AN8 [AN8] -> mnAddressNumber [AN8]
               VA frm_cOrderTemplateExists_EV01 [EV01] <- cOrderTemplateExists [EV01]
               "1" -> cSuppressErrorMessages [EV02]
          // ***************************************************************************
          // If the template does not exist for the specified address number, then check
          // to see if there is a template for default '0' address
          // ***************************************************************************
          If VA frm_cOrderTemplateExists_EV01 [EV01] is not equal to "1"
               VA frm_cOrderTemplateExists_EV01 [EV01] = <Blank>
               VA frm_mnTemplateAddress_AN8 [AN8] = 0
               F4015VerifyOrderTemplateExistenc(B4002130.F4015VerifyOrderTemplateExistenc)
                    VA frm_mnTemplateAddress_AN8 [AN8] -> mnAddressNumber [AN8]
                    VA frm_cOrderTemplateExists_EV01 [EV01] <- cOrderTemplateExists [EV01]
                    "1" -> cSuppressErrorMessages [EV02]
          End If
          // SAR 7310933 Begin
     End If
End If
// SAR 7310933 End


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Matrix Order
Event: Button Clicked
Event GUID: af28c4dd-d6d1-446d-be38-58a9213c0913
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_TempTemplate_TMPL [TMPL]
evt_tempSegment1 [SEG1]
evt_mnLineNoForDelete_LNID [LNID]
----------------------------------------
// SAR#5113442-Begin
// SAR  6539664 to add the missing code
If VA frm_cAddOrUpdateMatrixMode [EV01] is not equal to "1"
     VA frm_cAddOrUpdateMatrixMode [EV01] = "3"
End If
If PO mnDefaultLineIncrement [LNIX] is less than or equal to "0"
     PO mnDefaultLineIncrement [LNIX] = "1"
End If
VA frm_SOEComputerID_CTID [CTID] = FI Computerid [CTID]
VA frm_SOEJobNo_JOBS [JOBS] = FI Jobnumber [JOBS]
VA frm_SOELineNumber_LNID [LNID] = GC Line Number [LNID]
VA frm_MatrixErrorMessageID_DTAI [DTAI] = <Blank>
VA frm_mnGridRowCounter_MATH01 [MATH01] = "1"
VA frm_MatrixCacheCursor_GENLNG [GENLNG] = "0"
VA frm_cLineIncrementedY [EV01] = <Blank>
If GC Business Unit [MCU] is not equal to <Blank>
     VA frm_szMatrixBranchPlant [MCU] = GC Business Unit [MCU]
Else
     VA frm_szMatrixBranchPlant [MCU] = FC Business Unit [MCU]
End If
// Since the function on the write grid-line before to retrieve SEG1 and Templat
// does not work right now, need an extra call here to retrieve these informatio
// in update mode when user highlights the children and take row exit to Matrix
// Temporary fix
If GC Matrix Control Line Number [MCLN] is greater than "0"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_cAddOrUpdateMatrixMode [EV01] is not equal to "1"
And VA grd_MatrixSegment1_SEG1 [SEG1] is equal to <Blank>
Or VA grd_MatrixSegment1_SEG1 [SEG1] is equal to <NULL>
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
          UNDEFINED <> szSecondItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescriptionLine2 [DSC2]
          UNDEFINED <> szItemFlashMessage [IFLA]
          UNDEFINED <> szPrimaryUOM [UOM1]
          UNDEFINED <> szSecondaryUOM [UOM2]
          UNDEFINED <> szPurchasingUOM [UOM3]
          UNDEFINED <> szPricingUOM [UOM4]
          UNDEFINED <> szShippingUOM [UOM6]
          UNDEFINED <> szWeightUOM [UWUM]
          UNDEFINED <> szVolumeUOM [UVM1]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          VA frm_szMatrixBranchPlant [MCU] -> szBranchPlant [MCU]
          UNDEFINED <> cBackOrdersAllowedYN [BACK]
          UNDEFINED <> cStockingType [STKT]
          UNDEFINED <> cBulkPackedFlag [BPFG]
          UNDEFINED <> cInventoryCostLevel [CLEV]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> cLotProcessType [SRCE]
          UNDEFINED <> mnShelfLifeDays [SLD]
          UNDEFINED <> szGLClassCode [GLPT]
          UNDEFINED <> cContractItem [CONT]
          UNDEFINED <> szProductionUOM [UOM8]
          UNDEFINED <> szFromGrade [FRGD]
          UNDEFINED <> szThruGrade [THGD]
          UNDEFINED <> mnFromPotency [FRMP]
          UNDEFINED <> mnThruPotency [THRP]
          UNDEFINED <> cPriceLevel [PLEV]
          UNDEFINED <> cGradePotencyPricing [PRPO]
          UNDEFINED <> cRoundToWholeNumber [SNS]
          UNDEFINED <> cKitPricingMethod [PMTH]
          UNDEFINED <> szComponentUOM [UOM9]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> szPrintMessage [INMG]
          UNDEFINED <> cCommitmentMethod [CMGL]
          UNDEFINED <> cCheckAvailability [CKAV]
          UNDEFINED <> cSerialNumberReqsted [SRNR]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cPurchasePriceLevel [PPLV]
          VA grd_MatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
          VA grd_MatrixSegment1_SEG1 [SEG1] <- szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
          UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
          UNDEFINED <> cDualPickingProcessOption [DPPO]
          UNDEFINED <> mnDualTolerance [DLTL]
End If
VA evt_tempSegment1 [SEG1] = VA grd_MatrixSegment1_SEG1 [SEG1]
VA evt_TempTemplate_TMPL [TMPL] = VA grd_MatrixTemplate_TMPL [TMPL]
Get Max Grid Rows(FC Grid, VA frm_mnNoOfGridLines_MATH01)
// SAR 6472762 - Begin
// Changed "ZJDE0001" to PO version in the call to P41902
If PO szProductVariantsVersion [VERS] is equal to <Blank>
Or PO szProductVariantsVersion [VERS] is equal to <NULL>
     PO szProductVariantsVersion [VERS] = "ZJDE0001"
End If
Call App:P41902 Form:W41902A Version:PO szProductVariantsVersion
     VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
     VA grd_MatrixTemplate_TMPL [TMPL] -> szTemplate_F41008 [TMPL]
     VA frm_cAddOrUpdateMatrixMode [EV01] -> cMode [EV01]
     VA frm_szMatrixBranchPlant [MCU] -> szBranchPlant [MCU]
     GC Quantity Ordered [UORG] -> mnControlQuantity [TRQT]
     GC UM  [UOM] -> szUnitOfMeasureAsInput [UOM]
     FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKey [KCOO]
     <Blank> -> szOrderSuffix [SFXO]
     GC Matrix Control Line Number [MCLN] -> mnMatrixControlLine [MCLN]
     VA frm_cMatrixUpdateTypes [EV01] <- cCancelPressed [EV01]
     VA frm_SOELineNumber_LNID [LNID] -> mnLineNumber [LNID]
     VA frm_SOEJobNo_JOBS [JOBS] -> mnJobnumber [JOBS]
     VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
     VA frm_MatrixCacheJobNumber_JOBS [JOBS] <- mnMOEJobNumber [JOBS]
     VA frm_MatrixCacheComputerID_CTID [CTID] <- szMOEComputerID [CTID]
// SAR 6472762 - End
// *****************************************************************************
// The flag VA frm_cMatrixUpdateTypes indicates the following actions:
// 1-Adding new line only 
// 2-Changing Quantity on existing lines and adding new lines
// Blank-No change or cancel 
// When user clicks OK on the Matrix Order Entry, by checking to see the value o
// VA frm_cMatrixUpdateTypes, read Matrix Cache or/and F42UI11, update F42UI11
// *****************************************************************************
If VA frm_cMatrixUpdateTypes [EV01] is not equal to <Blank>
     Clear Grid Buffer(FC Grid)
     If VA frm_cMatrixUpdateTypes [EV01] is equal to "1"
          While VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
          Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
               MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                    "6" -> szCacheActionCode [CACTN]
                    "7" -> mnNumberKeys [NKEYS]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    VA frm_MatrixErrorMessageID_DTAI [DTAI] <- szErrorMessageID [DTAI]
                    VA frm_MatrixCacheCursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                    VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
                    VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
                    VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    <Blank> -> szOrderSuffix [SFXO]
                    UNDEFINED <> mnLineNumber [LNID]
                    UNDEFINED <> mnMatrixRowNumber [MRNO]
                    UNDEFINED <> mnMatrixColumnNumber [MCNO]
                    VA frm_mnShortItemNo_ITM [ITM] <- mnIdentifierShortItem [ITM]
                    GB Matrix Control Line Number [MCLN] <- mnMatrixControlLine [MCLN]
                    GB Quantity Ordered [UORG] <- mnQuantityTransaction [TRQT]
                    VA frm_szMatrixUOM_UOM [UOM] <- szUnitOfMeasureAsInput [UOM]
                    UNDEFINED <> cQuantityChanged [EV01]
                    "2" -> cIndex [EV01]
                    UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
               If VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
               Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
                    GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
                         VA frm_mnShortItemNo_ITM [ITM] -> mnShortItemNumber [ITM]
                         GB Item Number [UITM] <- szPrimaryItemNumber [UITM]
                         UNDEFINED <> szSecondItemNumber [LITM]
                         UNDEFINED <> szThirdItemNumber [AITM]
                         UNDEFINED <> szDescription [DSC1]
                         UNDEFINED <> szDescriptionLine2 [DSC2]
                         UNDEFINED <> szItemFlashMessage [IFLA]
                         UNDEFINED <> szPrimaryUOM [UOM1]
                         UNDEFINED <> szSecondaryUOM [UOM2]
                         UNDEFINED <> szPurchasingUOM [UOM3]
                         UNDEFINED <> szPricingUOM [UOM4]
                         UNDEFINED <> szShippingUOM [UOM6]
                         UNDEFINED <> szWeightUOM [UWUM]
                         UNDEFINED <> szVolumeUOM [UVM1]
                         UNDEFINED <> cSuppressErrorMessage [EV01]
                         UNDEFINED <> szErrorMessageID [DTAI]
                         VA frm_szMatrixBranchPlant [MCU] -> szBranchPlant [MCU]
                         UNDEFINED <> cBackOrdersAllowedYN [BACK]
                         UNDEFINED <> cStockingType [STKT]
                         UNDEFINED <> cBulkPackedFlag [BPFG]
                         UNDEFINED <> cInventoryCostLevel [CLEV]
                         UNDEFINED <> szLineType [LNTY]
                         UNDEFINED <> cLotProcessType [SRCE]
                         UNDEFINED <> mnShelfLifeDays [SLD]
                         UNDEFINED <> szGLClassCode [GLPT]
                         UNDEFINED <> cContractItem [CONT]
                         UNDEFINED <> szProductionUOM [UOM8]
                         UNDEFINED <> szFromGrade [FRGD]
                         UNDEFINED <> szThruGrade [THGD]
                         UNDEFINED <> mnFromPotency [FRMP]
                         UNDEFINED <> mnThruPotency [THRP]
                         UNDEFINED <> cPriceLevel [PLEV]
                         UNDEFINED <> cGradePotencyPricing [PRPO]
                         UNDEFINED <> cRoundToWholeNumber [SNS]
                         UNDEFINED <> cKitPricingMethod [PMTH]
                         UNDEFINED <> szComponentUOM [UOM9]
                         UNDEFINED <> szStandardUOMConversion [TFLA]
                         UNDEFINED <> mnBuyer [BUYR]
                         UNDEFINED <> mnPlannerNumber [ANPL]
                         UNDEFINED <> szPrintMessage [INMG]
                         UNDEFINED <> cCommitmentMethod [CMGL]
                         UNDEFINED <> cCheckAvailability [CKAV]
                         UNDEFINED <> cSerialNumberReqsted [SRNR]
                         UNDEFINED <> cLotStatusCode [LOTS]
                         UNDEFINED <> cPurchasePriceLevel [PPLV]
                         VA grd_MatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                         VA grd_MatrixSegment1_SEG1 [SEG1] <- szSegment1 [SEG1]
                         UNDEFINED <> szSegment2 [SEG2]
                         UNDEFINED <> szSegment3 [SEG3]
                         UNDEFINED <> szSegment4 [SEG4]
                         UNDEFINED <> szSegment5 [SEG5]
                         UNDEFINED <> szSegment6 [SEG6]
                         UNDEFINED <> szSegment7 [SEG7]
                         UNDEFINED <> szSegment8 [SEG8]
                         UNDEFINED <> szSegment9 [SEG9]
                         UNDEFINED <> szSegment10 [SEG0]
                         UNDEFINED <> cMatrixControlled [MIC]
                         UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
                         UNDEFINED <> cDualPickingProcessOption [DPPO]
                         UNDEFINED <> mnDualTolerance [DLTL]
                    If VA frm_cGridFilled [EV01] is not equal to "Y"
                    And SV Form_ Mode is equal to CO UPDATE_MODE
                    And VA frm_cFirstAddRow_EV01 [EV01] is equal to <Blank>
                    Or VA frm_cFirstAddRow_EV01 [EV01] is equal to <NULL>
                         GetF4211NextLineNumber(B4200320.GetF4211NextLineNumber)
                              FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
                              PO mnDefaultLineIncrement [LNIX] -> mnLineIncrement [MATH06]
                              VA frm_LNID_Last_Line_Number [LNID] <> mnLineNumber [LNID]
                              UNDEFINED <> szErrorMsgID [DTAI]
                              "1" -> cSuppressErrorMsg [EV01]
                              UNDEFINED <> cErrorCode [ERRC]
                         VA frm_cFirstAddRow_EV01 [EV01] = "1"
                    End If
                    GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
                    GB UM  [UOM] = VA frm_szMatrixUOM_UOM [UOM]
                    VA frm_LNID_Last_Line_Number [LNID] = GB Line Number [LNID]
                    Insert Grid Buffer Row(FC Grid, VA frm_mnNoOfGridLines_MATH01, <Yes>, <No>, <Yes>, <No>, <Yes>)
                    VA frm_mnNoOfGridLines_MATH01 [MATH01] = [VA frm_mnNoOfGridLines_MATH01 [MATH01]]+1
                    IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                         VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                         PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
                         VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
               End If
          End While
          If VA frm_cGridFilled [EV01] is equal to "Y"
          Or SV Form_ Mode is equal to CO ADD_MODE
               GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
               Update Grid Buffer Row(FC Grid, VA frm_mnNoOfGridLines_MATH01,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
          End If
          VA frm_cLineIncrementedY [EV01] = "1"
     Else
          If VA frm_cMatrixUpdateTypes [EV01] is equal to "2"
               // Loop through the grid and compare to record one at a time in the Matrix Cache
               While VA frm_mnGridRowCounter_MATH01 [MATH01] is less than or equal to VA frm_mnNoOfGridLines_MATH01 [MATH01]
                    Get Grid Row(FC Grid, VA frm_mnGridRowCounter_MATH01)
                    VA grd_MatrixSegment1_SEG1 [SEG1] = VA evt_tempSegment1 [SEG1]
                    VA grd_MatrixTemplate_TMPL [TMPL] = VA evt_TempTemplate_TMPL [TMPL]
                    // SAR# 5422528 -Begin
                    VA frm_cMatrixCacheFunctionCalled [EV01] = "0"
                    If GC Matrix Control Line Number [MCLN] is greater than "0"
                         MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                              "1" -> szCacheActionCode [CACTN]
                              "8" -> mnNumberKeys [NKEYS]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              VA frm_MatrixErrorMessageID_DTAI [DTAI] <- szErrorMessageID [DTAI]
                              UNDEFINED <> idCacheCursor [GENLNG]
                              VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
                              VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
                              VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              <Blank> -> szOrderSuffix [SFXO]
                              GC Line Number [LNID] -> mnLineNumber [LNID]
                              UNDEFINED <> mnMatrixRowNumber [MRNO]
                              UNDEFINED <> mnMatrixColumnNumber [MCNO]
                              VA frm_mnShortItemNo_ITM [ITM] <- mnIdentifierShortItem [ITM]
                              VA frm_MatrixControlLine_MCLN [MCLN] <- mnMatrixControlLine [MCLN]
                              VA frm_MatrixNewQuantity_UORG [UORG] <- mnQuantityTransaction [TRQT]
                              VA frm_szMatrixUOM_UOM [UOM] <- szUnitOfMeasureAsInput [UOM]
                              UNDEFINED <> cQuantityChanged [EV01]
                              "2" -> cIndex [EV01]
                              UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                         VA frm_cMatrixCacheFunctionCalled [EV01] = "1"
                    End If
                    If VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
                    Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
                    And VA frm_cMatrixCacheFunctionCalled [EV01] is equal to "1"
                         VA evt_mnLineNoForDelete_LNID [LNID] = GC Line Number [LNID]
                         If VA frm_MatrixNewQuantity_UORG [UORG] is equal to "0"
                         Or VA frm_MatrixNewQuantity_UORG [UORG] is equal to <Blank>
                              If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
                                   Press Button(FC Delete Lines)
                              Else
                                   // SAR 6386961 Pass Release Number
                                   // SAR 6368922 Pass GC Associated Text
                                   F4211FSEditLine(B4200310.F4211FSEditLine)
                                        FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                                        "D" -> cCMLineAction [ACTN]
                                        VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                                        VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                                        VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                                        VA frm_SOEComputerID_CTID [CTID] -> szCMComputerID [CTID]
                                        VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                                        FC Order Company [KCOO] -> szOrderCo [KCOO]
                                        FC Order Number [DOCO] -> mnOrderNo [DOCO]
                                        FC Order Type [DCTO] -> szOrderType [DCTO]
                                        GC Line Number [LNID] -> mnLineNo [LNID]
                                        GC Business Unit [MCU] -> szBusinessUnit [MCU]
                                        GC Ship To Number [SHAN] -> mnShipToNo [SHAN]
                                        GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                                        GC Sched Pick [PDDJ] -> jdPromisedDate [PDDJ]
                                        GC Cancel Date [CNDJ] -> jdCancelDate [CNDJ]
                                        GC Promised Delivery [RSDJ] -> jdPromisedDlvryDate [RSDJ]
                                        GC Item Number [UITM] -> szItemNo [UITM]
                                        GC Location  [LOCN] -> szLocation [LOCN]
                                        GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                                        GC Description  [DSC1] -> szDescription1 [DSC1]
                                        GC Description Line 2 [DSC2] -> szDescription2 [DSC2]
                                        GC Ln Ty [LNTY] -> szLineType [LNTY]
                                        GC Last Stat [LTTR] -> szLastStatus [LTTR]
                                        GC Next Stat [NXTR] <> szNextStatus [NXTR]
                                        GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                                        GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                                        GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                                        GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                                        GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
                                        GC Extended Price [AEXP] -> mnExtendedPrice [AEXP]
                                        GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
                                        GC Extended Cost [ECST] -> mnExtendedCost [ECST]
                                        GC Print Message [INMG] <> szPrintMesg [INMG]
                                        GC Pay Inst [RYIN] -> cPaymentInstrument [RYIN]
                                        GC Adj. Schedule [ASN] -> szAdjustmentSchedule [ASN]
                                        GC Taxable  [TAX1] -> cSalesTaxableYN [TAX1]
                                        GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                                        GC UM  [UOM] -> szTransactionUOM [UOM]
                                        GC PR UM [UOM4] -> szPricingUOM [UOM4]
                                        GC Unit Weight [ITWT] -> mnItemWeight [ITWT]
                                        GC Wt U/M [WTUM] -> szWeightUOM [WTUM]
                                        GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [FUP]
                                        GC Foreign Extended Price [FEA] -> mnForeignExtPrice [FEA]
                                        GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
                                        GC Foreign Extended Cost [FEC] -> mnForeignExtCost [FEC]
                                        VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                                        "P4210" -> szCMProgramID [JPID]
                                        SL VersionName -> szCMVersion [VERS]
                                        GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                                        GC Price Over Cd [PROV] -> cOverridePrice [PROV]
                                        VA grd_CSTO_Cost_Over [CSTO] -> cOverrideCost [CSTO]
                                        VA frm_USER_User_ID [USER] -> szUserID [USER]
                                        BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                                        FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                                        FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                                        VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                                        VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                                        GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                                        VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                                        GC OKCO- Doc Co (wf) [OKCO] -> szOriginalOrderKeyCo [OKCO]
                                        GC Original Order No [OORN] -> szOriginalOrderNo [OORN]
                                        GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
                                        GC Original Line Number [OGNO] -> mnOriginalOrderLineNo [OGNO]
                                        GC Short Item No [ITM] -> mnShortItemNo [ITM]
                                        VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                                        GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                                        VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                                        VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                                        GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                                        GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                                        GC Line of Business [LOB] <> szLineofBusiness [LOB]
                                        GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                                        GC End Use [EUSE] <> szEndUse [EUSE]
                                        GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                                        GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                                        GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                                        GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
                                        VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                                        VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                                        VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                                        VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                                        GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                                        GB Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                                        GC Carrier Number [CARS] <> mnCarrier [CARS]
                                        GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                                        FI mnProcessID [PEID] -> mnProcessID [PEID]
                                        FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                                        GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                                        GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                                        GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                                        GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                                        GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                                        GC Sec UM [UOM2] <> szDualUOM [UOM2]
                                        GC Matrix Control Line Number [MCLN] -> mnMatrixControlLineNo [MCLN]
                                        GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                                   If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
                                        Set Grid Font(FC Grid, <Current Row>,  <All Columns>, <,Regular,10,Black>)
                                   End If
                              End If
                              // SAR# 5422528-End
                         Else
                              GC Quantity Ordered [UORG] = VA frm_MatrixNewQuantity_UORG [UORG]
                              GC Quantity Backordered [SOBK] = <NULL>
                              GC Quantity Shipped [SOQS] = <NULL>
                              GC Quantity Canceled [SOCN] = <NULL>
                         End If
                         // If a record on the grid is found in the Matrix Cache, delete that record in
                         // Matrix Cache using action code "4"
                         // SAR# 542252 - Begin
                         VA grd_MatrixSegment1_SEG1 [SEG1] = VA evt_tempSegment1 [SEG1]
                         VA grd_MatrixTemplate_TMPL [TMPL] = VA evt_TempTemplate_TMPL [TMPL]
                         MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                              "4" -> szCacheActionCode [CACTN]
                              "8" -> mnNumberKeys [NKEYS]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              UNDEFINED <> szErrorMessageID [DTAI]
                              UNDEFINED <> idCacheCursor [GENLNG]
                              VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
                              VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
                              VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              <Blank> -> szOrderSuffix [SFXO]
                              VA evt_mnLineNoForDelete_LNID [LNID] -> mnLineNumber [LNID]
                              UNDEFINED <> mnMatrixRowNumber [MRNO]
                              UNDEFINED <> mnMatrixColumnNumber [MCNO]
                              UNDEFINED <> mnIdentifierShortItem [ITM]
                              VA frm_MatrixControlLine_MCLN [MCLN] -> mnMatrixControlLine [MCLN]
                              UNDEFINED <> mnQuantityTransaction [TRQT]
                              UNDEFINED <> szUnitOfMeasureAsInput [UOM]
                              UNDEFINED <> cQuantityChanged [EV01]
                              "2" -> cIndex [EV01]
                              UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                         // SAR# 5422528-End
                    End If
                    VA frm_mnGridRowCounter_MATH01 [MATH01] = [VA frm_mnGridRowCounter_MATH01 [MATH01]]+1
               End While
               // Loop through the Matrix Cache and compare to record one at a time in F42UI11
               // If found in F42UI11, call EditLine to update that record
               VA frm_MatrixErrorMessageID_DTAI [DTAI] = <Blank>
               While VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
               Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
                    VA grd_MatrixSegment1_SEG1 [SEG1] = VA evt_tempSegment1 [SEG1]
                    VA grd_MatrixTemplate_TMPL [TMPL] = VA evt_TempTemplate_TMPL [TMPL]
                    MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                         "6" -> szCacheActionCode [CACTN]
                         "7" -> mnNumberKeys [NKEYS]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         VA frm_MatrixErrorMessageID_DTAI [DTAI] <- szErrorMessageID [DTAI]
                         VA frm_MatrixCacheCursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                         VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
                         VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
                         VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
                         FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                         <Blank> -> szOrderSuffix [SFXO]
                         VA frm_SOELineNumber_LNID [LNID] <- mnLineNumber [LNID]
                         UNDEFINED <> mnMatrixRowNumber [MRNO]
                         UNDEFINED <> mnMatrixColumnNumber [MCNO]
                         VA frm_mnShortItemNo_ITM [ITM] <- mnIdentifierShortItem [ITM]
                         VA frm_MatrixControlLine_MCLN [MCLN] <- mnMatrixControlLine [MCLN]
                         VA frm_MatrixNewQuantity_UORG [UORG] <- mnQuantityTransaction [TRQT]
                         VA frm_szMatrixUOM_UOM [UOM] <- szUnitOfMeasureAsInput [UOM]
                         UNDEFINED <> cQuantityChanged [EV01]
                         "2" -> cIndex [EV01]
                         UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                    If VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
                    Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
                         // Update F42UI11
                         GetSalesOrderDetailAndUpdate(B4204050.GetSalesOrderDetailAndUpdate)
                              VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
                              VA frm_SOEJobNo_JOBS [JOBS] -> mnJobnumber [JOBS]
                              VA frm_SOELineNumber_LNID [LNID] -> mnLineNumber [LNID]
                              VA frm_MatrixControlLine_MCLN [MCLN] -> mnMatrixControlLineLineNumber [MCLN]
                              VA frm_MatrixNewQuantity_UORG [UORG] -> mnTransactionQty [UORG]
                              UNDEFINED <> szErrorMessageID [DTAI]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              VA frm_EV22_cCacheOn [EV22] -> cCacheOnOrWF [EV01]
                              VA frm_cFoundAMatch [EV01] <- cFlag1 [EV01]
                              "1" -> cFlag2 [EV01]
                              UNDEFINED <> mnOrderNumber [DOCO]
                              UNDEFINED <> szOrderType [DCTO]
                              UNDEFINED <> szCompany [KCOO]
                         If VA frm_cFoundAMatch [EV01] is equal to "1"
                              // If a record in the Matrix Cache is found in F42UI11, delete that record in th
                              // Matrix Cache using action code "4"
                              MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                                   "4" -> szCacheActionCode [CACTN]
                                   "8" -> mnNumberKeys [NKEYS]
                                   "1" -> cSuppressErrorMessage [SUPPS]
                                   UNDEFINED <> szErrorMessageID [DTAI]
                                   UNDEFINED <> idCacheCursor [GENLNG]
                                   VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
                                   VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
                                   VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
                                   FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                                   FC Order Type [DCTO] -> szOrderType [DCTO]
                                   FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                                   <Blank> -> szOrderSuffix [SFXO]
                                   VA frm_SOELineNumber_LNID [LNID] -> mnLineNumber [LNID]
                                   UNDEFINED <> mnMatrixRowNumber [MRNO]
                                   UNDEFINED <> mnMatrixColumnNumber [MCNO]
                                   UNDEFINED <> mnIdentifierShortItem [ITM]
                                   VA frm_MatrixControlLine_MCLN [MCLN] -> mnMatrixControlLine [MCLN]
                                   UNDEFINED <> mnQuantityTransaction [TRQT]
                                   UNDEFINED <> szUnitOfMeasureAsInput [UOM]
                                   UNDEFINED <> cQuantityChanged [EV01]
                                   "2" -> cIndex [EV01]
                                   UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                         Else
                              // If nothing was found in F42UI11, must be a new record, insert it on the grid
                              If VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <Blank>
                              Or VA frm_MatrixErrorMessageID_DTAI [DTAI] is equal to <NULL>
                                   GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
                                        VA frm_mnShortItemNo_ITM [ITM] -> mnShortItemNumber [ITM]
                                        GB Item Number [UITM] <- szPrimaryItemNumber [UITM]
                                        UNDEFINED <> szSecondItemNumber [LITM]
                                        UNDEFINED <> szThirdItemNumber [AITM]
                                        UNDEFINED <> szDescription [DSC1]
                                        UNDEFINED <> szDescriptionLine2 [DSC2]
                                        UNDEFINED <> szItemFlashMessage [IFLA]
                                        UNDEFINED <> szPrimaryUOM [UOM1]
                                        UNDEFINED <> szSecondaryUOM [UOM2]
                                        UNDEFINED <> szPurchasingUOM [UOM3]
                                        UNDEFINED <> szPricingUOM [UOM4]
                                        UNDEFINED <> szShippingUOM [UOM6]
                                        UNDEFINED <> szWeightUOM [UWUM]
                                        UNDEFINED <> szVolumeUOM [UVM1]
                                        UNDEFINED <> cSuppressErrorMessage [EV01]
                                        UNDEFINED <> szErrorMessageID [DTAI]
                                        VA frm_szMatrixBranchPlant [MCU] -> szBranchPlant [MCU]
                                        UNDEFINED <> cBackOrdersAllowedYN [BACK]
                                        UNDEFINED <> cStockingType [STKT]
                                        UNDEFINED <> cBulkPackedFlag [BPFG]
                                        UNDEFINED <> cInventoryCostLevel [CLEV]
                                        UNDEFINED <> szLineType [LNTY]
                                        UNDEFINED <> cLotProcessType [SRCE]
                                        UNDEFINED <> mnShelfLifeDays [SLD]
                                        UNDEFINED <> szGLClassCode [GLPT]
                                        UNDEFINED <> cContractItem [CONT]
                                        UNDEFINED <> szProductionUOM [UOM8]
                                        UNDEFINED <> szFromGrade [FRGD]
                                        UNDEFINED <> szThruGrade [THGD]
                                        UNDEFINED <> mnFromPotency [FRMP]
                                        UNDEFINED <> mnThruPotency [THRP]
                                        UNDEFINED <> cPriceLevel [PLEV]
                                        UNDEFINED <> cGradePotencyPricing [PRPO]
                                        UNDEFINED <> cRoundToWholeNumber [SNS]
                                        UNDEFINED <> cKitPricingMethod [PMTH]
                                        UNDEFINED <> szComponentUOM [UOM9]
                                        UNDEFINED <> szStandardUOMConversion [TFLA]
                                        UNDEFINED <> mnBuyer [BUYR]
                                        UNDEFINED <> mnPlannerNumber [ANPL]
                                        UNDEFINED <> szPrintMessage [INMG]
                                        UNDEFINED <> cCommitmentMethod [CMGL]
                                        UNDEFINED <> cCheckAvailability [CKAV]
                                        UNDEFINED <> cSerialNumberReqsted [SRNR]
                                        UNDEFINED <> cLotStatusCode [LOTS]
                                        UNDEFINED <> cPurchasePriceLevel [PPLV]
                                        VA grd_MatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                                        VA grd_MatrixSegment1_SEG1 [SEG1] <- szSegment1 [SEG1]
                                        UNDEFINED <> szSegment2 [SEG2]
                                        UNDEFINED <> szSegment3 [SEG3]
                                        UNDEFINED <> szSegment4 [SEG4]
                                        UNDEFINED <> szSegment5 [SEG5]
                                        UNDEFINED <> szSegment6 [SEG6]
                                        UNDEFINED <> szSegment7 [SEG7]
                                        UNDEFINED <> szSegment8 [SEG8]
                                        UNDEFINED <> szSegment9 [SEG9]
                                        UNDEFINED <> szSegment10 [SEG0]
                                        UNDEFINED <> cMatrixControlled [MIC]
                                        UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
                                        UNDEFINED <> cDualPickingProcessOption [DPPO]
                                        UNDEFINED <> mnDualTolerance [DLTL]
                                   GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
                                   GB Matrix Control Line Number [MCLN] = VA frm_MatrixControlLine_MCLN [MCLN]
                                   GB Quantity Ordered [UORG] = VA frm_MatrixNewQuantity_UORG [UORG]
                                   GB UM  [UOM] = VA frm_szMatrixUOM_UOM [UOM]
                                   Insert Grid Buffer Row(FC Grid, VA frm_mnNoOfGridLines_MATH01, <Yes>, <No>, <Yes>, <No>, <No>)
                                   VA frm_mnNoOfGridLines_MATH01 [MATH01] = [VA frm_mnNoOfGridLines_MATH01 [MATH01]]+1
                                   IncrementSalesDetailLineNumber(N4200870.IncrementSalesDetailLineNumber)
                                        VA frm_LNID_Last_Line_Number [LNID] -> mnInputLineNumber [LNID]
                                        PO mnDefaultLineIncrement [LNIX] -> mnLineNumberIncrement [LNIX]
                                        VA frm_LNID_Last_Line_Number [LNID] <- mnOutputLineNumber [XLIN]
                              End If
                              If VA frm_cGridFilled [EV01] is equal to "Y"
                                   GB Line Number [LNID] = VA frm_LNID_Last_Line_Number [LNID]
                                   Update Grid Buffer Row(FC Grid,  <Currently Selected Row>, <Yes>, <No>, <Yes>, <No>, <Yes>)
                              End If
                              VA frm_cLineIncrementedY [EV01] = "1"
                         End If
                    End If
               End While
          End If
     End If
     VA frm_cAddOrUpdateMatrixMode [EV01] = <Blank>
     // Terminate the Matrix Cache 
     MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
          "8" -> szCacheActionCode [CACTN]
          "3" -> mnNumberKeys [NKEYS]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA frm_MatrixErrorMessageID_DTAI [DTAI] <- szErrorMessageID [DTAI]
          UNDEFINED <> idCacheCursor [GENLNG]
          VA frm_MatrixCacheJobNumber_JOBS [JOBS] -> mnJobnumber [JOBS]
          VA frm_MatrixCacheComputerID_CTID [CTID] -> szComputerID [CTID]
          VA grd_MatrixSegment1_SEG1 [SEG1] -> szSegment1 [SEG1]
          UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
          UNDEFINED <> szOrderType [DCTO]
          UNDEFINED <> szCompanyKeyOrderNo [KCOO]
          UNDEFINED <> szOrderSuffix [SFXO]
          UNDEFINED <> mnLineNumber [LNID]
          UNDEFINED <> mnMatrixRowNumber [MRNO]
          UNDEFINED <> mnMatrixColumnNumber [MCNO]
          UNDEFINED <> mnIdentifierShortItem [ITM]
          UNDEFINED <> mnMatrixControlLine [MCLN]
          UNDEFINED <> mnQuantityTransaction [TRQT]
          UNDEFINED <> szUnitOfMeasureAsInput [UOM]
          UNDEFINED <> cQuantityChanged [EV01]
          "2" -> cIndex [EV01]
          UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
Else
     // Do nothing
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: 15a57d5a-36c4-411b-b747-a5ac6c07b275
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Deliver To [DVAN] = <NULL>
Clear Control Error(FC Long Address Number [ALKY])
If FC Long Address Number [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Deliver To [DVAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: 4293be70-d427-4e6a-84b5-0ebb0cc3294a
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Address Number - Invoiced To [ITAN] = <NULL>
Clear Control Error(FC Long Address Number [ALKY])
If FC Long Address Number [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number - Invoiced To [ITAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: 7fea804f-1fb4-4acd-82c8-b696bb462b47
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Paid By [PBAN] = <NULL>
Clear Control Error(FC Long Address Number [ALKY])
If FC Long Address Number [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Paid By [PBAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: d1a376a6-cacc-4f92-8847-9148a2bd9f20
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Forwarded To [FTAN] = <NULL>
Clear Control Error(FC Long Address Number [ALKY])
If FC Long Address Number [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Forwarded To [FTAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Audit Logging
Event: Button Clicked
Event GUID: c842fc14-03f3-4abf-97f5-711a3f8cbe5d
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cAuditOrApprovals [EV01]
----------------------------------------
// 
// Advance Revision Number if needed
// 
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <Blank>
Or VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <NULL>
     // SAR 5953388-Use Initializtion function
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
If VA frm_cHideAuditInfo_EV01 [EV01] is not equal to "1"
     If PO cUseAuditLog [EV01] is equal to "1"
     And VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
          If VA frm_cFirstRevision_EV01 [EV01] is not equal to "1"
               FC Change Order [CORD] = [FC Change Order [CORD]]+1
               VA frm_cFirstRevision_EV01 [EV01] = "1"
          End If
          GC Chg Ord [CORD] = FC Change Order [CORD]
          // SAR 5953388-Use Set function
          GetActivateAuditLogSOEL08(B4205101.GetActivateAuditLogSOEL08)
               VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] -> szEditLineSOEMBFFlags [SOEF]
               VA evt_cAuditOrApprovals [EV01] <- cValue [EV01]
               UNDEFINED <> cErrorCode [ERRC]
          If VA evt_cAuditOrApprovals [EV01] is not equal to "2"
               SetActivateAuditLogSOEL08(B4205101.SetActivateAuditLogSOEL08)
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                    "1" -> cValue [EV01]
                    UNDEFINED <> cErrorCode [ERRC]
          End If
          VA frm_cAuditLogRev_EV01 [EV01] = "1"
          If PO cRequiredReasonCode [EV02] is equal to "1"
               VA grd_cReasonCodeReq_EV01 [EV01] = "1"
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Approval
Event: Button Clicked
Event GUID: cce6612b-210f-4d5c-8a2b-f7b0ddb1a3da
=============================================
// 
// Flag line for Approval Processing
// 
If VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <Blank>
Or VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] is equal to <NULL>
     // SAR 5953388-Use initialization function
     InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
End If
// SAR 5960852 - Added != to blank and != to null to end of condition
If PO cRequiredApprovalProcess [EV03] is equal to "1"
And VA frm_cBypassAuditLogging_EV01 [EV01] is not equal to "1"
And VA frm_cHideAuditInfo_EV01 [EV01] is not equal to "1"
And VA grd_ACTI_ActionHidden [ACTI] is not equal to "A"
And VA grd_ACTI_ActionHidden [ACTI] is not equal to <Blank>
And VA grd_ACTI_ActionHidden [ACTI] is not equal to <NULL>
     // SAR 5953388-Use Value '2' of SOEL08 instead of value '1' of SOEL07
     SetActivateAuditLogSOEL08(B4205101.SetActivateAuditLogSOEL08)
          VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
          "2" -> cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
     VA frm_cApprovalRequired_EV01 [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Save and E&xit
Event: Button Clicked
Event GUID: 4a5be2d3-56ef-4eb8-b44d-9217e3f328dc
=============================================
Press Button(HC Cancel/Close)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Checko&ut
Event: Button Clicked
Event GUID: 933e6412-a71a-4695-8f8f-5f646fe258fa
=============================================
Press Button(HC &OK/&Select)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC &Back
Event: Button Clicked
Event GUID: 81b816c7-3119-422d-8317-60cf2dcda1b4
=============================================
// ---------------------------------------------------------------------------
// CRM CSS
// ---------------------------------------------------------------------------
Press Button(HC Cancel/Close)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Override So&ld To
Event: Button Clicked
Event GUID: 7245fbb6-2aaf-4e4a-8a77-868517cf7214
=============================================
VA frm_cOverrideButtonClicked [EV01] = "1"
Press Button(FC PROCESS: Override CRM CSS)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Override Shi&p To
Event: Button Clicked
Event GUID: b8513cee-5350-4145-8015-19692461a0eb
=============================================
VA frm_cOverrideButtonClicked [EV01] = "1"
Press Button(FC PROCESS: Override CRM CSS)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Overri&de Sold To and Ship To
Event: Button Clicked
Event GUID: 4f3e888b-023b-4020-afbe-c536d3bddcca
=============================================
VA frm_cOverrideButtonClicked [EV01] = "1"
Press Button(FC PROCESS: Override CRM CSS)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Ca&ncel Order
Event: Button Clicked
Event GUID: 56562c1d-1627-42df-84f2-aee2dbb20b67
=============================================
// ---------------------------------------------------------------------------
// CRMCSS
// ---------------------------------------------------------------------------
VA frm_cCancelOrderAction_EV01 [EV01] = "1"
VA frm_cWasOkButtonPressed_EV01 [EV01] = <Blank>
// 
Call App:P4210 Form:W4210C Version:Undefined
     VA frm_cWasOkButtonPressed_EV01 [EV01] <- cIsOkclicked [EV01]
// 
If VA frm_cWasOkButtonPressed_EV01 [EV01] is equal to "1"
     Get Max Grid Rows(FC Grid, VA frm_mnNoOfGridLines_MATH01)
     VA frm_mnGridRowCounter_MATH01 [MATH01] = VA frm_mnNoOfGridLines_MATH01 [MATH01]
     // 
     // 
     // ---------------------------------------------------------------------------
     // Read all lines in the grid. If the line was newly added, use 'Delete Lines'
     // button to bypass it. If the line is an existing line on the order, then it
     // will have to be canceled. 
     // ---------------------------------------------------------------------------
     While VA frm_mnGridRowCounter_MATH01 [MATH01] is greater than or equal to "1.00"
          Get Grid Row(FC Grid, VA frm_mnGridRowCounter_MATH01)
          If VA grd_ACTI_ActionHidden [ACTI] is equal to "A"
               If GC Item Number [UITM] is greater than <Blank>
               Or GC Item Number [UITM] is greater than <Blank>
                    Press Button(FC Delete Lines)
               End If
          Else
               If VA grd_ACTI_ActionHidden [ACTI] is equal to "C"
                    If VA grd_cProfitMarginChanged_EV01 [EV01] is not equal to "1"
                         GC % Profit Margin [PRMG] = "0"
                    End If
                    If PO cActivatePrepayProcess [EV01] is equal to "1"
                         F004201.Open
                              
                         If SV File_IO_Status is equal to CO SUCCESS
                         Or SV File_IO_Status is equal to CO TABLE_ALREADY_OPEN
                              VA frm_SFXO_szOrderSuffix [SFXO] = "000"
                              VA frm_SEQ_mnSequenceNumber [SEQ] = 0
                              VA frm_POF_szPrepayOrigination [POF] = "01"
                              F004201.FetchSingle  [Index 1: DOCO, DCTO, KCOO +]
                                   FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                                   FC Order Type [DCTO] = TK Order Type [DCTO]
                                   FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                                   VA frm_SFXO_szOrderSuffix [SFXO] = TK Order Suffix [SFXO]
                                   GC Line Number [LNID] = TK Line Number [LNID]
                                   VA frm_SEQ_mnSequenceNumber [SEQ] = TK Sequence Number [SEQ]
                                   VA frm_POF_szPrepayOrigination [POF] = TK PrepaymentOriginationFlag [POF]
                                   VA frm_ATS_szPrepayTransStatus [ATS] <- TK Prepayment Transaction Status [ATS]
                              If VA frm_ATS_szPrepayTransStatus [ATS] is equal to "05"
                                   Set Control Error(FC Grid, "114U")
                                   F004201.Close
                                        
                                   Stop Processing
                              End If
                         End If
                         F004201.Close
                              
                    End If
                    // 
                    ChangeStringElement(B4002410.ChangeStringElement)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
                         "26" -> nPosition [INT01]
                         "1" -> cCharacter [EV01]
                    If VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <Blank>
                    Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to <NULL>
                    Or VA grd_EV18_UpdatedtoDetailWF [EV18] is equal to "0"
                         If PO szNonUpdatableStatus [NXT2] is not equal to <Blank>
                         And PO szNonUpdatableStatus [NXT2] is not equal to <NULL>
                         And PO szNonUpdatableStatus [NXT2] is not equal to "0"
                         And GC Next Stat [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = "0"
                         Else
                              VA grd_EV18_UpdatedtoDetailWF [EV18] = "1"
                         End If
                    End If
                    // 
                    If GC Kit Master Line No [KTLN] is equal to "0"
                    And GC Kit Cpnt Line No [CPNT] is equal to "0"
                         F4211FSEditLine(B4200310.F4211FSEditLine)
                              FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                              "D" -> cCMLineAction [ACTN]
                              VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                              VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                              VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                              VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                              FC Order Company [KCOO] <> szOrderCo [KCOO]
                              FC Order Number [DOCO] <> mnOrderNo [DOCO]
                              FC Order Type [DCTO] <> szOrderType [DCTO]
                              GC Line Number [LNID] <> mnLineNo [LNID]
                              GC Business Unit [MCU] <> szBusinessUnit [MCU]
                              GC Ship To Number [SHAN] -> mnShipToNo [SHAN]
                              GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                              GC Sched Pick [PDDJ] -> jdPromisedDate [PDDJ]
                              GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                              GC Promised Delivery [RSDJ] -> jdPromisedDlvryDate [RSDJ]
                              GC Item Number [UITM] -> szItemNo [UITM]
                              GC Location  [LOCN] -> szLocation [LOCN]
                              GC Lot Serial Number [LOTN] -> szLotNo [LOTN]
                              GC Description  [DSC1] -> szDescription1 [DSC1]
                              GC Description Line 2 [DSC2] -> szDescription2 [DSC2]
                              GC Ln Ty [LNTY] -> szLineType [LNTY]
                              GC Last Stat [LTTR] <> szLastStatus [LTTR]
                              GC Next Stat [NXTR] <> szNextStatus [NXTR]
                              GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                              GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                              GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                              GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                              GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
                              GC Extended Price [AEXP] -> mnExtendedPrice [AEXP]
                              GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
                              GC Extended Cost [ECST] -> mnExtendedCost [ECST]
                              GC Print Message [INMG] <> szPrintMesg [INMG]
                              GC Pay Inst [RYIN] -> cPaymentInstrument [RYIN]
                              GC Adj. Schedule [ASN] -> szAdjustmentSchedule [ASN]
                              GC Taxable  [TAX1] -> cSalesTaxableYN [TAX1]
                              GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                              GC UM  [UOM] -> szTransactionUOM [UOM]
                              GC PR UM [UOM4] -> szPricingUOM [UOM4]
                              GC Unit Weight [ITWT] -> mnItemWeight [ITWT]
                              GC Wt U/M [WTUM] -> szWeightUOM [WTUM]
                              GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [FUP]
                              GC Foreign Extended Price [FEA] -> mnForeignExtPrice [FEA]
                              GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
                              GC Foreign Extended Cost [FEC] -> mnForeignExtCost [FEC]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                              "EP4210" -> szCMProgramID [JPID]
                              SL VersionName -> szCMVersion [VERS]
                              GC Primary Supplier [VEND] -> mnSupplierNo [VEND]
                              GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                              GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                              GC Price Over Cd [PROV] -> cOverridePrice [PROV]
                              VA grd_CSTO_Cost_Over [CSTO] -> cOverrideCost [CSTO]
                              VA frm_USER_User_ID [USER] -> szUserID [USER]
                              BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                              FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                              GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                              VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                              GC OKCO- Doc Co (wf) [OKCO] -> szOriginalOrderKeyCo [OKCO]
                              GC Original Order No [OORN] -> szOriginalOrderNo [OORN]
                              GC Orig Ord Type [OCTO] -> szOriginalOrderType [OCTO]
                              GC Original Line Number [OGNO] -> mnOriginalOrderLineNo [OGNO]
                              GC Short Item No [ITM] -> mnShortItemNo [ITM]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                              GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                              VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                              VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                              GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                              GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                              GC Line of Business [LOB] <> szLineofBusiness [LOB]
                              GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                              GC End Use [EUSE] <> szEndUse [EUSE]
                              GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                              GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                              GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                              GC It Mg [IFLA] <> szItemFlashMessage [IFLA]
                              VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                              VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                              VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                              VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                              GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                              GB Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                              GC Carrier Number [CARS] <> mnCarrier [CARS]
                              GC Header Business Unit [EMCU] -> szRevenueBusinessUnit [EMCU]
                              FI mnProcessID [PEID] -> mnProcessID [PEID]
                              FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                              GC Requested Del  Time [DRQT] -> mnRequestedDeliveryTime [DRQT]
                              GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                              GC Scheduled Pick Time [PDTT] -> mnPromisedPickTime [PDTT]
                              GC Scheduled Ship Time [PMDT] -> mnScheduledShipmnentTime [PMDT]
                              GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                              GC Sec UM [UOM2] <> szDualUOM [UOM2]
                              GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
                              GC Promised Del  Time [RSDT] -> mnPromisedDeliveryTime [RSDT]
                         If VA frm_ERRC_Error_Code [ERRC] is not equal to "2"
                              Set Grid Font(FC Grid, <Currently Selected Row>, <All Columns>, <Default,Default,0,Default>)
                              // 
                              If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                              Or VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                                   VA frm_STKT_ProcessCancelLine [STKT] = VA grd_STKT_Stocking_Type [STKT]
                                   VA frm_LNID_Cancel [LNID] = GC Line Number [LNID]
                                   If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                                        CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
                                             UNDEFINED <> szErrorMessageID [DTAI]
                                             "1" -> cSuppressErrorMessage [SUPPS]
                                             FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
                                             FC Order Type [DCTO] -> szSO_Type [DCTO]
                                             FC Order Company [KCOO] -> szSO_Company [KCOO]
                                             VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
                                             FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                                             VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                             VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
                                             VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
                                             "P4210" -> szProgramId [PID]
                                             SL VersionName -> szVersion [VERS]
                                             BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                                             VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
                                             VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
                                             UNDEFINED <> cErrorCode [ERRC]
                                             VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                                             FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                                             FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                                             VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                                             VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                                             "D" -> cCMLineAction [ACTN]
                                             VA grd_EV18_UpdatedtoDetailWF [EV18] -> cCMRecdWrittenToWF [EV18]
                                             VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                                             GC Ln Ty [LNTY] -> szParentLineType [LNTY]
                                   End If
                                   If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                                        CancelConfiguredComponents(B3201590.CancelConfiguredComponents)
                                             "42" -> szProductCode [SY]
                                             VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                                             FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                                             FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                                             FC Order Type [DCTO] -> szOrderType [DCTO]
                                             "000" -> szOrderSuffix [SFXO]
                                             VA frm_LNID_Cancel [LNID] -> mnLineNumber [LNID]
                                             FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
                                             VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                             SL VersionName -> szVersion [VERS]
                                             "P4210" -> szProgramId [PID]
                                             VA frm_EV22_cCacheOn [EV22] -> cUseCache [EV01]
                                             VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyConverYNAR [CRYR]
                                             BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                                             VA frm_MATH01_Related_Proc_Flag [MATH01] -> mnWKRelatedOrderProc [MATH01]
                                             FC OTOT: Order Total Display [TOT1] -> mnAmountOrderTotal [OTOT]
                                             FC FAP-Foreign Total Display [TOT2] -> mnAmountForeignOrderTotal [FAP]
                                             VA frm_TOTC_Total_Cost [TOTC] -> mnAmountTotalCost [TOTC]
                                             VA frm_FCST_Foreign_Total_Cost [FCST] -> mnAmountForeignTotalCost [FCST]
                                             "1" -> cSuppressErrorMessage [SUPPS]
                                             FI mnProcessID [PEID] -> mnProcessID [PEID]
                                             FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                                             VA grd_EV18_UpdatedtoDetailWF [EV18] -> cRecordInDetailWorkFile [EV01]
                                        CancelSO_KitOrCfgComponents(B4201170.CancelSO_KitOrCfgComponents)
                                             UNDEFINED <> szErrorMessageID [DTAI]
                                             "1" -> cSuppressErrorMessage [SUPPS]
                                             FC Order Number [DOCO] -> mnSaleOrderNumber [DOCO]
                                             FC Order Type [DCTO] -> szSO_Type [DCTO]
                                             FC Order Company [KCOO] -> szSO_Company [KCOO]
                                             VA frm_LNID_Cancel [LNID] -> mnSO_LineNumber [LNID]
                                             FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                                             VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                                             VA frm_EV22_cCacheOn [EV22] -> cCacheOnEV22 [EV22]
                                             VA frm_CRYR_Currency_Control [CRYR] -> cCurrencyControl [CRYR]
                                             "P4210" -> szProgramId [PID]
                                             SL VersionName -> szVersion [VERS]
                                             BC Date - Updated (F4201.0) [UPMJ] -> jdDateUpdated [UPMJ]
                                             VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProc [MATH01]
                                             VA frm_STKT_ProcessCancelLine [STKT] -> cStockingType [STKT]
                                             UNDEFINED <> cErrorCode [ERRC]
                                             VA frm_LNIX_Prev_WF_Line_Num [LNIX] <> mnLastLineNoAssigned [LNIX]
                                             FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                                             FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                                             VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                                             VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                                             "D" -> cCMLineAction [ACTN]
                                             VA grd_EV18_UpdatedtoDetailWF [EV18] -> cCMRecdWrittenToWF [EV18]
                                             VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnCMLineNo [XLIN]
                                             GC Ln Ty [LNTY] -> szParentLineType [LNTY]
                                   End If
                                   // 
                                   Press Button(FC Kit and Configurator processing)
                                   VA frm_STKT_ProcessCancelLine [STKT] = "0"
                              End If
                         End If
                    End If
               End If
          End If
          // 
          // 
          VA frm_mnGridRowCounter_MATH01 [MATH01] = [VA frm_mnGridRowCounter_MATH01 [MATH01]]-1
     End While
     Press Button(HC &OK/&Select)
End If
// ---------------------------------------------------------------------------
// CRMCSS
// ---------------------------------------------------------------------------


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Update Order
Event: Button Clicked
Event GUID: 2a668ff9-bf05-45a6-a415-f7a8c6235a45
=============================================
// ---------------------------------------------------------------------------
// CRM CSS
// ---------------------------------------------------------------------------
Press Button(HC &OK/&Select)


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC PROCESS: Initialize CRM CSS
Event: Button Clicked
Event GUID: 0b98acb5-76da-4c29-bd4b-569665d17648
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szUserAlphaName [ALPH]
evt_cBlankChar [EV01]
evt_nSegmentID [INT01]
evt_szErrorID [DTAI]
----------------------------------------
// 
// 6545212 CRM CSS
// 
// ---------------------------------------------------------------------------
// cTaskToComplete
//          blank / null    Add SO from portal
//          '1'                 Add SO from Product Catalog / Order Template
//          '2'                 Update SO
// ---------------------------------------------------------------------------
// Default User - what if called from PC or Template??
// ---------------------------------------------------------------------------
PpatGetUserIdAddressNumber(B0200098.PpatGetUserIdAddressNumber)
     SL UserID -> szUserId [USER]
     VA frm_mnUserABNumber [AN8] <- mnAddressNumber [AN8]
     "1" -> cSuppressErrorMessage [EV01]
GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
     VA frm_mnUserABNumber [AN8] -> mnAddressNumber [AN8]
     VA evt_szUserAlphaName [ALPH] <- szAddressBookDescription [ALPH]
// 
Set Grid Column Heading(FC Grid, GC QuantityShipped, TV Quantity Shippable)
Set Grid Column Heading(FC Grid, GC QuantityOrdered, TV Quantity Requested)
Set Grid Column Heading(FC Grid, GC ItemNumber_CSS, TV Item Number)
// 
VA evt_cBlankChar [EV01] = <Blank>
// 
// ---------------------------------------------------------------------------
// CRMCSS Update Mode
// ---------------------------------------------------------------------------
Hide Grid Column(FC Grid, GC ItemNumber)
Show Control(FC tbc_Heading)
If FI cTaskToComplete [EV01] is equal to "2"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          // ---------------------------------------------------------------------------
          // Hide and Show Controls
          // ---------------------------------------------------------------------------
          Hide Control(FC Currently there are no items on your order.)
          Hide Control(FC These are the items currently on your order.
          You may select 'OK' to continue with checkout, 
          or select more items.)
          Hide Control(FC Save and E&xit)
          Hide Control(FC Checko&ut)
          Hide Control(FC Reference [VR01])
          Show Control(FC &Back)
          Show Control(FC Update Order)
          Show Control(FC Ca&ncel Order)
          Show Control(FC st_OrderNumber)
          Show Control(FC stOrderNumberCSS)
          Show Control(FC st_SoldToLabel)
          Show Control(FC st_SoldToName)
          Show Control(FC st_ShipToLabel)
          Show Control(FC st_ShipToName)
          VA frm_cCancelOrderAction_EV01 [EV01] = "0"
          // ---------------------------------------------------------------------------
          // Disable row and Form Exits and grid columns
          // ---------------------------------------------------------------------------
          Disable Control(HC Delete L&ine)
          Disable Control(HC Bypass &New Line)
          Disable Control(HC De&lete All Lines)
          ! Disable Grid(FC Grid,  <All Rows>, GC ItemNumber_CSS)
          Disable Grid(FC Grid, <All Rows>, GC QuantityShipped)
          Disable Grid(FC Grid, <All Rows>, GC QuantityBackordered)
          Disable Grid(FC Grid, <All Rows>, GC QuantityCanceled)
          // ---------------------------------------------------------------------------
          // Form Title
          // ---------------------------------------------------------------------------
          If FI szFormTitle [CFGS] is greater than <Blank>
               VA frm_szFormTitle [CFGS] = FI szFormTitle [CFGS]
          Else
               VA frm_szFormTitle [CFGS] = TV Modify Sales Order
               VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [VA evt_cBlankChar [EV01]])
               VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [TV for])
               VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [VA evt_cBlankChar [EV01]])
               VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [VA evt_szUserAlphaName [ALPH]])
          End If
          Set Form Title(VA frm_szFormTitle [CFGS])
          VA evt_nSegmentID [INT01] = "1"
          Update Segment(FC tbc_Heading, TV Modify Sales Order, <Arial,Bold,15,Black>, <No>, VA evt_nSegmentID)
          Set Control Text(FC st_OrderNumber, TV Order Number)
          Set Control Text(FC stOrderNumberCSS, FC Order Number)
          Set Control Text(FC st_SoldToLabel, TV Sold To)
          Set Control Text(FC st_ShipToLabel, TV Ship To)
          Set Control Text(FC stPONumberCSS, FC CSS Customer PO)
     End If
Else
     Show Control(FC Reference [VR01])
     Show Control(FC Checko&ut)
     // 
     If FI cTaskToComplete [EV01] is less than or equal to <Blank>
          Show Control(FC Save and E&xit)
     Else
          Show Control(FC &Back)
     End If
     // 
     // ---------------------------------------------------------------------------
     // Title
     // ---------------------------------------------------------------------------
     If FI szFormTitle [CFGS] is greater than <Blank>
          VA frm_szFormTitle [CFGS] = FI szFormTitle [CFGS]
     Else
          VA frm_szFormTitle [CFGS] = TV Order Entry for
          VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [VA evt_cBlankChar [EV01]])
          VA frm_szFormTitle [CFGS] = concat([VA frm_szFormTitle [CFGS]], [VA evt_szUserAlphaName [ALPH]])
     End If
     Set Form Title(VA frm_szFormTitle [CFGS])
     // 
     Hide Control(FC Currently there are no items on your order.)
     // 
     VA evt_nSegmentID [INT01] = "1"
     Update Segment(FC tbc_Heading, TV Add Sales Order, <Arial,Bold,15,Black>, <No>, VA evt_nSegmentID)
     // 
     // ---------------------------------------------------------------------------
     // Display Override Options
     // ---------------------------------------------------------------------------
     // 
     If PO cOverrideSoldToShipTo [EV01] is equal to "1"
          Show Control(FC st_SoldToLabel)
          Show Control(FC st_ShipToLabel)
          Set Control Text(FC st_SoldToLabel, TV Sold To)
          Show Control(FC st_SoldToName)
          Set Control Text(FC st_ShipToLabel, TV Ship To)
          Show Control(FC st_ShipToName)
          Show Control(FC Overri&de Sold To and Ship To)
     Else
          If PO cOverrideSoldToShipTo [EV01] is equal to "2"
               Show Control(FC st_SoldToLabel)
               Set Control Text(FC st_SoldToLabel, TV Sold To)
               Show Control(FC st_SoldToName)
               Show Control(FC Override So&ld To)
          Else
               If PO cOverrideSoldToShipTo [EV01] is equal to "3"
                    Show Control(FC st_ShipToLabel)
                    Set Control Text(FC st_ShipToLabel, TV Ship To)
                    Show Control(FC st_ShipToName)
                    Show Control(FC Override Shi&p To)
               Else
                    ! Hide Control(Could not resolve Form Control. 967)
                    // SAR 7023361 Dup -can't use mouse on SoldTo/ShipTo. Deleted the Group box to
                    // fix
                    // this issue.
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC PROCESS: Override CRM CSS
Event: Button Clicked
Event GUID: 7319b0d8-f69e-4eb5-9c37-851b9bd7ca82
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szErrorID [DTAI]
----------------------------------------
//
// 6545212 CRM CSS
//
// ---------------------------------------------------------------------------
// Do not process if user OK the last order
// ---------------------------------------------------------------------------
If VA frm_cSuppressOverrideAfterAdd [EV01] is not equal to "1"
     If VA frm_cOverrideButtonClicked [EV01] is equal to "1"
          If FC Description [DL01] is equal to or empty <Blank>
               GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    FC Description [DL01] <- szAddressBookDescription [ALPH]
          End If
          If FC Description [DL01] is equal to or empty <Blank>
               If FC Address Number [AN8] is not equal to FC Ship To [SHAN]
                    GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                         FC Ship To [SHAN] -> mnAddressNumber [AN8]
                         FC Description [DL01] <- szAddressBookDescription [ALPH]
               Else
                    FC Description [DL01] = FC Description [DL01]
               End If
          End If
          //
          Call App:P4210 Form:W4210D Version:Undefined
               FC Address Number [AN8] <> mnSoldTo [AN8]
               FC Ship To [SHAN] <> mnShipTo [SHAN]
               FC Description [DL01] <> szSoldToName [ALPH]
               FC Description [DL01] <> szShipToName [ALPH]
               VA frm_cOverrideButtonClicked [EV01] -> cOverrideButtonClicked [EV01]
               VA frm_cCSSPrevRecordFound_EV01 [EV01] <> cCSSPrevRecordFound [EV01]
               VA frm_szFormTitle [CFGS] -> szFormTitle [CFGS]
               VA frm_mnSoldToShipToOverridden [URAB] <> mnSoldToShipToOverridden [URAB]
               VA frm_mnUserABNumber [AN8] -> mnUserAddress [AN8]
               VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
               FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
               VA frm_EV22_cCacheOn [EV22] -> cCacheOn [EV22]
               FI mnProcessID [PEID] -> mnProcessID [PEID]
               FI mnTransactionID [TCID] -> mnTransactionID [TCID]
          //
          If VA frm_mnSoldToShipToOverridden [URAB] is not equal to "4"
               // ---------------------------------------------------------------------------
               // trigger Begin Doc call
               // ---------------------------------------------------------------------------
               VA frm_EV17_Hdr_Work_File [EV17] = "0"
               // SAR 8955603 - Taxed Prices Enhancement for CSS
               VA frm_cUseTaxedPrices_UTP [UTP] = <Blank>
               //
               If VA frm_cCSSPrevRecordFound_EV01 [EV01] is equal to "2"
                    // ---------------------------------------------------------------------------
                    // reload grid from shopping cart
                    // ---------------------------------------------------------------------------
                    Delete Grid Row(FC Grid,  <All Rows>)
                    //
                    VA frm_LNID_Last_Line_Number [LNID] = "0"
                    VA frm_LNIX_Prev_WF_Line_Num [LNIX] = "0"
                    //
                    Press Button(FC PROCESS: Load Grid From Cache)
               End If
          End If
          //
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               FC Description [DL01] <- szAddressBookDescription [ALPH]
          Set Control Text(FC st_SoldToName, FC ADDRESS NUMBER)
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               FC Ship To [SHAN] -> mnAddressNumber [AN8]
               FC Description [DL01] <- szAddressBookDescription [ALPH]
          Set Control Text(FC st_ShipToName, FC SHIP TO)
          //
          VA frm_cOverrideButtonClicked [EV01] = "0"
     Else
          If PO cOverrideSoldToShipTo [EV01] is greater than <Blank>
               //
               If VA frm_mnSoldToShipToOverridden [URAB] is less than or equal to "0"
                    // ---------------------------------------------------------------------------
                    // Display Override form
                    // ---------------------------------------------------------------------------
                    //
                    // to do set control text
                    GetDefaultSoldToShipTo(B4207200.GetDefaultSoldToShipTo)
                         VA frm_mnUserABNumber [AN8] -> mnUserABNum [AN8]
                         PO cDefaultShipToBranch [EV02] -> cPODefaultBranch [EV01]
                         PO cDefaultUserID [EV01] -> cPODefaultUser [EV01]
                         FC Address Number [AN8] <- mnSoldTo [AN8]
                         FC Ship To [SHAN] <- mnShipTo [SHAN]
                         FC Business Unit [MCU] <- szBranch [MCU]
                         FC Order Company [KCOO] <- szCompany [KCOO]
                         FC Description [DL01] <- szSoldToDescription [ALPH]
                         FC Description [DL01] <- szShipToDescription [ALPH]
                         VA evt_szErrorID [DTAI] <- szErrorMessageID [DTAI]
                         PO szDefaultBranchPlant [MCU] -> szPOHeaderBranch [MCU]
                    //
                    If VA evt_szErrorID [DTAI] is greater than <Blank>
                         Set Control Error(HC &OK, VA evt_szErrorID)
                         Stop Processing
                    End If
                    //
                    Call App:P4210 Form:W4210D Version:Undefined
                         FC Address Number [AN8] <> mnSoldTo [AN8]
                         FC Ship To [SHAN] <> mnShipTo [SHAN]
                         FC Description [DL01] <> szSoldToName [ALPH]
                         FC Description [DL01] <> szShipToName [ALPH]
                         VA frm_cOverrideButtonClicked [EV01] -> cOverrideButtonClicked [EV01]
                         VA frm_cCSSPrevRecordFound_EV01 [EV01] -> cCSSPrevRecordFound [EV01]
                         VA frm_szFormTitle [CFGS] -> szFormTitle [CFGS]
                         VA frm_mnSoldToShipToOverridden [URAB] <> mnSoldToShipToOverridden [URAB]
                         VA frm_mnUserABNumber [AN8] -> mnUserAddress [AN8]
                         VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
                         FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                         VA frm_EV22_cCacheOn [EV22] -> cCacheOn [EV22]
                         FI mnProcessID [PEID] -> mnProcessID [PEID]
                         FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                         FC Address Number [AN8] -> mnAddressNumber [AN8]
                         FC Description [DL01] <- szAddressBookDescription [ALPH]
                    Set Control Text(FC st_SoldToName, FC ADDRESS NUMBER)
                    GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                         FC Ship To [SHAN] -> mnAddressNumber [AN8]
                         FC Description [DL01] <- szAddressBookDescription [ALPH]
                    Set Control Text(FC st_ShipToName, FC SHIP TO)
                    //
                    // SAR 8955603 - If sold to or ship to customer has been overridden (modified)
                    // and if “Enable Taxed Prices” system constant is on, "CSS Use Taxed Prices"
                    // should be checked if customer's Use Taxed Prices Billing constant is ON
                    If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
                         If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
                              VA frm_mnCustAddNumber_AN8 [AN8] = FC Address Number [AN8]
                              VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
                         End If
                         If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
                              VA frm_mnCustAddNumber_AN8 [AN8] = FC Ship To [SHAN]
                              VA frm_szOrderCompany_CO [CO] = FC Order Company [KCOO]
                         End If
                         Press Button(FC Get UTP From Tag Customer Master)
                    End If
                    //
               Else
                    // ---------------------------------------------------------------------------
                    // by pass calling the override form, get alpha names
                    // ---------------------------------------------------------------------------
                    GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                         FC Address Number [AN8] -> mnAddressNumber [AN8]
                         FC Description [DL01] <- szAddressBookDescription [ALPH]
                    If FC Address Number [AN8] is not equal to FC Ship To [SHAN]
                         GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
                              FC Ship To [SHAN] -> mnAddressNumber [AN8]
                              FC Description [DL01] <- szAddressBookDescription [ALPH]
                    Else
                         FC Description [DL01] = FC Description [DL01]
                    End If
               End If
          End If
          // ---------------------------------------------------------------------------
          // load from shopping cart
          // ---------------------------------------------------------------------------
          If VA frm_cCSSPrevRecordFound_EV01 [EV01] is equal to "1"
               CopySOInfoToWorkFiles(B4200690.CopySOInfoToWorkFiles)
                    VA frm_CTID_Computer_ID [CTID] <> szComputerid [CTID]
                    FI Jobnumber [JOBS] <> mnJobnumber [JOBS]
                    "8" -> cSourceofdata [EV02]
                    "2" -> cMode [EV03]
                    VA frm_EV22_cCacheOn [EV22] -> cWriteToWorkFileOrCache [EV05]
          End If
     End If
End If
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC RequestedDate Changed
Event: Button Clicked
Event GUID: 5f79fbf0-2496-4c68-bce9-e05244004fdc
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cShipmentNumExist [EV01]
----------------------------------------
// 
// sar 6997307 - Logic moved from "GRIDCOL Requested Dated  - Col Exited &
// Changed -Inline".  Now we can execute this logic from multiple places, 
// whereever Requested Date is changed.
// 
// sar 6867625
VA evt_cShipmentNumExist [EV01] = "N"
// 
// SAR 3661728 - Begin ADD
// Added an IF condition so that the Quantities will only be cleared
// when the Availability P-Opt is turned on.
// SAR 8670789 - Do not blank out the qty here. This will be blanked out in
// BSFN on the basis if availability recheck is required or not. 
// SAR 3407762 - Begin/End DELETE
! GB Sched Pick [PDDJ] = <NULL>
// SAR 3407762 - Begin/End ADD
// 3624628 Add preference logic to not blank dates in update mode if PO not
// set
// 
If SV Form_ Mode is not equal to CO UPDATE_MODE
     GC Sched Pick [PDDJ] = <NULL>
     GC Promised Delivery [RSDJ] = <NULL>
     GC Promised Ship [PPDJ] = <NULL>
Else
     If PO cUsePrefProcess [EV22] is equal to "1"
          // SAR 4586459 Get Pref Values and Blank Dates based on R40400 Processing
          // Option
          RetrieveR40400ProcessingOptions(B4002660.RetrieveR40400ProcessingOptions) [Include in Transaction]
               PO szP40400Vers [VL06] -> szVersionID [VL06]
               UNDEFINED <> cPaymentTerms [EV01]
               UNDEFINED <> cPricingUnitOfMeasure [EV02]
               UNDEFINED <> cRevenueCostCenter [EV03]
               UNDEFINED <> cEndUse [EV04]
               UNDEFINED <> cProductAllocation [EV05]
               UNDEFINED <> cGradeAndPotency [EV06]
               VA frm_cDeliveryDatePrefOn [EV01] <- cDeliveryDate [EV07]
               UNDEFINED <> cLineOfBusiness [EV08]
               UNDEFINED <> cPriceCode1 [EV09]
               UNDEFINED <> cPriceCode2 [EV10]
               UNDEFINED <> cPriceCode3 [EV11]
               VA frm_cOrderPrepPrefOn [EV02] <- cOrderPrepDays [EV12]
               UNDEFINED <> cPriceAdjustSchedule [EV13]
               UNDEFINED <> cNextOrderStatus [EV14]
               UNDEFINED <> cSalesCommission [EV15]
               UNDEFINED <> cCustomerCurrency [EV16]
               UNDEFINED <> cPaymentTermsBranch [EV17]
               UNDEFINED <> cPricingUOMBranch [EV18]
               UNDEFINED <> cRevenueCostCenterBranch [EV19]
               UNDEFINED <> cProductAllocationBranch [EV20]
               UNDEFINED <> cMultiReceivingLocation [EV21]
               UNDEFINED <> cMultiShippingLocation [EV22]
          If VA frm_cDeliveryDatePrefOn [EV01] is equal to "1"
               GC Promised Delivery [RSDJ] = <NULL>
          End If
          If VA frm_cOrderPrepPrefOn [EV02] is equal to "1"
               GC Sched Pick [PDDJ] = <NULL>
               GC Promised Ship [PPDJ] = <NULL>
          End If
          // sar 6867625
          If BC Shipment Number (F4211.0) [SHPN] is not equal to "    "
               VA evt_cShipmentNumExist [EV01] = "Y"
          End If
     Else
          // SAR 5272890
          If PO cAvailabilityCheck [EV12] is not equal to <Blank>
          And PO cAvailabilityCheck [EV12] is not equal to <NULL>
               GC Sched Pick [PDDJ] = <NULL>
          End If
          // sar 6867625
          If BC Shipment Number (F4211.0) [SHPN] is not equal to "    "
               VA evt_cShipmentNumExist [EV01] = "Y"
          End If
     End If
End If
// 
// sar 6867625
If GC Request Date [DRQJ] is not equal to VA grd_PrevRequestedDate [DRQJ]
     If VA evt_cShipmentNumExist [EV01] is equal to "Y"
          GC Promised Delivery [RSDJ] = <NULL>
          GC Promised Ship [PPDJ] = <NULL>
          GC Sched Pick [PDDJ] = <NULL>
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC CFG Date Changed
Event: Button Clicked
Event GUID: f3a2e7b9-b6ff-4273-b860-d7e91288d75f
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSOBasedOnDate_EV01 [EV01]
----------------------------------------
// 
VA evt_cSOBasedOnDate_EV01 [EV01] = <Blank>
// 
// *** CALL B3202100 TO DETERMINE CFG BASED ON DATE ***
// 
F3290ConfiguratorCache(B3202100.F3290ConfiguratorCache)
     "1" -> cCacheActionCode [EV01]
     "1" -> cSuppressErrorMessage [SUPPS]
     "1" -> nIndexNumber [INT01]
     "2" -> nNumberOfKeys [INT01]
     GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
     GC Business Unit [MCU] -> szBranchPlant [MCU]
     VA evt_cSOBasedOnDate_EV01 [EV01] <- cSOBasedOnDate [SOBD]
// 
If VA evt_cSOBasedOnDate_EV01 [EV01] is equal to "3"
And VA grd_cCGFEffectDateChanged_EV01 [EV01] is equal to "1"
     // 
     VA grd_EV25_CfgItemProcessed [EV25] = "0"
     // 
Else
     // 
     If VA evt_cSOBasedOnDate_EV01 [EV01] is equal to "4"
          // 
          VA grd_EV25_CfgItemProcessed [EV25] = "0"
          // 
     End If
     // 
End If
// 
// *** RESET CFGEffectDateChanged_EV01 ***
// 
VA grd_cCGFEffectDateChanged_EV01 [EV01] = "0"
// 


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC BlanketReleaseSelect
Event: Button Clicked
Event GUID: 823f88cf-bd22-464d-a87f-6b89383c4856
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnBlanketShipTo_SHAN [SHAN]
evt_mnBlanketAddressNumber_AN8 [AN8]
evt_mnBlanketDeliverTo_DVAN [DVAN]
evt_szBlanketCustomerPO_VR01 [VR01]
evt_cKitAutoRelEditLineCalled [EV01]
----------------------------------------
//     Prevent unqualitfy lines enter BLANKET release
//
VA frm_cBlanketCalled_EV01 [EV01] = "0"
If GC Item Number [UITM] is greater than <Blank>
And GC Orig Ord Type [OCTO] is less than or equal to <Blank>
And GC Next Stat [NXTR] is not equal to "999"
     VA grd_mnSavedQuantityOrdered [UORG] = GC Quantity Ordered [UORG]
     //
     If PO cAutoBlanketRelease [EV24] is equal to ("1","3")
          VA evt_mnBlanketAddressNumber_AN8 [AN8] = FC Address Number [AN8]
     Else
          VA evt_mnBlanketAddressNumber_AN8 [AN8] = "0"
     End If
     If PO cAutoBlanketRelease [EV24] is equal to ("2","4")
          VA evt_mnBlanketShipTo_SHAN [SHAN] = GC Ship To Number [SHAN]
     Else
          VA evt_mnBlanketShipTo_SHAN [SHAN] = "0"
     End If
     If PO cAutoBlanketRelease [EV24] is equal to ("3","4","6")
          VA evt_szBlanketCustomerPO_VR01 [VR01] = FC Reference [VR01]
     Else
          VA evt_szBlanketCustomerPO_VR01 [VR01] = <Blank>
     End If
     If PO cAutoBlanketRelease [EV24] is equal to ("5","6")
          VA evt_mnBlanketDeliverTo_DVAN [DVAN] = GC Deliver To [DVAN]
     Else
          VA evt_mnBlanketDeliverTo_DVAN [DVAN] = "0"
     End If
     //
     // SAR 6607954
     // Copy grd_cWasBranchBlank_EV01 on original order line to form valuable so
     // that we can use it to determine if we should blank out the branch on order
     // lines updated/created from blanket release (e.g. activating sourcing for
     // the lines). If sourcing is done for the original line, then it should be
     // done for the lines updated/created from the blanket release.
     //
     VA frm_cWasBranchBlank_EV01 [EV01] = VA grd_cWasBranchBlank_EV01 [EV01]
     //
     // SAR 8955607 - Map Taxed Prices Fields
     // Bug 11904723- PMPN Enhancement-Map Production Number field
     Call App:P42216 Form:W42216A Version:Undefined
          VA evt_mnBlanketAddressNumber_AN8 [AN8] -> AddressNumber [AN8]
          GC Item Number [UITM] -> ItemNumber [UITM]
          GC UM  [UOM] -> UOM [UOM]
          FC Currency Code [CRCD] -> CurrencyCode [CRCD]
          FC Order Date [TRDJ] -> TransactionDate [TRDJ]
          FC Mode (F) [CRRM] -> CurrencyMode [CRRM]
          GC Original Order No [OORN] <> OriginalOrder [OORN]
          GC Orig Ord Type [OCTO] <> OriginalType [ODCT]
          GC OKCO- Doc Co (wf) [OKCO] <> OriginalCompany [OKCO]
          GC Original Line Number [OGNO] <> OriginalLine [OGNO]
          GC Quantity Ordered [UORG] <> TransactionQuantity [UORG]
          GC Unit Price [UPRC] <> UnitPrice [UPRC]
          GC Foreign Unit Price [FUP] <> ForeignUnitPrice [FUP]
          GC Adj. Schedule [ASN] <> szPriceAdjustmentSchedule [ASN]
          VA evt_mnBlanketAddressNumber_AN8 [AN8] -> mnSoldToAddressNumber [AN8]
          VA evt_mnBlanketShipTo_SHAN [SHAN] -> AddressNumberShipTo [SHAN]
          VA grd_PriceCode1 [UPC1] <- szPriceCode1 [UPC1]
          VA grd_PriceCode2 [UPC2] <- szPriceCode2 [UPC2]
          VA grd_PriceCode3 [UPC3] <- szPriceCode3 [UPC3]
          VA grd_cCalledFromP42216 [EV01] <- cCalledFromP42216 [EV01]
          VA evt_mnBlanketDeliverTo_DVAN [DVAN] -> mnAddressNumberDeliveredTo [DVAN]
          VA evt_szBlanketCustomerPO_VR01 [VR01] -> szCustomerPO [VR01]
          GC Sec UM [UOM2] -> szSecondaryUOM [UOM2]
          GC Secondary Qty Ordered [SQOR] <> mnSecondaryQuantity [SQOR]
          PO cAvailabilityCheck [EV12] -> cCheckAvailability [EV01]
          FC Order Number [DOCO] -> mnReleaseToOrderNumber [DOCO]
          FC Order Type [DCTO] -> szReleaseToOrderType [DCTO]
          FC Order Company [KCOO] -> szReleaseToCompany [KCOO]
          VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnRelaseToLineNumberXREF [LNIX]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
          GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
          GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
          GC Taxed Price Override Code [TPROV] <- cTaxedPriceOverrideCode [TPROV]
          GC Internal SO Tax Date [DTXJ] <- jdInternalSOTaxDate [DTXJ]
          GC Production Number [PMPN] -> szProduction_Number_F4211P [PMPN]
     // SAR 6607954
     // SAR 8720969 - We don't do commitment preference processing on kits
     If PO cCommitPreference [EV23] is equal to ("1","2")
     And VA frm_cWasBranchBlank_EV01 [EV01] is equal to "1"
     And VA frm_ACTI_Action_Code [ACTI] is equal to "A"
     And VA grd_STKT_Stocking_Type [STKT] is not equal to "K"
          GC Business Unit [MCU] = <Blank>
     End If
     //
     //   6390020 - End
     //
     // SAR 5713528
     If VA grd_mnSavedQuantityOrdered [UORG] is not equal to GC Quantity Ordered [UORG]
          GC Quantity Shipped [SOQS] = <Blank>
          GC Quantity Backordered [SOBK] = <Blank>
          GC Quantity Canceled [SOCN] = <Blank>
     End If
     //
     // SAR 4358721
     If GC PC 1 [UPC1] is equal to <Blank>
     Or GC PC 1 [UPC1] is equal to <NULL>
          GC PC 1 [UPC1] = VA grd_PriceCode1 [UPC1]
     End If
     If GC PC 2 [UPC2] is equal to <Blank>
     Or GC PC 2 [UPC2] is equal to <NULL>
          GC PC 2 [UPC2] = VA grd_PriceCode2 [UPC2]
     End If
     If GC PC 3 [UPC3] is equal to <Blank>
     Or GC PC 3 [UPC3] is equal to <NULL>
          GC PC 3 [UPC3] = VA grd_PriceCode3 [UPC3]
     End If
     //
     If GC Orig Ord Type [OCTO] is greater than <Blank>
          Disable Grid(FC Grid,  <Current Row>, GC UnitPrice)
          Disable Grid(FC Grid,  <Current Row>, GC ExtendedPrice)
          Disable Grid(FC Grid,  <Current Row>, GC ForeignUnit Price)
          Disable Grid(FC Grid,  <Current Row>, GC ForeignExtended Price)
          // SAR 8955603 - Disable newly added Taxed Prices Grid columns
          Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Unit TaxAmount)
          Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedTax Amount)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign ExtendedTax Amount)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign UnitTax Amount)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign ExtendedTax Amount)
          // Bug 11904723- PMPN Enhancement-Disable Production Number field
          Disable Grid(FC Grid, <Currently Selected Row>, GC Project MfgProduction Number)
          VA grd_cSuppressPNGenerate_EV01 [EV01] = "2"
          // SAR 7551008
          If VA grd_cCalledFromP42216 [EV01] is equal to "1"
               ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
                    GC Original Order No [OORN] -> szGenericString [DSC1]
                    VA frm_mnDOCO_OriginalOrderNo [DOCO] <- mnNumericValue [ITM]
               UpdatePendingReleaseBlanketWF(B4205310.UpdatePendingReleaseBlanketWF)
                    GC OKCO- Doc Co (wf) [OKCO] -> szKeyCompany [KCOO]
                    VA frm_mnDOCO_OriginalOrderNo [DOCO] -> mnOrderNumber [DOCO]
                    GC Orig Ord Type [OCTO] -> szOrderType [DCTO]
                    GC Original Line Number [OGNO] -> mnLineNumber [LNID]
                    FI mnProcessID [PEID] -> mnProcessID [PEID]
                    FI mnTransactionID [TCID] -> mnTransactionID [TCID]
                    VA frm_USER_User_ID [USER] -> szUserId [USER]
                    GC Quantity Ordered [UORG] -> mnReleaseQty [UORG]
                    GC UM  [UOM] -> szReleaseUOM_UOM [UOM]
                    GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                    GC Item Number [UITM] -> szIdentifier2ndItem [LITM]
               F42UI11UpdateSODInfo(B4201070.F42UI11UpdateSODInfo)
                    "2" -> cUpdateWorkFileOrCache [EV01]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNumberXREF [LNIX]
                    GC Quantity Ordered [UORG] -> mnLineNumber [LNID]
                    "2" -> cMode [EV01]
               VA grd_cEnableHCBlanketOrders [EV01] = "0"
               GC Blankets Exists [BLKT] = <NULL>
               //
               // SAR 8955607 - Taxed Prices Enhancement
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    //
                    // If Taxed Price Override Code is set by P42216, that means Taxed Blanket is
                    // selected. Zero out the Taxed or Non-Taxed Prices and set PROV or TPROV
                    // based on whether Taxed or Non-Taxed Blanket is selected in P42216.
                    //
                    If GC Taxed Price Override Code [TPROV] is equal to "1"
                         GC Price Over Cd [PROV] = "0"
                    Else
                         GC Price Over Cd [PROV] = "1"
                    End If
               Else
                    GC Price Over Cd [PROV] = "1"
               End If
               //
               Set Grid Row Bitmap(FC Grid,  <Currently Selected Row>,  <Blank/Clear>)
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                    //     Copy components from blanket released for original Kit line
                    //
                    SetFrmBlktReleaseALPH27(B4205100.SetFrmBlktReleaseALPH27)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "3" -> cValue [EV01]
                    SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "1" -> cValue [EV01]
                    SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
                         GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
                         "1" -> cValue [EV01]
                    If VA frm_cManualBlanketRelease_EV01 [EV01] is not equal to "1"
                         // 8955603 - Modify this Edit Line call to  map the newly added  Taxed prices
                         // and amounts grid columns
                         // Bug 11904723- PMPN Enhancement- Pass Project Mfg Production Number and
                         // Production Short Number
                         F4211FSEditLine(B4200310.F4211FSEditLine)
                              FI Jobnumber [JOBS] <> mnCMJobNo [JOBS]
                              VA grd_ACTI_ActionHidden [ACTI] -> cCMLineAction [ACTN]
                              VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
                              VA frm_EV22_cCacheOn [EV22] -> cCMWriteToWFFlag [EV03]
                              VA grd_EV18_UpdatedtoDetailWF [EV18] <> cCMRecdWrittenToWF [EV04]
                              VA frm_CTID_Computer_ID [CTID] <> szCMComputerID [CTID]
                              VA frm_ERRC_Error_Code [ERRC] <- cCMErrorConditions [ERRC]
                              FC Order Company [KCOO] <> szOrderCo [KCOO]
                              FC Order Number [DOCO] <> mnOrderNo [DOCO]
                              FC Order Type [DCTO] <> szOrderType [DCTO]
                              GC Line Number [LNID] <> mnLineNo [LNID]
                              GC Business Unit [MCU] <> szBusinessUnit [MCU]
                              GC Ship To Number [SHAN] <> mnShipToNo [SHAN]
                              GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                              GC Sched Pick [PDDJ] <> jdPromisedDate [PDDJ]
                              GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                              GC Promised Delivery [RSDJ] <> jdPromisedDlvryDate [RSDJ]
                              GC Item Number [UITM] <> szItemNo [UITM]
                              GC Location  [LOCN] <> szLocation [LOCN]
                              GC Lot Serial Number [LOTN] <> szLotNo [LOTN]
                              GC Description  [DSC1] <> szDescription1 [DSC1]
                              GC Description Line 2 [DSC2] <> szDescription2 [DSC2]
                              GC Ln Ty [LNTY] <> szLineType [LNTY]
                              GC Last Stat [LTTR] <> szLastStatus [LTTR]
                              GC Next Stat [NXTR] <> szNextStatus [NXTR]
                              GC Quantity Ordered [UORG] <> mnQtyOrdered [UORG]
                              GC Quantity Shipped [SOQS] <> mnQtyShipped [SOQS]
                              GC Quantity Backordered [SOBK] <> mnQtyBackordered [SOBK]
                              GC Quantity Canceled [SOCN] <> mnQtyCanceled [SOCN]
                              GC Unit Price [UPRC] <> mnUnitPrice [UPRC]
                              GC Extended Price [AEXP] <> mnExtendedPrice [AEXP]
                              GC Unit Cost [UNCS] <> mnUnitCost [UNCS]
                              GC Extended Cost [ECST] <> mnExtendedCost [ECST]
                              GC Print Message [INMG] <> szPrintMesg [INMG]
                              GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
                              GC Adj. Schedule [ASN] <> szAdjustmentSchedule [ASN]
                              GC Taxable  [TAX1] <> cSalesTaxableYN [TAX1]
                              GC Associated Text [ATXT] <> cAssociatedText [ATXT]
                              GC UM  [UOM] <> szTransactionUOM [UOM]
                              GC PR UM [UOM4] <> szPricingUOM [UOM4]
                              GC Unit Weight [ITWT] <> mnItemWeight [ITWT]
                              GC Wt U/M [WTUM] <> szWeightUOM [WTUM]
                              GC Foreign Unit Price [FUP] <> mnForeignUnitPrice [FUP]
                              GC Foreign Extended Price [FEA] <> mnForeignExtPrice [FEA]
                              GC Foreign Unit Cost [FUC] <> mnForeignUnitCost [FUC]
                              GC Foreign Extended Cost [FEC] <> mnForeignExtCost [FEC]
                              GC CLVL-PC Lev (wf) [CLVL] <> szPricingCategoryLevel [CLVL]
                              VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnCMLineNo [XLIN]
                              "EP4210" -> szCMProgramID [JPID]
                              VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
                              GC Primary Supplier [VEND] <> mnSupplierNo [VEND]
                              GC Related Item No [RLIT] <> szRelatedKitItemNo [RLIT]
                              GC Kit Master Line No [KTLN] <> mnKitMasterLineNo [KTLN]
                              GC Kit Cpnt Line No [CPNT] <> mnComponentLineNo [CPNT]
                              GC Related Kit Cpnt [RKIT] <> mnRelatedKitComponent [RKIT]
                              GC Price Over Cd [PROV] <> cOverridePrice [PROV]
                              VA grd_CSTO_Cost_Over [CSTO] <> cOverrideCost [CSTO]
                              VA frm_USER_User_ID [USER] <> szUserID [USER]
                              VA frm_UPDJ_System_Date [UPDJ] <> jdDateUpdated [UPMJ]
                              FC OTOT: Order Total Display [TOT1] <> mnWKOrderTotal [OTOT]
                              FC FAP-Foreign Total Display [TOT2] <> mnWKForeignOrderTotal [FAP]
                              VA frm_TOTC_Total_Cost [TOTC] <> mnWKTotalCost [TOTC]
                              VA frm_FCST_Foreign_Total_Cost [FCST] <> mnWKForeignTotalCost [FCST]
                              VA grd_BlanketOrdersFound_EV02 [EV02] <- cWKProcessingType [EV05]
                              GC Source of Data [EV17] -> cWKSourceOfData [EV06]
                              PO cAvailabilityCheck [EV12] -> cWKCheckAvailability [EV07]
                              VA frm_LastLineNumOnAsynch_LNIX [LNIX] <> mnLastLineNoAssigned [LNIX]
                              VA grd_STKT_Stocking_Type [STKT] <> cStockingType [STKT]
                              GC OKCO- Doc Co (wf) [OKCO] <> szOriginalOrderKeyCo [OKCO]
                              GC Original Order No [OORN] <> szOriginalOrderNo [OORN]
                              GC Orig Ord Type [OCTO] <> szOriginalOrderType [OCTO]
                              GC Original Line Number [OGNO] <> mnOriginalOrderLineNo [OGNO]
                              GC Method of Price Calculation [PMTH] <> cParentItmMethdOfPriceCalcn [PMTH]
                              GC Cost Rule [PRP5] <> szLandedCost [PRP5]
                              VA grd_MATH01_SuppressProcess [MATH01] <> mnWKSuppressProcess [MATH01]
                              GC Short Item No [ITM] <> mnShortItemNo [ITM]
                              VA frm_MATH01_Related_Proc_Flag [MATH01] <> mnWKRelatedOrderProcess [MATH02]
                              VA grd_SODLineNumber [LNID] -> mnSODLineNo [EDLN]
                              VA grd_AREV_Rev_Lev [AREV] <> mnPriceAdjRevLevel [AREV]
                              GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlags [ALPH]
                              VA grd_SODOrderNumber [DOCO] -> mnSODDocNo [EDOC]
                              VA grd_SODOrderType [DCTO] -> szSODDocType [EDCT]
                              VA grd_SODOrderCompany [KCOO] -> szSODOrderCo [EKCO]
                              FC Business Unit 2 [MCU2] <> szTransferOrderToBranch [TMCU]
                              VA grd_DETD_Detached_Adjustment [DETD] <> mnDomesticDetachedAdj [DETD]
                              VA grd_DETF_Foreign_Detached_Adj [DETF] <> mnForeignDetachedAdj [DETF]
                              FC Order Number [DOC2] <> mnSODWFLineNo [DOC]
                              FC Order Type [DCIN] <> szGeneric2CharString [DCT]
                              FC Exchange Rate (Divisor) [CRRD] <> mnTOEPOExchangeRate [CRRD]
                              FC To Currency Code [CRDC] <> szTOEPOCurrencyCode [CRCE]
                              GC Header Business Unit [EMCU] <> szF4201BranchPlant [EMCU]
                              GC Price Effective Date [PEFJ] <> jdPriceEffectiveDate [PEFJ]
                              VA frm_mnWOLineNo_LNIX [LNIX] <- mnWOWFLineNo [LNIX]
                              VA grd_LINN_LineNbrIncrement [LINN] -> mnLineNoIncrement [LINN]
                              VA grd_SLNE_LineNumber [SLNE] -> mnParentWFLineNo [SLNE]
                              VA grd_PSR_Product_Src_Agreements [PSR] <> szProductSource [PSR]
                              VA grd_PSRY_Src_Type_Agreements [PSRY] <> szProductSourceType [PSRY]
                              VA grd_SEQ_Disply_Seq_Agreements [SEQ] <> mnSequenceNumber [SEQ]
                              GC Agreement Number [DMCT] <> szAgreementNumber [DMCT]
                              GC Supp No [DMCS] <> mnAgreementSupplement [DMCS]
                              VA grd_MATH02_Num_Agreements [MATH02] <- mnAgreementsFound [AFND]
                              GC Mod Trn [MOT] <> szModeOfTransport [MOT]
                              GC Duty Sts [DTYS] <> szDutyStatus [DTYS]
                              GC Line of Business [LOB] <> szLineofBusiness [LOB]
                              GC Promised Ship [PPDJ] <> jdPromisedShip [LOAD]
                              GC End Use [EUSE] <> szEndUse [EUSE]
                              GC PC 1 [UPC1] <> szPriceCode1 [UPC1]
                              GC PC 2 [UPC2] <> szPriceCode2 [UPC2]
                              GC PC 3 [UPC3] <> szPriceCode3 [UPC3]
                              GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                              VA grd_szRelatedCompany_RKCO [RKCO] <> szCompanyKeyRelated [RKCO]
                              VA grd_szRelatedOrderNumber_RORN [RORN] <> szRelatedPoSoNumber [RORN]
                              VA grd_szRelatedOrderType_RCTO [RCTO] <> szRelatedOrderType [RCTO]
                              VA grd_szRelatedLineNumber_RLLN [RLLN] <> mnRelatedPoSoLineNo [RLLN]
                              GC % Profit Margin [PRMG] <> mnProfitMargin [PRMG]
                              GC Quantity Available [QAVAL] <> mnQuantityAvailable [QAVAL]
                              VA frm_mnCreditJobNum_JOBS [JOBS] <> mnSODRelatedJobNumber [MATH10]
                              GC Carrier Number [CARS] <> mnCarrier [CARS]
                              GC Revision Reason [RFRV] <> szGenericString2_DL02 [DL02]
                              VA frm_RelatedJobNoForTransfer [MATH02] <- mnGenericMathNumeric2_MATH02 [MATH02]
                              GC Unit Volume [ITVL] <> mnItemVolume_ITVL [ITVL]
                              GC Vol U/M [VLUM] <> szVolumeUOM_VLUM [VLUM]
                              GC Header Business Unit [EMCU] <> szRevenueBusinessUnit [EMCU]
                              GC Reference  [VR01] <> szCustomerPO_VR01 [VR01]
                              FI mnProcessID [PEID] <> mnProcessID [PEID]
                              FI mnTransactionID [TCID] <> mnTransactionID [TCID]
                              VA grd_cPaymentTermsOverride_PMTO [PMTO] <> cPaymentTermsOverride [PMTO]
                              GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
                              GC Release Number [RLNU] -> szReleaseNumber [RLNU]
                              GC Scheduled Pick Time [PDTT] <> mnPromisedPickTime [PDTT]
                              GC Scheduled Ship Time [PMDT] <> mnScheduledShipmnentTime [PMDT]
                              VA grd_szPortOfEntryExit_POE [POE] <> szPortOfEntryExit [POE]
                              VA grd_szDetailLineBSC [BSC] <- szBuyingSegmentCode [BSC]
                              VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
                              GC Secondary Qty Ordered [SQOR] <> mnDualQuantity [SQOR]
                              GC Sec UM [UOM2] <> szDualUOM [UOM2]
                              GC Matrix Control Line Number [MCLN] <> mnMatrixControlLineNo [MCLN]
                              VA grd_szPromotionID_PMTN [PMTN] <> szPromotionID [PMTN]
                              GC Project Number [PRJM] -> mnProjectNumber [PRJM]
                              VA grd_mnOverForBasePrice_OVFBPRC [OVFBPRC] <> mnOverrideForeignBasePrice [OVFBPRC]
                              VA grd_mnOverrideBasePrice_OVBPRC [OVBPRC] <> mnOverrideBasePrice [OVBPRC]
                              VA grd_mnListPrice_LPRC [LPRC] <> mnListPrice [LPRC]
                              VA grd_mnListPriceForeign_FPRC [FPRC] <> mnForeignListPrice [FPRC]
                              VA grd_cItemCrossDockFlagYN_XDCK [XDCK] <- cCrossDockFlagYN [XDCK]
                              GC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
                              VA grd_szListPriceUoM_APUM [APUM] <> szListPriceUoM [APUM]
                              FI mnDescTaskNumber [DOCO] -> mnDescTaskOrderNumber [DOCO]
                              FI szDescTaskType [DCTO] -> szDescTaskOrderType [DCTO]
                              GC Promised Del  Time [RSDT] <> mnPromisedDeliveryTime [RSDT]
                              GC Kit Identifier  [KITID] <> mnKitIdentifier [KITID]
                              GC Kit Component Dirty Flag [KITDIRTY] <> cKitComponentDirtyFlag [KITDIRTY]
                              "1" -> cKitProcessingRequired [EV11]
                              VA grd_LINN_From_Line_Number [LINN] <> mnKitFromLineNumber [LINN]
                              VA grd_LIN_Through_Line_Number [LIN] <> mnKitThruLineNumber [LIN]
                              GC Taxed Unit Price [TUPRC] <> mnTaxedUnitPrice [TUPRC]
                              GC Taxed Extended Price [TAEXP] <> mnTaxedExtendedPrice [TAEXP]
                              GC Unit Tax Amount [UTA] <> mnUnitTaxAmount [UTA]
                              GC Extended Tax Amount [ETA] <> mnExtendedTaxAmount [ETA]
                              GC Foreign Taxed Unit Price [TFUP] <> mnForeignTaxedUnitPrice [TFUP]
                              GC Foreign Taxed Extended Price [TFEA] <> mnForeignTaxedExtendedPrice [TFEA]
                              GC Foreign Unit Tax Amount [FUTA] <> mnForeignUnitTaxAmount [FUTA]
                              GC Foreign Extended Tax Amount [FETA] <> mnForeignExtendedTaxAmount [FETA]
                              GC Taxed Price Override Code [TPROV] <> cTaxedPriceOverrideCode [TPROV]
                              GC Internal SO Tax Date [DTXJ] <> jdInternalSOTaxDate [DTXJ]
                              GC Production Number [PMPN] <> szProjectManufacturingProd [PMPN]
                              GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
                              VA grd_cSuppressPNGenerate_EV01 [EV01] <> cSuppressProdNoGenerate [EV01]
                              VA grd_cPMPNEnabled_PNYN [PNYN] <> cProductionNumberControlled [PNYN]
                         //
                         // SAR 8955607 - Set the flag to indicate Edit Line is already called for Kit
                         // Parent when it was automatically released.
                         VA evt_cKitAutoRelEditLineCalled [EV01] = "1"
                         //
                    End If
               End If
          End If
          // SAR 5946188
          If VA grd_BlanketOrdersFound_EV02 [EV02] is equal to "2"
               VA frm_EV03_RelieveBlanketOrder [EV03] = "1"
               ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
                    GC Original Order No [OORN] -> szGenericString [DSC1]
                    VA frm_mnDOCO_OriginalOrderNo [DOCO] <- mnNumericValue [ITM]
                    UNDEFINED <> cErrorCode [ERRC]
               ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
                    GC CLVL-PC Lev (wf) [CLVL] -> szGenericString [DSC1]
                    VA grd_AREV_Rev_Lev [AREV] <- mnNumericValue [ITM]
                    UNDEFINED <> cErrorCode [ERRC]
               If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
                    VA grd_AREV_Rev_Lev [AREV] = [VA grd_AREV_Rev_Lev [AREV]]+1
                    ConvertNumericToString(B0000045.ConvertNumericToString)
                         VA grd_AREV_Rev_Lev [AREV] -> mnMathNumeric01 [MATH01]
                         GC CLVL-PC Lev (wf) [CLVL] <- szVideoConstant30A [VC30A]
               End If
               F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
                    "1" <> cActionCode [ACTN]
                    "1" -> cFromPrimaryFile [EV01]
                    UNDEFINED <> szComputerIdPrimary [CTID]
                    UNDEFINED <> mnLineNoPrimaryWF [XLIN]
                    VA frm_mnDOCO_OriginalOrderNo [DOCO] -> mnDocNoPrimary [DOCO]
                    GC Orig Ord Type [OCTO] -> szDocTypePrimary [DCTO]
                    GC OKCO- Doc Co (wf) [OKCO] -> szKeyCoPrimary [KCOO]
                    GC Original Line Number [OGNO] -> mnLineNoPrimaryFile [LNID]
                    UNDEFINED <> cSumPrimaryFile [EV02]
                    UNDEFINED <> mnUnitPricePrimary [UPRC]
                    UNDEFINED <> mnForeignPricePrimary [FUP]
                    "2" -> cToSecondaryFile [EV03]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerIdSecondary [CTID]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnLineNoSecondaryWF [XLIN]
                    FC Order Type [DCTO] -> szDocTypeSecondary [OCTO]
                    FC Order Company [KCOO] -> szKeyCoSecondary [OKCO]
                    GC Line Number [LNID] -> mnLineNoSecondaryFile [OGNO]
                    UNDEFINED <> cSumSecondaryFile [EV04]
                    UNDEFINED <> mnUnitPriceSecondary [UPRC]
                    UNDEFINED <> mnForeignPriceSecondary [FUP]
                    UNDEFINED <> cSuppressErrors [EV05]
                    VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMessageId [DTAI]
                    FC Order Number [DOCO] -> mnDocNoSecondary [DOCO]
                    UNDEFINED <> mnJobNoPrimary [JOBS]
                    FI Jobnumber [JOBS] -> mnJobNoSecondary [JOBS]
                    UNDEFINED <> mnAdjRevisionLvlPrimary [AREV]
                    VA grd_AREV_Rev_Lev [AREV] -> mnAdjRevisionLvlSecondary [AREV]
                    UNDEFINED <> cNumPrimaryKeys [EV06]
                    UNDEFINED <> mnSumDetachedPrimary [UPR2]
                    UNDEFINED <> mnFrgnSumDetachedPrimary [FUP]
                    UNDEFINED <> cNumSecondaryKeys [EV07]
                    UNDEFINED <> mnSumDetachedSecondary [UPR3]
                    UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
                    UNDEFINED <> mnUnitCostPrimary [UNCS]
                    UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
                    UNDEFINED <> mnUnitCostSecondary [UNCS]
                    UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
                    UNDEFINED <> szProgramId [PID]
                    UNDEFINED <> cAdjustmentTypePrimary [OLVL]
                    UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
                    UNDEFINED <> cProcessingMode [EV01]
                    FI mnProcessID [PEID] <> mnProcessIDPrimary [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionIDPrimary [TCID]
                    FI mnProcessID [PEID] <> mnProcessIDSecondary [PEID]
                    FI mnTransactionID [TCID] <> mnTransactionIDSecondary [TCID]
                    UNDEFINED <> szOrderSuffixPrimary [SFXO]
                    UNDEFINED <> szOrderSuffixSecondary [SFXO]
                    UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
                    UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
                    UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
                    UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
                    UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
                    UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
                    UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
                    UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
                    UNDEFINED <> mnTierPrimary [TIER]
                    UNDEFINED <> mnTierSecondary [TIER]
                    UNDEFINED <> cIncludeOrExcludeCode [INX]
                    UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
                    UNDEFINED <> szCurrencyCodeFrom [CRCD]
                    UNDEFINED <> szCurrencyCodeTo [CRDC]
                    UNDEFINED <> mnTriangulationRateFrom [TRR1]
                    UNDEFINED <> mnTriangulationRateTo [TRR2]
                    UNDEFINED <> cCurrencyConversionMethod [CRCM]
                    UNDEFINED <> mnCurrencyConverRate [CRR]
          End If
     End If
     //
     // ---------------------------------------------------------------------------
     // --
     // SAR 3096360, SuppressBase Price and Advance Pricing
     // Adj for the Blanket Order
     // ---------------------------------------------------------------------------
     // --
     //
     If GC Unit Price [UPRC] is not equal to VA grd_UCSTR_Saved_Unit_Price [UCSTR]
          // SAR 5953388 - Use Set functions
          SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               "1" -> cValue [EV01]
               UNDEFINED <> cErrorCode [ERRC]
          SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               "1" -> cValue [EV01]
               UNDEFINED <> cErrorCode [ERRC]
     End If
     // SAR 5760156
     If GC Original Order No [OORN] is greater than <Blank>
          //
          // SAR 8955607 - Taxed Prices Enhancement
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               //
               // If the Edit Line is already called and Taxed and Non-Taxed prices are
               // already calculated based on the prices from Blanket Orders when Kit is auto
               // released, do not zero out the taxed or non-taxed prices.
               //
               If VA evt_cKitAutoRelEditLineCalled [EV01] is not equal to "1"
                    //
                    // If Taxed Price Override Code is set by P42216, that means Taxed Blanket is
                    // selected. Zero out the Taxed or Non-Taxed Prices and set PROV or TPROV
                    // based on whether Taxed or Non-Taxed Blanket is selected in P42216.
                    //
                    If GC Taxed Price Override Code [TPROV] is equal to "1"
                         GC Price Over Cd [PROV] = "0"
                    Else
                         GC Price Over Cd [PROV] = "1"
                    End If
               End If
          Else
               GC Price Over Cd [PROV] = "1"
          End If
          //
     End If
     //
     VA frm_cBlanketCalled_EV01 [EV01] = "1"
     //
     Press Button(FC PROCESS: Load Grid From Cache)
     //
     VA frm_cBlanketCalled_EV01 [EV01] = "0"
     //
     // End of SAR 3096360
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Set Price History Cache Flag
Event: Button Clicked
Event GUID: 6f229ad1-d82f-458f-b9bc-e2c4ff280584
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cPriceHisDatamapExist_EV01 [EV01]
----------------------------------------
PricingHistoryDatamapExist(B4504590.PricingHistoryDatamapExist)
     FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     VA evt_cPriceHisDatamapExist_EV01 [EV01] <- cPriceHistoryDatamapExist [EV01]
If VA evt_cPriceHisDatamapExist_EV01 [EV01] is not equal to "1"
     CreatePricingHistoryDatamap(B4504590.CreatePricingHistoryDatamap)
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
     SetPricingHistoryCacheFlag(B4504590.SetPricingHistoryCacheFlag)
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_EV22_cCacheOn [EV22] -> cPriceHistoryCacheFlag [EV01]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Collection
Event: Control Exited/Changed-Asynch
Event GUID: 05406fce-4986-44ae-90f2-3f82a9fe3994
=============================================
//
Clear Control Error(FC Collection [C9COLL])
Clear Control Error(FC SeasonCode [C9SEAC])
Clear Control Error(FC Season Year [C9SEAY])
If VA frm_cCollDescSetInVA_EV01 [EV01] is equal to "1"
     VA frm_cCollDescSetInVA_EV01 [EV01] = <Blank>
Else
     FC Description [DL01] = <Blank>
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Collection
Event: Visual Assist Button Clicked
Event GUID: 1aaf72be-51ea-45dd-bb1c-3932bb977da0
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szPrevCollection_C9COLL [C9COLL]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
VA evt_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
Suppress Default Visual Assist Form
Call App:PCW15 Form:WCW15A Version:Undefined
     FC Collection [C9COLL] <> szC9COLL-Collection [C9COLL]
     FC SeasonCode [C9SEAC] <> szC9SEAC-SeasonCode [C9SEAC]
     FC Season Year [C9SEAY] <> szC9SEAY-SeasonYear [C9SEAY]
     FC Price Reference Date [C9PRDJ] <> jdDatePriceReferenceJulian [C9PRDJ]
     FC Description [DL01] <> szCollectionDescription [C9DSC1]
If VA evt_szPrevCollection_C9COLL [C9COLL] is not equal to FC Collection [C9COLL]
     VA frm_cCollDescSetInVA_EV01 [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC SeasonCode
Event: Control Exited/Changed-Asynch
Event GUID: 4ecbcacb-9b39-403c-bd71-757abf997ccd
=============================================
Clear Control Error(FC Collection [C9COLL])
Clear Control Error(FC SeasonCode [C9SEAC])
Clear Control Error(FC Season Year [C9SEAY])


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Season Year
Event: Control Exited/Changed-Asynch
Event GUID: 67998c6d-d792-448a-ac08-8dd0995c2267
=============================================
Clear Control Error(FC Collection [C9COLL])
Clear Control Error(FC SeasonCode [C9SEAC])
Clear Control Error(FC Season Year [C9SEAY])


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC ValidateCollection
Event: Button Clicked
Event GUID: 1f50e99b-12af-4626-bda8-73273f953073
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cErrorCode_ERRC [ERRC]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
// Mode = 1 - Called from Post Dialog is Initialized
// Mode = 2 - Called from Set focus on Grid
//
If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "1"
     If VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
          //
          // If coming through SO Header first, then just copy from Form Interconnect
          // fields and set the flag to indicate that the collection validation is done
          // so that these are not validated again during Set Focus on Grid event.
          // Because, these are either non-blank and already validated in Header
          // Revisions or Blank and disabled in SO Detail Revisions.
          //
          FC Collection [C9COLL] = FI szCollection [C9COLL]
          FC SeasonCode [C9SEAC] = FI szSeasonCode [C9SEAC]
          FC Season Year [C9SEAY] = FI szSeasonYear [C9SEAY]
          FC Description [DL01] = FI szCollectionDescription [C9DSC1]
          FC Price Reference Date [C9PRDJ] = FI jdCollectionPriceEffDate [C9PRDJ]
          VA frm_cCollValidationDone_EV01 [EV01] = "1"
     Else
          If SV Form_ Mode is equal to CO ADD_MODE
               //
               // In Add mode, default from Processing option and validate against
               // FCW06, if one of the three processing option values are non-blank.
               //
               If PO szCollection [C9COLL] is not equal to <Blank>
               Or PO szSeasonCode [C9SEAC] is not equal to <Blank>
               Or PO szSeasonYear [C9SEAY] is not equal to <Blank>
                    FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                         PO szCollection [C9COLL] = TK Collection [C9COLL]
                         PO szSeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                         PO szSeasonYear [C9SEAY] = TK Season Year [C9SEAY]
                         VA frm_szCollectionDesc_C9DSC1 [C9DSC1] <- TK Description Line 1 [C9DSC1]
                         VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
                    If SV File_IO_Status is equal to CO SUCCESS
                         FC Collection [C9COLL] = PO szCollection [C9COLL]
                         FC SeasonCode [C9SEAC] = PO szSeasonCode [C9SEAC]
                         FC Season Year [C9SEAY] = PO szSeasonYear [C9SEAY]
                         FC Price Reference Date [C9PRDJ] = VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                         FC Description [DL01] = VA frm_szCollectionDesc_C9DSC1 [C9DSC1]
                         //
                         // If the Collection Price effective date is blank, default today's date
                         If FC Price Reference Date [C9PRDJ] is equal to or empty Null Date
                              FC Price Reference Date [C9PRDJ] = SL DateToday
                         End If
                         //
                    End If
               End If
          Else
               //
               // Retrieve the Collection from F41F201T (SO Header Apparel Tag File)
               //
               If SV Form_ Mode is equal to CO COPY_MODE
                    //
                    // Retrieve based on Original Sales Order information for Copy mode
                    ApparelProcessF41F201T(B41F0020.ApparelProcessF41F201T)
                         BC Document (Order No, Invoice, etc.) (F4201.0) [DOCO] -> mnOrderNumber [DOCO]
                         BC Order Type (F4201.0) [DCTO] -> szOrderType [DCTO]
                         BC Order Company (Order Number) (F4201.0) [KCOO] -> szCompany [KCOO]
                         FC Collection [C9COLL] <- szCollection [C9COLL]
                         FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
                         FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
                         VA evt_cErrorCode_ERRC [ERRC] <- cError [EV01]
                         "2" -> cActionCode [EV01]
                         FC Price Reference Date [C9PRDJ] <- jdDatePriceReference [C9PRDJ]
                         FC Description [DL01] <- szCollectionDescription [C9DSC1]
               Else
                    //
                    // Retrieve based on current Sales Order information for Update mode
                    ApparelProcessF41F201T(B41F0020.ApparelProcessF41F201T)
                         FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         FC Order Company [KCOO] -> szCompany [KCOO]
                         FC Collection [C9COLL] <- szCollection [C9COLL]
                         FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
                         FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
                         VA evt_cErrorCode_ERRC [ERRC] <- cError [EV01]
                         "2" -> cActionCode [EV01]
                         FC Price Reference Date [C9PRDJ] <- jdDatePriceReference [C9PRDJ]
                         FC Description [DL01] <- szCollectionDescription [C9DSC1]
                    //
                    // Set the flag to indicate the collection validation is done so that it is
                    // not validated again during Set focus on Grid event because in Update
                    // mode, these fields are always disabled whether blank or non-blank.
                    //
                    If VA evt_cErrorCode_ERRC [ERRC] is not equal to "1"
                         If FC Collection [C9COLL] is greater than <Blank>
                         And FC SeasonCode [C9SEAC] is greater than <Blank>
                         And FC Season Year [C9SEAY] is greater than <Blank>
                              VA frm_cCollValidationDone_EV01 [EV01] = "1"
                         End If
                    End If
               End If
          End If
     End If
Else
     If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "2"
          VA frm_cCollValidationErrors_ERRC [ERRC] = "0"
          //
          // Validate against FCW06 if one of the three collection fields are entered
          //
          If FC Collection [C9COLL] is not equal to <Blank>
          Or FC SeasonCode [C9SEAC] is not equal to <Blank>
          Or FC Season Year [C9SEAY] is not equal to <Blank>
               FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                    FC Collection [C9COLL] = TK Collection [C9COLL]
                    FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
                    VA frm_szCollectionDesc_C9DSC1 [C9DSC1] <- TK Description Line 1 [C9DSC1]
                    VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
               If SV File_IO_Status is equal to CO SUCCESS
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "0"
                    FC Description [DL01] = VA frm_szCollectionDesc_C9DSC1 [C9DSC1]
                    //
                    // This is validated from Set Focus on Grid. So, default PEFJ from Collection
                    // or today's date only if user has not entered the Collection Price Eff Date
                    //
                    If FC Price Reference Date [C9PRDJ] is equal to or empty Null Date
                         If VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] is not equal to Null Date
                              FC Price Reference Date [C9PRDJ] = VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                         Else
                              FC Price Reference Date [C9PRDJ] = SL DateToday
                         End If
                    End If
               Else
                    //
                    // If the Collection validation fails, throw an error that its an
                    // invalid combination of Collection/SeasonCode/SeasnYear
                    //
                    Set Control Error(FC Collection, "E41F02")
                    Set Control Error(FC SeasonCode, "E41F02")
                    Set Control Error(FC Season Year, "E41F02")
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "1"
               End If
          Else
               //
               // If all 3 collection fields are blank and the processing option is
               // set up to validate items against collection, then throw an error
               // that Collection/SeasonCode/SeasonYear values are Blank.
               //
               If PO cValidateItemsWithCollection [EV01] is equal to "1"
               Or PO cValidateItemsWithCollection [EV01] is equal to "2"
                    Set Control Error(FC Collection, "E41F01")
                    Set Control Error(FC SeasonCode, "E41F01")
                    Set Control Error(FC Season Year, "E41F01")
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "1"
               End If
          End If
     End If
End If
//
// Set the flag to inidiacte all 3 collection fields are blank or non-blank
//
If FC Collection [C9COLL] is greater than <Blank>
And FC SeasonCode [C9SEAC] is greater than <Blank>
And FC Season Year [C9SEAY] is greater than <Blank>
     VA frm_cCollectionInfoNotBlank_YN [YN] = "Y"
Else
     VA frm_cCollectionInfoNotBlank_YN [YN] = "N"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC CallApparelMatrixEntry
Event: Button Clicked
Event GUID: fc634888-fcfa-4c9a-93bc-54c500bc163e
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnItemOrTemplateJobNo_JOBS [JOBS]
evt_szApplItemStructure_C9STRC [C9STRC]
evt_mnStructLastLevelNo_C9LVNO [C9LVNO]
evt_cIsApparelRootItem_EV01 [EV01]
evt_szApprlItemLvlName_C9LVNM [C9LVNM]
evt_cLastLevelMatrixYN_C9MXLN [C9MXLN]
evt_szApparelUserId_USER [USER]
evt_szBranchPlant_MCU [MCU]
evt_mnPCW10QtyToControl_UORG [UORG]
evt_UnitOfMeasure_UOM [UOM]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
//
// Mode = 1 - Called from Row Exit-Asynch to process Collection templates
// Mode = 2 - Called from "Apparel Templates" form exit  to process templates
// Mode = 3 - Called from Row Exit-Asynch to process Apparel Matrix Item
//
If PO szPCW10Version [VL28] is equal to or empty <Blank>
     PO szPCW10Version [VL28] = "ZJDE0002"
End If
If PO szP4021Vers [VL02] is equal to or empty <Blank>
     PO szP4021Vers [VL02] = "ZJDE0001"
End If
//
If VA frm_mnApparelMatrixAddrNum_AN8 [AN8] is less than or equal to "0"
     If PO cSendAddressNumber [EV02] is equal to or empty <Blank>
          VA frm_mnApparelMatrixAddrNum_AN8 [AN8] = FC Ship To [SHAN]
     Else
          VA frm_mnApparelMatrixAddrNum_AN8 [AN8] = FC Address Number [AN8]
     End If
End If
//
// Process Collection Templates
If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "1"
Or VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "2"
     //
     // If the user has entered the template name with the prefix instead of
     // selecting thro search and select form, then determine the Template Name
     //
     If VA frm_szCollectiTemplName_C9MOSA [C9MOSA] is equal to or empty <Blank>
          If PO cCollectionTemplatePrefix [C9MACO] is greater than <Blank>
               //
               // Check the first char of Item No to see if coll.template prefix is entered
               VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = substr([GC Item Number [UITM]], "0", "1")
               //
               // Check if the prefix is entered and it is same as in processing option
               If VA frm_cCollectTemplPrefix_C9MACO [C9MACO] is greater than <Blank>
               And VA frm_cCollectTemplPrefix_C9MACO [C9MACO] is equal to PO cCollectionTemplatePrefix [C9MACO]
                    //
                    // Check only the rest of the 10 chars in Item No to determine the template
                    // name because Template name's(C9MOSA) max length is 10 in FCW20.
                    //
                    VA frm_szCollectiTemplName_C9MOSA [C9MOSA] = substr([GC Item Number [UITM]], "1", "10")
               End If
          End If
     End If
     //
     If VA frm_szCollectiTemplName_C9MOSA [C9MOSA] is greater than <Blank>
          //
          FCW55.FetchSingle  [Index 1: Fcw55]
               VA frm_szCollectiTemplName_C9MOSA [C9MOSA] = TK Collection Model [C9MOSA]
          If SV File_IO_Status is equal to CO SUCCESS
               //
               // Pass Dates & B/P from grid only when called from Row Exit & Chg event
               // Do not pass this information from Grid when called from Form Exit
               //
               If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "1"
                    VA evt_szBranchPlant_MCU [MCU] = GC Business Unit [MCU]
                    VA frm_jdApparelReqDate_DRQJ [DRQJ] = GC Request Date [DRQJ]
                    VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
                    VA frm_jdApparelPromDelDate_RSDJ [RSDJ] = GC Promised Delivery [RSDJ]
                    VA frm_jdApparelPromShipDate_PPDJ [PPDJ] = GC Promised Ship [PPDJ]
                    VA frm_jdApparelCancelDate_CNDJ [CNDJ] = GC Cancel Date [CNDJ]
               End If
               //
               // Req.Date will be copied from Line Defaults or FI value from Hdr Revisions
               If VA frm_jdApparelReqDate_DRQJ [DRQJ] is equal to or empty Null Date
                    If FC Requested [DRQJ] is not equal to Null Date
                         VA frm_jdApparelReqDate_DRQJ [DRQJ] = FC Requested [DRQJ]
                    Else
                         VA frm_jdApparelReqDate_DRQJ [DRQJ] = FI jdDateRequested [DRQJ]
                    End If
               End If
               //
               // If it is not entered in Grid, copy from Line Defaults or Header.
               If VA evt_szBranchPlant_MCU [MCU] is equal to or empty <Blank>
                    VA evt_szBranchPlant_MCU [MCU] = FC Business Unit [MCU]
               End If
               //
               If VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] is equal to or empty Null Date
                    VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] = FC Scheduled Pick [PDDJ]
               End If
               If VA frm_jdApparelPromDelDate_RSDJ [RSDJ] is equal to or empty Null Date
                    VA frm_jdApparelPromDelDate_RSDJ [RSDJ] = FC Promised Delivery [RSDJ]
               End If
               If VA frm_jdApparelCancelDate_CNDJ [CNDJ] is equal to or empty Null Date
                    VA frm_jdApparelCancelDate_CNDJ [CNDJ] = FC Cancel Date [CNDJ]
               End If
               //
               // Template name is entered in the grid to bring up PCW10 and Items will be
               // added from PCW10. So, Delete this grid row since is not required to be in
               // SO and retain the Line No. Do not delete the row when called from Form exit
               //
               If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "1"
                    VA frm_LNID_Last_Line_Number [LNID] = GC Line Number [LNID]
                    Delete Grid Row(FC Grid,  <Currently Selected Row>)
               End If
               //
               // Call BCW30 with JOBS=1 to copy the template info in FCW20 with JOBS=1 to a
               // new JOBS, so that these temp records could be used in PCW10 for this call
               VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] = "1"
               //
               MatrixWithLevel0(BCW30.MatrixWithLevel0)
                    VA frm_szCollectiTemplName_C9MOSA [C9MOSA] -> szC9LVL0-Level 0 [C9LVL0]
                    VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] <> mnJobnumberA [JOBS]
               //
               // Call with MatrixType=6 and make sure to pass new JOBS returned by BCW30
               Call App:PCW10 Form:WCW10B Version:PO szPCW10Version
                    VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] -> mnJobnumberA [JOBS]
                    SL UserID -> szUserId [USER]
                    "6" -> MatrixType [EV01]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    "0" -> QtyControle [UORG]
                    VA evt_szBranchPlant_MCU [MCU] -> szCostCenter [MCU]
                    VA frm_jdApparelReqDate_DRQJ [DRQJ] <> jdDateRequestedJulian [DRQJ]
                    VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] <> jdPromisedDeliveryDate [PDDJ]
                    VA frm_jdApparelPromDelDate_RSDJ [RSDJ] <> jdDateReleaseJulian [RSDJ]
                    VA frm_jdApparelCancelDate_CNDJ [CNDJ] <> jdCancelDate [CNDJ]
                    VA frm_jdApparelPromShipDate_PPDJ [PPDJ] <> jdDatePromisedPickJu [PPDJ]
                    "F4211" -> szC9FILE_File [C9FILE]
                    VA frm_mnApparelMatrixAddrNum_AN8 [AN8] -> mnAddressNumber [AN8]
                    PO szP4021Vers [VL02] -> szVersion_P4021 [VERS]
                    "EP4210" -> szCallingAPPLProgramId [PID]
                    FC Address Number [AN8] -> mnSoldTo [AN8]
                    FC Ship To [SHAN] -> mnShipTo [AN8]
                    FC Order Date [TRDJ] -> jdOrderDate [JDATE]
                    FC Reference [VR01] -> szOrderReference [VR01]
               //
               // Set the Flag to indicate PCW10 is called for Collection templates
               VA frm_cCollTemplatesDone_EV01 [EV01] = "1"
               //
          End If
     End If
     //
Else
     // Process Apparel Matrix Item
     If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "3"
          //
          // Check it is an Apparel Root Item and MatrixYN flag is set to 'Y' in PCW01
          CheckApparelMatrixItem(B41F0040.CheckApparelMatrixItem)
               GC Short Item No [ITM] -> mnItemNumberShort_Apparel [C9ITM]
               VA evt_szApprlItemLvlName_C9LVNM [C9LVNM] <- szLevelName [C9LVNM]
               VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] <- cMatrixLineYN [C9MXLN]
               VA evt_szApplItemStructure_C9STRC [C9STRC] <- szStructure [C9STRC]
               VA evt_cIsApparelRootItem_EV01 [EV01] <- cRootItem [EV01]
               VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] <- mnLastLevelNo [C9LVNO]
          //
          If VA evt_cIsApparelRootItem_EV01 [EV01] is equal to "1"
               //
               // When PCW10 is called the Qty Ordered value is used to control the quantity
               // that can be entered in PCW10. Send in the qty entered by the user instead
               // of system defaulted qty. If the user has not entered any qty and system
               // defaults it we will send zero; so that user can enter any qty in PCW10.
               //
               VA evt_mnPCW10QtyToControl_UORG [UORG] = VA grd_mnQtyEnteredByUser_UORG [UORG]
               //
               // Pass Dates & B/P from grid as the line is already processed by Edit Line
               VA evt_szBranchPlant_MCU [MCU] = GC Business Unit [MCU]
               VA frm_jdApparelReqDate_DRQJ [DRQJ] = GC Request Date [DRQJ]
               VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
               VA frm_jdApparelPromDelDate_RSDJ [RSDJ] = GC Promised Delivery [RSDJ]
               VA frm_jdApparelPromShipDate_PPDJ [PPDJ] = GC Promised Ship [PPDJ]
               VA frm_jdApparelCancelDate_CNDJ [CNDJ] = GC Cancel Date [CNDJ]
               VA evt_UnitOfMeasure_UOM [UOM] = GC UM  [UOM]
               //
               // Apparel root item name is entered in the grid to bring up PCW10 and Items
               // will be added from PCW10. So, delete this row from grid as well as Edit
               // Line Cache since it is not required to be in SO and retain the Line Number
               //
               VA frm_LNID_Last_Line_Number [LNID] = GC Line Number [LNID]
               Press Button(FC Delete Lines)
               //
               // Call BCW30 with JOBS="" which will retrieve Matrix Item info from FCW02 /
               // FCW01 and insert temp records to FCW20 with new JOBS for this PCW10 call
               //
               MatrixWithLevel0(BCW30.MatrixWithLevel0)
                    VA evt_szApprlItemLvlName_C9LVNM [C9LVNM] -> szC9LVL0-Level 0 [C9LVL0]
                    VA evt_szApplItemStructure_C9STRC [C9STRC] -> szC9STRC-Structure [C9STRC]
                    VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] -> mnC9LVNO-Level No [C9LVNO]
                    VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] <> mnJobnumberA [JOBS]
                    VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] -> cC9MXLN-Matrix Line (Y/N) [C9MXLN]
               //
               // Call with MatrixType=1 and make sure to pass new JOBS returned by BCW30
               Call App:PCW10 Form:WCW10B Version:PO szPCW10Version
                    VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] -> mnJobnumberA [JOBS]
                    SL UserID -> szUserId [USER]
                    VA evt_szApprlItemLvlName_C9LVNM [C9LVNM] -> szC9LVL0-Level 0 [C9LVL0]
                    "1" -> MatrixType [EV01]
                    VA evt_szApplItemStructure_C9STRC [C9STRC] -> szC9STRC-Structure [C9STRC]
                    VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] -> mnC9LVNO-Level No [C9LVNO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] -> cC9MXLN_MatrixLine_YN [C9MXLN]
                    VA evt_mnPCW10QtyToControl_UORG [UORG] -> QtyControle [UORG]
                    VA evt_szBranchPlant_MCU [MCU] -> szCostCenter [MCU]
                    VA frm_jdApparelReqDate_DRQJ [DRQJ] <> jdDateRequestedJulian [DRQJ]
                    VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] <> jdPromisedDeliveryDate [PDDJ]
                    VA frm_jdApparelPromDelDate_RSDJ [RSDJ] <> jdDateReleaseJulian [RSDJ]
                    VA frm_jdApparelCancelDate_CNDJ [CNDJ] <> jdCancelDate [CNDJ]
                    VA frm_jdApparelPromShipDate_PPDJ [PPDJ] <> jdDatePromisedPickJu [PPDJ]
                    "F4211" -> szC9FILE_File [C9FILE]
                    VA frm_mnApparelMatrixAddrNum_AN8 [AN8] -> mnAddressNumber [AN8]
                    PO szP4021Vers [VL02] -> szVersion_P4021 [VERS]
                    "EP4210" -> szCallingAPPLProgramId [PID]
                    FC Address Number [AN8] -> mnSoldTo [AN8]
                    FC Ship To [SHAN] -> mnShipTo [AN8]
                    FC Order Date [TRDJ] -> jdOrderDate [JDATE]
                    FC Reference [VR01] -> szOrderReference [VR01]
                    VA evt_UnitOfMeasure_UOM [UOM] -> szTransactionUOM [UOM]
               //
               // Set the Flag to indicate PCW10 is called for Apparel Matrix Item
               VA frm_cApparelItemProcessed_EV01 [EV01] = "1"
          End If
     End If
End If
//
// Post process if PCW10 is called for Collection template or Matrix Item
//
If VA frm_cCollTemplatesDone_EV01 [EV01] is equal to "1"
Or VA frm_cApparelItemProcessed_EV01 [EV01] is equal to "1"
     //
     // Delete the newly created temporary template or Apparel Matrix
     // work file records with the new job number returned by BCW30.
     //
     FCW20.Delete  [Index 1: Primary]
          VA evt_mnItemOrTemplateJobNo_JOBS [JOBS] = TK Job Number [JOBS]
     //
     // PCW10 loads selected records to B4100380 Cache. Call Load Grid from
     // Cache button to read the records from B4100380 Cache & insert into Grid.
     //
     VA frm_cApparelCalled_EV01 [EV01] = "1"
     Press Button(FC PROCESS: Load Grid From Cache)
     VA frm_cApparelCalled_EV01 [EV01] = "0"
     //
     VA frm_cCollectTemplPrefix_C9MACO [C9MACO] = <NULL>
     VA frm_szCollectiTemplName_C9MOSA [C9MOSA] = <NULL>
     VA frm_jdApparelReqDate_DRQJ [DRQJ] = <NULL>
     VA frm_jdApparelSchdPickDate_PDDJ [PDDJ] = <NULL>
     VA frm_jdApparelPromDelDate_RSDJ [RSDJ] = <NULL>
     VA frm_jdApparelPromShipDate_PPDJ [PPDJ] = <NULL>
     VA frm_jdApparelCancelDate_CNDJ [CNDJ] = <NULL>
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC ValidateItemsAgainstCollection
Event: Button Clicked
Event GUID: c5004578-c476-494d-bad8-8164a01dc494
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szOrigCollection_C9COLL [C9COLL]
evt_szOrigSeasonCode_C9SEAC [C9SEAC]
evt_szOrigSeasonYear_C9SEAY [C9SEAY]
evt_nTotalNumOfGridRows_INT01 [INT01]
evt_nCurrentGridRowNum_INT01 [INT01]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
// Get each grid row and check if item exist in the Collection by checking
// against FCW07. Throw warning or error based on the processing
// Option. Do not perform this validation for Cancelled Lines
//
Get Max Grid Rows(FC Grid, VA evt_nTotalNumOfGridRows_INT01)
VA evt_nCurrentGridRowNum_INT01 [INT01] = "1"
While VA evt_nCurrentGridRowNum_INT01 [INT01] is less than or equal to VA evt_nTotalNumOfGridRows_INT01 [INT01]
     Get Grid Row(FC Grid, VA evt_nCurrentGridRowNum_INT01)
     If GC Next Stat [NXTR] is not equal to "999"
     And GC Short Item No [ITM] is greater than "0"
          FCW07.FetchSingle  [Index 1: Collection Detail]
               FC Collection [C9COLL] = TK Collection [C9COLL]
               FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
               FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
               GC Short Item No [ITM] = TK Short Item Number [C9ITM]
          If SV File_IO_Status is not equal to CO SUCCESS
               If PO cValidateItemsWithCollection [EV01] is equal to "1"
                    Set Grid Cell Error(FC Grid, VA evt_nCurrentGridRowNum_INT01, GC ItemNumber, "E41F03")
               Else
                    Set Grid Cell Error(FC Grid, VA evt_nCurrentGridRowNum_INT01, GC ItemNumber, "E41F04")
               End If
          End If
     End If
     VA evt_nCurrentGridRowNum_INT01 [INT01] = [VA evt_nCurrentGridRowNum_INT01 [INT01]]+1
End While


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Disable/Hide Price
Event: Button Clicked
Event GUID: 7fdebc31-c1a8-4fdc-a4f7-e0511dcc5cbd
=============================================
// SAR 8955603 - Disable/Hide taxed price columns
If PO cDisableorHidePrice [EV04] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC UnitPrice)
     Disable Grid(FC Grid,  <All Rows>, GC ExtendedPrice)
     Disable Grid(FC Grid,  <All Rows>, GC ForeignUnit Price)
     Disable Grid(FC Grid,  <All Rows>, GC ForeignExtended Price)
     Disable Grid(FC Grid, <All Rows>, GC ProfitMargin)
     //
     // Disable taxed price columns
     Disable Grid(FC Grid, <All Rows>, GC TaxedUnit Price)
     Disable Grid(FC Grid, <All Rows>, GC TaxedExtended Price)
     Disable Grid(FC Grid, <All Rows>, GC Foreign TaxedUnit Price)
     Disable Grid(FC Grid, <All Rows>, GC Foreign TaxedExtended Price)
Else
     If PO cDisableorHidePrice [EV04] is equal to "2"
          Hide Grid Column(FC Grid, GC UnitPrice)
          Hide Grid Column(FC Grid, GC ExtendedPrice)
          Hide Grid Column(FC Grid, GC ForeignUnit Price)
          Hide Grid Column(FC Grid, GC ForeignExtended Price)
          Hide Grid Column(FC Grid, GC ProfitMargin)
          //
          // Hide tax amount  and taxed price columns
          Hide Grid Column(FC Grid, GC Unit TaxAmount)
          Hide Grid Column(FC Grid, GC ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Hide Grid Column(FC Grid, GC TaxedUnit Price)
          Hide Grid Column(FC Grid, GC TaxedExtended Price)
          Hide Grid Column(FC Grid, GC Foreign TaxedUnit Price)
          Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
     Else
          // Enable/disable non-taxed price columns
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Disable Grid(FC Grid,  <All Rows>, GC UnitPrice)
               Disable Grid(FC Grid,  <All Rows>, GC ExtendedPrice)
               Disable Grid(FC Grid,  <All Rows>, GC ForeignUnit Price)
               Disable Grid(FC Grid,  <All Rows>, GC ForeignExtended Price)
          Else
               Enable Grid(FC Grid,  <All Rows>, GC UnitPrice)
               Enable Grid(FC Grid, <All Rows>, GC ExtendedPrice)
               Enable Grid(FC Grid, <All Rows>, GC ForeignUnit Price)
               Enable Grid(FC Grid, <All Rows>, GC ForeignExtended Price)
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Get UTP From Tag Customer Master
Event: Button Clicked
Event GUID: 923951ee-5cf6-42bc-90aa-267962b09836
=============================================
// SAR 8955602 - Get Use Taxed Price Flag value from Get Customer Master BSFN
VA frm_cErrorFlag_EV01 [EV01] = "0"
GetTagCustomerMaster(B0100410.GetTagCustomerMaster)
     VA frm_mnCustAddNumber_AN8 [AN8] -> mnAddressNumber [AN8]
     VA frm_szOrderCompany_CO [CO] -> szCompany [CO]
     VA frm_cUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
     "1" -> cSuppressErrorMessage [SUPPS]
     VA frm_cErrorFlag_EV01 [EV01] <- cErrorFlag [EV01]
If PO cTransferOrderEntry [EV25] is equal to "1"
     If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
          VA frm_cUseTaxedPrices_UTP [UTP] = "0"
          FC Use Taxed Prices [UTP] = "0"
     Else
          FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
     End If
Else
     //
     // SAR 8955603 - For shopping cart mode " CSS Use Taxed Prices "checkbox is
     // considered.
     If PO cShoppingCartMode [CART] is equal to "1"
          If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
               VA frm_cUseTaxedPrices_UTP [UTP] = "0"
               FC CSS Use Taxed Prices [UTP] = "0"
          Else
               FC CSS Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
          End If
          Press Button(FC Hide/Show Currency (HIDDEN))
     End If
     If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
          VA frm_cUseTaxedPrices_UTP [UTP] = "0"
          FC Use Taxed Prices [UTP] = "0"
     Else
          FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
     End If
End If
//


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC Set Use Taxed Prices After Begin Doc
Event: Button Clicked
Event GUID: 54f842e2-2a89-4c97-8aba-8658071b2f03
=============================================
// SAR 8955603 - Load value for the UTP check box
If SV Error_Status is not equal to CO ERROR
And VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
     If PO cTransferOrderEntry [EV25] is equal to "1"
          FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
     Else
          If PO cShoppingCartMode [CART] is equal to "1"
               FC CSS Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
          Else
               FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Object: FC CSS Use Taxed Prices
Event: Selection Changed
Event GUID: b251d6a3-c767-4746-8fe3-604f1e6800f4
=============================================
// SAR 8955603 - SOM Taxed Unit Prices
VA frm_cUseTaxedPrices_UTP [UTP] = FC CSS Use Taxed Prices [UTP]
// Hide/Show the grid fields based on the UTP checkbox value and the
// currency mode
If FC CSS Use Taxed Prices [UTP] is equal to "1"
     If FC Mode (F) [CRRM] is equal to "F"
          Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Show Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
          Show Grid Column(FC Grid, GC Foreign TaxedExtended Price)
          Show Grid Column(FC Grid, GC Foreign TaxedExtended Price)
     Else
          Show Grid Column(FC Grid, GC Unit TaxAmount)
          Show Grid Column(FC Grid, GC ExtendedTax Amount)
          Show Grid Column(FC Grid, GC TaxedUnit Price)
          Show Grid Column(FC Grid, GC TaxedExtended Price)
     End If
Else
     Hide Grid Column(FC Grid, GC Unit TaxAmount)
     Hide Grid Column(FC Grid, GC ExtendedTax Amount)
     Hide Grid Column(FC Grid, GC TaxedUnit Price)
     Hide Grid Column(FC Grid, GC TaxedExtended Price)
     Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
     Hide Grid Column(FC Grid, GC Foreign ExtendedTax Amount)
     Hide Grid Column(FC Grid, GC Foreign TaxedExtended Price)
     Hide Grid Column(FC Grid, GC Foreign UnitTax Amount)
End If



=============================================
EVENTS
=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Dialog is Initialized
Event GUID: f57df5de-a23a-11d0-a204-0000f6728a56
=============================================
//
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4510497                   VK6272082                 10/13/00
// 5315204                  WZ6999484                 08/24/01
// 5096566                  WZ6999484                 08/24/01
// 5076004                  WZ6999484                 08/24/01
// 5145014                  WZ6999484                 10/09/01
// 5406608                         Arti                         11/07/01
// 5706117                         Arti                         01/28/02
// 5647680                  HC953119                 02/27/02
// 6194117                  DM6014163               09/10/02
// 6450723                  HC953119                 01/21/03
// 6559041                  Toan Tran                  03/23/03
// 6572551                  Toan Tran                  04/01/03
// 6368922                  LF6356964                04/18/03
// 6232646                  RK5695569                06/06/03
// 7163021                  KS5885194              07/14/04
// 7602952                  BN9024789                04/13/05
// 8538278                  SK6068858                08/03/2007
// 8467473                  RP5447080                08/07/2007
// 8630079                  RP5447080                10/25/2007
// 8735095                  DO7041104                02/11/2008
// 8930811                 JT7568002               06/25/2009
// 8918718                 JT7568002               06/25/2009
// 8955602                 AC9056271              05/21/2010
// 8955603                 SP9055657              06/21/2010
// 8944140                 DO7041104               01/15/2010
// 8961364                 IC9017706               06/11/2010
// 8966561    JS7142571     09/06/10    Unit Price Not Update
// 09/23/2010     IC8895646     8968785 -  Cfg price after PC1 change
// 09/24/2010     IC8895646     8968981 -  Check Price for cfg items
// 01/05/2011     IC8895646     8975670 -   P3210 Prompted w/ Cred Order
// 11/16/2010     SM9053053    8955612 -  SOM Taxed Unit Price
// 04/26/2011    RV9056609   11904723 -  PMPN Enhancements
//
// ---------------------------------------------------------------------------
// 6533457 CRM CSS - Translation Coding
// ---------------------------------------------------------------------------
//
Hide Control(FC &Back)
Hide Control(FC Checko&ut)
Hide Control(FC Save and E&xit)
Hide Control(FC Ca&ncel Order)
Hide Control(FC Update Order)
Hide Control(FC Override So&ld To)
Hide Control(FC Override Shi&p To)
Hide Control(FC Overri&de Sold To and Ship To)
Hide Control(FC st_OrderNumber)
Hide Control(FC stOrderNumberCSS)
Hide Control(FC st_SoldToLabel)
Hide Control(FC st_SoldToName)
Hide Control(FC st_ShipToLabel)
Hide Control(FC st_ShipToName)
Hide Control(FC Reference [VR01])
Hide Control(FC stPONumberCSS)
Hide Control(FC tbc_Heading)
//
//
// -----------------------------------------------------------------
//    SAR 8538278 - Check if System 49T is installed
// -----------------------------------------------------------------
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY49T" -> szDataItem [DTAI]
     VA frm_cSystem49TInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cSystem49TInstalled_EV01 [EV01] is less than or equal to "0"
     Disable Control(HC Rate Sho&pping)
     Disable Control(HC Rate Shop&ping)
End If
//
// ---------------------------------------------------------------------------
// SAR 8944140 OFW/Service Level Rules: Check System 42W Install
// ----------------------------------------------------------------
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY42W" -> szDataItem [DTAI]
     VA frm_cSystem42WInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cSystem42WInstalled_EV01 [EV01] is less than or equal to "0"
     Disable Control(HC Service &Level Rules)
     Disable Control(HC Service Level &Rules)
End If
//
//
// SAR 8953108 - Apparel Enhancements
// Check if Apparel System (SY41F) is Installed. Hide Apparel tab and
// Disable Apparel Templates form exit if Apparel System is not Installed
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cApparelInstalled_EV01 [EV01] is not equal to "1"
     Hide Tab Page(FC Tab Control51, TP Apparel)
     Disable Control(HC Style &Templates)
End If
//
// SAR 7203097 - Initializing the variable
VA frm_cMultipleBlanket_EV01 [EV01] = "0"
// SAR 8567950 - Initializing the variable
VA frm_Transfer_Order_Errors_EV01 [EV01] = "0"
//
// SAR 8955607 - Taxed Prices Enhancement
VA frm_cOrigUseTaxedPrices_UTP [UTP] = <Blank>
// SAR 6105487 - Verify Demand System is Available
IsDemandSchedulingDelivered(N40R0940.IsDemandSchedulingDelivered)
     VA frm_cDemandSchedReleased_DSRF [DSRFU] <- cDemandSchedulingReleased [DSRFU]
// Verify Demand System is Enabled
EditSystemExistenceF99410(N5200130.EditSystemExistenceF99410)
     "SY40R" -> szDataItem [DTAI]
     VA frm_cDemandSchedEnabled_MEOW [MEOW] <- cModuleExistance [MEOW]
// End SAR 6105487
// 5406608 begins
If SV Engine_Type is equal to CO HTML_ENGINE
Or SV Engine_Type is equal to CO JAVA_ENGINE
     VA frm_cFlagEverestEventPoint01 [EV01] = 1
End If
//
// SAR 6418281
VA frm_cCallFrmLoadGridCache [EV01] = "0"
// 5406608 ends here
// SAR 6437123 - Begin
VA frm_cIsOkButtonClicked_EV01 [EV01] = <NULL>
// SAR 6437123 - End
VA frm_szPreviousBusinessUnit_MCU [MCU] = <NULL>
VA frm_cPrevLntyProtectPrice_EV01 [EV01] = <NULL>
VA frm_cPrevLineType_LNTY [LNTY] = <NULL>
VA frm_ATS_szPrepayTransStatus [ATS] =   
//  SAR 8926255 RollBack SAR  8667598
// SAR 5136951
VA frm_cOKButtonClicked_EV01 [EV01] = <NULL>
VA frm_cFreeGoodExitEnabled_EV01 [EV01] = <NULL>
Disable Control(HC Free G&ood Catalog)
//
// Localization Exit
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     SL CountryCode -> szCountry [CTR]
     "P4210" -> szCallingAppl [PID]
     "W4210A" -> szCallingForm [FID]
     "INI" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     VA frm_mnLocJobNumber_JOBS [JOBS] <> mnLocJobNumber [JOBS]
//
// ***********************************************************************
// SAR 5219677- Blank TORG and ORBY in COPY Mode
If SV Form_ Mode is equal to CO COPY_MODE
     BC Ordered By (F4201.0) [ORBY] = <NULL>
     BC Order Taken By (F4201.0) [TKBY] = <NULL>
     // SAR 7322310
     If FI Computerid [CTID] is less than or equal to <Blank>
          GetLocalComputerId(B9800181.GetLocalComputerId)
               FI Computerid [CTID] <- szMachineKey [MKEY]
     End If
End If
// -----------------------------------------------------------------------------
// SAR 2341538 Record Reservation Process
//
// This section is to Validate if a record being accessed is being reserved by
// another user/process
//
// First determine if  the Application needs to be validated
// if function returns '0', then the application should be tested
//
// SAR 7818112 - Added a condition: IF the action code passed from the header
// is not ADD Mode then Reserve Object.
If SV Form_ Mode is equal to CO UPDATE_MODE
And FI cActionCode [ACTN] is not equal to "A"
     If VA frm_cValidateApplication_EV01 [EV01] is not equal to "2"
     And VA frm_cValidateApplication_EV01 [EV01] is not equal to "0"
          //
          // to validate Application,  test UDC 00/RR to see if the Application have a
          // special handling code == '1', the function will return
          // '0' : the application should be tested
          // '1': omit the testing
          //
          //
          ValidateApplicationId(N0000604.ValidateApplicationId)
               "P4210" -> szApplicationID_PID [PID]
               VA frm_cValidateApplication_EV01 [EV01] <- cValidateApplication_ERR1 [ERR1]
          If VA frm_cValidateApplication_EV01 [EV01] is not equal to "0"
               VA frm_cValidateApplication_EV01 [EV01] = "2"
          End If
     End If
     //
     // If application is to be tested, build a unique key by concating fields
     // togather
     //
     If VA frm_cValidateApplication_EV01 [EV01] is equal to "0"
          //
          // To limit the I/O and testing only process with key fields have changed
          //
          If VA frm_mnRReserveOrderNumber_DOCO [DOCO] is not equal to FI DocumentOrderInvoiceE [DOCO]
          Or VA frm_szRReserveOrdCompany_KCOO [KCOO] is not equal to FI CompanyKeyOrderNo [KCOO]
          Or VA frm_szRReserveOrderType_DCTO [DCTO] is not equal to FI OrderType [DCTO]
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([FI DocumentOrderInvoiceE [DOCO]], [FI OrderType [DCTO]])
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szGenericKey_GENKEY [GENKEY]], [FI CompanyKeyOrderNo [KCOO]])
               //
               // Use the function to reserve or issue warning/erro if key/file is already bein
               // used by another user
               //
               // 8023514 - Get Unique Transaction Identifier for Record Reservation
               GetNextUniqueKeyID(X00022.GetNextUniqueKeyID)
                    "RRESERVE" -> szObjectName [OBNM]
                    VA frm_mnUniqueIDRecReserve_UKID [UKID] <- mnUniqueKeyID [UKID]
               ConvertNumericToString(B0000045.ConvertNumericToString)
                    VA frm_mnUniqueIDRecReserve_UKID [UKID] -> mnMathNumeric01 [MATH01]
                    VA frm_szUniqueIDRecReserve_PID [PID] <- szVideoConstant30A [VC30A]
               F00095ReserveObject(N0000602.F00095ReserveObject)
                    "F4211" -> szNameObject [OBNM]
                    SL UserID -> szUserId [USER]
                    "1" -> cSuppressErrorMessage [EV01]
                    VA frm_szRecordReserveErrMsg_DTAI [DTAI] <- szErrorMessageID [DTAI]
                    VA frm_szReserveName_ALPH [ALPH] <- szReserversNameAlpha [ALPH]
                    VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                    VA frm_szUniqueIDRecReserve_PID [PID] -> szApplication [PID]
                    VA frm_szReserveAppID_PID [PID] <- szReserversApplication [PID]
                    "1" -> cWarningError [EV01]
               //
               VA frm_szRReserveOrdCompany_KCOO [KCOO] = FI CompanyKeyOrderNo [KCOO]
               VA frm_szRReserveOrderType_DCTO [DCTO] = FI OrderType [DCTO]
               VA frm_mnRReserveOrderNumber_DOCO [DOCO] = FI DocumentOrderInvoiceE [DOCO]
          End If
          // 8023514 Begin
          If VA frm_szRecordReserveErrMsg_DTAI [DTAI] is not equal to <Blank>
          And VA frm_szRecordReserveErrMsg_DTAI [DTAI] is not equal to <NULL>
               // On lines that have a warning  / error because the line is used by another
               // user suppress grid line and issue warning  / error.
               // SAR 8521581 - Set error instead of warning
               SetReservationError(B0000603.SetReservationError)
                    VA frm_szReserveName_ALPH [ALPH] -> szReserversNameAlpha [ALPH]
                    VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                    VA frm_szReserveAppID_PID [PID] -> szApplication [PID]
               Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
          End If
          // 8023514 End
     End If
End If
//
// End of SAR 2341538
// -----------------------------------------------------------------------------
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Form Title(TV Store And Forward Detail Revisions)
End If
//
// SAR 1916651 disable unit of measure if it is update mode and blanket order.
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     GetUDC(X0005.GetUDC)
          UNDEFINED <> szDataDictionaryItem [DTAI]
          "40" -> szSystemCode [SY]
          "BT" -> szRecordTypeCode [RT]
          FI OrderType [DCTO] -> szUserDefinedCode [KY]
          "2.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_sz_ErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_sz_ErrorMessage_DTAI [DTAI] is equal to <Blank>
     Or VA frm_sz_ErrorMessage_DTAI [DTAI] is equal to <NULL>
          VA frm_c_BlanketFlag_EV01 [EV01] = "1"
     End If
End If
//
// SAR # 1847781 Store off Version into a non-system variable.
VA frm_szVersion_VERS [VERS] = SL VersionName
//
//
//     If the "Update to Hdr wf" parameter is set to '2', then it means the
//     Header Values have been changed and they must be populated to all Detail
//     grid rows.
//
//
// SAR 4200974
// SAR 5544496- Incorporate VR01/Cust PO into N4002380
If FI UpdatedToHdrWF [EV20] is equal to "2"
     FI UpdatedToHdrWF [EV20] = "1"
     VA frm_HeaderValuesChanged [EV01] = "1"
Else
     VA frm_HeaderValuesChanged [EV01] = "0"
End If
//
VA frm_SYMID_Primary_Item_Idntfr [SYMID] = <Blank>
VA frm_EMCU_DfltHdrBranchPlant [EMCU] = <NULL>
VA frm_INT02_Warnings [INT02] = "0"
VA frm_EV01_NewRecords [EV01] = "0"
// SAR #1868961
VA frm_EV07_Misc_Button_Process [EV07] = "0"
//
If PO cTransferOrderEntry [EV25] is equal to "1"
     Hide Control(FC Document Key Company [EKCO])
     Hide Control(FC Order Type [DCTO])
     Hide Control(FC Order Number [DOCO])
     Hide Control(FC Order Number [DOCO])
     Hide Control(FC Order Type [DCTO])
     Hide Control(FC Document Key Company [EKCO])
Else
     Hide Control(FC Order Number [DOCO])
     Hide Control(FC Order Type [DCTO])
     Hide Control(FC Document Key Company [EKCO])
End If
Hide Control(FC Mode (F) [CRRM])
Hide Control(FC FAP-Foreign Total Display [TOT2])
//
FC Order Type [DCTO] = FI OrderType [DCTO]
FC Order Number [DOCO] = FI DocumentOrderInvoiceE [DOCO]
FC Order Company [KCOO] = FI CompanyKeyOrderNo [KCOO]
VA frm_UPDJ_System_Date [UPDJ] = date_today()
VA frm_CTID_Computer_ID [CTID] = FI Computerid [CTID]
VA frm_XLIN_CurrentGridLineNo [XLIN] = "0"
VA frm_sz_OrderTempSoldTo_ORTP [ORTP] = FI szOrderTempSoldTo [ORTP]
VA frm_sz_OrderTempShipTo_ORTP [ORTP] = FI szOrderTempShipTo [ORTP]
//
// SAR#5242682
// SAR 5308881 - Date Sensitive Customer Sets
// SAR 5399831 - retrieve AJRM
// SAR 7765006 - retrieving cPricingOnOverride flag
// SAR 7846981-retrieve proc pricing on override flag
// SAR 8955602 - New function to get Unit Sales Tax Price activation flag
GetDistribution_TaxedPricesConst(B4000560.GetDistribution_TaxedPricesConst)
     VA frm_ADVP_cAdv_Pricing [ADVP] <- cAdvancedSalesPricing [ADVP]
     VA frm_UseCustomerSet_CP19 [CP19] <- cUseCustomerSet [CP19]
     VA frm_cAdjRetrievalMethod_AJRM [AJRM] <- cAdjustmentRetrievalMethod [AJRM]
     VA frm_DistConstPrefSchedule_PRSN [PRSN] <- szPreferenceSchedule [PRSN]
     VA frm_PromotionsSystemFlag_PRSF [PRSF] <- cPromotionsSystemFlag [PRSF]
     VA frm_cPricingOnOverride_CP28 [CP28] <- cSalesPricingOnOverridePrice [CP28]
     VA frm_cProcPricingOnOverride [CP29] <- cProcPricingOnOverridePrice [CP29]
     VA frm_cSalesTaxedPrices_TPSC [TPSC] <- cSalesTaxedPricesConstant [TPSC]
     VA frm_cCustomerTaxedPrices_CTXP [CTXP] <- cCustomerTaxedPrices [CTXP]
//
// SAR 8955612 - If it is store and forward mode , then Set cSalesTaxedPrices
// as 0
If PO cStoreAndForwardMode [SO15] is equal to ("1","2","3")
     VA frm_cSalesTaxedPrices_TPSC [TPSC] = "0"
End If
// SAR 8955602 - If sales tax price constant is turned off then hide the new
// controls
If VA frm_cSalesTaxedPrices_TPSC [TPSC] is not equal to "1"
     Hide Control(FC Use Taxed Prices [UTP])
     Hide Control(FC Use Taxed Prices [UTP])
     Hide Control(FC CSS Use Taxed Prices [UTP])
End If
//
If VA frm_cPricingOnOverride_CP28 [CP28] is equal to ("1","Y")
     VA frm_cPricingOnOverride_CP28 [CP28] = "1"
Else
     VA frm_cPricingOnOverride_CP28 [CP28] = "0"
End If
//
If FI Advancedsalespricingyn [ADVP] is equal to or empty <Blank>
Or FI Advancedsalespricingyn [ADVP] is equal to or empty <NULL>
Else
     VA frm_ADVP_cAdv_Pricing [ADVP] = FI Advancedsalespricingyn [ADVP]
End If
//
//     If Advanced Pricing is on, suppress the order total display.
//
If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
     Hide Control(FC OTOT: Order Total Display [TOT1])
     Hide Control(FC FAP-Foreign Total Display [TOT2])
End If
//
// SAR 5308881 - Date Sensitive Customer Sets
//
If VA frm_UseCustomerSet_CP19 [CP19] is not equal to "1"
     Hide Tab Page(FC Tab Control51, TP Customer Set)
Else
     Enable Tab Page(FC Tab Control51, TP Customer Set)
End If
//        If EV22_cCacheOn = "2", use cache to store F42UI01 and F42UI11.
//       NOTE: Must be consistent with EV22 flag in Header Revisions
//        And also consistent with the WFOC flag in the  Additional Info form.
//
VA frm_EV22_cCacheOn [EV22] = "2"
//
If PO mnDefaultLineIncrement [LNIX] is equal to "0"
     PO mnDefaultLineIncrement [LNIX] = "1"
End If
//
If PO cDisableorHideCost [EV03] is greater than <Blank>
Or PO cDisableorHidePrice [EV04] is greater than <Blank>
Or PO cDisableStatusCodes [EV05] is greater than <Blank>
     Press Button(FC Misc Button Processing)
End If
//
// If the Proc. Option is entered then disable the exit to Order Templates
//
If PO cOrderTemplateAddress [EV21] is not equal to "1"
And PO cOrderTemplateAddress [EV21] is not equal to "2"
     Disable Control(HC Order &Templates)
End If
//
If FI Advancedsalespricingyn [ADVP] is equal to "N"
     Disable Control(HC &Reprice Order)
End If
Disable Control(HC Cancel R&eprice)
//
// 3069100
If PO cActivatePrepayProcess [EV01] is not equal to "1"
     Disable Control(HC &Prepayment)
End If
//
// ==Store And Forward Logic
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
Or PO cStoreAndForwardMode [SO15] is equal to "3"
     Disable Control(HC Select &Agreement)
     Disable Control(HC &Subst/Compl Items)
     Disable Control(HC A&vailability)
     Disable Control(HC S&upply/Demand)
     Disable Control(HC Product A&lloc)
     Disable Control(HC Commitm&ent)
     Disable Control(HC De&tail Attachments)
     Disable Control(HC &Blanket Orders)
     Disable Control(HC Cre&dit Memo)
     //
     // 4510497
     Disable Control(HC &Kits/Configurator)
     // -----------------------------------------------------------------
     // SAR 8538278 - Disable Rate Shopping functionality
     // -----------------------------------------------------------------
     Disable Control(HC Rate Sho&pping)
     Disable Control(HC Rate Shop&ping)
End If
//
If PO cStoreAndForwardMode [SO15] is equal to <Blank>
Or PO cStoreAndForwardMode [SO15] is equal to <NULL>
     Disable Control(HC Tra&ns Control)
End If
//
// copy FI's to Original Order variables
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_ODCT_Original_Order_Type [ODCT] = FI OrderType [DCTO]
     VA frm_OKCO_Original_Order_Co [OKCO] = FI CompanyKeyOrderNo [KCOO]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FI DocumentOrderInvoiceE [DOCO] -> mnMathNumeric01 [MATH01]
          VA frm_OORN_Original_Order_No [OORN] <- szVideoConstant30A [VC30A]
     // SAR 8955602 - In copy mode get the original order's UTP flag
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          VA frm_mnSOTagDocOrdInvNo_DOCO [DOCO] = FI DocumentOrderInvoiceE [DOCO]
          GetSalesOrderHeaderTaxTag(B4205360.GetSalesOrderHeaderTaxTag)
               VA frm_OKCO_Original_Order_Co [OKCO] -> szCompanyKeyOrderNo [KCOO]
               VA frm_mnSOTagDocOrdInvNo_DOCO [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               VA frm_ODCT_Original_Order_Type [ODCT] -> szOrderType [DCTO]
               VA frm_cUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_cErrorFlag_EV01 [EV01] <- cErrorFlag [EV01]
          // SAR 8955607 - In Copy mode retain the Orig UTP
          VA frm_cOrigUseTaxedPrices_UTP [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
     End If
End If
//
VA frm_EV07_Template_Called [EV07] = "0"
//
//     Initialize flag that use for Cancel Line component ONLY
//
VA frm_STKT_ProcessCancelLine [STKT] = "0"
VA frm_LNID_Cancel [LNID] = "999.999"
//
//      SAR # 1709417
//      Initialise Source of Data variable
//
GC Source of Data [EV17] = <NULL>
//
// SAR 1789867
VA frm_INT01_Inserted_Row_Counter [INT01] = "0"
//
// SAR 1851739
VA frm_sz_HeaderAdjSchedule_ASN [ASN] = FI szHeaderAdjustmentScheduleN [ASN]
//
//      If Availability Check processing option is blank
//      Don't display Available Quantity
//
If PO cAvailabilityCheck [EV12] is equal to <Blank>
Or PO cAvailabilityCheck [EV12] is equal to <NULL>
     Hide Grid Column(FC Grid, GC QuantityAvailable)
End If
//
If VA frm_VR01_Default_Cust_PO [VR01] is greater than <Blank>
And VA frm_EV23_cBeginDocError [EV23] is equal to "1"
     Set Control Focus(FC Order Date [TRDJ])
     Set Control Focus(FC Grid)
     Get Max Grid Rows(FC Grid, VA frm_mnNumGridRows)
     VA frm_mnCurrentGridRow [MATH01] = "1"
     While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_mnNumGridRows [MATH01]
          Clear Grid Cell Error(FC Grid, VA frm_mnCurrentGridRow, GC Reference)
          Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
          GC Quantity Ordered [UORG] = GC Quantity Ordered [UORG]
          VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
     End While
End If
//
If PO cTransferOrderEntry [EV25] is equal to "1"
     // SAR 4393913 - hide detail branch/plant for transfer orders
     Hide Grid Column(FC Grid, GC Branch/Plant)
     Hide Grid Column(FC Grid, GC SupplierNumber)
     Hide Tab Page(FC Tab Control51, TP Detail Revisions)
     Disable Control(FC Business Unit [MCU])
     //    SAR 7293539 End
     Disable Control(FC Document Key Company [EKCO])
     Disable Control(FC Order Type [DCTO])
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC Order Type [DCTO])
     Disable Control(FC Document Key Company [EKCO])
     Set Current Tab Page(FC Tab Control51, TP Transfer Orders)
     Set Control Focus(FC Parent Business Unit [MCU1])
     Set Data Dictionary Overrides(FC SO Order Type,  <Data Dictionary Overrides>)
     // 5706117Change the data dictionary over-ride of
     // PO type same as that of FC-Order Type
     Set Data Dictionary Overrides(FC PO Type,  <Data Dictionary Overrides>)
     Set Data Dictionary Overrides(FC Transfer Prev OrderType,  <Data Dictionary Overrides>)
     Set Data Dictionary Overrides(FC Transfer Prev PO Type,  <Data Dictionary Overrides>)
     // SAR 8955602 - If in Transfer Order mode, change the ST Use Taxed Prices
     // flag name to Use Taxed Prices. Different names have been assigned to avoid
     // confusion while maintaining the code
     Set Control Text(FC ST Use Taxed Prices, TV Use Taxed Prices)
Else
     Hide Tab Page(FC Tab Control51, TP Transfer Orders)
End If
// SAR#2439041
// Hide Status Codes if its PO on Display tab set to HIDE
If PO cDisableStatusCodes [EV05] is equal to "2"
     Hide Grid Column(FC Grid, GC NextStatus)
     Hide Grid Column(FC Grid, GC LastStatus)
End If
//
If PO cShoppingCartMode [CART] is greater than <Blank>
     // ---------------------------------------------------------------------------
     // 6545212 CRM CSS
     // ---------------------------------------------------------------------------
     //
     VerticalFeature(B4002670.VerticalFeature)
          "42" -> szVerticalEnhancement [CACTN]
          VA frm_cUseCRMCSS_EV01 [EV01] <- cEnhancementExistance [MEOW]
     //
     If VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
          Press Button(FC PROCESS: Initialize CRM CSS)
     Else
          Hide Grid Column(FC Grid, GC CarrierNumber)
          Hide Grid Column(FC Grid, GC QuantityCanceled)
          Hide Grid Column(FC Grid, GC QuantityBackordered)
          Hide Grid Column(FC Grid, GC QuantityShipped)
          Set Form Title("Order Entry")
          //
          // 6545212 CRM CSS - hide CSS item number
          Hide Grid Column(FC Grid, GC ItemNumber_CSS)
     End If
     //
     //
     // SAR 2771132
     VA frm_cCommitInvInED_EV01 [EV01] = "1"
     // 6194117 - Set Column Headings as Unit Price and Extended Price
     Set Grid Column Heading(FC Grid, GC ForeignUnit Price, TV Unit Price)
     Set Grid Column Heading(FC Grid, GC ForeignExtended Price, TV Extended Price)
     // SAR 8955603 - Set newly added Forign Tax and prices field as domestic
     Set Grid Column Heading(FC Grid, GC Foreign TaxedUnit Price, TV Taxed Unit Price)
     Set Grid Column Heading(FC Grid, GC Foreign UnitTax Amount, TV Unit Tax Amount)
     Set Grid Column Heading(FC Grid, GC Foreign TaxedExtended Price, TV Taxed Extended Price)
     Set Grid Column Heading(FC Grid, GC Foreign ExtendedTax Amount, TV Extended Tax Amount)
     //
     // If in Shopping Cart mode, change the CSS Use Taxed Prices flag name to Use
     // Taxed Prices. Different names have been assigned to avoid confusion while
     // maintaining the code
     Set Control Text(FC CSS Use Taxed Prices, TV Use Taxed Prices)
     //
     // SAR 3412828
     Hide Control(FC Currently there are no items on your order.)
     Hide Control(FC These are the items currently on your order.
     You may select 'OK' to continue with checkout, 
     or select more items.)
     If SV Form_ Mode is equal to CO COPY_MODE
     Or SV Form_ Mode is equal to CO UPDATE_MODE
          //
          // 6545212 CRM CSS - do not show old css text
          If VA frm_cUseCRMCSS_EV01 [EV01] is not equal to "1"
               Show Control(FC These are the items currently on your order.
               You may select 'OK' to continue with checkout, 
               or select more items.)
          End If
     End If
     // SAR 4966507
Else
     Hide Control(FC Currently there are no items on your order.)
     Hide Control(FC These are the items currently on your order.
     You may select 'OK' to continue with checkout, 
     or select more items.)
     Hide Control(FC Reference [VR01])
     Hide Grid Column(FC Grid, GC ShipTo)
     // SAR 4966507
     //
     // 6545212 CRM CSS - hide CSS item number
     Hide Grid Column(FC Grid, GC ItemNumber_CSS)
End If
//
// SAR 3210126 - Begin ADD
If PO cAgreementProcessing [SCH1] is equal to <Blank>
Or PO cAgreementProcessing [SCH1] is equal to <NULL>
     Disable Grid(FC Grid,  <All Rows>, GC AgreementNumber)
     Disable Grid(FC Grid, <All Rows>, GC AgreementSupplement)
End If
// SAR 3210126 - End ADD
//
// SAR 6968012
GetUDCFeature(N4208020.GetUDCFeature)
     "42B" -> szSystemCode [SY]
     "AF" -> szRecordTypeCode [RT]
     "01" -> szUserDefinedCode [KY]
     VA frm_cPOOverrideFeatureEnabled [EV01] <- cFeatureEnabled [EV01]
If VA frm_cPOOverrideFeatureEnabled [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Purchase OrderCurrency Code)
     Hide Grid Column(FC Grid, GC Purchase OrderExchange Rate)
     Hide Grid Column(FC Grid, GC Purchase OrderExtended Cost)
     Hide Grid Column(FC Grid, GC Purchase OrderUnit Cost)
     Hide Grid Column(FC Grid, GC Purchase OrderUnit of Measure)
Else
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Hide Grid Column(FC Grid, GC Purchase OrderCurrency Code)
          Hide Grid Column(FC Grid, GC Purchase OrderExchange Rate)
          Hide Grid Column(FC Grid, GC Purchase OrderExtended Cost)
          Hide Grid Column(FC Grid, GC Purchase OrderUnit Cost)
          Hide Grid Column(FC Grid, GC Purchase OrderUnit of Measure)
     End If
End If
// SAR 6968012 end
//
// SAR 4925959 if DUAL UOM enhancement is not on hide DUAL UOM and DUAL Quantity
//
//
VerticalFeature(B4002670.VerticalFeature)
     "01" -> szVerticalEnhancement [CACTN]
     VA frm_cModuleExistance_MEOW [MEOW] <- cEnhancementExistance [MEOW]
If VA frm_cModuleExistance_MEOW [MEOW] is not equal to "1"
     Hide Grid Column(FC Grid, GC SecondaryUoM)
     Hide Grid Column(FC Grid, GC SecondaryQuantity)
End If
// SAR 4945140
If PO cEnableGrossProfitPricing [EV01] is not equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC ProfitMargin)
End If
// *************************************************************************
// SAR#5113442
VerticalFeature(B4002670.VerticalFeature)
     "02" -> szVerticalEnhancement [CACTN]
     VA frm_ProductVariantsModule_MEOW [MEOW] <- cEnhancementExistance [MEOW]
If VA frm_ProductVariantsModule_MEOW [MEOW] is not equal to "1"
     Hide Grid Column(FC Grid, GC Matrix ControlLine Number)
     Disable Control(HC Matri&x Order)
End If
// *************************************************************************
// SAR#4648630 Begin
If SV Form_ Mode is equal to CO ADD_MODE
Or PO cHideCommission [EV09] is equal to "1"
     Disable Control(HC &Header Commissions)
End If
// *************************************************************************
// Sar # 5775631
// SAR 8317539 – Deleted the variable VA frm_EV01_RecordAdded initialization
//
//
// *************************************************************************
// SAR 5814943 - Begins
VA frm_cDisplayBeforeAcceptMode [EV01] = <Blank>
Disable Control(HC Auto Promise)
// SAR 8585461 - Scenario Manager processing option removed
! Disable Control(Could not resolve Form Control. 904)
//
// SAR 6925223-Check the OP processing option
// SAR 8585461 - Scenario Manager processing option removed
If PO cOrderPromising [EV01] is equal to "1"
And FI mnProjectNumber [PRJM] is less than or equal to "0"
     Enable Control(HC Auto Promise)
     // SAR 6450723 Removed PO cDisplayBeforeAcceptScenario
     VA frm_cDisplayBeforeAcceptMode [EV01] = "1"
     // SAR 7242281 - Commented out the code to enable Scenario Manager form exit
     ! If PO cOrderPromising [EV01] is equal to "2"
          ! Enable Control(Could not resolve Form Control. 904)
     ! End If
End If
// SAR 5814943 - Ends
// *************************************************************************
//
// SAR 6131571
//
If PO cShoppingCartMode [CART] is equal to <Blank>
Or PO cShoppingCartMode [CART] is equal to <NULL>
     Disable Control(HC Delete L&ine)
     Disable Control(HC De&lete All Lines)
End If
//
// SAR 6732229 - Create & Initialize reprice variables
VA grd_cRepriceWrittenToWF_EV01 [EV01] = "0"
VA frm_nRepriceCounter_INT01 [INT01] = "0"
//
//
//    BUG# 11904715 - PMPN Enhancements
//    Hide PMPN if PMPN Module Existance is turned off
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY31MP" -> szDataItem [DTAI]
     VA frm_cPMPNInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cPMPNInstalled_EV01 [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Project Mfg Production Number)
     Disable Control(HC Generate Prod No.)
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Clear Screen Before Add
Event GUID: 909335b5-a23d-11d0-a204-0000f6728a56
=============================================
If PO cShoppingCartMode [CART] is not equal to "1"
Or SV Form_ Mode is equal to CO COPY_MODE
     FC Order Number [DOCO] = "0"
     FC Order Company [KCOO] = <Blank>
     FC Order Date [TRDJ] = <NULL>
     FC Reference [VR01] = <NULL>
     // SAR 8824223 Clear Exchange Rate for Copy Mode
     FC Exchange Rate [CRR] = <NULL>
     //
     // SAR 8470795 - Set a warning if the user is copying an order with a dirty
     // kit
     If VA frm_cCopyingDirtyKit [EV01] is equal to "1"
          Set Control Error(FC Grid, "42B51")
     End If
     // ************************************************************************
     // SAR 2953260
     // The Sold To and Ship To Address should be retained on a COPY.
     // ************************************************************************
     If SV Form_ Mode is not equal to CO COPY_MODE
          FC Long Address Number [ALKY] = <NULL>
          FC Long Address Number [ALKY] = <NULL>
          FC Address Number [AN8] = <NULL>
          FC Ship To [SHAN] = <NULL>
          If SV Engine_Type is not equal to CO WINDOWS_ENGINE
               FC Description [DL01] = <NULL>
               FC Description [DL01] = <NULL>
               //
               // SAR 8953108 - Apparel Enhancement
               // Clear the Associated Descriptions for Apparel Collection fields
               //
               If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
                    FC Description [DL01] = <NULL>
                    FC Description [DL01] = <NULL>
                    FC Description [DL01] = <NULL>
               End If
               //
          End If
     Else
          If FC Long Address Number [ALKY] is equal to <Blank>
          Or FC Long Address Number [ALKY] is equal to <NULL>
               ScrubAddressNumber(B0100016.ScrubAddressNumber)
                    FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    UNDEFINED <> szTaxid [TAX]
                    "2" -> cInputSelection [EV01]
                    UNDEFINED <> cSuccessFlag [EV02]
                    UNDEFINED <> szNameAlpha [ALPH]
                    UNDEFINED <> szLongAddressKey [MLNM]
          End If
          If FC Long Address Number [ALKY] is equal to <Blank>
          Or FC Long Address Number [ALKY] is equal to <NULL>
               ScrubAddressNumber(B0100016.ScrubAddressNumber)
                    FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
                    FC Ship To [SHAN] -> mnAddressNumber [AN8]
                    UNDEFINED <> szTaxid [TAX]
                    "2" -> cInputSelection [EV01]
                    UNDEFINED <> cSuccessFlag [EV02]
                    UNDEFINED <> szNameAlpha [ALPH]
                    UNDEFINED <> szLongAddressKey [MLNM]
          End If
     End If
End If
// SAR 5136951
VA frm_cOKButtonClicked_EV01 [EV01] = <NULL>
VA frm_cFreeGoodExitEnabled_EV01 [EV01] = <NULL>
Disable Control(HC Free G&ood Catalog)

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Post Dialog is Initialized
Event GUID: f57df5df-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_F4301_Pointer [GENLNG]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
VA frm_cCollValidationErrors_ERRC [ERRC] = "0"
//
// SAR 6407389 - Initialise the upsell warning set to 0.
VA frm_cUpsellWarningSet_EV01 [EV01] = "0"
// SAR 8486033
VA frm_cCancelReprice [VC01B] = <Blank>
//
// SAR 8955602 - Initialize variable
VA frm_cInvalidUTPChange_EV01 [EV01] = "0"
//
// SAR 8942052 - Value to be retained when passed thro parameterized URL
If FI szPONumber [VR01] is greater than <Blank>
     FC Reference [VR01] = FI szPONumber [VR01]
End If
//
// SAR 6480164
If SV Form_ Mode is equal to CO UPDATE_MODE
     If FI mnProcessID [PEID] is less than or equal to <Blank>
     Or FI mnTransactionID [TCID] is less than or equal to <Blank>
          RetrieveProcessAndTransactionID(B0001060.RetrieveProcessAndTransactionID)
               FI mnProcessID [PEID] <- mnProcessID [PEID]
               FI mnTransactionID [TCID] <- mnTransactionID [TCID]
     End If
End If
// SAR# 4541912 Begin
//
// SAR 7855925 - Begins - Customer segment items to be enabled in change mode
// also
! If SV Form_ Mode is not equal to CO ADD_MODE
     ! Disable Control(HC Customer Se&g Items)
     ! Disable Control(HC Customer Se&g Items)
! End If
// SAR 7855925 - Ends
// also
If PO szCustomerSegmentItemsVersion [CSIV] is equal to <Blank>
Or PO szCustomerSegmentItemsVersion [CSIV] is equal to <NULL>
     VA frm_szCustSegItemsVersion_CSIV [CSIV] = "ZJDE0001"
Else
     VA frm_szCustSegItemsVersion_CSIV [CSIV] = PO szCustomerSegmentItemsVersion [CSIV]
End If
VA frm_CheckOKButtonClicked [EV01] = "0"
// End SAR# 4541912
//
If PO cShoppingCartMode [CART] is less than or equal to <Blank>
And FI cShoppingCartMode [CART] is greater than <Blank>
     PO cShoppingCartMode [CART] = FI cShoppingCartMode [CART]
End If
//
// SAR 8944140:  SLR Inquiry/Override form (P4277711)--disable access for CSS
If PO cShoppingCartMode [CART] is equal to "1"
     Disable Control(HC Service &Level Rules)
     Disable Control(HC Service Level &Rules)
End If
//
// SAR#2451403
// Only Bypass New Line should be used in Add or Copy mode.
If SV Form_ Mode is equal to CO COPY_MODE
Or SV Form_ Mode is equal to CO ADD_MODE
     Disable Control(HC &Cancel Line)
End If
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
Or FI szTOEToBranchPlant [MCU2] is not equal to <Blank>
     VA frm_ACTI_Action_Code [ACTI] = "A"
Else
     VA frm_ACTI_Action_Code [ACTI] = "C"
End If
//
// If Shopping Cart Mode, set up/retrieve CSS Info Cache
//
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
And VA frm_EV19_End_Doc_Called [EV19] is not equal to "1"
     // SAR 3178921 - if in update mode, pass in a C as the action code
     // Also, Enable BitMap is Add Mode, Pass Back PrevRecord Flag and UserAN8
     // ---------------------------------------------------------------------------
     // CRMCSS - Do not update cssinfo cache in update mode.
     // ---------------------------------------------------------------------------
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          // SAR 6212080 - Retrieve Currency Code Variables
          //
          // 6545212 CRM CSS - retrieve Override Sold To Ship To flag.
          //                                - load F42CSS ShipTo to header ship to
          //
          CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
               VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
               VA frm_szVersion_VERS [VERS] <> szVersion [VERS]
               FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
               FC Business Unit [MCU] <> szCostCenter [MCU]
               FC Ship To [SHAN] <> mnAddressNumberShipTo [SHAN]
               FC Address Number [AN8] <> mnSoldToAddressNumber [AN8]
               VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
               VA frm_cCSSPrevRecordFound_EV01 [EV01] <- cPreviousSessionFound [EV01]
               VA frm_mnSoldToShipToOverridden [URAB] <- mnUserReservedNumber [URAB]
               VA frm_szCSSShipToStrucType_OSTP [OSTP] <> szShipToStructureType [OSTP]
               VA frm_szCSSBaseCurrencyCode_CRDC [CRDC] <- szBaseCurrencyCode [CRDC]
               VA frm_szCSSCurrencyCode_CRCD [CRCD] <- szCustomerCurrencyCode [CRCD]
          Enable Control(FC Empty Shopping Cart)
     End If
     //
     // ---------------------------------------------------------------------------
     // 6545212 CRM CSS
     // ---------------------------------------------------------------------------
     If VA frm_cUseCRMCSS_EV01 [EV01] is equal to "1"
          If SV Form_ Mode is equal to CO ADD_MODE
               //
               Press Button(FC PROCESS: Override CRM CSS)
               //
          End If
     Else
          //
          If VA frm_cCSSPrevRecordFound_EV01 [EV01] is equal to "1"
               Call App:P4210NT Form:W4210NTB Version:ZJDE0001
                    VA frm_mnUserABNumber_AN8 [AN8] -> mnUserAddressNumber [AN8]
                    VA frm_CTID_Computer_ID [CTID] -> szComputerID [CTID]
                    FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
                    UNDEFINED <> szProgramId [PID]
                    UNDEFINED <> cUseCacheOrWF [EV01]
                    VA frm_szVersion_VERS [VERS] -> szVersion [VERS]
               // SAR 3257581 - if the user deletes the previous records, create a new CSS
               // cache/workfile record.
               // SAR 6212080 - Retrieve Currency Code Variables
               CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
                    VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
                    VA frm_szVersion_VERS [VERS] <> szVersion [VERS]
                    FI Jobnumber [JOBS] <> mnJobnumberA [JOBS]
                    FC Business Unit [MCU] <> szCostCenter [MCU]
                    BC Address Number - Ship To (F4211.0) [SHAN] <> mnAddressNumberShipTo [SHAN]
                    UNDEFINED <> cActionCode [ACTN]
                    UNDEFINED <> mnAddressNumberParent [PA8]
                    FC Address Number [AN8] <> mnSoldToAddressNumber [AN8]
                    VA frm_CTID_Computer_ID [CTID] <> szComputerID [CTID]
                    UNDEFINED <> mnLineNumIncrement [LINN]
                    VA frm_cCSSPrevRecordFound_EV01 [EV01] <- cPreviousSessionFound [EV01]
                    UNDEFINED <> cGenericChar_EV01 [EV01]
                    UNDEFINED <> szGenericString_DL01 [DL01]
                    UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
                    UNDEFINED <> szUserReservedCode [URCD]
                    UNDEFINED <> mnUserReservedAmount [URAT]
                    UNDEFINED <> jdUserReservedDate [URDT]
                    UNDEFINED <> mnUserReservedNumber [URAB]
                    UNDEFINED <> szUserReservedReference [URRF]
                    VA frm_szCSSShipToStrucType_OSTP [OSTP] <> szShipToStructureType [OSTP]
                    VA frm_szCSSBaseCurrencyCode_CRDC [CRDC] <- szBaseCurrencyCode [CRDC]
                    VA frm_szCSSCurrencyCode_CRCD [CRCD] <- szCustomerCurrencyCode [CRCD]
               Press Button(HC Cancel/Close)
               // End SAR 3257581
          End If
     End If
     //
     // // SAR 2850720 - blank out job number when in copy mode so that the job numbe
     //  will be created in Begin Doc
     If SV Form_ Mode is equal to CO COPY_MODE
          FI Jobnumber [JOBS] = <NULL>
     End If
End If
//
//   If PO Default ShipTo is on, Not other default Branch/Plant will be in effec
//   and Blank out the FC Business Unit and let the BeginDoc deault it in
//
//
// *************************************************************************
// SAR 2842375
// Add IF condition so that B/P defaulting does not happen on a Change Mode
// *************************************************************************
//
If SV Form_ Mode is not equal to CO UPDATE_MODE
     // 7400411 - Remove If PO cDefaultShipToBranch is not equal to "1"
     // SAR 4169356 - blank out FC so it can be defaulted
     If FI UpdatedToHdrWF [EV20] is not equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
          FC Business Unit [MCU] = <NULL>
     End If
     // SAR 4169356 - code moved from here
     If FC Business Unit [MCU] is less than or equal to <Blank>
     And PO szDefaultBranchPlant [MCU] is greater than <Blank>
          FC Business Unit [MCU] = PO szDefaultBranchPlant [MCU]
     End If
     If FC Business Unit [MCU] is less than or equal to <Blank>
          // SAR 5493342
          If PO cDefaultShipToBranch [EV02] is equal to <Blank>
          Or PO cDefaultShipToBranch [EV02] is equal to <NULL>
               GetDefaultBranch(B4000370.GetDefaultBranch)
                    FC Business Unit [MCU] <- szBranch [MCU]
                    UNDEFINED <> szApprovalRouteCode [ARTG]
          End If
     End If
     // SAR 4169356 - code moved to here and modified
     If FI Costcenter [MCU] is greater than <Blank>
     And FC Business Unit [MCU] is less than or equal to <Blank>
          FC Business Unit [MCU] = FI Costcenter [MCU]
     End If
End If
// *************************************************************************
// SAR 3180035 - Begin ADD
// If the B/P was defaulted with a non-blank value then its Company
// must be retrieved.
// *************************************************************************
If FC Order Company [KCOO] is equal to <Blank>
Or FC Order Company [KCOO] is equal to <NULL>
     // SAR 4439707
     If FC Business Unit [MCU] is not equal to <Blank>
     And FC Business Unit [MCU] is not equal to <NULL>
     And FC Business Unit [MCU] is not equal to "0"
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] -> szCostCenter [MCU0]
               FC Order Company [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
     End If
End If
// SAR 8598684 Begin - If company was fetched get the company currency code.
If FC Order Company [KCOO] is greater than "0"
     If SL CurrencyProcessing is not equal to "N"
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               FC Order Company [KCOO] -> szCompany [CO]
               FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
     End If
End If
// SAR 3180035 - End ADD
//
// SAR 6606732 - commented out the following condition
! If FC Business Unit [MCU] is less than or equal to <Blank>
! And PO szDefaultBranchPlant [MCU] is greater than <Blank>
     ! FC Parent Business Unit [MCU1] = PO szDefaultBranchPlant [MCU]
! End If
//
//     If F4211 Begin Document was called already to edit the header data and a
//     record was written to the header work file, map those values to the heade
//     fields.
//
VA frm_EV17_Hdr_Work_File [EV17] = FI UpdatedToHdrWF [EV20]
If VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
     FC Order Type [DCTO] = FI OrderType [DCTO]
     FC Order Number [DOCO] = FI DocumentOrderInvoiceE [DOCO]
     FC Order Company [KCOO] = FI CompanyKeyOrderNo [KCOO]
     FC Reference [VR01] = FI szPONumber [VR01]
     FC Address Number [AN8] = FI Addressnumber [AN8]
     FC Ship To [SHAN] = FI Addressnumbershipto [SHAN]
     FC Mode (F) [CRRM] = FI Currencymode [CRRM]
     FC Currency Code [CRCD] = FI Currencycodefrom [CRCD]
     FC Exchange Rate [CRR] = FI Currencyconverrateov [CRR]
     FC Order Date [TRDJ] = FI Datetransactionjulian [TRDJ]
     VA frm_CTID_Computer_ID [CTID] = FI Computerid [CTID]
     // SAR 3483271 - Begin ADD
     FC Long Address Number [ALKY] = FI szLongAddressSoldTo [ALKY]
     FC Long Address Number [ALKY] = FI szLongAddressShipTo [ALKY]
     // SAR 3483271 - End ADD
     // SAR 4648200
     FC Business Unit [MCU] = FI Costcenter [MCU]
     // End SAR 4648200
     // SAR 5308881 - BEGIN - Date Sensitive Customer Sets
     FC Long Address Number [ALKY] = FI szLongAddressDeliverTo [ALKY]
     FC Long Address Number [ALKY] = FI szLongAddressInvoicedTo [ALKY]
     FC Long Address Number [ALKY] = FI szLongAddressPaidBy [ALKY]
     FC Long Address Number [ALKY] = FI szLongAddressForwardedTo [ALKY]
     FC Deliver To [DVAN] = FI mnDeliveredTo [DVAN]
     FC Address Number - Invoiced To [ITAN] = FI mnInvoicedTo [ITAN]
     FC Paid By [PBAN] = FI mnPaidBy [PBAN]
     FC Forwarded To [FTAN] = FI mnForwardedTo [FTAN]
     FC Address Number to use for Transportation [AUFI] = FI cAddressNumberForTransport [AUFI]
     FC Address Number to use for Tax [AUFT] = FI cAddressNumberForTax [AUFT]
     // SAR 5308881 - END - Date Sensitive Customer Sets
     // SAR 8955602 - If the PO mode is do header first then fetch the use taxed
     // prices flag from the FI values passed from the header form
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          If FI cUseTaxedPrices [UTP] is equal to ("0","1")
               FC Use Taxed Prices [UTP] = FI cUseTaxedPrices [UTP]
               VA frm_cUseTaxedPrices_UTP [UTP] = FI cUseTaxedPrices [UTP]
          Else
               Hide Control(FC Use Taxed Prices [UTP])
          End If
     End If
Else
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          If SV Form_ Mode is equal to CO ADD_MODE
               // In Add mode assign BLANK value to UTP flag variable so that it can be
               // retrieved from the Begin Doc call later
               VA frm_cUseTaxedPrices_UTP [UTP] = <Blank>
               VA frm_cUseTaxedPricesCredit_UTP [UTP] = <Blank>
               // SAR 8955603 - In Shopping cArt mode, if already a line is existing, disable
               // the CSS use Taxed Price checkbox
               If PO cShoppingCartMode [CART] is equal to "1"
                    If VA frm_cCSSPrevRecordFound_EV01 [EV01] is not equal to <Blank>
                    And VA frm_cCSSPrevRecordFound_EV01 [EV01] is not equal to <NULL>
                         Disable Control(FC CSS Use Taxed Prices [UTP])
                    End If
               End If
          Else
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    VA frm_cErrorFlag_EV01 [EV01] = "0"
                    // If in update mode and if detail form is launched first then get the value
                    // of UTP flag from the table F4201TX by calling BSFN B4205360
                    GetSalesOrderHeaderTaxTag(B4205360.GetSalesOrderHeaderTaxTag)
                         FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                         FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                         FC Order Type [DCTO] -> szOrderType [DCTO]
                         VA frm_cUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         VA frm_cErrorFlag_EV01 [EV01] <- cErrorFlag [EV01]
                    If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
                         Hide Control(FC Use Taxed Prices [UTP])
                         Hide Control(FC Use Taxed Prices [UTP])
                         // SAR 8955603 - Hide the CSS Use Taxed Prices checkbox
                         Hide Control(FC CSS Use Taxed Prices [UTP])
                    End If
               End If
               //
               // If in COPY MODE, the error would have been set during call to function Get
               // Sales Order Header Tag in Dialog is Initialized
               If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
                    // On error, mark the flag as 0. Else use the value returned by the BSFN
                    FC Use Taxed Prices [UTP] = "0"
               Else
                    FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
               End If
               VA frm_cUseTaxedPrices_UTP [UTP] = FC Use Taxed Prices [UTP]
          End If
          If PO cTransferOrderEntry [EV25] is equal to "1"
               FC Use Taxed Prices [UTP] = FC Use Taxed Prices [UTP]
          End If
          // SAR 8955603 - SOM Taxed Prices
          // Shopping Cart
          // cTaskToComplete =Blank/NULL : Add SO from Portal
          // cTaskToComplete =1 : Add SO from Product Catalog
          // cTaskToComplete =2 : Update SO
          If PO cShoppingCartMode [CART] is equal to "1"
               If FI cTaskToComplete [EV01] is equal to <Blank>
               Or FI cTaskToComplete [EV01] is equal to <NULL>
               Or FI cTaskToComplete [EV01] is equal to "1"
                    VA frm_cUseTaxedPrices_UTP [UTP] = FC CSS Use Taxed Prices [UTP]
               Else
                    If FI cTaskToComplete [EV01] is equal to "2"
                         FC CSS Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
                    End If
               End If
          End If
     End If
End If
//
// SAR 8955603 - Disable tax amount columns. Disable/hide prices
If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     Disable Grid(FC Grid, <All Rows>, GC Unit TaxAmount)
     Disable Grid(FC Grid, <All Rows>, GC ExtendedTax Amount)
     Disable Grid(FC Grid, <All Rows>, GC Foreign ExtendedTax Amount)
     Disable Grid(FC Grid, <All Rows>, GC Foreign ExtendedTax Amount)
End If
//
Press Button(FC Disable/Hide Price)
//
If FC Order Type [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
If FC Order Type [DCTO] is equal to <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
If VA frm_CRYR_Currency_Control [CRYR] is less than or equal to <Blank>
     VA frm_CRYR_Currency_Control [CRYR] = SL CurrencyProcessing
End If
If VA frm_CRYR_Currency_Control [CRYR] is equal to "N"
     Hide Control(FC Mode (F) [CRRM])
     Hide Control(FC Currency Code [CRCD])
     Hide Control(FC Exchange Rate [CRR])
     Hide Control(FC To Currency Code [CRDC])
     FC Mode (F) [CRRM] = "D"
     // SAR 6968012
     Hide Grid Column(FC Grid, GC Purchase OrderExchange Rate)
     Hide Grid Column(FC Grid, GC Purchase OrderCurrency Code)
Else
     Show Control(FC Mode (F) [CRRM])
     FC Mode (F) [CRRM] = BC Currency Mode-Foreign or Domestic Entry (F4201.0) [CRRM]
     If FI Currencycodeto [CRDC] is not equal to <Blank>
          FC To Currency Code [CRDC] = FI Currencycodeto [CRDC]
     End If
     //
     //     If both the Transaction and Base Currency are the same, disable the
     //     'Foreign' checkbox. (used to be done only in Chng -changed to all modes )
     //
     If BC Currency Code - From (F4201.0) [CRCD] is equal to FI Currencycodeto [CRDC]
     And BC Currency Code - From (F4201.0) [CRCD] is greater than <Blank>
     Or BC Currency Mode-Foreign or Domestic Entry (F4201.0) [CRRM] is equal to "D"
          FC Mode (F) [CRRM] = "D"
          Disable Control(FC Mode (F) [CRRM])
     End If
     If SV Form_ Mode is equal to CO ADD_MODE
          If FI Currencymode [CRRM] is equal to or empty <Blank>
               FC Mode (F) [CRRM] = "F"
          Else
               FC Mode (F) [CRRM] = FI Currencymode [CRRM]
          End If
     End If
     Show Control(FC Currency Code [CRCD])
     Show Control(FC Exchange Rate [CRR])
     Show Control(FC To Currency Code [CRDC])
     // SAR 6968012
     If PO cShoppingCartMode [CART] is equal to or empty <Blank>
          Show Grid Column(FC Grid, GC Purchase OrderExchange Rate)
          Show Grid Column(FC Grid, GC Purchase OrderCurrency Code)
     End If
End If
Press Button(FC Hide/Show Currency (HIDDEN))
VA frm_EV19_End_Doc_Called [EV19] = "0"
//
//     If F4211 Begin Document was called or in CHANGE mode, protect all of the
//     header fields.
If SV Form_ Mode is equal to CO UPDATE_MODE
Or VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
     If VA frm_CRYR_Currency_Control [CRYR] is not equal to "N"
          Disable Control(FC Exchange Rate [CRR])
          Disable Control(FC Currency Code [CRCD])
     End If
     Disable Control(FC Business Unit [MCU])
     Disable Control(FC Order Date [TRDJ])
     // SAR 3483271 - Begin ADD
     If FC Long Address Number [ALKY] is equal to <Blank>
     Or FC Long Address Number [ALKY] is equal to <NULL>
          ScrubAddressNumber(B0100016.ScrubAddressNumber)
               FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               "2" -> cInputSelection [EV01]
               FC Description [DL01] <> szNameAlpha [ALPH]
     End If
     If FC Long Address Number [ALKY] is equal to <Blank>
     Or FC Long Address Number [ALKY] is equal to <NULL>
          ScrubAddressNumber(B0100016.ScrubAddressNumber)
               FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
               FC Ship To [SHAN] -> mnAddressNumber [AN8]
               "2" -> cInputSelection [EV01]
               FC Description [DL01] <> szNameAlpha [ALPH]
     End If
     // SAR 3483271 - End ADD
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Address Number [AN8])
     Disable Control(FC Ship To [SHAN])
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC Order Type [DCTO])
     Disable Control(FC Order Company [KCOO])
     Disable Control(FC Reference [VR01])
     // begin of SAR# 2368685
     Disable Control(FC Mode (F) [CRRM])
     // end of SAR# 2368685
     // Begin SAR 5308881 -Date Sensitive Customer Sets
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Address Number to use for Tax [AUFT])
     Disable Control(FC Address Number to use for Transportation [AUFI])
     // End SAR 5308881 -Date Sensitive Customer Sets
     // SAR 8955602 - If the taxed prices enhancement is on, disable the correct
     // Use Taxed Prices checkbox.
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          // In update mode the UTP check box should be disabled
          If PO cTransferOrderEntry [EV25] is equal to "1"
               Disable Control(FC Use Taxed Prices [UTP])
          Else
               Disable Control(FC Use Taxed Prices [UTP])
               // SAR 8955603 - In shopping cart mode, disable the CSS Use Taxed price
               // checkbox also
               If PO cShoppingCartMode [CART] is equal to "1"
                    Disable Control(FC CSS Use Taxed Prices [UTP])
               End If
          End If
     End If
     //
     // SAR 8953108 - Apparel Enhancement
     // Disable Apparel Collection fields when coming
     // through SO Header first and in Update mode
     //
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
          Disable Control(FC Collection [C9COLL])
          Disable Control(FC SeasonCode [C9SEAC])
          Disable Control(FC Season Year [C9SEAY])
          Disable Control(FC Price Reference Date [C9PRDJ])
     End If
     //
     Set Control Focus(FC Grid)
End If
//     Get computer id from local machine if it is blank.
//
If VA frm_CTID_Computer_ID [CTID] is less than or equal to <Blank>
     GetLocalComputerId(B9800181.GetLocalComputerId)
          VA frm_CTID_Computer_ID [CTID] <- szMachineKey [MKEY]
     // SAR#4849773
     FI Computerid [CTID] = VA frm_CTID_Computer_ID [CTID]
End If
GetAuditInfo(B9800100.GetAuditInfo)
     VA frm_USER_User_ID [USER] <> szUserName [USER]
     VA frm_UPDJ_System_Date [UPDJ] <> jdDate [DTE]
     VA frm_TMCR_Time_Of_Day [TMCR] <> mnTime [TME0]
     UNDEFINED <> szWorkstation_UserId [JOBN]
     UNDEFINED <> szMachineKey [MKEY]
//
//     Display order total if the header BV is read.
//
If SV Form_ Mode is not equal to CO ADD_MODE
     If SV Form_ Mode is not equal to CO COPY_MODE
          FC OTOT: Order Total Display [TOT1] = BC Amount - Order Gross (F4201.0) [OTOT]
          FC FAP-Foreign Total Display [TOT2] = BC Amount - Foreign Open (F4201.0) [FAP]
          //
     End If
Else
     //
     // *************************************************************************
     // SAR 2821152 - ADD 02/03/99
     // Add IF condition to skip Set Focus logic when doing Transfer Orders.
     // *************************************************************************
     //
     If PO cTransferOrderEntry [EV25] is not equal to "1"
          If FC Business Unit [MCU] is less than or equal to <Blank>
               Set Control Focus(FC Business Unit [MCU])
          Else
               VA frm_EMCU_DfltHdrBranchPlant [EMCU] = FC Business Unit [MCU]
               Set Control Focus(FC Long Address Number [ALKY])
          End If
     End If
End If
VA frm_cGridFilled [EV01] = "N"
//
If FC Order Company [KCOO] is greater than <Blank>
And FC Order Number [DOCO] is greater than <Blank>
And FC Order Type [DCTO] is greater than <Blank>
     Enable Control(HC Header Atta&chments)
Else
     Disable Control(HC Header Atta&chments)
End If
//
If PO cTransferOrderEntry [EV25] is equal to "1"
     If SV Form_ Mode is not equal to CO ADD_MODE
          //
          //      Copy detail revision fields to transfer order fields.
          //
          // SAR 7624545
          FC Business Unit [MCU] = FI Costcenter [MCU]
          FC Parent Business Unit [MCU1] = FC Business Unit [MCU]
          FC Order Type [DCTO] = FC Order Type [DCTO]
          FC Order Number [DOC1] = FC Order Number [DOCO]
          VA frm_OKC_From_Company [OKC] = FC Order Company [KCOO]
          VA frm_AN8_Supplier [AN8] = FC Address Number [AN8]
          FC Order Date [TRDJ] = FC Order Date [TRDJ]
          ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
               BC Related PO/SO/WO Number (F4201.0) [RORN] -> szGenericString [DSC1]
               FC Order Number [DOC2] <- mnNumericValue [ITM]
               UNDEFINED <> cErrorCode [ERRC]
          FC Order Type [DCIN] = BC Related PO/SO/WO Order Type (F4201.0) [RCTO]
          VA frm_OKCO_To_Company [OKCO] = BC Company - Key (Related Order) (F4201.0) [RKCO]
          GetPurchaseOrderHeader(B4300130.GetPurchaseOrderHeader)
               VA frm_OKCO_To_Company [OKCO] -> szDocumentCompany [KCOO]
               FC Order Number [DOC2] -> mnDocumentNumber [DOCO]
               FC Order Type [DCIN] -> szDocumentType [DCTO]
               "1" -> cCallType [EV01]
               "1" -> cReturnF4301PtrFlag [EV02]
               UNDEFINED <> cErrorCode [ERR]
               VA evt_F4301_Pointer [GENLNG] <- idF4301RowPtr [GENLNG]
               UNDEFINED <> szErrorMessageID [DTAI]
               UNDEFINED <> cSuppressErrorMessage [EV01]
          ReturnPOHeaderInformation(B4300190.ReturnPOHeaderInformation)
               VA evt_F4301_Pointer [GENLNG] -> idPointerToF4301DS [GENLNG]
               UNDEFINED <> mnSupplierNumber [AN8]
               UNDEFINED <> mnShipToAddress [SHAN]
               FC Business Unit 2 [MCU2] <- szBranchPlant [MCU]
               UNDEFINED <> szOrderedBy [ORBY]
               UNDEFINED <> szOrderTakenBy [TKBY]
               UNDEFINED <> szOrderHoldCode [HOLD]
               UNDEFINED <> cAssociatedTextFlag [ATXT]
               UNDEFINED <> cPurchaseOrderStatus [OSTS]
               UNDEFINED <> mnOrderTotalDomestic [OTOT]
               UNDEFINED <> mnOrderTotalForeign [FAP]
               UNDEFINED <> cCurrencyMode [CRRM]
               FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
               FC Exchange Rate (Divisor) [CRRD] <- mnExchangeRate [CRR]
               UNDEFINED <> szUserID [USER]
               UNDEFINED <> szProgramID [PID]
               UNDEFINED <> szJobNumber [JOBN]
               UNDEFINED <> jdDateUpdated [UPMJ]
               UNDEFINED <> mnTimeOfDay [TDAY]
          FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
               VA evt_F4301_Pointer [GENLNG] -> idGenericLong [GENLNG]
          //
          If SL CurrencyProcessing is not equal to "N"
               FC Currency Code [CRCD] = FC Currency Code [CRCD]
               FC Currency Code [CCF1] = FC To Currency Code [CRDC]
               FC Exchange Rate [CRR] = FC Exchange Rate [CRR]
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    VA frm_OKCO_To_Company [OKCO] -> szCompany [CO]
                    FC Currency Code [CCF2] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
          Else
               FC To Currency Code [CRDC] = <Blank>
               FC Exchange Rate (Divisor) [CRRD] = <Blank>
          End If
     Else
          // SAR 6606732
          If PO szDefaultBranchPlant [MCU] is greater than <Blank>
               FC Parent Business Unit [MCU1] = PO szDefaultBranchPlant [MCU]
          Else
               FC Parent Business Unit [MCU1] = FC Business Unit [MCU]
          End If
          // SAR 2657735
          Set Control Focus(FC Parent Business Unit [MCU1])
          //
     End If
End If
//
If PO cTransferOrderEntry [EV25] is equal to "1"
     Disable Control(FC Currency Code [CCF1])
     Disable Control(FC Currency Code [CCF2])
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Control(FC Parent Business Unit [MCU1])
          Disable Control(FC Business Unit 2 [MCU2])
          Disable Control(FC Order Number [DOC1])
          Disable Control(FC Order Number [DOC2])
          Disable Control(FC Order Type [DCTO])
          Disable Control(FC Order Type [DCIN])
          Disable Control(FC Currency Code [CRCD])
          Disable Control(FC To Currency Code [CRDC])
          Disable Control(FC Exchange Rate [CRR])
          Disable Control(FC Exchange Rate (Divisor) [CRRD])
          Disable Control(FC Landed Cost Rule [PRP5])
          Disable Control(FC Order Date [TRDJ])
          // SAR 7624545
          Disable Control(FC Business Unit [MCU])
     End If
End If
//
If SV Form_ Mode is equal to CO COPY_MODE
And PO cTransferOrderEntry [EV25] is equal to "1"
     //
     // SAR 2657735
     Set Control Focus(FC Parent Business Unit [MCU1])
     //
     FC Order Number [DOC2] = <NULL>
     FC Order Type [DCIN] = <NULL>
End If
// SAR 1746314
// SAR 8348394 - No need to retrieve ship/sold to description and credit msg
// after OK clicked. Avoid F03012 deadlock caused by F0301 Get Sold To Billing
// instruction accessing F03012
If VA frm_cIsOkButtonClicked_EV01 [EV01] is not equal to "1"
     If VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO UPDATE_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
          // ************************************************************************
          // SAR 3483271 - Begin ADD
          // Ship To description might have already been retrieved by F0101
          // Edit Address above so there is no need to retrieve it again.
          // ************************************************************************
          If FC Description [DL01] is equal to <Blank>
          Or FC Description [DL01] is equal to <NULL>
               GetAddressForOP(B4000810.GetAddressForOP)
                    FC Ship To [SHAN] -> mnAddressNumber [AN8]
                    FC Description [DL01] <- szMailingName [MLNM]
          End If
          VA frm_TSTA_Credit_Message [TSTA] = <NULL>
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               FC Description [DL01] <- szAlphaName [ALPH]
               VA frm_TSTA_Credit_Message [TSTA] <- szCreditMessage [CM]
               "1" -> cSuppressError [ERR]
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               Show Control(FC CREDIT MESSAGE [DL01])
               // SAR 7898204 Passed the language Preference to get Customised Message
               // description
               GetUDC(X0005.GetUDC)
                    "CM" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    "1" -> cSuppressErrorMessage [EV01]
          End If
          VA frm_TSTA_Credit_Message [TSTA] = <NULL>
          GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
               FC Address Number [AN8] -> mnSoldToAddress [AN8]
               "1" -> cSuppressErrorMsg [EV02]
               UNDEFINED <> cErrorCode [ERRC]
               VA frm_TSTA_Credit_Message [TSTA] <- szTemporaryCreditMsg [TSTA]
               UNDEFINED <> cBillingAddressNumber [BADT]
               UNDEFINED <> szTaxExplainationCode [EXR1]
               UNDEFINED <> cCustomerPORequireDate [PORQ]
               UNDEFINED <> szPaymentTerms [TRAR]
               UNDEFINED <> cPaymentInstructions [RYIN]
               UNDEFINED <> szCurrencyCode [CRCD]
               UNDEFINED <> szAdjustmentSchedule [ASN]
               UNDEFINED <> szCustomerPricingGroup [CPGP]
               UNDEFINED <> mnInvoiceCopies [INVC]
               UNDEFINED <> szHoldCode [HOLD]
               UNDEFINED <> szPrintMsg [INMG]
               UNDEFINED <> cPricePickList [PLST]
               VA frm_cSoldToBACKAllowed_BACK [BACK] <- cBackOrderAllowed [BACK]
               UNDEFINED <> cPriorityCode [PRIO]
               UNDEFINED <> mnTradeDiscount [TRDC]
               UNDEFINED <> mnMaximumOrder [MAXO]
               UNDEFINED <> mnMinimumOrder [MINO]
               UNDEFINED <> mnRelatedAddressNum [AN8R]
               UNDEFINED <> cInvoiceConsolidation [ICON]
               UNDEFINED <> cSendInvoiceTo [SITO]
               UNDEFINED <> cCreditCheckLevel [ARTO]
               UNDEFINED <> cCreditHoldExempt [EXHD]
               UNDEFINED <> szABAmntCurrCode [CRCA]
               UNDEFINED <> szGLClassCode [ARC]
               UNDEFINED <> cDeliveryNotFlag [EDF1]
               UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
               UNDEFINED <> cItemRestrictions [EDF2]
               FI CompanyKeyOrderNo [KCOO] -> szCompany [CO]
               UNDEFINED <> cAbcCodeSales [ABC1]
               UNDEFINED <> cAbcCodeMargin [ABC2]
               UNDEFINED <> cAbcCodeAverageDays [ABC3]
               UNDEFINED <> mnAverageDaysToPay [AVD]
               UNDEFINED <> szBuyingSegmentCode [BSC]
               UNDEFINED <> cBypassAuditLogging [BYAL]
               UNDEFINED <> szOPBusinessObjective [OPBO]
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               Show Control(FC TEMP CREDIT MESSAGE [DL01])
               // SAR 7898204 Passed the language Preference to get Customised Message
               // description
               GetUDC(X0005.GetUDC)
                    "TSTA" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC TEMP CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    "1" -> cSuppressErrorMessage [EV01]
          End If
     End If
End If
// SAR 1778455
VA frm_EV07_Misc_Button_Process [EV07] = "0"
//
// SAR 1965437
VA frm_mnOrginalShipToNumb_SHAN [SHAN] = FC Ship To [SHAN]
//
// SAR#2440122
If SV Form_ Mode is equal to CO COPY_MODE
     // SAR 8955603 - Store original Sold To, Ship To Numbers and Branch/Plant when
     // UTP concept is in use
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          If PO cTransferOrderEntry [EV25] is equal to "1"
               VA frm_szPrevMCU_MCU [MCU] = FC Business Unit 2 [MCU2]
          Else
               VA frm_mnPrevShipTo_AN8 [AN8] = [FC Long Address Number [ALKY]]
               VA frm_mnPrevSoldTo_AN8 [AN8] = [FC Long Address Number [ALKY]]
               VA frm_szPrevMCU_MCU [MCU] = FC Business Unit [MCU]
          End If
     End If
     VA frm_VR01_Default_Cust_PO [VR01] = <Blank>
     // SAR 4200974
Else
     VA frm_VR01_Default_Cust_PO [VR01] = FC Reference [VR01]
End If
//
VA frm_mnTriangulationRateFrom [MATH01] = FI mnTriangulationRateFrom [MATH01]
VA frm_mnTriangulationRateTo [MATH01] = FI mnTr [MATH01]
VA frm_cCurrencyConversionMethod [CRCM] = FI cCurrencyConversionMethod [CRCM]
//
// SAR 7524325 - Get Currency Coversion Method if it does not exist in change
// mode
If SV Form_ Mode is equal to CO UPDATE_MODE
     // SAR 7524325 - Get Base Currency Code if it does not exist in change mode
     If FC To Currency Code [CRDC] is less than or equal to <Blank>
          If FC Mode (F) [CRRM] is equal to "F"
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    FC Order Company [KCOO] -> szCompany [CO]
                    FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
          Else
               FC To Currency Code [CRDC] = FC Currency Code [CRCD]
          End If
     End If
     //
     // SAR 7220891 - Get Currency Coversion Method
     If VA frm_cCurrencyConversionMethod [CRCM] is less than or equal to <Blank>
     And FC To Currency Code [CRDC] is not equal to FC Currency Code [CRCD]
          // SAR 8620079 - Pass in correct currencyCodeFrom and currencyCodeTo
          F00151GetConversionMethod(B0000172.F00151GetConversionMethod)
               FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
               FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
               VA frm_cCurrencyConversionMethod [CRCM] <> cCurrencyConversionMethod [CRCM]
               FC Order Date [TRDJ] -> jdTransactionDate [EFT]
          // Bug #  11738762
          VA frm_CRYR_Currency_Control [CRYR] = VA frm_cCurrencyConversionMethod [CRCM]
     End If
End If
//
// CSS- If it is in web mode, attempt to load the grid from the Shopping Cart
// cache.  If processed records are found, suppress the fetch to F4211
//
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     Press Button(FC CSS Processing)
End If
//
// Use the Store & Forward flag to set the ProcessEdits flag that is passed into
// Begin Doc, Edit Line, and End Doc.
//
If PO cStoreAndForwardMode [SO15] is equal to <NULL>
Or PO cStoreAndForwardMode [SO15] is equal to <Blank>
     // ==full edit mode, Sales Order Entry
     VA frm_SO15_cCMProcessEdits [SO15] = "1"
End If
If PO cStoreAndForwardMode [SO15] is equal to "1"
     // ==partial edit mode, Store & Forward
     VA frm_SO15_cCMProcessEdits [SO15] = "3"
End If
If PO cStoreAndForwardMode [SO15] is equal to "2"
     // ==full edit mode, Store & forward
     VA frm_SO15_cCMProcessEdits [SO15] = "4"
End If
If PO cStoreAndForwardMode [SO15] is equal to "3"
     // ==price only edit mode, Store & forward
     VA frm_SO15_cCMProcessEdits [SO15] = "5"
End If
//
// SAR 2442961 Var Init
//
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_cKitProcFlagCopyMode_EV01 [EV01] = "0"
     VA frm_mnNewLineNumCopyMode_LNID [LNID] = "0"
End If
//
// Disable the Order Address Form Exit until Begin Doc is called and return no
// error
// SAR 3277056 - only disable the Order Address exit if the AN8 or the SHAN is
// not populated (the form is not in update mode)
If FC Address Number [AN8] is equal to "0"
Or FC Address Number [AN8] is equal to <NULL>
Or FC Address Number [AN8] is equal to <Blank>
     If FC Ship To [SHAN] is equal to "0"
     Or FC Ship To [SHAN] is equal to <Blank>
     Or FC Ship To [SHAN] is equal to <Blank>
          Disable Control(HC Order Addre&ss)
     End If
     // End SAR 3277056
End If
//
// ***********************************************************************
// SAR 3055672 - Begin ADD
// ***********************************************************************
// SAR 7172657 - Intialize VA frm_cPrepaymentWindowCalledYN = "C"
VA frm_cPrepaymentWindowCalledYN [EV01] = "C"
VA frm_cPaymentInstrument_RYIN [RYIN] = <Blank>
// SAR 3055672 - End ADD
// SAR 3305580 - load the CSS Customer PO with what is in the database
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     FC Reference [VR01] = FC Reference [VR01]
     VA frm_szPrevCSSCustPO_VR01 [VR01] = FC Reference [VR01]
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Control(FC Reference [VR01])
          Disable Control(HC Select Ship To)
     End If
Else
     Disable Control(HC Select Ship To)
End If
// SAR 3359078 - Determine if OW is detached or not
GetDetachedModeFlag(B0001070.GetDetachedModeFlag)
     VA frm_cDetachedMode_EV01 [EV01] <- cDetachedMode [EV01]
// SAR 4256871
VA frm_cCreditMemoExit [EV24] = <NULL>
// sar 5299216 - disable HC Commitment Control
If PO cCommitPreference [EV23] is not equal to("1","2")
Or SV Form_ Mode is equal to CO UPDATE_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
     Disable Control(HC Commitm&ent)
End If
// sar 5299216 - end
// DUP SAR 5434203 - Duplicate Customer PO Protected
If SV Form_ Mode is equal to CO COPY_MODE
And FI szPONumber [VR01] is not equal to <Blank>
And FI szPONumber [VR01] is not equal to <NULL>
And FI szPONumber [VR01] is not equal to "0"
     FC Reference [VR01] = FI szPONumber [VR01]
     VerifyCustomerPONumberIsUnique(B4200130.VerifyCustomerPONumberIsUnique)
          FC Reference [VR01] -> szCustomerPONumber [VR01]
          FC Address Number [AN8] -> mnCustomerNumber [AN8]
          UNDEFINED <> cErrorCode [ERRC]
End If
// sar 5299216 - end
// SAR 5216847
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA frm_cFormActionCode_ACTN [ACTN] = "C"
Else
     VA frm_cFormActionCode_ACTN [ACTN] = "A"
End If
VA frm_cB4502340AccumFlag_EV01 [EV01] = "0"
VA frm_cCreditMemoVIDWarning_EV01 [EV01] = <NULL>
VA grd_szCreditOrderFlags_ALPH [ALPH] = "0000000000000000000000000000000000000000"
// SAR 5953388
InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
     VA frm_szEndDocSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
// SAR 8955612 - Initiallize and Set  the SOEF internal Flag for Begin Doc
// call which would be used to Turn Off the TPSC if its a Store and Forward
// Order
InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
     VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
Or PO cStoreAndForwardMode [SO15] is equal to "3"
     SetSuppressTaxedPricesSOBD17(B4205103.SetSuppressTaxedPricesSOBD17)
          VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szBeginDocSOEMBFFlags [SOEF]
          "1" -> cValue [EV01]
End If
VA frm_cVIDChangeWarningSet_EV01 [EV01] = <NULL>
// End SAR 5216847
// **************************************************************************
// SAR 5308881 - BEGIN - Date Sensitive Customer Sets
// SAR 5308881 - Pass Back Descriptions
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_UseCustomerSet_CP19 [CP19] is equal to "1"
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Deliver To (F4201.0) [DVAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Invoiced To (F4201.0) [ITAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Forwarded To (F4201.0) [FTAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          BC Address Number - Paid By (F4201.0) [PBAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Description [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// SAR 5308881 - END - Date Sensitive Customer Sets
// **************************************************************************
// SAR 5510587
Disable Control(HC Volume Based UpSell)
//
// Determine to hide Audit Log info or not
//
VA frm_cFirstRevision_EV01 [EV01] = <Blank>
VA frm_cHideAuditInfo_EV01 [EV01] = "0"
If PO cUseAuditLog [EV01] is equal to "1"
And FC Address Number [AN8] is greater than "0"
     GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
          FC Address Number [AN8] -> mnSoldToAddress [AN8]
          "1" -> cSuppressErrorMsg [EV02]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> szTemporaryCreditMsg [TSTA]
          UNDEFINED <> cBillingAddressNumber [BADT]
          UNDEFINED <> szTaxExplainationCode [EXR1]
          UNDEFINED <> cCustomerPORequireDate [PORQ]
          UNDEFINED <> szPaymentTerms [TRAR]
          UNDEFINED <> cPaymentInstructions [RYIN]
          UNDEFINED <> szCurrencyCode [CRCD]
          UNDEFINED <> szAdjustmentSchedule [ASN]
          UNDEFINED <> szCustomerPricingGroup [CPGP]
          UNDEFINED <> mnInvoiceCopies [INVC]
          UNDEFINED <> szHoldCode [HOLD]
          UNDEFINED <> szPrintMsg [INMG]
          UNDEFINED <> cPricePickList [PLST]
          UNDEFINED <> cBackOrderAllowed [BACK]
          UNDEFINED <> cPriorityCode [PRIO]
          UNDEFINED <> mnTradeDiscount [TRDC]
          UNDEFINED <> mnMaximumOrder [MAXO]
          UNDEFINED <> mnMinimumOrder [MINO]
          UNDEFINED <> mnRelatedAddressNum [AN8R]
          UNDEFINED <> cInvoiceConsolidation [ICON]
          UNDEFINED <> cSendInvoiceTo [SITO]
          UNDEFINED <> cCreditCheckLevel [ARTO]
          UNDEFINED <> cCreditHoldExempt [EXHD]
          UNDEFINED <> szABAmntCurrCode [CRCA]
          UNDEFINED <> szGLClassCode [ARC]
          UNDEFINED <> cDeliveryNotFlag [EDF1]
          UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
          UNDEFINED <> cItemRestrictions [EDF2]
          FC Order Company [KCOO] -> szCompany [CO]
          UNDEFINED <> cAbcCodeSales [ABC1]
          UNDEFINED <> cAbcCodeMargin [ABC2]
          UNDEFINED <> cAbcCodeAverageDays [ABC3]
          UNDEFINED <> mnAverageDaysToPay [AVD]
          UNDEFINED <> szBuyingSegmentCode [BSC]
          VA frm_cBypassAuditLogging_EV01 [EV01] <- cBypassAuditLogging [BYAL]
          UNDEFINED <> szOPBusinessObjective [OPBO]
Else
     VA frm_cBypassAuditLogging_EV01 [EV01] = <Blank>
End If
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
Or PO cUseAuditLog [EV01] is not equal to "1"
     VA frm_cHideAuditInfo_EV01 [EV01] = "1"
     Hide Control(FC Change Order [CORD])
     Hide Grid Column(FC Grid, GC RevNbr)
     Hide Grid Column(FC Grid, GC RevisionReason)
     Disable Control(HC Revision History)
End If
// SAR 5510106 Begin ADD
If SV Form_ Mode is equal to CO UPDATE_MODE
Or FI UpdatedToHdrWF [EV20] is equal to "1"
Or VA frm_EV17_Hdr_Work_File [EV17] is equal to "1"
     Disable Control(FC Reference [VR01])
End If
// SAR 5510106 End ADD
// SAR#4648630 Begin
If SV Form_ Mode is equal to CO ADD_MODE
Or PO cHideCommission [EV09] is equal to "1"
     Disable Control(HC &Detail Commissions)
End If
//
// SAR 5800218 - Begin/End ADD
VA frm_cIsExcangeRateEntered_EV01 [EV01] = <NULL>
//
// **************************************************************************
// SAR 5814943 - Begins
If SV Form_ Mode is equal to CO UPDATE_MODE
     If FI UpdatedToHdrWF [EV20] is less than or equal to "0"
          VA frm_cOPBA_DetailFirst [OPBA] = BC OP Allow Backorders (F4201.0) [OPBA]
          VA frm_cOPSS_DetailFirst [OPSS] = BC OP Allow Substitutes (F4201.0) [OPSS]
          VA frm_cOPLL_DetailFirst [OPLL] = BC OP Partial Ship Line Items (F4201.0) [OPLL]
          VA frm_cOPMS_DetailFirst [OPMS] = BC OP Allow Multi Source (F4201.0) [OPMS]
     End If
End If
If FI cOPAllowBackorders [OPBA] is equal to "N"
Or VA frm_cOPBA_DetailFirst [OPBA] is equal to "N"
     VA frm_cDisableOPBackOrderFlag [EV01] = "1"
Else
     VA frm_cDisableOPBackOrderFlag [EV01] = "0"
End If
If FI cOPAllowSubstitutes [OPSS] is equal to "N"
Or VA frm_cOPSS_DetailFirst [OPSS] is equal to "N"
     VA frm_cDisableSubstituteFlag [EV01] = "1"
Else
     VA frm_cDisableSubstituteFlag [EV01] = "0"
End If
If FI cOPPartialShipLineItems [OPLL] is equal to "N"
Or VA frm_cOPLL_DetailFirst [OPLL] is equal to "N"
     VA frm_cDisableOPPartialShipFlag [EV01] = "1"
Else
     VA frm_cDisableOPPartialShipFlag [EV01] = "0"
End If
If FI cOPAllowMultiSource [OPMS] is equal to "N"
Or VA frm_cOPMS_DetailFirst [OPMS] is equal to "N"
     VA frm_cDisableOPMultiSourceFlag [EV01] = "1"
Else
     VA frm_cDisableOPMultiSourceFlag [EV01] = "0"
End If
// SAR 5953388
If PO cDisableorHidePrice [EV04] is equal to "1"
Or PO cDisableorHidePrice [EV04] is equal to "2"
     Disable Control(HC &Zero Price)
End If
If PO cDisableorHideCost [EV03] is equal to "1"
Or PO cDisableorHideCost [EV03] is equal to "2"
     Disable Control(HC Zer&o Cost)
End If
// SAR 6105487
// Time Handling here
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is not equal to "1"
     Hide Grid Column(FC Grid, GC RequestedTime)
     Hide Grid Column(FC Grid, GC ScheduledPick Time)
     Hide Grid Column(FC Grid, GC PromisedShip Time)
     Hide Grid Column(FC Grid, GC PromisedDel  Time)
End If
// End SAR 6105487
// ---------------------------------------------------------------------------
// CRMCSS
// ---------------------------------------------------------------------------
Set Control Text(FC st_SoldToName, FC ADDRESS NUMBER)
Set Control Text(FC st_ShipToName, FC SHIP TO)
//
If SV Form_ Mode is equal to CO UPDATE_MODE
And PO cShoppingCartMode [CART] is equal to "1"
And FI cTaskToComplete [EV01] is equal to "2"
     If FC Reference [VR01] is greater than <Blank>
          Show Control(FC Reference [VR01])
          Show Control(FC stPONumberCSS)
          Set Control Text(FC stPONumberCSS, FC CSS Customer PO)
     Else
          Hide Control(FC Reference [VR01])
          Hide Control(FC stPONumberCSS)
     End If
End If
//
// 7295657 - Use Set Selection to suppress these grid rows in update mode to
// improve performance. In copy mode, we hide these grid rows in Write Grid
// Line-Before
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     Set Selection Append Flag(FC Grid,  <Yes>)
     Set Selection(FC Grid, "F4211", "SO16",  <Not Equal To>, "1",  <None>)
     //
     If PO cEHideClosedLines [EV06] is equal to "1"
          Set Selection Append Flag(FC Grid,  <Yes>)
          Set Selection(FC Grid, F4211, "NXTR", <Not Equal To>, "999", <None>)
     End If
     //
     If PO cHideKitComponents [EV11] is equal to "1"
          Set Selection Append Flag(FC Grid,  <Yes>)
          Set Selection(FC Grid, F4211, "RLIT",  <Equal To>,  <Blank>, <None>)
     End If
End If
//
// SAR 8953108 - Apparel Enhancement
// Default the Collection from Processing options and Validate
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     VA frm_cApprlPressButtonMode_EV01 [EV01] = "1"
     Press Button(FC ValidateCollection)
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Grid Record is Fetched
Event GUID: f57df5e0-a23a-11d0-a204-0000f6728a56
=============================================
//
// Initialize Variables.
VA grd_EV25_CfgItemProcessed [EV25] = "1"
//
// SAR# 4541912 Begin
VA grd_szDetailLineBSC [BSC] = BC Buying Segment Code (F4211.0) [BSC]
//
// Retrieve the first non-Blank Grid Record to pass into the FC LandedCost in th
// Last Grid Record Fetched Event
//
If PO cTransferOrderEntry [EV25] is equal to "1"
And SV Form_ Mode is not equal to CO ADD_MODE
And VA frm_szLandedCostRules_PRP5 [PRP5] is less than or equal to <Blank>
     VA frm_szLandedCostRules_PRP5 [PRP5] = BC Purchasing Category Code 5 (F4211.0) [PRP5]
End If
// Look at SAR # 1625918
VA frm_EV09_Gen_Text_Row [EV09] = <Blank>
Media Object Structures(GT4211A,  <Default Media Object>,  <Exist>, VA frm_EV09_Gen_Text_Row, BC Document (Order No, Invoice, (F4211) etc.), BC Order (F4211) Type, ...)
If VA frm_EV09_Gen_Text_Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
     // SAR 6368922 Begin
End If
//
// 2885973
If SV Form_ Mode is equal to CO COPY_MODE
     GC Agreement Number [DMCT] = <NULL>
     GC Supp No [DMCS] = <NULL>
     GC Agreement Exists [AGRE] = <NULL>
     // SAR 8955602 - Pass the detail fetch parameters values into new variables
     // for copy mode and update mode. Later BSFN B4205360 is called using these
     // variables.
     If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          VA frm_szSOTagCompanyOrder_KCOO [KCOO] = VA frm_OKCO_Original_Order_Co [OKCO]
          VA frm_szSOTagOrderType_DCTO [DCTO] = VA frm_ODCT_Original_Order_Type [ODCT]
          VA frm_mnSOTagLineNum_LNID [LNID] = BC Line Number (F4211.0) [LNID]
     End If
End If
//
// Begin SAR# 4062330 Applied By: ST6841901 Date: 04/28/00
If SV Form_ Mode is not equal to CO ADD_MODE
     Hide Grid Column(FC Grid, GC Item FlashMessage)
End If
// End SAR# 4062330 Applied By: ST6841901 Date: 04/28/00
//
//     In CHANGE mode, protect the following fileds in the grid.
//
Disable Grid(FC Grid, <Currently Selected Row>, GC ItemNumber)
If SV Form_ Mode is not equal to CO COPY_MODE
     Disable Grid(FC Grid, <Currently Selected Row>, GC LineNumber)
     Disable Grid(FC Grid, <Currently Selected Row>, GC LnTy)
     //
     //     SAR # 1638920 - Strike throught he entire grid row for a canceled line.
     //
     If BC Status Code - Next (F4211.0) [NXTR] is equal to "999"
          // SAR 8367190 - Records at status 991 (canceled due to BOM re-explosion in
          // kit selection) should be included as cancled line.
          If BC Status Code - Last (F4211.0) [LTTR] is greater than or equal to "980"
          And BC Status Code - Last (F4211.0) [LTTR] is less than or equal to "991"
               VA grd_EV18_UpdatedtoDetailWF [EV18] = "8"
               Set Grid Font(FC Grid, <Currently Selected Row>, <All Columns>, <,Regular,10,Black>)
          End If
     End If
     //
     // SAR 8955602 - Store the order key information
     If SV Form_ Mode is equal to CO UPDATE_MODE
     And VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          VA frm_mnSOTagDocOrdInvNo_DOCO [DOCO] = BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO]
          VA frm_szSOTagCompanyOrder_KCOO [KCOO] = BC Order Company (Order Number) (F4211.0) [KCOO]
          VA frm_szSOTagOrderType_DCTO [DCTO] = BC Order Type (F4211.0) [DCTO]
          VA frm_mnSOTagLineNum_LNID [LNID] = BC Line Number (F4211.0) [LNID]
     End If
End If
//
// SAR 8955602 -  In copy mode or update mode, fetch the value of Use Taxed
// Prices if tax price constant is ON. This flag can only attain the value 1
// if use sales tax price constant is turned ON
If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
     If SV Form_ Mode is equal to CO COPY_MODE
     Or SV Form_ Mode is equal to CO UPDATE_MODE
          GetSalesOrderDetailTaxTag(B4205360.GetSalesOrderDetailTaxTag)
               VA frm_szSOTagCompanyOrder_KCOO [KCOO] -> szCompanyKeyOrderNo [KCOO]
               VA frm_mnSOTagDocOrdInvNo_DOCO [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               VA frm_szSOTagOrderType_DCTO [DCTO] -> szOrderType [DCTO]
               VA frm_mnSOTagLineNum_LNID [LNID] -> mnLineNumber [LNID]
               GC Taxed Unit Price [TUPRC] <- mnTaxedUnitPrice [TUPRC]
               GC Taxed Extended Price [TAEXP] <- mnTaxedExtendedPrice [TAEXP]
               GC Unit Tax Amount [UTA] <- mnUnitTaxAmount [UTA]
               GC Extended Tax Amount [ETA] <- mnExtendedTaxAmount [ETA]
               GC Foreign Taxed Unit Price [TFUP] <- mnForeignTaxedUnitPrice [TFUP]
               GC Foreign Taxed Extended Price [TFEA] <- mnForeignTaxedExtendedPrice [TFEA]
               GC Foreign Unit Tax Amount [FUTA] <- mnForeignUnitTaxAmount [FUTA]
               GC Foreign Extended Tax Amount [FETA] <- mnForeignExtendedTaxAmount [FETA]
               GC Taxed Price Override Code [TPROV] <- cTaxedPriceOverrideCode [TPROV]
               GC Internal SO Tax Date [DTXJ] <- jdInternalSOTaxDate [DTXJ]
               "1" -> cSuppressErrorMessage [EV01]
          // SAR 8955603 - Store the saved taxed prices for order line
          If BC Currency Mode-Foreign or Domestic Entry (F4201.0) [CRRM] is equal to "F"
               VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Foreign Taxed Unit Price [TFUP]
               VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Foreign Taxed Extended Price [TFEA]
          Else
               VA grd_SavedTaxedUnitPrice_UCSTR [UCSTR] = GC Taxed Unit Price [TUPRC]
               VA grd_SavedTaxedExtPrice_XEXP [XEXP] = GC Taxed Extended Price [TAEXP]
          End If
     End If
End If
//
// SAR 3359078 - If OW is being used in detached mode and this is not a Store &
// Forward order and this is change mode, do not allow the user to change
// anything that would affect the order total or commitments.
If VA frm_cDetachedMode_EV01 [EV01] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
And BC Sales Order Status 15 (F4211.0) [SO15] is not equal to "3"
And BC Sales Order Status 15 (F4211.0) [SO15] is not equal to "4"
     VA frm_cDisablePriceFields_EV01 [EV01] = "1"
     If PO cDisableorHidePrice [EV04] is not equal to "2"
          PO cDisableorHidePrice [EV04] = "1"
     End If
     If PO cDisableorHideCost [EV03] is not equal to "2"
          PO cDisableorHideCost [EV03] = "1"
     End If
     PO cDisablePricingRelated [EV01] = "1"
     // Disable the fields that will not be disabled by setting those processing
     // options.
     Disable Grid(FC Grid,  <All Rows>, GC QuantityOrdered)
     Disable Grid(FC Grid, <All Rows>, GC UoM)
     Disable Grid(FC Grid, <All Rows>, GC Location)
     Disable Grid(FC Grid, <All Rows>, GC Lot Number)
     Disable Grid(FC Grid, <All Rows>, GC RequestedDate)
     Disable Grid(FC Grid, <All Rows>, GC PRUoM)
     Disable Grid(FC Grid, <All Rows>, GC QuantityShipped)
     Disable Grid(FC Grid, <All Rows>, GC QuantityBackordered)
     Disable Grid(FC Grid, <All Rows>, GC QuantityCanceled)
     Disable Grid(FC Grid, <All Rows>, GC ScheduledPick)
     Disable Grid(FC Grid, <All Rows>, GC ScheduledPick)
     Disable Grid(FC Grid, <All Rows>, GC PromisedShip Date)
     Disable Grid(FC Grid, <All Rows>, GC PromisedDelivery)
     Disable Grid(FC Grid, <All Rows>, GC Ship ToNumber)
     Disable Grid(FC Grid, <All Rows>, GC WtU/M)
     Disable Grid(FC Grid, <All Rows>, GC ExtendedWeight)
End If
//
// SAR 8955603 - Put the logic for disabling/hiding prices in a push button
// and add logic for disabling/hiding taxed prices. The push button is called
// in the post dialog init.
//
If PO cDisableorHideCost [EV03] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC UnitCost)
     Disable Grid(FC Grid,  <All Rows>, GC ExtendedCost)
     Disable Grid(FC Grid,  <All Rows>, GC Foreign UnitCost)
     Disable Grid(FC Grid,  <All Rows>, GC Foreign ExtendedCost)
Else
     If PO cDisableorHideCost [EV03] is equal to "2"
          Hide Grid Column(FC Grid, GC UnitCost)
          Hide Grid Column(FC Grid, GC ExtendedCost)
          Hide Grid Column(FC Grid, GC Foreign UnitCost)
          Hide Grid Column(FC Grid, GC Foreign ExtendedCost)
     End If
End If
If PO cDisableStatusCodes [EV05] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC LastStatus)
     Disable Grid(FC Grid,  <All Rows>, GC NextStatus)
End If
//
If PO cDisablePricingRelated [EV01] is equal to "1"
     Disable Grid(FC Grid, <All Rows>, GC Branch/Plant)
     Disable Grid(FC Grid, <All Rows>, GC PayInst)
     Disable Grid(FC Grid,  <All Rows>, GC EndUse)
     Disable Grid(FC Grid, <All Rows>, GC Adj.Schedule)
     Disable Grid(FC Grid,  <All Rows>, GC PC1)
     Disable Grid(FC Grid,  <All Rows>, GC PC2)
     Disable Grid(FC Grid, <All Rows>, GC PC3)
     Disable Grid(FC Grid, <All Rows>, GC Line ofBusiness)
     Disable Grid(FC Grid, <All Rows>, GC CarrierNumber)
     Disable Grid(FC Grid, <All Rows>, GC DutySts)
     Disable Grid(FC Grid, <All Rows>, GC ModTrn)
     Disable Grid(FC Grid, <All Rows>, GC AgreementSupplement)
     Disable Grid(FC Grid, <All Rows>, GC AgreementNumber)
     // SAR 5494134
     Disable Control(FC Price Effective [PEFJ])
     Disable Grid(FC Grid,  <All Rows>, GC Price EffectiveDate)
End If
//
// SAR 6968012
If VA frm_cPOOverrideFeatureEnabled [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Grid(FC Grid,  <Currently Selected Row>, GC Purchase OrderExtended Cost)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderUnit Cost)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderUnit of Measure)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderExchange Rate)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Purchase OrderCurrency Code)
     End If
     //
     If BC Transfer/Direct Ship/Intercompany Flag (F4211.0) [SO11] is equal to "2"
          ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
               BC Related PO/SO/WO Number (F4211.0) [RORN] -> szGenericString [DSC1]
               VA frm_mnPurchaseOrderNumber [DOCO] <- mnNumericValue [ITM]
          RetrievePurchaseOrderDisplayInfo(B4208040.RetrievePurchaseOrderDisplayInfo)
               VA frm_mnPurchaseOrderNumber [DOCO] -> mnOrderNumber [DOCO]
               BC Related PO/SO/WO Order Type (F4211.0) [RCTO] -> szOrderType [DCTO]
               BC Company - Key (Related Order) (F4211.0) [RKCO] -> szOrderCompany [KCOO]
               BC Order Suffix (F4211.0) [SFXO] -> szOrderSuffix [SFXO]
               BC Related PO/SO Line Number (F4211.0) [RLLN] -> mnLineNumber [LNID]
               GC To Curr [CRDC] <- szPOCurrencyCode [CRDC]
               GC Exchange Rate [CRRD] <- mnPOExchangeRate [CRR]
               GC PU UM [UOM3] <- szPOUnitOfMeasure [UOM3]
               GC Unit Cost [UNCS] <- mnPOUnitCost [UNCS]
               GC Extended Cost [ECST] <- mnPOExtendedCost [ECST]
     End If
End If
// *************************************************************************
// SAR#5113442
If BC Matrix Control Line Number (F4211.0) [MCLN] is greater than "0"
Or GB Matrix Control Line Number [MCLN] is greater than "0"
     If BC Line Number (F4211.0) [LNID] is greater than "0"
          VA frm_SOELineNumber_LNID [LNID] = BC Line Number (F4211.0) [LNID]
     Else
          VA frm_SOELineNumber_LNID [LNID] = GB Line Number [LNID]
     End If
     If BC Matrix Control Line Number (F4211.0) [MCLN] is greater than "0"
          VA frm_MatrixControlLine_MCLN [MCLN] = BC Matrix Control Line Number (F4211.0) [MCLN]
     Else
          VA frm_MatrixControlLine_MCLN [MCLN] = GB Matrix Control Line Number [MCLN]
     End If
     GetSalesOrderDetailAndUpdate(B4204050.GetSalesOrderDetailAndUpdate)
          FI Computerid [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_SOELineNumber_LNID [LNID] -> mnLineNumber [LNID]
          VA frm_MatrixControlLine_MCLN [MCLN] -> mnMatrixControlLineLineNumber [MCLN]
          VA frm_F42UI11TransactionQty_UORG [UORG] <- mnTransactionQty [UORG]
          UNDEFINED <> szErrorMessageID [DTAI]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA frm_EV22_cCacheOn [EV22] -> cCacheOnOrWF [EV01]
          VA frm_cFoundAMatch [EV01] <- cFlag1 [EV01]
          "2" -> cFlag2 [EV01]
          UNDEFINED <> mnOrderNumber [DOCO]
          UNDEFINED <> szOrderType [DCTO]
          UNDEFINED <> szCompany [KCOO]
     If VA frm_cFoundAMatch [EV01] is equal to "1"
          BC Units - Order/Transaction Quantity (F4211.0) [UORG] = VA frm_F42UI11TransactionQty_UORG [UORG]
          BC Units - Qty Backordered/Held (F4211.0) [SOBK] = <NULL>
          BC Quantity Shipped (F4211.0) [SOQS] = <NULL>
          BC Units - Quantity Canceled/Scrapped (F4211.0) [SOCN] = <NULL>
     End If
End If
//
// *************************************************************************
//
// SAR 4952210
//
VA grd_cCrossDockFlagYN_XDCK [XDCK] = BC Cross-Docking Flag (F4211.0) [XDCK]
VA grd_mnCrossDokingPriority_XPTY [XPTY] = BC Cross Docking Priority for Sales Orders (F4211.0) [XPTY]
VA grd_mnCrossDockOrdeNumber_XORN [XORN] = BC Cross Dock Order No (F4211.0) [XORN]
VA grd_szCrossDockOrderType_XCTO [XCTO] = BC Cross Dock Order Type (F4211.0) [XCTO]
VA grd_szCrossDockCmpyKey_XKCO [XKCO] = BC Cross Dock Order Company (Order Number) (F4211.0) [XKCO]
VA grd_szCrossDockOrdeSuffix_XSFX [XSFX] = BC Cross Dock Order Suffix (F4211.0) [XSFX]
VA grd_mnCrossDockLineNumber_XLLN [XLLN] = BC Cross Dock Line Number (F4211.0) [XLLN]
//
//
// Bug# 11904723 - PMPN Enhancement - Begin
// Disable PMPN in Update mode
If VA frm_cPMPNInstalled_EV01 [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Grid(FC Grid,  <Currently Selected Row>, GC Project Mfg Production Number)
          VA grd_cSuppressPNGenerate_EV01 [EV01] = "2"
     End If
End If
// Bug# 11904723 - PMPN Enhancement - End
//

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Write Grid Line-Before
Event GUID: f57df5e1-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_jdPreviousDateRequested [DRQJ]
evt_cConfigFlagPrevSet_EV01 [EV01]
evt_szCustItemNumber_CITM [CITM]
evt_szCustItemNoDesc1_DL01 [DL01]
evt_szCustItemNoDesc2_DL02 [DL01]
evt_ComponentIDNumber_CFGCID [CFGCID]
evt_mnUnitCostConvFactor_CONV [CONV]
evt_mnCostPerUnit_UNCS [UNCS]
evt_cSkipLineForHdrToDtlUpdate [EV01]
evt_cSkipReqDateForHdrToDtlUpd [EV01]
evt_cTextLine_EV01 [EV01]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 3802623                   VK6272082                 03/03/00
// 3999059                   VK6272082                 03/15/00
// 3735660                   VK6272082                 03/25/00
// 6887706                   BC7158396                 01/12/04
// 7201690                   IC8867872                08/25/04
// 8676451                   MS9050645                01/11/08
// 8565831                   DL5673327                09/08/09
//
VA frm_PreviousShipToNum_SHAN [SHAN] = <NULL>
VA frm_PreviousShipToNum_SHAN [SHAN] = GC Ship To Number [SHAN]
VA frm_PrevReqDate_DRQJ [DRQJ] = <NULL>
VA frm_PrevReqDate_DRQJ [DRQJ] = GC Request Date [DRQJ]
// SAR 6887706 - Save off dates for comparison in Col Exit & Changed
VA grd_jdOrigDeliveryDate_RSDJ [RSDJ] = GC Promised Delivery [RSDJ]
VA grd_jdOrigShipDate_PPDJ [PPDJ] = GC Promised Ship [PPDJ]
// SAR 8190064
VA grd_PrevRequestedDate [DRQJ] = GC Request Date [DRQJ]
// SAR 7999777
VA grd_jdOrigPickDate_PDDJ [PDDJ] = GC Sched Pick [PDDJ]
//
// BUG 11886779
VA grd_szPrevBranchEntered_MCU [MCU] = GC Business Unit [MCU]
// SAR 6606231
VA frm_SYMID_Primary_Item_Idntfr [SYMID] = <NULL>
//
// SAR 2039048 - If Status - In Warehouse is equal to 'I' disable the line from
// update.
//
// SAR 5219677- Blank TORG in COPY
If SV Form_ Mode is equal to CO COPY_MODE
     BC Transaction Originator (F4211.0) [TORG] = <NULL>
     // SAR 7623307 - Begins
     // Revision Reson is blanked out in the copy mode so that the revision reason
     // of the original order doesn't get copied to the copied order.
     GC Revision Reason [RFRV] = <Blank>
     // SAR 7623307 - Ends
     //
     // SAR 7625062 - Begins
     // The quantity fields and the related price fields are locked when an order
     // is copied from an order that has been modified. The pending approval flag
     // is blanked out so that the flag is not passed on to the copied order.
     GC Pending Approval [PEND] = <Blank>
     // SAR 7625062 - Ends
     //
Else
End If
// SAR# 8804652 Disable Zero Price option for warehouse sales orders
If BC Status - In Warehouse (F4211.0) [SWMS] is equal to "I"
     Disable Control(HC &Zero Price)
     Disable Grid(FC Grid, <Currently Selected Row>, <All Columns>)
End If
//
If BC Units - Shipped to Date (F4211.0) [QTYT] is greater than "0"
And VA frm_c_BlanketFlag_EV01 [EV01] is equal to "1"
     Disable Grid(FC Grid, <Currently Selected Row>, GC UoM)
End If
//
VA frm_XLIN_CurrentGridLineNo [XLIN] = BC Line Number (F4211.0) [LNID]
VA grd_MATH01_SuppressProcess [MATH01] = "0"
//
// 7295657 - Hide these rows in copy mode in order to copy hidden rows. In
// change mode, we use Set Selection in post dialog init. to suppress these
// grid rows to improve performance
//
If SV Form_ Mode is equal to CO COPY_MODE
     // SAR 4260918-Begin
     If PO cEHideClosedLines [EV06] is equal to "1"
     And BC Status Code - Next (F4211.0) [NXTR] is equal to "999"
     Or PO cHideKitComponents [EV11] is equal to "1"
     And BC Item Number - Related (Kit) (F4211.0) [RLIT] is not equal to <Blank>
          Hide Grid Row(FC Grid, <Currently Selected Row>)
     End If
     // SAR 4260918-End
     //
     // SAR 5139301  - Condition on the Manufacturing Variance Record Flag to
     // prevent the loading of sales detail lines crated by the manufacturing
     // system.
     If BC Manufacturing Variance Accounting Flag (F4211.0) [SO16] is equal to "1"
          Hide Grid Row(FC Grid, <Currently Selected Row>)
     End If
End If
//
//    INITIALIZE THE ACTION CODE - THIS ACTION CODE DEFINES WHETHER
//    OR NOT THE DETAIL LINE IS CONTAINED IN THE F4211 FILE
//      IF ACTION CODE = A  -  LINE IS NOT CONTAINED IN F4211
//                                    = C  - LINE IS CONTAINED IN F4211
//                                    = D - LINE IS CONTAINED IN F4211 BUT
//                                            CANCELLED
//
If SV Form_ Mode is not equal to CO COPY_MODE
     VA grd_ACTI_ActionHidden [ACTI] = "C"
Else
     VA grd_ACTI_ActionHidden [ACTI] = "A"
End If
//
If BC Status Code - Next (F4211.0) [NXTR] is equal to "999"
And SV Form_ Mode is not equal to CO COPY_MODE
     VA grd_ACTI_ActionHidden [ACTI] = "D"
     Disable Grid(FC Grid, <Currently Selected Row>, <All Columns>)
End If
//
//    IF A KIT COMPONENT ITEM - DISABLE INPUT
// SAR 3168896 - Don't  need this since we donot update  the  database fields
//
If BC Kit Master Line Number (F4211.0) [KTLN] is not equal to "0"
Or BC Item Number - Related (Kit) (F4211.0) [RLIT] is not equal to <Blank>
     If VA frm_LNID_Cancel [LNID] is not equal to "999.999"
          If VA frm_LNID_Cancel [LNID] is equal to BC Kit Master Line Number (F4211.0) [KTLN]
          Or VA frm_LNID_Cancel [LNID] is equal to BC Related Kit Component (F4211.0) [RKIT]
               Set Grid Font(FC Grid, <Currently Selected Row>, <All Columns>, <,Regular,10,Black>)
          End If
     End If
     //
     Disable Grid(FC Grid, <Currently Selected Row>, <All Columns>)
     //
End If
//
//
//     Determine the primary item number to display using values from the
//     Branch/Plant Constants F41001).
//
// SAR 3802623 BEGIN - Check for Segmented Item.  Assign Primary Item Num to GC
// ItemNum
If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is less than or equal to <Blank>
Or VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "S"
     // SAR#5113442 - This function should also retrieves SEG1 And Template for Matri
     // SAR 6606231 - replaced FC Branch/Plant with GC Branch/Plant
     ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
          BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
          BC 2nd Item Number (F4211.0) [LITM] -> sz2ndItemNumber [LITM]
          BC 3rd Item Number (F4211.0) [AITM] -> sz3rdItemNumber [AITM]
          GC Business Unit [MCU] -> szBranchPlant [MCU]
          GC Item Number [UITM] <- szPrimaryItemNumber [UITM]
          VA frm_SYMID_Primary_Item_Idntfr [SYMID] <- cSymbolidentifier [SYMID]
          VA frm_ERRC_Error_Code [ERRC] <- cErrorCode [ERRC]
          "1" -> cSuppressErrorMsg [EV01]
          VA grd_MatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
          VA grd_MatrixSegment1_SEG1 [SEG1] <- szSegment1 [SEG1]
          VA grd_cMatrixControlled123_MIC [MIC] <- cMatrixControlled [MIC]
     // SAR 3802623 End
     //
     If VA frm_ERRC_Error_Code [ERRC] is equal to "1"
          VA frm_SYMID_Primary_Item_Idntfr [SYMID] = "2"
     End If
End If
If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "2"
Or VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "1"
And BC Item Number - Short (F4211.0) [ITM] is equal to "0"
     GC Item Number [UITM] = BC 2nd Item Number (F4211.0) [LITM]
Else
     If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is equal to "3"
          GC Item Number [UITM] = BC 3rd Item Number (F4211.0) [AITM]
     Else
          // SAR 3802623 BEGIN
          If VA frm_SYMID_Primary_Item_Idntfr [SYMID] is not equal to "S"
               // SAR 3802623 End
               ConvertShortItemToLongItem(B4000450.ConvertShortItemToLongItem)
                    BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
                    GC Item Number [UITM] <- sz2ndItemNumber [LITM]
          End If
     End If
End If
//
If BC Currency Mode-Foreign or Domestic Entry (F4201.0) [CRRM] is equal to "F"
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] = BC Amount - Foreign Price per Unit (F4211.0) [FUP]
     VA grd_XEXP_Saved_Ext_Price [XEXP] = BC Amount - Foreign Extended Price (F4211.0) [FEA]
     VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = BC Amount - Foreign Unit Cost (F4211.0) [FUC]
     VA grd_XCST_Saved_Ext_Cost [XCST] = BC Amount - Foreign Extended Cost (F4211.0) [FEC]
Else
     VA grd_UCSTR_Saved_Unit_Price [UCSTR] = BC Amount - Price per Unit (F4211.0) [UPRC]
     VA grd_XEXP_Saved_Ext_Price [XEXP] = BC Amount - Extended Price (F4211.0) [AEXP]
     VA grd_FCSTR_Saved_Unit_Cost [FCSTR] = BC Amount - Unit Cost (F4211.0) [UNCS]
     VA grd_XCST_Saved_Ext_Cost [XCST] = BC Amount - Extended Cost (F4211.0) [ECST]
     // SAR 6968012
     VA grd_mnPurchaseUnitCostSaved [UNCS] = BC Amount - Unit Cost (F4211.0) [UNCS]
     VA grd_mnPurchaseExtCostSaved [ECST] = <NULL>
End If
//
// SAR 8955603 - Set price changed flag based on taxed price override,
// excluding copy mode, because these two grid variables affects the final
// setting for PROV/TPROV of order. PROV/TPROV of copy order is not affected
// by original order's PROV/TPROV.
// ===========================================================
If SV Form_ Mode is not equal to CO COPY_MODE
     If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          VA grd_EV06_Unit_Price_Changed [EV06] = GC Taxed Price Override Code [TPROV]
          VA grd_EV05_Ext_Price_Changed [EV05] = GC Taxed Price Override Code [TPROV]
     Else
          VA grd_EV06_Unit_Price_Changed [EV06] = BC Price Override Code (F4211.0) [PROV]
          VA grd_EV05_Ext_Price_Changed [EV05] = BC Price Override Code (F4211.0) [PROV]
     End If
End If
VA grd_EV07_Unit_Cost_Changed [EV07] = BC Cost Override Code (F4211.0) [CSTO]
VA grd_EV08_Ext_Cost_Changed [EV08] = BC Cost Override Code (F4211.0) [CSTO]
//
// SAR 6968012
VA grd_cPurchaseUnitCostChanged [EV01] = BC Cost Override Code (F4211.0) [CSTO]
VA grd_cPurchaseExtCostChanged [EV02] = BC Cost Override Code (F4211.0) [CSTO]
// Calculate Profit Margin
// SAR 8804564 - Call the Get line type constants and retrieve the text line
// variable and the inventory interface.
GetLineTypeConstants(B4000260.GetLineTypeConstants)
     GC Ln Ty [LNTY] -> szLineType [LNTY]
     VA frm_cInventoryInterface_IVI [IVI] <- cInventoryInterface [IVI]
     VA evt_cTextLine_EV01 [EV01] <- cTextLine [TXYN]
// SAR 7991476 if pricing and Trans UOM is diff then make conv
// SAR 7746913
If GC Extended Price [AEXP] is equal to "0"
And GC Extended Price [AEXP] is equal to <NULL>
And GC Extended Price [AEXP] is equal to <Blank>
     VA evt_mnCostPerUnit_UNCS [UNCS] = GC Unit Cost [UNCS]
     // SAR 8804564 - Do not perform UOM converions for any quantity on a text
     // line.
     If GC PR UM [UOM4] is not equal to GC UM  [UOM]
     And VA evt_cTextLine_EV01 [EV01] is not equal to "Y"
          GetItemUoMConversionFactor(B4000520.GetItemUoMConversionFactor)
               GC Business Unit [MCU] -> szBranchPlant [MCU]
               GC PR UM [UOM4] -> szFromUnitOfMeasure [UOM]
               GC UM  [UOM] -> szToUnitOfMeasure [RUM]
               VA evt_mnUnitCostConvFactor_CONV [CONV] <- mnConversionFactorFrom_to_To [CONV]
               GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          VA evt_mnCostPerUnit_UNCS [UNCS] = [GC Unit Cost [UNCS]]*[VA evt_mnUnitCostConvFactor_CONV [CONV]]
     End If
     If GC Unit Price [UPRC] is not equal to "0"
     And GC Unit Price [UPRC] is not equal to <Blank>
     And GC Unit Price [UPRC] is not equal to <NULL>
          GC % Profit Margin [PRMG] = (([GC Unit Price [UPRC]]-[VA evt_mnCostPerUnit_UNCS [UNCS]])/[GC Unit Price [UPRC]])*100
     End If
Else
     GC % Profit Margin [PRMG] = (([GC Extended Price [AEXP]]-[GC Extended Cost [ECST]])/[GC Extended Price [AEXP]])*100
End If
// SAR 4945140
VA grd_mnPrevProfitMargin_PRMG [PRMG] = GC % Profit Margin [PRMG]
//
GC Supp No [DMCS] = BC Agreement Supplement - Distribution (F4211.0) [DMCS]
GC Agreement Number [DMCT] = BC Agreement Number - Distribution (F4211.0) [DMCT]
//
//      SAR # 1709417
//           Disable the following line
If SV Form_ Mode is equal to CO COPY_MODE
     //
     // ************************************************************************
     // SAR 2807570 Change - 01/27/99
     // Initialize SO Detail Flags to blanks instead of zero.
     // This will be undone because the fix for 2808505 will convert Sales
     // Order Flags from 0 to blanks. 02/16/99 PSV
     // ************************************************************************
     //
     GC ALPH - SO Detail Flags (wf) [ALPH] = "0000000000000000000000000000000000000010"
     VA frm_INT01_Inserted_Row_Counter [INT01] = [VA frm_INT01_Inserted_Row_Counter [INT01]]+1
Else
     //
     // ************************************************************************
     // SAR 2807570 Change - 01/27/99
     // SAR 5953388- Use Init function
     // ************************************************************************
     //
     InitializeSOALPHString(B4205100.InitializeSOALPHString)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
End If
//
//  SAR#8921530 - Set  BC SO01 flag value to GC ALPH-SO Detail Flags
// Re-inquire/Update mode only
If SV Form_ Mode is equal to CO UPDATE_MODE
     ChangeStringElement(B4002410.ChangeStringElement)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szString [CALCIT]
          "1" -> nPosition [INT01]
          BC Inter Branch Sales (F4211.0) [SO01] -> cCharacter [EV01]
End If
// SAR 5913204,5953388 Begins
InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
// SAR 5913204, 5953388 Ends
//
// SAR 8955609 - Get pricing on override flag
SetPricingOnOverrideFlagSOEL23(B4205101.SetPricingOnOverrideFlagSOEL23)
     VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
     BC Sales Order Status 18 (F4211.0) [SO18] -> cValue [EV01]
//
//    RETRIEVE THE STOCKING TYPE  TO PASS TO KIT PROCESSING
//
If BC Kit Master Line Number (F4211.0) [KTLN] is equal to "0"
     GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
          GC Business Unit [MCU] -> szBranch [MCU]
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          VA grd_STKT_Stocking_Type [STKT] <- cStockingType [STKT]
          UNDEFINED <> cIssueTypeCode [ITC]
          UNDEFINED <> cPlanningCode [MPST]
          UNDEFINED <> mnPlanningFence [MTF1]
          UNDEFINED <> mnFreezeFence [MTF2]
          UNDEFINED <> mnMessageDisplayFence [MTF3]
          UNDEFINED <> mnTimeFence [MTF4]
          UNDEFINED <> cPlanningFenceRule [MPSP]
          UNDEFINED <> cFixedVariableLeadtime [MRPP]
          UNDEFINED <> mnLeadtimeLevel [LTLV]
          UNDEFINED <> mnLeadtimeMfg [LTMF]
          UNDEFINED <> mnLeadtimeCumulative [LTCM]
          UNDEFINED <> mnLeadtimePerUnit [LTPU]
          UNDEFINED <> mnMFGLeadtimeQty [MLQ]
          UNDEFINED <> mnShrinkFactor [SRNK]
          UNDEFINED <> cShrinkFactorMethod [SRKF]
          UNDEFINED <> cOrderPolicyCode [OPC]
          UNDEFINED <> mnOrderPolicyValue [OPV]
          UNDEFINED <> mnAccountingCostQuantity [ACQ]
          UNDEFINED <> cTimeBasisCode [TIMB]
          UNDEFINED <> mnMoveHours [MOVD]
          UNDEFINED <> mnQueueHours [QUED]
          UNDEFINED <> mnStandardSetupHours [SETL]
          UNDEFINED <> cErrorIndicator [ERRC]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> mnLowLevelCode [LLX]
          "1" -> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          UNDEFINED <> cNetChangeFlag [MRPC]
          "0" -> idF4102Pointer [GENLNG]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> mnSafetyStock [SAFE]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cAbcCode [ABCS]
          UNDEFINED <> cAllocateByLot [CMGL]
          UNDEFINED <> szMasterPlanning [PRP5]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> cPotencyControl [OT1Y]
          UNDEFINED <> mnStandardPotency [STDP]
          UNDEFINED <> cLotExpDateCalcMeth [LECM]
          UNDEFINED <> cActiveIngredientFlag [AING]
          UNDEFINED <> cCrossDockFlagYN [XDCK]
End If
// SAR 6627251- disable GC extended weight for configured parent line
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedWeight)
End If
If VA grd_STKT_Stocking_Type [STKT] is equal to ("C","K")
     VA grd_EV12_KitProcessed [EV12] = "1"
End If
//
//    NEW FOR KIT PROCESSING    - SEE ADVANCED PRICING
//
VA grd_UORG_OrigQtyOrdered [UORG] = BC Units - Order/Transaction Quantity (F4211.0) [UORG]
// Sar 5057954
VA grd_OrigParentBranchPlant_MCU [MCU] = BC Business Unit - Header (F4211.0) [HDBU]
// sar 5057954 End
// Sar 5492817 Begin - Added SV form mode conditon.
// SAR 7979952 Begin - If the updatable status is greater than the next status
// for the config parent item, enable the row and row exit Kit/Configurator.
If PO szNonUpdatableStatus [NXT2] is greater than "0"
And BC Status Code - Next (F4211.0) [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
And SV Form_ Mode is not equal to CO COPY_MODE
     Disable Grid(FC Grid, <Currently Selected Row>, <All Columns>)
     // SAR 7037607- disable the row exit to configurator, when the status is
     // beyond the limit- Related SAR 6058967
     Disable Control(HC &Kits/Configurator)
End If
! If PO szNonUpdatableStatus [NXT2] is greater than "0"
! And BC Status Code - Next (F4211.0) [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
! And SV Form_ Mode is not equal to CO COPY_MODE
     ! Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
! Else
     ! Enable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
! End If
If PO szNonUpdatableStatus [NXT2] is greater than "0"
And PO szNonUpdatableStatus [NXT2] is greater than BC Status Code - Next (F4211.0) [NXTR]
And SV Form_ Mode is not equal to CO COPY_MODE
And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
     Enable Control(HC &Kits/Configurator)
Else
     If PO szNonUpdatableStatus [NXT2] is greater than "0"
     And BC Status Code - Next (F4211.0) [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
     And SV Form_ Mode is not equal to CO COPY_MODE
     And VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          Disable Control(HC &Kits/Configurator)
     End If
End If
// SAR 7979952 End
//
// Format the Location in Change Mode
//
If SV Form_ Mode is not equal to CO COPY_MODE
     // //Sar 6882591 – Do not call F4100 Format Location function when the
     // Inventory Interface is 'N'.
     // SAR 8804564 - Move the call to Get Line Type Constants above so that the
     // Text Line variable can also be retrieved and utilized at that time.
     If VA frm_cInventoryInterface_IVI [IVI] is not equal to "N"
          FormatLocation(B4000310.FormatLocation)
               BC Business Unit (F4211.0) [MCU] -> szCostCenter [MCU]
               GC Location  [LOCN] <- szDisplayFormatLocation [WL01]
               BC Location (F4211.0) [LOCN] -> szFileFormatLocation [LOCN]
               UNDEFINED <> cValidate [MODE]
               UNDEFINED <> szAisle [AISL]
               UNDEFINED <> szBin [BIN]
               UNDEFINED <> szLocation3 [LA03]
               UNDEFINED <> szLocation4 [LA04]
               UNDEFINED <> szLocation5 [LA05]
               UNDEFINED <> szLocation6 [LA06]
               UNDEFINED <> szLocation7 [LA07]
               UNDEFINED <> szLocation8 [LA08]
               UNDEFINED <> szLocation9 [LA09]
               UNDEFINED <> szLocation10 [LA10]
               "1" -> cMode [MODE]
               UNDEFINED <> idBranchConstantRecord [GENLNG]
          // SAR 4924702 - Location
          VA grd_PreviousLocation_LOCN [LOCN] = GC Location  [LOCN]
     End If
End If
//
//     If copy mode,use PO for beginning status and next status.
//
If SV Form_ Mode is equal to CO COPY_MODE
     GC Last Stat [LTTR] = PO szDupBeginningStatus [LTT2]
     // SAR 4693705
     GC Next Stat [NXTR] = PO szDupNextStatus [NXT2]
     // End SAR 4693705
     GC Original Line Number [OGNO] = BC Line Number (F4211.0) [LNID]
     GC Or Ty [DCTO] = PO szDupOrdertype [DCT]
     GC Quantity Canceled [SOCN] = <Blank>
     GC Quantity Backordered [SOBK] = <Blank>
     GC Quantity Shipped [SOQS] = <Blank>
     // SAR 1767078
     GC Orig Ord Type [OCTO] = VA frm_ODCT_Original_Order_Type [ODCT]
     GC Original Order No [OORN] = VA frm_OORN_Original_Order_No [OORN]
     GC OKCO- Doc Co (wf) [OKCO] = VA frm_OKCO_Original_Order_Co [OKCO]
     //
     GC Cancel Date [CNDJ] = <Blank>
     GC Sched Pick [PDDJ] = <Blank>
     GC Promised Delivery [RSDJ] = <Blank>
     GC Request Date [DRQJ] = <Blank>
     // SAR 2898467
     GC Promised Ship [PPDJ] = <NULL>
     // SAR 7201690 Begin
     GC Price Effective Date [PEFJ] = <NULL>
     // SAR 7201690 End
     // SAR#2126221 - Keep Source of Data in Copy Mode
     GC Source of Data [EV17] = "1"
     // SAR 5557431 Begin/End ADD
     // SAR 8955607 - Taxed Prices Enhancement - In Copy mode,
     //  Blank Out Original Tax Date and Taxed Price Override Code
     If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
          GC Internal SO Tax Date [DTXJ] = <Blank>
          GC Taxed Price Override Code [TPROV] = "1"
     Else
          GC Price Over Cd [PROV] = "1"
     End If
     // SAR 6883975
     VA grd_CSTO_Cost_Over [CSTO] = "1"
     // SAR 8962196
     GC Requested Del  Time [DRQT] = <NULL>
     GC Scheduled Pick Time [PDTT] = <NULL>
     GC Promised Del  Time [RSDT] = <NULL>
End If
If SV Form_ Mode is equal to CO COPY_MODE
     If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
          GC Price Over Cd [PROV] = "0"
          VA grd_CSTO_Cost_Over [CSTO] = "0"
          //
          // SAR 8955607 - Taxed Prices Enhancement - Do not Set
          // Taxed Price Override Code for Config Parent Item
          //
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               GC Taxed Price Override Code [TPROV] = "0"
          End If
     End If
     If BC Item Number - Related (Kit) (F4211.0) [RLIT] is greater than "0"
     And BC Related Kit Component (F4211.0) [RKIT] is greater than "0"
          GC Price Over Cd [PROV] = "0"
          VA grd_CSTO_Cost_Over [CSTO] = "0"
          //
          // SAR 8955607 - Taxed Prices Enhancement - Do not Set
          // Taxed Price Override Code for Config Components
          //
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               GC Taxed Price Override Code [TPROV] = "0"
          End If
     End If
End If
// Handle Blanket Order lines
If BC Original Order Type (F4211.0) [OCTO] is not equal to <Blank>
And BC Original Order Type (F4211.0) [OCTO] is not equal to BC Order Type (F4211.0) [DCTO]
     GetUDC(X0005.GetUDC)
          "OCTO" -> szDataDictionaryItem [DTAI]
          "40" -> szSystemCode [SY]
          "BT" -> szRecordTypeCode [RT]
          BC Original Order Type (F4211.0) [OCTO] -> szUserDefinedCode [KY]
          UNDEFINED <> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_DTAI_szErrorMsgCode [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     // SAR 6030331
     If VA frm_DTAI_szErrorMsgCode [DTAI] is equal to or empty <Blank>
          // SAR 6554311 - Locking the fields if SO is released form a Blanket Order
          If BC Original Order Number (F4201.0) [OORN] is less than or equal to <Blank>
          And BC Original Order Type (F4201.0) [OCTO] is less than or equal to <Blank>
          And BC Document Company (Original Order) (F4201.0) [OKCO] is less than or equal to <Blank>
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               // SAR 6988814
               VA frm_cOrderReleasedFromBlanket [EV01] = "Y"
               //
               // SAR 8955607 - Taxed Prices Enhancement - Disable Taxed Price fields
               //  if the Line is released from Blanket to retain the prices from Blanket.
               //
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
          End If
     End If
End If
//
If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
     F4074PriceAdjustmentLedgerServer(B4500090.F4074PriceAdjustmentLedgerServer)
          "0" -> cActionCode [ACTN]
          "1" -> cFromPrimaryFile [EV01]
          UNDEFINED <> szComputerIdPrimary [CTID]
          UNDEFINED <> mnLineNoPrimaryWF [XLIN]
          BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO] -> mnDocNoPrimary [DOCO]
          BC Order Type (F4211.0) [DCTO] -> szDocTypePrimary [DCTO]
          BC Order Company (Order Number) (F4211.0) [KCOO] -> szKeyCoPrimary [KCOO]
          BC Line Number (F4211.0) [LNID] -> mnLineNoPrimaryFile [LNID]
          "1" -> cSumPrimaryFile [EV02]
          UNDEFINED <> mnUnitPricePrimary [UPRC]
          UNDEFINED <> mnForeignPricePrimary [FUP]
          UNDEFINED <> cToSecondaryFile [EV03]
          UNDEFINED <> szComputerIdSecondary [CTID]
          UNDEFINED <> mnLineNoSecondaryWF [XLIN]
          UNDEFINED <> szDocTypeSecondary [OCTO]
          UNDEFINED <> szKeyCoSecondary [OKCO]
          UNDEFINED <> mnLineNoSecondaryFile [OGNO]
          UNDEFINED <> cSumSecondaryFile [EV04]
          UNDEFINED <> mnUnitPriceSecondary [UPRC]
          UNDEFINED <> mnForeignPriceSecondary [FUP]
          UNDEFINED <> cSuppressErrors [EV05]
          UNDEFINED <> szErrorMessageId [DTAI]
          UNDEFINED <> mnDocNoSecondary [DOCO]
          UNDEFINED <> mnJobNoPrimary [JOBS]
          UNDEFINED <> mnJobNoSecondary [JOBS]
          UNDEFINED <> mnAdjRevisionLvlPrimary [AREV]
          UNDEFINED <> mnAdjRevisionLvlSecondary [AREV]
          UNDEFINED <> cNumPrimaryKeys [EV06]
          VA grd_DETD_Detached_Adjustment [DETD] <- mnSumDetachedPrimary [UPR2]
          VA grd_DETF_Foreign_Detached_Adj [DETF] <- mnFrgnSumDetachedPrimary [FUP]
          UNDEFINED <> cNumSecondaryKeys [EV07]
          UNDEFINED <> mnSumDetachedSecondary [UPR3]
          UNDEFINED <> mnFrgnSumDetachedSecondary [FUP]
          UNDEFINED <> mnUnitCostPrimary [UNCS]
          UNDEFINED <> mnUnitCostForeignPrimary [UNCS]
          UNDEFINED <> mnUnitCostSecondary [UNCS]
          UNDEFINED <> mnUnitCostForeignSecondary [UNCS]
          UNDEFINED <> szProgramId [PID]
          UNDEFINED <> cAdjustmentTypePrimary [OLVL]
          UNDEFINED <> cAdjustmentTypeSecondary [OLVL]
          UNDEFINED <> cProcessingMode [EV01]
          UNDEFINED <> mnProcessIDPrimary [PEID]
          UNDEFINED <> mnTransactionIDPrimary [TCID]
          FI mnProcessID [PEID] <> mnProcessIDSecondary [PEID]
          FI mnTransactionID [TCID] <> mnTransactionIDSecondary [TCID]
          UNDEFINED <> szOrderSuffixPrimary [SFXO]
          UNDEFINED <> szOrderSuffixSecondary [SFXO]
          UNDEFINED <> mnPriceHistoryAltKeyPrimary [AKID]
          UNDEFINED <> mnPriceHistoryAltKeySecondary [AKID]
          UNDEFINED <> szPriceHistoryAltKeySourcePrim [SRCFD]
          UNDEFINED <> szPriceHistoryAltKeySourceSec [SRCFD]
          UNDEFINED <> mnSubSequenceNumberPrim [SUBSEQ]
          UNDEFINED <> mnSubSequenceNumberSec [SUBSEQ]
          UNDEFINED <> mnAddressNumPriceAdjPrim [ANPS]
          UNDEFINED <> mnAddressNumPriceAdjSec [ANPS]
          UNDEFINED <> mnTierPrimary [TIER]
          UNDEFINED <> mnTierSecondary [TIER]
          UNDEFINED <> cIncludeOrExcludeCode [INX]
          UNDEFINED <> szSelectedAdjLevelCodes [GEN10]
          FC To Currency Code [CRDC] -> szCurrencyCodeFrom [CRCD]
          FC Currency Code [CRCD] -> szCurrencyCodeTo [CRDC]
          VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFrom [TRR1]
          VA frm_mnTriangulationRateTo [MATH01] -> mnTriangulationRateTo [TRR2]
          VA frm_cCurrencyConversionMethod [CRCM] -> cCurrencyConversionMethod [CRCM]
          FC Exchange Rate [CRR] -> mnCurrencyConverRate [CRR]
End If
//
If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
And SV Form_ Mode is equal to CO UPDATE_MODE
And GC Next Stat [NXTR] is less than "999"
     //
     // Check component status, only if PO is set to check cutoff status and kit is
     // not yet dirty.
     If PO szNonUpdatableStatus [NXT2] is greater than "0"
     And BC Kit Component Dirty Flag (F4211.0) [KITDIRTY] is not equal to "1"
     And VA grd_cKitCompPostCutoffStatus [EV01] is not equal to "1"
          // Check if any of the kit's component is past the cut-off status
          VerifyKitCompIsPostCutoffStatus(B4208370.VerifyKitCompIsPostCutoffStatus)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompany [KCOO]
               BC Kit Identifier (F4211.0) [KITID] -> mnKitIdentifier [KITID]
               VA grd_cKitCompPostCutoffStatus [EV01] <- cIsKitCompPostCutOff [EV01]
               PO szNonUpdatableStatus [NXT2] -> szPONonUpdatableStatus [NXTR]
     End If
     //
     // If its dirty kit or component past the cutoff status, disable the fields
     // that triggers KitSelectionWindow and its RowExit.  Also disable the 3
     // quantity fields.
     If VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
     Or BC Kit Component Dirty Flag (F4211.0) [KITDIRTY] is equal to "1"
     Or VA grd_EditLine_ErrorCode_ERRC [ERRC] is equal to "1"
          Disable Control(HC &Kits/Configurator)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC Branch/Plant)
          Disable Grid(FC Grid, <Currently Selected Row>, GC PC1)
          Disable Grid(FC Grid, <Currently Selected Row>, GC PC2)
          Disable Grid(FC Grid, <Currently Selected Row>, GC PC3)
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
          Disable Grid(FC Grid, <Currently Selected Row>, GC UoM)
          Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedDate)
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityShipped)
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityBackordered)
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityCanceled)
     End If
End If
//
//     If header values have changed, load each grid row with the header values.
//    SAR 3373224, Change the Less Than or Equal to Less Than
// SAR 4200974-Modified IF condition
// SAR 5544496-Removed Cust PO condition, incorporate into N4002380
// SAR 8519510 - Don't copy header changes to cancelled lines
// SAR 8547650 - Don't copy header changes to kit parent and component lines
// if the kit is dirty or one of the components is past the PO non-updatable
// status.
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     // Skip cancelled lines
     If BC Status Code - Next (F4211.0) [NXTR] is equal to "999"
          VA evt_cSkipLineForHdrToDtlUpdate [EV01] = "1"
     Else
          // Don't process lines that are past the non-updatable status
          If PO szNonUpdatableStatus [NXT2] is not equal to <Blank>
          And PO szNonUpdatableStatus [NXT2] is not equal to <NULL>
          And BC Status Code - Next (F4211.0) [NXTR] is greater than or equal to PO szNonUpdatableStatus [NXT2]
               VA evt_cSkipLineForHdrToDtlUpdate [EV01] = "1"
          Else
               // Don't update the requested date on kit lines that are dirty or have a
               // component past the non-updatable status
               If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
                    If BC Kit Component Dirty Flag (F4211.0) [KITDIRTY] is equal to "1"
                    Or VA grd_cKitCompPostCutoffStatus [EV01] is equal to "1"
                         VA evt_cSkipReqDateForHdrToDtlUpd [EV01] = "1"
                    End If
               Else
                    // For component lines, check the saved kit flags to determine if the
                    // component should be updated
                    If BC Kit Master Line Number (F4211.0) [KTLN] is greater than "0"
                    And BC Related Kit Component (F4211.0) [RKIT] is equal to "0"
                         If VA frm_mnPrevKitId [KITID] is equal to BC Kit Identifier (F4211.0) [KITID]
                              VA evt_cSkipReqDateForHdrToDtlUpd [EV01] = VA frm_cPrevKitReqDateBypassFlag [EV01]
                         Else
                              // If the kit parent isn't in the grid, then it must have been canceled (and
                              // we're not displaying canceled lines) or it was purged to history.
                              // Skip the header to detail update for this component.
                              VA evt_cSkipReqDateForHdrToDtlUpd [EV01] = "1"
                         End If
                    End If
               End If
          End If
     End If
     //
     // Whenever we find a kit parent line, save the kit's KITID and the flag that
     // tells whether the kit was skipped.  This flag will be used to determine if
     // we should skip the kit's components.
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
          If VA evt_cSkipLineForHdrToDtlUpdate [EV01] is equal to "1"
               VA evt_cSkipReqDateForHdrToDtlUpd [EV01] = "1"
          End If
          VA frm_mnPrevKitId [KITID] = BC Kit Identifier (F4211.0) [KITID]
          VA frm_cPrevKitReqDateBypassFlag [EV01] = VA evt_cSkipReqDateForHdrToDtlUpd [EV01]
     End If
End If
//
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
And VA evt_cSkipLineForHdrToDtlUpdate [EV01] is not equal to "1"
     //
     // SAR#2698596 - Get the changed fields on addi'nal info form and store in
     // F42UI12 later.
     VA frm_szChangedZoneNum_ZON [ZON] = <NULL>
     VA frm_szChangedStopCode_STOP [STOP] = <NULL>
     VA frm_szChangedRouteCode_ROUT [ROUT] = <NULL>
     VA frm_szReasonCode [ARSN] = <NULL>
     //
     // ***********************************************************************
     // SAR 2920441
     // Add Apply Freight & Freight Code to the Call to Load Changed
     // SO Header Values so that the new Values can be passed to
     // F4211 Pre Process Edit Line.
     // ***********************************************************************
     // ***********************************************************************
     // SAR 2746121 - Begin/End CHANGE
     // Add the User Reserved fields, Adj. Schedule and Trade Discount
     // to the call to Load Changed SO Header Values. Also, the returned
     // Header Branch will be passed to the GC Revenue BU instead of
     // FC Business Unit.
     // ***********************************************************************
     // SAR 4437023- Date Default on Change
     VA evt_jdPreviousDateRequested [DRQJ] = GC Request Date [DRQJ]
     VA frm_TaxExplanationCode [EXR1] = GC Tax Explanation [EXR1]
     VA frm_TaxRateArea [TXA1] = GC Tax Area [TXA1]
     // SAR 7620552 RCD Not Define in P40HDR
     // SAR 8551659 - Only when VR01 is changed in F4201, GC Custmer PO is changed
     LoadChangedSOHeaderValues(N4201090.LoadChangedSOHeaderValues)
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Order Company [KCOO] <> szOrderKeyCompany [KCOO]
          FC Address Number [AN8] <> mnSoldTo [AN8]
          GC Reference  [VR01] <> szCustomerPO [VR01]
          GC Header Business Unit [EMCU] <> szHeaderBranch [EMCU]
          GC Ship To Number [SHAN] <> mnShipTo [SHAN]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          GC Request Date [DRQJ] <> jdDateRequested [DRQJ]
          GC Sched Pick [PDDJ] <> jdPromisedDeliveryDate [PDDJ]
          GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          GC Print Message [INMG] <> szPrintMessage [INMG]
          VA frm_TaxExplanationCode [EXR1] <> szTaxExplanationCode [EXR1]
          VA frm_TaxRateArea [TXA1] <> szTaxArea [TXA1]
          VA frm_PaymentTermsCode [PTC] <> szPaymentTerms [PTC]
          GC Pay Inst [RYIN] <> cPaymentInstrument [RYIN]
          GC Carrier Number [CARS] <> mnCarrier [CARS]
          VA frm_cApplyFreightChg_AFT [AFT] <> cApplyFreightYN [AFT]
          VA frm_szFreightCodeChg_FRTH [FRTH] <> szFreightHandlingCode [FRTH]
          VA frm_szChangedRouteCode_ROUT [ROUT] <> szRouteCode [ROUT]
          VA frm_szChangedStopCode_STOP [STOP] <> szStopCode [STOP]
          VA frm_szChangedZoneNum_ZON [ZON] <> szZoneNumber [ZON]
          VA frm_Salesperson1 [SLSM] <> mnCommissionCode1 [CMC1]
          VA frm_SalespersonCommission1 [SLCM] <> mnRateCommission1 [CMR1]
          VA frm_Salesperson2 [SLM2] <> mnCommissionCode2 [CMC2]
          VA frm_SalespersonCommission2 [SLC2] <> mnRateCommission2 [CMR2]
          VA frm_szUserReservedCode_URCD [URCD] <> szUserReservedCode [URCD]
          VA frm_jdUserReservedDate_URDT [URDT] <> jdUserReservedDate [URDT]
          VA frm_mnUserReservedAmt_URAT [URAT] <> mnUserReservedAmount [URAT]
          VA frm_mnUserReservedNumber_URAB [URAB] <> mnUserReservedNumber [URAB]
          VA frm_szUserReservedRef_URRF [URRF] <> szUserReservedReference [URRF]
          GC Adj. Schedule [ASN] <> szPriceAdjustmentSchedule [ASN]
          VA frm_mnTradeDiscount_TRDC [TRDC] <> mnDiscountTrade [TRDC]
          GC Requested Del  Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
          GC Mod Trn [MOT] <> szModeOfTransport [MOT]
          VA frm_szReasonCode [ARSN] <> szReasonCode [RCD]
     // SAR 8723431 - This will call for the Audit Info if there is change from
     // header to detail in Update Mode only and audit logging is turned on.
     If SV Form_ Mode is equal to CO UPDATE_MODE
          // SAR 8676451:For Process Approval and Audit Logs
          Press Button(FC Approval)
          Press Button(FC Audit Logging)
     End If
     // SAR 8547650 - If we should skip the requested date update for this line,
     // restore the previous date value
     If VA evt_cSkipReqDateForHdrToDtlUpd [EV01] is equal to "1"
          GC Request Date [DRQJ] = VA evt_jdPreviousDateRequested [DRQJ]
     End If
     // SAR 8547650 - For kit lines, if the Tax Explanation Code or Tax Rate/Area
     // changed, set the flag to trigger the data propagation logic in EditLine
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     And PO cHideKitComponents [EV11] is equal to "1"
          If VA frm_TaxRateArea [TXA1] is not equal to GC Tax Area [TXA1]
          Or VA frm_TaxExplanationCode [EXR1] is not equal to GC Tax Explanation [EXR1]
               SetTaxFieldEnteredSOEL25(B4205101.SetTaxFieldEnteredSOEL25)
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                    "1" -> cValue [EV01]
          Else
               SetTaxFieldEnteredSOEL25(B4205101.SetTaxFieldEnteredSOEL25)
                    VA grd_szEditLineSOEMBFFlags_SOEF [SOEF] <> szEditLineSOEMBFFlags [SOEF]
                    "0" -> cValue [EV01]
          End If
     End If
     // SAR 4924382
     If BC Address Number - Ship To (F4211.0) [SHAN] is not equal to <Blank>
     And BC Address Number - Ship To (F4211.0) [SHAN] is not equal to <NULL>
     And BC Address Number - Ship To (F4211.0) [SHAN] is not equal to "0"
     And GC Ship To Number [SHAN] is not equal to <Blank>
     And GC Ship To Number [SHAN] is not equal to <NULL>
     And GC Ship To Number [SHAN] is not equal to "0"
          If BC Address Number - Ship To (F4211.0) [SHAN] is not equal to GC Ship To Number [SHAN]
          Or VA evt_jdPreviousDateRequested [DRQJ] is not equal to GC Request Date [DRQJ]
               If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
                    VA grd_EV25_CfgItemProcessed [EV25] = "0"
                    VA evt_cConfigFlagPrevSet_EV01 [EV01] = "1"
               End If
          End If
     End If
     // End SAR 4924382
     // SAR 4200974
     // SAR 8551659- Removed the code that always copies header VR01 to detail
     //
     // SAR 4686505- Date Default on Change
     // Sar 6074781 - Changed the condition to check for cLoadHeaderToDetail
     If PO cLoadHeaderToDetail [EV18] is equal to "1"
     And VA frm_ACTI_Action_Code [ACTI] is equal to "C"
          If VA evt_jdPreviousDateRequested [DRQJ] is not equal to GC Request Date [DRQJ]
               GC Sched Pick [PDDJ] = <NULL>
               GC Promised Ship [PPDJ] = <NULL>
               GC Promised Delivery [RSDJ] = <NULL>
               // SAR 5591073 - Begin Add; Clear the Quantity fields so that it can be
               // recalculated by EditLine
               GC Quantity Shipped [SOQS] = "0"
               GC Quantity Backordered [SOBK] = "0"
               GC Quantity Canceled [SOCN] = "0"
               // Sar 6158562
               If VA grd_STKT_Stocking_Type [STKT] is equal to ("C","K")
                    // SAR 8547650 - Disable the line to blank out the stocking type.
                    ! VA grd_STKT_Stocking_Type [STKT] = "0"
                    // SAR # 7884806
                    VA grd_EV12_KitProcessed [EV12] = "0"
               End If
               // SAR 5591073 - End ADD
          End If
     End If
     //      SAR # 1709417
     //      Call BF to store values in F42UI12 cache
     //
     VA frm_szNULLValue [DCTO] = <NULL>
     VA frm_cNULLValue [EV01] = <NULL>
     //
     // ***********************************************************************
     // SAR 2920441
     // Increment WF Line Number so that it can be written to F42UI12 correctly
     // Use the values returned from Load Changed SO Header Values
     // ***********************************************************************
     //
     // SAR 4155042-Begin
     If FI Jobnumber [JOBS] is less than or equal to "0"
          GetInternalNextNumber(B0000564.GetInternalNextNumber)
               FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
     End If
     GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
          FI Computerid [CTID] -> szComputerID [CTID]
          FI Jobnumber [JOBS] -> mnJobNo [JOBS]
          VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
     //
     // SAR 4053020
     If GC Next Stat [NXTR] is not equal to "999"
     Or SV Form_ Mode is not equal to CO UPDATE_MODE
          // SAR 4200974-Skip PreProcess if only Customer PO has changed
          // SAR 5261197- Pass in SRP1-SRP5 so Preprocessor will not overwrite blanks
          // SAR 5544496-Remove Skip PreProcess if only Customer PO has changed.
          // SAR 5814943 - If OP Flags changed in the Header, retrieve some OP fields
          // which are not in the header first then call Pre Process to write all flags
          // into F42UI12
          If VA frm_HeaderValuesChanged [EV01] is equal to "1"
          Or FI cIsOPChangedInHeader [EV01] is equal to "1"
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    // SAR #7201489-P4210 will issue a Record Invalid error 0002
                    F49211MaintainSalesDetailTable(B4201270.F49211MaintainSalesDetailTable)
                         "R" -> cActionCode [ACTI]
                         FI DocumentOrderInvoiceE [DOCO] -> mnOrderNumber [DOCO]
                         FI OrderType [DCTO] -> szOrderType [DCTO]
                         FI CompanyKeyOrderNo [KCOO] -> szOrderCompany [KCOO]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         "1" -> cSuppressError [SUPPS]
                         VA frm_OPMultiSourceGroup_OPMG [OPMG] <- szOPMultiSourceGroup [OPMG]
                         VA frm_OPShippingGroup_OPSG [OPSG] <- szOPShippingGroup [OPSG]
                         VA frm_OPPromiseLineYN_OPYN [OPYN] <- cOPPromiseLineYN [OPYN]
               End If
               // SAR 7620552 RCD Not Define in P40HDR
               // SAR 8716901 Passed Pull Signal Value
               F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
                    FI Computerid [CTID] <> szComputerID [CTID]
                    FI Jobnumber [JOBS] <> mnJobNo [JOBS]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <> mnWFLineNo [LNIX]
                    FI CompanyKeyOrderNo [KCOO] <> szKeyCo [KCOO]
                    FI DocumentOrderInvoiceE [DOCO] <> mnOrderNo [DOCO]
                    FI OrderType [DCTO] <> szOrderType [DCTO]
                    GC Line Number [LNID] <> mnLineNo [LNID]
                    VA frm_szNULLValue [DCTO] <> szThruGrade [THGD]
                    VA frm_szNULLValue [DCTO] <> szFromGrade [FRGD]
                    BC Sales Catalog Section (F4211.0) [SRP1] <> szSalesReportingCode1 [SRP1]
                    BC Sub Section (F4211.0) [SRP2] <> szSalesReportingCode2 [SRP2]
                    BC Sales Category Code 3 (F4211.0) [SRP3] <> szSalesReportingCode3 [SRP3]
                    BC Sales Category Code 4 (F4211.0) [SRP4] <> szSalesReportingCode4 [SRP4]
                    BC Sales Category Code 5 (F4211.0) [SRP5] <> szSalesReportingCode5 [SRP5]
                    VA frm_szNULLValue [DCTO] <> szPurchasingReportCode1 [PRP1]
                    VA frm_szNULLValue [DCTO] <> szPurchasingReportCode2 [PRP2]
                    VA frm_szNULLValue [DCTO] <> szPurchasingReportCode3 [PRP3]
                    VA frm_szNULLValue [DCTO] <> szPurchasingReportCode4 [PRP4]
                    VA frm_szNULLValue [DCTO] <> szPurchasingReportCode5 [PRP5]
                    VA frm_PaymentTermsCode [PTC] <> szPaymentTerms [PTC]
                    VA frm_cNULLValue [EV01] <> cBasedonDate [DTBS]
                    VA frm_mnTradeDiscount_TRDC [TRDC] <> mnDiscountTrade [TRDC]
                    VA frm_szNULLValue [DCTO] <> szPricingCategory [PRGR]
                    VA frm_szNULLValue [DCTO] <> szCompanyKey [KCO]
                    VA frm_szNULLValue [DCTO] <> szDocumentType [DCT]
                    VA frm_TaxRateArea [TXA1] <> szTaxArea [TXA1]
                    VA frm_TaxExplanationCode [EXR1] <> szTaxExplanationCode [EXR1]
                    VA frm_cNULLValue [EV01] <> cPriorityProcessing [PRIO]
                    VA frm_cNULLValue [EV01] <> cBackordersAllowedYN [BACK]
                    VA frm_cNULLValue [EV01] <> cSubstitutesAllowedYN [SBAL]
                    VA frm_szNULLValue [DCTO] <> szNatureOfTransaction [NTR]
                    VA frm_szChangedRouteCode_ROUT [ROUT] <> szRouteCode [ROUT]
                    VA frm_szChangedStopCode_STOP [STOP] <> szStopCode [STOP]
                    VA frm_szChangedZoneNum_ZON [ZON] <> szZoneNumber [ZON]
                    VA frm_cApplyFreightChg_AFT [AFT] <> cApplyFreightYN [AFT]
                    VA frm_szFreightCodeChg_FRTH [FRTH] <> szFreightHandlingCode [FRTH]
                    VA frm_szNULLValue [DCTO] <> szShippingCommodityClass [SHCM]
                    VA frm_szNULLValue [DCTO] <> szShippingConditionsCode [SHCN]
                    VA frm_szNULLValue [DCTO] <> szSerialNumberLot [SERN]
                    VA frm_szNULLValue [DCTO] <> szRepriceBasketPriceCat [RPRC]
                    VA frm_szNULLValue [DCTO] <> szOrderRepriceCategory [ORPR]
                    VA frm_szNULLValue [DCTO] <> szGlClass [GLC]
                    VA frm_cNULLValue [EV01] <> cApplyCommissionYN [ACOM]
                    VA frm_szReasonCode [ARSN] <> szReasonCode [RCD]
                    VA frm_szNULLValue [DCTO] <> szUnitOfMeasureGrossWt [GWUM]
                    VA frm_szNULLValue [DCTO] <> szSubledger [SBL]
                    VA frm_cNULLValue [EV01] <> cSubledgerType [SBLT]
                    VA frm_szNULLValue [DCTO] <> szCodeLocationTaxStat [LCOD]
                    VA frm_cNULLValue [EV01] <> cWoOrderFreezeCode [UNCD]
                    VA frm_cNULLValue [EV01] <> cCorrespondenceMethod [CRMD]
                    VA frm_szUserReservedCode_URCD [URCD] <> szUserReservedCode [URCD]
                    VA frm_jdUserReservedDate_URDT [URDT] <> jdUserReservedDate [URDT]
                    VA frm_mnUserReservedAmt_URAT [URAT] <> mnUserReservedAmount [URAT]
                    VA frm_mnUserReservedNumber_URAB [URAB] <> mnUserReservedNumber [URAB]
                    VA frm_szUserReservedRef_URRF [URRF] <> szUserReservedReference [URRF]
                    VA frm_szNULLValue [DCTO] <> szRateCodeFrieghtMisc [FRAT]
                    VA frm_EV22_cCacheOn [EV22] -> cUseCacheOrWF_EV01 [EV01]
                    VA grd_cCrossDockFlagYN_XDCK [XDCK] -> cCrossDockFlagYN [XDCK]
                    VA grd_mnCrossDokingPriority_XPTY [XPTY] -> mnCrossDockingPriority [XPTY]
                    VA grd_mnCrossDockOrdeNumber_XORN [XORN] -> mnCrossDockOrderNumber [XORN]
                    VA grd_szCrossDockOrderType_XCTO [XCTO] -> szCrossDockOrderType [XCTO]
                    VA grd_szCrossDockCmpyKey_XKCO [XKCO] -> szCrossDockOrderCompany [XKCO]
                    VA grd_szCrossDockOrdeSuffix_XSFX [XSFX] -> szCrossDockOrderSuffix [XSFX]
                    VA grd_mnCrossDockLineNumber_XLLN [XLLN] -> mnCrossDockLineNumber [XLLN]
                    BC Pull Signal (F4211.0) [PSIG] -> szPullSignal [PSIG]
                    FI cOPPartialShipLineItems [OPLL] -> cOPPartialLineShipmentAllowed [OPLL]
                    FI cOPAllowBackorders [OPBA] -> cOPBackorderAllowed [OPBA]
                    FI cOPAllowSubstitutes [OPSS] -> cOPSubstituteAllowed [OPSS]
                    VA frm_OPMultiSourceGroup_OPMG [OPMG] -> szOPMultiSourceGroup [OPMG]
                    VA frm_OPShippingGroup_OPSG [OPSG] -> szOPShippingGroup [OPSG]
                    VA frm_OPPromiseLineYN_OPYN [OPYN] -> cOPPromiseLineYN [OPYN]
                    FI cOPAllowMultiSource [OPMS] -> cOPAllowMultiSource [OPMS]
               GC Source of Data [EV17] = "7"
          End If
     End If
     //
     // SAR 4155042-Begin
     If VA frm_LNIX_Prev_WF_Line_Num [LNIX] is less than VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
          VA frm_LNIX_Prev_WF_Line_Num [LNIX] = VA grd_mnF42UI11WFLineNumber_LNIX [LNIX]
     End If
     // SAR 4155042-End
End If
//
// SAR 7194952 Begin
//
If SV Form_ Mode is equal to CO COPY_MODE
And VA frm_HeaderValuesChanged [EV01] is not equal to "1"
     If FI Jobnumber [JOBS] is less than or equal to "0"
          GetInternalNextNumber(B0000564.GetInternalNextNumber)
               FI Jobnumber [JOBS] <- mnJobnumberA [JOBS]
     End If
     GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
          "42" -> szSystemCode [SY]
          BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO] -> mnOrderNumber [DOCO]
          GC Orig Ord Type [OCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKey [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          BC Order Suffix (F4211.0) [SFXO] -> szOrderSuffix [SFXO]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA frm_ConfigIDNumber_CFGID [CFGID] <- mnConfigurationIDNumber [CFGID]
          VA evt_ComponentIDNumber_CFGCID [CFGCID] <- mnComponentIDNumber [CFGCID]
     If BC Component Line Number (F4211.0) [CPNT] is greater than "0"
     And BC Item Number - Related (Kit) (F4211.0) [RLIT] is greater than "0"
          CacheProcessAllComponents(B3200370.CacheProcessAllComponents)
               "1" -> cCacheActionCode [EV01]
               "1" -> nIndexNumber [INT01]
               "2" -> nNumberOfKeys [INT01]
               "1" -> cSuppressErrorMessage [SUPPS]
               FI Jobnumber [JOBS] -> mnJobNumber [JOBS]
               VA frm_ConfigIDNumber_CFGID [CFGID] -> mnConfigurationIDNumber [CFGID]
               VA evt_ComponentIDNumber_CFGCID [CFGCID] -> mnComponentIDNumber [CFGCID]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnMBFLineIndex2 [LNIX]
     Else
          GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
               FI Computerid [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
          If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
               LoadCompCacheToSequence(N3201531.LoadCompCacheToSequence)
                    VA frm_ConfigIDNumber_CFGID [CFGID] -> mnConfigurationIDNumber [CFGID]
                    FI Jobnumber [JOBS] -> mnJobnumberA [JOBS]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    FI Computerid [CTID] -> szComputerID [CTID]
                    VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] -> mnParentLineNumberXREF [LNIX]
                    "1" -> cCalledFromP4210 [EV01]
          End If
     End If
End If
// SAR 7194952 End
// SAR # 2055734
If VA frm_cTransfer_Direct_Flag_S011 [SO11] is not equal to <Blank>
     If GC Primary Supplier [VEND] is not equal to <Blank>
          Disable Grid(FC Grid, <Currently Selected Row>, GC SupplierNumber)
     End If
End If
//
// SAR 2536538
VA grd_SO08_Price_Adj_Line [SO08] = BC Price Adjustment Line Indicator (F4211.0) [SO08]
//      Highlight Free Goods Row
// SAR 7304816
If VA grd_SO08_Price_Adj_Line [SO08] is equal to "3"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_PreviousShipToNum_SHAN [SHAN] is not equal to GC Ship To Number [SHAN]
     GC Ship To Number [SHAN] = <NULL>
End If
If VA grd_SO08_Price_Adj_Line [SO08] is equal to "3"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_PrevReqDate_DRQJ [DRQJ] is not equal to GC Request Date [DRQJ]
     GC Request Date [DRQJ] = <NULL>
End If
//
// SAR 6482442 - Begin
// DemandSchedReleased indicates that the Demand Scheduling System has been
// activated by enabling Special Handlingcode of UDC 00/RE. KitProcessed
// indicates a STKT of C or K . Kit Master Line Number indicates  Kit or
// Configured component Times will not be supported for Kit or Configured
// parent items or their components.  So all Kit and Configured related items
// will be disabled here
// SAR 6517140 - Disable Time Kit and configurator components for Free Goods.
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     // SAR 8263665 - Demand Scheduling will be supported for Configured Parent
     If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
     Or BC Kit Master Line Number (F4211.0) [KTLN] is greater than "0"
     Or VA grd_SO08_Price_Adj_Line [SO08] is equal to "3"
     Or VA grd_SO08_Price_Adj_Line [SO08] is equal to "5"
          GC Promised Del  Time [RSDT] = "0"
          GC Scheduled Ship Time [PMDT] = "0"
          GC Scheduled Pick Time [PDTT] = "0"
          GC Requested Del  Time [DRQT] = "0"
          Disable Grid(FC Grid,  <Currently Selected Row>, GC PromisedDel  Time)
          Disable Grid(FC Grid, <Currently Selected Row>, GC PromisedShip Time)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ScheduledPick Time)
          Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedTime)
     End If
End If
// SAR 6482442 - End
//
//
// SAR 6021849
//
If VA grd_SO08_Price_Adj_Line [SO08] is equal to "3"
Or VA grd_SO08_Price_Adj_Line [SO08] is equal to "5"
     // SAR # 2591115 - Display Free Good Rows in Lime
     Set Grid Color(FC Grid, <Currently Selected Row>, <All Columns>, <Lime>)
     SetPricingSOLineInfoALPH08(B4205100.SetPricingSOLineInfoALPH08)
          GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
          VA grd_SO08_Price_Adj_Line [SO08] -> cValue [EV01]
          UNDEFINED <> cErrorCode [ERRC]
End If
//
VA grd_szRelatedCompany_RKCO [RKCO] = BC Company - Key (Related Order) (F4211.0) [RKCO]
VA grd_szRelatedOrderNumber_RORN [RORN] = BC Related PO/SO/WO Number (F4211.0) [RORN]
// SAR 8688487 - In case of Transfer order - copy mode, Document type of
// purchase order should be populated from Duplication order tab of P4310.
If PO cTransferOrderEntry [EV25] is equal to "1"
     VA grd_szRelatedOrderType_RCTO [RCTO] = BC Related PO/SO/WO Order Type (F4211.0) [RCTO]
Else
     If SV Form_ Mode is not equal to CO COPY_MODE
          VA grd_szRelatedOrderType_RCTO [RCTO] = BC Related PO/SO/WO Order Type (F4211.0) [RCTO]
     End If
End If
VA grd_szRelatedLineNumber_RLLN [RLLN] = BC Related PO/SO Line Number (F4211.0) [RLLN]
//
// SAR 2601694
//
//
// SAR 5330594 - sales based on date
VA grd_RPRC_Basket_Reprice_Grp [RPRC] = BC Reprice (Basket Price) Category (F4211.0) [RPRC]
VA grd_ORPR_Order_Reprice_Grp [ORPR] = BC Order Reprice Category (F4211.0) [ORPR]
//
GC Order Repriced Indicator [ORP] = BC Order Repriced Indicator (F4211.0) [ORP]
//
VA grd_APUM_UM_Ent [APUM] = BC Unit of Measure - Entered for Unit Price (F4211.0) [APUM]
VA grd_LPRC_Unit_List_Price [LPRC] = BC Amount - List Price (F4211.0) [LPRC]
VA grd_FPRC_Foreign_List_Price [FPRC] = BC Amount - List Price per Unit (F4211.0) [FPRC]
//
// SAR#2691271
If VA grd_STKT_Stocking_Type [STKT] is equal to "C"
And SV Form_ Mode is equal to CO UPDATE_MODE
     // SAR 4924382
     If VA evt_cConfigFlagPrevSet_EV01 [EV01] is not equal to "1"
          VA grd_EV25_CfgItemProcessed [EV25] = "1"
     End If
End If
//
// SAR#2449637
If PO cDisableorHidePrice [EV04] is not equal to "1"
Or PO cDisableorHidePrice [EV04] is not equal to "2"
     If GC Ln Ty [LNTY] is equal to VA frm_cPrevLineType_LNTY [LNTY]
     And VA frm_cPrevLntyProtectPrice_EV01 [EV01] is equal to "1"
          Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
          // SAR 5330594 - sales based on date
          //
          // SAR 8955603 - Disable taxed price columns
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
          End If
     Else
          F40205.FetchSingle  [Index 1: line type file]
               GC Ln Ty [LNTY] = TK Line Type [LNTY]
               VA grd_cLntyProtectPrice_PDC1 [PDC1] <- TK Print on Document 1 (Y/N) [PDC1]
          // Sar 5979490
          VA frm_cPrevLntyProtectPrice_EV01 [EV01] = <Blank>
          If VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "1"
          Or VA grd_cLntyProtectPrice_PDC1 [PDC1] is equal to "Y"
               Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
               Disable Grid(FC Grid,  <Currently Selected Row>, GC ExtendedPrice)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
               //
               // SAR 8955603 - Disable taxed price columns
               If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC TaxedExtended Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedUnit Price)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Foreign TaxedExtended Price)
               End If
               //
               VA frm_cPrevLntyProtectPrice_EV01 [EV01] = "1"
               // SAR 5330594 - sales based on date
          End If
          VA frm_cPrevLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
     End If
End If
//
If GC WHSE Status [SWMS] is equal to "O"
And VA frm_cCancelLineDisabled_EV01 [EV01] is less than or equal to <Blank>
     Disable Control(HC &Cancel Line)
     VA frm_cCancelLineDisabled_EV01 [EV01] = "1"
End If
//
// SAR 3026206
// IF COPY MODE, COMMIT THE CONFIG AND KIT PARENT OR COMPONENT ACCORDING TO LNTY
//
If SV Form_ Mode is equal to CO COPY_MODE
     //
     // IF REGULAR ITEM, RESET ALL THE FLAGS
     //
     If VA grd_STKT_Stocking_Type [STKT] is not equal to "C"
     And VA grd_STKT_Stocking_Type [STKT] is not equal to "K"
     And GC Related Item No [RLIT] is less than or equal to <Blank>
          VA frm_cParentCommitSoft_EV01 [EV01] = "0"
          VA grd_cByPassCommitment_EV09 [EV09] = "0"
     End If
     //
     If VA grd_STKT_Stocking_Type [STKT] is equal to ("C","K")
          //
          // RESET THE FLAG IN CASE ANOTHER PARENT IS COPIED
          //
          VA frm_cParentCommitSoft_EV01 [EV01] = "0"
          //
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               GC Ln Ty [LNTY] -> szLineType [LNTY]
               UNDEFINED <> szLineTypeDesc [LNDS]
               UNDEFINED <> szLineTypeDesc2 [LND2]
               UNDEFINED <> cGLInterface [GLI]
               UNDEFINED <> cInventoryInterface [IVI]
               UNDEFINED <> cARInterface [ARI]
               UNDEFINED <> cAPInterface [API]
               UNDEFINED <> cReverseSign [RSGN]
               UNDEFINED <> cTextLine [TXYN]
               UNDEFINED <> cIncludeSalesCOGS [PRFT]
               UNDEFINED <> cIncludeCashDiscount [CDSC]
               UNDEFINED <> cIncludeTax1 [TX01]
               UNDEFINED <> cIncludeTax2 [TX02]
               UNDEFINED <> szGLOffset [GLC]
               UNDEFINED <> cPrintDocument1 [PDC1]
               UNDEFINED <> cPrintDocument2 [PDC2]
               UNDEFINED <> cPrintDocument3 [PDC3]
               UNDEFINED <> cRecordVariance [PDC4]
               UNDEFINED <> cIncludeTotalDocument1 [IDC1]
               UNDEFINED <> cIncludeTotalDocument2 [IDC2]
               UNDEFINED <> cIncludeTotalDocument3 [IDC3]
               UNDEFINED <> cIncludeTotaldocument4 [IDC4]
               UNDEFINED <> cIncludeColumnSalesJournal [CSJ]
               UNDEFINED <> szOrderType [DCTO]
               UNDEFINED <> cApplyRetainage [ART]
               UNDEFINED <> cApplyFreight [AFT]
               VA frm_cGenerateWO_EV01 [EV01] <- cGenerateWorkOrder [GWO]
               UNDEFINED <> cSuppressErrorMessage [EV01]
               UNDEFINED <> cErrorCode [ERR]
               UNDEFINED <> cCallMaterialsIssue [CMI]
          //
          If VA frm_cGenerateWO_EV01 [EV01] is equal to ("1","Y")
               VA frm_cParentCommitSoft_EV01 [EV01] = "1"
               VA grd_cByPassCommitment_EV09 [EV09] = "0"
          End If
          //
          // IF COMPONETS LINES, ACCORDING TO PARENT COMMIT OR NOT, SUPPRESS THE COMMITMEN
          //
          If GC Related Item No [RLIT] is greater than <Blank>
               //
               If VA frm_cParentCommitSoft_EV01 [EV01] is equal to "1"
                    VA grd_cByPassCommitment_EV09 [EV09] = "1"
               Else
                    VA grd_cByPassCommitment_EV09 [EV09] = "0"
               End If
               //
          End If
          //
     End If
     //
End If
//
// END OF SAR3026206
//
// SAR 2850720 - increment workfile line number when in css mode and
// updating an order
If PO cShoppingCartMode [CART] is greater than <Blank>
And PO cShoppingCartMode [CART] is greater than "0"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          //
          // SAR 8955603 - Taxed Prices Enhancement for CSS - Get the LNIX from
          // B4202090, so that it gets updated into F42UI02 Cache. For CSS in Update
          // mode, the lines are already loaded into F42UI11/12 Cache by B4200690 from
          // CSS Processing Button call from Post Dialog is Initialized. If F42UI02 is
          // not updated, then the new lines get the same LNIX from F42UI02.
          //
          GetF42UI02WFLineNumber(B4202090.GetF42UI02WFLineNumber)
               FI Computerid [CTID] -> szComputerID [CTID]
               FI Jobnumber [JOBS] -> mnJobNo [JOBS]
               VA grd_mnF42UI11WFLineNumber_LNIX [LNIX] <- mnWFLineNo [LNIX]
     End If
End If
// End SAR 2850720
// SAR 3202062 - if there is a ship to number, load the ship to description for
// CSS
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     If GC Ship To Number [SHAN] is greater than "0"
     And GC Ship To Number [SHAN] is not equal to <Blank>
     And GC Ship To Number [SHAN] is not equal to <NULL>
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               GC Ship To Number [SHAN] -> mnAddressNumber [AN8]
               GC Description  [DL01] <- szAddressBookDescription [ALPH]
     End If
End If
// SAR3972711 - Supress price retrieval
If BC Kit Master Line Number (F4211.0) [KTLN] is not equal to "0"
Or BC Item Number - Related (Kit) (F4211.0) [RLIT] is not equal to <Blank>
     If SV Form_ Mode is equal to CO UPDATE_MODE
          // SAR 5953388 - Use Set functions
          SetConfigSprsBasePrcALPH18(B4205100.SetConfigSprsBasePrcALPH18)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               "1" -> cValue [EV01]
               UNDEFINED <> cErrorCode [ERRC]
          SetSuppressAdvPriceALPH19(B4205100.SetSuppressAdvPriceALPH19)
               GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
               "1" -> cValue [EV01]
               UNDEFINED <> cErrorCode [ERRC]
     End If
End If
// Begin SAR 4790863
If SV Form_ Mode is equal to CO COPY_MODE
     If VA grd_STKT_Stocking_Type [STKT] is equal to ("C","K")
     And GC Related Item No [RLIT] is less than or equal to "0"
          Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
          Disable Grid(FC Grid, <Currently Selected Row>, GC UoM)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Branch/Plant)
          // SAR 8350785 - Disable kit sensitive fields in copy mode
          If VA grd_STKT_Stocking_Type [STKT] is equal to "K"
               Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedDate)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ScheduledPick)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PromisedDelivery)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PromisedShip Date)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC1)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC2)
               Disable Grid(FC Grid, <Currently Selected Row>, GC PC3)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityShipped)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityBackordered)
               Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityCanceled)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Ship ToNumber)
               //
               // SAR 8470795 - Set a flag to set a warning if we are copying a dirty kit
               // line
               If GC Kit Component Dirty Flag [KITDIRTY] is equal to "1"
                    VA frm_cCopyingDirtyKit [EV01] = "1"
               End If
          End If
     End If
End If
// End SAR 4790863
// SAR 4702931
VA grd_szPortOfEntryExit_POE [POE] = BC Port of Entry or Exit (F4211.0) [POE]
// SAR 4945300
VA grd_cPaymentTermsOverride_PMTO [PMTO] = BC Payment Terms Override Code (F4211.0) [PMTO]
//
// *************************************************************************
// SAR#5113442
If GC Matrix Control Line Number [MCLN] is greater than "0"
     Disable Grid(FC Grid,  <All Rows>, GC Matrix ControlLine Number)
End If
// *************************************************************************
// SAR 5216847
If BC Price Adj. History Indicator (F4211.0) [SO09] is equal to "3"
Or BC Price Adj. History Indicator (F4211.0) [SO09] is equal to "4"
     VA frm_cVIDChangeWarningSet_EV01 [EV01] = "1"
End If
// End SAR 5216847
// SAR 5330594 - sales based on date
VA grd_jdPrevPriceEffDate_PEFJ [PEFJ] = BC Date - Price Effective Date (F4211.0) [PEFJ]
//
// Disable columns if Change is Pending
//
If GC Pending Approval [PEND] is not equal to <Blank>
     Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC UoM)
     Disable Grid(FC Grid, <Currently Selected Row>, GC UnitPrice)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedPrice)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignUnit Price)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ForeignExtended Price)
     Disable Grid(FC Grid, <Currently Selected Row>, GC RequestedDate)
     Disable Grid(FC Grid, <Currently Selected Row>, GC PromisedDelivery)
End If
// SAR 6386961 Begin
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     If BC Demand Unique Key ID (F4211.0) [DEID] is not equal to <NULL>
     And BC Demand Unique Key ID (F4211.0) [DEID] is not equal to "0"
     And VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC UoM)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Ship ToNumber)
          Disable Grid(FC Grid, <Currently Selected Row>, GC DeliverTo)
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityCanceled)
          // SAR 7789403 - Disable HCCancel for demand Sales Order
          Disable Control(HC &Cancel Line)
     End If
End If
// SAR 6386961 End
// ---------------------------------------------------------------------------
// CRMCSS - display customer item number when CSS is on. This is done only in
// update mode, when the user is modifying an order in CSS. In add mode, the
// CSS cache is used to load the grid and the display of customer item number
// is done at that time.
// ---------------------------------------------------------------------------
If SV Form_ Mode is equal to CO UPDATE_MODE
And PO cShoppingCartMode [CART] is equal to "1"
And FI cTaskToComplete [EV01] is equal to "2"
     GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          PO szCustomerItemNumberXREF [XRT4] -> szCrossReferenceType [XRT]
          VA frm_mnUserABNumber [AN8] -> mnAddressNumber [AN8]
          SL DateToday -> jdOrderDate [EXDJ]
          "1" -> cSuppressErrorMesg [EV01]
          VA evt_szCustItemNumber_CITM [CITM] <- szCustomerSupplierItmNo [CITM]
          VA evt_szCustItemNoDesc1_DL01 [DL01] <- szDescription1 [DSC1]
          VA evt_szCustItemNoDesc2_DL02 [DL01] <- szDescription2 [DSC2]
     If VA evt_szCustItemNumber_CITM [CITM] is greater than <Blank>
          GC Item Number [UITM] = VA evt_szCustItemNumber_CITM [CITM]
          GC Description  [DSC1] = VA evt_szCustItemNoDesc1_DL01 [DL01]
          GC Description Line 2 [DSC2] = VA evt_szCustItemNoDesc2_DL02 [DL01]
     Else
          GC Item Number [UITM] = GC Item Number [UITM]
          VA grd_cItemNumberFlag_EV01 [EV01] = "I"
     End If
     VA grd_EV18_UpdatedtoDetailWF [EV18] = "1"
End If
//
// SAR 8470787 - Display Kit Dirty flag
// SAR 8519641 - Kit dirty flag value of 1 is at the parent level.  Kit dirty
// flag value of 2 is at the component level and indicates a kit component
// line that was converted to a stock line.
If GC Kit Component Dirty Flag [KITDIRTY] is equal to ("1","2")
     GC Kit Component Dirty Flag [KITDIRTY] = "X"
End If
//
// SAR 8470787 - Copy SO17 into ALPH[31].  For kit components, this flag
// indicates if the component has a fixed or variable quantity with respect to
// the kit parent.
SetFixQuantityFoundALPH31(B4205100.SetFixQuantityFoundALPH31)
     GC ALPH - SO Detail Flags (wf) [ALPH] <> szSalesOrderFlagsString [ALPH]
     BC Sales Order Status 17 (F4211.0) [SO17] -> cValue [EV01]

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Last Grid Record Has Been Read
Event GUID: f57df5e2-a23a-11d0-a204-0000f6728a56
=============================================
//
// Populate the FC Landed Cost Rule in non Add Mode
If PO cTransferOrderEntry [EV25] is equal to "1"
And SV Form_ Mode is not equal to CO ADD_MODE
     FC Landed Cost Rule [PRP5] = VA frm_szLandedCostRules_PRP5 [PRP5]
End If
//
// Begin of SAR 2442961
// SAR#5113442-Begin
If VA frm_LNID_Last_Line_Number [LNID] is less than BC Line Number (F4211.0) [LNID]
     VA frm_LNID_Last_Line_Number [LNID] = BC Line Number (F4211.0) [LNID]
End If
// SAR#5113442-End
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_mnLastLineNumCopyMode_LNID [LNID] = BC Line Number (F4211.0) [LNID]
End If
// End of SAR 2442961
//
VA frm_cGridFilled [EV01] = "Y"
If BC Transfer/Direct Ship/Intercompany Flag (F4211.0) [SO11] is equal to "1"
     Enable Tab Page(FC Tab Control51, TP Transfer Orders)
End If
If SV Form_ Mode is equal to CO COPY_MODE
     FC Order Type [DCTO] = PO szDupOrdertype [DCT]
End If
//
//     If header changes were populated to all detail lines, force the changes.
//
// SAR 4200974
// SAR 5544496- Removed CustPO Changed, rely on N4002380
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_HeaderValuesChanged [EV01] is equal to "1"
     Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
     VA frm_GridRowCounter [MATH01] = "1"
     While VA frm_GridRowCounter [MATH01] is less than or equal to VA frm_MaxGridRows [MATH01]
          Get Grid Row(FC Grid, VA frm_GridRowCounter)
          // SAR 1883221
          If GC Next Stat [NXTR] is less than PO szNonUpdatableStatus [NXT2]
          Or PO szNonUpdatableStatus [NXT2] is equal to <Blank>
               Copy Grid Row To Grid Buffer(FC Grid, VA frm_GridRowCounter)
               Update Grid Buffer Row(FC Grid, VA frm_GridRowCounter,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
          End If
          //
          VA frm_GridRowCounter [MATH01] = [VA frm_GridRowCounter [MATH01]]+1
     End While
End If
//
// 7817646 - begin
If SV Form_ Mode is equal to CO UPDATE_MODE
     Get Max Grid Rows(FC Grid, VA frm_mnTempMathNumeric01)
End If
// 7817646 - end
// *************************************************************************
// SAR#5113442
VA frm_mnLargestMCLNUsed [MCLN] = BC Matrix Control Line Number (F4211.0) [MCLN]
// *************************************************************************
//
// SAR 5216847
If VA frm_cVIDChangeWarningSet_EV01 [EV01] is equal to "1"
     Set Control Error(FC Grid, "42B5")
End If
// End SAR 5216847

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: End Dialog
Event GUID: 15b41071-ba19-11d2-a796-00105a1bfecd
=============================================
//
// ----------------------------------------------------------
//    SAR 8538278 - Terminate the Rate Shopping Cache - B49T1150
// ----------------------------------------------------------
If VA frm_cSystem49TInstalled_EV01 [EV01] is equal to "1"
     EndRSCacheNeededForOrderEntry(B49T1150.EndRSCacheNeededForOrderEntry)
          "1" -> cSuppressErrorMessage_SUPPS [SUPPS]
          FI Jobnumber [JOBS] -> mnCacheJobNumber_JOBS [JOBS]
End If
//
// SAR 8598748 - Moved the code for record reservaion to Post Commit event and
// the cancel post button click event.
// ----------------------------------------------------------

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Clear Screen After Add
Event GUID: 5ef15ce8-e064-11d1-9ac9-00600832fe19
=============================================
VA frm_INT02_Warnings [INT02] = "0"
// 6301120 - Shopping Cart related code moved to 'OK - Post Button Clicked'
// SAR 6897939 - Code moved back to this event  'Clear Screen After Add'
If PO cShoppingCartMode [CART] is greater than <Blank>
     Press Button(HC Cancel/Close)
End If
If FI UpdatedToHdrWF [EV20] is equal to "1"
     FI UpdatedToHdrWF [EV20] = "0"
     // Sar # 7817646 - begin
     // SAR 8317539 – Deleted the variable VA frm_EV01_RecordAdded initialization
     // Sar # 7817646 - end
     Press Button(HC Cancel/Close)
End If

=============================================
Form: Sales Order Detail Revisions - W4210A
Event: Post Commit
Event GUID: f20fd55f-ae4d-43a5-9776-da2abe4fde4b
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ActionCode_EV01 [EV01]
----------------------------------------
// SAR 6898018  - TP For XPI and Workflow
If SV TP_Commit_Status is equal to CO TP_ACTION_SUCCESS
     VA evt_ActionCode_EV01 [EV01] = "F"
Else
     VA evt_ActionCode_EV01 [EV01] = "W"
End If
XPIWorkFlowPostCommitForTP(B4208060.XPIWorkFlowPostCommitForTP)
     VA evt_ActionCode_EV01 [EV01] -> cEventAction [EV01]
     VA frm_szComputerID_CTID [CTID] -> szComputerID [CTID]
     VA frm_mnCMJobNo [JOBS] -> mnJobNo [JOBS]
// SAR 6897939- TP implementation for SOE
If SV TP_Commit_Status is equal to CO TP_ACTION_FAIL
     // Rollback for Regular item
     ProcessF41021WFRecords(B4101810.ProcessF41021WFRecords)
          VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
          VA frm_mnCMJobNo [JOBS] -> mnJobnumberA [JOBS]
          VA frm_UniqueKeyIDF41021WF_UKID [UKID] -> mnUniqueKeyIDInternal [UKID]
     If VA frm_RelatedJobNoForTransfer [MATH02] is greater than "0"
          // Rollback for Transfer Order for PO quantity
          CacheProcessUniqueF41021WF(B4902110.CacheProcessUniqueF41021WF)
               VA frm_RelatedJobNoForTransfer [MATH02] -> mnJobnumber [JOBS]
               VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
               VA frm_UniqueIDF41021WFForTransf [UKID] <- mnUniqueKeyIDInternal [UKID]
               "1" -> szCacheActionCode [CACTN]
               "2" -> mnNumberKeys [NKEYS]
               "1" -> cSuppressErrorMessage [SUPPS]
          ProcessF41021WFRecords(B4101810.ProcessF41021WFRecords)
               VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
               VA frm_RelatedJobNoForTransfer [MATH02] -> mnJobnumberA [JOBS]
               VA frm_UniqueIDF41021WFForTransf [UKID] -> mnUniqueKeyIDInternal [UKID]
     End If
Else
     // For Deferred commitment, Delete the F41021WF record if commit success
     If VA frm_cCommitInvInED_EV01 [EV01] is equal to "1"
          F41021WFDelete(N4207140.F41021WFDelete)
               VA frm_mnCMJobNo [JOBS] -> mnJobnumber [JOBS]
     End If
End If
// Terminate the Cache for transfer order
If VA frm_RelatedJobNoForTransfer [MATH02] is greater than "0"
     CacheProcessUniqueF41021WF(B4902110.CacheProcessUniqueF41021WF)
          VA frm_RelatedJobNoForTransfer [MATH02] -> mnJobnumber [JOBS]
          VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
          "5" -> szCacheActionCode [CACTN]
          "2" -> mnNumberKeys [NKEYS]
          "1" -> cSuppressErrorMessage [SUPPS]
End If
// Transfer order in change mode
If VA frm_RelatedJobNoForTransfer [MATH02] is less than or equal to "0"
And VA frm_cTransfer_Direct_Flag_S011 [SO11] is equal to "1"
     TransferOrderPostCommitForTP(B4208050.TransferOrderPostCommitForTP)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          VA frm_SOEComputerID_CTID [CTID] -> szComputerID [CTID]
          VA evt_ActionCode_EV01 [EV01] -> cEventAction [EV01]
End If
//
// SAR 8598748 Begin - Record Reservation Code is moved from End Dialog to
// Post Commit and Cnacel Post Button Click.This call is to clear all user
// file application for the application
//
// SAR 7830365
// SAR 8023514
If VA frm_szReserveAppID_PID [PID] is equal to <Blank>
     F00095RemoveReservation(N0000602.F00095RemoveReservation)
          SL UserID -> szUserId [USER]
          "F4211" -> szNameObject [OBNM]
          VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
          VA frm_szUniqueIDRecReserve_PID [PID] -> szApplication [PID]
End If




=============================================
Form: SOE - Additional Information - W4210B
Event: Form Variables
Event GUID: f4f35404-1e45-11d2-9a82-0000f64da757
=============================================
frm_LineNumberKitMaster [KTLN]
frm_cNULLValue [EV01]
frm_szNULLValue [DCTO]
frm_AdvPriceActionCode [ADVP]
frm_cCacheOn_WFOC [WFOC]
frm_cVertexActive [VVTX]
frm_szVertexCanadaCountryCode [VVCN]
frm_szSearchType [AT1]
frm_cGeoCodeValid [EV01]
frm_szPurchCatCode1_PRP1 [PRP1]
frm_szPurchCatCode2_PRP2 [PRP2]
frm_szPurchCatCode3_PRP3 [PRP3]
frm_szPurchCatCode4_PRP4 [PRP4]
frm_szPurchCatCode5_PRP5 [PRP5]
frm_szDocCompanyKey [KCO]
frm_mnDocVoucherInvoiceNo [DOC]
frm_szDocumentType [DCT]
frm_cErrorCode_ERRC [ERRC]
frm_cPaymentTermsOverride_PMTO [PMTO]
frm_szPrevPaymentTerms_PTC [PTC]
frm_szCommodityCode [CDCD]
frm_szProjectNumNotValidError [DTAI]
frm_cCrossDockFlagYN_XDCK [XDCK]
frm_mnCrossDockingPriorit_XPTY [XPTY]
frm_mnCrossDockOrderNumbe_XORN [XORN]
frm_szCrossDockOrderType_XCTO [XCTO]
frm_szCrossDockCmpyKeyNo_XKCO [XKCO]
frm_szCrossDockOrdeSuffix_XSFX [XSFX]
frm_mnCrossDockLineNumber_XLLN [XLLN]
frm_cRevisionMade_EV01 [EV01]
frm_szPrevPriceAdjSched_ASN [ASN]
frm_szPrevPricingCategory_PRGR [PRGR]
frm_cPrevPaymentInstr_RYIN [RYIN]
frm_szPrevPrintMessage1_INMG [INMG]
frm_cPrevPriorityProc_PRIO [PRIO]
frm_szPrevReasonCode_RCD [RCD]
frm_mnPrevDiscountCash_CADC [CADC]
frm_szPrevGlCategory_GLPT [GLPT]
frm_szPrevSubledger_SBL [SBL]
frm_cPrevSubledgerType_SBLT [SBLT]
frm_szPrevItemDocType_XDCT [XDCT]
frm_mnPrevCrossDockPrior_XPTY [XPTY]
frm_mnPrevCrossDockOrder_XORN [XORN]
frm_szPrevCrossDockType_XCTO [XCTO]
frm_szPrevCrossDockComp_XKCO [XKCO]
frm_szPrevCrossDockSuffix_XSFX [XSFX]
frm_mnPrevCrossDockLine_XLLN [XLLN]
frm_mnPrevProjectNumber_PRJM [PRJM]
frm_szPrevPromotionID_PMTN [PMTN]
frm_szPrevSalesRepCode1_SRP1 [SRP1]
frm_szPrevSalesRepCode2_SRP2 [SRP2]
frm_szPrevSalesRepCode3_SRP3 [SRP3]
frm_szPrevSalesRepCode4_SRP4 [SRP4]
frm_szPrevSalesRepCode5_SRP5 [SRP5]
frm_mnPrevAddressShipTo_SHAN [SHAN]
frm_mnPrevCarrier_CARS [CARS]
frm_mnPrevDeliveredTo_DVAN [DVAN]
frm_jdPrevDateRequested_DRQJ [DRQJ]
frm_jdPrevPromisedDelDate_PDDJ [PDDJ]
frm_jdPrevDateRelease_RSDJ [RSDJ]
frm_jdPrevCancelDate_CNDJ [CNDJ]
frm_jdPrevDatePromPick_PPDJ [PPDJ]
frm_szPrevShipCommClass_SHCM [SHCM]
frm_szPrevShipCondCode_SHCN [SHCN]
frm_szPrevPortOfEntryExit_POE [POE]
frm_szPrevRouteCode_ROUT [ROUT]
frm_szPrevStopCode_STOP [STOP]
frm_szPrevZoneNumber_ZON [ZON]
frm_szPrevModeOfTransport_MOT [MOT]
frm_mnPrevAmountUnitVolum_ITVL [ITVL]
frm_szPrevVolumeUOM_VLUM [VLUM]
frm_mnPrevAmountUnitWeigh_ITWT [ITWT]
frm_szPrevWeightUOM_WTUM [WTUM]
frm_cPrevApplyCommYN_ACOM [ACOM]
frm_cPrevTaxableYN_TAX1 [TAX1]
frm_szPrevTaxExplCode1_EXR1 [EXR1]
frm_szPrevTaxArea1_TXA1 [TXA1]
frm_cPrevCrossDockFlagYN_XDCK [XDCK]
frm_cFoundRecdInF42UI12 [EV01]
frm_cDemandSchedEnabled_MEOW [MEOW]
frm_cDisableDemandFlag_EV01 [EV01]
frm_cDemandSchedReleased_DSRF [DSRFU]
frm_cLineIsKitComp [EV01]

=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: HC OK/Select
Event: Button Clicked
Event GUID: f4f35405-1e45-11d2-9a82-0000f64da757
=============================================
// 
//      Miscellaneous Information Tab
// 
FI Priceadjustmentschedulen [ASN] = FC Adjustment Schedule [ASN]
FI Paymentinstrumenta [RYIN] = FC Payment Instrument [RYIN]
FI Printmessage1 [INMG] = FC Print Message [INMG]
FI Companykeyoriginal [OKCO] = FC Original Order Document Company [OKCO]
FI Originalposonumber [OORN] = FC Original Order Number [OORN]
FI Originalordertype [OCTO] = FC Original Order Type [OCTO]
FI Originallinenumber [OGNO] = FC Original Line Number [OGNO]
FI Linenumberkitmaster [KTLN] = FC Kit Master Line Number [KTLN]
FI Componenetnumber [CPNT] = FC Component Line Number [CPNT]
FI Relatedkitcomponent [RKIT] = FC Related Kit Component [RKIT]
FI Carrier [CARS] = FC Carrier Number [CARS]
// 8108841 - FC G/L Offset is changed to FC G/L Class
BC G/L Offset (F4211.0) [GLC] = FC G/L Class [GLPT]
// SAR 4702931
FI szPortOfEntryExit [POE] = FC Port of Entry or Exit [POE]
// SAR 4945300
FI cPaymentTermsOverride [PMTO] = VA frm_cPaymentTermsOverride_PMTO [PMTO]
// 
VA frm_szNULLValue [DCTO] = <NULL>
VA frm_cNULLValue [EV01] = <NULL>
// 
If FI mnJobnumberA [JOBS] is equal to "0"
     X0010GetNextNumber(X0010.X0010GetNextNumber)
          "00" <> szSystemCode [SY]
          "4" <> mnNextNumberingIndexNo [NNIX]
          UNDEFINED <> szCompanyKey [KCO]
          UNDEFINED <> szDocumentType [DCT]
          UNDEFINED <> mnCentury [CTRY]
          UNDEFINED <> mnFiscalYear1 [FY]
          UNDEFINED <> szSameAsDocumentType [SMAS]
          FI mnJobnumberA [JOBS] <> mnNextNumber001 [N001]
End If
// 
// SAR 1920255 - Validate subledger and subledger type.
// 
If FC Subledger [SBL] is not equal to <Blank>
Or FC Subledger Type [SBLT] is not equal to <Blank>
     FormatSubledger(B0000021.FormatSubledger)
          FC Subledger [SBL] <> szSubledger [SBL]
          FC Subledger Type [SBLT] <> cSubledgerType [SBLT]
     ValidateSubledger(X0909.ValidateSubledger)
          FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
          FC Subledger [SBL] -> szSubledger [SBL]
          FI szBusiness_Unit_F4211 [MCU] -> szCostCenter [MCU]
          UNDEFINED <> szDescription [DL01]
          UNDEFINED <> cInquiryFlag [EV02]
End If
// 
//      Address/Date Tab
// 
FI Addressnumber [AN8] = FC Address Number [AN8]
FI Addressnumbershipto [SHAN] = FC Ship To [SHAN]
FI Amountunitweight [ITWT] = FC Unit Weight [ITWT]
FI Weightunitofmeasure [WTUM] = FC Weight Unit of Measure [WTUM]
FI Daterequestedjulian [DRQJ] = FC Requested [DRQJ]
FI ScheduledPickDate [PDDJ] = FC Scheduled Pick [PDDJ]
FI PromisedDeliveryDate [RSDJ] = FC Promised Delivery [RSDJ]
FI jdPromisedShipDate [PPDJ] = FC Ship [PPDJ]
FI Canceldate [CNDJ] = FC Cancel Date [CNDJ]
FI Taxableyn [TAX1] = FC Sales Taxable [TAX1]
// SAR 5308881 - Date Sensitive Customer Sets
FI mnDeliveredTo [DVAN] = FC Deliver To [DVAN]
// 
//      Make sure theat Tax Code and Tax Rate are both
//      populated before calling F4211 Pre Process.
// 
If FC Tax Expl Code [EXR1] is equal to <Blank>
And FC Tax Rate/Area [TXA1] is not equal to <Blank>
     Set Control Error(FC Tax Expl Code, "0748")
Else
     If FC Tax Expl Code [EXR1] is not equal to <Blank>
     And FC Tax Rate/Area [TXA1] is equal to <Blank>
          Set Control Error(FC Tax Rate/Area, "0886")
     End If
End If
// 
// SAR 2470508 Related Order Information no longer handled throught the F42UI12
// cache.
FI Companykeyrelated [RKCO] = FC Related Order Key Company [RKCO]
FI Relatedposonumber [RORN] = FC Related Order Number [RORN]
FI Relatedordertype [RCTO] = FC Related PO/SO/WO Order Type [RCTO]
FI Relatedposolineno [RLLN] = FC Related PO/SO Line Number [RLLN]
// 
//  SAR 2505045 -Passed to P4004Z
// 
FI Pricingcategory [PRGR] = FC Item Price Group [PRGR]
FI Paymenttermscode01 [PTC] = FC Payment Terms [PTC]
FI Priorityprocessing [PRIO] = FC Priority Processing Code [PRIO]
FI Reasoncode [RCD] = FC Reason Code [RCD]
FI Discountcash [CADC] = FC Cash Discount % [CADC]
// 8108841 - FC G/L Offset is changed to FC G/L Class
FI Glclass [GLC] = FC G/L Class [GLPT]
FI Subledger [SBL] = FC Subledger [SBL]
FI Subledgertype [SBLT] = FC Subledger Type [SBLT]
FI Salesreportingcode1 [SRP1] = FC Sales Catalog Section [SRP1]
FI Salesreportingcode2 [SRP2] = FC Sub Section [SRP2]
FI Salesreportingcode3 [SRP3] = FC Sales Category Code 3 [SRP3]
FI Salesreportingcode4 [SRP4] = FC Sales Category Code 4 [SRP4]
FI Salesreportingcode5 [SRP5] = FC Sales Category Code 5 [SRP5]
// SAR 4558028-B9 DB Change
! FI Applyfreightyn [AFT] = Could not resolve Form Control. 85
FI Shippingconditionscode [SHCN] = FC Shipping Conditions Code [SHCN]
FI Shippingcommodityclass [SHCM] = FC Shipping Commodity Class [SHCM]
// SAR 4558028-B9 DB Change
! FI Ratecodefrieghtmisc [FRAT] = Could not resolve Form Control. 88
FI Routecode [ROUT] = FC Route Code [ROUT]
FI Stopcode [STOP] = FC Stop Code [STOP]
FI Zonenumber [ZON] = FC Zone Number [ZON]
FI Volumeunitofmeasure [VLUM] = FC Volume Unit of Measure [VLUM]
FI Amountunitvolume [ITVL] = FC Unit Volume [ITVL]
! FI Applycommissionyn [ACOM] = Could not resolve Form Control. 102
// SAR 4558028-B9 DB Change
! FI Salesperson1 [SLSM] = Could not resolve Form Control. 103
! FI Salespersoncommission1 [SLCM] = Could not resolve Form Control. 104
! FI Salesperson2 [SLM2] = Could not resolve Form Control. 105
! FI Salespersoncommission2 [SLC2] = Could not resolve Form Control. 106
FI Taxexplantationcode1 [EXR1] = FC Tax Expl Code [EXR1]
FI Taxarea1 [TXA1] = FC Tax Rate/Area [TXA1]
// SAR#5242682
FI szPromotionID [PMTN] = FC Promotion ID [PMTN]
FI mnProjectNumber [PRJM] = FC Project Number [PRJM]
// SAR 6386961 Begin
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     FI szReleaseNumber [RLNU] = FC Release Number [RLNU]
     // SAR 6405210 - AUTO
     EditTimeEntry(N4900670.EditTimeEntry)
          FC Requested Time [DRQT] <> mnTimeEntered [ENTT]
     EditTimeEntry(N4900670.EditTimeEntry)
          FC Scheduled Pick Time [PDTT] <> mnTimeEntered [ENTT]
     EditTimeEntry(N4900670.EditTimeEntry)
          FC Promised Delivery Time [RSDT] <> mnTimeEntered [ENTT]
     EditTimeEntry(N4900670.EditTimeEntry)
          FC Promised Ship Time [PMDT] <> mnTimeEntered [ENTT]
     FI mnRequestedDeliveryTime [DRQT] = FC Requested Time [DRQT]
     FI mnPromisedPickTime [PDTT] = FC Scheduled Pick Time [PDTT]
     FI mnScheduledShipmentTime [PMDT] = FC Promised Ship Time [PMDT]
     FI mnPromisedDeliveryTime [RSDT] = FC Promised Delivery Time [RSDT]
     // SAR 6405210 End
End If
// SAR 6386961 End
// 
// SAR 4952210
// 
If FC Cross-Docking Flag (Y/N) [XDCK] is equal to ("1","Y")
And FC Cross Dock Order Number [XORN] is not equal to "0"
And FC Cross Dock Order Type [XCTO] is not equal to <Blank>
And FC Cross Dock Order Type [XCTO] is not equal to <NULL>
     // 
     // Test to see if any cross docking information has changed before doing the edi
     If FC Cross-Docking Flag (Y/N) [XDCK] is not equal to VA frm_cCrossDockFlagYN_XDCK [XDCK]
     Or FC Cross-Dock Priority [XPTY] is not equal to VA frm_mnCrossDockingPriorit_XPTY [XPTY]
     Or FC Cross Dock Order Number [XORN] is not equal to VA frm_mnCrossDockOrderNumbe_XORN [XORN]
     Or FC Cross Dock Order Type [XCTO] is not equal to VA frm_szCrossDockOrderType_XCTO [XCTO]
     Or FC Cross Dock Order Company [XKCO] is not equal to VA frm_szCrossDockCmpyKeyNo_XKCO [XKCO]
     Or FC Cross Dock Order Suffix [XSFX] is not equal to VA frm_szCrossDockOrdeSuffix_XSFX [XSFX]
     Or FC Cross Dock Line Number [XLLN] is not equal to VA frm_mnCrossDockLineNumber_XLLN [XLLN]
          If FC Cross Dock Order Number [XORN] is not equal to <Blank>
          And FC Cross Dock Order Number [XORN] is not equal to "0"
               // Call N4202140 
               // 
               DoesOrderNumberExist(N4202140.DoesOrderNumberExist)
                    FC Cross Dock Order Number [XORN] -> mnCrossDockOrderNumber [XORN]
                    FC Cross Dock Order Type [XCTO] -> szCrossDockOrderType [XCTO]
                    FC Cross Dock Order Company [XKCO] -> szCrossDockCmpyKeyOrderNo [XKCO]
                    FC Cross Dock Order Suffix [XSFX] -> szCrossDockOrderSuffix [XSFX]
                    FC Cross Dock Line Number [XLLN] -> mnCrossDockLineNumber [XLLN]
                    VA frm_cErrorCode_ERRC [ERRC] <- cErrorCode [ERRC]
                    UNDEFINED <> szErrorMessageID [DTAI]
               // 
               If VA frm_cErrorCode_ERRC [ERRC] is equal to "1"
                    Set Control Error(FC Cross Dock Order Number, "XDAR")
               End If
               If VA frm_cErrorCode_ERRC [ERRC] is equal to "2"
                    Set Control Error(FC Cross Dock Order Number, "XDOR")
               End If
               If VA frm_cErrorCode_ERRC [ERRC] is equal to "3"
                    Set Control Error(FC Cross Dock Order Number, "XDRR")
               End If
               If VA frm_cErrorCode_ERRC [ERRC] is equal to "4"
                    Set Control Error(FC Cross Dock Order Number, "XDPR")
               End If
               If VA frm_cErrorCode_ERRC [ERRC] is equal to "5"
                    Set Control Error(FC Cross Dock Order Type, "131V")
               End If
               // 
               If VA frm_cErrorCode_ERRC [ERRC] is not equal to <Blank>
                    Stop Processing
               End If
               // 
          End If
     End If
End If
// 
If VA frm_cErrorCode_ERRC [ERRC] is equal to <Blank>
Or VA frm_cErrorCode_ERRC [ERRC] is equal to <NULL>
     If FC Cross-Docking Flag (Y/N) [XDCK] is equal to ("0","N")
          FC Cross-Docking Flag (Y/N) [XDCK] = "0"
          FC Cross-Dock Priority [XPTY] = "0"
          FC Cross Dock Order Number [XORN] = "0"
          FC Cross Dock Order Type [XCTO] = "  "
          FC Cross Dock Order Company [XKCO] = "   "
          FC Cross Dock Order Suffix [XSFX] = "   "
          FC Cross Dock Line Number [XLLN] = "0"
     End If
     FI cCrossDockFlagYN [XDCK] = FC Cross-Docking Flag (Y/N) [XDCK]
     FI mnCrossDockingPriority [XPTY] = FC Cross-Dock Priority [XPTY]
     FI mnCrossDockOrderNumber [XORN] = FC Cross Dock Order Number [XORN]
     FI szCrossDockOrderType [XCTO] = FC Cross Dock Order Type [XCTO]
     FI szCrossDockCmpyKeyOrderNo [XKCO] = FC Cross Dock Order Company [XKCO]
     FI szCrossDockOrderSuffix [XSFX] = FC Cross Dock Order Suffix [XSFX]
     FI mnCrossDockLineNumber [XLLN] = FC Cross Dock Line Number [XLLN]
End If
// 
// Enforce Audit Logging
// 
If PO cRequiredReasonCode [EV02] is equal to "1"
And FI cBypassAuditLogging [EV01] is not equal to "1"
And FC Revision Reason [RFRV] is less than or equal to <Blank>
And VA frm_cRevisionMade_EV01 [EV01] is equal to "1"
     Set Control Error(FC Revision Reason, "0003")
Else
     If VA frm_cRevisionMade_EV01 [EV01] is equal to "1"
     Or VA frm_cRevisionMade_EV01 [EV01] is equal to "2"
          FI cRevisionMade [EV01] = VA frm_cRevisionMade_EV01 [EV01]
     End If
     FI szRevision_Reason_F4211 [RFRV] = FC Revision Reason [RFRV]
End If

=============================================
Form: SOE - Additional Information - W4210B
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f4f35406-1e45-11d2-9a82-0000f64da757
=============================================
//                               SAR REVISION LOG
// SAR#                     PROGRAMMER                    DATE
// 4074701                  VK6272082                     04/04/00
// 
//      SAR 2505045 - Don't execute if coming from P4004Z 
// 
If FI cBatchEntryMode [EV01] is less than or equal to "1"
     // SAR 6775034
     If FI Actioncode [ACTI] is not equal to "D"
          // SAR 3790976 - Begin/End CHANGE
          // The Purchasing Category Codes retrieved in Post Dialog are now
          // passed so that it can be saved back to the cache
          // SAR 4066453 Pass Invoice Info to the call
          // SAR 4558028-B9 DB Change
          // SAR 5258633 - Add CDCD
          // Sar 6256824 - pass in a null value for cApplyFreight
          // SAR 6386961 Pass Demand ID, Pull Signal, Release Date and Release Time to
          // be cached off.
          // SAR 7112144 - Pass in "Paymenet Instrument"
          F4211FSEditLinePreProcess(B4200310.F4211FSEditLinePreProcess)
               FI szComputerID [CTID] <> szComputerID [CTID]
               FI mnJobnumberA [JOBS] <> mnJobNo [JOBS]
               FI mnLineNumberXREF [LNIX] <> mnWFLineNo [LNIX]
               FI CompanyKeyOrderNo [KCOO] <> szKeyCo [KCOO]
               FI DocumentOrderInvoiceE [DOCO] <> mnOrderNo [DOCO]
               FI OrderType [DCTO] <> szOrderType [DCTO]
               FI LineNumber [LNID] <> mnLineNo [LNID]
               BC Date - Original Promised Delivery (F4211.0) [OPDJ] <> jdOriginalPromisedDate [OPDJ]
               FC Ship [PPDJ] <> jdPromisedPickDate [PPDJ]
               VA frm_szNULLValue [DCTO] <> szThruGrade [THGD]
               VA frm_szNULLValue [DCTO] <> szFromGrade [FRGD]
               FC CatalogSection Cat Code [SRP1] <> szSalesReportingCode1 [SRP1]
               FC SubSection Cat Code [SRP2] <> szSalesReportingCode2 [SRP2]
               FC Sales Cat Code3 [SRP3] <> szSalesReportingCode3 [SRP3]
               FC Sales Cat Code4 [SRP4] <> szSalesReportingCode4 [SRP4]
               FC Sales Cat Code5 [SRP5] <> szSalesReportingCode5 [SRP5]
               VA frm_szPurchCatCode1_PRP1 [PRP1] <> szPurchasingReportCode1 [PRP1]
               VA frm_szPurchCatCode2_PRP2 [PRP2] <> szPurchasingReportCode2 [PRP2]
               VA frm_szPurchCatCode3_PRP3 [PRP3] <> szPurchasingReportCode3 [PRP3]
               VA frm_szPurchCatCode4_PRP4 [PRP4] <> szPurchasingReportCode4 [PRP4]
               VA frm_szPurchCatCode5_PRP5 [PRP5] <> szPurchasingReportCode5 [PRP5]
               FC Payment Terms [PTC] <> szPaymentTerms [PTC]
               VA frm_cNULLValue [EV01] <> cBasedonDate [DTBS]
               FC Item Price Group [PRGR] <> szPricingCategory [PRGR]
               FC Cash Discount % [CADC] <> mnDiscountCash [CADC]
               VA frm_szDocCompanyKey [KCO] <> szCompanyKey [KCO]
               VA frm_mnDocVoucherInvoiceNo [DOC] <> mnInvoiceNo [DOC]
               VA frm_szDocumentType [DCT] <> szDocumentType [DCT]
               FC Tax Rate/Area [TXA1] <> szTaxArea [TXA1]
               FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
               FC Priority Processing Code [PRIO] <> cPriorityProcessing [PRIO]
               VA frm_cNULLValue [EV01] <> cBackordersAllowedYN [BACK]
               VA frm_cNULLValue [EV01] <> cSubstitutesAllowedYN [SBAL]
               VA frm_szNULLValue [DCTO] <> szNatureOfTransaction [NTR]
               FC Route Code [ROUT] <> szRouteCode [ROUT]
               FC Stop Code [STOP] <> szStopCode [STOP]
               FC Zone Number [ZON] <> szZoneNumber [ZON]
               VA frm_cNULLValue [EV01] -> cApplyFreightYN [AFT]
               VA frm_szNULLValue [DCTO] <> szFreightHandlingCode [FRTH]
               FC Shipping Commodity Class [SHCM] <> szShippingCommodityClass [SHCM]
               FC Shipping Conditions Code [SHCN] <> szShippingConditionsCode [SHCN]
               VA frm_szNULLValue [DCTO] <> szSerialNumberLot [SERN]
               VA frm_szNULLValue [DCTO] <> szRepriceBasketPriceCat [RPRC]
               VA frm_szNULLValue [DCTO] <> szOrderRepriceCategory [ORPR]
               FC G/L Class [GLPT] <> szGlClass [GLC]
               FC Reason Code [RCD] <> szReasonCode [RCD]
               VA frm_szNULLValue [DCTO] <> szUnitOfMeasureGrossWt [GWUM]
               FC Subledger [SBL] <> szSubledger [SBL]
               FC Subledger Type [SBLT] <> cSubledgerType [SBLT]
               VA frm_szNULLValue [DCTO] <> szCodeLocationTaxStat [LCOD]
               VA frm_cNULLValue [EV01] <> cWoOrderFreezeCode [UNCD]
               VA frm_cNULLValue [EV01] <> cCorrespondenceMethod [CRMD]
               VA frm_szNULLValue [DCTO] <> szUserReservedCode [URCD]
               VA frm_szNULLValue [DCTO] <> szUserReservedReference [URRF]
               FI cCMUseWorkFiles [EV01] -> cUseCacheOrWF_EV01 [EV01]
               FC Cross-Docking Flag (Y/N) [XDCK] -> cCrossDockFlagYN [XDCK]
               FC Cross-Dock Priority [XPTY] -> mnCrossDockingPriority [XPTY]
               FC Cross Dock Order Number [XORN] -> mnCrossDockOrderNumber [XORN]
               FC Cross Dock Order Type [XCTO] -> szCrossDockOrderType [XCTO]
               FC Cross Dock Order Company [XKCO] -> szCrossDockOrderCompany [XKCO]
               FC Cross Dock Order Suffix [XSFX] -> szCrossDockOrderSuffix [XSFX]
               FC Cross Dock Line Number [XLLN] -> mnCrossDockLineNumber [XLLN]
               FC Pull Signal [PSIG] -> szPullSignal [PSIG]
               FC Release Date [RLDJ] -> jdDateRelease [RLDJ]
               FC Release Time [RLTM] -> mnTimeRelease [RLTM]
               FC Demand Unique Key [DEID] -> mnDemandUniqueKey [DEID]
               FC Partial Shipments Allowed [OPLL] -> cOPPartialLineShipmentAllowed [OPLL]
               FC Backorders Allowed [OPBA] -> cOPBackorderAllowed [OPBA]
               FC Substitutes Allowed [OPSS] -> cOPSubstituteAllowed [OPSS]
               FC OP Multi Source Group [OPMG] -> szOPMultiSourceGroup [OPMG]
               FC OP Shipping Group [OPSG] -> szOPShippingGroup [OPSG]
               FC Promise Line (Y/N) [OPYN] -> cOPPromiseLineYN [OPYN]
               FC Multi-Sourcing Allowed [OPMS] -> cOPAllowMultiSource [OPMS]
               FC Payment Instrument [RYIN] -> cPaymentInstrument [RYIN]
     End If
End If
// SAR 4074701 BEGIN / END - Not cancelled
FI cCanceled [CYN] = "0"


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: HC Cancel/Close
Event: Button Clicked
Event GUID: f4f35407-1e45-11d2-9a82-0000f64da757
=============================================
// 
//      Set Form Interconnect to indicate that is form was canceled
// 
FI cCanceled [CYN] = "1"


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Adjustment Schedule
Event: Control Exited/Changed-Asynch
Event GUID: 193afe16-c3bc-4548-a35c-0f382b205b1a
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSpecialHandlingCode [SPHD]
----------------------------------------
// 
// Process Audit Log
// 
If FC Adjustment Schedule [ASN] is not equal to VA frm_szPrevPriceAdjSched_ASN [ASN]
     Press Button(FC Audit Logging)
End If
// SAR 5538731
GetUDC(X0005.GetUDC)
     UNDEFINED <> szDataDictionaryItem [DTAI]
     "40" -> szSystemCode [SY]
     "AS" -> szRecordTypeCode [RT]
     FC Adjustment Schedule [ASN] -> szUserDefinedCode [KY]
     UNDEFINED <> mnKeyFieldLength [AS]
     UNDEFINED <> szLanguagePreference [LNGP]
     UNDEFINED <> szDescription001 [DL01]
     UNDEFINED <> szDescription002 [DL02]
     VA evt_szSpecialHandlingCode [SPHD] <- szSpecialHandlingCode [SPHD]
     UNDEFINED <> cUdcOwnershipFlag [UDCO]
     UNDEFINED <> cHardCodedYn [HRDC]
     UNDEFINED <> cSuppressErrorMessage [EV01]
     UNDEFINED <> szErrorMessageId [DTAI]
     UNDEFINED <> cUDCOne [EV01]
If VA evt_szSpecialHandlingCode [SPHD] is not equal to <Blank>
And VA evt_szSpecialHandlingCode [SPHD] is not equal to <NULL>
And VA evt_szSpecialHandlingCode [SPHD] is not equal to "0"
     Set Control Error(FC Adjustment Schedule, "42B9")
End If
// END SAR 5538731

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Adjustment Schedule
Event: Visual Assist Button Clicked
Event GUID: 559afb81-29bf-47d8-8e78-6992e309c4c4
=============================================
// SAR 5473528
Suppress Default Visual Assist Form
// SAR 8437910- Pass the Adjustment Schedule to P4070, So that the defaulted
// FC Adj value will be retained incase, if no Adjustment is selected  from
// Visual assist 
Call App:P4070 Form:W4070B Version:ZJDE0001
     "40" -> szProductCode [SY]
     "AS" -> szUserDefinedCodes [RT]
     FC Adjustment Schedule [ASN] <> szUserDefinedCode [KY]
     <Blank> -> cProcessingMode [EV01]


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Item Price Group
Event: Control Exited/Changed-Asynch
Event GUID: c5f9e5cc-e3f1-45bd-b947-ec19b7fd19c7
=============================================
// 
// Process Audit Log
// 
If FC Item Price Group [PRGR] is not equal to VA frm_szPrevPricingCategory_PRGR [PRGR]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Payment Terms
Event: Control is Entered
Event GUID: 2387968e-b86c-41a8-921c-d4b4d4f23ded
=============================================
// SAR 4945300
VA frm_szPrevPaymentTerms_PTC [PTC] = FC Payment Terms [PTC]

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Payment Terms
Event: Control Exited/Changed-Inline
Event GUID: 114fde8a-eb4d-4dd5-ac61-542ecd83f70b
=============================================
// SAR 4945300
If VA frm_szPrevPaymentTerms_PTC [PTC] is not equal to FC Payment Terms [PTC]
     VA frm_cPaymentTermsOverride_PMTO [PMTO] = "1"
     VA frm_szPrevPaymentTerms_PTC [PTC] = FC Payment Terms [PTC]
     // 
     // Process Audit Log
     // 
     Press Button(FC Audit Logging)
     VA frm_cRevisionMade_EV01 [EV01] = "2"
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Payment Instrument
Event: Control Exited/Changed-Asynch
Event GUID: aa577816-122a-4d9b-b323-29d1ffb71951
=============================================
// 
// Process Audit Log
// 
If FC Payment Instrument [RYIN] is not equal to VA frm_cPrevPaymentInstr_RYIN [RYIN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Print Message
Event: Control Exited/Changed-Asynch
Event GUID: 2a0a9007-252f-4f04-9f6f-39db71545be7
=============================================
// 
// Process Audit Log
// 
If FC Print Message [INMG] is not equal to VA frm_szPrevPrintMessage1_INMG [INMG]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Priority Processing Code
Event: Control Exited/Changed-Asynch
Event GUID: d10ae374-cd4c-45d0-8ed3-c5bc02dc1a38
=============================================
// 
// Process Audit Log
// 
If FC Priority Processing Code [PRIO] is not equal to VA frm_cPrevPriorityProc_PRIO [PRIO]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Reason Code
Event: Control is Entered
Event GUID: 549bcbc0-1dc8-11d2-9a81-0000f64da757
=============================================
If FC Reason Code [RCD] is equal to <Blank>
     FC Reason Code [RCD] = PO szDefaultReasoncode [RCD]
End If

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Reason Code
Event: Control Exited/Changed-Asynch
Event GUID: dbc60ec3-09e5-4dca-9318-af7c2d8335fa
=============================================
// 
// Process Audit Log
// 
If FC Reason Code [RCD] is not equal to VA frm_szPrevReasonCode_RCD [RCD]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cash Discount %
Event: Control Exited/Changed-Asynch
Event GUID: e7d6e7ed-b132-4ead-a782-20909eabdfd5
=============================================
// 
// Process Audit Log
// 
If FC Cash Discount % [CADC] is not equal to VA frm_mnPrevDiscountCash_CADC [CADC]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC G/L Class
Event: Control Exited/Changed-Asynch
Event GUID: f73aaa4e-56f2-44fc-84b3-b112d4a719e4
=============================================
// 
// Process Audit Log
// 
If FC G/L Class [GLPT] is not equal to VA frm_szPrevGlCategory_GLPT [GLPT]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Subledger
Event: Control Exited/Changed-Asynch
Event GUID: 188115d0-1aea-4d1c-a963-8e2434e4ef21
=============================================
// 
// Process Audit Log
// 
If FC Subledger [SBL] is not equal to VA frm_szPrevSubledger_SBL [SBL]
     Press Button(FC Audit Logging)
End If

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Subledger
Event: Visual Assist Button Clicked
Event GUID: b4e2033f-f718-49e1-9bf3-dff606ef02b2
=============================================
// 8388126 Adding a visual assit for Subledger
// Suppress dummy visual assist search and select form assigned in subledger
// type event rules
Suppress Default Visual Assist Form
GetSubledgerValue(N0900010.GetSubledgerValue)
     BC Subledger Type (F4211.0) [SBLT] -> cSubledgerType [SBLT]
     BC Subledger - G/L (F4211.0) [SBL] <> szSubledger [SBL]


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Subledger Type
Event: Control Exited/Changed-Asynch
Event GUID: cdb56983-b278-46c2-8e61-190336413e2f
=============================================
// 
// Process Audit Log
// 
If FC Subledger Type [SBLT] is not equal to VA frm_cPrevSubledgerType_SBLT [SBLT]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross-Docking Flag (Y/N)
Event: Control Exited/Changed-Asynch
Event GUID: b8e9c782-e6a9-4785-b592-34e743a0cad6
=============================================
// 
// Process Audit Log
// 
If FC Cross-Docking Flag (Y/N) [XDCK] is not equal to VA frm_cPrevCrossDockFlagYN_XDCK [XDCK]
     Press Button(FC Audit Logging)
End If
// 
// SAR 5565975
// 
If FC Cross-Docking Flag (Y/N) [XDCK] is equal to "y"
     FC Cross-Docking Flag (Y/N) [XDCK] = "Y"
End If
If FC Cross-Docking Flag (Y/N) [XDCK] is equal to "n"
     FC Cross-Docking Flag (Y/N) [XDCK] = "N"
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross-Dock Priority
Event: Control Exited/Changed-Asynch
Event GUID: 04ce6694-0113-40d1-86a7-11a8a9ee36bb
=============================================
// 
// Process Audit Log
// 
If FC Cross-Dock Priority [XPTY] is not equal to VA frm_mnPrevCrossDockPrior_XPTY [XPTY]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross Dock Order Number
Event: Control Exited/Changed-Asynch
Event GUID: c4c76dea-dcea-40f2-8c01-b7e337c204ec
=============================================
// 
// Process Audit Log
// 
If FC Cross Dock Order Number [XORN] is not equal to VA frm_mnPrevCrossDockOrder_XORN [XORN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross Dock Order Type
Event: Control Exited/Changed-Asynch
Event GUID: e93d8736-c183-460b-b26c-ba99a3bb9eca
=============================================
// 
// Process Audit Log
// 
If FC Cross Dock Order Type [XCTO] is not equal to VA frm_szPrevCrossDockType_XCTO [XCTO]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross Dock Order Company
Event: Control Exited/Changed-Asynch
Event GUID: aa4bac78-c67a-4581-9f48-c024f05b17f2
=============================================
// 
// Process Audit Log
// 
If FC Cross Dock Order Company [XKCO] is not equal to VA frm_szPrevCrossDockComp_XKCO [XKCO]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross Dock Order Suffix
Event: Control Exited/Changed-Asynch
Event GUID: 8c9d77ec-ca5c-4f16-9eb6-ea62699dbbe4
=============================================
// 
// Process Audit Log
// 
If FC Cross Dock Order Suffix [XSFX] is not equal to VA frm_szPrevCrossDockSuffix_XSFX [XSFX]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cross Dock Line Number
Event: Control Exited/Changed-Asynch
Event GUID: b946f01a-8d32-40ee-80f2-9e5c65f1c27e
=============================================
// 
// Process Audit Log
// 
If FC Cross Dock Line Number [XLLN] is not equal to VA frm_mnPrevCrossDockLine_XLLN [XLLN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Project Number
Event: Control Exited/Changed-Asynch
Event GUID: 24c5d06e-a1dc-4c14-9640-dcbf4fb28cb0
=============================================
If FC Project Number [PRJM] is greater than "0"
     F31P01ProjectAttributesSever(N31P0040.F31P01ProjectAttributesSever)
          FC Project Number [PRJM] -> mnProjectNumber [PRJM]
          UNDEFINED <> cOverrideEstimatesFlag [OVEF]
          UNDEFINED <> cJobCostBugdetUploadedFlag [JCBU]
          UNDEFINED <> cRequireActivityCode [REAF]
          UNDEFINED <> cLockWBSFlag [LWBS]
          UNDEFINED <> mnSalesOrderNumber [DOCO]
          UNDEFINED <> szSalesOrderType [DCTO]
          UNDEFINED <> szSalesOrderKeyCompany [KCOO]
          UNDEFINED <> cQuoteIsAccepted [QTAF]
          UNDEFINED <> cEstimateIsFirmed [ESFF]
          UNDEFINED <> cMPMSSProjectUsedFlag [MPJU]
          UNDEFINED <> cMPMInactiveProjectFlag [IPJF]
          UNDEFINED <> cJobCostInterfaceY/N [JBIF]
          UNDEFINED <> szProjectG/LClassCode [GLCM]
          UNDEFINED <> cLockJobCostBudget [LJOB]
          UNDEFINED <> cCommitAfterQuoteAcceptFlag [CAQA]
          UNDEFINED <> szCostCenterSubsequent [MCUS]
          UNDEFINED <> cProjectBillingMethod [PBMT]
          UNDEFINED -> szUserId [USER]
          UNDEFINED -> szProgramId [PID]
          UNDEFINED -> szWorkStationId [JOBN]
          UNDEFINED -> mnTimeLastUpdated [UPMT]
          UNDEFINED -> jdDateUpdated [UPMJ]
          "4" -> cActionCode [EV01]
          UNDEFINED <> szOrganizationTypeStructur [OSTP]
          UNDEFINED <> mnAddressNumberParent [PA8]
          UNDEFINED <> cResourceAssignmentsInterf [RSIF]
          UNDEFINED <> cConfigureLowLevelCode [CLLX]
          VA frm_szProjectNumNotValidError [DTAI] <- szErrorMessageID [DTAI]
     If VA frm_szProjectNumNotValidError [DTAI] is not equal to <Blank>
     Or VA frm_szProjectNumNotValidError [DTAI] is not equal to <NULL>
          Set Control Error(FC Project Number, VA frm_szProjectNumNotValidError)
     End If
End If
// 
// Process Audit Log
// 
If FC Project Number [PRJM] is not equal to VA frm_mnPrevProjectNumber_PRJM [PRJM]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Promotion ID
Event: Control Exited/Changed-Asynch
Event GUID: 2b057a1d-8485-4cf7-b28c-50086a6640c7
=============================================
// 
// Process Audit Log
// 
If FC Promotion ID [PMTN] is not equal to VA frm_szPrevPromotionID_PMTN [PMTN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC CatalogSection Cat Code
Event: Control Exited/Changed-Asynch
Event GUID: 7a0ba4fa-e5a6-4bfe-870a-ac43fcb8ef51
=============================================
// 
// Process Audit Log
// 
If FC CatalogSection Cat Code [SRP1] is not equal to VA frm_szPrevSalesRepCode1_SRP1 [SRP1]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC SubSection Cat Code
Event: Control Exited/Changed-Asynch
Event GUID: 75f6a426-6210-40a1-9bfb-9fc5dd57f5c9
=============================================
// 
// Process Audit Log
// 
If FC SubSection Cat Code [SRP2] is not equal to VA frm_szPrevSalesRepCode2_SRP2 [SRP2]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Sales Cat Code3
Event: Control Exited/Changed-Asynch
Event GUID: ce4909e5-0747-46fd-a231-f1d5e324a099
=============================================
// 
// Process Audit Log
// 
If FC Sales Cat Code3 [SRP3] is not equal to VA frm_szPrevSalesRepCode3_SRP3 [SRP3]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Sales Cat Code4
Event: Control Exited/Changed-Asynch
Event GUID: ac52f1f6-fb94-482c-adcc-9edd0e156644
=============================================
// 
// Process Audit Log
// 
If FC Sales Cat Code4 [SRP4] is not equal to VA frm_szPrevSalesRepCode4_SRP4 [SRP4]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Sales Cat Code5
Event: Control Exited/Changed-Asynch
Event GUID: 6281614c-0e3b-44cb-8769-33884b6844b9
=============================================
// 
// Process Audit Log
// 
If FC Sales Cat Code5 [SRP5] is not equal to VA frm_szPrevSalesRepCode5_SRP5 [SRP5]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Buying Segment Code
Event: Control Exited/Changed-Asynch
Event GUID: 8f4b3a16-7188-4a88-a114-d8dbee18a3de
=============================================
// 
// Process Audit Log
// 
Press Button(FC Audit Logging)


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Ship To
Event: Control Exited/Changed-Asynch
Event GUID: 00a1806f-e8c1-4a1a-bbd7-2e349e168e91
=============================================
// 
// Process Audit Log
// 
If FC Ship To [SHAN] is not equal to VA frm_mnPrevAddressShipTo_SHAN [SHAN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Carrier Number
Event: Control Exited/Changed-Asynch
Event GUID: 3066cd7f-d77e-44a1-a522-e66bf9923e6e
=============================================
// 
// Process Audit Log
// 
If FC Carrier Number [CARS] is not equal to VA frm_mnPrevCarrier_CARS [CARS]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Deliver To
Event: Control Exited/Changed-Asynch
Event GUID: 5c1c2e07-1cb0-4f90-ac12-a48c6449d037
=============================================
// 
// Process Audit Log
// 
If FC Deliver To [DVAN] is not equal to VA frm_mnPrevDeliveredTo_DVAN [DVAN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Requested
Event: Control Exited/Changed-Asynch
Event GUID: 549bcbc1-1dc8-11d2-9a81-0000f64da757
=============================================
If FC Requested [DRQJ] is equal to ""
     FC Requested [DRQJ] = FI Datetransactionjulian [TRDJ]
End If
VerifyDate2AfterDate1(B4000790.VerifyDate2AfterDate1)
     FI Datetransactionjulian [TRDJ] <> Date1 [DTE]
     FC Requested [DRQJ] <> Date2 [DTE]
     "0917" <> szErrormessagekey [EKEY]
     UNDEFINED <> cErrorCode [ERR]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cSuppressErrorMessage [EV01]
// 
// Process Audit Log
// 
If FC Requested [DRQJ] is not equal to VA frm_jdPrevDateRequested_DRQJ [DRQJ]
     Press Button(FC Audit Logging)
     VA frm_cRevisionMade_EV01 [EV01] = "2"
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Scheduled Pick
Event: Control Exited/Changed-Asynch
Event GUID: 9051ef82-bafc-4e47-a2cb-b4de85fad611
=============================================
// 
// Process Audit Log
// 
If FC Scheduled Pick [PDDJ] is not equal to VA frm_jdPrevPromisedDelDate_PDDJ [PDDJ]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Promised Delivery
Event: Control Exited/Changed-Asynch
Event GUID: 370d47c6-e2c4-47a4-81dc-c32db924f644
=============================================
// 
// Process Audit Log
// 
If FC Promised Delivery [RSDJ] is not equal to VA frm_jdPrevDateRelease_RSDJ [RSDJ]
     Press Button(FC Audit Logging)
     VA frm_cRevisionMade_EV01 [EV01] = "2"
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Cancel Date
Event: Control Exited/Changed-Asynch
Event GUID: 4b0293c5-ffe8-4a1b-95c6-eea5c157768e
=============================================
// 
// Process Audit Log
// 
If FC Cancel Date [CNDJ] is not equal to VA frm_jdPrevCancelDate_CNDJ [CNDJ]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Ship
Event: Control Exited/Changed-Asynch
Event GUID: 44d398e1-39ec-47fa-ab8a-7cbb50d0f0c1
=============================================
// 
// Process Audit Log
// 
If FC Ship [PPDJ] is not equal to VA frm_jdPrevDatePromPick_PPDJ [PPDJ]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Shipping Commodity Class
Event: Control Exited/Changed-Asynch
Event GUID: 062c75ea-c47b-40fc-9f26-3d54bc4ebfde
=============================================
// 
// Process Audit Log
// 
If FC Shipping Commodity Class [SHCM] is not equal to VA frm_szPrevShipCommClass_SHCM [SHCM]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Shipping Conditions Code
Event: Control Exited/Changed-Asynch
Event GUID: 7c861485-273a-487b-80d2-66f08eebb728
=============================================
// 
// Process Audit Log
// 
If FC Shipping Conditions Code [SHCN] is not equal to VA frm_szPrevShipCondCode_SHCN [SHCN]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Route Code
Event: Control Exited/Changed-Asynch
Event GUID: 7328daf4-5a00-4342-88c6-3b86143a36fe
=============================================
// 
// Process Audit Log
// 
If FC Route Code [ROUT] is not equal to VA frm_szPrevRouteCode_ROUT [ROUT]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Stop Code
Event: Control Exited/Changed-Asynch
Event GUID: d386ea7f-8494-4f17-b3dd-392aaea271e8
=============================================
// 
// Process Audit Log
// 
If FC Stop Code [STOP] is not equal to VA frm_szPrevStopCode_STOP [STOP]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Zone Number
Event: Control Exited/Changed-Asynch
Event GUID: 6833aca5-3357-434e-8258-5d6f7a98eed9
=============================================
// 
// Process Audit Log
// 
If FC Zone Number [ZON] is not equal to VA frm_szPrevZoneNumber_ZON [ZON]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Mode of Trn
Event: Control is Entered
Event GUID: 50fbc60a-60ba-4691-873f-1094dfb46cc5
=============================================
// 
// Process Audit Log
// 
If FC Mode of Trn [MOT] is not equal to VA frm_szPrevModeOfTransport_MOT [MOT]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Unit Volume
Event: Control Exited/Changed-Asynch
Event GUID: e9100c05-a9b5-4d02-9863-98fe5702179e
=============================================
// 
// Process Audit Log
// 
If FC Unit Volume [ITVL] is not equal to VA frm_mnPrevAmountUnitVolum_ITVL [ITVL]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Volume Unit of Measure
Event: Control Exited/Changed-Asynch
Event GUID: 25d705c5-b4f6-4253-87fb-3a62eedd6f3c
=============================================
// 
// Process Audit Log
// 
If FC Volume Unit of Measure [VLUM] is not equal to VA frm_szPrevVolumeUOM_VLUM [VLUM]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Unit Weight
Event: Control Exited/Changed-Asynch
Event GUID: 2c8fe080-5fc5-46d5-b64e-6216244dc5bd
=============================================
// 
// Process Audit Log
// 
If FC Unit Weight [ITWT] is not equal to VA frm_mnPrevAmountUnitWeigh_ITWT [ITWT]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Weight Unit of Measure
Event: Control Exited/Changed-Asynch
Event GUID: 41a1c200-24e2-4aa9-982f-1732cf69c129
=============================================
// 
// Process Audit Log
// 
If FC Weight Unit of Measure [WTUM] is not equal to VA frm_szPrevWeightUOM_WTUM [WTUM]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Sales Taxable
Event: Control Exited/Changed-Asynch
Event GUID: a029864a-3a11-43e9-ab4b-a7ff3602ae4a
=============================================
// 
// Process Audit Log
// 
If FC Sales Taxable [TAX1] is not equal to VA frm_cPrevTaxableYN_TAX1 [TAX1]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Tax Expl Code
Event: Control Exited/Changed-Asynch
Event GUID: 8327a886-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
If VA frm_cGeoCodeValid [EV01] is equal to "1"
     // 
     //  If the tax explanation is equal to Exempt, Sales or Use then clear any error
     // "4999") that might have been set to indicate that the tax explanation code is
     // invalid. 
     // 
     If FC Tax Expl Code [EXR1] is equal to ("E","S","U")
          Clear Control Error(FC Tax Expl Code [EXR1])
     Else
          Set Control Error(FC Tax Expl Code, "4999")
     End If
End If
// -----------------------------------------------------------------------------
// 
// Process Audit Log
// 
If FC Tax Expl Code [EXR1] is not equal to VA frm_szPrevTaxExplCode1_EXR1 [EXR1]
     Press Button(FC Audit Logging)
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Tax Rate/Area
Event: Control Exited/Changed-Asynch
Event GUID: 8327a887-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 2730779 Vertex Quantum Implementation
// Reset  the cGeoCodeValid Flag to be invalid
// 
VA frm_cGeoCodeValid [EV01] = <NULL>
Clear Control Error(FC Tax Rate/Area [TXA1])
// 
//  If Vertex is active call B7300002 ("Validate GeoCode") to be sure, if a
//  geocode was entered in the tax area field, that it is valid. 
// 
If VA frm_cVertexActive [VVTX] is equal to "1"
     Clear Control Error(FC Tax Expl Code [EXR1])
     ValidateGeoCode(B7300002.ValidateGeoCode)
          FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
          FC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
          VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
          <Blank> -> cDeleteGeoCodeCache [EV01]
End If
// 
If FC Address Number [AN8] is equal to <Blank>
     Clear Control Error(FC Address Number [AN8])
End If
// 
If VA frm_cGeoCodeValid [EV01] is not equal to "1"
     EditTaxRateArea(B0000140.EditTaxRateArea)
          FC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
          UNDEFINED <> szDescriptionTaxArea [TAXA]
End If
// 
// Process Audit Log
// 
If FC Tax Rate/Area [TXA1] is not equal to VA frm_szPrevTaxArea1_TXA1 [TXA1]
     Press Button(FC Audit Logging)
End If

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Tax Rate/Area
Event: Visual Assist Button Clicked
Event GUID: 8327a888-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call N73000006 to determine which Visual Assist Form to bring up.
// 
Suppress Default Visual Assist Form
SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
     FC Ship To [SHAN] -> mnAddressNumber [AN8]
     FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
     FC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
     VA frm_cVertexActive [VVTX] <- cGeoCodeValid [EV01]
     VA frm_szSearchType [AT1] <> szSearchType [AT1]
     VA frm_szVertexCanadaCountryCode [VVCN] -> szVertrexCanadaCountryCode [VVCN]
     UNDEFINED <- cCloseFlag [EV02]
     "1" -> cMasterFile [EV03]
     VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC PROCESS:Disable Fields
Event: Button Clicked
Event GUID: 35b884e7-92eb-11d3-b9d9-00003953080e
=============================================
PO cDisablePricingRelated [EV01] = "1"
PO cDisableorHidePrice [EV04] = "1"
PO cDisableorHideCost [EV03] = "1"
Disable Control(FC Print Message [INMG])
Disable Control(FC Priority Processing Code [PRIO])
Disable Control(FC Reason Code [RCD])
Disable Control(FC Cash Discount % [CADC])
Disable Control(FC G/L Offset [GLPT])
Disable Control(FC G/L Class [GLPT])
Disable Control(FC Subledger [SBL])
Disable Control(FC Subledger Type [SBLT])
Disable Control(FC Sales Catalog Section [SRP1])
Disable Control(FC CatalogSection Cat Code [SRP1])
Disable Control(FC Sub Section [SRP2])
Disable Control(FC Sales Category Code 3 [SRP3])
Disable Control(FC Sales Category Code 4 [SRP4])
Disable Control(FC Sales Category Code 5 [SRP5])
Disable Control(FC Ship To [SHAN])
Disable Control(FC Shipping Commodity Class [SHCM])
Disable Control(FC Shipping Conditions Code [SHCN])
// SAR 4558028-B9 DB Change
! Disable Control(Could not resolve Form Control. 88)
Disable Control(FC Volume Unit of Measure [VLUM])
Disable Control(FC Unit Volume [ITVL])
Disable Control(FC Unit Weight [ITWT])
Disable Control(FC Weight Unit of Measure [WTUM])
Disable Control(FC Ship [PPDJ])
Disable Control(FC Cancel Date [CNDJ])
Disable Control(FC Promised Delivery [RSDJ])
Disable Control(FC Scheduled Pick [PDDJ])
Disable Control(FC Requested [DRQJ])
! Disable Control(Could not resolve Form Control. 102)
// SAR 4558028-B9 DB Change
! Disable Control(Could not resolve Form Control. 103)
! Disable Control(Could not resolve Form Control. 104)
! Disable Control(Could not resolve Form Control. 105)
! Disable Control(Could not resolve Form Control. 106)
Disable Control(FC Sales Taxable [TAX1])
Disable Control(FC Tax Expl Code [EXR1])
Disable Control(FC Tax Rate/Area [TXA1])
// SAR 4558028-B9 DB Change
! Disable Control(Could not resolve Form Control. 85)
Disable Control(FC SubSection Cat Code [SRP2])
Disable Control(FC Sales Cat Code3 [SRP3])
Disable Control(FC Sales Cat Code4 [SRP4])
Disable Control(FC Sales Cat Code5 [SRP5])


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Audit Logging
Event: Button Clicked
Event GUID: 73d56c20-c5e0-4b7c-a2e4-6c5d43162f22
=============================================
// 
// Process Audit Log
// 
If VA frm_cRevisionMade_EV01 [EV01] is not equal to "2"
     VA frm_cRevisionMade_EV01 [EV01] = "1"
End If
If PO cUseAuditLog [EV01] is equal to "1"
And FI cBypassAuditLogging [EV01] is not equal to "1"
     If FI cFirstRevision [EV01] is equal to "1"
          FC Change Order [CORD] = FI mnNextRevisionNumber [CORD]
     Else
          FI mnNextRevisionNumber [CORD] = [FI mnNextRevisionNumber [CORD]]+1
          FC Change Order [CORD] = FI mnNextRevisionNumber [CORD]
          FI cFirstRevision [EV01] = "1"
     End If
End If


=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Object: FC Port of Entry or Exit
Event: Control Exited/Changed-Asynch
Event GUID: 5bbd4487-07ff-4e0d-a670-83501b259d45
=============================================
// 
// Process Audit Log
// 
If FC PORT OF ENTRY OR EXIT [DL01] is not equal to VA frm_szPrevPortOfEntryExit_POE [POE]
     Press Button(FC Audit Logging)
End If

=============================================
Form: SOE - Additional Information - W4210B
Object: FC Port of Entry or Exit
Event: Visual Assist Button Clicked
Event GUID: 2b1808ab-995e-405f-927f-0aafc3cc02d6
=============================================
// SAR 5900833
! Suppress Default Visual Assist Form
! Call App:P0005S Form:W0005SB Version:ZJDE0001
!      "40" -> Systemcode [SY]
!      "PE" -> Userdefinedcodes [RT]
!      FC Port of Entry or Exit [POE] <- Userdefinedcodevalue [KY]
!      UNDEFINED <> Description001 [DL01]
!      UNDEFINED <> Description002 [DL02]
// SAR 5900833
// 



=============================================
EVENTS
=============================================
Form: SOE - Additional Information - W4210B
Event: Dialog is Initialized
Event GUID: f4f35402-1e45-11d2-9a82-0000f64da757
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call N7300001 ("Determine if Vertex is Active") to determine if Vertex is  
// active.  Also used to retrieve other information. 
// 
DetermineIfVertexIsActive(N7300001.DetermineIfVertexIsActive)
     <Blank> -> szSystemCode [SY]
     VA frm_cVertexActive [VVTX] <- cUseVertexFlag [VVTX]
     UNDEFINED <- szUSCountryCode [VVUS]
     VA frm_szVertexCanadaCountryCode [VVCN] <- szCanCountryCode [VVCN]
     UNDEFINED <- szDivisionCodeSales [VVAB]
     UNDEFINED <- szItemBalanceCategory [VVIT]
     UNDEFINED <- szDivisionCodeUse [VUAB]
     UNDEFINED <- szItemBalanceCategoryUseTax [VUIT]
     UNDEFINED <- szGlOffset [GL01]
     UNDEFINED <- cFlagMultiCountyAddress [VVMC]
     UNDEFINED <- cPrintLinkParm [VPRT]
     UNDEFINED <- szCustomerClassCodeSales [VCCS]
     UNDEFINED <- szCustomerClassCodeUse [VCCU]
     UNDEFINED <- szQuantumDebugLog [QDLG]
// -----------------------------------------------------------------------------
// 
// cCacheOn determines if a workfile or cache is used for F42UI11 and F42UI01. 
// This variable must be consistent with the corresponding variables in the
// Header form and the SOD Revisions form.
! VA frm_cCacheOn_WFOC [WFOC] = "1"
VA frm_cCacheOn_WFOC [WFOC] = "2"
// 
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Form Title(TV Store And Forward - Additional Information)
End If
// 
// SAR 8549225 - Set a flag to disable all fields if the line is for a kit
// component
If FC Kit Master Line Number [KTLN] is greater than "0"
And FC Related Kit Component [RKIT] is equal to "0"
     VA frm_cLineIsKitComp [EV01] = "1"
Else
     VA frm_cLineIsKitComp [EV01] = <Blank>
End If
// 
// SAR 6105487 - Verify Demand System is Available
IsDemandSchedulingDelivered(N40R0940.IsDemandSchedulingDelivered)
     VA frm_cDemandSchedReleased_DSRF [DSRFU] <- cDemandSchedulingReleased [DSRFU]
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     // SAR 6386961 Begin
     FC Release Number [RLNU] = FI szReleaseNumber [RLNU]
     // SAR 6386961 End
     // SAR 6405210 - AUTO
     FC Requested Time [DRQT] = FI mnRequestedDeliveryTime [DRQT]
     FC Scheduled Pick Time [PDTT] = FI mnPromisedPickTime [PDTT]
     FC Promised Delivery Time [RSDT] = FI mnPromisedDeliveryTime [RSDT]
     FC Promised Ship Time [PMDT] = FI mnScheduledShipmentTime [PMDT]
     // SAR 6405210 End
Else
     Hide Control(FC Pull Signal [PSIG])
     Hide Control(FC Release Time [RLTM])
     Hide Control(FC Release Date [RLDJ])
     Hide Control(FC Release Number [RLNU])
     Hide Control(FC Demand)
     // Time Handling Fields
     Hide Control(FC Promised Ship Time [PMDT])
     Hide Control(FC Promised Delivery Time [RSDT])
     Hide Control(FC Scheduled Pick Time [PDTT])
     Hide Control(FC Requested Time [DRQT])
End If
// End SAR 6105487
// 
// Begin SAR 5051018 - Hide category codes if in batch mode
// 
If FI cBatchEntryMode [EV01] is equal to "1"
     Hide Control(FC Sales Catalog Section [SRP1])
     Hide Control(FC CatalogSection Cat Code [SRP1])
     Hide Control(FC Sub Section [SRP2])
     Hide Control(FC SubSection Cat Code [SRP2])
     Hide Control(FC Sales Category Code 3 [SRP3])
     Hide Control(FC Sales Cat Code3 [SRP3])
     Hide Control(FC Sales Category Code 4 [SRP4])
     Hide Control(FC Sales Cat Code4 [SRP4])
     Hide Control(FC Sales Category Code 5 [SRP5])
     Hide Control(FC Sales Cat Code5 [SRP5])
End If
//      Additional Info 1 Tab
// 
FC Adjustment Schedule [ASN] = FI Priceadjustmentschedulen [ASN]
FC Payment Instrument [RYIN] = FI Paymentinstrumenta [RYIN]
FC Print Message [INMG] = FI Printmessage1 [INMG]
FC Related Kit Component [RKIT] = FI Relatedkitcomponent [RKIT]
FC Kit Master Line Number [KTLN] = FI Linenumberkitmaster [KTLN]
FC Component Line Number [CPNT] = FI Componenetnumber [CPNT]
FC Original Order Number [OORN] = FI Originalposonumber [OORN]
FC Original Order Type [OCTO] = FI Originalordertype [OCTO]
FC Original Line Number [OGNO] = FI Originallinenumber [OGNO]
FC Original Order Document Company [OKCO] = FI Companykeyoriginal [OKCO]
// 
// SAR#5242682
FC Promotion ID [PMTN] = FI szPromotionID [PMTN]
FC Project Number [PRJM] = FI mnProjectNumber [PRJM]
// 
If FI cPromotionsSystemFlag [PRSF] is not equal to("1","2")
     Hide Control(FC Promotion ID [PMTN])
End If
// 
//     Disable the Adjustment Schedule field if specified.
// 
If FI cAdvancedSalesPricingYN [ADVP] is equal to "N"
     Hide Control(FC Adjustment Schedule [ASN])
End If
// 
//     Additional Info 2 Tab
// 
FC Address Number [AN8] = FI Addressnumber [AN8]
FC Ship To [SHAN] = FI Addressnumbershipto [SHAN]
FC Carrier Number [CARS] = FI Carrier [CARS]
FC Mode of Trn [MOT] = FI ModeofTransport [MOT]
FC Requested [DRQJ] = FI Daterequestedjulian [DRQJ]
FC Scheduled Pick [PDDJ] = FI ScheduledPickDate [PDDJ]
FC Promised Delivery [RSDJ] = FI PromisedDeliveryDate [RSDJ]
FC Cancel Date [CNDJ] = FI Canceldate [CNDJ]
FC Ship [PPDJ] = FI jdPromisedShipDate [PPDJ]
FC Unit Weight [ITWT] = FI Amountunitweight [ITWT]
FC Weight Unit of Measure [WTUM] = FI Weightunitofmeasure [WTUM]
FC Sales Taxable [TAX1] = FI Taxableyn [TAX1]
// 
// SAR 2470508 - Related Order Information not handled through the F42UI12 cache
// anymore.
FC Related Order Key Company [RKCO] = FI Companykeyrelated [RKCO]
FC Related Order Number [RORN] = FI Relatedposonumber [RORN]
FC Related PO/SO/WO Order Type [RCTO] = FI Relatedordertype [RCTO]
FC Related PO/SO Line Number [RLLN] = FI Relatedposolineno [RLLN]
// 
//  SAR 2505045 - Called from P4004Z
// 
FC Item Price Group [PRGR] = FI Pricingcategory [PRGR]
FC Payment Terms [PTC] = FI Paymenttermscode01 [PTC]
FC Priority Processing Code [PRIO] = FI Priorityprocessing [PRIO]
FC Reason Code [RCD] = FI Reasoncode [RCD]
FC Cash Discount % [CADC] = FI Discountcash [CADC]
FC G/L Class [GLPT] = FI Glclass [GLC]
FC Subledger [SBL] = FI Subledger [SBL]
FC Subledger Type [SBLT] = FI Subledgertype [SBLT]
FC Sales Catalog Section [SRP1] = FI Salesreportingcode1 [SRP1]
FC Sub Section [SRP2] = FI Salesreportingcode2 [SRP2]
FC Sales Category Code 3 [SRP3] = FI Salesreportingcode3 [SRP3]
FC Sales Category Code 4 [SRP4] = FI Salesreportingcode4 [SRP4]
FC Sales Category Code 5 [SRP5] = FI Salesreportingcode5 [SRP5]
// SAR 4558028-B9 DB Change
! Could not resolve Form Control. 85 = FI Applyfreightyn [AFT]
FC Shipping Conditions Code [SHCN] = FI Shippingconditionscode [SHCN]
FC Shipping Commodity Class [SHCM] = FI Shippingcommodityclass [SHCM]
// SAR 4558028-B9 DB Change
! Could not resolve Form Control. 88 = FI Ratecodefrieghtmisc [FRAT]
FC Route Code [ROUT] = FI Routecode [ROUT]
FC Stop Code [STOP] = FI Stopcode [STOP]
FC Zone Number [ZON] = FI Zonenumber [ZON]
FC Volume Unit of Measure [VLUM] = FI Volumeunitofmeasure [VLUM]
FC Unit Volume [ITVL] = FI Amountunitvolume [ITVL]
! Could not resolve Form Control. 102 = FI Applycommissionyn [ACOM]
// SAR 4558028-B9 DB Change
! Could not resolve Form Control. 103 = FI Salesperson1 [SLSM]
! Could not resolve Form Control. 104 = FI Salespersoncommission1 [SLCM]
! Could not resolve Form Control. 105 = FI Salesperson2 [SLM2]
! Could not resolve Form Control. 106 = FI Salespersoncommission2 [SLC2]
FC Tax Expl Code [EXR1] = FI Taxexplantationcode1 [EXR1]
FC Tax Rate/Area [TXA1] = FI Taxarea1 [TXA1]
// SAR 5308881 - Date Sensitive Customer Sets
FC Deliver To [DVAN] = FI mnDeliveredTo [DVAN]
// 
// SAR 4952210
// 
If FI cItemBranckCrossDockFlag [XDCK] is equal to "0"
Or FI cItemBranckCrossDockFlag [XDCK] is equal to "N"
     FC Cross-Docking Flag (Y/N) [XDCK] = "0"
     FC Cross-Dock Priority [XPTY] = "0"
     FC Cross Dock Order Number [XORN] = "0"
     FC Cross Dock Order Type [XCTO] = "  "
     FC Cross Dock Order Company [XKCO] = "   "
     FC Cross Dock Order Suffix [XSFX] = "   "
     FC Cross Dock Line Number [XLLN] = "0"
     Disable Control(FC Cross-Docking Flag (Y/N) [XDCK])
     Disable Control(FC Cross-Dock Priority [XPTY])
     Disable Control(FC Cross Dock Order Number [XORN])
     Disable Control(FC Cross Dock Order Type [XCTO])
     Disable Control(FC Cross Dock Order Company [XKCO])
     Disable Control(FC Cross Dock Order Suffix [XSFX])
     Disable Control(FC Cross Dock Line Number [XLLN])
Else
     // 
     // 7754059 - Pass ItemCrossDocK flag if cCrossDock have a blank or null 
     // value. 
     // 
     If FI cCrossDockFlagYN [XDCK] is equal to <NULL>
     Or FI cCrossDockFlagYN [XDCK] is equal to <Blank>
          FC Cross-Docking Flag (Y/N) [XDCK] = FI cItemBranckCrossDockFlag [XDCK]
     Else
          FC Cross-Docking Flag (Y/N) [XDCK] = FI cCrossDockFlagYN [XDCK]
     End If
     FC Cross-Dock Priority [XPTY] = FI mnCrossDockingPriority [XPTY]
     FC Cross Dock Order Number [XORN] = FI mnCrossDockOrderNumber [XORN]
     FC Cross Dock Order Type [XCTO] = FI szCrossDockOrderType [XCTO]
     FC Cross Dock Order Company [XKCO] = FI szCrossDockCmpyKeyOrderNo [XKCO]
     FC Cross Dock Order Suffix [XSFX] = FI szCrossDockOrderSuffix [XSFX]
     FC Cross Dock Line Number [XLLN] = FI mnCrossDockLineNumber [XLLN]
     // 
     // Save the cross docking information
     // 
     VA frm_cCrossDockFlagYN_XDCK [XDCK] = FI cCrossDockFlagYN [XDCK]
     VA frm_mnCrossDockingPriorit_XPTY [XPTY] = FI mnCrossDockingPriority [XPTY]
     VA frm_mnCrossDockOrderNumbe_XORN [XORN] = FI mnCrossDockOrderNumber [XORN]
     VA frm_szCrossDockOrderType_XCTO [XCTO] = FI szCrossDockOrderType [XCTO]
     VA frm_szCrossDockCmpyKeyNo_XKCO [XKCO] = FI szCrossDockCmpyKeyOrderNo [XKCO]
     VA frm_szCrossDockOrdeSuffix_XSFX [XSFX] = FI szCrossDockOrderSuffix [XSFX]
     VA frm_mnCrossDockLineNumber_XLLN [XLLN] = FI mnCrossDockLineNumber [XLLN]
End If
// 
// SAR 4702931
FC Port of Entry or Exit [POE] = FI szPortOfEntryExit [POE]
// SAR 4945300
VA frm_cPaymentTermsOverride_PMTO [PMTO] = FI cPaymentTermsOverride [PMTO]
VA frm_szPrevPaymentTerms_PTC [PTC] = FC Payment Terms [PTC]
// 
// Hide Revision Number if Audit Logging of off
// 
If PO cUseAuditLog [EV01] is not equal to "1"
Or FI cRevisionMade [EV01] is equal to "A"
     Hide Control(FC Change Order [CORD])
     Hide Control(FC Revision Reason [RFRV])
     FI cBypassAuditLogging [EV01] = "1"
End If
If FI cPending_Approval_Flag_F42 [PEND] is not equal to <Blank>
     Disable Control(FC Payment Terms [PTC])
     Disable Control(FC Requested [DRQJ])
     Disable Control(FC Promised Delivery [RSDJ])
End If
// SAR 5510106 Begin ADD
FC Project Number [PRJM] = FI mnProjectNumber [PRJM]
Disable Control(FC Project Number [PRJM])
// SAR 5814943
// 
// SAR 6925523
// SAR 8585461 - Scenario Manager processing option removed
If PO cOrderPromising [EV01] is not equal to "1"
     Hide Tab Page(FC Tab Control2, TP Order Promising Overrides)
End If
// 
// SAR 8549225 - Disable the Requested Date for kit lines that are dirty.
If FI cKitComponentDirtyFlag [KITDIRTY] is equal to "1"
Or FI cKitCompPastCutoffStatus [EV01] is equal to "1"
     Disable Control(FC Requested [DRQJ])
End If
// 
If VA frm_cLineIsKitComp [EV01] is equal to "1"
     Disable Control(FC Cross-Docking Flag (Y/N) [XDCK])
     Disable Control(FC Cross-Dock Priority [XPTY])
     Disable Control(FC Cross Dock Order Number [XORN])
     Disable Control(FC Cross Dock Order Type [XCTO])
     Disable Control(FC Cross Dock Order Company [XKCO])
     Disable Control(FC Cross Dock Order Suffix [XSFX])
     Disable Control(FC Cross Dock Line Number [XLLN])
     Disable Control(FC Port of Entry or Exit [POE])
     Disable Control(FC Deliver To [DVAN])
     Disable Control(FC Pull Signal [PSIG])
     Disable Control(FC Release Date [RLDJ])
     Disable Control(FC Release Time [RLTM])
     Disable Control(FC Release Number [RLNU])
     Disable Control(FC OP Multi Source Group [OPMG])
     Disable Control(FC OP Shipping Group [OPSG])
     Disable Control(FC Partial Shipments Allowed [OPLL])
     Disable Control(FC Backorders Allowed [OPBA])
     Disable Control(FC Substitutes Allowed [OPSS])
     Disable Control(FC Promise Line (Y/N) [OPYN])
     Disable Control(FC Multi-Sourcing Allowed [OPMS])
     Disable Control(FC Requested Time [DRQT])
     Disable Control(FC Promised Ship Time [PMDT])
     Disable Control(FC Promised Delivery Time [RSDT])
     Disable Control(FC Scheduled Pick Time [PDTT])
     Disable Control(FC Promotion ID [PMTN])
End If

=============================================
Form: SOE - Additional Information - W4210B
Event: Post Dialog is Initialized
Event GUID: f4f35403-1e45-11d2-9a82-0000f64da757
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4022629                   VK6272082                 03/17/00
//  
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call B7300011 to validate the GeoCode                   
// 
ValidateGeoCodeTaxRateArea(N7300011.ValidateGeoCodeTaxRateArea)
     VA frm_cVertexActive [VVTX] -> cVertexActivate [VVTX]
     FC Tax Rate/Area [TXA1] -> szGeoCode [TXA1]
     FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
     VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
     UNDEFINED <- szTaxRateAreaDescription [DL01]
// -----------------------------------------------------------------------------
// 
//      Call BF to retrieve data for Form Controls
//      SAR 2505045 - Don't execute if coming from P4004Z 
// 
If FI cBatchEntryMode [EV01] is not equal to "1"
     // SAR 3790976 - Begin/End CHANGE
     // The Purchasing Category Codes are now also retrieved
     //  
     // SAR 4022629 BEGIN/END - Get OPDJ from UI12
     // SAR 4066453 Retrieve Invoice Info
     // SAR 4558028-B9 DB Change
     // SAR#5242682 - PMTN,PRJM
     // SAR 5814943 - Begins
     // SAR 6386961 Retrieve Demand ID, Pull Signal, Release Date and Release Time
     GetSalesOrderDetailFromCache(B4201280.GetSalesOrderDetailFromCache)
          FI szComputerID [CTID] -> szComputerID [CTID]
          FI mnJobnumberA [JOBS] -> mnJobnumber [JOBS]
          FI mnLineNumberXREF [LNIX] -> mnLineNumberXREF [LNIX]
          FI CompanyKeyOrderNo [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FI DocumentOrderInvoiceE [DOCO] -> mnDocumentOrderInvoice [DOCO]
          FI OrderType [DCTO] -> szOrderType [DCTO]
          FI LineNumber [LNID] -> mnLineNumber [LNID]
          BC Date - Original Promised Delivery (F4211.0) [OPDJ] <- jdDateOriginalPromisde [OPDJ]
          FC Ship [PPDJ] <- jdDatePromisedPickJu [PPDJ]
          FC CatalogSection Cat Code [SRP1] <- szSalesReportingCode1 [SRP1]
          FC SubSection Cat Code [SRP2] <- szSalesReportingCode2 [SRP2]
          FC Sales Cat Code3 [SRP3] <- szSalesReportingCode3 [SRP3]
          FC Sales Cat Code4 [SRP4] <- szSalesReportingCode4 [SRP4]
          FC Sales Cat Code5 [SRP5] <- szSalesReportingCode5 [SRP5]
          VA frm_szPurchCatCode1_PRP1 [PRP1] <- szPurchasingReportCode1 [PRP1]
          VA frm_szPurchCatCode2_PRP2 [PRP2] <- szPurchasingReportCode2 [PRP2]
          VA frm_szPurchCatCode3_PRP3 [PRP3] <- szPurchasingReportCode3 [PRP3]
          VA frm_szPurchCatCode4_PRP4 [PRP4] <- szPurchasingReportCode4 [PRP4]
          VA frm_szPurchCatCode5_PRP5 [PRP5] <- szPurchasingReportCode5 [PRP5]
          FC Print Message [INMG] <- szPrintMessage [INMG]
          FC Payment Terms [PTC] <- szPaymentTermsCode [PTC]
          FC Payment Instrument [RYIN] <- cPaymentInstrumentA [RYIN]
          FC Item Price Group [PRGR] <- szPricingCategory [PRGR]
          FC Cash Discount % [CADC] <- mnDiscountCash [CADC]
          VA frm_szDocCompanyKey [KCO] <- szCompanyKey [KCO]
          VA frm_mnDocVoucherInvoiceNo [DOC] <- mnDocVoucherInvoiceE [DOC]
          VA frm_szDocumentType [DCT] <- szDocumentType [DCT]
          FC Tax Rate/Area [TXA1] <- szTaxArea1 [TXA1]
          FC Tax Expl Code [EXR1] <- szTaxExplanationCode [EXR1]
          FC Priority Processing Code [PRIO] <- cPriorityProcessing [PRIO]
          VA frm_szCommodityCode [CDCD] <- szCommodityCode [CDCD]
          FC Carrier Number [CARS] <- mnCarrier [CARS]
          FC Mode of Trn [MOT] <- szModeOfTransport [MOT]
          FC Route Code [ROUT] <- szRouteCode [ROUT]
          FC Stop Code [STOP] <- szStopCode [STOP]
          FC Zone Number [ZON] <- szZoneNumber [ZON]
          FC Shipping Commodity Class [SHCM] <- szShippingCommodityClass [SHCM]
          FC Shipping Conditions Code [SHCN] <- szShippingConditionsCode [SHCN]
          FC G/L Class [GLPT] <- szGlClass [GLC]
          FC Reason Code [RCD] <- szReasonCode [RCD]
          FC Subledger [SBL] <- szSubledger [SBL]
          FC Subledger Type [SBLT] <- cSubledgerType [SBLT]
          FI cCMUseWorkFiles [EV01] <> cCMUseWorkFiles [EV01]
          FC Promotion ID [PMTN] <- szPromotionID [PMTN]
          FC Partial Shipments Allowed [OPLL] <- cOPPartialShipLineItems [OPLL]
          FC Substitutes Allowed [OPSS] <- cOPAllowSubstitutes [OPSS]
          FC Backorders Allowed [OPBA] <- cOPAllowBackorders [OPBA]
          FC OP Multi Source Group [OPMG] <- szOPMultiSourceGroup [OPMG]
          FC OP Shipping Group [OPSG] <- szOPShippingGroup [OPSG]
          FC Promise Line (Y/N) [OPYN] <- cOPPromiseLineYN [OPYN]
          FC Multi-Sourcing Allowed [OPMS] <- cOPAllowMultiSource [OPMS]
          VA frm_cFoundRecdInF42UI12 [EV01] <- cFoundRecdInF42UI12 [EV01]
          FC Demand Unique Key [DEID] <- mnDemandUniqueKey [DEID]
          FC Pull Signal [PSIG] <- szPullSignal [PSIG]
          FC Release Date [RLDJ] <- jdDateRelease [RLDJ]
          FC Release Time [RLTM] <- mnTimeRelease [RLTM]
     // SAR 7067013
     // SAR 8585461 - Scenario Manager processing option removed
     If PO cOrderPromising [EV01] is equal to "1"
          If VA frm_cFoundRecdInF42UI12 [EV01] is not equal to "Y"
          And SV Form_ Mode is equal to CO UPDATE_MODE
               // SAR 8417193 - To suppress Record Invalid Error 
               F49211MaintainSalesDetailTable(B4201270.F49211MaintainSalesDetailTable)
                    "R" -> cActionCode [ACTI]
                    FI DocumentOrderInvoiceE [DOCO] -> mnOrderNumber [DOCO]
                    FI OrderType [DCTO] -> szOrderType [DCTO]
                    FI CompanyKeyOrderNo [KCOO] -> szOrderCompany [KCOO]
                    FI LineNumber [LNID] -> mnLineNumber [LNID]
                    "1" -> cSuppressError [SUPPS]
                    FC Partial Shipments Allowed [OPLL] <- cOPPartialShipLineItems [OPLL]
                    FC Substitutes Allowed [OPSS] <- cOPAllowSubstitutes [OPSS]
                    FC Backorders Allowed [OPBA] <- cOPAllowBackorders [OPBA]
                    FC OP Multi Source Group [OPMG] <- szOPMultiSourceGroup [OPMG]
                    FC OP Shipping Group [OPSG] <- szOPShippingGroup [OPSG]
                    FC Promise Line (Y/N) [OPYN] <- cOPPromiseLineYN [OPYN]
                    FC Multi-Sourcing Allowed [OPMS] <- cOPAllowMultiSource [OPMS]
          End If
     End If
End If
// 
// SAR 6925220
// SAR 8585461 - Scenario Manager processing option removed
If PO cOrderPromising [EV01] is equal to "1"
     If FI cDisableOPBackOrderFlag [EV01] is equal to "1"
     Or FI Linenumberkitmaster [KTLN] is greater than "0"
          If FI Linenumberkitmaster [KTLN] is less than or equal to "0"
               FC Backorders Allowed [OPBA] = "N"
          End If
          Disable Control(FC Backorders Allowed [OPBA])
     End If
     If FI cDisableOPMultiSourceFlag [EV01] is equal to "1"
     Or FI Linenumberkitmaster [KTLN] is greater than "0"
          If FI Linenumberkitmaster [KTLN] is less than or equal to "0"
          And FI cDisableOPMultiSourceFlag [EV01] is equal to "1"
               FC Multi-Sourcing Allowed [OPMS] = "N"
          End If
          Disable Control(FC Multi-Sourcing Allowed [OPMS])
     End If
     If FI cDisableOPPartialShipFlag [EV01] is equal to "1"
     Or FI Linenumberkitmaster [KTLN] is greater than "0"
          FC Partial Shipments Allowed [OPLL] = "N"
          Disable Control(FC Partial Shipments Allowed [OPLL])
     End If
     If FI cDisableOPSustituteFlag [EV01] is equal to "1"
     Or FI Linenumberkitmaster [KTLN] is greater than "0"
          FC Substitutes Allowed [OPSS] = "N"
          Disable Control(FC Substitutes Allowed [OPSS])
     End If
End If
// SAR 5814943 - Ends
// 
// SAR# 3494376 -If Action D Protect Al Fields
// SAR 8529225 - Disable all fields for kit component lines
If FI Actioncode [ACTI] is equal to "D"
Or VA frm_cLineIsKitComp [EV01] is equal to "1"
     Press Button(FC PROCESS:Disable Fields)
End If
// SAR 6386961 Begin
// Check if the Demand System is enabled.
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
     EditSystemExistenceF99410(N5200130.EditSystemExistenceF99410)
          "SY40R" -> szDataItem [DTAI]
          VA frm_cDemandSchedEnabled_MEOW [MEOW] <- cModuleExistance [MEOW]
     If VA frm_cDemandSchedEnabled_MEOW [MEOW] is not equal to "1"
          VA frm_cDisableDemandFlag_EV01 [EV01] = "1"
     End If
     If FC Demand Unique Key [DEID] is not equal to <NULL>
     And FC Demand Unique Key [DEID] is not equal to "0"
          VA frm_cDisableDemandFlag_EV01 [EV01] = "1"
          Disable Control(FC Ship To [SHAN])
          Disable Control(FC Deliver To [DVAN])
     End If
     If VA frm_cDisableDemandFlag_EV01 [EV01] is equal to "1"
          Disable Control(FC Pull Signal [PSIG])
          Disable Control(FC Release Time [RLTM])
          Disable Control(FC Release Date [RLDJ])
          Disable Control(FC Release Number [RLNU])
     End If
End If
// SAR 6386961 End
// 
// SAR 3359078 - If OW is Detached and this is not a S&F order being changed,
// disable any fields that can affect the price
If FI cDisablePriceFields [EV01] is equal to "1"
     If PO cDisableorHidePrice [EV04] is not equal to "2"
          PO cDisableorHidePrice [EV04] = "1"
     End If
     If PO cDisableorHideCost [EV03] is not equal to "2"
          PO cDisableorHideCost [EV03] = "1"
     End If
     PO cDisablePricingRelated [EV01] = "1"
     Disable Control(FC Cash Discount % [CADC])
     Disable Control(FC Sales Catalog Section [SRP1])
     Disable Control(FC Sub Section [SRP2])
     Disable Control(FC Sales Category Code 3 [SRP3])
     Disable Control(FC Sales Category Code 4 [SRP4])
     Disable Control(FC Sales Category Code 5 [SRP5])
     Disable Control(FC Ship To [SHAN])
     Disable Control(FC Requested [DRQJ])
     Disable Control(FC Scheduled Pick [PDDJ])
     Disable Control(FC Promised Delivery [RSDJ])
     Disable Control(FC Ship [PPDJ])
     Disable Control(FC Shipping Commodity Class [SHCM])
     Disable Control(FC Shipping Conditions Code [SHCN])
     // SAR 4558028-B9 DB Change
     ! Disable Control(Could not resolve Form Control. 88)
     Disable Control(FC Unit Volume [ITVL])
     Disable Control(FC Volume Unit of Measure [VLUM])
     Disable Control(FC Unit Weight [ITWT])
     Disable Control(FC Weight Unit of Measure [WTUM])
End If
// 
If PO cDisablePricingRelated [EV01] is equal to "1"
     Disable Control(FC Payment Instrument [RYIN])
     Disable Control(FC Payment Terms [PTC])
     Disable Control(FC Adjustment Schedule [ASN])
     Disable Control(FC Item Price Group [PRGR])
     Disable Control(FC Route Code [ROUT])
     Disable Control(FC Mode of Trn [MOT])
     Disable Control(FC Carrier Number [CARS])
     Disable Control(FC Stop Code [STOP])
     Disable Control(FC Zone Number [ZON])
End If
// SAR# 4541912 Begin
FC Buying Segment Code [BSC] = FI szDetailLineBSC [BSC]
// 
// Save Previous Value for Audit Log
// 
VA frm_szPrevPriceAdjSched_ASN [ASN] = FC Adjustment Schedule [ASN]
VA frm_szPrevPricingCategory_PRGR [PRGR] = FC Item Price Group [PRGR]
VA frm_cPrevPaymentInstr_RYIN [RYIN] = FC Payment Instrument [RYIN]
VA frm_szPrevPrintMessage1_INMG [INMG] = FC Print Message [INMG]
VA frm_cPrevPriorityProc_PRIO [PRIO] = FC Priority Processing Code [PRIO]
VA frm_szPrevReasonCode_RCD [RCD] = FC Reason Code [RCD]
VA frm_mnPrevDiscountCash_CADC [CADC] = FC Cash Discount % [CADC]
VA frm_szPrevGlCategory_GLPT [GLPT] = FC G/L Class [GLPT]
VA frm_szPrevSubledger_SBL [SBL] = FC Subledger [SBL]
VA frm_cPrevSubledgerType_SBLT [SBLT] = FC Subledger Type [SBLT]
VA frm_cPrevCrossDockFlagYN_XDCK [XDCK] = FC Cross-Docking Flag (Y/N) [XDCK]
VA frm_mnPrevCrossDockPrior_XPTY [XPTY] = FC Cross-Dock Priority [XPTY]
VA frm_mnPrevCrossDockOrder_XORN [XORN] = FC Cross Dock Order Number [XORN]
VA frm_szPrevCrossDockType_XCTO [XCTO] = FC Cross Dock Order Type [XCTO]
VA frm_szPrevCrossDockComp_XKCO [XKCO] = FC Cross Dock Order Company [XKCO]
VA frm_szPrevCrossDockSuffix_XSFX [XSFX] = FC Cross Dock Order Suffix [XSFX]
VA frm_mnPrevCrossDockLine_XLLN [XLLN] = FC Cross Dock Line Number [XLLN]
VA frm_mnPrevProjectNumber_PRJM [PRJM] = FC Project Number [PRJM]
VA frm_szPrevPromotionID_PMTN [PMTN] = FC Promotion ID [PMTN]
VA frm_szPrevSalesRepCode1_SRP1 [SRP1] = FC Sales Catalog Section [SRP1]
VA frm_szPrevSalesRepCode2_SRP2 [SRP2] = FC Sub Section [SRP2]
VA frm_szPrevSalesRepCode3_SRP3 [SRP3] = FC Sales Category Code 3 [SRP3]
VA frm_szPrevSalesRepCode4_SRP4 [SRP4] = FC Sales Category Code 4 [SRP4]
VA frm_szPrevSalesRepCode5_SRP5 [SRP5] = FC Sales Category Code 5 [SRP5]
VA frm_mnPrevAddressShipTo_SHAN [SHAN] = FC Ship To [SHAN]
VA frm_mnPrevCarrier_CARS [CARS] = FC Carrier Number [CARS]
VA frm_mnPrevDeliveredTo_DVAN [DVAN] = FC Deliver To [DVAN]
VA frm_jdPrevDateRequested_DRQJ [DRQJ] = FC Requested [DRQJ]
VA frm_jdPrevPromisedDelDate_PDDJ [PDDJ] = FC Scheduled Pick [PDDJ]
VA frm_jdPrevDateRelease_RSDJ [RSDJ] = FC Promised Delivery [RSDJ]
VA frm_jdPrevCancelDate_CNDJ [CNDJ] = FC Cancel Date [CNDJ]
VA frm_jdPrevDatePromPick_PPDJ [PPDJ] = FC Ship [PPDJ]
VA frm_szPrevShipCommClass_SHCM [SHCM] = FC Shipping Commodity Class [SHCM]
VA frm_szPrevShipCondCode_SHCN [SHCN] = FC Shipping Conditions Code [SHCN]
VA frm_szPrevPortOfEntryExit_POE [POE] = FC Port of Entry or Exit [POE]
VA frm_szPrevRouteCode_ROUT [ROUT] = FC Route Code [ROUT]
VA frm_szPrevStopCode_STOP [STOP] = FC Stop Code [STOP]
VA frm_szPrevZoneNumber_ZON [ZON] = FC Zone Number [ZON]
VA frm_szPrevModeOfTransport_MOT [MOT] = FC Mode of Trn [MOT]
VA frm_mnPrevAmountUnitVolum_ITVL [ITVL] = FC Unit Volume [ITVL]
VA frm_szPrevVolumeUOM_VLUM [VLUM] = FC Volume Unit of Measure [VLUM]
VA frm_mnPrevAmountUnitWeigh_ITWT [ITWT] = FC Unit Weight [ITWT]
VA frm_szPrevWeightUOM_WTUM [WTUM] = FC Weight Unit of Measure [WTUM]
! VA frm_cPrevApplyCommYN_ACOM [ACOM] = Could not resolve Form Control. 102
VA frm_cPrevTaxableYN_TAX1 [TAX1] = FC Sales Taxable [TAX1]
VA frm_szPrevTaxExplCode1_EXR1 [EXR1] = FC Tax Expl Code [EXR1]
VA frm_szPrevTaxArea1_TXA1 [TXA1] = FC Tax Rate/Area [TXA1]

=============================================
Form: SOE - Additional Information - W4210B
Event: End Dialog
Event GUID: 8327a885-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call B7300002 to delete the VerifyGeoCode Cache
// 
ValidateGeoCode(B7300002.ValidateGeoCode)
     <Blank> -> szTaxExplanationCode [EXR1]
     <Blank> -> szTaxRateArea [TXA1]
     UNDEFINED <- cGeoCodeValid [EV01]
     "1" -> cDeleteGeoCodeCache [EV01]
// -----------------------------------------------------------------------------




=============================================
EVENTS
=============================================
Form: Alert - W4210C
Object: FC Yes
Event: Button Clicked
Event GUID: 871098fc-6b77-405a-a289-4378aaba8b97
=============================================
// 
// SAR 6131571
FI cIsOkclicked [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Alert - W4210C
Object: FC No
Event: Button Clicked
Event GUID: 15017a96-96f4-4285-8f68-33fea3af8c7d
=============================================
// 
// SAR 6131571
// 
FI cIsOkclicked [EV01] = "0"



=============================================
EVENTS
=============================================
Form: Alert - W4210C
Event: Dialog is Initialized
Event GUID: 324d4aae-a256-4c2b-93c9-0e5f0306cdc3
=============================================
// 
// SAR 6131571
// 
Set Control Text(FC Alert Text, TV Are you sure you want to cancel/delete all lines on this order?)
// 
FI cIsOkclicked [EV01] = <Blank>




=============================================
Form: Override Sold To and Ship To - W4210D
Event: Form Variables
Event GUID: 0bc47046-a73d-43e2-a849-a6603bfe19ca
=============================================
frm_mnSoldTo [AN8]
frm_mnShipTo [SHAN]
frm_szSoldToName [ALPH]
frm_szShipToName [ALPH]
frm_cSoldToChangeClicked [EV01]

=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Object: HC OK/Select
Event: Button Clicked
Event GUID: efa20a99-739c-4b77-91c4-23292758402c
=============================================
FI mnSoldTo [AN8] = VA frm_mnSoldTo [AN8]
FI szSoldToName [ALPH] = VA frm_szSoldToName [ALPH]
FI mnShipTo [SHAN] = VA frm_mnShipTo [SHAN]
FI szShipToName [ALPH] = VA frm_szShipToName [ALPH]


=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Object: FC Change
Event: Button Clicked
Event GUID: f8bce4d5-9083-45a3-83f7-b707621ffb19
=============================================
VA frm_cSoldToChangeClicked [EV01] = "1"
Press Button(FC PROCESS: Change)


=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Object: FC Cha&nge
Event: Button Clicked
Event GUID: 48aca12a-1755-40de-85e8-2fe0467eba79
=============================================
VA frm_cSoldToChangeClicked [EV01] = "0"
Press Button(FC PROCESS: Change)


=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Object: FC Ne&xt
Event: Button Clicked
Event GUID: adcace98-604d-4035-8579-6e753f12247d
=============================================
If VA frm_mnSoldTo [AN8] is not equal to FI mnSoldTo [AN8]
And VA frm_mnShipTo [SHAN] is not equal to FI mnShipTo [SHAN]
     FI mnSoldToShipToOverridden [URAB] = "1"
Else
     If VA frm_mnSoldTo [AN8] is not equal to FI mnSoldTo [AN8]
          FI mnSoldToShipToOverridden [URAB] = "2"
     Else
          If VA frm_mnShipTo [SHAN] is not equal to FI mnShipTo [SHAN]
               FI mnSoldToShipToOverridden [URAB] = "3"
          Else
               FI mnSoldToShipToOverridden [URAB] = "4"
          End If
     End If
End If
// 
// ---------------------------------------------------------------------------
// update CSS cache
// ---------------------------------------------------------------------------
CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
     FI mnUserAddress [AN8] <> mnUserAddressNumber [AN8]
     FI mnJobnumberA [JOBS] <> mnJobnumberA [JOBS]
     VA frm_mnShipTo [SHAN] <> mnAddressNumberShipTo [SHAN]
     "C" -> cActionCode [ACTN]
     VA frm_mnSoldTo [AN8] <> mnSoldToAddressNumber [AN8]
     FI szComputerID [CTID] <> szComputerID [CTID]
     FI cCSSPrevRecordFound [EV01] <- cPreviousSessionFound [EV01]
     FI mnSoldToShipToOverridden [URAB] -> mnUserReservedNumber [URAB]
// 
If FI mnSoldToShipToOverridden [URAB] is not equal to "4"
And FI cOverrideButtonClicked [EV01] is equal to "1"
     // ---------------------------------------------------------------------------
     // override button clicked and values changed - can't use previous flag = '2'
     // to for F42UI01 / F42UI11 - need to remove the logic in 1070 later
     // ---------------------------------------------------------------------------
     F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
          FI mnJobnumberA [JOBS] -> mnJobNo [JOBS]
          FI szComputerID [CTID] -> szComputerID [CTID]
          FI cCacheOn [EV22] -> cClearHeaderWF [EV01]
          FI cCacheOn [EV22] -> cClearDetailWF [EV02]
          SL VersionName -> szCMVersion [VERS]
          FI mnProcessID [PEID] -> mnProcessID [PEID]
          FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     // 
     // ---------------------------------------------------------------------------
     // Reload F42UI11 as long as shopping cart exists
     // ---------------------------------------------------------------------------
     If FI cCSSPrevRecordFound [EV01] is equal to "2"
          CopySOInfoToWorkFiles(B4200690.CopySOInfoToWorkFiles)
               FI szComputerID [CTID] <> szComputerid [CTID]
               FI mnJobnumberA [JOBS] <> mnJobnumber [JOBS]
               "8" -> cSourceofdata [EV02]
               "2" -> cMode [EV03]
               FI cCacheOn [EV22] -> cWriteToWorkFileOrCache [EV05]
     End If
     // 
     Press Button(HC &OK/&Select)
Else
     If FI cOverrideButtonClicked [EV01] is equal to "1"
          // user click override button but change nothing - return nothing
          Press Button(HC Cancel/Close)
     Else
          // display to user for the first time display - return changed value
          Press Button(HC &OK/&Select)
     End If
End If


=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Object: FC PROCESS: Change
Event: Button Clicked
Event GUID: cf1efcc2-4547-4f12-b9e5-b5f6c858c4df
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnReturnedAddress [AN8]
evt_szReturnedName [ALPH]
----------------------------------------
If PO szOrganizationTypeStructur [OSTP] is greater than <Blank>
     Call App:P0150S Form:W0150SA Version:Undefined
          PO szOrganizationTypeStructur [OSTP] -> szOrganizationTypeStructur [OSTP]
          FI mnUserAddress [AN8] -> mnAddressNumberParent [PA8]
          VA evt_mnReturnedAddress [AN8] <- mnAddressNumber [AN8]
          VA evt_szReturnedName [ALPH] <- szDescription001 [DL01]
Else
     Call App:P0150R Form:W0150RA Version:Undefined
          FI mnUserAddress [AN8] -> mnAddressNumber [AN8]
          VA evt_mnReturnedAddress [AN8] <- mnCompanyNumber_2 [AN8]
          VA evt_szReturnedName [ALPH] <- szCompanyName [DL01]
End If
// 
If VA evt_mnReturnedAddress [AN8] is greater than "0"
     If VA frm_cSoldToChangeClicked [EV01] is equal to "1"
          If VA evt_mnReturnedAddress [AN8] is not equal to VA frm_mnSoldTo [AN8]
               VA frm_mnSoldTo [AN8] = VA evt_mnReturnedAddress [AN8]
               VA frm_szSoldToName [ALPH] = VA evt_szReturnedName [ALPH]
               Set Control Text(FC st_SoldToName, VA frm_szSoldToName)
          End If
     Else
          If VA evt_mnReturnedAddress [AN8] is not equal to VA frm_mnShipTo [SHAN]
               VA frm_mnShipTo [SHAN] = VA evt_mnReturnedAddress [AN8]
               VA frm_szShipToName [ALPH] = VA evt_szReturnedName [ALPH]
               Set Control Text(FC st_ShipToName, VA frm_szShipToName)
          End If
     End If
Else
     If VA evt_szReturnedName [ALPH] is greater than <Blank>
          // 
          // blank parent is selected, use User Address Number and Alpha Name
          // 
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               FI mnUserAddress [AN8] -> mnAddressNumber [AN8]
               VA evt_szReturnedName [ALPH] <- szAddressBookDescription [ALPH]
          If VA frm_cSoldToChangeClicked [EV01] is equal to "1"
               VA frm_mnSoldTo [AN8] = FI mnUserAddress [AN8]
               VA frm_szSoldToName [ALPH] = VA evt_szReturnedName [ALPH]
               Set Control Text(FC st_SoldToName, VA frm_szSoldToName)
          Else
               VA frm_mnShipTo [SHAN] = FI mnUserAddress [AN8]
               VA frm_szShipToName [ALPH] = VA evt_szReturnedName [ALPH]
               Set Control Text(FC st_ShipToName, VA frm_szShipToName)
          End If
     End If
End If



=============================================
EVENTS
=============================================
Form: Override Sold To and Ship To - W4210D
Event: Dialog is Initialized
Event GUID: 6a3f1aea-6c08-401a-86c2-b235bd0ca580
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_nSegmentID [INT01]
evt_sz2ndHeading [CFGS]
evt_mnRecordCount [MATH01]
evt_cBlankChar [EV01]
----------------------------------------
// 
// ---------------------------------------------------------------------------
// 6545212 CRM CSS
// ---------------------------------------------------------------------------
// 
VA evt_cBlankChar [EV01] = <Blank>
// 
VA frm_mnSoldTo [AN8] = FI mnSoldTo [AN8]
VA frm_mnShipTo [SHAN] = FI mnShipTo [SHAN]
VA frm_szSoldToName [ALPH] = FI szSoldToName [ALPH]
VA frm_szShipToName [ALPH] = FI szShipToName [ALPH]
// 
Set Control Text(FC st_SoldToName, VA frm_szSoldToName)
Set Control Text(FC st_ShipToName, VA frm_szShipToName)
// 
// 
// ---------------------------------------------------------------------------
// Title
// ---------------------------------------------------------------------------
Set Form Title(FI szFormTitle [CFGS])
// 
// ---------------------------------------------------------------------------
// Heading
// ---------------------------------------------------------------------------
VA evt_nSegmentID [INT01] = "1"
Update Segment(FC tbc_MainHeading, TV Select Order Defaults, <Arial,Bold,15,Black>, <No>, VA evt_nSegmentID)
// 
// ---------------------------------------------------------------------------
// Secondary Heading - wait B4207090
// ---------------------------------------------------------------------------
If FI mnSoldToShipToOverridden [URAB] is less than or equal to "0"
     // 
     CountF42UI11CRecords(B4207110.CountF42UI11CRecords)
          FI szComputerID [CTID] -> szComputerID [CTID]
          FI mnJobnumberA [JOBS] -> mnJobNumber [JOBS]
          VA evt_mnRecordCount [MATH01] <- mnNumberOfRecords [MATH01]
     // 
     If VA evt_mnRecordCount [MATH01] is greater than "0"
          VA evt_sz2ndHeading [CFGS] = TV You have
          VA evt_sz2ndHeading [CFGS] = concat([VA evt_sz2ndHeading [CFGS]], [VA evt_cBlankChar [EV01]])
          VA evt_sz2ndHeading [CFGS] = concat([VA evt_sz2ndHeading [CFGS]], [VA evt_mnRecordCount [MATH01]])
          VA evt_sz2ndHeading [CFGS] = concat([VA evt_sz2ndHeading [CFGS]], [VA evt_cBlankChar [EV01]])
          VA evt_sz2ndHeading [CFGS] = concat([VA evt_sz2ndHeading [CFGS]], [TV item(s) in your shopping cart])
          VA evt_nSegmentID [INT01] = "1"
          // 
          Update Segment(FC tbc_2ndHeading, VA evt_sz2ndHeading, <Arial,Bold,12,Black>, <No>, VA evt_nSegmentID)
     Else
          Hide Control(FC tbc_2ndHeading)
     End If
End If
// 
If FI cOverrideButtonClicked [EV01] is equal to "1"
     Update Segment(FC tbc_notes, TV The new Ship To selected will only override the Header Ship To.  Change Detail Ship To in the Add Sales Order form., <Arial,Italic,11,Black>, <No>, VA evt_nSegmentID)
Else
     Update Segment(FC tbc_notes, TV The Ship To specified here will be assigned to the order unless a different Ship To is already selected in Product Catalog, <Arial,Italic,11,Black>, <No>, ...)
End If
// 
// 
If PO cOverrideSoldToShipTo [EV01] is equal to "3"
     Hide Control(FC Sold To)
     Hide Control(FC st_SoldToName)
     Hide Control(FC Change)
Else
     If PO cOverrideSoldToShipTo [EV01] is equal to "2"
          Hide Control(FC Ship To)
          Hide Control(FC st_ShipToName)
          Hide Control(FC Cha&nge)
     End If
End If




=============================================
Form: Customer Service Inquiry - W4210E
Event: Form Variables
Event GUID: f57df764-a23a-11d0-a204-0000f6728a56
=============================================
frm_mnPreviousAddrNumber_AN8 [AN8]
frm_szPreviousAlphaName_ALPH [ALPH]
frm_Primary_Item_UITM [UITM]
frm_Grid_Total_AAP [AAP]
frm_Grid_Row_Num_INT01 [INT01]
frm_Units_Transaction_UOM [UOM]
frm_Units_As_Input_UOM2 [UOM2]
frm_Units_Pricing_UOM4 [UOM4]
frm_Address_Number_AN8 [AN8]
frm_Price_Per_Unit_UPRC [UPRC]
frm_Unit_Cost_UNCS [UNCS]
frm_Foreign_Cost_FUC [FUC]
frm_Quantity_Shipped_UORG [UORG]
frm_Foreign_Price_FRRC [FRRC]
frm_Effective_Date_PEFJ [PEFJ]
frm_Adjustment_Sched_ASN [ASN]
frm_Currency_Code_From_CRCD [CRCD]
frm_Currency_Code_To_CRDC [CRDC]
frm_Show_Total_EV01 [EV01]
frm_First_Line_EV02 [EV02]
frm_Foreign_Total_AM0 [AM0]
frm_TOE_PO_Number_DOC2 [DOC2]
frm_TOE_SO_Number_DOC1 [DOC1]
frm_TOE_SO_Type_DCTO [DCTO]
frm_TOE_Landed_Cost_Rule_PRP5 [PRP5]
frm_TOE_PO_Type_DCIN [DCIN]
frm_TOE_SO_Branch [MCU1]
frm_TOE_PO_Branch [MCU2]
frm_TOE_Cancel_EV04 [EV04]
frm_TOE_Exchange_Rate_CRR [CRR]
frm_Text_Line_EV09 [EV09]
frm_TOE_PO_Exchange_Rate_CRRD [CRRD]
frm_TOE_PO_Currency_Code_CRCX [CRCX]
frm_ADVP_cAdv_Pricing [ADVP]
frm_RORN_Related_Order_Number [RORN]
frm_DOCO_Related_Order_Number [DOCO]
frm_szVersion_VERS [VERS]
frm_cInventoryInterface_IVI [IVI]
frm_szLineTypePrevious_LNTY [LNTY]
frm_szPrimaryUOM_UOM [UOM]
frm_szStdUOMConversion_TFLA [TFLA]
frm_mnQtyFromtoToUOM_QTY [QTY]
frm_Grid_Calc_Clear_INT01 [INT01]
frm_AsIfCurrency [DL01]
frm_mnCurrConvRateMult [TRR1]
frm_mnCurrConvRateDiv [TRR1]
frm_mnTriangulationRate1 [TRR1]
frm_mnTriangulationRate2 [TRR1]
frm_cConversionMethod [EV20]
frm_mnXRate [TRR1]
frm_Extended [DL01]
frm_Unit [DL01]
frm_AsIfExtended [DL01]
frm_AsIfUnit [DL01]
frm_USER_szUserID [USER]
frm_TRNK_szTransactionKey [TRNK]
frm_TRNY_szTransactionType [TRNY]
frm_CTID_szComputerID [CTID]
frm_szPreviousNextStatus_NXTR [NXTR]
frm_szPrevNextStatusDesc_DESC [DESC]
frm_szCompany_CO [CO]
frm_cCSSPrevRecordFound_EV01 [EV01]
frm_mnUserABNumber_AN8 [AN8]
frm_szSOEVersion_VERS [VERS]
frm_mnJobNumber_JOBS [JOBS]
frm_szCSSShipToStrucType_OSTP [OSTP]
frm_szShipToName_DL01 [DL01]
frm_mnTransactionID [TCID]
frm_mnProcessID [PEID]
frm_cSoldToError_EV01 [EV01]
frm_cShipToError_EV01 [EV01]
frm_cItemNumberError_EV01 [EV01]
frm_jdOrderDate_TRDJ [TRDJ]
frm_StockingType_STKT [STKT]
grd_cStockingType [STKT]
frm_BogusStatusForConfgGeneric [ALPH]
frm_BogusOrderSuffixForGeneric [SFXO]
frm_cModuleExistance_MEOW [MEOW]
frm_ConfigurationIDNumber [CFGID]
frm_mnComponentIDNumber [CFGCID]
frm_szErrorMessageIDForConfg [DTAI]
frm_cPromotionsSystemFlag [PRSF]
frm_cDemandSchedReleased_DSRF [DSRFU]
grd_ComponentItem_RKIT [RKIT]
frm_szCurrencyMode [CRRM]
frm_szPrevFormatLocation_LOCN [LOCN]
frm_szPreviousLocation_LOCN [LOCN]
frm_szPreviousBusinessUnit_MCU [MCU]
frm_cApparelInstalled_EV01 [EV01]
frm_cPMPNInstalled_EV01 [EV01]

=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df5cf-a23a-11d0-a204-0000f6728a56
=============================================
If PO cHeaderOrDetailFirst [EV19] is equal to or empty <Blank>
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
          GC Branch/Plant [MCU] -> Costcenter [MCU]
          UNDEFINED <> Addressnumber [AN8]
          UNDEFINED <> Addressnumbershipto [SHAN]
          UNDEFINED <> Datetransactionjulian [TRDJ]
          UNDEFINED <> Currencymode [CRRM]
          UNDEFINED <> Currencycodefrom [CRCD]
          UNDEFINED <> Currencyconverrateov [CRR]
          UNDEFINED <> Amountordergross [OTOT]
          UNDEFINED <> Amountforeignopen [FAP]
          "0" -> UpdatedToHdrWF [EV20]
          UNDEFINED <> Computerid [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          GC Base Curr [CRDC] -> Currencycodeto [CRDC]
          UNDEFINED <> OrderPlacedOnHold [EV19]
          UNDEFINED <> Advancedsalespricingyn [ADVP]
          UNDEFINED <> szTOEToBranchPlant [MCU2]
          UNDEFINED <> szTOELandedCostRule [PRP5]
          UNDEFINED <> mnTOEPONumber [DOC2]
          UNDEFINED <> szTOEPOOrderType [DCIN]
          GC Customer PO [VR01] -> szPONumber [VR01]
          UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          UNDEFINED <> szOrderTempSoldTo [ORTP]
          UNDEFINED <> szOrderTempShipTo [ORTP]
          UNDEFINED <> cCurrencyConversionMethod [CRCM]
          UNDEFINED <> mnTr [MATH01]
          UNDEFINED <> mnTriangulationRateFrom [MATH01]
          UNDEFINED <> cShoppingCartMode [CART]
          VA frm_mnProcessID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID [TCID] <> mnTransactionID [TCID]
          UNDEFINED <> szLongAddressSoldTo [ALKY]
          UNDEFINED <> szLongAddressShipTo [ALKY]
          UNDEFINED <> mnDeliveredTo [DVAN]
          UNDEFINED <> szLongAddressDeliverTo [ALKY]
          UNDEFINED <> mnForwardedTo [FTAN]
          UNDEFINED <> szLongAddressForwardedTo [ALKY]
          UNDEFINED <> mnInvoicedTo [ITAN]
          UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          UNDEFINED <> mnPaidBy [PBAN]
          UNDEFINED <> szLongAddressPaidBy [ALKY]
          UNDEFINED <> cAddressNumberForTax [AUFT]
          UNDEFINED <> cAddressNumberForTransport [AUFI]
          UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szGlClass [GLC]
          UNDEFINED <> mnDescTaskNumber [DOCO]
          UNDEFINED <> szDescTaskType [DCTO]
          UNDEFINED <> cOPAllowBackorders [OPBA]
          UNDEFINED <> cOPAllowMultiSource [OPMS]
          UNDEFINED <> cOPAllowSubstitutes [OPSS]
          UNDEFINED <> cOPPartialShipLineItems [OPLL]
          UNDEFINED <> cIsOrderPromisingEnabled [EV01]
          UNDEFINED <> cIsOPChangedInHeader [EV01]
Else
     // Begin SAR 4363554
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
               GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
               GC Or Ty [DCTO] -> OrderType [DCTO]
               GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
               GC Branch/Plant [MCU] -> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               UNDEFINED <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               "0" -> UpdatedToHdrWF [EV20]
               UNDEFINED <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               GC Base Curr [CRDC] -> Currencycodeto [CRDC]
               UNDEFINED <> OrderPlacedOnHold [EV19]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> szTOEToBranchPlant [MCU2]
               UNDEFINED <> szTOELandedCostRule [PRP5]
               UNDEFINED <> mnTOEPONumber [DOC2]
               UNDEFINED <> szTOEPOOrderType [DCIN]
               GC Customer PO [VR01] -> szPONumber [VR01]
               UNDEFINED <> mnTOEPOExchangeRate [CRRD]
               UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
               UNDEFINED <> szOrderTempSoldTo [ORTP]
               UNDEFINED <> szOrderTempShipTo [ORTP]
               UNDEFINED <> cCurrencyConversionMethod [CRCM]
               UNDEFINED <> mnTr [MATH01]
               UNDEFINED <> mnTriangulationRateFrom [MATH01]
               UNDEFINED <> cShoppingCartMode [CART]
               VA frm_mnProcessID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID [TCID] <> mnTransactionID [TCID]
               UNDEFINED <> szLongAddressSoldTo [ALKY]
               UNDEFINED <> szLongAddressShipTo [ALKY]
               UNDEFINED <> mnDeliveredTo [DVAN]
               UNDEFINED <> szLongAddressDeliverTo [ALKY]
               UNDEFINED <> mnForwardedTo [FTAN]
               UNDEFINED <> szLongAddressForwardedTo [ALKY]
               UNDEFINED <> mnInvoicedTo [ITAN]
               UNDEFINED <> szLongAddressInvoicedTo [ALKY]
               UNDEFINED <> mnPaidBy [PBAN]
               UNDEFINED <> szLongAddressPaidBy [ALKY]
               UNDEFINED <> cAddressNumberForTax [AUFT]
               UNDEFINED <> cAddressNumberForTransport [AUFI]
               UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> szGlClass [GLC]
               UNDEFINED <> mnDescTaskNumber [DOCO]
               UNDEFINED <> szDescTaskType [DCTO]
               UNDEFINED <> cOPAllowBackorders [OPBA]
               UNDEFINED <> cOPAllowMultiSource [OPMS]
               UNDEFINED <> cOPAllowSubstitutes [OPSS]
               UNDEFINED <> cOPPartialShipLineItems [OPLL]
               UNDEFINED <> cIsOrderPromisingEnabled [EV01]
               UNDEFINED <> cIsOPChangedInHeader [EV01]
     Else
          Press Button(HC SO &Header Revision)
     End If
     // End SAR 4363554
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Find records
Event: Button Clicked
Event GUID: f57df5d0-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 8778061
Clear Selection(FC Grid)
// SAR 3616960, 6226705- Begin
If VA frm_cSoldToError_EV01 [EV01] is equal to "1"
Or VA frm_cShipToError_EV01 [EV01] is equal to "1"
Or VA frm_cItemNumberError_EV01 [EV01] is equal to "1"
     Suppress Find
     Stop Processing
End If
// SAR 3616960, 6226705 - End
//
//     Initialize all selection criterion fields before assigments.
//
FC LTTR-From Last Status [LTTR] = <NULL>
FC LTTR-Thru Last Status [LTTR] = <NULL>
FC NXTR-From Next Status [NXTR] = <NULL>
FC NXTR-Thru Next Status [NXTR] = <NULL>
FC DRQJ-From Req Date [DRQJ] = <NULL>
FC DRQJ-Thur Req Date [DRQJ] = <NULL>
FC DRQJ-Thur Req Date [DRQJ] = <NULL>
FC TRDJ-From Order Date [TRDJ] = <NULL>
FC TRDJ-Thru Order Date [TRDJ] = <NULL>
FC PDDJ-From Prom Ship [PDDJ] = <NULL>
FC PDDJ-Thru Prom Ship [PDDJ] = <NULL>
FC RSDJ-From Prom Deliv [RSDJ] = <NULL>
FC RSDJ-Thru Prom Deliv [RSDJ] = <NULL>
FC ADDJ-From Actual Shp [ADDJ] = <NULL>
FC ADDJ-Thru Actual Shp [ADDJ] = <NULL>
FC IVD-From Invoice Date [IVD] = <NULL>
FC IVD-Thru Invoice Date [IVD] = <NULL>
FC DGL-From G/L Date [DGL] = <NULL>
FC DGL-Thru G/L Date [DGL] = <NULL>
FC OPDJ-From Orig Prom [OPDJ] = <NULL>
FC OPDJ-Thru Orig Prom [OPDJ] = <NULL>
FC DOCZ-Prev Order Num [DOCZ] = <NULL>
FC DCT4-Prev Order Type [DCT4] = <NULL>
FC EKCO-Prev Order Co [EKCO] = <NULL>
//
//     Load status criteria to status filter fields.
//
If FC Last [STBOW] is equal to "1"
     FC LTTR-From Last Status [LTTR] = FC LTT2-From Status  (wf) [LTT2]
     FC LTTR-Thru Last Status [LTTR] = FC NXT2-Thru Status (wf) [NXT2]
Else
     FC NXTR-From Next Status [NXTR] = FC LTT2-From Status  (wf) [LTT2]
     FC NXTR-Thru Next Status [NXTR] = FC NXT2-Thru Status (wf) [NXT2]
End If
//
//     Load date criteria to date filter fields.
//
// Sar 5122120 Added a Null condition
If FC Requested [DTBOW] is equal to <Blank>
Or FC Requested [DTBOW] is equal to <NULL>
     FC DRQJ-From Req Date [DRQJ] = FC EFT-From Date (wf) [EFT]
     FC DRQJ-Thur Req Date [DRQJ] = FC EPDJ-Thur Date (wf) [EPDJ]
Else
     If FC Requested [DTBOW] is equal to "1"
          FC TRDJ-From Order Date [TRDJ] = FC EFT-From Date (wf) [EFT]
          FC TRDJ-Thru Order Date [TRDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
     Else
          If FC Requested [DTBOW] is equal to "2"
               FC PDDJ-From Prom Ship [PDDJ] = FC EFT-From Date (wf) [EFT]
               FC PDDJ-Thru Prom Ship [PDDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
          Else
               If FC Requested [DTBOW] is equal to "3"
                    FC OPDJ-From Orig Prom [OPDJ] = FC EFT-From Date (wf) [EFT]
                    FC OPDJ-Thru Orig Prom [OPDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
               Else
                    If FC Requested [DTBOW] is equal to "8"
                         FC RSDJ-From Prom Deliv [RSDJ] = FC EFT-From Date (wf) [EFT]
                         FC RSDJ-Thru Prom Deliv [RSDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
                    Else
                         If FC Requested [DTBOW] is equal to "4"
                              FC ADDJ-From Actual Shp [ADDJ] = FC EFT-From Date (wf) [EFT]
                              FC ADDJ-Thru Actual Shp [ADDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
                         End If
                    End If
               End If
          End If
     End If
End If
//
//     Had to break up this nested IF statement because tools seem to have

//     trouble with a nested structure of 6 or more.
//
If FC Requested [DTBOW] is equal to "5"
     FC IVD-From Invoice Date [IVD] = FC EFT-From Date (wf) [EFT]
     FC IVD-Thru Invoice Date [IVD] = FC EPDJ-Thur Date (wf) [EPDJ]
Else
     If FC Requested [DTBOW] is equal to "6"
          FC CNDJ-From Cancel Dte [CNDJ] = FC EFT-From Date (wf) [EFT]
          FC CNDJ-Thru Cancel Dte [CNDJ] = FC EPDJ-Thur Date (wf) [EPDJ]
     Else
          If FC Requested [DTBOW] is equal to "7"
               FC DGL-From G/L Date [DGL] = FC EFT-From Date (wf) [EFT]
               FC DGL-Thru G/L Date [DGL] = FC EPDJ-Thur Date (wf) [EPDJ]
          End If
     End If
End If
// Reinitialize the Grid Total variable
VA frm_Grid_Total_AAP [AAP] = "0"
VA frm_Foreign_Total_AM0 [AM0] = "0"
VA frm_First_Line_EV02 [EV02] = "1"
If PO cShoppingCartMode [CART] is equal to <Blank>
Or PO cShoppingCartMode [CART] is equal to <NULL>
     VA frm_Show_Total_EV01 [EV01] = "1"
Else
     VA frm_Show_Total_EV01 [EV01] = "0"
End If
//
// 7295657 - Replace Suppress Grid Row in Grid Record is Fetched with Set
// Selection to improve performance
//
// If the Store&Fwd processing option is on, then only display records that
// have so15 == '1'.
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Selection Append Flag(FC Grid,  <Yes>)
     Set Selection(FC Grid, "F4211", "SO15",  <Equal To>, "1",  <None>)
End If
//
// If the Store&Fwd processing option is off (blank), then only display
// records that have so15 == blank.
If PO cStoreAndForwardMode [SO15] is equal to <Blank>
Or PO cStoreAndForwardMode [SO15] is equal to <NULL>
     Set Selection Append Flag(FC Grid,  <Yes>)
     Set Selection(FC Grid, F4211, SO15,  <Not Equal To>, "1", <None>)
End If
// 8399896-  CSI Performance Imporvement SAR for Backorder/Cancelled Lines
//
Set Selection Append Flag(FC Grid,  <Yes>)
If SV Engine_Type is not equal to CO WINDOWS_ENGINE
     If PO cCSIDisplayBackorderOrCaneled [EV02] is not equal to "3"
          If PO cCSIDisplayBackorderOrCaneled [EV02] is equal to "1"
               Set Selection Group(FC Grid, "F4211", "SOQS",  <Not Equal To>,  <Zero>,  <And>)
               Set Selection Group(FC Grid, F4211, "SOCN", <Equal To>, <Zero>, <Or>)
               Set Selection Group(FC Grid, F4211, "SOBK", <Not Equal To>, <Zero>, <Or>)
          End If
          If PO cCSIDisplayBackorderOrCaneled [EV02] is equal to "2"
               Set Selection Group(FC Grid, "F4211", "SOQS",  <Not Equal To>,  <Zero>,  <And>)
               Set Selection Group(FC Grid, F4211, "SOBK", <Equal To>, <Zero>, <Or>)
               Set Selection Group(FC Grid, F4211, "SOCN", <Not Equal To>, <Zero>, <Or>)
          End If
          If PO cCSIDisplayBackorderOrCaneled [EV02] is equal to <Blank>
               Set Selection Group(FC Grid, "F4211", "SOQS",  <Not Equal To>,  <Zero>,  <And>)
               Set Selection Group(FC Grid, F4211, "SOBK", <Equal To>, <Zero>, <Or>)
               Set Selection Group(FC Grid, "F4211", "SOCN", <Equal To>, <Zero>, <And>)
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Add record
Event: Button Clicked
Event GUID: f57df5d1-a23a-11d0-a204-0000f6728a56
=============================================
If PO cHeaderOrDetailFirst [EV19] is equal to or empty <Blank>
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          UNDEFINED <> DocumentOrderInvoiceE [DOCO]
          UNDEFINED <> OrderType [DCTO]
          UNDEFINED <> CompanyKeyOrderNo [KCOO]
          FC Business Unit [MCU] <> Costcenter [MCU]
          UNDEFINED <> Addressnumber [AN8]
          UNDEFINED <> Addressnumbershipto [SHAN]
          UNDEFINED <> Datetransactionjulian [TRDJ]
          UNDEFINED <> Currencymode [CRRM]
          UNDEFINED <> Currencycodefrom [CRCD]
          UNDEFINED <> Currencyconverrateov [CRR]
          UNDEFINED <> Amountordergross [OTOT]
          UNDEFINED <> Amountforeignopen [FAP]
          "0" -> UpdatedToHdrWF [EV20]
          UNDEFINED <> Computerid [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          UNDEFINED <> Currencycodeto [CRDC]
          UNDEFINED <> OrderPlacedOnHold [EV19]
          UNDEFINED <> Advancedsalespricingyn [ADVP]
          UNDEFINED <> szTOEToBranchPlant [MCU2]
          UNDEFINED <> szTOELandedCostRule [PRP5]
          UNDEFINED <> mnTOEPONumber [DOC2]
          UNDEFINED <> szTOEPOOrderType [DCIN]
          UNDEFINED <> szPONumber [VR01]
          UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          UNDEFINED <> szOrderTempSoldTo [ORTP]
          UNDEFINED <> szOrderTempShipTo [ORTP]
          UNDEFINED <> cCurrencyConversionMethod [CRCM]
          UNDEFINED <> mnTr [MATH01]
          UNDEFINED <> mnTriangulationRateFrom [MATH01]
          UNDEFINED <> cShoppingCartMode [CART]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TCID]
          UNDEFINED <> szLongAddressSoldTo [ALKY]
          UNDEFINED <> szLongAddressShipTo [ALKY]
          UNDEFINED <> mnDeliveredTo [DVAN]
          UNDEFINED <> szLongAddressDeliverTo [ALKY]
          UNDEFINED <> mnForwardedTo [FTAN]
          UNDEFINED <> szLongAddressForwardedTo [ALKY]
          UNDEFINED <> mnInvoicedTo [ITAN]
          UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          UNDEFINED <> mnPaidBy [PBAN]
          UNDEFINED <> szLongAddressPaidBy [ALKY]
          UNDEFINED <> cAddressNumberForTax [AUFT]
          UNDEFINED <> cAddressNumberForTransport [AUFI]
          UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szGlClass [GLC]
          UNDEFINED <> mnDescTaskNumber [DOCO]
          UNDEFINED <> szDescTaskType [DCTO]
          UNDEFINED <> cOPAllowBackorders [OPBA]
          UNDEFINED <> cOPAllowMultiSource [OPMS]
          UNDEFINED <> cOPAllowSubstitutes [OPSS]
          UNDEFINED <> cOPPartialShipLineItems [OPLL]
          UNDEFINED <> cIsOrderPromisingEnabled [EV01]
          UNDEFINED <> cIsOPChangedInHeader [EV01]
Else
     // Begin SAR 4363554
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
               UNDEFINED <> DocumentOrderInvoiceE [DOCO]
               UNDEFINED <> OrderType [DCTO]
               UNDEFINED <> CompanyKeyOrderNo [KCOO]
               FC Business Unit [MCU] <> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               UNDEFINED <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               "0" -> UpdatedToHdrWF [EV20]
               UNDEFINED <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               UNDEFINED <> Currencycodeto [CRDC]
               UNDEFINED <> OrderPlacedOnHold [EV19]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> szTOEToBranchPlant [MCU2]
               UNDEFINED <> szTOELandedCostRule [PRP5]
               UNDEFINED <> mnTOEPONumber [DOC2]
               UNDEFINED <> szTOEPOOrderType [DCIN]
               UNDEFINED <> szPONumber [VR01]
               UNDEFINED <> mnTOEPOExchangeRate [CRRD]
               UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
               UNDEFINED <> szOrderTempSoldTo [ORTP]
               UNDEFINED <> szOrderTempShipTo [ORTP]
               UNDEFINED <> cCurrencyConversionMethod [CRCM]
               UNDEFINED <> mnTr [MATH01]
               UNDEFINED <> mnTriangulationRateFrom [MATH01]
               UNDEFINED <> cShoppingCartMode [CART]
               UNDEFINED <> mnProcessID [PEID]
               UNDEFINED <> mnTransactionID [TCID]
               UNDEFINED <> szLongAddressSoldTo [ALKY]
               UNDEFINED <> szLongAddressShipTo [ALKY]
               UNDEFINED <> mnDeliveredTo [DVAN]
               UNDEFINED <> szLongAddressDeliverTo [ALKY]
               UNDEFINED <> mnForwardedTo [FTAN]
               UNDEFINED <> szLongAddressForwardedTo [ALKY]
               UNDEFINED <> mnInvoicedTo [ITAN]
               UNDEFINED <> szLongAddressInvoicedTo [ALKY]
               UNDEFINED <> mnPaidBy [PBAN]
               UNDEFINED <> szLongAddressPaidBy [ALKY]
               UNDEFINED <> cAddressNumberForTax [AUFT]
               UNDEFINED <> cAddressNumberForTransport [AUFI]
               UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> szGlClass [GLC]
               UNDEFINED <> mnDescTaskNumber [DOCO]
               UNDEFINED <> szDescTaskType [DCTO]
               UNDEFINED <> cOPAllowBackorders [OPBA]
               UNDEFINED <> cOPAllowMultiSource [OPMS]
               UNDEFINED <> cOPAllowSubstitutes [OPSS]
               UNDEFINED <> cOPPartialShipLineItems [OPLL]
               UNDEFINED <> cIsOrderPromisingEnabled [EV01]
               UNDEFINED <> cIsOPChangedInHeader [EV01]
     Else
          Call App:P4210 Form:W4210G Version:VA frm_szVersion_VERS
               UNDEFINED <> Documentorderinvoicee [DOCO]
               UNDEFINED <> Ordertype [DCTO]
               UNDEFINED <> Companykeyorderno [KCOO]
               UNDEFINED <> Everesteventpoint01 [EV01]
               UNDEFINED <> UpdatedToHdrWF [EV20]
               FC Business Unit [MCU] <> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               UNDEFINED <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               UNDEFINED <> Currencycodeto [CRDC]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> Pricingbasedondate [CP01]
               UNDEFINED <> Priceretrievaluom [UMB1]
               UNDEFINED <> Processuomconversions [BUMC]
               UNDEFINED <> OrderSuffix [SFXO]
               UNDEFINED <> Deliveryinstructline1 [DEL1]
               UNDEFINED <> Deliveryinstructline2 [DEL2]
               UNDEFINED <> Priceadjusmentschedulen [ASN]
               UNDEFINED <> Discounttrade [TRDC]
               UNDEFINED <> Carrier [CARS]
               UNDEFINED <> Routecode [ROUT]
               UNDEFINED <> Stopcode [STOP]
               UNDEFINED <> Zonenumber [ZON]
               UNDEFINED <> Freighthandlingcode [FRTH]
               UNDEFINED <> Applyfreightyn [AFT]
               UNDEFINED <> Commissioncode1 [CMC1]
               UNDEFINED <> Ratecommission1 [CMR1]
               UNDEFINED <> Commissioncode2 [CMC2]
               UNDEFINED <> Ratecommission2 [CMR2]
               UNDEFINED <> Authorizationnocredit [AUTN]
               UNDEFINED <> Acctnocrbank [CACT]
               UNDEFINED <> Dateexpired [CEXP]
               UNDEFINED <> Paymenttermscode01 [PTC]
               UNDEFINED <> Paymentinstrumenta [RYIN]
               UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
               UNDEFINED <> Unitofmeasurevoldisp [VUMD]
     End If
     // End SAR 4363554
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Copy record
Event: Button Clicked
Event GUID: f57df5d7-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 31045001 Begin
If GC Hd Cd [HOLD] is not equal to <Blank>
     Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC HdCd, "2585")
     Stop Processing
Else
     // SAR 3530912 - Begin/End CHANGE
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
          GC Branch/Plant [MCU] -> Costcenter [MCU]
          UNDEFINED <> Addressnumber [AN8]
          UNDEFINED <> Addressnumbershipto [SHAN]
          UNDEFINED <> Datetransactionjulian [TRDJ]
          UNDEFINED <> Currencymode [CRRM]
          UNDEFINED <> Currencycodefrom [CRCD]
          UNDEFINED <> Currencyconverrateov [CRR]
          UNDEFINED <> Amountordergross [OTOT]
          UNDEFINED <> Amountforeignopen [FAP]
          "0" -> UpdatedToHdrWF [EV20]
          UNDEFINED <> Computerid [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          GC Base Curr [CRDC] -> Currencycodeto [CRDC]
          UNDEFINED <> OrderPlacedOnHold [EV19]
          UNDEFINED <> Advancedsalespricingyn [ADVP]
          UNDEFINED <> szTOEToBranchPlant [MCU2]
          UNDEFINED <> szTOELandedCostRule [PRP5]
          UNDEFINED <> mnTOEPONumber [DOC2]
          UNDEFINED <> szTOEPOOrderType [DCIN]
          GC Customer PO [VR01] -> szPONumber [VR01]
          UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          UNDEFINED <> szOrderTempSoldTo [ORTP]
          UNDEFINED <> szOrderTempShipTo [ORTP]
          UNDEFINED <> cCurrencyConversionMethod [CRCM]
          UNDEFINED <> mnTr [MATH01]
          UNDEFINED <> mnTriangulationRateFrom [MATH01]
          UNDEFINED <> cShoppingCartMode [CART]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TCID]
          UNDEFINED <> szLongAddressSoldTo [ALKY]
          UNDEFINED <> szLongAddressShipTo [ALKY]
          UNDEFINED <> mnDeliveredTo [DVAN]
          UNDEFINED <> szLongAddressDeliverTo [ALKY]
          UNDEFINED <> mnForwardedTo [FTAN]
          UNDEFINED <> szLongAddressForwardedTo [ALKY]
          UNDEFINED <> mnInvoicedTo [ITAN]
          UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          UNDEFINED <> mnPaidBy [PBAN]
          UNDEFINED <> szLongAddressPaidBy [ALKY]
          UNDEFINED <> cAddressNumberForTax [AUFT]
          UNDEFINED <> cAddressNumberForTransport [AUFI]
          UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szGlClass [GLC]
          UNDEFINED <> mnDescTaskNumber [DOCO]
          UNDEFINED <> szDescTaskType [DCTO]
          UNDEFINED <> cOPAllowBackorders [OPBA]
          UNDEFINED <> cOPAllowMultiSource [OPMS]
          UNDEFINED <> cOPAllowSubstitutes [OPSS]
          UNDEFINED <> cOPPartialShipLineItems [OPLL]
          UNDEFINED <> cIsOrderPromisingEnabled [EV01]
          UNDEFINED <> cIsOPChangedInHeader [EV01]
End If
// SAR 31045001 End


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Rebate History
Event: Button Clicked
Event GUID: 49e273d1-51a1-11d2-af4f-0000f678371d
=============================================
Call App:P4078 Form:W4078A Version: 
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> mnIdentifierShortItem [ITM]
     UNDEFINED <> szPriceAdjustmentType [AST]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> jdDateEffectiveJulian1 [EFTJ]
     UNDEFINED <> jdDateExpiredJulian1 [EXDJ]
     UNDEFINED <> mnItem_Group_Key_ID_F4078 [IGID]
     UNDEFINED <> mnCustomer_Group_Key_ID_F4 [CGID]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Regional Information
Event: Button Clicked
Event GUID: e56200b0-cca4-4afd-ae74-f8c106b8ad14
=============================================
// SAR 5480568
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     UNDEFINED <> szCompany [CO]
     UNDEFINED <> szCountry [CTR]
     UNDEFINED <> szCallingAppl [PID]
     UNDEFINED <> szCallingForm [FID]
     "XI3" -> szFormAction [FATN]
     UNDEFINED <> szCallingVers [VERS]
     UNDEFINED <> szComputerID [CTID]
     UNDEFINED <> mnJobnumberA [JOBS]
     UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
     UNDEFINED <> szOrderType [DCTO]
     UNDEFINED <> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cNewRecords [EV01]
     UNDEFINED <> cTableCache [EV02]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Order Header Browse
Event: Button Clicked
Event GUID: f57df5d2-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4210 Form:W4210H Version:VA frm_szVersion_VERS
     FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> OrderType [DCTO]
     FC KCOO-Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> Originalposonumber [OORN]
     UNDEFINED <> Originalordertype [OCTO]
     UNDEFINED <> Companykeyoriginal [OKCO]
     FC Business Unit [MCU] -> Costcenter [MCU]
     UNDEFINED <> Reference1 [VR01]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Credit Check Inquiry
Event: Button Clicked
Event GUID: f57e0732-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P42050 Form:W42050B Version:PO szP42050Vers [Modeless]
     GC Sold To [AN8] -> AddressNumber [AN8]
     GC Order Co [KCOO] -> CompanyNumber [KCOO]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Address Book Information
Event: Button Clicked
Event GUID: f57e0733-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P01012 Form:W01012B Version:ZJDE0001
     GC Sold To [AN8] <> mnAddressNumber [AN8]
     UNDEFINED <> szAddressType1 [AT1]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sold To Customer Master
Event: Button Clicked
Event GUID: f57e0734-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 2905381 
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany_CO [CO] = GC Order Co [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     GC Sold To [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     GC Sold To [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Ship To Customer Master
Event: Button Clicked
Event GUID: f57e0737-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 2905381
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany_CO [CO] = GC Order Co [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     GC Ship To [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     GC Ship To [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Last Customer Shipment
Event: Button Clicked
Event GUID: 1a15e4f2-286f-4b2c-af83-1f59191e5e1a
=============================================
// 
// SAR 5397086
// 
Call App:P4239 Form:W4239A Version: 
     GC Ship To [SHAN] -> mnAddressNumberShipTo [SHAN]
     GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Item Summary Availability
Event: Button Clicked
Event GUID: f57e0731-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P41202 Form:W41202A Version:ZJDE0001
     GC Short Item No [ITM] -> Identifiershortitem [ITM]
     GC Branch/Plant [MCU] -> Costcenter [MCU]
     GC Sold To [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> mnUnitsTransactionQty [UORG]
     UNDEFINED <> jdDateTransactionJulian [TRDJ]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Display configuration of the selected row.
Event: Button Clicked
Event GUID: 5ef15cdc-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cStockingType [STKT]
evt_ConfigIDNumber_CFGID [CFGID]
----------------------------------------
// SAR 5810854      AK7095647     03/06/03
// 
// This event is only functional for items with a stock type of 'C' for
// configured items.  For each grid row selected, the Multi-Level Product Histor
// form is displayed from P3298.
// 
GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     GC Branch/Plant [MCU] -> szBranch [MCU]
     GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     VA evt_cStockingType [STKT] <- cStockingType [STKT]
     UNDEFINED <> cIssueTypeCode [ITC]
     UNDEFINED <> cPlanningCode [MPST]
     UNDEFINED <> mnPlanningFence [MTF1]
     UNDEFINED <> mnFreezeFence [MTF2]
     UNDEFINED <> mnMessageDisplayFence [MTF3]
     UNDEFINED <> mnTimeFence [MTF4]
     UNDEFINED <> cPlanningFenceRule [MPSP]
     UNDEFINED <> cFixedVariableLeadtime [MRPP]
     UNDEFINED <> mnLeadtimeLevel [LTLV]
     UNDEFINED <> mnLeadtimeMfg [LTMF]
     UNDEFINED <> mnLeadtimeCumulative [LTCM]
     UNDEFINED <> mnLeadtimePerUnit [LTPU]
     UNDEFINED <> mnMFGLeadtimeQty [MLQ]
     UNDEFINED <> mnShrinkFactor [SRNK]
     UNDEFINED <> cShrinkFactorMethod [SRKF]
     UNDEFINED <> cOrderPolicyCode [OPC]
     UNDEFINED <> mnOrderPolicyValue [OPV]
     UNDEFINED <> mnAccountingCostQuantity [ACQ]
     UNDEFINED <> cTimeBasisCode [TIMB]
     UNDEFINED <> mnMoveHours [MOVD]
     UNDEFINED <> mnQueueHours [QUED]
     UNDEFINED <> mnStandardSetupHours [SETL]
     UNDEFINED <> cErrorIndicator [ERRC]
     UNDEFINED <> mnPlannerNumber [ANPL]
     UNDEFINED <> mnLowLevelCode [LLX]
     <Blank> -> cSuppressErrorMessage [EV01]
     FC DTAI-Error Msg ID [DTAI] <- szErrorMessageID [DTAI]
     UNDEFINED <> cNetChangeFlag [MRPC]
     UNDEFINED <> idF4102Pointer [GENLNG]
     UNDEFINED <> szLineType [LNTY]
     UNDEFINED <> mnSafetyStock [SAFE]
     UNDEFINED <> cLotStatusCode [LOTS]
     UNDEFINED <> cAbcCode [ABCS]
     UNDEFINED <> cAllocateByLot [CMGL]
     UNDEFINED <> szMasterPlanning [PRP5]
     UNDEFINED <> mnBuyer [BUYR]
     UNDEFINED <> cPotencyControl [OT1Y]
     UNDEFINED <> mnStandardPotency [STDP]
     UNDEFINED <> cLotExpDateCalcMeth [LECM]
     UNDEFINED <> cActiveIngredientFlag [AING]
     UNDEFINED <> cCrossDockFlagYN [XDCK]
// 
// Display error if the item/branch record was not found.
// 
If FC DTAI-Error Msg ID [DTAI] is not equal to <Blank>
     Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC 2nd ItemNumber, FC DTAI-Error Msg ID)
Else
     // 
     // If the stocking type is not 'C' configured then set an error.
     // 
     If VA evt_cStockingType [STKT] is not equal to "C"
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC 2nd ItemNumber, "4790")
     Else
          // 
          // Display the Multi-Level Item Segments
          // 
          // SAR 5810854 begin
          GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
               "42" -> szSystemCode [SY]
               GC Order Number [DOCO] -> mnOrderNumber [DOCO]
               GC Or Ty [DCTO] -> szOrderType [DCTO]
               GC Order Co [KCOO] -> szCompanyKey [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GC Ord Suf [SFXO] -> szOrderSuffix [SFXO]
               "1" -> cSuppressErrorMessage [SUPPS]
               UNDEFINED <> szErrorMessageID [DTAI]
               VA evt_ConfigIDNumber_CFGID [CFGID] <- mnConfigurationIDNumber [CFGID]
               UNDEFINED <> mnComponentIDNumber [CFGCID]
               UNDEFINED <> szProgramId [PID]
          ! Call App:P3298 Form:W3298A Version: 
          !      GC Order Co [KCOO] Could not find member in DSTR
          !      GC Order Number [DOCO] Could not find member in DSTR
          !      GC Or Ty [DCTO] Could not find member in DSTR
          !      GC Line Number [LNID] Could not find member in DSTR
          !      GC Branch/Plant [MCU] Could not find member in DSTR
          !      GC Short Item No [ITM] Could not find member in DSTR
          !      UNDEFINED Could not find member in DSTR
          !      "2" Could not find member in DSTR
          !      UNDEFINED Could not find member in DSTR
          !      UNDEFINED Could not find member in DSTR
          !      UNDEFINED Could not find member in DSTR
          Call App:P32983 Form:W32983B Version:Undefined
               VA evt_ConfigIDNumber_CFGID [CFGID] -> mnConfigurationIDNumber [CFGID]
               UNDEFINED <> mnComponentIDNumber [CFGCID]
               UNDEFINED <> mnParentSegmentNumber [PEL]
               UNDEFINED <> szSegmentValue [SGVL]
               UNDEFINED <> mnItemNumberShortKit [KIT]
               UNDEFINED <> szUniqueConfigurationID [CFGSID]
          // SAR 5810854 end
     End If
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Picture of Item
Event: Button Clicked
Event GUID: f57df766-a23a-11d0-a204-0000f6728a56
=============================================
Media Object Structures(GT4101, <Default Media Object>, <Edit>, <First Text Item>, FC EV09-Gen Text Row, GC ShortItem No)
If FC EV09-Gen Text Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Substitute/Complimentary/Replacement Item Window
Event: Button Clicked
Event GUID: 5ef15ce2-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_StoreLNTY [LNTY]
----------------------------------------
// 
//      SAR # 1028831
//      Check for Substitute Items by calling Business Function N4201100
// 
// 
//      Retrieve Units of Measure and Line Type for the Item
// 
Call App:P42260 Form:W42260A Version:  [Modeless]
     PO szSubstituteItemXRef [XRT] -> szSubstXRefType [XRT]
     GC Sold To [AN8] -> mnAddressNumberSoldTo [AN8]
     GC Branch/Plant [MCU] -> szBranchPlant [MCU]
     GC Description 1 [DSC1] -> szDescriptionLine2 [DSC2]
     GC Price UOM [UOM4] -> szUnitofMeasurePricing [UOM4]
     GC Quantity  [QT2] -> mnQuantity [SOBK]
     GC UOM [UOM] -> szUnitofMeasureasInput [UOM]
     GC Request Date [DRQJ] -> jdTransactionDate [TRDJ]
     "1" -> cSubstituteIndicator [SO05]
     GC Ship To [SHAN] -> mnAddressNumberShipTo [SHAN]
     <Blank> -> cModusOperandi [MODE]
     <Blank> -> cReplacement [RPL]
     PO cUseSubsItemPrice [EV15] -> cPriceSource [PSRC]
     FC Business Unit [MCU] -> szCostCenterHeader [EMCU]
     SL CurrencyProcessing -> cCurrencyMode [CRRM]
     VA frm_Currency_Code_To_CRDC [CRDC] -> szCurrencyCodeTo [CRDC]
     GC Exchange Rate [CRR] -> mnExchangeRate [CRR]
     GC Unit Price [UPRC] -> mnOriginalItemPrice [UPRC]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
     GC Description Line 2 [DSC2] -> szDescriptionLine1 [DSC1]
     UNDEFINED <> mnAmountSellingPrice [SPRC]
     UNDEFINED <> cErrorCode [ERRC]
     UNDEFINED <> szErrorMsgNumber [ERNO]
     UNDEFINED <> mnNumberofCacheEntries [RRN]
     UNDEFINED <> szComplXRefType [XRT2]
     UNDEFINED <> szReplXRefType [XRTC]
     GC Ln Ty [LNTY] -> szLineType [LNTY]
     UNDEFINED <> cDisableOrHidePrice [EV01]
     UNDEFINED <> szComputerID [CTID]
     UNDEFINED <> szWorkStationId [JOBN]
     UNDEFINED <> mnLineNumberXREF [LNIX]
     UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
     UNDEFINED <> szOrderType [DCTO]
     UNDEFINED <> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> szPriceAdjustmentScheduleN [ASN]
     UNDEFINED <> szPricingCategoryLevel1 [CLVL]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TCID]
     UNDEFINED <> jdDateEffectiveJulian1 [EFTJ]
     UNDEFINED <> szVersion [VERS]
     UNDEFINED <> mnOverrideBasePrice [OVBPRC]
     UNDEFINED <> mnUnitsTransactionQty [UORG]
     UNDEFINED <> mnJobnumberA [JOBS]
     UNDEFINED <> szItemNoUnknownFormat [UITM]
     UNDEFINED <> mnOrigItemSOEUnitPrice [UPRC]
     UNDEFINED <> szListPriceUOM [APUM]
// 
//      End of additions for Get Substitute/Complementary/Replacement
//      Items - BF N4201100
// 


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Supply and Demand Inquiry
Event: Button Clicked
Event GUID: f57e0bcb-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_PrimaryItemNumber_UITM [UITM]
----------------------------------------
If PO szP4021Vers [VL02] is equal to or empty <Blank>
Or PO szP4021Vers [VL02] is equal to or empty <NULL>
     PO szP4021Vers [VL02] = "ZJDE0001"
End If
// 
// SAR 4986381- Retrieve the Primary Item number and pass it in call to P4021
// instead of 2nd Item Number
ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
     GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     GC 2nd Item Number [LITM] -> sz2ndItemNumber [LITM]
     GC 3rd Item Number [AITM] -> sz3rdItemNumber [AITM]
     UNDEFINED <> cSymbolShortItem [SYM1]
     UNDEFINED <> cSymbol2ndItem [SYM2]
     UNDEFINED <> cSymbol3rdItem [SYM3]
     GC Branch/Plant [MCU] -> szBranchPlant [MCU]
     VA evt_PrimaryItemNumber_UITM [UITM] <- szPrimaryItemNumber [UITM]
     UNDEFINED <> cSymbolidentifier [SYMID]
     UNDEFINED <> cErrorCode [ERRC]
     "1" -> cSuppressErrorMsg [EV01]
     UNDEFINED <> szErrorMsgID [DTAI]
     UNDEFINED <> idPtrToF41001Record [GENLNG]
     UNDEFINED <> szTemplate [TMPL]
     UNDEFINED <> szSegment1 [SEG1]
     UNDEFINED <> szSegment2 [SEG2]
     UNDEFINED <> szSegment3 [SEG3]
     UNDEFINED <> szSegment4 [SEG4]
     UNDEFINED <> szSegment5 [SEG5]
     UNDEFINED <> szSegment6 [SEG6]
     UNDEFINED <> szSegment7 [SEG7]
     UNDEFINED <> szSegment8 [SEG8]
     UNDEFINED <> szSegment9 [SEG9]
     UNDEFINED <> szSegment10 [SEG0]
     UNDEFINED <> cMatrixControlled [MIC]
     UNDEFINED <> cSymToIdentSegItem [SYM6]
     UNDEFINED <> cSegmentSeparator [SEPS]
// 
! Call App:P4021 Form:W4021A Version:PO szP4021Vers
!      GC Branch/Plant [MCU] -> InputBranch [MCU]
!      UNDEFINED <> InputUOM [UOM]
!      UNDEFINED <> InputMenuflag [EV01]
!      UNDEFINED <> InputRequestQty [TRQT]
!      VA evt_PrimaryItemNumber_UITM [UITM] -> InputPrimaryItem [UITM]
!      GC Scheduled Pick [PDDJ] -> Promiseddate [PDDJ]
!      UNDEFINED <> mnAddressNumber [AN8]
// Begin SAR 5077314 - Passing in the GC UOM
Call App:P4021 Form:W4021B Version:PO szP4021Vers
     GC Branch/Plant [MCU] -> InputBranch [MCU]
     GC UOM [UOM] -> InputUOM [UOM]
     UNDEFINED <> InputMenuflag [EV01]
     UNDEFINED <> InputRequestQty [TRQT]
     VA evt_PrimaryItemNumber_UITM [UITM] -> InputPrimaryItem [UITM]
     GC Scheduled Pick [PDDJ] -> Promiseddate [PDDJ]
     UNDEFINED <> mnAddressNumber [AN8]
// End SAR 5077314


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Item Cross Reference
Event: Button Clicked
Event GUID: f57e0736-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4104 Form:W4104A Version: 
     GC Short Item No [ITM] -> IdentifierShortItem [ITM]
     UNDEFINED <> TypeCrossReferTypeC [XRT]
     GC Sold To [AN8] -> AddressNumber [AN8]
     UNDEFINED <> ItemNoCustomerVendor [CITM]
     GC Order Date [TRDJ] -> DateExpiredJulian1 [EXDJ]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Exit to Revision History
Event: Button Clicked
Event GUID: f2c211b6-5ce4-476d-a2a1-c8a941ed4eb9
=============================================
// 
// Exit to Revision History
// 
Call App:P42420 Form:W42420B Version: 
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Rev Nbr [CORD] -> mnNumberChangeOrder [CORD]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Order Header Revision
Event: Button Clicked
Event GUID: f57df5d6-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4210 Form:W4210G Version:VA frm_szVersion_VERS
     GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Everesteventpoint01 [EV01]
     UNDEFINED <> UpdatedToHdrWF [EV20]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> Addressnumber [AN8]
     UNDEFINED <> Addressnumbershipto [SHAN]
     UNDEFINED <> Datetransactionjulian [TRDJ]
     UNDEFINED <> Currencymode [CRRM]
     UNDEFINED <> Currencycodefrom [CRCD]
     UNDEFINED <> Currencyconverrateov [CRR]
     UNDEFINED <> Amountordergross [OTOT]
     UNDEFINED <> Amountforeignopen [FAP]
     UNDEFINED <> Computerid [CTID]
     UNDEFINED <> Jobnumber [JOBS]
     UNDEFINED <> Currencycodeto [CRDC]
     UNDEFINED <> Advancedsalespricingyn [ADVP]
     UNDEFINED <> Pricingbasedondate [CP01]
     UNDEFINED <> Priceretrievaluom [UMB1]
     UNDEFINED <> Processuomconversions [BUMC]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> Deliveryinstructline1 [DEL1]
     UNDEFINED <> Deliveryinstructline2 [DEL2]
     UNDEFINED <> Priceadjusmentschedulen [ASN]
     UNDEFINED <> Discounttrade [TRDC]
     UNDEFINED <> Carrier [CARS]
     UNDEFINED <> Routecode [ROUT]
     UNDEFINED <> Stopcode [STOP]
     UNDEFINED <> Zonenumber [ZON]
     UNDEFINED <> Freighthandlingcode [FRTH]
     UNDEFINED <> Applyfreightyn [AFT]
     UNDEFINED <> Commissioncode1 [CMC1]
     UNDEFINED <> Ratecommission1 [CMR1]
     UNDEFINED <> Commissioncode2 [CMC2]
     UNDEFINED <> Ratecommission2 [CMR2]
     UNDEFINED <> Authorizationnocredit [AUTN]
     UNDEFINED <> Acctnocrbank [CACT]
     UNDEFINED <> Dateexpired [CEXP]
     UNDEFINED <> Paymenttermscode01 [PTC]
     UNDEFINED <> Paymentinstrumenta [RYIN]
     UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
     UNDEFINED <> Unitofmeasurevoldisp [VUMD]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Order Detail Revision
Event: Button Clicked
Event GUID: f57df5d8-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 8141115 - Passed the GC B/P to the Cost Centre
Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Branch/Plant [MCU] -> Costcenter [MCU]
     GC Base Curr [CRDC] -> Currencycodeto [CRDC]
     GC Customer PO [VR01] <> szPONumber [VR01]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Detail Dates
Event: Button Clicked
Event GUID: f57df5d5-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P42045 Form:W42045G Version:  [Modeless]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Line Number [LNID] -> LineNumber [LNID]
     UNDEFINED <> Mode [MODE]
     UNDEFINED <> Timeofday [TDAY]
     UNDEFINED <> Dateupdated [UPMJ]
     UNDEFINED <> Filename [FILE]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Detail Address Numbers
Event: Button Clicked
Event GUID: f57df5d4-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P42045 Form:W42045F Version:  [Modeless]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Line Number [LNID] -> LineNumber [LNID]
     UNDEFINED <> Timeofday [TDAY]
     UNDEFINED <> Dateupdated [UPMJ]
     UNDEFINED <> Mode [MODE]
     UNDEFINED <> Filename [FILE]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Work Order Revisions
Event: Button Clicked
Event GUID: 5ef15ce1-e064-11d1-9ac9-00600832fe19
=============================================
F4211.FetchSingle  [Index 1: Order Number, Order Type, +A]
     GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
     GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     GC Or Ty [DCTO] = TK Order Type [DCTO]
     GC Line Number [LNID] = TK Line Number [LNID]
     VA frm_RORN_Related_Order_Number [RORN] <- TK Related PO/SO/WO Number [RORN]
ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
     VA frm_RORN_Related_Order_Number [RORN] -> szGenericString [DSC1]
     VA frm_DOCO_Related_Order_Number [DOCO] <- mnNumericValue [ITM]
     UNDEFINED <> cErrorCode [ERRC]
// SAR 8966780
If PO szP4801Vers [VL11] is equal to <Blank>
Or PO szP4801Vers [VL11] is equal to <NULL>
     PO szP4801Vers [VL11] = "ZJDE0001"
End If
//
Call App:P48013 Form:W48013J Version:PO szP4801Vers
     VA frm_DOCO_Related_Order_Number [DOCO] -> DocumentOrderInvoiceE [DOCO]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Order Address Window
Event: Button Clicked
Event GUID: f57df5db-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 4294034 - pass transaction date to P4006
If GC Order Date [TRDJ] is equal to Null Date
     VA frm_jdOrderDate_TRDJ [TRDJ] = date_today()
Else
     VA frm_jdOrderDate_TRDJ [TRDJ] = GC Order Date [TRDJ]
End If
// 
// SAR 8354276 - Cache P4210 & P03013 Version for P4006
// to retrieve Address Book (P01012) Processing Options
// 
// Intialize the Cache
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "1" -> cActionCode [ACTN]
// 
// Add P4210 & P03013 Versions to Cache 
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "2" -> cActionCode [ACTN]
     PO szP03013Vers [VL17] -> szP03013Version [VERS]
     "EP4210" -> szCallingProgramId [PID]
// 
// 8373995 - called in MODAL form
Call App:P4006 Form:W4006B Version:Undefined
     GC Sold To [AN8] <> AddressNumber [AN8]
     GC Ship To [SHAN] <> ShipToNumber [SHAN]
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> OrderCompany [KCOO]
     "S" <> CalledFromSales_S_OrPurch_P [EV01]
     PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
     VA frm_jdOrderDate_TRDJ [TRDJ] -> jdDateTransactionJulian [TRDJ]
     GC Deliver To [DVAN] -> mnDeliverToNumber [DVAN]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Additional Sales Detail Information
Event: Button Clicked
Event GUID: f57df5d3-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P42045 Form:W42045A Version:  [Modeless]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Line Number [LNID] -> LineNumber [LNID]
     UNDEFINED <> cCurrencyMode [CRRM]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Sales Ledger Inquiry
Event: Button Clicked
Event GUID: f57e0735-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 5959552 - Begin
If PO szSupplierMasterVers [VL09] is equal to <Blank>
Or PO szSupplierMasterVers [VL09] is equal to <NULL>
     PO szSupplierMasterVers [VL09] = "ZJDE0001"
End If
// SAR 5959552 - End
Call App:P42025 Form:W42025A Version:PO szSupplierMasterVers
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> LineNumber [LNID]
     UNDEFINED <> DateUpdated [UPMJ]
     UNDEFINED <> TimeOfDay [TDAY]
     <Blank> -> cCalledFromSOE01 [EV01]
     UNDEFINED <> szComputerID [CTID]
     UNDEFINED <> mnJobnumberA [JOBS]
     UNDEFINED <> mnLastLineNumberUsed [LNIX]
     UNDEFINED <> cUseCacheorWF [EV22]
     UNDEFINED <> mnAddressNumber [AN8]
     UNDEFINED <> mnAddressNumberShipTo [SHAN]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> szCurrencyCodeFrom [CRCD]
     UNDEFINED <> mnCurrencyConverRateOv [CRR]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Online Sales Invoice Inquiry
Event: Button Clicked
Event GUID: f57df5da-a23a-11d0-a204-0000f6728a56
=============================================
If PO szP42230Vers [VL05] is equal to or empty <Blank>
Or PO szP42230Vers [VL05] is equal to or empty <NULL>
     PO szP42230Vers [VL05] = "ZJDE0001"
End If
Call App:P42230 Form:W42230A Version:PO szP42230Vers
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Document Number [DOC] -> Docvoucherinvoicee [DOC]
     GC Doc Ty [DCT] -> Documenttype [DCT]
     GC Doc Co [KCO] -> Companykey [KCO]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> mnLineNumber [LNID]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Order Header Attachment
Event: Button Clicked
Event GUID: 9093393e-a23d-11d0-a204-0000f6728a56
=============================================
FC EV09-Gen Text Row [EV09] = <Blank>
Media Object Structures(GT4201A, <Default Media Object>, <Edit>, <First Text Item>, FC EV09-Gen Text Row, GC OrderNumber, GC OrTy, GC OrderCo)
If FC EV09-Gen Text Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
Else
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <No>)
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Order Detail Attachment
Event: Button Clicked
Event GUID: f57df5dc-a23a-11d0-a204-0000f6728a56
=============================================
FC EV09-Gen Text Row [EV09] = <NULL>
Media Object Structures(GT4211A, <Default Media Object>, <Edit>, <First Text Item>, FC EV09-Gen Text Row, GC OrderNumber, GC OrTy, GC OrderCo, GC LineNumber)
If FC EV09-Gen Text Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
Else
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <No>)
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Ship and Debit
Event: Button Clicked
Event GUID: 1447f104-75d4-11d3-a1e9-00105a1bfecd
=============================================
Call App:P4575 Form:W4575B Version:CZ4575
     UNDEFINED <> cTargetApplication [PA04]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Ord Suf [SFXO] -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     UNDEFINED <> mnSequenceNumber [OSEQ]
     GC Sold To [AN8] -> mnSoldToCustomerNumber [AN8]
     GC 2nd Item Number [LITM] -> sz2ndItemNumber [UITM]
     GC Unit Cost [UNCS] -> mnAmountUnitCostEntered [CSAX]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Pricing History Window
Event: Button Clicked
Event GUID: 90933f10-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSalesOrderFlag09 [SO09]
evt_szPaymentResponsibiCode [PRC]
----------------------------------------
If PO szChkPriceAvailnqVers [VL07] is equal to or empty <Blank>
Or PO szChkPriceAvailnqVers [VL07] is equal to or empty <NULL>
     PO szChkPriceAvailnqVers [VL07] = "ZJDE0001"
End If
If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to or empty <Blank>
     GetDistributionConstants(B4000530.GetDistributionConstants)
          UNDEFINED <> cUoMConversionByBranch [BUMC]
          UNDEFINED <> cSupplementalDataByBranch [BSDB]
          UNDEFINED <> cAllowDuplicateLots [ULOT]
          UNDEFINED <> cUpdateAverageCost [AVGC]
          VA frm_ADVP_cAdv_Pricing [ADVP] <- cAdvancedSalesPricing [ADVP]
          UNDEFINED <> cSalesPriceRetrievalUoM [UMB1]
          UNDEFINED <> cSalesPriceBasedOnDate [CP01]
          UNDEFINED <> cSymbolToIdentifyVariable [CP02]
          UNDEFINED <> cSymbolToIdentifyUoM [CP03]
          UNDEFINED <> cSymbolToIdentifyCurrency [CP04]
          UNDEFINED <> cSymbolToIdentifyColumn [CP05]
          UNDEFINED <> cPurchasePriceRetrivalUOM [CP06]
          UNDEFINED <> cSystemConstants07 [CP07]
          UNDEFINED <> cSystemConstants08 [CP08]
          UNDEFINED <> cSystemConstants09 [CP09]
          UNDEFINED <> cSystemConstantsCode10 [CP10]
          UNDEFINED <> cControlCodeECS [CCTL]
          UNDEFINED <> cShipAscendingDateRule [SADR]
          UNDEFINED <> cAdvancedProcurementPricing [CP11]
          UNDEFINED <> cScientificRounding [CP12]
          UNDEFINED <> cRequirePriceApproval [CP13]
          UNDEFINED <> cProcurementCostBasedOnDate [CP14]
          UNDEFINED <> cSystemConstantsCode15 [CP15]
          UNDEFINED <> cUseAuditLogForSalesOrderC [CP16]
          UNDEFINED <> cReasonCodeRequired [CP17]
          UNDEFINED <> cApprovalProcessRequired [CP18]
          UNDEFINED <> cUseCustomerSet [CP19]
          UNDEFINED <> cPrepaymentProcessing [CP20]
          UNDEFINED <> cCriticalHoldDecoupling [CHDC]
          UNDEFINED <> cEnhancedLotProcessing [ELOT]
          UNDEFINED <> cAdjustmentRetrievalMethod [AJRM]
          UNDEFINED <> szOrganizationTypeStructur [OSTP]
          UNDEFINED <> cPricingAddressFlag [PRAD]
          UNDEFINED <> cPreferenceRetrievalUOM [CP22]
          UNDEFINED <> szPreferenceSchedule [PRSN]
          UNDEFINED <> cPromotionsMultipleResolut [PMRF]
          UNDEFINED <> cPromotionsSystemFlag [PRSF]
          UNDEFINED <> cFlagForFuture23 [CP23]
          UNDEFINED <> cFlagForFuture24 [CP24]
          UNDEFINED <> cFlagForFuture25 [CP25]
          UNDEFINED <> cFlagForFuture26 [CP26]
          UNDEFINED <> cFlagForFuture27 [CP27]
End If
If VA frm_ADVP_cAdv_Pricing [ADVP] is equal to "Y"
     ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          GC 2nd Item Number [LITM] -> sz2ndItemNumber [LITM]
          GC 3rd Item Number [AITM] -> sz3rdItemNumber [AITM]
          UNDEFINED <> cSymbolShortItem [SYM1]
          UNDEFINED <> cSymbol2ndItem [SYM2]
          UNDEFINED <> cSymbol3rdItem [SYM3]
          GC Branch/Plant [MCU] -> szBranchPlant [MCU]
          VA frm_Primary_Item_UITM [UITM] <- szPrimaryItemNumber [UITM]
          UNDEFINED <> cSymbolidentifier [SYMID]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> cSuppressErrorMsg [EV01]
          UNDEFINED <> szErrorMsgID [DTAI]
          UNDEFINED <> idPtrToF41001Record [GENLNG]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
          UNDEFINED <> cSymToIdentSegItem [SYM6]
          UNDEFINED <> cSegmentSeparator [SEPS]
     // 
     // SAR 7482153 - calling the new form W4074D instead of the previous form
     ! Call App:P4074 Form:W4074C Version:PO szChkPriceAvailnqVers [Modeless]
     !      GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     !      GC Or Ty [DCTO] -> Ordertype [DCTO]
     !      GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     !      GC Line Number [LNID] -> Linenumber [LNID]
     !      VA frm_Primary_Item_UITM [UITM] -> Itemnounknownformat [UITM]
     !      GC Description 1 [DSC1] -> Descriptionline1 [DSC1]
     !      GC Quantity  [QT2] -> Unitstransactionqty [UORG]
     !      GC UOM [UOM] -> Unitofmeasureasinput [UOM]
     !      GC Price UOM [UOM4] -> Unitofmeasurepricing [UOM4]
     !      GC Sold To [AN8] -> Addressnumber [AN8]
     !      GC Short Item No [ITM] -> Identifiershortitem [ITM]
     !      SL CurrencyProcessing -> Currencymode [CRRM]
     !      GC Unit Price [UPRC] -> Amtpriceperunit2 [UPRC]
     !      "N" -> PaymentResponsibiCode [PRC]
     !      GC Unit Cost [UNCS] -> Amountunitcost [UNCS]
     !      GC Foreign Unit Cost [FUC] -> Amountforeignunitcost [FUC]
     !      GC Quantity Shipped [SOQS] -> Unitsquantityshipped [SOQS]
     !      GC Branch/Plant [MCU] -> Costcenter [MCU]
     !      GC Exchange Rate [CRR] -> Currencyconverrateov [CRR]
     !      GC Cur Cod [CRCD] -> Currencycodefrom [CRCD]
     !      GC Base Curr [CRDC] -> Currencycodeto [CRDC]
     !      GC Price Effective Date [PEFJ] -> Datepriceeffectivedate [PEFJ]
     !      GC Adj. Schedule [ASN] -> Priceadjustmentschedulen [ASN]
     !      GC Ship To [SHAN] -> Addressnumbershipto [SHAN]
     !      "A" -> CheckPriceOrAdjustments [EV01]
     !      PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
     !      PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
     !      VA frm_mnProcessID [PEID] <> mnProcess_ID_F40UI74 [PEID]
     !      VA frm_mnTransactionID [TCID] <> mnTransaction_ID_F40UI74 [TCID]
     !      VA evt_cSalesOrderFlag09 [SO09] <- cSalesOrderStatus09 [SO09]
     VA evt_szPaymentResponsibiCode [PRC] = "N"
     // SAR 8296811 setting the currencymode (with new form variable) based on
     // order nature
     If GC Base Curr [CRDC] is not equal to GC Cur Cod [CRCD]
     And SL CurrencyProcessing is not equal to "N"
          VA frm_szCurrencyMode [CRRM] = "F"
     Else
          VA frm_szCurrencyMode [CRRM] = "D"
     End If
     // SAR 8296811 Passing currency mode and GC foreign unit price	
     Call App:P4074 Form:W4074D Version:PO szChkPriceAvailnqVers [Modeless]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Order Number [DOCO] -> mnOrderNumber [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szOrderCompany [KCOO]
          GC Branch/Plant [MCU] -> szCostCenter [MCU]
          GC Sold To [AN8] -> mnAddressNumber [AN8]
          GC Ship To [SHAN] -> mnShipTo [SHAN]
          GC Short Item No [ITM] -> mnShortItemNo [ITM]
          VA frm_Primary_Item_UITM [UITM] -> szItemUnknownFormat [UITM]
          GC Quantity  [QT2] -> mnQuantityOrdered [UORG]
          GC Quantity Shipped [SOQS] -> mnQuantityShipped [SOQS]
          GC Unit Price [UPRC] -> mnUnitPrice [UPRC]
          GC Foreign Unit Price [FUP] -> mnForeignUnitPrice [UPR2]
          GC Unit Cost [UNCS] -> mnUnitCost [UNCS]
          GC Foreign Unit Cost [FUC] -> mnForeignUnitCost [FUC]
          PO cDisableorHidePrice [EV04] -> cDisableOrHidePrice [EV02]
          PO cDisableorHideCost [EV03] -> cDisableOrHideCost [EV03]
          GC Description 1 [DSC1] -> szDescriptionLine [DSC1]
          GC UOM [UOM] -> szUnitOfMeasureAsInput [UOM]
          GC Price UOM [UOM4] -> szUnitOfMeasurePricing [UOM4]
          VA evt_szPaymentResponsibiCode [PRC] -> szPaymentResponsibiCode [PRC]
          VA frm_szCurrencyMode [CRRM] -> cCurrencyMode [CRRM]
          GC Exchange Rate [CRR] -> mnCurrencyConvRate [CRR]
          GC Cur Cod [CRCD] -> szCurrencyCodeFrom [CRCD]
          GC Base Curr [CRDC] -> szCurrencyCodeTo [CRDC]
          GC Price Effective Date [PEFJ] -> jdPriceEffectiveDate [PEFJ]
          GC Adj. Schedule [ASN] -> szPriceAdjSchedule [ASN]
          "A" -> cCheckPriceOrAdjustments [EV01]
          VA evt_cSalesOrderFlag09 [SO09] <- cAdjTypeAppliedSO09 [SO09]
          VA frm_mnProcessID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID [TCID] <> mnTransactionID [TCID]
     // SAR 7482153 - end
     // 
Else
     Call App:P4074 Form:W4074A Version:PO szChkPriceAvailInqVers [Modeless]
          UNDEFINED <> ComputerID [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          GC Line Number [LNID] -> LineNumber2 [XLIN]
          UNDEFINED <> AdjustmentRevisionLevel [AREV]
          GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
          GB Line Number [LNID] -> LineNumber [LNID]
          "0" -> SequenceNumber [OSEQ]
          VA frm_mnProcessID [PEID] <> mnProcess_ID_F40UI74 [PEID]
          VA frm_mnTransactionID [TCID] <> mnTransaction_ID_F40UI74 [TCID]
          UNDEFINED <> mnPriceHistoryAltKey [AKID]
          UNDEFINED <> mnTier [TIER]
          UNDEFINED <> mnSubSequenceNumber [SUBSEQ]
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Print Pick Slip on Demand
Event: Button Clicked
Event GUID: 5ef15cdd-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 3324916 - pass new PO to pick slip on demand
If PO szOnDemandPickSlipVersion [VL03] is equal to <Blank>
Or PO szOnDemandPickSlipVersion [VL03] is equal to <NULL>
     PO szOnDemandPickSlipVersion [VL03] = "ZJDE0003"
End If
Call UBE:R42520 Version:PO szOnDemandPickSlipVersion
     GC Order Number [DOCO] -> mnSalesOrderNumber [DOCO]
     GC Or Ty [DCTO] -> szSalesOrdertype [DCTO]
     GC Order Co [KCOO] -> szSalesOrderCompany [KCOO]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Generate Proposal
Event: Button Clicked
Event GUID: f06e0d23-78e9-11d2-9b6d-00104b297363
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szB4001060TransKey_TRNK [TRNK]
evt_szP0039GenericTextKey_TXKY [TXKY]
----------------------------------------
Call App:P90CA24 Form:W90CA24B Version:Undefined
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Preference Resolution
Event: Button Clicked
Event GUID: 3e88a490-3e9a-11d2-9aa9-0000f64da757
=============================================
Call App:P40300R Form:W40300RA Version: 
     UNDEFINED <> mnUniqueKeyIDInternal [UKID]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Sold To [AN8] -> mnAddressNumber [AN8]
     GC Ship To [SHAN] -> mnAddressNumberShipTo [SHAN]
     GC Parent Number [PA8] -> mnAddressNumberParent [PA8]
     GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
     GC 2nd Item Number [LITM] -> szIdentifier2ndItem [LITM]
     GC 3rd Item Number [AITM] -> szIdentifier3rdItem [AITM]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Advanced Preferences
Event: Button Clicked
Event GUID: 2cbbdc9d-4668-4e91-8bb3-d8ca60df6453
=============================================
Call App:P40741 Form:W40741A Version: 
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Work with Shipments
Event: Button Clicked
Event GUID: 5ef15ce0-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ShipmentNumbre_MATH01 [MATH01]
evt_cTranspoPlanningON_EV01 [EV01]
evt_szDocLineTypeConcat_DCCD [DCCD]
evt_szGetUDCErrorMessage_DTAI [DTAI]
evt_cTranspoPath_EV01 [EV01]
----------------------------------------
// SAR 8692777:  OTM Integration
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY49T" -> szDataItem [DTAI]
     VA evt_cTranspoPlanningON_EV01 [EV01] <- cModuleExistance [MEOW]
If VA evt_cTranspoPlanningON_EV01 [EV01] is equal to "1"
     // OTM 49T is turned on in System Control table
     VA evt_szDocLineTypeConcat_DCCD [DCCD] = concat([GC Or Ty [DCTO]], [GC Ln Ty [LNTY]])
     GetUDC(X0005.GetUDC)
          "49" -> szSystemCode [SY]
          "TP" -> szRecordTypeCode [RT]
          VA evt_szDocLineTypeConcat_DCCD [DCCD] -> szUserDefinedCode [KY]
          "4.00" -> mnKeyFieldLength [AS]
          "1" -> cSuppressErrorMessage [EV01]
          VA evt_szGetUDCErrorMessage_DTAI [DTAI] <- szErrorMessageId [DTAI]
     If VA evt_szGetUDCErrorMessage_DTAI [DTAI] is equal to or empty <Blank>
          // Order line is OTM interfaced
          VA evt_cTranspoPath_EV01 [EV01] = "O"
     End If
End If
If VA evt_cTranspoPath_EV01 [EV01] is equal to "O"
     Call App:P49T211 Form:W49T211A Version:Undefined
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          SL VersionName -> szModelVersion [MODV]
          GC Last Status [LTTR] -> szLineItemStatusCode [LSTS]
          "1" -> cFormInterconnectLaunch [EV01]
Else
     // SAR 4558028-B9 DB Change
     ! ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
     !      UNDEFINED <> szGenericString [DSC1]
     !      VA evt_ShipmentNumbre_MATH01 [MATH01] <- mnNumericValue [ITM]
     !      UNDEFINED <> cErrorCode [ERRC]
     // SAR 2884479 - Begin ADD
     If PO szP4915Vers [VL16] is equal to <Blank>
     Or PO szP4915Vers [VL16] is equal to <NULL>
          PO szP4915Vers [VL16] = "ZJDE0001"
     End If
     // SAR 2884479 - End ADD
     // 
     // SAR 3239885 - use the CSS version of P4915 when in CSS mode; this fix will
     // only be applicable until a P4915 version has been added to the P4210
     // processing option version tab
     // SAR 2884479 - Begin/End CHANGE
     // There is a Processing Option for P4915 for the version to use.
     ! If PO cShoppingCartMode [CART] is greater than <Blank>
          ! Call App:P4915 Form:W4915B Version:ZJDE0006
          !      VA evt_ShipmentNumbre_MATH01 [MATH01] -> mnShipmentNumber [SHPN]
          !      UNDEFINED <> mnRoutingStepNumber [RSSN]
          !      UNDEFINED <> szBusiness_Unit_F4215 [MCU]
          !      GC Ship To [SHAN] <> mnAddress_Number__Ship_To_F421 [SHAN]
          !      UNDEFINED <> mnAddress_Number_F4215 [AN8]
          !      GC Order Number [DOCO] <> mnDocumentOrderInvoiceE [DOCO]
          !      GC Or Ty [DCTO] <> szOrderType [DCTO]
          !      UNDEFINED <> mnTransportationJobNumber [JOBS]
     ! Else
          // SAR 4606894 - pass in GC SHPN
          Call App:P4915 Form:W4915B Version:PO szP4915Vers
               GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
               UNDEFINED <> mnRoutingStepNumber [RSSN]
               UNDEFINED <> szBusiness_Unit_F4215 [MCU]
               GC Ship To [SHAN] <> mnAddress_Number__Ship_To_F421 [SHAN]
               UNDEFINED <> mnAddress_Number_F4215 [AN8]
               GC Order Number [DOCO] <> mnDocumentOrderInvoiceE [DOCO]
               GC Or Ty [DCTO] <> szOrderType [DCTO]
               UNDEFINED <> mnTransportationJobNumber [JOBS]
     ! End If
     // End SAR 3239885
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Shipment Status / Shipment Tracking
Event: Button Clicked
Event GUID: 5ef15cdf-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_Shipment_Number_MATH01 [MATH01]
----------------------------------------
// 
// SAR # 2689745 - Convert Shipment Number to numeric before passing to call of
// Shipment Tracking
// 
// SAR 4558028-B9 DB Change
! ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
!      UNDEFINED <> szGenericString [DSC1]
!      VA evt_Shipment_Number_MATH01 [MATH01] <- mnNumericValue [ITM]
!      UNDEFINED <> cErrorCode [ERRC]
// SAR 4606894 - pass in GC SHPN
Call App:P4947 Form:W4947A Version: 
     GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
     UNDEFINED <> mnRoutingStepNumber [RSSN]
     UNDEFINED <> szBusinessUnit [MCU]
     UNDEFINED <> mnShipTo [SHAN]
     UNDEFINED <> mnSoldTo [AN8]
     UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
     UNDEFINED <> szOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Warehouse Detail Window
Event: Button Clicked
Event GUID: 998d3651-36c3-11d2-9a9a-0000f64da757
=============================================
Call App:P46320 Form:W46320A Version: 
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Transaction Control
Event: Button Clicked
Event GUID: 4311afa0-4403-11d2-af8d-0000f6783f07
=============================================
// 
If FC CTID-Computer ID (wf) [CTID] is equal to <Blank>
Or FC CTID-Computer ID (wf) [CTID] is equal to <NULL>
     GetLocalComputerId(B9800181.GetLocalComputerId)
          VA frm_CTID_szComputerID [CTID] <- szMachineKey [MKEY]
End If
// 
If VA frm_USER_szUserID [USER] is equal to <Blank>
Or VA frm_USER_szUserID [USER] is equal to <NULL>
     GetAuditInfo(B9800100.GetAuditInfo)
          VA frm_USER_szUserID [USER] <- szUserName [USER]
          UNDEFINED <> jdDate [DTE]
          UNDEFINED <> mnTime [TME0]
          UNDEFINED <> szWorkstation_UserId [JOBN]
          UNDEFINED <> szMachineKey [MKEY]
End If
// 
If VA frm_TRNK_szTransactionKey [TRNK] is equal to <Blank>
Or VA frm_TRNK_szTransactionKey [TRNK] is equal to <NULL>
     ConvertOrderTransactionKey(B4001060.ConvertOrderTransactionKey)
          VA frm_TRNK_szTransactionKey [TRNK] <- szTransactionKey [TRNK]
          GC Order Number [DOCO] -> mnOrderNumber [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKey [KCOO]
          UNDEFINED <> szOrderSuffix [SFXO]
          UNDEFINED <> szEditedTransactionKey [TRNK]
          UNDEFINED <> cSeparator [SEP]
          "0" -> cConversionMode [MODE]
End If
// 
VA frm_TRNY_szTransactionType [TRNY] = "ZS"
Call App:P0041Z1 Form:W0041Z1B Version: 
     "EP4210" -> ProgramId [PID]
     VA frm_TRNK_szTransactionKey [TRNK] -> Transactionkey [TRNK]
     VA frm_TRNY_szTransactionType [TRNY] -> Transactiontype [TRNY]
     "0" -> Transactioncontrolnumber [TRNM]
     VA frm_CTID_szComputerID [CTID] -> Computerid [CTID]
     VA frm_USER_szUserID [USER] -> Userid [USER]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Configured Related Orders
Event: Button Clicked
Event GUID: e65e5062-50b2-428c-a4ee-428db046d4e8
=============================================
// SAR#5072396 - Begin
GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     GC Branch/Plant [MCU] -> szBranch [MCU]
     GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     VA grd_cStockingType [STKT] <- cStockingType [STKT]
     UNDEFINED <> cIssueTypeCode [ITC]
     UNDEFINED <> cPlanningCode [MPST]
     UNDEFINED <> mnPlanningFence [MTF1]
     UNDEFINED <> mnFreezeFence [MTF2]
     UNDEFINED <> mnMessageDisplayFence [MTF3]
     UNDEFINED <> mnTimeFence [MTF4]
     UNDEFINED <> cPlanningFenceRule [MPSP]
     UNDEFINED <> cFixedVariableLeadtime [MRPP]
     UNDEFINED <> mnLeadtimeLevel [LTLV]
     UNDEFINED <> mnLeadtimeMfg [LTMF]
     UNDEFINED <> mnLeadtimeCumulative [LTCM]
     UNDEFINED <> mnLeadtimePerUnit [LTPU]
     UNDEFINED <> mnMFGLeadtimeQty [MLQ]
     UNDEFINED <> mnShrinkFactor [SRNK]
     UNDEFINED <> cShrinkFactorMethod [SRKF]
     UNDEFINED <> cOrderPolicyCode [OPC]
     UNDEFINED <> mnOrderPolicyValue [OPV]
     UNDEFINED <> mnAccountingCostQuantity [ACQ]
     UNDEFINED <> cTimeBasisCode [TIMB]
     UNDEFINED <> mnMoveHours [MOVD]
     UNDEFINED <> mnQueueHours [QUED]
     UNDEFINED <> mnStandardSetupHours [SETL]
     UNDEFINED <> cErrorIndicator [ERRC]
     UNDEFINED <> mnPlannerNumber [ANPL]
     UNDEFINED <> mnLowLevelCode [LLX]
     <Blank> -> cSuppressErrorMessage [EV01]
     FC DTAI-Error Msg ID [DTAI] <- szErrorMessageID [DTAI]
     UNDEFINED <> cNetChangeFlag [MRPC]
     UNDEFINED <> idF4102Pointer [GENLNG]
     UNDEFINED <> szLineType [LNTY]
     UNDEFINED <> mnSafetyStock [SAFE]
     UNDEFINED <> cLotStatusCode [LOTS]
     UNDEFINED <> cAbcCode [ABCS]
     UNDEFINED <> cAllocateByLot [CMGL]
     UNDEFINED <> szMasterPlanning [PRP5]
     UNDEFINED <> mnBuyer [BUYR]
     UNDEFINED <> cPotencyControl [OT1Y]
     UNDEFINED <> mnStandardPotency [STDP]
     UNDEFINED <> cLotExpDateCalcMeth [LECM]
     UNDEFINED <> cActiveIngredientFlag [AING]
     UNDEFINED <> cCrossDockFlagYN [XDCK]
// 
// Display error if the item/branch record was not found.
// 
If FC DTAI-Error Msg ID [DTAI] is not equal to <Blank>
     Set Grid Cell Error(FC Grid,  <Current Row>, GC 2nd ItemNumber, FC DTAI-Error Msg ID)
Else
     // 
     // SAR 6512728- Fetch from F4211 to get RKIT information
     F4211.FetchSingle  [Index 1: Order Number, Order Type, +A]
          GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
          GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          GC Or Ty [DCTO] = TK Order Type [DCTO]
          GC Line Number [LNID] = TK Line Number [LNID]
          VA grd_ComponentItem_RKIT [RKIT] <- TK Related Kit Component [RKIT]
     // If the stocking type is not 'C' configured then set an error.
     // or if it is not a component item
     If VA grd_cStockingType [STKT] is not equal to "C"
     Or VA grd_ComponentItem_RKIT [RKIT] is not equal to "0"
          Set Grid Cell Error(FC Grid,  <Current Row>, GC 2nd ItemNumber, "4790")
     Else
          // 
          // Display the Configured Related Orders Form
          // The Form Interconnect DS is solely based on the Configured design document.
          Call App:P3201 Form:W3201A Version:Undefined
               "42" -> szProductCode [SY]
               GC Order Co [KCOO] -> szOrder_Company_Order_Numb [KCOO]
               GC Order Number [DOCO] -> mnDocument_Order_No_Invoic [DOCO]
               GC Or Ty [DCTO] -> szOrder_Type_F3201 [DCTO]
               GC Line Number [LNID] -> mnLine_Number_F3201 [LNID]
     End If
End If
// SAR#5072396 - End


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Display Configured Generic Text
Event: Button Clicked
Event GUID: df16b4ae-d785-4f62-95ec-a7609a3e7bd1
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szOriginalPoSoNumber_OORN [OORN]
evt_mnOriginalLineNumber_OGNO [OGNO]
----------------------------------------
// SAR#5072396 - Begin
GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
     GC Branch/Plant [MCU] -> szBranch [MCU]
     GC Short Item No [ITM] -> mnShortItemNumber [ITM]
     VA grd_cStockingType [STKT] <- cStockingType [STKT]
     UNDEFINED <> cIssueTypeCode [ITC]
     UNDEFINED <> cPlanningCode [MPST]
     UNDEFINED <> mnPlanningFence [MTF1]
     UNDEFINED <> mnFreezeFence [MTF2]
     UNDEFINED <> mnMessageDisplayFence [MTF3]
     UNDEFINED <> mnTimeFence [MTF4]
     UNDEFINED <> cPlanningFenceRule [MPSP]
     UNDEFINED <> cFixedVariableLeadtime [MRPP]
     UNDEFINED <> mnLeadtimeLevel [LTLV]
     UNDEFINED <> mnLeadtimeMfg [LTMF]
     UNDEFINED <> mnLeadtimeCumulative [LTCM]
     UNDEFINED <> mnLeadtimePerUnit [LTPU]
     UNDEFINED <> mnMFGLeadtimeQty [MLQ]
     UNDEFINED <> mnShrinkFactor [SRNK]
     UNDEFINED <> cShrinkFactorMethod [SRKF]
     UNDEFINED <> cOrderPolicyCode [OPC]
     UNDEFINED <> mnOrderPolicyValue [OPV]
     UNDEFINED <> mnAccountingCostQuantity [ACQ]
     UNDEFINED <> cTimeBasisCode [TIMB]
     UNDEFINED <> mnMoveHours [MOVD]
     UNDEFINED <> mnQueueHours [QUED]
     UNDEFINED <> mnStandardSetupHours [SETL]
     UNDEFINED <> cErrorIndicator [ERRC]
     UNDEFINED <> mnPlannerNumber [ANPL]
     UNDEFINED <> mnLowLevelCode [LLX]
     <Blank> -> cSuppressErrorMessage [EV01]
     FC DTAI-Error Msg ID [DTAI] <- szErrorMessageID [DTAI]
     UNDEFINED <> cNetChangeFlag [MRPC]
     UNDEFINED <> idF4102Pointer [GENLNG]
     UNDEFINED <> szLineType [LNTY]
     UNDEFINED <> mnSafetyStock [SAFE]
     UNDEFINED <> cLotStatusCode [LOTS]
     UNDEFINED <> cAbcCode [ABCS]
     UNDEFINED <> cAllocateByLot [CMGL]
     UNDEFINED <> szMasterPlanning [PRP5]
     UNDEFINED <> mnBuyer [BUYR]
     UNDEFINED <> cPotencyControl [OT1Y]
     UNDEFINED <> mnStandardPotency [STDP]
     UNDEFINED <> cLotExpDateCalcMeth [LECM]
     UNDEFINED <> cActiveIngredientFlag [AING]
     UNDEFINED <> cCrossDockFlagYN [XDCK]
// 
// Display error if the item/branch record was not found.
// 
If FC DTAI-Error Msg ID [DTAI] is not equal to <Blank>
     Set Grid Cell Error(FC Grid,  <Current Row>, GC 2nd ItemNumber, FC DTAI-Error Msg ID)
Else
     // 
     // If the stocking type is not 'C' configured then set an error.
     // 
     If VA grd_cStockingType [STKT] is not equal to "C"
          Set Grid Cell Error(FC Grid,  <Current Row>, GC 2nd ItemNumber, "4790")
     Else
          // 
          // Display the Configured Generic Text 
          // The Form Interconnect DS is solely based on the Configured design document.
          VA frm_BogusStatusForConfgGeneric [ALPH] = <NULL>
          VA frm_szErrorMessageIDForConfg [DTAI] = <NULL>
          // SAR 5495305
          // SAR 8926275
          // When the order is created using credit memo, the line numbers are
          // different in F4211 and F3201. Get the original order line number and pass
          // it to the BSFN to get the right ConfigIDNumber.
          RetrieveF4211Record(B4202040.RetrieveF4211Record)
               GC Order Co [KCOO] -> szOrderNumberDocumentCompany [KCOO]
               GC Order Number [DOCO] -> mnOrderNumber [DOCO]
               GC Or Ty [DCTO] -> szOrderType [DCTO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               VA evt_szOriginalPoSoNumber_OORN [OORN] <- szOriginalOrderNumber [OORN]
               VA evt_mnOriginalLineNumber_OGNO [OGNO] <- mnOriginalLineNumber [OGNO]
          ! If VA evt_szOriginalPoSoNumber_OORN [OORN] is not equal to <Blank>
          ! And VA evt_szOriginalPoSoNumber_OORN [OORN] is not equal to <NULL>
               ! GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
               !      "42" -> szSystemCode [SY]
               !      GC Order Number [DOCO] -> mnOrderNumber [DOCO]
               !      GC Or Ty [DCTO] -> szOrderType [DCTO]
               !      GC Order Co [KCOO] -> szCompanyKey [KCOO]
               !      VA evt_mnOriginalLineNumber_OGNO [OGNO] -> mnLineNumber [LNID]
               !      BC Order Suffix (F4211.0) [SFXO] -> szOrderSuffix [SFXO]
               !      "1" -> cSuppressErrorMessage [SUPPS]
               !      VA frm_szErrorMessageIDForConfg [DTAI] <- szErrorMessageID [DTAI]
               !      VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
               !      VA frm_mnComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
          ! Else
               GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
                    "42" -> szSystemCode [SY]
                    GC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    GC Or Ty [DCTO] -> szOrderType [DCTO]
                    GC Order Co [KCOO] -> szCompanyKey [KCOO]
                    GC Line Number [LNID] -> mnLineNumber [LNID]
                    BC Order Suffix (F4211.0) [SFXO] -> szOrderSuffix [SFXO]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    VA frm_szErrorMessageIDForConfg [DTAI] <- szErrorMessageID [DTAI]
                    VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
                    VA frm_mnComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
                    UNDEFINED <> szProgramId [PID]
          ! End If
          If VA frm_szErrorMessageIDForConfg [DTAI] is equal to <Blank>
               Media Object Structures(GT3201, <Default Media Object>, <Display>, <First Text Item>, VA frm_BogusStatusForConfgGeneric, VA frm_ConfigurationIDNumber, VA frm_mnComponentIDNumber)
          End If
     End If
End If
// SAR#5072396 - End


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Regional Information
Event: Button Clicked
Event GUID: d289ecbc-c7fb-4665-83d7-5d66283631c3
=============================================
// SAR 5480568
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     UNDEFINED <> szCompany [CO]
     UNDEFINED <> szCountry [CTR]
     UNDEFINED <> szCallingAppl [PID]
     UNDEFINED <> szCallingForm [FID]
     "XI2" -> szFormAction [FATN]
     UNDEFINED <> szCallingVers [VERS]
     UNDEFINED <> szComputerID [CTID]
     UNDEFINED <> mnJobnumberA [JOBS]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     UNDEFINED <> cNewRecords [EV01]
     UNDEFINED <> cTableCache [EV02]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Related Purchase Order Browse
Event: Button Clicked
Event GUID: f57df5dd-a23a-11d0-a204-0000f6728a56
=============================================
//                               SAR REVISION LOG
// SAR #                       PROGRAMMER                           DATE
// 4002222                      VK6272082                           03/15/00
//  
If PO szP4310Vers [VL08] is equal to or empty <Blank>
Or PO szP4310Vers [VL08] is equal to or empty <NULL>
     PO szP4310Vers [VL08] = "ZJDE0001"
End If
MathNumericToStringZeroPad(B0000083.MathNumericToStringZeroPad)
     BC Related PO/SO/WO Number (F4211.0) [RORN] <- szString [DL01]
     GC Order Number [DOCO] -> mnMathNumeric [MATH01]
     "9" -> nSizeOfString [INT01]
//  
// SAR 4002222 BEGIN - Passing '"*" for P4310 B/P
FI Costcenter [MCU] = "*"
Call App:P4310 Form:W4310G Version:PO szP4310Vers
     UNDEFINED <> OrderNumber [DOCO]
     GC Rel Ord Type [RCTO] -> OrderType [DCTO]
     UNDEFINED <> Order Company [KCOO]
     UNDEFINED <> SupplierNumber [AN8]
     FI Costcenter [MCU] -> BranchPlant [MCU]
     UNDEFINED <> ShortItemNumber [ITM]
     UNDEFINED <> AccountID [AID]
     BC Related PO/SO/WO Number (F4211.0) [RORN] -> RelatedOrderNumber [RORN]
     GC Or Ty [DCTO] -> RelatedOrderType [RCTO]
     GC Order Co [KCOO] -> RelatedOrderCompany [RKCO]
     UNDEFINED <> OriginalOrderNumber [OGNO]
     UNDEFINED <> OriginalOrderType [OCTO]
     UNDEFINED <> OriginalOrderCompany [OKCO]
     UNDEFINED <> Subledger [SBL]
     UNDEFINED <> SubledgerType [SBLT]
     UNDEFINED <> cSourceOfFormCall [EV01]
// SAR 4002222 END


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: HC Style Sales Order Matrix Entry Revision
Event: Button Clicked
Event GUID: 0d85b469-4e4d-44ff-a491-acd1fbeae823
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnJobnumber_JOBS [JOBS]
evt_szUserId_USER [USER]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
VA evt_szUserId_USER [USER] = SL UserID
If PO szPCW10Version [VL28] is equal to or empty <Blank>
     PO szPCW10Version [VL28] = "ZJDE0002"
End If
//
// Call BCW31 which will retrieve the SO info from F4211 and insert temp
// workfile records into FCW20 to be used in PCW10 just for this call only
//
MatrixSeizureForShipmentConf(BCW31.MatrixSeizureForShipmentConf)
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Branch/Plant [MCU] -> szCostCenter [MCU]
     "0" -> mnPickSlipNumber [PSN]
     <Blank> -> szCommodityCode [CDCD]
     <Blank> -> szReference1 [VR01]
     <Blank> -> szStatusCodeNext [NXTR]
     <Blank> -> szStatusCodeLast [LTTR]
     VA evt_mnJobnumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] <> szUserId [USER]
     "F4211" -> szC9FILE_File [C9FILE]
//
// Call PCW10 with MatrixType=3 and make sure to pass the new JOBS from BCW31
Call App:PCW10 Form:WCW10B Version:PO szPCW10Version
     VA evt_mnJobnumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] -> szUserId [USER]
     "3" -> MatrixType [EV01]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     "0" -> QtyControle [UORG]
     "F4211" -> szC9FILE_File [C9FILE]
     PO szP4021Vers [VL02] -> szVersion_P4021 [VERS]
     PO szNonUpdatableStatus [NXT2] -> NonUpdatableStatus [NXTR]
     "EP4210" -> szCallingAPPLProgramId [PID]
     GC Sold To [AN8] -> mnSoldTo [AN8]
     GC Ship To [SHAN] -> mnShipTo [AN8]
     GC Order Date [TRDJ] -> jdOrderDate [JDATE]
     GC Customer PO [VR01] -> szOrderReference [VR01]
     SL VersionName -> szSalesOrderVersion [VERS]
//
// Delete the temp workfile records from FCW20
FCW20.Delete  [Index 1: Primary]
     VA evt_mnJobnumber_JOBS [JOBS] = TK Job Number [JOBS]


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Item Number
Event: Control Exited/Changed-Inline
Event GUID: 90933f0f-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 5848721- Select on ITM not LITM
VA frm_cItemNumberError_EV01 [EV01] = "0"
If FC Item Number [UITM] is greater than <Blank>
And FC Item Number [UITM] is not equal to "*"
     VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
          FC Item Number [UITM] -> szPrimaryItemNumber [UITM]
          FC Business Unit [MCU] -> szBranchPlant [MCU]
          FC ITEM NUMBER [DL01] <- szDescription [DSC1]
          UNDEFINED <> szDescription2 [DSC2]
          <Blank> -> cSymbolidentifier [SYMID]
          UNDEFINED <> idF4101LongRowPtr [GENLNG]
          FC Short Item Number [ITM] <- mnShortItemNumber [ITM]
          FC ERRC-Error Code (wf) [ERRC] <- cErrorcode [ERRC]
          UNDEFINED <> szLanguagepreference [LNGP]
          UNDEFINED <> mnAddressnumber [AN8]
          UNDEFINED <> szSystemcode [SY]
          UNDEFINED <> szLongItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szItemFlashMsg [IFLA]
          "0" -> cReturnPtr [EV01]
          <Blank> -> cSuppressErrorMsg [EV02]
          FC DTAI-Error Msg ID [DTAI] <- szErrorMsgID [DTAI]
          "1" <> cCallType [EV01]
          UNDEFINED <> idPtrToF41001Record [GENLNG]
          UNDEFINED <> szBaseLngDesc1 [DSC1]
          UNDEFINED <> szBaseLngDesc2 [DSC2]
          UNDEFINED <> cCrossRefMode [MODE]
          UNDEFINED <> cLngPrefType [EV01]
          UNDEFINED <> jdExpirationDate [EXDJ]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
     If FC DTAI-Error Msg ID [DTAI] is greater than <Blank>
          VA frm_cItemNumberError_EV01 [EV01] = "1"
     End If
Else
     FC Item Number [UITM] = "*"
     FC Short Item Number [ITM] = "*"
     FC ITEM NUMBER [DL01] = <NULL>
End If

=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Item Number
Event: Visual Assist Button Clicked
Event GUID: 0064c270-650e-11d2-9b56-00104b297363
=============================================
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     Suppress Default Visual Assist Form
     Call App:P41829W Form:W41829WA Version:ZJDE0002
          UNDEFINED <> mnIdentifierShortItem [ITM]
          UNDEFINED <> szCostCenter [MCU]
          FC Item Number [UITM] <- szItemNoUnknownFormat [UITM]
          UNDEFINED <> szSearchWord999 [SRWD]
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: e1cb9632-a5a9-11d2-a1f4-00105a1bfebf
=============================================
// SAR 6226705 - Validate and Set Error on Long address Number if invalid
VA frm_cSoldToError_EV01 [EV01] = "0"
If FC Long Address Number [ALKY] is not equal to <Blank>
And FC Long Address Number [ALKY] is not equal to <NULL>
And FC Long Address Number [ALKY] is not equal to "*"
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC ADDRESS NUMBER [DL01] <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     If SV Error_Status is not equal to CO SUCCESS
     Or FC Address Number [AN8] is equal to "0"
          VA frm_cSoldToError_EV01 [EV01] = "1"
          Set Control Error(FC Long Address Number, "0037")
          Stop Processing
     End If
Else
     FC Address Number [AN8] = "*"
     FC Long Address Number [ALKY] = "*"
     FC ADDRESS NUMBER [DL01] = <Blank>
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Long Address Number-Shipto
Event: Control Exited/Changed-Inline
Event GUID: e1cb9633-a5a9-11d2-a1f4-00105a1bfebf
=============================================
// SAR 6226705 - Validate and Set Error on Long address Number if invalid
VA frm_cShipToError_EV01 [EV01] = "0"
If FC Long Address Number-Shipto [ALKY] is not equal to <Blank>
And FC Long Address Number-Shipto [ALKY] is not equal to <NULL>
And FC Long Address Number-Shipto [ALKY] is not equal to "*"
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number-Shipto [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC SHIP TO [DL01] <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     If SV Error_Status is not equal to CO SUCCESS
     Or FC Ship To [SHAN] is equal to "0"
          VA frm_cShipToError_EV01 [EV01] = "1"
          Set Control Error(FC Long Address Number-Shipto, "0037")
          Stop Processing
     End If
Else
     FC Ship To [SHAN] = "*"
     FC Long Address Number-Shipto [ALKY] = "*"
     FC SHIP TO [DL01] = <Blank>
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Extend Back Order Quantity
Event: Selection Changed
Event GUID: 5ef15cde-e064-11d1-9ac9-00600832fe19
=============================================
Press Button(HC Find)


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Customer Item
Event: Selection Changed
Event GUID: f57e0a78-a23a-11d0-a204-0000f6728a56
=============================================
If FC Customer Item [DSPSUB] is equal to "1"
     Show Grid Column(FC Grid, GC CustomerItem Number, )
     // SAR 6392631 Begin
     If VA frm_cDemandSchedReleased_DSRF [DSRFU] is equal to "1"
          Show Grid Column(FC Grid, GC Customer Item Revision Level)
     End If
Else
     Hide Grid Column(FC Grid, GC CustomerItem Number, )
     Hide Grid Column(FC Grid, GC Customer Item Revision Level)
     // SAR 6392631 End
End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Grid
Event: Double Click on Row Header
Event GUID: f57e078a-a23a-11d0-a204-0000f6728a56
=============================================
Media Objects(GT4211A   , <Display>, FC EV09-Gen Text Row, GC OrderNumber, GC OrTy, GC OrderCo, GC LineNumber)


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Original Order Type
Event: Control Exited/Changed-Asynch
Event GUID: d9f97e91-26ec-11d2-9a8f-0000f64da757
=============================================
// 
//      If original order type is entered, validate against the UDC table. Note:
//      Had to turn of the DD edit on this field because the run time engine has
//      had trouble bypassing the edit of '*'. The following is only a work
//      around until this problem is fixed.
// 
! If FC Original Order Type [OCTO] is not equal to <Blank>
! OrFC Original Order Type [OCTO] is not equal to <NULL>
     ! GetUDC(X0005.GetUDC)
     !      "ODCT" -> szDataDictionaryItem [DTAI]
     !      UNDEFINED <> szSystemCode [SY]
     !      UNDEFINED <> szRecordTypeCode [RT]
     !      FC Original Order Type [OCTO] -> szUserDefinedCode [KY]
     !      UNDEFINED <> mnKeyFieldLength [AS]
     !      UNDEFINED <> szLanguagePreference [LNGP]
     !      UNDEFINED <> szDescription001 [DL01]
     !      UNDEFINED <> szDescription002 [DL02]
     !      UNDEFINED <> szSpecialHandlingCode [SPHD]
     !      UNDEFINED <> cUdcOwnershipFlag [UDCO]
     !      UNDEFINED <> cHardCodedYn [HRDC]
     !      "1" -> cSuppressErrorMessage [EV01]
     !      FC DTAI-Error Msg ID [DTAI] <- szErrorMessageId [DTAI]
     !      UNDEFINED <> cUDCOne [EV01]
     ! If FC DTAI-Error Msg ID [DTAI] is not equal to "0"
          ! Set Control Error(FC Original Order Type, FC DTAI-Error Msg ID)
     ! End If
! End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Original Order Document Company
Event: Control Exited/Changed-Asynch
Event GUID: d9f97e92-26ec-11d2-9a8f-0000f64da757
=============================================
// 
//      Validate that the company entered is a correct one.   Note:   the trigge
//      edit for this field was overridden because of  a problem in Tools. 
// 
! If FC Original Order Document Company [OKCO] is not equal to <Blank>
! OrFC Original Order Document Company [OKCO] is not equal to <NULL>
     ! GetCompanyName(B0000051.GetCompanyName)
     !      FC Original Order Document Company [OKCO] -> szCompany [CO]
     !      UNDEFINED <> szCompanyName [DL01]
     !      FC EV02 - Error Code (wf) [EV02] <- cErrorFlag [EV01]
     ! If FC EV02 - Error Code (wf) [EV02] is equal to "1"
          ! Set Control Error(FC Original Order Document Company, "0024")
     ! End If
! End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Document Type
Event: Control Exited/Changed-Asynch
Event GUID: d9f97e93-26ec-11d2-9a8f-0000f64da757
=============================================
// 
//      Validate the Invoice Type as specified.     Note:  The automatic UDC edi
//      of this field has been disabled because of a problem in Tools.
//   
! If FC Document Type [DCT] is not equal to <Blank>
! OrFC Document Type [DCT] is not equal to <NULL>
     ! GetUDC(X0005.GetUDC)
     !      "DCT" -> szDataDictionaryItem [DTAI]
     !      UNDEFINED <> szSystemCode [SY]
     !      UNDEFINED <> szRecordTypeCode [RT]
     !      FC Document Type [DCT] -> szUserDefinedCode [KY]
     !      UNDEFINED <> mnKeyFieldLength [AS]
     !      UNDEFINED <> szLanguagePreference [LNGP]
     !      UNDEFINED <> szDescription001 [DL01]
     !      UNDEFINED <> szDescription002 [DL02]
     !      UNDEFINED <> szSpecialHandlingCode [SPHD]
     !      UNDEFINED <> cUdcOwnershipFlag [UDCO]
     !      UNDEFINED <> cHardCodedYn [HRDC]
     !      "1" -> cSuppressErrorMessage [EV01]
     !      FC DTAI-Error Msg ID [DTAI] <- szErrorMessageId [DTAI]
     !      UNDEFINED <> cUDCOne [EV01]
     ! If FC DTAI-Error Msg ID [DTAI] is not equal to <Blank>
     ! OrFC DTAI-Error Msg ID [DTAI] is not equal to <NULL>
          ! Set Control Error(FC Document Type, FC DTAI-Error Msg ID)
     ! End If
! End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Document Company
Event: Control Exited/Changed-Asynch
Event GUID: d9f97e94-26ec-11d2-9a8f-0000f64da757
=============================================
// 
//     Validate the company number entered if specified. Note: The automatic UDC
//      edit on this field has been disabled due to a problem in Tools.
// 
! If FC Document Company [KCO] is not equal to <Blank>
! OrFC Document Company [KCO] is not equal to <NULL>
     ! GetCompanyName(B0000051.GetCompanyName)
     !      FC Document Company [KCO] -> szCompany [CO]
     !      UNDEFINED <> szCompanyName [DL01]
     !      FC EV02 - Error Code (wf) [EV02] <- cErrorFlag [EV01]
     ! If FC EV02 - Error Code (wf) [EV02] is equal to "1"
          ! Set Control Error(FC KCO-Invoice Company, "0024")
     ! End If
! End If


=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Object: FC Customer Service Inquiry
Event: Tab Page is Initialized
Event GUID: 080cb6e0-53b9-11d2-a72b-0000f6a025f4
=============================================
Set Control Focus(FC Order Number [DOCO])



=============================================
EVENTS
=============================================
Form: Customer Service Inquiry - W4210E
Event: Dialog is Initialized
Event GUID: f57df5cb-a23a-11d0-a204-0000f6728a56
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 5869645                   WZ6999484                 04/12/02
// 05/21/2009    Vellingiri      8926275 - Cfg gener txt credit from hist
// 08/28/2009  IC8893739   8934801  - Config Line #s wrong in F3201
// 05/10/2011  RV9056609 11904723 - PMPN Enhancements
//
// SAR # 1847781 Store off Version into a non-system variable.
VA frm_szVersion_VERS [VERS] = SL VersionName
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Form Title(TV Store And Forward Order Inquiry)
End If
//
// SAR 8953108 - Apparel Enhancements
// Check if Apparel System (SY41F) is Installed. Disable
// the Apparel row exits if Apparel system is not installed
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cApparelInstalled_EV01 [EV01] is not equal to "1"
Or PO cActivatePrepayProcess [EV01] is equal to "1"
Or PO cUseAuditLog [EV01] is equal to "1"
     Disable Control(HC Style Matrix Entry)
End If
//
// SAR 6105487 - Verify Demand System is Available
IsDemandSchedulingDelivered(N40R0940.IsDemandSchedulingDelivered)
     VA frm_cDemandSchedReleased_DSRF [DSRFU] <- cDemandSchedulingReleased [DSRFU]
If VA frm_cDemandSchedReleased_DSRF [DSRFU] is not equal to "1"
     Hide Grid Column(FC Grid, GC PullSignal)
     // Customer Item Revision Level
     Hide Grid Column(FC Grid, GC Customer Item Revision Level)
     // Time Handling Fields
     Hide Grid Column(FC Grid, GC PromisedDelivery Time)
     Hide Grid Column(FC Grid, GC ActualShip Time)
     Hide Grid Column(FC Grid, GC OriginalPromised Time)
     Hide Grid Column(FC Grid, GC ScheduledPick Time)
     Hide Grid Column(FC Grid, GC RequestedTime)
End If
// End SAR 6105487
If FI Documentorderinvoicee [DOCO] is not equal to "0"
Or FI Ordertype [DCTO] is greater than <Blank>
     FC Order Number [DOCO] = FI Documentorderinvoicee [DOCO]
     FC Order Type [DCTO] = FI Ordertype [DCTO]
     FC KCOO-Order Company [KCOO] = FI Companykeyorderno [KCOO]
End If
// SAR 6226705 - Default to * if Blank
If FI mnAddressNumber [AN8] is greater than "0"
     FC Address Number [AN8] = FI mnAddressNumber [AN8]
     FC Long Address Number [ALKY] = [FI mnAddressNumber [AN8]]
Else
     FC Address Number [AN8] = "*"
     FC Long Address Number [ALKY] = "*"
     FC ADDRESS NUMBER [DL01] = <NULL>
End If
//
If FC Long Address Number-Shipto [ALKY] is equal to <Blank>
Or FC Long Address Number-Shipto [ALKY] is equal to <NULL>
     FC Ship To [SHAN] = "*"
     FC Long Address Number-Shipto [ALKY] = "*"
     FC SHIP TO [DL01] = <NULL>
End If
// SAR 6226705 End
//
// SAR 5848721- Select on ITM not LITM
If FI Itemnounknownformat [UITM] is greater than <Blank>
And FI Itemnounknownformat [UITM] is not equal to "*"
     FC Item Number [UITM] = FI Itemnounknownformat [UITM]
     VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
          FC Item Number [UITM] -> szPrimaryItemNumber [UITM]
          FI Costcenter [MCU] -> szBranchPlant [MCU]
          FC ITEM NUMBER [DL01] <- szDescription [DSC1]
          UNDEFINED <> szDescription2 [DSC2]
          <Blank> -> cSymbolidentifier [SYMID]
          UNDEFINED <> idF4101LongRowPtr [GENLNG]
          FC Short Item Number [ITM] <- mnShortItemNumber [ITM]
          FC ERRC-Error Code (wf) [ERRC] <- cErrorcode [ERRC]
          UNDEFINED <> szLanguagepreference [LNGP]
          UNDEFINED <> mnAddressnumber [AN8]
          UNDEFINED <> szSystemcode [SY]
          UNDEFINED <> szLongItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szItemFlashMsg [IFLA]
          "0" -> cReturnPtr [EV01]
          <Blank> -> cSuppressErrorMsg [EV02]
          FC DTAI-Error Msg ID [DTAI] <- szErrorMsgID [DTAI]
          "1" <> cCallType [EV01]
          UNDEFINED <> idPtrToF41001Record [GENLNG]
          UNDEFINED <> szBaseLngDesc1 [DSC1]
          UNDEFINED <> szBaseLngDesc2 [DSC2]
          UNDEFINED <> cCrossRefMode [MODE]
          UNDEFINED <> cLngPrefType [EV01]
          UNDEFINED <> jdExpirationDate [EXDJ]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
Else
     FC Item Number [UITM] = "*"
     FC Short Item Number [ITM] = "*"
     FC ITEM NUMBER [DL01] = <Blank>
End If
If FI Reference1 [VR01] is greater than <Blank>
     FC Customer PO [VR01] = FI Reference1 [VR01]
End If
// Following line changed for SAR # 1784599
Changes is made to Set the priority
// as following.
//
// PO Default
// User Default
//
If FI Costcenter [MCU] is greater than <Blank>
     FC Business Unit [MCU] = FI Costcenter [MCU]
     // *************************************************************************
     // SAR 2410610 - Begin/End ADD
     // When CostCenter is not blank then the PO and Default B/P should
     // be bypassed. Add the Else condition and moved codes after it.
     // *************************************************************************
Else
     If FC Business Unit [MCU] is less than or equal to <Blank>
     And PO szDefaultOrdertype [DCTO] is greater than <Blank>
          FC Business Unit [MCU] = PO szDefaultBranchPlant [MCU]
     End If
     If FC Business Unit [MCU] is less than or equal to <Blank>
          // SAR 5493342
          //
          If PO cDefaultShipToBranch [EV02] is equal to <Blank>
          Or PO cDefaultShipToBranch [EV02] is equal to <NULL>
               GetDefaultBranch(B4000370.GetDefaultBranch)
                    FC Business Unit [MCU] <- szBranch [MCU]
                    UNDEFINED <> szApprovalRouteCode [ARTG]
          End If
     End If
End If
If FC Business Unit [MCU] is less than or equal to <Blank>
     FC Business Unit [MCU] = "*"
End If
//
//     Initialize work fields.
//
Hide Grid Column(FC Grid, GC CustomerItem Number)
// SAR 6392631Begin
Hide Grid Column(FC Grid, GC Customer Item Revision Level)
// SAR 6392631End
FC Requested [DTBOW] = <NULL>
FC LTT2-From Status  (wf) [LTT2] = "*"
FC NXT2-Thru Status (wf) [NXT2] = "*"
FC EFT-From Date (wf) [EFT] = "*"
FC EPDJ-Thur Date (wf) [EPDJ] = "*"
//
//     Disable button on the toolbar.
//
// Process CSI PO's
//
// SAR 5468809- CSI on the Web, not setting default when null
If PO cCSIStatusRangeBasedOnOW [STBOW] is equal to "1"
     // Begin SAR 5822361
     Press Button(FC Next [STBOW])
     // SAR 6978376 Begin
Else
     // SAR 6978376 End
     Press Button(FC Last [STBOW])
     // End SAR 5822361
End If
If PO szCSIThruStatusCode [LTTR] is equal to <Blank>
Or PO szCSIThruStatusCode [LTTR] is equal to <NULL>
     FC NXT2-Thru Status (wf) [NXT2] = "*"
Else
     FC NXT2-Thru Status (wf) [NXT2] = PO szCSIThruStatusCode [LTTR]
End If
If PO szCSIFromStatusCode [NXTEV1] is equal to <Blank>
Or PO szCSIFromStatusCode [NXTEV1] is equal to <NULL>
     FC LTT2-From Status  (wf) [LTT2] = "*"
Else
     FC LTT2-From Status  (wf) [LTT2] = PO szCSIFromStatusCode [NXTEV1]
End If
FC Requested [DTBOW] = PO cCSIDteRangeBasedOnOW [DTBOW]
//
FC Extend Back Order Quantity [EBOQ] = "0"
// As If Processing
If PO CurrencyCodeFrom [CRCD] is equal to <Blank>
Or PO CurrencyCodeFrom [CRCD] is equal to <NULL>
Or PO CurrencyCodeFrom [CRCD] is equal to "0"
     Hide Control(FC As If Currency [CRCD])
     Hide Grid Column(FC Grid, GC As IfUnit Price)
     Hide Grid Column(FC Grid, GC As IfExtended)
Else
     FC As If Currency [CRCD] = PO CurrencyCodeFrom [CRCD]
End If
If PO DateTransactionJulian [TRDJ] is equal to <Blank>
Or PO DateTransactionJulian [TRDJ] is equal to <NULL>
     PO DateTransactionJulian [TRDJ] = date_today()
End If
//
If PO cShoppingCartMode [CART] is equal to "1"
     PpatGetUserIdAddressNumber(B0200098.PpatGetUserIdAddressNumber)
          UNDEFINED <> szUserId [USER]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          UNDEFINED <> szErrorMessageId [DTAI]
          UNDEFINED <> cSuppressErrorMessage [EV01]
     Disable Control(FC Long Address Number [ALKY])
     Disable Control(FC Long Address Number-Shipto [ALKY])
     FC Customer Item [DSPSUB] = "1"
     FC Extend Back Order Quantity [EBOQ] = "1"
     Hide Tab Page(FC Tab Control79, TP Additional Selections)
     Set Grid Column Heading(FC Grid, GC 2nd ItemNumber, "Item Number")
     Set Grid Column Heading(FC Grid, GC Next StatusDescription, "Status Description")
     Set Form Title("Order Status")
     Set Tab Page Text(FC Tab Control79, TP Customer Service Inquiry, "Order Search")
     // SAR 4966507
Else
     Hide Control(FC Search using your order number, item number, or other information you have about the order.)
     Hide Control(FC Check the status of your order here.)
     Hide Grid Column(FC Grid, GC Next StatusDescription)
     Hide Grid Column(FC Grid, GC Ship ToDescription)
     // SAR 4966507
End If
//
// ==Store and Forward mode
If PO cStoreAndForwardMode [SO15] is equal to <Blank>
Or PO cStoreAndForwardMode [SO15] is equal to <NULL>
     Disable Control(HC &Trans Control)
End If
// SAR#2439041
// Hide Status if PO status set to HIDE
If PO cDisableStatusCodes [EV05] is equal to "2"
     Hide Grid Column(FC Grid, GC NextStatus)
     Hide Grid Column(FC Grid, GC LastStatus)
End If
//
// SAR 3283510, Moved here from Post Dialog Event , Initialize the Grid Total
VA frm_Grid_Total_AAP [AAP] = "0"
VA frm_Foreign_Total_AM0 [AM0] = "0"
//
// SAR 4925959 if DUAL UOM enhancement is not on hide DUAL UOM and DUAL Quantity
//
VerticalFeature(B4002670.VerticalFeature)
     "01" -> szVerticalEnhancement [CACTN]
     VA frm_cModuleExistance_MEOW [MEOW] <- cEnhancementExistance [MEOW]
//
If VA frm_cModuleExistance_MEOW [MEOW] is not equal to "1"
     Hide Grid Column(FC Grid, GC DualUoM)
     Hide Grid Column(FC Grid, GC DualQuantity)
End If
// SAR#5242682
GetDistributionConstants(B4000530.GetDistributionConstants)
     UNDEFINED <> cUoMConversionByBranch [BUMC]
     UNDEFINED <> cSupplementalDataByBranch [BSDB]
     UNDEFINED <> cAllowDuplicateLots [ULOT]
     UNDEFINED <> cUpdateAverageCost [AVGC]
     UNDEFINED <> cAdvancedSalesPricing [ADVP]
     UNDEFINED <> cSalesPriceRetrievalUoM [UMB1]
     UNDEFINED <> cSalesPriceBasedOnDate [CP01]
     UNDEFINED <> cSymbolToIdentifyVariable [CP02]
     UNDEFINED <> cSymbolToIdentifyUoM [CP03]
     UNDEFINED <> cSymbolToIdentifyCurrency [CP04]
     UNDEFINED <> cSymbolToIdentifyColumn [CP05]
     UNDEFINED <> cPurchasePriceRetrivalUOM [CP06]
     UNDEFINED <> cSystemConstants07 [CP07]
     UNDEFINED <> cSystemConstants08 [CP08]
     UNDEFINED <> cSystemConstants09 [CP09]
     UNDEFINED <> cSystemConstantsCode10 [CP10]
     UNDEFINED <> cControlCodeECS [CCTL]
     UNDEFINED <> cShipAscendingDateRule [SADR]
     UNDEFINED <> cAdvancedProcurementPricing [CP11]
     UNDEFINED <> cScientificRounding [CP12]
     UNDEFINED <> cRequirePriceApproval [CP13]
     UNDEFINED <> cProcurementCostBasedOnDate [CP14]
     UNDEFINED <> cSystemConstantsCode15 [CP15]
     UNDEFINED <> cUseAuditLogForSalesOrderC [CP16]
     UNDEFINED <> cReasonCodeRequired [CP17]
     UNDEFINED <> cApprovalProcessRequired [CP18]
     UNDEFINED <> cUseCustomerSet [CP19]
     UNDEFINED <> cPrepaymentProcessing [CP20]
     UNDEFINED <> cCriticalHoldDecoupling [CHDC]
     UNDEFINED <> cEnhancedLotProcessing [ELOT]
     UNDEFINED <> cAdjustmentRetrievalMethod [AJRM]
     UNDEFINED <> szOrganizationTypeStructur [OSTP]
     UNDEFINED <> cPricingAddressFlag [PRAD]
     UNDEFINED <> cPreferenceRetrievalUOM [CP22]
     UNDEFINED <> szPreferenceSchedule [PRSN]
     UNDEFINED <> cPromotionsMultipleResolut [PMRF]
     VA frm_cPromotionsSystemFlag [PRSF] <- cPromotionsSystemFlag [PRSF]
     UNDEFINED <> cFlagForFuture23 [CP23]
     UNDEFINED <> cFlagForFuture24 [CP24]
     UNDEFINED <> cFlagForFuture25 [CP25]
     UNDEFINED <> cFlagForFuture26 [CP26]
     UNDEFINED <> cFlagForFuture27 [CP27]
If VA frm_cPromotionsSystemFlag [PRSF] is not equal to("1","2")
     Hide Grid Column(FC Grid, GC PromotionID)
End If
//
// Hide Revision Number if Audit Logging of off
//
If PO cUseAuditLog [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC RevNbr)
     Hide Grid Column(FC Grid, GC RevisionReason)
     Disable Control(HC Revision History)
End If
// Sar 5603687 - Hiding the Price related field as in sales order revisions form
// when the pocessing option behind P4210 "DisableorHidePrice" is set to 2.
If PO cDisableorHidePrice [EV04] is equal to "2"
     Hide Grid Column(FC Grid, GC UnitPrice)
     Hide Grid Column(FC Grid, GC ExtendedAmount)
     Hide Grid Column(FC Grid, GC As IfUnit Price)
     Hide Grid Column(FC Grid, GC ForeignUnit Price)
     Hide Grid Column(FC Grid, GC Foreign ExtendedAmount)
End If
// Sar 5603687 - End
//
//    BUG# 11904715 - PMPN Enhancements
//    Hide PMPN if PMPN Module Existance is turned off
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY31MP" -> szDataItem [DTAI]
     VA frm_cPMPNInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cPMPNInstalled_EV01 [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Project MfgProduction Number)
End If

=============================================
Form: Customer Service Inquiry - W4210E
Event: Post Dialog is Initialized
Event GUID: f57e0730-a23a-11d0-a204-0000f6728a56
=============================================
VA frm_Unit [DL01] = " Unit Price"
VA frm_Extended [DL01] = " Extended Amount"
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Disable Control(HC &Credit Check)
     Disable Control(HC A&vailability)
     Disable Control(HC Supply/&Demand)
     Disable Control(HC &WO Revisions)
     Disable Control(HC Sales &Ledger)
     Disable Control(HC &Header Attachment)
     Disable Control(HC &Detail Attachment)
     Disable Control(HC Print Pick &Slip)
     Disable Control(HC W&ork with Shipment)
     Disable Control(HC Ship&ment Status)
     Disable Control(HC Related &PO)
     //
End If
//
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     // SAR 3178921 - Pass Back PrevRecord Flag,  UserAN8, JOBS and CTID etc.
     CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
          VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
          VA frm_szSOEVersion_VERS [VERS] <> szVersion [VERS]
          VA frm_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
          UNDEFINED <> szCostCenter [MCU]
          UNDEFINED <> mnAddressNumberShipTo [SHAN]
          UNDEFINED -> cActionCode [ACTN]
          UNDEFINED <> mnAddressNumberParent [PA8]
          UNDEFINED <> mnSoldToAddressNumber [AN8]
          VA frm_CTID_szComputerID [CTID] <> szComputerID [CTID]
          UNDEFINED <> mnLineNumIncrement [LINN]
          VA frm_cCSSPrevRecordFound_EV01 [EV01] <- cPreviousSessionFound [EV01]
          UNDEFINED <> cGenericChar_EV01 [EV01]
          UNDEFINED <> szGenericString_DL01 [DL01]
          UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
          UNDEFINED <> szUserReservedCode [URCD]
          UNDEFINED <> mnUserReservedAmount [URAT]
          UNDEFINED <> jdUserReservedDate [URDT]
          UNDEFINED <> mnUserReservedNumber [URAB]
          UNDEFINED <> szUserReservedReference [URRF]
          VA frm_szCSSShipToStrucType_OSTP [OSTP] <> szShipToStructureType [OSTP]
          UNDEFINED <> szBaseCurrencyCode [CRDC]
          UNDEFINED <> szCustomerCurrencyCode [CRCD]
     //
     If VA frm_cCSSPrevRecordFound_EV01 [EV01] is equal to "1"
          Call App:P4210NT Form:W4210NTB Version:ZJDE0001
               VA frm_mnUserABNumber_AN8 [AN8] -> mnUserAddressNumber [AN8]
               VA frm_CTID_szComputerID [CTID] -> szComputerID [CTID]
               VA frm_mnJobNumber_JOBS [JOBS] -> mnJobNumber [JOBS]
               UNDEFINED <> szProgramId [PID]
               UNDEFINED <> cUseCacheOrWF [EV01]
               VA frm_szSOEVersion_VERS [VERS] -> szVersion [VERS]
          // SAR 3257581 - if the user deletes the previous records, add record to the CSS
          // cache/workfile
          CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
               VA frm_mnUserABNumber_AN8 [AN8] <> mnUserAddressNumber [AN8]
               VA frm_szVersion_VERS [VERS] <> szVersion [VERS]
               VA frm_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
               UNDEFINED <> szCostCenter [MCU]
               UNDEFINED <> mnAddressNumberShipTo [SHAN]
               UNDEFINED -> cActionCode [ACTN]
               UNDEFINED <> mnAddressNumberParent [PA8]
               UNDEFINED <> mnSoldToAddressNumber [AN8]
               VA frm_CTID_szComputerID [CTID] <> szComputerID [CTID]
               UNDEFINED <> mnLineNumIncrement [LINN]
               VA frm_cCSSPrevRecordFound_EV01 [EV01] <- cPreviousSessionFound [EV01]
               UNDEFINED <> cGenericChar_EV01 [EV01]
               UNDEFINED <> szGenericString_DL01 [DL01]
               UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
               UNDEFINED <> szUserReservedCode [URCD]
               UNDEFINED <> mnUserReservedAmount [URAT]
               UNDEFINED <> jdUserReservedDate [URDT]
               UNDEFINED <> mnUserReservedNumber [URAB]
               UNDEFINED <> szUserReservedReference [URRF]
               VA frm_szCSSShipToStrucType_OSTP [OSTP] <> szShipToStructureType [OSTP]
               UNDEFINED <> szBaseCurrencyCode [CRDC]
               UNDEFINED <> szCustomerCurrencyCode [CRCD]
          // End SAR 3257581
     End If
     //
     // SAR 4169356 - don't use default branch/plant when selecting CSS orders
     FC Business Unit [MCU] = <NULL>
End If
//
If PO cStoreAndForwardMode [SO15] is equal to <Blank>
Or PO cStoreAndForwardMode [SO15] is equal to <NULL>
     // == Disable" Batch Transaction" and "Transaction Control" for Sales Order Entr
     // mode
End If
//
//     Execute AUTO-FIND if any selection criterion is passed in from
//     interconnection.
//
If FI Documentorderinvoicee [DOCO] is greater than "0"
Or FI Ordertype [DCTO] is not equal to <Blank>
Or FI Companykeyorderno [KCOO] is not equal to <Blank>
Or FI Reference1 [VR01] is not equal to <Blank>
Or FI Itemnounknownformat [UITM] is not equal to <Blank>
Or FI mnAddressNumber [AN8] is greater than "0"
     If FI Documentorderinvoicee [DOCO] is greater than "0"
     Or FI Ordertype [DCTO] is not equal to <NULL>
     Or FI Companykeyorderno [KCOO] is not equal to <NULL>
     Or FI Reference1 [VR01] is not equal to <NULL>
     Or FI Itemnounknownformat [UITM] is not equal to <NULL>
     Or FI mnAddressNumber [AN8] is greater than "0"
          Press Button(HC Find)
     Else
          FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
     End If
Else
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
VA frm_First_Line_EV02 [EV02] = "1"
If PO cShoppingCartMode [CART] is equal to <Blank>
Or PO cShoppingCartMode [CART] is equal to <NULL>
     VA frm_Show_Total_EV01 [EV01] = "1"
Else
     VA frm_Show_Total_EV01 [EV01] = "0"
End If
//
VA frm_ADVP_cAdv_Pricing [ADVP] = <NULL>
// As If Processing
If FC As If Currency [CRCD] is greater than <Blank>
     VA frm_AsIfUnit [DL01] = concat([FC As If Currency [CRCD]], [VA frm_Unit [DL01]])
     VA frm_AsIfExtended [DL01] = concat([FC As If Currency [CRCD]], [VA frm_Extended [DL01]])
     Set Grid Column Heading(FC Grid, GC As IfUnit Price, VA frm_AsIfUnit)
     Set Grid Column Heading(FC Grid, GC As IfExtended, VA frm_AsIfExtended)
End If

=============================================
Form: Customer Service Inquiry - W4210E
Event: Grid Record is Fetched
Event GUID: f57df5cc-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_AsIfExtended [UPRC]
----------------------------------------
FC EV09-Gen Text Row [EV09] = <Blank>
Media Objects(GT4211A   , <Exist>, FC EV09-Gen Text Row, BC Document (Order No, Invoice, etc.), BC Order Type, BC Order Company (Order Number), BC Line Number)
If FC EV09-Gen Text Row [EV09] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
End If
//
//
// Process CSI POs
//
If FC Extend Back Order Quantity [EBOQ] is equal to "1"
Or PO cCSIDisplayTextLines [EV01] is not equal to "1"
     If BC Line Type (F4211.0) [LNTY] is not equal to VA frm_szLineTypePrevious_LNTY [LNTY]
          If BC Line Type (F4211.0) [LNTY] is not equal to <Blank>
               GetLineTypeConstants(B4000260.GetLineTypeConstants)
                    BC Line Type (F4211.0) [LNTY] -> szLineType [LNTY]
                    UNDEFINED <> szLineTypeDesc [LNDS]
                    UNDEFINED <> szLineTypeDesc2 [LND2]
                    UNDEFINED <> cGLInterface [GLI]
                    VA frm_cInventoryInterface_IVI [IVI] <- cInventoryInterface [IVI]
                    UNDEFINED <> cARInterface [ARI]
                    UNDEFINED <> cAPInterface [API]
                    UNDEFINED <> cReverseSign [RSGN]
                    VA frm_Text_Line_EV09 [EV09] <- cTextLine [TXYN]
                    UNDEFINED <> cIncludeSalesCOGS [PRFT]
                    UNDEFINED <> cIncludeCashDiscount [CDSC]
                    UNDEFINED <> cIncludeTax1 [TX01]
                    UNDEFINED <> cIncludeTax2 [TX02]
                    UNDEFINED <> szGLOffset [GLC]
                    UNDEFINED <> cPrintDocument1 [PDC1]
                    UNDEFINED <> cPrintDocument2 [PDC2]
                    UNDEFINED <> cPrintDocument3 [PDC3]
                    UNDEFINED <> cRecordVariance [PDC4]
                    UNDEFINED <> cIncludeTotalDocument1 [IDC1]
                    UNDEFINED <> cIncludeTotalDocument2 [IDC2]
                    UNDEFINED <> cIncludeTotalDocument3 [IDC3]
                    UNDEFINED <> cIncludeTotaldocument4 [IDC4]
                    UNDEFINED <> cIncludeColumnSalesJournal [CSJ]
                    UNDEFINED <> szOrderType [DCTO]
                    UNDEFINED <> cApplyRetainage [ART]
                    UNDEFINED <> cApplyFreight [AFT]
                    UNDEFINED <> cGenerateWorkOrder [GWO]
                    UNDEFINED <> cSuppressErrorMessage [EV01]
                    UNDEFINED <> cErrorCode [ERR]
                    UNDEFINED <> cCallMaterialsIssue [CMI]
               VA frm_szLineTypePrevious_LNTY [LNTY] = BC Line Type (F4211.0) [LNTY]
          End If
     End If
End If
//
If VA frm_Text_Line_EV09 [EV09] is equal to "Y"
And PO cCSIDisplayTextLines [EV01] is not equal to "1"
     Suppress Grid Line(FC Grid)
     Stop Processing
End If
//
// If CSIDisplayBackorderOrCanceled = 1 -> display backordered
// If CSIDisplayBackorderOrCanceled = 2 -> display canceled
// If CSIDisplayBackorderOrCanceled = 3 -> display both
// If CSIDisplayBackorderOrCanceled = 4 -> display neither
//
If PO cCSIDisplayBackorderOrCaneled [EV02] is not equal to "3"
     If PO cCSIDisplayBackorderOrCaneled [EV02] is not equal to "1"
          If BC Quantity Shipped (F4211.0) [SOQS] is equal to "0"
          And BC Units - Quantity Canceled/Scrapped (F4211.0) [SOCN] is equal to "0"
               If BC Units - Qty Backordered/Held (F4211.0) [SOBK] is not equal to "0"
                    Suppress Grid Line(FC Grid)
                    Stop Processing
               End If
          End If
     End If
     If PO cCSIDisplayBackorderOrCaneled [EV02] is not equal to "2"
          If BC Quantity Shipped (F4211.0) [SOQS] is equal to "0"
          And BC Units - Qty Backordered/Held (F4211.0) [SOBK] is equal to "0"
               If BC Units - Quantity Canceled/Scrapped (F42119.0) [SOCN] is not equal to "0"
               Or BC Units - Quantity Canceled/Scrapped (F4211.0) [SOCN] is not equal to "0"
                    Suppress Grid Line(FC Grid)
                    Stop Processing
               End If
          End If
     End If
End If
// SAR #2031409
If VA frm_Grid_Calc_Clear_INT01 [INT01] is equal to "1"
     VA frm_Grid_Total_AAP [AAP] = "0"
     VA frm_Foreign_Total_AM0 [AM0] = "0"
     VA frm_Grid_Calc_Clear_INT01 [INT01] = "0"
End If
//
//
//     Retrieve the hold code and base company from the SO Header record (F4201)
//
If BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO] is not equal to FC DOCZ-Prev Order Num [DOCZ]
Or BC Order Type (F4211.0) [DCTO] is not equal to FC DCT4-Prev Order Type [DCT4]
Or BC Order Company (Order Number) (F4211.0) [KCOO] is not equal to FC EKCO-Prev Order Co [EKCO]
     GetF4201OrderInfo(B4200200.GetF4201OrderInfo)
          BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO] -> mnOrderNumber [DOCO]
          BC Order Type (F4211.0) [DCTO] -> szOrderType [DCTO]
          BC Order Company (Order Number) (F4211.0) [KCOO] -> szKeyCompany [KCOO]
          UNDEFINED <> szTakenBy [TKBY]
          UNDEFINED <> szErrorMesgID [DTAI]
          "1" -> cSuppressErrorMesg [EV01]
          UNDEFINED <> mnOrderTotal [OTOT]
          UNDEFINED <> mnForeignOrderTotal [FAP]
          FC MMCO-Base Company [MMCO] <- szCompany [CO]
          UNDEFINED <> szCustomerPO [VR01]
          FC HOLD3-Hold Code (wf) [HOLD3] <- szHoldCode [HOLD]
          UNDEFINED <> mnSoldToAddrNumber [AN8]
          UNDEFINED <> mnShipToAddrNumber [SHAN]
          UNDEFINED <> szPaymentTermsCode [PTC]
          UNDEFINED <> szDisplayWeightUOM [WUMD]
          UNDEFINED <> szDisplayVolumeUOM [VUMD]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szCurrencyCodeFrom [CRCD]
          UNDEFINED <> mnCurrencyConvRate [CRR]
          UNDEFINED <> szTaxArea1 [TXA1]
          UNDEFINED <> szTaxExplanationCode1 [EXR1]
          UNDEFINED <> szVendorReference2 [VR02]
          UNDEFINED <> cBackOrderedYN [BACK]
          UNDEFINED <> jdRequestedDate [DRQJ]
          UNDEFINED <> jdTransactionDate [TRDJ]
          UNDEFINED <> jdPromisedDelDate [PDDJ]
          UNDEFINED <> mnCarrierNumber [CARS]
          UNDEFINED <> mnBuyerNumber [ANBY]
          UNDEFINED <> szRouteCode [ROUT]
          UNDEFINED <> szStopCode [STOP]
          UNDEFINED <> szZoneNumber [ZON]
          UNDEFINED <> mnTradeDiscount [TRDC]
          UNDEFINED <> mnCommissionCode1 [CMC1]
          UNDEFINED <> mnCommissionCode2 [CMC2]
          UNDEFINED <> mnCommissionRate1 [CMR1]
          UNDEFINED <> mnCommissionRate2 [CMR2]
          UNDEFINED <> jdOriginalPromiseDate [OPDJ]
          UNDEFINED <> cSubstitutesAllowedYN [SBAL]
          UNDEFINED <> cPriorityProcessing [PRIO]
          UNDEFINED <> szPrintMesg [INMG]
          UNDEFINED <> szTaxExemptionCode [TXCT]
          UNDEFINED <> szDeliveryInstrns1 [DEL1]
          UNDEFINED <> szDeliveryInstrns2 [DEL2]
          UNDEFINED <> szFreightHandlingCode [FRTH]
          UNDEFINED <> mnJobNumber [JOBS]
          UNDEFINED <> szComputerID [CTID]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TCID]
     FC DOCZ-Prev Order Num [DOCZ] = BC Document (Order No, Invoice, etc.) (F4211.0) [DOCO]
     FC DCT4-Prev Order Type [DCT4] = BC Order Type (F4211.0) [DCTO]
     FC EKCO-Prev Order Co [EKCO] = BC Order Company (Order Number) (F4211.0) [KCOO]
End If
GC Hd Cd [HOLD] = FC HOLD3-Hold Code (wf) [HOLD3]
// SAR 2410994
If BC Status - In Warehouse (F4211.0) [SWMS] is equal to "I"
     GC Hd Cd [HOLD] = "**"
End If
//
//     If currency is on, retrieve the base currency code using the header
//     branch/plant.
//
If SL CurrencyProcessing is not equal to "N"
     If BC Business Unit - Header (F4211.0) [EMCU] is equal to FC MCUZ-Prev Blant (wf) [MCUZ]
          GC Base Curr [CRDC] = FC CCT1-Base Currency [CCT1]
     Else
          FC MCUZ-Prev Blant (wf) [MCUZ] = BC Business Unit - Header (F4211.0) [EMCU]
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               BC Order Company (Order Number) (F4211.0) [KCOO] -> szCompany [CO]
               FC CCT1-Base Currency [CCT1] <- szCurrencyCode [CRCD]
               UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
               UNDEFINED <> cPostByCurrency [ABIN]
          GC Base Curr [CRDC] = FC CCT1-Base Currency [CCT1]
     End If
End If
// As If Processing
// Sar 5253963 - Add a codition if As if currency is not equal to Base currency
If FC As If Currency [CRCD] is greater than <Blank>
And GC Base Curr [CRDC] is greater than <Blank>
And FC As If Currency [CRCD] is not equal to GC Base Curr [CRDC]
     // Sar 5253963 End
     // SAR 2824759
     If BC Amount - Price per Unit (F4211.0) [UPRC] is not equal to "0"
     Or BC Amount - Extended Price (F4211.0) [AEXP] is not equal to "0"
          GetExchRate(B0000033.GetExchRate)
               FC As If Currency [CRCD] -> szCurrencyCodeFrom [CRCD]
               GC Base Curr [CRDC] -> szCurrencyCodeTo [CRDC]
               UNDEFINED <> mnAddressNumber [AN8]
               PO DateTransactionJulian [TRDJ] -> jdTransactionDate [DGJ]
               VA frm_mnCurrConvRateMult [TRR1] <- mnCurrConvRateMult [CRR]
               VA frm_mnCurrConvRateDiv [TRR1] <- mnCurrConvRateDiv [CRRD]
               UNDEFINED <> jdDateEffectiveRates [EFT]
               UNDEFINED <> mnDefaultRate [CRR]
               VA frm_mnTriangulationRate1 [TRR1] <- mnTriangulationRate1 [CRRD]
               VA frm_mnTriangulationRate2 [TRR1] <- mnTriangulationRate2 [CRR]
               VA frm_cConversionMethod [EV20] <- cConversionMethod [CRCM]
               UNDEFINED <> jdOverrideEffectiveDate [EFT]
          If VA frm_cConversionMethod [EV20] is equal to "Y"
               VA frm_mnXRate [TRR1] = VA frm_mnCurrConvRateMult [TRR1]
          Else
               If VA frm_cConversionMethod [EV20] is equal to "Z"
                    VA frm_mnXRate [TRR1] = VA frm_mnCurrConvRateDiv [TRR1]
               Else
                    VA frm_mnXRate [TRR1] = "0"
                    VA frm_cConversionMethod [EV20] = <Blank>
               End If
          End If
          //
          // SAR 2725566
          If VA frm_mnXRate [TRR1] is greater than "0"
          Or VA frm_mnTriangulationRate1 [TRR1] is greater than "0"
          And VA frm_mnTriangulationRate2 [TRR1] is greater than "0"
               If BC Amount - Price per Unit (F4211.0) [UPRC] is not equal to "0"
                    CurrencyConvForAndDom(B0000027.CurrencyConvForAndDom)
                         VA frm_mnXRate [TRR1] -> mnCurrencyConverRate [CRR]
                         BC Amount - Price per Unit (F4211.0) [UPRC] <> mnDomesticAmount [AG]
                         GC As If Unit Price [UPRC] <> mnForeignAmount [ACR]
                         UNDEFINED <> mnNoRoundDomAmount [MN29D9]
                         UNDEFINED <> mnNoRoundForAmount [MN29D9]
                         VA frm_mnTriangulationRate1 [TRR1] -> mnTriangulationRate1 [CRR]
                         VA frm_mnTriangulationRate2 [TRR1] -> mnTriangulationRate2 [CRR]
                         VA frm_cConversionMethod [EV20] -> cCurrencyConversionMethod [CRCM]
                         UNDEFINED <> jdTransactionDate [EFT]
               Else
                    GC As If Unit Price [UPRC] = "0"
               End If
               If BC Amount - Extended Price (F4211.0) [AEXP] is not equal to "0"
                    // SAR 3601397 Format As If Extended Price on Currency Decimal
                    CurrencyConvForAndDom(B0000027.CurrencyConvForAndDom)
                         VA frm_mnXRate [TRR1] -> mnCurrencyConverRate [CRR]
                         BC Amount - Extended Price (F4211.0) [AEXP] <> mnDomesticAmount [AG]
                         GC As If Extended [AAP] <> mnForeignAmount [ACR]
                         UNDEFINED <> mnNoRoundDomAmount [MN29D9]
                         VA evt_AsIfExtended [UPRC] <- mnNoRoundForAmount [MN29D9]
                         VA frm_mnTriangulationRate1 [TRR1] -> mnTriangulationRate1 [CRR]
                         VA frm_mnTriangulationRate2 [TRR1] -> mnTriangulationRate2 [CRR]
                         VA frm_cConversionMethod [EV20] -> cCurrencyConversionMethod [CRCM]
                         UNDEFINED <> jdTransactionDate [EFT]
                    DecimalTriggerGetByCurrency(B1100006.DecimalTriggerGetByCurrency)
                         FC As If Currency [CRCD] -> szCurrencyCode [CRCD]
                         VA evt_AsIfExtended [UPRC] <> mnDomOrFornAmount01 [AN01]
                         UNDEFINED <> mnDomOrFornAmount02 [AN02]
                         UNDEFINED <> mnDomOrFornAmount03 [AN03]
                         UNDEFINED <> mnDomOrFornAmount04 [AN04]
                         UNDEFINED <> mnDomOrFornAmount05 [AN05]
                         UNDEFINED <> mnDomOrFornAmount06 [AN06]
                         UNDEFINED <> mnDomOrFornAmount07 [AN07]
                         UNDEFINED <> mnDomOrFornAmount08 [AN08]
                         UNDEFINED <> mnDomOrFornAmount09 [AN09]
                         UNDEFINED <> mnDomOrFornAmount10 [AN10]
                         UNDEFINED <> mnDomOrFornAmount11 [AN11]
                         UNDEFINED <> mnDomOrFornAmount12 [AN12]
                         UNDEFINED <> mnDomOrFornAmount13 [AN13]
                         UNDEFINED <> mnDomOrFornAmount14 [AN14]
                         UNDEFINED <> mnDomOrFornAmount15 [AN15]
                         UNDEFINED <> mnDomOrFornAmount16 [AN16]
                         UNDEFINED <> mnDomOrFornAmount17 [AN17]
                         UNDEFINED <> mnDomOrFornAmount18 [AN18]
                         UNDEFINED <> mnDomOrFornAmount19 [AN19]
                         UNDEFINED <> mnDomOrFornAmount20 [AN20]
                         UNDEFINED <> mnDomOrFornAmount21 [AN21]
                         UNDEFINED <> mnDomOrFornAmount22 [AN22]
                         UNDEFINED <> mnDomOrFornAmount23 [AN23]
                         UNDEFINED <> mnDomOrFornAmount24 [AN24]
                         UNDEFINED <> mnDomOrFornAmount25 [AN25]
                         UNDEFINED <> mnDomOrFornAmount26 [AN26]
                         UNDEFINED <> mnDomOrFornAmount27 [AN27]
                         UNDEFINED <> mnDomOrFornAmount28 [AN28]
                         UNDEFINED <> mnDomOrFornAmount29 [AN29]
                         UNDEFINED <> mnDomOrFornAmount30 [AN30]
                    GC As If Extended [AAP] = VA evt_AsIfExtended [UPRC]
               Else
                    GC As If Extended [AAP] = "0"
               End If
          End If
     Else
          GC As If Unit Price [UPRC] = "0"
          GC As If Extended [AAP] = "0"
     End If
End If

=============================================
Form: Customer Service Inquiry - W4210E
Event: Write Grid Line-Before
Event GUID: f57df5cd-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnPreviousShipTo_SHAN [SHAN]
evt_szLocationFileFormat_LOCN [LOCN]
----------------------------------------
//                            SAR REVISION LOG
// SAR #                      PROGRAMMER                     DATE
// 3791522               VK6272082                           02/16/00
// 5412021               NR7030835                          10/26/01
//
//     Calculate the open quantity and amount for the line.
//
// SAR 5139301  - Condition on the Manufacturing Variance Record Flag to
// prevent the loading of sales detail lines crated by the manufacturing
// system.
If BC Manufacturing Variance Accounting Flag (F4211.0) [SO16] is equal to "1"
     Hide Grid Row(FC Grid,  <Currently Selected Row>)
End If
//
// OFW - For an OFW order (alloc flag in F4211 actiavated) the total quantity
// of the order will be the SOQS + SONE.
If BC Allocation Process Flag (F4211.0) [ALLOC] is equal to "1"
     GC Quantity  [QT2] = [BC Quantity Shipped (F4211.0) [SOQS]]+[BC Units - Future Quantity Committed (F4211.0) [SONE]]
Else
     GC Quantity  [QT2] = [BC Quantity Shipped (F4211.0) [SOQS]]+[BC Units - Qty Backordered/Held (F4211.0) [SOBK]]
End If
//
// Begin SAR 4501179
If PO cDisableorHidePrice [EV04] is equal to "2"
     Hide Grid Column(FC Grid, GC ExtendedAmount)
End If
// End SAR 4501179
If FC Extend Back Order Quantity [EBOQ] is equal to "1"
And BC Units - Qty Backordered/Held (F4211.0) [SOBK] is not equal to "0"
     If VA frm_cInventoryInterface_IVI [IVI] is equal to ("D","Y")
          GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
               BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
               VA frm_szPrimaryUOM_UOM [UOM] <- szPrimaryUOM [UOM1]
               "1" -> cSuppressErrorMessage [EV01]
               VA frm_StockingType_STKT [STKT] <- cStockingType [STKT]
               VA frm_szStdUOMConversion_TFLA [TFLA] <- szStandardUOMConversion [TFLA]
     End If
     If BC Unit of Measure as Input (F4211.0) [UOM] is not equal to BC Unit of Measure - Pricing (F4211.0) [UOM4]
          GetItemUoMConversionFactor(B4000520.GetItemUoMConversionFactor)
               BC Business Unit (F4211.0) [MCU] -> szBranchPlant [MCU]
               BC Unit of Measure as Input (F4211.0) [UOM] -> szFromUnitOfMeasure [UOM]
               BC Unit of Measure - Pricing (F4211.0) [UOM4] -> szToUnitOfMeasure [RUM]
               GC Quantity  [QT2] -> mnQuantityToConvert [QTY]
               VA frm_cInventoryInterface_IVI [IVI] -> cInventoryInterfaceFlag [IVI]
               "1" -> cSuppressErrorMsg [EV01]
               BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
               VA frm_szPrimaryUOM_UOM [UOM] -> szUOMToPrimary [UOM]
               VA frm_szStdUOMConversion_TFLA [TFLA] -> szStandardUOMConversion [TFLA]
               VA frm_mnQtyFromtoToUOM_QTY [QTY] <- mnQuantityConvertedFromtoTo [QTY]
          GC Extended Amount [AAP] = [BC Amount - Price per Unit (F4211.0) [UPRC]]*[VA frm_mnQtyFromtoToUOM_QTY [QTY]]
          GC Foreign Extended Amount [AM0] = [BC Amount - Foreign Price per Unit (F4211.0) [FUP]]*[VA frm_mnQtyFromtoToUOM_QTY [QTY]]
          // Begin SAR 4372805
          If BC Item Number - Related (Kit) (F4211.0) [RLIT] is greater than <Blank>
          And BC Related Kit Component (F4211.0) [RKIT] is equal to "0"
               GC Extended Amount [AAP] = "0"
               GC Foreign Extended Amount [AM0] = "0"
          End If
          // End SAR 4372805
     Else
          GC Extended Amount [AAP] = [GC Quantity  [QT2]]*[BC Amount - Price per Unit (F4211.0) [UPRC]]
          GC Foreign Extended Amount [AM0] = [GC Quantity  [QT2]]*[BC Amount - Foreign Price per Unit (F4211.0) [FUP]]
          // Begin SAR 4372805
          If BC Item Number - Related (Kit) (F4211.0) [RLIT] is greater than <Blank>
          And BC Related Kit Component (F4211.0) [RKIT] is equal to "0"
               GC Extended Amount [AAP] = "0"
               GC Foreign Extended Amount [AM0] = "0"
          End If
          // End SAR 4372805
     End If
Else
     GC Extended Amount [AAP] = [BC Amount - Extended Price (F4211.0) [AEXP]]
     GC Foreign Extended Amount [AM0] = [BC Amount - Foreign Extended Price (F4211.0) [FEA]]
     // Begin SAR 4372805
     If BC Item Number - Related (Kit) (F4211.0) [RLIT] is greater than <Blank>
     And BC Related Kit Component (F4211.0) [RKIT] is equal to "0"
          GC Extended Amount [AAP] = "0"
          GC Foreign Extended Amount [AM0] = "0"
     End If
     // End SAR 4372805
End If
//
//     If a X-ref type is specified in the PO, retrieve customer item number.
//
If PO szCustomerItemNumberXREF [XRT4] is not equal to <Blank>
And FC Customer Item [DSPSUB] is equal to "1"
     // SAR 6392631Use wrapper to retrieve Customer Item Revision Level
     ! GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
     !      BC Item Number - Short (F4211.0) [ITM] -> mnShortItemNumber [ITM]
     !      UNDEFINED <> cCrossReferenceSymbol [SYM5]
     !      PO szCustomerItemNumberXREF [XRT4] -> szCrossReferenceType [XRT]
     !      BC Address Number (F4211.0) [AN8] -> mnAddressNumber [AN8]
     !      BC Date - Order/Transaction (F4211.0) [TRDJ] -> jdOrderDate [EXDJ]
     !      GC Customer Item Number [CITM] <- szItemNumber [UITM]
     !      UNDEFINED <> szErrorMesgID [DTAI]
     !      "1" <> cSuppressErrorMesg [EV01]
     !      UNDEFINED <> szCustomerSupplierItmNo [CITM]
     !      UNDEFINED <> szDescription1 [DSC1]
     !      UNDEFINED <> szDescription2 [DSC2]
     GetCrossItemReferenceItemWrapper(B4200180.GetCrossItemReferenceItemWrapper)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          PO szCustomerItemNumberXREF [XRT4] -> szCrossReferenceType [XRT]
          BC Address Number (F4211.0) [AN8] -> mnAddressNumber [AN8]
          BC Date - Order/Transaction (F4211.0) [TRDJ] -> jdOrderDate [EXDJ]
          GC Customer Item Number [CITM] <- szItemNumber [UITM]
          "1" -> cSuppressErrorMesg [EV01]
          GC Customer Item  Revision Level [CIRV] <- szItemRevLevelCustomerSupp [CIRV]
End If
//
//     If open amount or quantity is negative, change the field color to red.
//
If GC Extended Amount [AAP] is less than "0"
     Set Grid Font(FC Grid, <Currently Selected Row>, GC ExtendedAmount, <,Regular,10,Red>)
     Set Grid Font(FC Grid, <Currently Selected Row>, GC Foreign ExtendedAmount, <,Regular,10,Red>)
End If
If GC Quantity  [QT2] is less than "0"
     Set Grid Font(FC Grid, <Currently Selected Row>, GC Quantity, <,Regular,10,Red>)
End If
If GC Unit Price [UPRC] is less than "0"
     Set Grid Font(FC Grid, <Currently Selected Row>, GC UnitPrice, <,Regular,10,Red>)
     Set Grid Font(FC Grid, <Currently Selected Row>, GC ForeignUnit Price, <,Regular,10,Red>)
End If
//
If GC Sold To [AN8] is not equal to VA frm_mnPreviousAddrNumber_AN8 [AN8]
     GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
          GC Sold To [AN8] -> mnAddressNumber [AN8]
          VA frm_szPreviousAlphaName_ALPH [ALPH] <- szAddressBookDescription [ALPH]
     VA frm_mnPreviousAddrNumber_AN8 [AN8] = GC Sold To [AN8]
End If
GC Sold To Name [DL01] = VA frm_szPreviousAlphaName_ALPH [ALPH]
//
If GC Next Status [NXTR] is not equal to VA frm_szPreviousNextStatus_NXTR [NXTR]
     GetUDC(X0005.GetUDC)
          "NXTR" -> szDataDictionaryItem [DTAI]
          "40" -> szSystemCode [SY]
          "AT" -> szRecordTypeCode [RT]
          GC Next Status [NXTR] -> szUserDefinedCode [KY]
          UNDEFINED <> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          VA frm_szPrevNextStatusDesc_DESC [DESC] <- szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     VA frm_szPreviousNextStatus_NXTR [NXTR] = GC Next Status [NXTR]
End If
GC Next Status Description [DESC] = VA frm_szPrevNextStatusDesc_DESC [DESC]
//
// Calculate current Grid Total
If VA frm_First_Line_EV02 [EV02] is equal to "1"
     VA frm_First_Line_EV02 [EV02] = "0"
     VA frm_Currency_Code_From_CRCD [CRCD] = GC Cur Cod [CRCD]
Else
     If VA frm_Currency_Code_From_CRCD [CRCD] is not equal to GC Cur Cod [CRCD]
          VA frm_Show_Total_EV01 [EV01] = "0"
     End If
End If
VA frm_Grid_Total_AAP [AAP] = [VA frm_Grid_Total_AAP [AAP]]+[GC Extended Amount [AAP]]
VA frm_Foreign_Total_AM0 [AM0] = [VA frm_Foreign_Total_AM0 [AM0]]+[GC Foreign Extended Amount [AM0]]
//
// SAR 2676063
If PO cHideKitComponents [EV11] is equal to "1"
And BC Item Number - Related (Kit) (F4211.0) [RLIT] is not equal to <Blank>
     Hide Grid Row(FC Grid, <Currently Selected Row>)
End If
// SAR 3202062 - load the ship to description
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     If GC Ship To [SHAN] is not equal to VA evt_mnPreviousShipTo_SHAN [SHAN]
          GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
               GC Ship To [SHAN] -> mnAddressNumber [AN8]
               VA frm_szShipToName_DL01 [DL01] <- szAddressBookDescription [ALPH]
          VA evt_mnPreviousShipTo_SHAN [SHAN] = GC Ship To [SHAN]
     End If
     GC Ship To Description [DL01] = VA frm_szShipToName_DL01 [DL01]
End If
//
// SAR 3762991 - Change display for closed lines
If GC Next Status [NXTR] is equal to "999"
     // SAR 3791522 Begin - change the color to Aqua
     Set Grid Color(FC Grid, <Currently Selected Row>, <All Columns>, <Aqua>)
     // SAR 3791522 End
End If
//
// Begin SAR 5412021 - Location No Separator - NR7030835
// Calling FormatLocation,passing GC Location in the FileFormat and taking in th
// displayformat in a variable. Reassign the variable to GC Location.
//
// //Sar 6882591 – Do not call F4100 Format Location function when the
// Inventory Interface is 'N'.
// SAR 8542429 - Don't call BSFN GetLineTypeConstants & FormatLocation for the
// data which is already processed for the previous lines
If GC Ln Ty [LNTY] is not equal to VA frm_szLineTypePrevious_LNTY [LNTY]
     GetLineTypeConstants(B4000260.GetLineTypeConstants)
          GC Ln Ty [LNTY] -> szLineType [LNTY]
          VA frm_cInventoryInterface_IVI [IVI] <- cInventoryInterface [IVI]
     VA frm_szLineTypePrevious_LNTY [LNTY] = GC Ln Ty [LNTY]
End If
If VA frm_cInventoryInterface_IVI [IVI] is not equal to "N"
     If GC Location  [LOCN] is not equal to VA frm_szPreviousLocation_LOCN [LOCN]
     Or GC Branch/Plant [MCU] is not equal to VA frm_szPreviousBusinessUnit_MCU [MCU]
          VA frm_szPreviousLocation_LOCN [LOCN] = GC Location  [LOCN]
          VA frm_szPreviousBusinessUnit_MCU [MCU] = GC Branch/Plant [MCU]
          FormatLocation(B4000310.FormatLocation)
               BC Business Unit (F4211.0) [MCU] <> szCostCenter [MCU]
               VA evt_szLocationFileFormat_LOCN [LOCN] <- szDisplayFormatLocation [WL01]
               GC Location  [LOCN] -> szFileFormatLocation [LOCN]
               <Blank> <> cValidate [MODE]
               UNDEFINED <> szAisle [AISL]
               UNDEFINED <> szBin [BIN]
               UNDEFINED <> szLocation3 [LA03]
               UNDEFINED <> szLocation4 [LA04]
               UNDEFINED <> szLocation5 [LA05]
               UNDEFINED <> szLocation6 [LA06]
               UNDEFINED <> szLocation7 [LA07]
               UNDEFINED <> szLocation8 [LA08]
               UNDEFINED <> szLocation9 [LA09]
               UNDEFINED <> szLocation10 [LA10]
               "1" <> cMode [MODE]
               UNDEFINED <> idBranchConstantRecord [GENLNG]
          GC Location  [LOCN] = VA evt_szLocationFileFormat_LOCN [LOCN]
          VA frm_szPrevFormatLocation_LOCN [LOCN] = GC Location  [LOCN]
     Else
          GC Location  [LOCN] = VA frm_szPrevFormatLocation_LOCN [LOCN]
     End If
End If
// End SAR 5412021

=============================================
Form: Customer Service Inquiry - W4210E
Event: Last Grid Record Has Been Read
Event GUID: f57df5ce-a23a-11d0-a204-0000f6728a56
=============================================
// Insert the Grid Total line
If VA frm_Show_Total_EV01 [EV01] is equal to "1"
     Clear Grid Buffer(FC Grid)
     GB Extended Amount [AAP] = VA frm_Grid_Total_AAP [AAP]
     GB Foreign Extended Amount [AM0] = VA frm_Foreign_Total_AM0 [AM0]
     Get Max Grid Rows(FC Grid, VA frm_Grid_Row_Num_INT01)
     Insert Grid Buffer Row(FC Grid,  <After Last Row>,  <No>,  <Yes>,  <No>,  <No>,  <No>)
     VA frm_Grid_Row_Num_INT01 [INT01] = [VA frm_Grid_Row_Num_INT01 [INT01]]+1
     Set Grid Font(FC Grid, VA frm_Grid_Row_Num_INT01, GC Foreign ExtendedAmount, <Arial,Bold,9,Blue>)
     Set Grid Font(FC Grid, VA frm_Grid_Row_Num_INT01, GC ExtendedAmount, <Arial,Bold,9,Blue>)
     Set Grid Row Bitmap(FC Grid, VA frm_Grid_Row_Num_INT01, <Sigma>)
     // SAR #2031409
     VA frm_Grid_Calc_Clear_INT01 [INT01] = "1"
End If
//




=============================================
Form: Sales Order Header - W4210G
Event: Form Variables
Event GUID: 90932601-a23d-11d0-a204-0000f6728a56
=============================================
frm_ADVP_Adv_Pricing [ADVP]
frm_EV22_cCacheOn [EV22]
frm_Old_SoldTo [AN8]
frm_Old_HeaderBranch [EMCU]
frm_Old_ShipTo [SHAN]
frm_Old_CustomerPO [VR01]
frm_Old_PrintMessage [INMG]
frm_Old_TaxArea [TXA1]
frm_Old_TaxExplanationCode [EXR1]
frm_Old_OrderDate [TRDJ]
frm_Old_RequestedDate [DRQJ]
frm_Old_PromisedDate [PDDJ]
frm_Old_CancelDate [CNDJ]
frm_Old_PaymentTerms [PTC]
frm_Old_PaymentInstrument [RYIN]
frm_Old_Carrier [CARS]
frm_Old_Salesman1 [CMC1]
frm_Old_CommissionRate1 [CMR1]
frm_Old_Salesman2 [CMC2]
frm_Old_CommissionRate2 [CMR2]
frm_Old_ApplyFreight [AFT]
frm_Old_FreightHandlingCode [FRTH]
frm_Old_RouteCode [ROUT]
frm_Old_StopCode [STOP]
frm_Old_ZoneCode [ZON]
frm_Old_UserCode [URCD]
frm_Old_UserDate [URDT]
frm_Old_UserAmount [URAT]
frm_Old_UserAddressNumber [URAB]
frm_Old_UserReference [URRF]
frm_OnDemandHeaderToDetail [EV01]
frm_HeaderValuesChanged [EV01]
frm_TSTA_Credit_Message [TSTA]
frm_DTAI_Error_Message [DTAI]
frm_ERRC_Error_Code [ERRC]
frm_szVersion_VERS [VERS]
frm_szOrderTempSoldTo_ORTP [ORTP]
frm_szOrderTempShipTo_ORTP [ORTP]
frm_cPricePickslipYN_PLST [PLST]
frm_mnTriangulationRateFrom [MATH01]
frm_mnTriangulationRateTo [MATH01]
frm_cCurrencyConversionMethod [CRCM]
frm_cSpotRateAllowed [EV20]
frm_mnShipTo_SHAN [SHAN]
frm_cIsExcangeRateEntered_EV01 [EV01]
frm_SO15_cCMProcessEdits [SO15]
frm_cVertexActive [VVTX]
frm_szVertexCanadaCountryCode [VVCN]
frm_szSearchType [AT1]
frm_cGeoCodeValid [EV01]
frm_szCompany_CO [CO]
frm_SuppressProcess [MATH01]
frm_szOldPriceAdjustment_ASN [ASN]
frm_mnOldTradeDiscount_TRDC [TRDC]
frm_cHeaderText_ATXT [ATXT]
frm_cBeginDoc_IsCalled_EV19 [EV19]
frm_mnProcessID_PEID [PEID]
frm_mnTransactionID_TCID [TCID]
frm_cDetachedMode_EV01 [EV01]
frm_cSalesOrderStatus15 [SO15]
frm_szHoldCodeType_CTYP [CTYP]
frm_cReviewHeaderWarningIssued [EV01]
frm_cOverrideFreight_AFT [AFT]
frm_CompareSoldTo [ALKY]
frm_WasSoldToChanged [EV01]
frm_SoldToBSC [BSC]
frm_ShipToBSC [BSC]
frm_UseCustomerSet_CP19 [CP19]
frm_cOriginalTaxArea [TXA1]
frm_cFormActionCode_ACTN [ACTN]
frm_cIsOrderPromisingEnabled [EV01]
frm_cOPBranchPlantChanged_EV01 [EV01]
frm_cOPShipToChanged_EV01 [EV01]
frm_OPAllowSubstitutes_OPSS [OPSS]
frm_OPAllowMultiSource_OPMS [OPMS]
frm_OPPartialShipLine_OPLL [OPLL]
frm_OPPartialOrderShip_OPPL [OPPL]
frm_OPBusinessObjective_OPBO [OPBO]
frm_szPreviousHeaderBranch_MCU [MCU]
frm_mnPreviousShipTo_SHAN [SHAN]
frm_OPAllowBackorders_OPBA [OPBA]
frm_cIsOPFlagChangedInHeader [EV01]
frm_cOPSoldToChanged_EV01 [EV01]
frm_cDemandSchedReleased_DSRFU [DSRFU]
frm_cDemandSchedEnabled_MEOW [MEOW]
frm_Old_RequestedTime [DRQT]
frm_Old_ModeOfTransport [MOT]
frm_Old_ReasonCode [RCD]
frm_cCompanyChanged_EV01 [EV01]
frm_szPrevOrderCompany_KCOO [KCOO]
frm_mnDeliverTo_DVAN [DVAN]
frm_cAddressForTransport_AUFI [AUFI]
frm_cValidateApplication_Ev01 [EV01]
frm_szRReserveOrdCompany_KCOO [KCOO]
frm_szRReserveOrderType_DCTO [DCTO]
frm_mnRReserveOrderNumber_DOCO [DOCO]
frm_szGenericKey_GENKEY [GENKEY]
frm_UniqueIDRecReserve_UKID [UKID]
frm_szUniqueIDRecReserve_PID [PID]
frm_szRecordReserveErrMsg_DTAI [DTAI]
frm_szReserveName_ALPH [ALPH]
frm_szReserveAppID_PID [PID]
frm_cApparelInstalled_EV01 [EV01]
frm_cCollValidationDone_EV01 [EV01]
frm_szPrevCollection_C9COLL [C9COLL]
frm_szPrevSeasonCode_C9SEAC [C9SEAC]
frm_szPrevSeasonYear_C9SEAY [C9SEAY]
frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
frm_szCollDescription_C9DSC1 [C9DSC1]
frm_cCollValidationErrors_ERRC [ERRC]
frm_cApprlPressButtonMode_EV01 [EV01]
frm_szCollectionErrorMsg_DTAI [DTAI]
frm_cUseTaxedPrices_UTP [UTP]
frm_cSalesTaxedPrices_TPSC [TPSC]
frm_cCustomerTaxedPrices_CTXP [CTXP]
frm_cUseTaxedPricesPrev_UTP [UTP]
frm_cErrorFlag_EV01 [EV01]
frm_mnCustAddNum_AN8 [AN8]
frm_szOrderCompany_CO [CO]
frm_cCollDescSetInVA_EV01 [EV01]
frm_szPrevHeaderMCU_MCU [MCU]
frm_mnPrevAddNumb_AN8 [AN8]
frm_mnPrevShipTo_SHAN [SHAN]
frm_szBeginDocSOEMBFFlag_SOEF [SOEF]

=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df5bd-a23a-11d0-a204-0000f6728a56
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4351351                   VK6272082                 07/07/00
// 7163021                   KS5885194                 07/14/04
// 7203054                   IC8857156                   09/01/04
//
// SAR 8953108 - Apparel Enhancement
// Validate the Collection if not already validated (Note: in Update
// mode - Collection fields are disabled if they are non blank)
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If VA frm_cCollValidationDone_EV01 [EV01] is not equal to "1"
          VA frm_cApprlPressButtonMode_EV01 [EV01] = "2"
          Press Button(FC ValidateCollection)
          //
          // If Collection validation fails, throw an error and stop (Error messages are
          // returned and set here because then only they will be cleared automatically
          // when the user press OK again due to the default behaviour of OK button
          //
          If VA frm_cCollValidationErrors_ERRC [ERRC] is equal to "1"
               Set Control Error(FC Collection, VA frm_szCollectionErrorMsg_DTAI)
               Set Control Error(FC SeasonCode, VA frm_szCollectionErrorMsg_DTAI)
               Set Control Error(FC Season Year, VA frm_szCollectionErrorMsg_DTAI)
               Stop Processing
          End If
     End If
End If
//
// In Add or Change mode, if SoldTo is changed, get new Adjustment
// SAR# 8153562- Passed Company information
If VA frm_WasSoldToChanged [EV01] is equal to "1"
     GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
          FC Address Number [AN8] -> mnSoldToAddress [AN8]
          FC Adjustment Schedule [ASN] <- szAdjustmentSchedule [ASN]
          FC Order Key Company [KCOO] -> szCompany [CO]
End If
If VA frm_WasSoldToChanged [EV01] is equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
     FC Exchange Rate [CRR] = <NULL>
     FC Currency Code [CRCD] = <NULL>
     VA frm_WasSoldToChanged [EV01] = "0"
     // SAR 4958961 - changed FC Foreign to 'F'
     FC Foreign [CRRM] = "F"
     // SAR 8252991 - When Sold To is changed, blanked out Tax Expl Code to
     
     // ecalculate new value
     FC Tax Expl Code [EXR1] = "  "
End If
// SAR 8252991 - IF BP changed and company changed, the additional info
// fields are blanked out
If VA frm_cOPBranchPlantChanged_EV01 [EV01] is equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
     If VA frm_cCompanyChanged_EV01 [EV01] is equal to "1"
          VA frm_cBeginDoc_IsCalled_EV19 [EV19] = "0"
          VA frm_SuppressProcess [MATH01] = "0"
          FC Tax Rate/Area [TXA1] = "  "
          FC Tax Expl Code [EXR1] = "  "
          FC Freight Handling Code [FRTH] = "  "
          FC Route Code [ROUT] = "  "
          FC Stop Code [STOP] = "  "
          FC Zone Number [ZON] = "  "
          FC Delivery Instructions1 [DEL1] = "  "
          FC Delivery Instructions2 [DEL2] = "  "
          FC Weight Display U/M [WUMD] = "  "
          FC Volume Display U/M [VUMD] = "  "
          FC Carrier Number [CARS] = "0"
          FC Currency Code [CRCD] = "  "
          FC Payment Terms [PTC] = "  "
          FC Payment Instrument [RYIN] = "  "
     End If
End If
// SAR 2837509
If FC Order Date [TRDJ] is equal to <Blank>
Or FC Order Date [TRDJ] is equal to <NULL>
     FC Order Date [TRDJ] = date_today()
End If
//     Hide the previous order number fields after one processing cycle.
//
Hide Control(FC Previous Order Number [DOCO])
Hide Control(FC Previous Order Type [DCTO])
Hide Control(FC Prev. Order Company [EKCO])
FC Order Taken By [TKBY] = FC USER-User ID (wf) [UPMB]
//
If FC Order Number [DOCO] is equal to "0"
     FC EV18-DOCO entered [EV18] = "0"
Else
     FC EV18-DOCO entered [EV18] = "1"
End If
//
//     Call the F4211 Begin Document function to edit the sales header record.
//     Use the form mode to determine the action to be taken.
//
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
     FC ACTN:  Action Code (wk) [ACTN] = "A"
Else
     FC ACTN:  Action Code (wk) [ACTN] = "C"
End If
FC EV20:  Updated to Hdr wf [EV20] = "0"
//
// Blank Out the Exchange Rate so the BeginDoc Can retrieve it when it called
// second time unless user enter an exchange rate.
//
// When user enter an
// exchange rate, the function is going to use gerneal accounting constant to do
// the calculation.
//
If FC Exchange Rate [CRR] is greater than <Blank>
And VA frm_cIsExcangeRateEntered_EV01 [EV01] is not equal to "1"
     VA frm_cIsExcangeRateEntered_EV01 [EV01] = <NULL>
End If
//
// ***********************************************************************
// SAR 3011549 - Begin/End CHANGE
// Associated Text flag will not be passed when calling Begin Doc.
// SAR 3047875 - Begin/End CHANGE
// Use the renamed Delivery Instructions1 &2 Form Controls.
// SAR 3406866, Pass in/out PEID and TCID
// ***********************************************************************
// SAR 4558028-B9 DB Change
// SAR# 4541912 Begin, To retrieve SoldTo and ShipTo BSCs from BeginDoc.
//
// ************************************************************************
// SAR 5814943 - Begins
// SAR 6925223
// SAR 8585461 - Scenario Manager processing option removed
If PO cOrderPromising [EV01] is equal to "1"
     Enable Control(FC OP Business Objective [OPBO])
     Enable Control(FC OP Allow Multi Source [OPMS])
     Enable Control(FC OP Substitutes Allowed [OPSS])
     Enable Control(FC OP Backorders Allowed [OPBA])
     Enable Control(FC OP Partial Shipments Allowed [OPLL])
     Enable Control(FC OP Partial Order Shipments Allowed [OPPL])
End If
//     SAR 7163021 - BEGIN
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "0"
And FC ACTN:  Action Code (wk) [ACTN] is equal to "A"
     //     Change 'And' to 'Or' in all statements.
     //     Must first allow Begin Doc to default the flag values. Without this
     //     if statement, the check boxes will go into Begin Doc with 'N' and will
     //     never be originally defaulted correctly.
Else
     If VA frm_OPAllowBackorders_OPBA [OPBA] is not equal to <Blank>
     Or VA frm_OPAllowBackorders_OPBA [OPBA] is not equal to FC OP Backorders Allowed [OPBA]
          VA frm_OPAllowBackorders_OPBA [OPBA] = FC OP Backorders Allowed [OPBA]
     Else
          If VA frm_cOPBranchPlantChanged_EV01 [EV01] is equal to "1"
          Or VA frm_cOPShipToChanged_EV01 [EV01] is equal to "1"
               VA frm_OPAllowBackorders_OPBA [OPBA] = <Blank>
          End If
     End If
     If VA frm_OPAllowMultiSource_OPMS [OPMS] is not equal to <Blank>
     Or VA frm_OPAllowMultiSource_OPMS [OPMS] is not equal to FC OP Allow Multi Source [OPMS]
          VA frm_OPAllowMultiSource_OPMS [OPMS] = FC OP Allow Multi Source [OPMS]
     End If
     If VA frm_OPAllowSubstitutes_OPSS [OPSS] is not equal to <Blank>
     Or VA frm_OPAllowSubstitutes_OPSS [OPSS] is not equal to FC OP Substitutes Allowed [OPSS]
          VA frm_OPAllowSubstitutes_OPSS [OPSS] = FC OP Substitutes Allowed [OPSS]
     Else
          If VA frm_cOPShipToChanged_EV01 [EV01] is equal to "1"
               VA frm_OPAllowSubstitutes_OPSS [OPSS] = <Blank>
          End If
     End If
     If VA frm_OPPartialOrderShip_OPPL [OPPL] is not equal to <Blank>
     Or VA frm_OPPartialOrderShip_OPPL [OPPL] is not equal to FC OP Partial Order Shipments Allowed [OPPL]
          VA frm_OPPartialOrderShip_OPPL [OPPL] = FC OP Partial Order Shipments Allowed [OPPL]
     Else
          If VA frm_cOPShipToChanged_EV01 [EV01] is equal to "1"
               VA frm_OPPartialOrderShip_OPPL [OPPL] = <Blank>
          End If
     End If
     If VA frm_OPPartialShipLine_OPLL [OPLL] is not equal to <Blank>
     Or VA frm_OPPartialShipLine_OPLL [OPLL] is not equal to FC OP Partial Shipments Allowed [OPLL]
          VA frm_OPPartialShipLine_OPLL [OPLL] = FC OP Partial Shipments Allowed [OPLL]
     Else
          If VA frm_cOPShipToChanged_EV01 [EV01] is equal to "1"
               VA frm_OPPartialShipLine_OPLL [OPLL] = <Blank>
          End If
     End If
End If
//     Moved Business Objective if statement outside new if statement
If VA frm_OPBusinessObjective_OPBO [OPBO] is not equal to <Blank>
Or VA frm_OPBusinessObjective_OPBO [OPBO] is not equal to FC OP Business Objective [OPBO]
     VA frm_OPBusinessObjective_OPBO [OPBO] = FC OP Business Objective [OPBO]
Else
     If VA frm_cOPSoldToChanged_EV01 [EV01] is equal to "1"
          VA frm_OPBusinessObjective_OPBO [OPBO] = <Blank>
     End If
End If
//     SAR 7163021 - END
VA frm_cOPSoldToChanged_EV01 [EV01] = "0"
VA frm_cOPShipToChanged_EV01 [EV01] = "0"
VA frm_cOPBranchPlantChanged_EV01 [EV01] = "0"
//
// SAR 7517555 RMA  Number and RMA  Type Gets Scrubbed.
// SAR 8955602 - Retrive the UTP flag from Begin Doc if it is BLANK and retain
// the old value in another variable
VA frm_cUseTaxedPricesPrev_UTP [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
// SAR 8955612 - Passed Begin Doc SOEF variable  to BeginDoc
F4211FSBeginDoc(B4200310.F4211FSBeginDoc)
     FC JOBS-Job Num (BegDoc) [JOBS] <> mnCMJobNumber [JOBS]
     FC ACTN:  Action Code (wk) [ACTN] -> cCMDocAction [ACTI]
     VA frm_SO15_cCMProcessEdits [SO15] -> cCMProcessEdits [EV01]
     FC CTID:  Computer ID [CTID] -> szCMComputerID [CTID]
     FC ERRC-Error Code [ERRC] <- cCMErrorConditions [ERRC]
     VA frm_EV22_cCacheOn [EV22] -> cCMUpdateWriteToWF [EV02]
     "EP4210" -> szCMProgramID [PID]
     VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
     FC Order Key Company [KCOO] <> szOrderCo [KCOO]
     FC Order Number [DOCO] <> mnOrderNo [DOCO]
     FC Order Type [DCTO] <> szOrderType [DCTO]
     FC Business Unit [MCU] <> szBusinessUnit [MCU]
     BC Document Company (Original Order) (F4201.0) [OKCO] <> szOriginalOrderCo [OKCO]
     BC Original Order Number (F4201.0) [OORN] <> szOriginalOrderNo [OORN]
     BC Original Order Type (F4201.0) [OCTO] <> szOriginalOrderType [OCTO]
     FC Address Number [AN8] <> mnAddressNumber [AN8]
     FC Ship To [SHAN] <> mnShipToNo [SHAN]
     FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
     FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
     FC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
     FC Reference [VR01] <> szReference [VR01]
     FC Delivery Instructions1 [DEL1] <> szDeliveryInstructions1 [DEL1]
     FC Delivery Instructions2 [DEL2] <> szDeliveryInstructions2 [DEL2]
     FC Print Message [INMG] <> szPrintMesg [INMG]
     FC Payment Terms [PTC] <> szPaymentTerm [PTC]
     FC Payment Instrument [RYIN] <> cPaymentInstrument [RYIN]
     FC Adjustment Schedule [ASN] <> szAdjustmentSchedule [ASN]
     FC Trade Discount [TRDC] <> mnTradeDiscount [TRDC]
     FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
     FC Tax Rate/Area [TXA1] <> szTaxArea [TXA1]
     FC Certificate [TXCT] <> szCertificate [TXCT]
     VA frm_cHeaderText_ATXT [ATXT] <> cAssociatedText [ATXT]
     FC Hold Orders Code [HOLD] <> szHoldOrdersCode [HOLD]
     FC Price Pickslip [PLST] <> cPricePickListYN [PLST]
     FC Invoice Copies [INVC] <> mnInvoiceCopies [INVC]
     BC Buyer Number (F4201.0) [ANBY] <> mnBuyerNumber [ANBY]
     FC Carrier Number [CARS] <> mnCarrier [CARS]
     FC Route Code [ROUT] <> szRouteCode [ROUT]
     FC Stop Code [STOP] <> szStopCode [STOP]
     FC Zone Number [ZON] <> szZoneNumber [ZON]
     FC Freight Handling Code [FRTH] <> szFreightHandlingCode [FRTH]
     FC Apply Freight [AFT] <> cApplyFreightYN [AFT]
     FC Weight Display U/M [WUMD] <> szWeightDisplayUOM [WUMD]
     FC Volume Display U/M [VUMD] <> szVolumeDisplayUOM [VUMD]
     FC Authorization Number - Credit Approval [AUTN] <> szAuthorizationNo [AUTN]
     FC Credit/Bank Account Number [CACT] <> szCreditBankAcctNo [CACT]
     FC Expired Date Credit/Bank Acct [CEXP] <> jdCreditBankExpiredDate [CEXP]
     FC Foreign [CRRM] <> cMode [CRRM]
     FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
     FC Exchange Rate [CRR] <> mnExchangeRate [CRR]
     FC Ordered By [ORBY] <> szOrderedBy [ORBY]
     FC Order Taken By [TKBY] <> szOrderTakenBy [TKBY]
     BC User Reserved Code (F4201.0) [URCD] <> szUserReservedCode [URCD]
     BC User Reserved Date (F4201.0) [URDT] <> jdUserReservedDate [URDT]
     BC User Reserved Amount (F4201.0) [URAT] <> mnUserReservedAmnt [URAT]
     BC User Reserved Number (F4201.0) [URAB] <> mnUserReservedNo [URAB]
     BC User Reserved Reference (F4201.0) [URRF] <> szUserReservedRef [URRF]
     FC UPMJ-Date Updated [UPMJ] <> jdDateUpdated [UPMJ]
     FC USER-User ID (wf) [UPMB] <> szUserID [USER]
     FC Base Currency [CRDC] <> szWKBaseCurrency [CRDC]
     FC CM-Credit Message [CM] <- szWKCreditMesg [CM]
     FC TSTA:  Temp Credit Msg [TSTA] <- szWKTempCreditMesg [TSTA]
     FC EV19-Invalid DOCO [EV19] <- cWKInvalidSalesOrderNo [EV03]
     <Blank> <> cWKSourceOfData [EV06]
     VA frm_SuppressProcess [MATH01] -> mnWKSuppressProcess [MATH01]
     VA frm_mnTriangulationRateFrom [MATH01] <- mnTriangulationRateFrom [TRR1]
     VA frm_mnTriangulationRateTo [MATH01] <- mnTriangulationRateTo [TRR2]
     VA frm_cCurrencyConversionMethod [CRCM] <- cCurrencyConversionMethod [CRCM]
     "1" -> cRetrieveOrderNo [EV02]
     FC Pricing Group [PRGP] <> szPricingGroup [PRGP]
     VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
     VA frm_SoldToBSC [BSC] <- szSoldToBSC [BSC]
     VA frm_ShipToBSC [BSC] <- szShipToBSC [BSC]
     BC Document (Order #, Invoice, etc.) (F4201.0) [DOC1] -> mnRMANumber [DOC1]
     BC Document Type (F4201.0) [DCT4] -> szRMADocType [DCT4]
     VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
     VA frm_OPBusinessObjective_OPBO [OPBO] <> szOPBusinessObjective [OPBO]
     VA frm_OPPartialOrderShip_OPPL [OPPL] <> cOPPartialOrderShipmentAllowed [OPPL]
     VA frm_OPPartialShipLine_OPLL [OPLL] <> cOPPartialLineShipmentAllowed [OPLL]
     VA frm_OPAllowBackorders_OPBA [OPBA] <> cOPBackorderAllowed [OPBA]
     VA frm_OPAllowMultiSource_OPMS [OPMS] <> cOPMultiSourcingAllowed [OPMS]
     VA frm_OPAllowSubstitutes_OPSS [OPSS] <> cOPSubstituteAllowed [OPSS]
     FC Deliver To [DVAN] <> mnAddressNumberDeliveredTo [DVAN]
     FC Address Number - Invoiced To [ITAN] <> mnAddressNumberInvoicedTo [ITAN]
     FC Paid By [PBAN] <> mnAddressNumberPaidBy [PBAN]
     FC Forwarded To [FTAN] <> mnAddressNumberForwardedTo [FTAN]
     FC Address Number to use for Tax [AUFT] <> cAddressNumberForTax [AUFT]
     FC Address Number to use for Transportation [AUFI] <> cAddressNumberForTransport [AUFI]
     FC Requested Delivery Time [DRQT] <> mnRequestedDeliveryTime [DRQT]
     FC Mode of Trn [MOT] <> szModeOfTransport [MOT]
     FC Reason Code [RCD] <> szReasonCode [RCD]
     VA frm_cUseTaxedPrices_UTP [UTP] <> cUseTaxedPrices [UTP]
//
// SAR - 7203054 - BEGIN
// The static controls CM-CREDIT MESSAGE and TSTA: TEMP CREDIT MSG are
// losing the values after the hidden controls (CM-Credit Message and TSTA:
// Temp Credit Msg - whose associated descriptions these static controls are)
// get set with the UDC codes after Begin Doc call.
// In order to set them back, the code is set to a variable
// and GetUDC function is called to set the related description in
// the static controls.  (This is done similar to code found in Long Address
// Number - Control exited / changed inline).
VA frm_TSTA_Credit_Message [TSTA] = FC TSTA:  Temp Credit Msg [TSTA]
If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
     GetUDC(X0005.GetUDC)
          "TSTA" -> szDataDictionaryItem [DTAI]
          "00" -> szSystemCode [SY]
          "CM" -> szRecordTypeCode [RT]
          VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
          SL LanguagePreference -> szLanguagePreference [LNGP]
          FC TSTA:  TEMP CREDIT MSG [DL01] <- szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
VA frm_TSTA_Credit_Message [TSTA] = FC CM-Credit Message [CM]
If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
     GetUDC(X0005.GetUDC)
          "CM" -> szDataDictionaryItem [DTAI]
          "00" -> szSystemCode [SY]
          "CM" -> szRecordTypeCode [RT]
          VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
          SL LanguagePreference -> szLanguagePreference [LNGP]
          FC CM-CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
// 7203054 - END
FC OP Business Objective [OPBO] = VA frm_OPBusinessObjective_OPBO [OPBO]
FC OP Allow Multi Source [OPMS] = VA frm_OPAllowMultiSource_OPMS [OPMS]
FC OP Substitutes Allowed [OPSS] = VA frm_OPAllowSubstitutes_OPSS [OPSS]
FC OP Backorders Allowed [OPBA] = VA frm_OPAllowBackorders_OPBA [OPBA]
FC OP Partial Shipments Allowed [OPLL] = VA frm_OPPartialShipLine_OPLL [OPLL]
FC OP Partial Order Shipments Allowed [OPPL] = VA frm_OPPartialOrderShip_OPPL [OPPL]
// SAR 5814943 - Ends
// ************************************************************************
//
// SAR 8374058 - Begins
VA frm_mnDeliverTo_DVAN [DVAN] = FC Deliver To [DVAN]
VA frm_cAddressForTransport_AUFI [AUFI] = FC Address Number to use for Transportation [AUFI]
// SAR 8374058 - Ends
//
// 3062872 - First time begin doc is called, set this flag to "1"
If FC ERRC-Error Code [ERRC] is not equal to "2"
     VA frm_cBeginDoc_IsCalled_EV19 [EV19] = "1"
     // SAR 8955602 - If Begin Doc fetches the value for UTP flag then assign it to
     // check box
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
     And VA frm_cUseTaxedPricesPrev_UTP [UTP] is equal to <Blank>
          If VA frm_cUseTaxedPrices_UTP [UTP] is equal to "1"
               FC Use Taxed Prices [UTP] = "1"
          Else
               FC Use Taxed Prices [UTP] = "0"
          End If
     End If
End If
//
If FC Long Address Number [ALKY] is equal to <Blank>
And FC Address Number [AN8] is not equal to "0"
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          "2" -> cInputSelection [EV01]
          FC ADDRESS NUMBER [DL01] <> szNameAlpha [ALPH]
End If
// **************************************************************************
// SAR 2938828 - Begin Add
// If Ship To Address was not entered, get the value returned by Begin Doc.
// **************************************************************************
If FC Long Address Number-Shipto [ALKY] is equal to <Blank>
Or FC Long Address Number-Shipto [ALKY] is equal to <NULL>
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number-Shipto [ALKY] <- szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] -> mnAddressNumber [AN8]
          "2" -> cInputSelection [EV01]
          FC SHIP TO [DL01] <> szNameAlpha [ALPH]
End If
// SAR 2938828 - End Add
//
// **************************************************************************
// SAR 5308881 - BEGIN - Date Sensitive Customer Sets
If FC Delivered To - Long Address - ALKY [ALKY] is equal to <Blank>
Or FC Delivered To - Long Address - ALKY [ALKY] is equal to <NULL>
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Delivered To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
          FC Deliver To [DVAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
If FC Invoiced To - Long Address - ALKY [ALKY] is equal to <Blank>
Or FC Invoiced To - Long Address - ALKY [ALKY] is equal to <NULL>
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Invoiced To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
          FC Address Number - Invoiced To [ITAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
If FC Forwaded To - Long Address - ALKY [ALKY] is equal to <Blank>
Or FC Forwaded To - Long Address - ALKY [ALKY] is equal to <NULL>
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Forwaded To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
          FC Forwarded To [FTAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
If FC Paid By - Long Address - ALKY [ALKY] is equal to <Blank>
Or FC Paid By - Long Address - ALKY [ALKY] is equal to <NULL>
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Paid By - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
          FC Paid By [PBAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "2" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// SAR 5308881 - END - Date Sensitive Customer Sets
// **************************************************************************
//
// SAR 1987572
If FC ERRC-Error Code [ERRC] is not equal to "2"
     // SAR 4335537
     If VA frm_cReviewHeaderWarningIssued [EV01] is equal to "0"
          Set Control Error(HC &OK, "084X")
          VA frm_cReviewHeaderWarningIssued [EV01] = "1"
     End If
End If
//
// SAR 7012696 - If OK Button is pressed once, disable Populate Form Exit
If VA frm_cReviewHeaderWarningIssued [EV01] is equal to "1"
     Disable Control(HC &Populate)
End If
//
If FC ERRC-Error Code [ERRC] is not equal to "2"
     If FC EV19-Invalid DOCO [EV19] is equal to "1"
     And FC EV18-DOCO entered [EV18] is equal to "1"
          Set Edit Control Error(FC Order Number, "0002")
     Else
          FC EV20:  Updated to Hdr wf [EV20] = "1"
     End If
End If
//
// SAR 1987943  If Sold To and Ship To are blank disable Order Addresses exits.
// If not enable exit.  Enable Sold To and Ship to Address exits if the FC field
// is not zero.
//
If FC ERRC-Error Code [ERRC] is not equal to "2"
     If FC Address Number [AN8] is equal to "0"
     And FC Ship To [SHAN] is equal to "0"
          Disable Control(HC O&rder Address)
     Else
          Enable Control(HC O&rder Address)
          If FC Address Number [AN8] is not equal to "0"
               Enable Control(HC S&old To Customer)
          End If
          //
          If FC Ship To [SHAN] is not equal to "0"
               Enable Control(HC S&hip To Customer)
          End If
     End If
End If
//
// SAR 4351351 BEGIN
If FC ERRC-Error Code [ERRC] is not equal to "2"
     If FC Hold Orders Code [HOLD] is greater than <Blank>
          Show Control(FC This Order Placed On Hold)
          Disable Control(FC Hold Orders Code [HOLD])
          Hide Control(FC Previous Order Placed On Hold)
          FC EV16:HoldCodeFlag(WF) [EV16] = "1"
     Else
          Hide Control(FC This Order Placed On Hold)
          FC EV16:HoldCodeFlag(WF) [EV16] = "0"
     End If
End If
// SAR 4351351 BEGIN
//
//     If OK button is pressed, set flag to call the SO Detail Revisions.
//
FI Everesteventpoint01 [EV01] = "1"
//
If VA frm_cSpotRateAllowed [EV20] is equal to "1"
     Disable Control(FC Exchange Rate [CRR])
End If
// SAR# 4648630 Begin
If SV Form_ Mode is equal to CO ADD_MODE
And PO cHideCommission [EV09] is not equal to "1"
     Enable Control(HC &Header Commissions)
End If
// sar 5284989 - Tax default error
VA frm_cOriginalTaxArea [TXA1] = FC Tax Rate/Area [TXA1]

=============================================
Form: Sales Order Header - W4210G
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df5be-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cCollectionChanged_EV01 [EV01]
----------------------------------------
FC Previous Order Number [DOCO] = FC Order Number [DOCO]
FC Previous Order Type [DCTO] = FC Order Type [DCTO]
FC Prev. Order Company [EKCO] = FC Order Key Company [KCOO]
//
//     If in "update" mode & the option is set to populate header columns to the
//     detail table, then determine if any header fields have changed.
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     // SAR 6735219 - Remove condition for header B/P change
     // SAR 8973872 - Removed condition for CustomerPO change
     If PO cLoadHeaderToDetail [EV18] is equal to "1"
     Or VA frm_OnDemandHeaderToDetail [EV01] is equal to "1"
     Or VA frm_Old_SoldTo [AN8] is not equal to FC Address Number [AN8]
          VA frm_OnDemandHeaderToDetail [EV01] = "0"
          // *************************************************************************
          // SAR 2746121 - Begin/End CHANGE
          // Add Adjustment Schedule and Trade Discount on the call to
          // Determine Changed SO Header Values.
          // *************************************************************************
          // SAR 4200974-Take out CustomerPO and Skip call PreProcess Later
          // SAR 4558028-B9 DB Change
          // SAR 7620552 RCD Not Define in P40HDR
          DetermineChangedSOHeaderValues(N4201090.DetermineChangedSOHeaderValues)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Key Company [KCOO] -> szOrderKeyCompany [KCOO]
               VA frm_HeaderValuesChanged [EV01] <- cHeaderValueChanged_YN [EV01]
               VA frm_Old_SoldTo [AN8] -> mnSoldTo_Old [AN8]
               FC Address Number [AN8] -> mnSoldTo_New [AN8]
               VA frm_Old_CustomerPO [VR01] -> szCustomerPO_Old [VR01]
               FC Reference [VR01] -> szCustomerPO_New [VR01]
               VA frm_Old_HeaderBranch [EMCU] -> szHeaderBranch_Old [EMCU]
               FC Business Unit [MCU] -> szHeaderBranch_New [EMCU]
               VA frm_Old_ShipTo [SHAN] -> mnShipTo_Old [SHAN]
               FC Ship To [SHAN] -> mnShipTo_New [SHAN]
               VA frm_Old_OrderDate [TRDJ] -> jdOrderDate_Old [TRDJ]
               FC Order Date [TRDJ] -> jdOrderDate_New [TRDJ]
               VA frm_Old_RequestedDate [DRQJ] -> jdDateRequested_Old [DRQJ]
               FC Requested [DRQJ] -> jdDateRequested_New [DRQJ]
               VA frm_Old_PromisedDate [PDDJ] <> jdPromisedDeliveryDate_Old [PDDJ]
               VA frm_Old_CancelDate [CNDJ] -> jdCancelDate_Old [CNDJ]
               FC Cancel Date [CNDJ] -> jdCancelDate_New [CNDJ]
               VA frm_Old_PrintMessage [INMG] -> szPrintMessage_Old [INMG]
               FC Print Message [INMG] -> szPrintMessage_New [INMG]
               VA frm_Old_TaxExplanationCode [EXR1] -> szTaxExplanationCode_Old [EXR1]
               FC Tax Expl Code [EXR1] -> szTaxExplanationCode_New [EXR1]
               VA frm_Old_TaxArea [TXA1] -> szTaxArea_Old [TXA1]
               FC Tax Rate/Area [TXA1] -> szTaxArea_New [TXA1]
               VA frm_Old_PaymentTerms [PTC] -> szPaymentTerms_Old [PTC]
               BC Payment Terms Code (F4201.0) [PTC] -> szPaymentTerms_New [PTC]
               VA frm_Old_PaymentInstrument [RYIN] -> cPaymentInstrument_Old [RYIN]
               BC Payment Instrument (F4201.0) [RYIN] -> cPaymentInstrument_New [RYIN]
               VA frm_Old_Carrier [CARS] -> mnCarrier_Old [CARS]
               BC Carrier Number (F4201.0) [CARS] -> mnCarrier_New [CARS]
               VA frm_Old_ApplyFreight [AFT] -> cApplyFreightYN_Old [AFT]
               BC Apply Freight - Y/N (F4201.0) [AFT] -> cApplyFreightYN_New [AFT]
               VA frm_Old_FreightHandlingCode [FRTH] -> szFreightHandlingCode_Old [FRTH]
               BC Freight Handling Code (F4201.0) [FRTH] -> szFreightHandlingCode_New [FRTH]
               VA frm_Old_RouteCode [ROUT] -> szRouteCode_Old [ROUT]
               BC Route Code (F4201.0) [ROUT] -> szRouteCode_New [ROUT]
               VA frm_Old_StopCode [STOP] -> szStopCode_Old [STOP]
               BC Stop Code (F4201.0) [STOP] -> szStopCode_New [STOP]
               VA frm_Old_ZoneCode [ZON] -> szZoneNumber_Old [ZON]
               BC Zone Number (F4201.0) [ZON] -> szZoneNumber_New [ZON]
               VA frm_Old_Salesman1 [CMC1] <> mnCommissionCode1_Old [CMC1]
               VA frm_Old_CommissionRate1 [CMR1] <> mnRateCommission1_Old [CMR1]
               VA frm_Old_Salesman2 [CMC2] <> mnCommissionCode2_Old [CMC2]
               VA frm_Old_CommissionRate2 [CMR2] <> mnRateCommission2_Old [CMR2]
               VA frm_Old_UserCode [URCD] -> szUserReservedCode_Old [URCD]
               BC User Reserved Code (F4201.0) [URCD] -> szUserReservedCode_New [URCD]
               VA frm_Old_UserDate [URDT] -> jdUserReservedDate_Old [URDT]
               BC User Reserved Date (F4201.0) [URDT] -> jdUserReservedDate_New [URDT]
               VA frm_Old_UserAmount [URAT] -> mnUserReservedAmount_Old [URAT]
               BC User Reserved Amount (F4201.0) [URAT] -> mnUserReservedAmount_New [URAT]
               VA frm_Old_UserAddressNumber [URAB] -> mnUserReservedNumber_Old [URAB]
               BC User Reserved Number (F4201.0) [URAB] -> mnUserReservedNumber_New [URAB]
               VA frm_Old_UserReference [URRF] -> szUserReservedReference_Old [URRF]
               BC User Reserved Reference (F4201.0) [URRF] -> szUserReservedReference_New [URRF]
               VA frm_szOldPriceAdjustment_ASN [ASN] -> szPriceAdjustment_Old [ASN]
               BC Price and Adjustment Schedule (F4201.0) [ASN] -> szPriceAdjustment_New [ASN]
               VA frm_mnOldTradeDiscount_TRDC [TRDC] -> mnDiscountTrade_Old [TRDC]
               BC Discount - Trade (F4201.0) [TRDC] -> mnDiscountTrade_New [TRDC]
               VA frm_Old_RequestedTime [DRQT] -> mnRequestedDeliveryTime_Old [DRQT]
               FC Requested Delivery Time [DRQT] -> mnRequestedDeliveryTime_New [DRQT]
               VA frm_Old_ModeOfTransport [MOT] -> szModeOfTransport_Old [MOT]
               FC Mode of Trn [MOT] -> szModeOfTransport_New [MOT]
               VA frm_Old_ReasonCode [RCD] -> szReasonCode_Old [RCD]
               FC Reason Code [RCD] -> szReasonCode_New [RCD]
          //
          //     If any header values have changed, set the "Update To Hdr wf" field to a
          //     value of '2', instead of '1'.  This will be reset back to a '1' in the
          //     Detail Revisions.
          //
          If VA frm_HeaderValuesChanged [EV01] is equal to "1"
               FC EV20:  Updated to Hdr wf [EV20] = "2"
          End If
     End If
     //
     // SAR 8953108 - Apparel Enhancement
     // If the Collection have been previously blank and changed in Update
     
     // mode, set  the flag to notify Detail Revisions that Collection have changed
     //
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
          If FC Collection [C9COLL] is not equal to VA frm_szPrevCollection_C9COLL [C9COLL]
          Or FC SeasonCode [C9SEAC] is not equal to VA frm_szPrevSeasonCode_C9SEAC [C9SEAC]
          Or FC Season Year [C9SEAY] is not equal to VA frm_szPrevSeasonYear_C9SEAY [C9SEAY]
               VA evt_cCollectionChanged_EV01 [EV01] = "1"
          End If
     End If
     //
End If
//
// *************************************************************************
// SAR 5814943 - Begins
If SV Form_ Mode is equal to CO UPDATE_MODE
     If VA frm_OPAllowBackorders_OPBA [OPBA] is not equal to FC OP Backorders Allowed [OPBA]
          VA frm_cIsOPFlagChangedInHeader [EV01] = "1"
     Else
          If VA frm_OPAllowMultiSource_OPMS [OPMS] is not equal to FC OP Allow Multi Source [OPMS]
               VA frm_cIsOPFlagChangedInHeader [EV01] = "1"
          Else
               If VA frm_OPAllowSubstitutes_OPSS [OPSS] is not equal to FC OP Substitutes Allowed [OPSS]
                    VA frm_cIsOPFlagChangedInHeader [EV01] = "1"
               Else
                    If VA frm_OPPartialShipLine_OPLL [OPLL] is not equal to FC OP Partial Shipments Allowed [OPLL]
                         VA frm_cIsOPFlagChangedInHeader [EV01] = "1"
                    End If
               End If
          End If
     End If
End If
// SAR 5814943 - Ends
// *************************************************************************
//
// SAR 3070821 Begin, Do not call Detail Revsion is Web Mode.
If PO cShoppingCartMode [CART] is greater than <Blank>
     Press Button(HC Cancel/Close)
     Stop Processing
End If
// SAR 3070821 End
//
//     If all header data was successfully verified and a record is written to
//     the header work file by F4211 Begin Document, pass header data to form
//     interconnect so that they can be used in SO Detail Revisions.
//
// SAR 8953108 - Apparel Enhancements - Pass Apparel Collection info
//
If FC EV20:  Updated to Hdr wf [EV20] is equal to "1"
Or FC EV20:  Updated to Hdr wf [EV20] is equal to "2"
     // SAR 8955602 - Pass the UTP flag value to the detail form
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          FC Previous Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
          FC Previous Order Type [DCTO] <> OrderType [DCTO]
          FC Prev. Order Company [EKCO] <> CompanyKeyOrderNo [KCOO]
          FC Business Unit [MCU] <> Costcenter [MCU]
          FC Address Number [AN8] <> Addressnumber [AN8]
          FC Ship To [SHAN] <> Addressnumbershipto [SHAN]
          FC Order Date [TRDJ] <> Datetransactionjulian [TRDJ]
          FC Foreign [CRRM] <> Currencymode [CRRM]
          FC Currency Code [CRCD] <> Currencycodefrom [CRCD]
          FC Exchange Rate [CRR] <> Currencyconverrateov [CRR]
          BC Amount - Order Gross (F4201.0) [OTOT] <> Amountordergross [OTOT]
          BC Amount - Foreign Open (F4201.0) [FAP] <> Amountforeignopen [FAP]
          FC EV20:  Updated to Hdr wf [EV20] <> UpdatedToHdrWF [EV20]
          FC CTID:  Computer ID [CTID] <> Computerid [CTID]
          FC JOBS-Job Num (BegDoc) [JOBS] <> Jobnumber [JOBS]
          FC Base Currency [CRDC] <> Currencycodeto [CRDC]
          FC EV16:HoldCodeFlag(WF) [EV16] <> OrderPlacedOnHold [EV19]
          VA frm_ADVP_Adv_Pricing [ADVP] <> Advancedsalespricingyn [ADVP]
          FC Reference [VR01] <> szPONumber [VR01]
          BC Price and Adjustment Schedule (F4201.0) [ASN] -> szHeaderAdjustmentScheduleN [ASN]
          VA frm_szOrderTempSoldTo_ORTP [ORTP] -> szOrderTempSoldTo [ORTP]
          VA frm_szOrderTempShipTo_ORTP [ORTP] -> szOrderTempShipTo [ORTP]
          VA frm_cCurrencyConversionMethod [CRCM] -> cCurrencyConversionMethod [CRCM]
          VA frm_mnTriangulationRateTo [MATH01] -> mnTr [MATH01]
          VA frm_mnTriangulationRateFrom [MATH01] -> mnTriangulationRateFrom [MATH01]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Long Address Number [ALKY] -> szLongAddressSoldTo [ALKY]
          FC Long Address Number-Shipto [ALKY] <> szLongAddressShipTo [ALKY]
          FC Deliver To [DVAN] -> mnDeliveredTo [DVAN]
          FC Delivered To - Long Address - ALKY [ALKY] -> szLongAddressDeliverTo [ALKY]
          FC Forwarded To [FTAN] -> mnForwardedTo [FTAN]
          FC Forwaded To - Long Address - ALKY [ALKY] -> szLongAddressForwardedTo [ALKY]
          FC Address Number - Invoiced To [ITAN] -> mnInvoicedTo [ITAN]
          FC Invoiced To - Long Address - ALKY [ALKY] -> szLongAddressInvoicedTo [ALKY]
          FC Paid By [PBAN] -> mnPaidBy [PBAN]
          FC Paid By - Long Address - ALKY [ALKY] -> szLongAddressPaidBy [ALKY]
          FC Address Number to use for Tax [AUFT] -> cAddressNumberForTax [AUFT]
          FC Address Number to use for Transportation [AUFI] -> cAddressNumberForTransport [AUFI]
          FC OP Backorders Allowed [OPBA] -> cOPAllowBackorders [OPBA]
          FC OP Allow Multi Source [OPMS] -> cOPAllowMultiSource [OPMS]
          FC OP Substitutes Allowed [OPSS] -> cOPAllowSubstitutes [OPSS]
          FC OP Partial Shipments Allowed [OPLL] -> cOPPartialShipLineItems [OPLL]
          VA frm_cIsOPFlagChangedInHeader [EV01] -> cIsOPChangedInHeader [EV01]
          FC ACTN:  Action Code (wk) [ACTN] -> cActionCode [ACTN]
          FC Collection [C9COLL] -> szCollection [C9COLL]
          FC SeasonCode [C9SEAC] -> szSeasonCode [C9SEAC]
          FC Season Year [C9SEAY] -> szSeasonYear [C9SEAY]
          FC COLLECTION [DL01] -> szCollectionDescription [C9DSC1]
          FC Collection Price Effective Date [C9PRDJ] -> jdCollectionPriceEffDate [C9PRDJ]
          FC Requested [DRQJ] -> jdDateRequested [DRQJ]
          VA evt_cCollectionChanged_EV01 [EV01] -> cCollectionValuesChanged [EV01]
          VA frm_cUseTaxedPrices_UTP [UTP] -> cUseTaxedPrices [UTP]
     Show Control(FC Previous Order Number [DOCO])
     Show Control(FC Previous Order Type [DCTO])
     Show Control(FC Prev. Order Company [EKCO])
     Enable Control(FC Foreign [CRRM])
     Enable Control(FC Exchange Rate [CRR])
     If FC MCU-Default BP (WF) [MCU] is greater than <Blank>
          FC Business Unit [MCU] = FC MCU-Default BP (WF) [MCU]
          Set Control Focus(FC Long Address Number [ALKY])
     Else
          FC Business Unit [MCU] = <Blank>
          Set Control Focus(FC Business Unit [MCU])
     End If
     If FC EV16:HoldCodeFlag(WF) [EV16] is equal to "1"
          Show Control(FC Previous Order Placed On Hold)
          Enable Control(FC Hold Orders Code [HOLD])
          Hide Control(FC This Order Placed On Hold)
          FC EV16:HoldCodeFlag(WF) [EV16] = "0"
     Else
          Hide Control(FC Previous Order Placed On Hold)
     End If
End If
FC EV18-DOCO entered [EV18] = "0"
FC EV19-Invalid DOCO [EV19] = "0"


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Cancel/Close
Event: Button Clicked
Event GUID: f57df5bf-a23a-11d0-a204-0000f6728a56
=============================================
//  
// If cancel is pressed, do not call SO Detail Revisions.
// 
FI Everesteventpoint01 [EV01] = "0"
// 
If FC EV20:  Updated to Hdr wf [EV20] is equal to "1"
     If PO cShoppingCartMode [CART] is equal to <Blank>
     Or PO cShoppingCartMode [CART] is equal to <NULL>
          // SAR 3406866, Pass in PEID and TCID
          F4211ClearWorkFile(B4200310.F4211ClearWorkFile)
               FC JOBS-Job Num (BegDoc) [JOBS] -> mnJobNo [JOBS]
               FC CTID:  Computer ID [CTID] -> szComputerID [CTID]
               UNDEFINED <> mnFromLineNo [LNID]
               UNDEFINED <> mnThruLineNo [LNID]
               VA frm_EV22_cCacheOn [EV22] -> cClearHeaderWF [EV01]
               UNDEFINED <> cClearDetailWF [EV02]
               UNDEFINED <> szProgramID [PID]
               UNDEFINED <> mnWKRelatedOrderProcess [MATH02]
               VA frm_szVersion_VERS [VERS] -> szCMVersion [VERS]
               UNDEFINED <> cGenericChar1_EV01 [EV01]
               UNDEFINED <> cGenericChar2_EV02 [EV02]
               UNDEFINED <> szGenericString1_DL01 [DL01]
               UNDEFINED <> mnSODRelatedJobNumber [MATH01]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     End If
     // SAR 8455659 - Delete the Header Attachments F00165
     If SV Form_ Mode is equal to CO ADD_MODE
          Media Object Structures(GT4201A, <Default Media Object>,  <Exist>, FC EV09-Generic Text, FC Order Number, FC Order Type, FC Order Key Company)
          If FC EV09-Generic Text [EV09] is equal to "1"
               Media Object Structures(GT4201A, <Default Media Object>,  <Delete>, FC EV09-Generic Text, FC Order Number, FC Order Type, FC Order Key Company)
          End If
          // 8516950 - Delete Order Address records from F4006
          DeleteOrderAddress(B4006.DeleteOrderAddress)
               FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
               FC Order Type [DCTO] -> szDocumentType [DCTO]
               FC Order Key Company [KCOO] -> szDocumentCompany [KCOO]
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Sold To Customer Master
Event: Button Clicked
Event GUID: f57df5c7-a23a-11d0-a204-0000f6728a56
=============================================
! Call App:P0301 Form:W0301A Version: 
!      FC Address Number [AN8] Could not find member in DSTR
!      "C" Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
// SAR 2905381
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany_CO [CO] = FC Order Key Company [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Ship To Customer Master
Event: Button Clicked
Event GUID: f57df5c8-a23a-11d0-a204-0000f6728a56
=============================================
! Call App:P0301 Form:W0301A Version: 
!      FC Ship To [SHAN] Could not find member in DSTR
!      "C" Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
// SAR 2905381
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany_CO [CO] = FC Order Key Company [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     FC Ship To [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     FC Ship To [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany_CO [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Order Address Window
Event: Button Clicked
Event GUID: f57df5c5-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Number [DOCO] is equal to "0"
     If FC Order Date [TRDJ] is equal to or empty <Blank>
     Or FC Order Date [TRDJ] is equal to or empty <NULL>
          FC Order Date [TRDJ] = date_today()
     End If
     F4201GetOrderNoFromNextNumber(B4200030.F4201GetOrderNoFromNextNumber)
          FC Order Number [DOCO] <- mnOrderNumber [DOCO]
          UNDEFINED <> mnNextNoIndex [ORNN]
          FC Order Key Company [KCOO] -> szKeyCompany [KCOO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Date [TRDJ] -> jdTransactionDate [TRDJ]
          UNDEFINED <> mnCentury [CTRY]
          UNDEFINED <> mnFiscalYear [FY]
     FC EV18-DOCO entered [EV18] = "0"
End If
// SAR 4294034 - pass transaction date to P4006
// SAR 4971060 - Pass in the FC Order Date
// 
// SAR 8354276 - Cache P4210 & P03013 Version for P4006
// to retrieve Address Book (P01012) Processing Options
// 
// Intialize the Cache
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "1" -> cActionCode [ACTN]
// 
// Add P4210 & P03013 Versions to Cache 
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "2" -> cActionCode [ACTN]
     PO szP03013Vers [VL17] -> szP03013Version [VERS]
     "EP4210" -> szCallingProgramId [PID]
// 
Call App:P4006 Form:W4006B Version:Undefined
     FC Address Number [AN8] -> AddressNumber [AN8]
     FC Ship To [SHAN] -> ShipToNumber [SHAN]
     FC Order Number [DOCO] -> OrderNumber [DOCO]
     FC Order Type [DCTO] -> OrderType [DCTO]
     FC Order Key Company [KCOO] -> OrderCompany [KCOO]
     "S" -> CalledFromSales_S_OrPurch_P [EV01]
     UNDEFINED <> InquiryMode [EV02]
     UNDEFINED <> BatchOrderAddress [EV03]
     UNDEFINED <> EDIOrderAddress [EV04]
     UNDEFINED <> FileName [FILE]
     UNDEFINED <> EdiDocumentNumber [EDOC]
     UNDEFINED <> EdiDocumentType [EDCT]
     UNDEFINED <> CompanyKeyEdiOrder [EKCO]
     UNDEFINED <> EdiLineNumber [EDLN]
     PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
     FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
     FC Deliver To [DVAN] -> mnDeliverToNumber [DVAN]
     FC Forwarded To [FTAN] -> mnForwardedToNumber [FTAN]
     FC Address Number - Invoiced To [ITAN] -> mnInvoiceToNumber [ITAN]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Header Commissions Lookup
Event: Button Clicked
Event GUID: a8c497eb-1201-4130-9430-0946cd8dccc7
=============================================
// SAR# 4648630 Begin
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA frm_cFormActionCode_ACTN [ACTN] = "C"
Else
     VA frm_cFormActionCode_ACTN [ACTN] = "A"
End If
Call App:P42150 Form:W42150A Version:Undefined
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> jdDateExpirJulian [CXPJ]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Key Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     VA frm_cFormActionCode_ACTN [ACTN] -> cActionCode [ACTI]
     FC JOBS-Job Num (BegDoc) [JOBS] <> mnJobnumber [JOBS]
     FC CTID:  Computer ID [CTID] -> szComputerID [CTID]
     FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
     UNDEFINED <> cApplicationCalledFrom [APCF]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Credit Check Inquiry
Event: Button Clicked
Event GUID: f57e0b2a-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P42050 Form:W42050B Version:PO szP42050Vers
     BC Address Number (F4201.0) [AN8] -> AddressNumber [AN8]
     FC Order Key Company [KCOO] <> CompanyNumber [KCOO]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Attachments
Event: Button Clicked
Event GUID: f57df5c6-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Number [DOCO] is equal to "0"
     // Begin SAR 5096401-ADD
     Hide Control(FC Attachments)
     // End SAR 5096401-ADD
     // 
     // Begin SAR 5096401-DELETE
     ! F4201GetOrderNoFromNextNumber(B4200030.F4201GetOrderNoFromNextNumber)
     !      FC Order Number [DOCO] <- mnOrderNumber [DOCO]
     !      UNDEFINED <> mnNextNoIndex [ORNN]
     !      UNDEFINED <> szKeyCompany [KCOO]
     !      UNDEFINED <> szOrderType [DCTO]
     !      UNDEFINED <> jdTransactionDate [TRDJ]
     !      UNDEFINED <> mnCentury [CTRY]
     !      UNDEFINED <> mnFiscalYear [FY]
     ! FC EV18-DOCO entered [EV18] = "0"
     // End SAR 5096401-DELETE
     // 
     // Begin SAR 5096401-ADD
Else
     // End SAR 5096401-ADD
     FC EV09-Generic Text [EV09] = <Blank>
     Media Objects(GT4201A   , <Edit>, FC EV09-Generic Text, FC Order Number, FC Order Type, FC Order Key Company)
     If FC EV09-Generic Text [EV09] is equal to "1"
          Show Control(FC Attachments)
          // ***********************************************************************
          // SAR 3011549 - Begin/End ADD
          // ***********************************************************************
          VA frm_cHeaderText_ATXT [ATXT] = "Y"
     Else
          Hide Control(FC Attachments)
          // ***********************************************************************
          // SAR 3011549 - Begin/End ADD
          // ***********************************************************************
          VA frm_cHeaderText_ATXT [ATXT] = <Blank>
     End If
     // Begin SAR 5096401-Move from above
End If
// End SAR 5096401-Move from above


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Exit to Revision History
Event: Button Clicked
Event GUID: 58b46a96-7679-48ee-9a9b-66a115f966db
=============================================
// 
// Exit to Revision History
// 
Call App:P42420 Form:W42420B Version: 
     FC Order Key Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Change Order [CORD] -> mnNumberChangeOrder [CORD]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Define the Columns to Populate to the Detail Table
Event: Button Clicked
Event GUID: c78582f1-a240-11d0-a204-0000f6728a56
=============================================
Call App:P40HDR Form:W40HDRA Version: 
     "42" -> szSystemCode [SY]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: HC Populate the Changed Header Values to the Detail Lines
Event: Button Clicked
Event GUID: c78582f2-a240-11d0-a204-0000f6728a56
=============================================
VA frm_OnDemandHeaderToDetail [EV01] = "1"
Press Button(HC &OK/&Select)


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Business Unit
Event: Control Exited/Changed-Asynch
Event GUID: f57df5c3-a23a-11d0-a204-0000f6728a56
=============================================
Clear Control Error(FC Address Number to use for Transportation [AUFI])
Clear Control Error(FC Address Number to use for Tax [AUFT])
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
     If FC Business Unit [MCU] is greater than <Blank>
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] -> szCostCenter [MCU0]
               FC Order Key Company [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
          If SL CurrencyProcessing is not equal to "N"
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    FC Order Key Company [KCOO] -> szCompany [CO]
                    FC Base Currency [CRDC] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
          End If
     End If
End If
//
// *******************************************************************
// SAR 5814943 - Implemented for Order Promising to ensure that only when
// Branch/Plant is changed will the flag cBranchPlantChanged_EV01 is set to 1.
// The same logic is implemented on SoldTo and ShipTo.   Some of thse Control
// Exited/Changed event gets triggered no matter what.
//
If FC Business Unit [MCU] is greater than <Blank>
     If VA frm_szPreviousHeaderBranch_MCU [MCU] is less than or equal to <Blank>
          VA frm_szPreviousHeaderBranch_MCU [MCU] = FC Business Unit [MCU]
     Else
          If VA frm_szPreviousHeaderBranch_MCU [MCU] is not equal to FC Business Unit [MCU]
               VA frm_cOPBranchPlantChanged_EV01 [EV01] = "1"
               VA frm_szPreviousHeaderBranch_MCU [MCU] = FC Business Unit [MCU]
          End If
     End If
     // SAR 8252991 - To find out whether company has changed or not
     If VA frm_szPrevOrderCompany_KCOO [KCOO] is less than or equal to <Blank>
          VA frm_szPrevOrderCompany_KCOO [KCOO] = FC Order Key Company [KCOO]
     Else
          If VA frm_szPrevOrderCompany_KCOO [KCOO] is not equal to FC Order Key Company [KCOO]
               VA frm_cCompanyChanged_EV01 [EV01] = "1"
               VA frm_szPrevOrderCompany_KCOO [KCOO] = FC Order Key Company [KCOO]
          End If
     End If
     // SAR 8955602 - If B/P is changed then, re-retrieve the UTP flag
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
     And VA frm_szPrevHeaderMCU_MCU [MCU] is not equal to FC Business Unit [MCU]
          // Customer Tax Prices = 1 if Customer Billing Information is by Sold To
          // customer and is 2 if Customer Billing Information is by Ship To customer
          // Based on this value, retrieve the value of Use Taxed Prices flag set for
          // the Sold To/Ship To customer address number
          // For Sold To Customer
          If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
               VA frm_mnCustAddNum_AN8 [AN8] = FC Address Number [AN8]
               VA frm_szOrderCompany_CO [CO] = FC Order Key Company [KCOO]
          Else
               //
               // For Ship To Customer
               If VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
                    VA frm_mnCustAddNum_AN8 [AN8] = FC Ship To [SHAN]
                    VA frm_szOrderCompany_CO [CO] = FC Order Key Company [KCOO]
               End If
          End If
          //
          If VA frm_mnCustAddNum_AN8 [AN8] is not equal to <NULL>
          And VA frm_mnCustAddNum_AN8 [AN8] is not equal to <Blank>
               // Retrieve value for Taxed Unit Price
               Press Button(FC Get UTP From Tag Customer Master)
          End If
     End If
     VA frm_szPrevHeaderMCU_MCU [MCU] = FC Business Unit [MCU]
     //
End If
// End of SAR 5814943
// *****************************************************************


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: 0329b5b0-a594-11d2-a1f4-00105a1bfebf
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cCustomerStatus_CUSTS [CUSTS]
----------------------------------------
Clear Control Error(FC Address Number to use for Transportation [AUFI])
Clear Control Error(FC Address Number to use for Tax [AUFT])
If FC Long Address Number [ALKY] is not equal to <Blank>
     //
     // SAR 3193899 - modified parameters to allow Long addressnumbers to be entered
     // in standard text and let the Business function default Short Address
     //
     // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
     FC ADDRESS NUMBER [DL01] = <Blank>
     // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
     // SAR 5370131 - use N0100061 instead of B0100016
     ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
     !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Address Number [AN8] <- mnAddressNumber [AN8]
     !      UNDEFINED <> szTaxid [TAX]
     !      "5" -> cInputSelection [EV01]
     !      UNDEFINED <> cSuccessFlag [EV02]
     !      Could not resolve Form Control. 113 <> szNameAlpha [ALPH]
     !      UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC ADDRESS NUMBER [DL01] <> szNameAlpha [ALPH]
     // SAR 3372571 - Begin/End DISABLE
     ! FC Long Address Number [ALKY] = [FC Address Number [AN8]]
     // SAR 3372571 - Begin ADD
     If FC Address Number [AN8] is equal to "0"
     And PO cAddNewCustomersToAB [EV17] is equal to "1"
          Call App:P01012 Form:W01012B Version:ZJDEC003
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               UNDEFINED <> szAddressType1 [AT1]
          // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
          FC ADDRESS NUMBER [DL01] = <Blank>
          // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
          // SAR 5370131 - use N0100061 instead of B0100016
          ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
          !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          !      FC Address Number [AN8] <- mnAddressNumber [AN8]
          !      UNDEFINED <> szTaxid [TAX]
          !      "5" -> cInputSelection [EV01]
          !      UNDEFINED <> cSuccessFlag [EV02]
          !      Could not resolve Form Control. 113 <> szNameAlpha [ALPH]
          !      UNDEFINED <> szLongAddressKey [MLNM]
          ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
               FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
               FC Address Number [AN8] <- mnAddressNumber [AN8]
               "5" -> cInputSelection [EV01]
               FC ADDRESS NUMBER [DL01] <> szNameAlpha [ALPH]
     End If
     // SAR 3372571 - End ADD
     // SAR 3530912 - Begin ADD
Else
     FC Address Number [AN8] = "0"
     // SAR 3530912 - End ADD
End If
//
If FC Long Address Number [ALKY] is greater than "0"
     Clear Control Error(FC Long Address Number [ALKY])
     VA frm_TSTA_Credit_Message [TSTA] = <NULL>
     If FC Address Number [AN8] is not equal to "0"
          MBFCustomerMaster(N0100042.MBFCustomerMaster)
               "I" -> cActionCode [ACTN]
               "1" -> cSuppressErrorMessage [SUPPS]
               FC Order Key Company [KCOO] -> szCompany [CO]
               VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
               VA frm_szOrderTempSoldTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
               VA frm_cPricePickslipYN_PLST [PLST] <- cPricePickListYN [PLST]
               FC Address Number [AN8] -> mnCustomerNumber [AN8]
               VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
          If SV Error_Status is equal to CO SUCCESS
               If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                    Set Control Error(FC Long Address Number, "CUSTS1")
                    Stop Processing
               End If
          End If
     End If
     //
     If SV Error_Status is not equal to CO SUCCESS
     Or FC Address Number [AN8] is equal to "0"
          //
          // SAR 3372571 - Begin/End CHANGE
          If PO cAddNewCustomersToAB [EV17] is equal to "1"
          And SV Error_Status is not equal to CO SUCCESS
          And FC Address Number [AN8] is not equal to "0"
               // SAR 3278411 - Begin/End CHANGE
               // Begin SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
               ! Call App:P01012 Form:W01012B Version:ZJDEC003
               !      FC Address Number [AN8] <> mnAddressNumber [AN8]
               !      UNDEFINED <> szAddressType1 [AT1]
               Call App:P03013 Form:W03013B Version:ZJDE0001
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    UNDEFINED <> szCompany [CO]
                    UNDEFINED <> mn_Tab_ToGoTo [MATH01]
                    UNDEFINED <> szCountryForPayroll [CCPR]
                    UNDEFINED <> szAlternateAddressKey [ALKY]
                    UNDEFINED <> mnAddressNumberParent [PA8]
                    UNDEFINED <> szCreditMessage [CM]
                    UNDEFINED <> szTaxId [TAX]
                    UNDEFINED <> cPersonCorporationCode [TAXC]
                    UNDEFINED <> szAdditionalIndividualTax [TX2]
                    UNDEFINED <> szCalledFrom [SYS]
               // End SAR# 4162795 Applied By: ST6841901 Date: 04/28/00
               VA frm_TSTA_Credit_Message [TSTA] = <NULL>
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    UNDEFINED <> cUpdateMasterFile [EV01]
                    UNDEFINED <> cProcessEdits [EV01]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    UNDEFINED <> szErrorMessageID [DTAI]
                    UNDEFINED <> szVersion [VERS]
                    UNDEFINED <> szAlternateAddressKey [ALKY]
                    UNDEFINED <> szCreditMessage [CM]
                    FC Order Key Company [KCOO] -> szCompany [CO]
                    UNDEFINED <> szPolicyName [PLYN]
                    UNDEFINED <> mnPolicyNumber [PLY]
                    UNDEFINED <> cAutoReceipt [ATCS]
                    UNDEFINED <> szAutoReceiptsExecutionList [ARL]
                    UNDEFINED <> szAutoReceiptAlgorithm [ALGM]
                    UNDEFINED <> mnPayorAddressNumber [PYR]
                    UNDEFINED <> szARClass [ARC]
                    UNDEFINED <> szCostCenterArDefault [MCUR]
                    UNDEFINED <> szObjectAcctsReceivable [OBAR]
                    UNDEFINED <> szSubsidiaryAcctsReceiv [AIDR]
                    UNDEFINED <> szCompanyKeyARModel [KCOR]
                    UNDEFINED <> mnDocArDefaultJe [DCAR]
                    UNDEFINED <> szDocTyArDefaultJe [DTAR]
                    UNDEFINED <> szCurrencyCodeFrom [CRCD]
                    UNDEFINED <> szTaxArea1 [TXA1]
                    UNDEFINED <> szTaxExplanationCode1 [EXR1]
                    UNDEFINED <> mnAmountCreditLimit [ACL]
                    UNDEFINED <> cArHoldInvoices [HDAR]
                    UNDEFINED <> szPaymentTermsAR [TRAR]
                    UNDEFINED <> cSendStatementToCP [STTO]
                    UNDEFINED <> cPaymentInstrumentA [RYIN]
                    UNDEFINED <> cPrintStatementYN [STMT]
                    UNDEFINED <> cAutoCash_2 [ATCS]
                    UNDEFINED <> cSendInvoiceToCP [SITO]
                    UNDEFINED <> cSequenceForLedgrInq [SQNL]
                    UNDEFINED <> szStatementCycle [CYCN]
                    UNDEFINED <> cBalForwardOpenItem [BO]
                    VA frm_TSTA_Credit_Message [TSTA] <- szTempCreditMessage [TSTA]
                    UNDEFINED <> cCreditCkHandlingCode [CKHC]
                    UNDEFINED <> jdDateLastCreditReview [DLC]
                    UNDEFINED <> cDelinquencyLetter [DNLT]
                    UNDEFINED <> szLastCreditReview [PLCR]
                    UNDEFINED <> jdDateRecallforReview [RVDJ]
                    UNDEFINED <> mnDaysSalesOutstanding [DSO]
                    UNDEFINED <> szCreditManager [CMGR]
                    UNDEFINED <> szCollectionManager [CLMG]
                    UNDEFINED <> mnNumberDunningLetters [DLQT]
                    UNDEFINED <> jdDateLastDunningLetterJul [DLQJ]
                    UNDEFINED <> cNumberReminders [NBRR]
                    UNDEFINED <> cCollectionReport [COLL]
                    UNDEFINED <> mnNoSentReminders2 [NBR2]
                    UNDEFINED <> mnNoSentReminders3 [NBR3]
                    UNDEFINED <> mnNoSentCollection [NBCL]
                    UNDEFINED <> cApplyFinChargesYN [AFC]
                    UNDEFINED <> mnFinChrgDaysFutureU [FD]
                    UNDEFINED <> mnPercentageFactor [FP]
                    UNDEFINED <> cFinanChgeCreateEntr [CFCE]
                    UNDEFINED <> cMiscCode2 [AB2]
                    UNDEFINED <> jdDateLastStatementDate_2 [DT1J]
                    UNDEFINED <> jdDateFirstInvoiceJulian [DFIJ]
                    UNDEFINED <> jdDateLastInvoiceJulian [DLIJ]
                    UNDEFINED <> cAbcCodeSales [ABC1]
                    UNDEFINED <> cAbcCodeMargin [ABC2]
                    UNDEFINED <> cAbcCodeAverageDays [ABC3]
                    UNDEFINED <> jdDateFinancialStmtsonHand [FNDJ]
                    UNDEFINED <> jdDateHighBalanceJulian [DHBJ]
                    UNDEFINED <> jdDateLastPaid [DLP]
                    UNDEFINED <> szDunBradstreetRating [DB]
                    UNDEFINED <> jdDateDunBradstreet [DNBJ]
                    UNDEFINED <> szTrwNumber [TRW]
                    UNDEFINED <> jdTRWDateJ [TWDJ]
                    UNDEFINED <> mnAverageDaysToPay [AVD]
                    UNDEFINED <> szCurrencyCodeAmounts [CRCA]
                    UNDEFINED <> mnAmountDue [AD]
                    UNDEFINED <> mnAmtPyFinanceCharges [AFCP]
                    UNDEFINED <> mnAmtYtdFinanceCharges [AFCY]
                    UNDEFINED <> mnAmtInvoicedThisYr [ASTY]
                    UNDEFINED <> mnAmtInvoicedPriorYr [SPYE]
                    UNDEFINED <> mnAmountHighBalance [AHB]
                    UNDEFINED <> mnAmountLastPaid [ALP]
                    UNDEFINED <> mnAmountAddressBook [ABAM]
                    UNDEFINED <> mnAmount1 [ABA1]
                    UNDEFINED <> mnAmountOpenOrder [APRC]
                    UNDEFINED <> mnOrdersYearToDate [OYTD]
                    UNDEFINED <> mnOrdersPriorYear [OPY]
                    UNDEFINED <> szPersonOpeningAcct [POPN]
                    UNDEFINED <> jdDateAccountOpenedJulian [DAOJ]
                    UNDEFINED <> mnRelatedAddressNo [AN8R]
                    UNDEFINED <> jdNextInvoiceDate [NIVD]
                    UNDEFINED <> szUserReservedCode [URCD]
                    UNDEFINED <> jdUserReservedDate [URDT]
                    UNDEFINED <> mnUserReservedAmount [URAT]
                    UNDEFINED <> mnUserReservedNumber [URAB]
                    UNDEFINED <> szUserReservedReference [URRF]
                    UNDEFINED <> mnClaimsManager [MAN8]
                    UNDEFINED <> AN8OutputOnly [AN8]
                    UNDEFINED <> mnAltPayor [ARPY]
                    UNDEFINED <> mnNoSentReminders1 [NBR1]
                    UNDEFINED <> mnMinimumOrderValue [MINO]
                    UNDEFINED <> mnMaximumOrderValue [MAXO]
                    UNDEFINED <> cBillingAddressType [BADT]
                    VA frm_szOrderTempSoldTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                    UNDEFINED <> mnDiscountTrade [TRDC]
                    UNDEFINED <> szPrintMessage1 [INMG]
                    UNDEFINED <> cExemptCreditHold [EXHD]
                    UNDEFINED <> szHoldOrdersCode [HOLD]
                    UNDEFINED <> szRouteCode [ROUT]
                    UNDEFINED <> szStopCode [STOP]
                    UNDEFINED <> szZoneNumber [ZON]
                    UNDEFINED <> mnCarrier [CARS]
                    UNDEFINED <> szDeliveryInstructLine1 [DEL1]
                    UNDEFINED <> szDeliveryInstructLine2 [DEL2]
                    UNDEFINED <> mnLeadtimeTransit [LTDT]
                    UNDEFINED <> szFreightHandlingCode [FRTH]
                    UNDEFINED <> cApplyFreightYN [AFT]
                    UNDEFINED <> cPartialShipmntsAllowY [APTS]
                    UNDEFINED <> cSubstitutesAllowedYN [SBAL]
                    UNDEFINED <> cBackordersAllowedYN [BACK]
                    UNDEFINED <> cCustomerPORequiredYN [PORQ]
                    UNDEFINED <> cPriorityProcessing [PRIO]
                    UNDEFINED <> cAccountsReceivableCps [ARTO]
                    UNDEFINED <> mnInvoiceCopies [INVC]
                    UNDEFINED <> cInvoiceConsolidation [ICON]
                    UNDEFINED <> cBillFrequency [BLFR]
                    UNDEFINED <> jdDateLicenseExpiratio [LEDJ]
                    VA frm_cPricePickslipYN_PLST [PLST] <- cPricePickListYN [PLST]
                    UNDEFINED <> cMergeOrdersYN [MORD]
                    UNDEFINED <> cPalletControl [PALC]
                    UNDEFINED <> mnCommissionCode1 [CMC1]
                    UNDEFINED <> mnRateCommission1 [CMR1]
                    UNDEFINED <> mnCommissionCode2 [CMC2]
                    UNDEFINED <> mnRateCommission2 [CMR2]
                    UNDEFINED <> szUnitOfMeasureWhtDisp [WUMD]
                    UNDEFINED <> szUnitOfMeasureVolDisp [VUMD]
                    UNDEFINED <> cBatchProcessingMode [EDPM]
                    UNDEFINED <> cCustomerTypeIdentifier [EDCI]
                    UNDEFINED <> cItemTypeIdentifier [EDII]
                    UNDEFINED <> mnQuantityDecimals [EDQD]
                    UNDEFINED <> mnAmountDecimals [EDAD]
                    UNDEFINED <> cDeliveryNote [EDF1]
                    UNDEFINED <> cItemRestrictions [EDF2]
                    UNDEFINED <> cSpecialInstruction01 [SI01]
                    UNDEFINED <> cSpecialInstruction02 [SI02]
                    UNDEFINED <> cSpecialInstruction03 [SI03]
                    UNDEFINED <> cSpecialInstruction04 [SI04]
                    UNDEFINED <> cSpecialInstruction05 [SI05]
                    UNDEFINED <> szPriceAdjustmentScheduleN [ASN]
                    UNDEFINED <> cPricingBasedOnDate [CP01]
                    UNDEFINED <> cPrintAdjustmentsonInvoic [DSPA]
                    UNDEFINED <> cCorrespondenceMethod [CRMD]
                    UNDEFINED <> mnAdminCreditLimit [AMCR]
                    UNDEFINED <> szReportCodeAddBook001 [AC01]
                    UNDEFINED <> szReportCodeAddBook002 [AC02]
                    UNDEFINED <> szReportCodeAddBook003 [AC03]
                    UNDEFINED <> szReportCodeAddBook004 [AC04]
                    UNDEFINED <> szReportCodeAddBook005 [AC05]
                    UNDEFINED <> szReportCodeAddBook006 [AC06]
                    UNDEFINED <> szReportCodeAddBook007 [AC07]
                    UNDEFINED <> szReportCodeAddBook008 [AC08]
                    UNDEFINED <> szReportCodeAddBook009 [AC09]
                    UNDEFINED <> szReportCodeAddBook011 [AC11]
                    UNDEFINED <> szReportCodeAddBook012 [AC12]
                    UNDEFINED <> szReportCodeAddBook013 [AC13]
                    UNDEFINED <> szReportCodeAddBook014 [AC14]
                    UNDEFINED <> szReportCodeAddBook015 [AC15]
                    UNDEFINED <> szReportCodeAddBook016 [AC16]
                    UNDEFINED <> szReportCodeAddBook017 [AC17]
                    UNDEFINED <> szReportCodeAddBook018 [AC18]
                    UNDEFINED <> szReportCodeAddBook019 [AC19]
                    UNDEFINED <> szCategoryCodeAddressBook2 [AC21]
                    UNDEFINED <> szCategoryCodeAddressBk22 [AC22]
                    UNDEFINED <> szCategoryCodeAddressBk23 [AC23]
                    UNDEFINED <> szCategoryCodeAddressBk24 [AC24]
                    UNDEFINED <> szCategoryCodeAddressBk25 [AC25]
                    UNDEFINED <> szCategoryCodeAddressBk26 [AC26]
                    UNDEFINED <> szCategoryCodeAddressBk27 [AC27]
                    UNDEFINED <> szCategoryCodeAddressBk28 [AC28]
                    UNDEFINED <> szCategoryCodeAddressBk29 [AC29]
                    UNDEFINED <> szCategoryCodeAddressBk30 [AC30]
                    UNDEFINED <> szProgramNameShippingLabel [SLPG]
                    UNDEFINED <> szVersionNameShippingLabel [SLDW]
                    UNDEFINED <> szConfigurationPickandPack [CFPP]
                    UNDEFINED <> szConfigurationStandardCar [CFSP]
                    UNDEFINED <> cDefaultConfiguration [CFDF]
                    UNDEFINED <> cRequiresPackagingCode [RQ01]
                    UNDEFINED <> cRequiresWeightCode [RQ02]
                    UNDEFINED <> cRequiresIdentificationCo [RQ03]
                    UNDEFINED <> szDefaultIdentificationCod [DR03]
                    UNDEFINED <> cRequiresIdentificationCode2 [RQ04]
                    UNDEFINED <> cRequiresTransportationMe [RQ05]
                    UNDEFINED <> cRequiresRouting [RQ06]
                    UNDEFINED <> cRequiresEquipment [RQ07]
                    UNDEFINED <> cRequiresReferenceNumber1 [RQ08]
                    UNDEFINED <> szDefaultReferenceNumberQu [DR08]
                    UNDEFINED <> cRequiresReferenceNumber2 [RQ09]
                    UNDEFINED <> szUserId [USER]
                    UNDEFINED <> szProgramId [PID]
                    UNDEFINED <> szWorkStationId [JOBN]
                    UNDEFINED <> jdDateUpdated [UPMJ]
                    UNDEFINED <> mnTimeLastUpdated [UPMT]
                    UNDEFINED <> szGroupCustomerPriceGp [CPGP]
                    UNDEFINED <> szDefaultIdentificationCQ2 [DR04]
                    UNDEFINED <> szDefaultIdentificationCQ [DR09]
                    FC Address Number [AN8] -> mnCustomerNumber [AN8]
                    UNDEFINED <> OldCreditLimit [AA]
                    UNDEFINED <> szTaxId [TAX]
                    UNDEFINED <> szCompanyPolicyNum [KCO]
                    UNDEFINED <> szPolicyDescription [FDNM]
                    UNDEFINED <> mnAddressNumberParent [PA8]
                    UNDEFINED <> mnParentNumberOriginal [PA8]
                    UNDEFINED <> szAcctNoInputMode [ANI]
                    UNDEFINED <> mnOkToDelete [MATH01]
                    UNDEFINED <> cPersonCorporationCode [TAXC]
                    UNDEFINED <> szTaxId2 [TX2]
                    UNDEFINED <> mnSuccessfullyProcessed [MATH01]
                    UNDEFINED <> szVersionconsolidated [VER]
                    UNDEFINED <> szReportCodeAddBook010 [AC10]
                    UNDEFINED <> szReportCodeAddBook020 [AC20]
                    UNDEFINED <> mnCreditWorkflowStarted [MATH01]
                    UNDEFINED <> szCountryForPayroll [CCPR]
                    UNDEFINED <> cDirectionIndicator [DRIN]
                    UNDEFINED <> szBuyingSegmentCode [BSC]
                    UNDEFINED <> cBypassAuditLogging [BYAL]
                    UNDEFINED <> cPurgeFlag [PRGF]
                    UNDEFINED <> cFutureUseDateFlag [EFTF]
                    UNDEFINED <> jdFutureUseDate [EFTB]
                    UNDEFINED <> szOPBusinessObjective [OPBO]
                    UNDEFINED <> cAPSBusinessUnit [APSB]
               //
               If SV Error_Status is not equal to CO SUCCESS
                    Set Control Error(FC Long Address Number, "0037")
                    Stop Processing
               Else
                    If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                         Set Control Error(FC Long Address Number, "CUSTS1")
                         Stop Processing
                    End If
               End If
          Else
               Set Control Error(FC Long Address Number, "0037")
               Stop Processing
          End If
     End If
     //
     //
     FC TSTA:  TEMP CREDIT MSG [DL01] = <NULL>
     If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
          GetUDC(X0005.GetUDC)
               "TSTA" -> szDataDictionaryItem [DTAI]
               "00" -> szSystemCode [SY]
               "CM" -> szRecordTypeCode [RT]
               VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
               UNDEFINED <> mnKeyFieldLength [AS]
               SL LanguagePreference -> szLanguagePreference [LNGP]
               FC TSTA:  TEMP CREDIT MSG [DL01] <- szDescription001 [DL01]
               UNDEFINED <> szDescription002 [DL02]
               UNDEFINED <> szSpecialHandlingCode [SPHD]
               UNDEFINED <> cUdcOwnershipFlag [UDCO]
               UNDEFINED <> cHardCodedYn [HRDC]
               "1" -> cSuppressErrorMessage [EV01]
               UNDEFINED <> szErrorMessageId [DTAI]
               UNDEFINED <> cUDCOne [EV01]
     End If
     //
     VA frm_TSTA_Credit_Message [TSTA] = <NULL>
     //
     // SAR #2323250
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC ADDRESS NUMBER [DL01] <- szAlphaName [ALPH]
          VA frm_TSTA_Credit_Message [TSTA] <- szCreditMessage [CM]
     // End 2323250
     //
     //
     FC CM-CREDIT MESSAGE [DL01] = <NULL>
     If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
          GetUDC(X0005.GetUDC)
               "CM" -> szDataDictionaryItem [DTAI]
               "00" -> szSystemCode [SY]
               "CM" -> szRecordTypeCode [RT]
               VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
               SL LanguagePreference -> szLanguagePreference [LNGP]
               FC CM-CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
//
// SAR 2106298 Check Flag for Price Pickslip coming out of Customer Master and
// change checkbox accordingly.
//
// *************************************************************************
// SAR 2894255 - Begin ADD
// Only default the Price Pick Slip on an ADD mode.
// *************************************************************************
If SV Form_ Mode is equal to CO ADD_MODE
     If VA frm_cPricePickslipYN_PLST [PLST] is equal to "N"
          FC Price Pickslip [PLST] = "N"
     Else
          FC Price Pickslip [PLST] = "Y"
     End If
End If
//
// SAR 4792640
If FC Long Address Number [ALKY] is not equal to <Blank>
And FC Long Address Number [ALKY] is not equal to <NULL>
And FC Long Address Number [ALKY] is not equal to "0"
     // SAR 8955602 - Add logic for defaulting the Use Taxed Prices flag.
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     And VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
     And VA frm_mnPrevAddNumb_AN8 [AN8] is not equal to FC Address Number [AN8]
          // Customer Tax Prices = 1 if Customer Billing Information is by Sold To
          // customer. Get the value of Use Taxed Prices flag set for the Sold To
          // customer
          VA frm_mnCustAddNum_AN8 [AN8] = FC Address Number [AN8]
          VA frm_szOrderCompany_CO [CO] = FC Order Key Company [KCOO]
          Press Button(FC Get UTP From Tag Customer Master)
     End If
     VA frm_mnPrevAddNumb_AN8 [AN8] = FC Address Number [AN8]
     //
     If VA frm_CompareSoldTo [ALKY] is equal to <Blank>
     Or VA frm_CompareSoldTo [ALKY] is equal to <NULL>
     Or VA frm_CompareSoldTo [ALKY] is equal to "0"
          VA frm_CompareSoldTo [ALKY] = FC Long Address Number [ALKY]
     Else
          // Begin SAR 4783794
          If VA frm_CompareSoldTo [ALKY] is not equal to FC Long Address Number [ALKY]
               VA frm_WasSoldToChanged [EV01] = "1"
               //
               // SAR 5814943 - Create this new variable for Order Promising because the
               // existing VA frm_WasSoldToChanged is initialized to 0 only in Add mode
               VA frm_cOPSoldToChanged_EV01 [EV01] = "1"
               //
               VA frm_CompareSoldTo [ALKY] = FC Long Address Number [ALKY]
          End If
          // End SAR 4783794
     End If
End If
//
//
// SAR 5308881 - Date Sensitive Customer Sets
If VA frm_UseCustomerSet_CP19 [CP19] is equal to "1"
     FC Sold To - Customer Set - Long Address - ALKY [ALKY] = FC Long Address Number [ALKY]
End If
//
// SAR 5528875 - BEGIN - Copy Sold To/Ship To Descriptions to cust set tab
FC SOLD TO - CUSTOMER SET - LONG ADDRESS - ALKY [DL01] = FC ADDRESS NUMBER [DL01]
// SAR 5528875 - END


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Long Address Number-Shipto
Event: Control Exited/Changed-Inline
Event GUID: f599f681-a59f-11d2-a1f4-00105a1bfebf
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnSavedShipToNo [SHAN]
evt_cCustomerStatus_CUSTS [CUSTS]
----------------------------------------
Clear Control Error(FC Address Number to use for Transportation [AUFI])
Clear Control Error(FC Address Number to use for Tax [AUFT])
If FC Long Address Number-Shipto [ALKY] is not equal to <Blank>
     //
     // SAR 3771003
     If SV Form_ Mode is equal to CO UPDATE_MODE
          VA evt_mnSavedShipToNo [SHAN] = BC Address Number - Ship To (F4201.0) [SHAN]
     End If
     //
     // SAR 3193899 - modified parameters to allow Long addressnumbers to be entered
     // in standard text and let the Business function default Short Address
     //
     // SAR 5370131 - Use N0100061 instead of B0100016
     ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
     !      FC Long Address Number-Shipto [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Ship To [SHAN] <- mnAddressNumber [AN8]
     !      UNDEFINED <> szTaxid [TAX]
     !      "5" -> cInputSelection [EV01]
     !      UNDEFINED <> cSuccessFlag [EV02]
     !      Could not resolve Form Control. 114 <> szNameAlpha [ALPH]
     !      UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number-Shipto [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC SHIP TO [DL01] <> szNameAlpha [ALPH]
     // SAR 3372571 - Begin/End DISABLE
     ! FC Long Address Number-Shipto [ALKY] = [FC Ship To [SHAN]]
     // SAR 3372571 - Begin ADD
     If FC Ship To [SHAN] is equal to "0"
     And PO cAddNewCustomersToAB [EV17] is equal to "1"
          Call App:P01012 Form:W01012B Version:ZJDEC003
               FC Ship To [SHAN] <> mnAddressNumber [AN8]
               UNDEFINED <> szAddressType1 [AT1]
          // SAR 5370131 - Use N0100061 instead of B0100016
          ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
          !      FC Long Address Number-Shipto [ALKY] <> szAlternateAddressKey [ALKY]
          !      FC Ship To [SHAN] <- mnAddressNumber [AN8]
          !      UNDEFINED <> szTaxid [TAX]
          !      "5" -> cInputSelection [EV01]
          !      UNDEFINED <> cSuccessFlag [EV02]
          !      Could not resolve Form Control. 114 <> szNameAlpha [ALPH]
          !      UNDEFINED <> szLongAddressKey [MLNM]
          ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
               FC Long Address Number-Shipto [ALKY] <> szAlternateAddressKey [ALKY]
               FC Ship To [SHAN] <- mnAddressNumber [AN8]
               "5" -> cInputSelection [EV01]
               FC SHIP TO [DL01] <> szNameAlpha [ALPH]
     End If
     // SAR 3372571 - End ADD
     //
     // SAR 3771003 Begin
     If SV Form_ Mode is equal to CO ADD_MODE
          If FC Ship To [SHAN] is not equal to <Blank>
          And FC Ship To [SHAN] is not equal to <NULL>
          And FC Ship To [SHAN] is not equal to "0"
          And VA frm_mnShipTo_SHAN [SHAN] is not equal to <Blank>
          And VA frm_mnShipTo_SHAN [SHAN] is not equal to <NULL>
          And VA frm_mnShipTo_SHAN [SHAN] is not equal to "0"
               If FC Ship To [SHAN] is not equal to VA frm_mnShipTo_SHAN [SHAN]
                    // Sar 5774099 moved 5408751's fix here
                    VA frm_cBeginDoc_IsCalled_EV19 [EV19] = 0
                    // End Sar 5774099
                    VA frm_SuppressProcess [MATH01] = "0"
                    FC Tax Rate/Area [TXA1] = "  "
                    FC Freight Handling Code [FRTH] = "  "
                    FC Route Code [ROUT] = "  "
                    FC Stop Code [STOP] = "  "
                    FC Zone Number [ZON] = "  "
                    FC Delivery Instructions1 [DEL1] = "  "
                    FC Delivery Instructions2 [DEL2] = "  "
                    FC Weight Display U/M [WUMD] = "  "
                    FC Volume Display U/M [VUMD] = "  "
                    FC Carrier Number [CARS] = "0"
                    // SAR 4558028-B9 DB Change
               End If
          End If
     Else
          If FC Ship To [SHAN] is not equal to VA evt_mnSavedShipToNo [SHAN]
          And SV Form_ Mode is equal to CO UPDATE_MODE
               VA frm_SuppressProcess [MATH01] = "0"
               FC Tax Rate/Area [TXA1] = "  "
               FC Freight Handling Code [FRTH] = "  "
               FC Route Code [ROUT] = "  "
               FC Stop Code [STOP] = "  "
               FC Zone Number [ZON] = "  "
               FC Delivery Instructions1 [DEL1] = "  "
               FC Delivery Instructions2 [DEL2] = "  "
               FC Weight Display U/M [WUMD] = "  "
               FC Volume Display U/M [VUMD] = "  "
               FC Carrier Number [CARS] = "0"
               // SAR 4558028-B9 DB Change
          End If
     End If
     // SAR 3771003 End
Else
     // SAR 3530912 - Begin/End ADD
     FC Ship To [SHAN] = "0"
     // **************************************************************************
     // SAR 2938828 - Begin/End Change
     // The condition will be expanded so that the Ship To address will only
     // be defaulted after the OK button is pressed. This will ensure that the
     // correct Related Address is retrieved.
     // **************************************************************************
     If FC Address Number [AN8] is not equal to "0"
     And FC EV20:  Updated to Hdr wf [EV20] is not equal to "0"
          FC Long Address Number-Shipto [ALKY] = [FC Long Address Number [ALKY]]
          FC Ship To [SHAN] = FC Address Number [AN8]
     End If
End If
//
// **************************************************************************
// SAR 2938828 - Begin/End Add
// Only call the Customer Master if there is a Ship To Address.
// SAR 3278411 - Begin/End CHANGE
// **************************************************************************
If FC Long Address Number-Shipto [ALKY] is not equal to <Blank>
And FC Long Address Number-Shipto [ALKY] is not equal to "0"
     // SAR 8955602 - Add logic for defaulting the Use Taxed Prices flag.
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     And VA frm_cCustomerTaxedPrices_CTXP [CTXP] is equal to "2"
     And SV Form_ Mode is equal to CO ADD_MODE
     And VA frm_mnPrevShipTo_SHAN [SHAN] is not equal to FC Ship To [SHAN]
          // Customer Tax Prices = 1 if Customer Billing Information is by Ship To
          // customer. Get the value of Use Taxed Prices flag set for the Ship To
          // customer
          VA frm_mnCustAddNum_AN8 [AN8] = FC Ship To [SHAN]
          VA frm_szOrderCompany_CO [CO] = FC Order Key Company [KCOO]
          Press Button(FC Get UTP From Tag Customer Master)
     End If
     VA frm_mnPrevShipTo_SHAN [SHAN] = FC Ship To [SHAN]
     //
     // SAR 3278411 - Begin/End CHANGE
     // SAR 33725711 - Begin/End CHANGE
     Clear Control Error(FC Long Address Number-Shipto [ALKY])
     // SAR 33725711 - Begin/End ADD
     If SV Error_Status is not equal to CO SUCCESS
     Or FC Ship To [SHAN] is equal to "0"
          // SAR 2992592
          If SV Error_Status is not equal to CO SUCCESS
          And PO cAddNewCustomersToAB [EV17] is equal to "1"
          And FC Ship To [SHAN] is not equal to "0"
               // SAR 3278411 - Begin/End CHANGE
               Call App:P01012 Form:W01012B Version:ZJDEC003
                    FC Ship To [SHAN] <> mnAddressNumber [AN8]
                    UNDEFINED <> szAddressType1 [AT1]
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    FC Order Key Company [KCOO] -> szCompany [CO]
                    VA frm_szOrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
                    FC Apply Freight [AFT] <- cApplyFreightYN [AFT]
                    FC Ship To [SHAN] -> mnCustomerNumber [AN8]
                    VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
               // SAR 33725711 - Begin ADD
               If SV Error_Status is not equal to CO SUCCESS
                    // SAR# 4364282 - Change Error0037 to 3490 for more meaningfulness
                    Set Control Error(FC Long Address Number-Shipto, "3490")
                    Stop Processing
               Else
                    If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                         Set Control Error(FC Long Address Number-Shipto, "CUSTS1")
                         Stop Processing
                    End If
               End If
          Else
               // SAR# 4364282 - Change Error0037 to 3490 for more meaningfulness
               Set Control Error(FC Long Address Number-Shipto, "3490")
               Stop Processing
               // SAR 33725711 - End ADD
          End If
     End If
     //
     // SAR# 2159980 get the AFT from customer bill instruction
     // The following condition is in case user tab through the SHIPTO Field
     //
     If FC Ship To [SHAN] is equal to <Blank>
     Or FC Ship To [SHAN] is equal to <NULL>
     Or FC Ship To [SHAN] is equal to "0"
          VA frm_mnShipTo_SHAN [SHAN] = FC Address Number [AN8]
     Else
          VA frm_mnShipTo_SHAN [SHAN] = FC Ship To [SHAN]
          // ****************************************************************
          // SAR 5814943 - Have to implement this logic here since ShipTo Control
          // Exited/Changed event for some reason gets triggered even when ShipTo is not
          // changed.  This same logic is implemented also on Branch/Plant and SoldTo
          // Control Exited/Changed event
          //
          If VA frm_mnPreviousShipTo_SHAN [SHAN] is less than or equal to "0"
               VA frm_mnPreviousShipTo_SHAN [SHAN] = FC Ship To [SHAN]
          Else
               If VA frm_mnPreviousShipTo_SHAN [SHAN] is not equal to FC Ship To [SHAN]
                    VA frm_cOPShipToChanged_EV01 [EV01] = "1"
                    VA frm_mnPreviousShipTo_SHAN [SHAN] = FC Ship To [SHAN]
               End If
          End If
          // End of SAR 5814943
          // ****************************************************************
     End If
     //
     // SAR 3372571 - Begin/End CHANGE
     // Sar 6017962 Begin/End
     If FC Ship To [SHAN] is not equal to VA evt_mnSavedShipToNo [SHAN]
          // SAR 6078141 passes ShipTo template
          MBFCustomerMaster(N0100042.MBFCustomerMaster)
               "I" -> cActionCode [ACTN]
               "1" -> cSuppressErrorMessage [SUPPS]
               FC Order Key Company [KCOO] -> szCompany [CO]
               VA frm_szOrderTempShipTo_ORTP [ORTP] <- szOrderTemplate [ORTP]
               FC Apply Freight [AFT] <- cApplyFreightYN [AFT]
               VA frm_mnShipTo_SHAN [SHAN] -> mnCustomerNumber [AN8]
               VA evt_cCustomerStatus_CUSTS [CUSTS] <- cCustomerStatus [CUSTS]
          If SV Error_Status is equal to CO SUCCESS
               If VA evt_cCustomerStatus_CUSTS [CUSTS] is equal to "1"
                    Set Control Error(FC Long Address Number-Shipto, "CUSTS1")
                    Stop Processing
               End If
          End If
     End If
     // End of SAR# 2159980 get the AFT from customer bill instruction
     //
     // SAR 8569904 - AFT shold get populated from Ship to customer Billing
     // information
     // SAR 4528671
     //
     ! // Sar 5408751 - Manual changes to header information should be retained.
     ! VA frm_cBeginDoc_IsCalled_EV19 [EV19] = 0
End If
//
// SAR 5308881 - Date Sensitive Customer Sets
If VA frm_UseCustomerSet_CP19 [CP19] is equal to "1"
     FC Ship To - Customer Set - Long Address - ALKY [ALKY] = FC Long Address Number-Shipto [ALKY]
End If
// SAR 5528875 - BEGIN - Copy Sold To/Ship To Descriptions to cust set tab
FC SHIP TO - CUSTOMER SET - LONG ADDRESS - ALKY [DL01] = FC SHIP TO [DL01]
// SAR 5528875 - END


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Use Taxed Prices
Event: Selection Changed
Event GUID: 910f77e5-6c6d-4ffc-8e54-7280dfbbef81
=============================================
// SAR 8955602 - Save the checkbox value in a variable.
VA frm_cUseTaxedPrices_UTP [UTP] = FC Use Taxed Prices [UTP]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Print Message
Event: Control Exited/Changed-Inline
Event GUID: ab6b3891-e6e6-11d2-97bb-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Hold Orders Code
Event: Control Exited/Changed-Asynch
Event GUID: f57df5c0-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_HoldCodeType_CTYP [CTYP]
evt_HoldErrorCode_ERR [ERR]
----------------------------------------
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4351351                   VK6272082                 07/07/00 
//  
// SAR 8914501
If FC Business Unit [MCU] is not equal to <Blank>
And FC Hold Orders Code [HOLD] is not equal to <Blank>
     GetHoldCodeInformation(B4001110.GetHoldCodeInformation)
          FC Business Unit [MCU] -> szBranchPlant [MCU]
          FC Hold Orders Code [HOLD] -> szHoldCode [HCOD]
          VA evt_HoldCodeType_CTYP [CTYP] <- szCodeType [CTYP]
          VA evt_HoldErrorCode_ERR [ERR] <- cErrorCode [ERR]
     If VA evt_HoldCodeType_CTYP [CTYP] is not equal to "O"
     Or VA evt_HoldErrorCode_ERR [ERR] is equal to "1"
          Set Control Error(FC Hold Orders Code, "146T")
     End If
End If

=============================================
Form: Sales Order Header - W4210G
Object: FC Hold Orders Code
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a0-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Rate/Area
Event: Control is Entered
Event GUID: 04ee8304-b8ea-4887-a650-4c9de609bbdf
=============================================
// Sar 5284989
VA frm_cOriginalTaxArea [TXA1] = FC Tax Rate/Area [TXA1]

=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Rate/Area
Event: Control Exited/Changed-Asynch
Event GUID: 8327a882-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Reset  the cGeoCodeValid Flag to be invalid
//
// Sar 5284989 Begin
If VA frm_cOriginalTaxArea [TXA1] is not equal to FC Tax Rate/Area [TXA1]
     VA frm_cGeoCodeValid [EV01] = "0"
     Clear Control Error(FC Tax Rate/Area [TXA1])
     //
     // SAR 6500241
     ! VA frm_cGeoCodeValid [EV01] = "0"
     ! Clear Control Error(FC Tax Rate/Area [TXA1])
     //
     //  If Vertex is active call B7300002 ("Validate GeoCode") to be sure, if a
     //  geocode was entered in the tax area field, that it is valid.
     //
     If VA frm_cVertexActive [VVTX] is equal to "1"
          Clear Control Error(FC Tax Expl Code [EXR1])
          ValidateGeoCode(B7300002.ValidateGeoCode)
               FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
               FC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
               VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
               <Blank> -> cDeleteGeoCodeCache [EV01]
     End If
     //
     //
     // SAR 3067905
     ! If FC Address Number [AN8] is equal to <Blank>
          ! Clear Control Error(FC Long Address Number [ALKY])
     ! End If
     //
     If VA frm_cGeoCodeValid [EV01] is not equal to "1"
          EditTaxRateArea(B0000140.EditTaxRateArea)
               FC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
               UNDEFINED <> szDescriptionTaxArea [TAXA]
     Else
          Clear Control Error(FC Tax Expl Code [EXR1])
          // SAR 6385669
          If FC Tax Expl Code [EXR1] is not equal to <Blank>
          And FC Tax Expl Code [EXR1] is not equal to("E","S")
               Set Control Error(FC Tax Expl Code, "4999")
          End If
     End If
End If
// Sar 5284989 end

=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Rate/Area
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a1-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If

=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Rate/Area
Event: Visual Assist Button Clicked
Event GUID: 8327a883-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call N73000006 to determine which Visual Assist Form to bring up.
//
Suppress Default Visual Assist Form
// SAR 6072347 - Begin
// BUG# 11054680 - Rolled back SAR# 8878301
SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
     FC Ship To [SHAN] -> mnAddressNumber [AN8]
     FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
     FC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
     VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
     VA frm_szSearchType [AT1] <> szSearchType [AT1]
     VA frm_szVertexCanadaCountryCode [VVCN] -> szVertrexCanadaCountryCode [VVCN]
     "0" -> cMasterFile [EV03]
     VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]
// SAR 6072347 - End
Clear Control Error(FC Tax Expl Code [EXR1])


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Expl Code
Event: Control Exited/Changed-Asynch
Event GUID: 8327a881-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
If VA frm_cGeoCodeValid [EV01] is equal to "1"
     // 
     //  If the tax explanation is equal to Exempt, Sales or Use then clear any error
     // "4999") that might have been set to indicate that the tax explanation code is
     // invalid. 
     // 
     // SAR 6562549
     If FC Tax Expl Code [EXR1] is equal to ("E","S")
          Clear Control Error(FC Tax Expl Code [EXR1])
     Else
          Set Control Error(FC Tax Expl Code, "4999")
     End If
End If
// -----------------------------------------------------------------------------

=============================================
Form: Sales Order Header - W4210G
Object: FC Tax Expl Code
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a2-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Order Taken By
Event: Control Exited/Changed-Asynch
Event GUID: f57df5c1-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Taken By [TKBY] is equal to or empty <Blank>
And FI Documentorderinvoicee [DOCO] is equal to "0"
And FI Ordertype [DCTO] is equal to or empty "   "
     FC Order Taken By [TKBY] = FC USER-User ID (wf) [UPMB]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Order Number
Event: Control is Exited
Event GUID: 5ef15cdb-e064-11d1-9ac9-00600832fe19
=============================================
If FC Order Number [DOCO] is equal to "0"
     Disable Control(HC &Attachments)
End If

=============================================
Form: Sales Order Header - W4210G
Object: FC Order Number
Event: Control Exited/Changed-Inline
Event GUID: 5ef15cd9-e064-11d1-9ac9-00600832fe19
=============================================
Disable Control(HC &Attachments)
If SV Form_ Mode is equal to CO ADD_MODE
     Clear Edit Control Error(FC Order Number [DOCO])
     If FC Order Number [DOCO] is not equal to <Blank>
          VA frm_DTAI_Error_Message [DTAI] = "  "
          VerifyAndGetSalesHdr(B4200340.VerifyAndGetSalesHdr)
               FC Order Number [DOCO] -> mnOrderNo [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Key Company [KCOO] -> szKeyCompany [KCOO]
               "2" -> cCallType [EV01]
               VA frm_DTAI_Error_Message [DTAI] <- szErrorMesg [DTAI]
               "1" -> cSuppressErrorMesg [EV02]
               "0" -> cReturnPtr [EV03]
               UNDEFINED <> idF4201Ptr [GENLNG]
               UNDEFINED <> cHistoryRecordFlag [EV04]
          If VA frm_DTAI_Error_Message [DTAI] is not equal to <Blank>
               Set Edit Control Error(FC Order Number, "0002")
          Else
               Enable Control(HC &Attachments)
          End If
          VA frm_DTAI_Error_Message [DTAI] = <Blank>
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Order Type
Event: Control Exited/Changed-Asynch
Event GUID: f57df5c2-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Type [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Order Key Company
Event: Control Exited/Changed-Asynch
Event GUID: 90932e3e-a23d-11d0-a204-0000f6728a56
=============================================
If SL CurrencyProcessing is not equal to "N"
And FC Base Currency [CRDC] is equal to or empty <Blank>
And FC Order Key Company [KCOO] is not equal to <Blank>
     // SAR 8577189 - Format the Company before calling to get Company Currency
     // Code 
     FormatCompany(B0000095.FormatCompany)
          FC Order Key Company [KCOO] <- szBehaviorEditString [BHVREDTST]
          FC Order Key Company [KCOO] -> szCompany [CO]
     RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
          FC Order Key Company [KCOO] -> szCompany [CO]
          FC Base Currency [CRDC] <- szCurrencyCode [CRCD]
          UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
          UNDEFINED <> cPostByCurrency [ABIN]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Currency Code
Event: Control Exited/Changed-Asynch
Event GUID: f57e07e7-a23a-11d0-a204-0000f6728a56
=============================================
// 
//     If both the Transaction Currency and the Base Currency are the same,
   
//     disable the 'Foreign' checkbox.
// 
If FC Currency Code [CRCD] is equal to FC Base Currency [CRDC]
And FC Currency Code [CRCD] is not equal to <Blank>
     Disable Control(FC Foreign [CRRM])
     Disable Control(FC Exchange Rate [CRR])
     FC Exchange Rate [CRR] = "0"
     FC Foreign [CRRM] = "D"
Else
     Enable Control(FC Foreign [CRRM])
     Enable Control(FC Exchange Rate [CRR])
     FC Foreign [CRRM] = "F"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Exchange Rate
Event: Control is Entered
Event GUID: 8c7e3a52-6215-11d2-a73e-0000f6a025f4
=============================================
Was Value Entered(FC Exchange Rate, VA frm_cIsExcangeRateEntered_EV01)

=============================================
Form: Sales Order Header - W4210G
Object: FC Exchange Rate
Event: Control Exited/Changed-Asynch
Event GUID: f57e07e8-a23a-11d0-a204-0000f6728a56
=============================================
// 
//     If both the Transaction Currency and the Base Currency are the 
//     same,
//     disable the 'Foreign' checkbox.
// 
If SV Form_ Mode is equal to CO ADD_MODE
And FC Currency Code [CRCD] is equal to FC Base Currency [CRDC]
And FC Currency Code [CRCD] is not equal to <Blank>
     Disable Control(FC Foreign [CRRM])
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Delivered To - Long Address - ALKY
Event: Control Exited/Changed-Inline
Event GUID: 8667d7ac-ca4c-446f-9ee5-f2f71b872c24
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Deliver To [DVAN] = <NULL>
If FC Delivered To - Long Address - ALKY [ALKY] is not equal to <Blank>
     Clear Control Error(FC Delivered To - Long Address - ALKY [ALKY])
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Delivered To - Long Address - ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Deliver To [DVAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC DELIVERED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// SAR 8374058 - If DVAN is changed, the related fields must be blanked out
If FC Deliver To [DVAN] is not equal to VA frm_mnDeliverTo_DVAN [DVAN]
And FC Address Number to use for Transportation [AUFI] is equal to "2"
     VA frm_SuppressProcess [MATH01] = "0"
     Press Button(FC ClearAdditionalInfoFields)
End If
// SAR 8374058 - Begins


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Invoiced To - Long Address - ALKY
Event: Control Exited/Changed-Inline
Event GUID: 860ae089-522b-4c81-8947-c2d52455067b
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Address Number - Invoiced To [ITAN] = <NULL>
If FC Invoiced To - Long Address - ALKY [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Invoiced To - Long Address - ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number - Invoiced To [ITAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC INVOICED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Paid By - Long Address - ALKY
Event: Control Exited/Changed-Inline
Event GUID: 67f95c3b-e7b2-469f-b129-71b753671a0e
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Paid By [PBAN] = <NULL>
If FC Paid By - Long Address - ALKY [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Paid By - Long Address - ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Paid By [PBAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC PAID BY - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Forwaded To - Long Address - ALKY
Event: Control Exited/Changed-Inline
Event GUID: c5fafc26-51ba-4639-a21b-3d5a8236c87d
=============================================
// SAR 5308881 - Date Sensitive Customer Sets
FC Forwarded To [FTAN] = <NULL>
If FC Forwaded To - Long Address - ALKY [ALKY] is not equal to <Blank>
     // 
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Forwaded To - Long Address - ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Forwarded To [FTAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC FORWADED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Address Number to use for Tax
Event: Control Exited/Changed-Inline
Event GUID: 77832ff4-b3ba-4f04-8a36-d7f14b66707e
=============================================
Clear Control Error(FC Delivered To - Long Address - ALKY [ALKY])
If FC Address Number to use for Tax [AUFT] is equal to "2"
     If FC Delivered To - Long Address - ALKY [ALKY] is equal to <Blank>
     Or FC Delivered To - Long Address - ALKY [ALKY] is equal to <NULL>
          Set Control Error(FC Delivered To - Long Address - ALKY, "0037")
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Address Number to use for Transportation
Event: Control Exited/Changed-Inline
Event GUID: 08fccb37-b50f-48b3-b5ad-2349790ba034
=============================================
// SAR 8374058 - If AUFI is changed, the relatefd fields must be blanked out 
If FC Address Number to use for Transportation [AUFI] is not equal to VA frm_cAddressForTransport_AUFI [AUFI]
     VA frm_SuppressProcess [MATH01] = "0"
     Press Button(FC ClearAdditionalInfoFields)
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Adjustment Schedule
Event: Control Exited/Changed-Asynch
Event GUID: 6d0ff3cb-4140-4242-bd55-04914f311801
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSpecialHandlingCode [SPHD]
----------------------------------------
// SAR 5538731
GetUDC(X0005.GetUDC)
     UNDEFINED <> szDataDictionaryItem [DTAI]
     "40" -> szSystemCode [SY]
     "AS" -> szRecordTypeCode [RT]
     FC Adjustment Schedule [ASN] -> szUserDefinedCode [KY]
     UNDEFINED <> mnKeyFieldLength [AS]
     UNDEFINED <> szLanguagePreference [LNGP]
     UNDEFINED <> szDescription001 [DL01]
     UNDEFINED <> szDescription002 [DL02]
     VA evt_szSpecialHandlingCode [SPHD] <- szSpecialHandlingCode [SPHD]
     UNDEFINED <> cUdcOwnershipFlag [UDCO]
     UNDEFINED <> cHardCodedYn [HRDC]
     UNDEFINED <> cSuppressErrorMessage [EV01]
     UNDEFINED <> szErrorMessageId [DTAI]
     UNDEFINED <> cUDCOne [EV01]
If VA evt_szSpecialHandlingCode [SPHD] is not equal to <Blank>
And VA evt_szSpecialHandlingCode [SPHD] is not equal to <NULL>
And VA evt_szSpecialHandlingCode [SPHD] is not equal to "0"
     Set Control Error(FC Adjustment Schedule, "42B9")
End If
// END SAR 5538731

=============================================
Form: Sales Order Header - W4210G
Object: FC Adjustment Schedule
Event: Control Exited/Changed-Inline
Event GUID: c2660350-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If

=============================================
Form: Sales Order Header - W4210G
Object: FC Adjustment Schedule
Event: Visual Assist Button Clicked
Event GUID: 7957bc3c-6b0d-42aa-8238-4eba5618d92b
=============================================
// SAR 5473528
Suppress Default Visual Assist Form
// SAR 8437910- Pass the Adjustment Schedule to P4070, So that the defaulted
// FC Adj value will be retained incase, if no Adjustment is selected  from
// Visual assist 
Call App:P4070 Form:W4070B Version:ZJDE0001
     "40" -> szProductCode [SY]
     "AS" -> szUserDefinedCodes [RT]
     FC Adjustment Schedule [ASN] <> szUserDefinedCode [KY]
     <Blank> -> cProcessingMode [EV01]


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Payment Terms
Event: Control Exited/Changed-Inline
Event GUID: ab6b3892-e6e6-11d2-97bb-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Payment Instrument
Event: Control Exited/Changed-Inline
Event GUID: ab6b3893-e6e6-11d2-97bb-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Trade Discount
Event: Control Exited/Changed-Inline
Event GUID: c2660351-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Pricing Group
Event: Control Exited/Changed-Inline
Event GUID: c2660352-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Delivery Instructions1
Event: Control Exited/Changed-Inline
Event GUID: c2660353-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Delivery Instructions2
Event: Control Exited/Changed-Inline
Event GUID: c2660354-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Carrier Number
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a5-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Freight Handling Code
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a6-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Route Code
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a7-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Stop Code
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a8-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Zone Number
Event: Control Exited/Changed-Inline
Event GUID: 1aec30a9-ec3c-11d2-97c8-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Volume Display U/M
Event: Control Exited/Changed-Inline
Event GUID: c2660355-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Weight Display U/M
Event: Control Exited/Changed-Inline
Event GUID: c2660356-f9d5-11d2-97d0-0000396e080e
=============================================
// 3062872 -Add a condition here to skip Suppress Process if OK button is not
// clicked  in which case the field is not populated yet.
If VA frm_cBeginDoc_IsCalled_EV19 [EV19] is equal to "1"
     VA frm_SuppressProcess [MATH01] = "9"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Apply Freight
Event: Selection Changed
Event GUID: 01372e76-bbd8-11d4-a17f-000629f5450a
=============================================
// 
// SAR 8550197 - AFT shold get populated from Ship to customer Billing
// information
// SAR 4528671
// 


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Additional Header Information
Event: Tab Page is Selected
Event GUID: 46e45b5d-b9e6-4782-b5b1-bbe5b713c6fb
=============================================
// SAR# 4541912 Begin
If FC Address Number [AN8] is not equal to "0"
     If VA frm_SoldToBSC [BSC] is equal to <Blank>
     Or VA frm_SoldToBSC [BSC] is equal to <NULL>
          FC SoldTo Buying Segment Code [BSC] = BC Buying Segment Code (F4201.0) [BSC]
     Else
          FC SoldTo Buying Segment Code [BSC] = VA frm_SoldToBSC [BSC]
     End If
     If VA frm_ShipToBSC [BSC] is equal to <Blank>
     Or VA frm_ShipToBSC [BSC] is equal to <NULL>
          If FC Ship To [SHAN] is not equal to "0"
          And FC SoldTo Buying Segment Code [BSC] is not equal to <Blank>
               MBFCustomerMaster(N0100042.MBFCustomerMaster)
                    "I" -> cActionCode [ACTN]
                    UNDEFINED <> cUpdateMasterFile [EV01]
                    UNDEFINED <> cProcessEdits [EV01]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    UNDEFINED <> szErrorMessageID [DTAI]
                    UNDEFINED <> szVersion [VERS]
                    UNDEFINED <> szAlternateAddressKey [ALKY]
                    UNDEFINED <> szCreditMessage [CM]
                    FC Order Key Company [KCOO] -> szCompany [CO]
                    UNDEFINED <> szPolicyName [PLYN]
                    UNDEFINED <> mnPolicyNumber [PLY]
                    UNDEFINED <> cAutoReceipt [ATCS]
                    UNDEFINED <> szAutoReceiptsExecutionList [ARL]
                    UNDEFINED <> szAutoReceiptAlgorithm [ALGM]
                    UNDEFINED <> mnPayorAddressNumber [PYR]
                    UNDEFINED <> szARClass [ARC]
                    UNDEFINED <> szCostCenterArDefault [MCUR]
                    UNDEFINED <> szObjectAcctsReceivable [OBAR]
                    UNDEFINED <> szSubsidiaryAcctsReceiv [AIDR]
                    UNDEFINED <> szCompanyKeyARModel [KCOR]
                    UNDEFINED <> mnDocArDefaultJe [DCAR]
                    UNDEFINED <> szDocTyArDefaultJe [DTAR]
                    UNDEFINED <> szCurrencyCodeFrom [CRCD]
                    UNDEFINED <> szTaxArea1 [TXA1]
                    UNDEFINED <> szTaxExplanationCode1 [EXR1]
                    UNDEFINED <> mnAmountCreditLimit [ACL]
                    UNDEFINED <> cArHoldInvoices [HDAR]
                    UNDEFINED <> szPaymentTermsAR [TRAR]
                    UNDEFINED <> cSendStatementToCP [STTO]
                    UNDEFINED <> cPaymentInstrumentA [RYIN]
                    UNDEFINED <> cPrintStatementYN [STMT]
                    UNDEFINED <> cAutoCash_2 [ATCS]
                    UNDEFINED <> cSendInvoiceToCP [SITO]
                    UNDEFINED <> cSequenceForLedgrInq [SQNL]
                    UNDEFINED <> szStatementCycle [CYCN]
                    UNDEFINED <> cBalForwardOpenItem [BO]
                    UNDEFINED <> szTempCreditMessage [TSTA]
                    UNDEFINED <> cCreditCkHandlingCode [CKHC]
                    UNDEFINED <> jdDateLastCreditReview [DLC]
                    UNDEFINED <> cDelinquencyLetter [DNLT]
                    UNDEFINED <> szLastCreditReview [PLCR]
                    UNDEFINED <> jdDateRecallforReview [RVDJ]
                    UNDEFINED <> mnDaysSalesOutstanding [DSO]
                    UNDEFINED <> szCreditManager [CMGR]
                    UNDEFINED <> szCollectionManager [CLMG]
                    UNDEFINED <> mnNumberDunningLetters [DLQT]
                    UNDEFINED <> jdDateLastDunningLetterJul [DLQJ]
                    UNDEFINED <> cNumberReminders [NBRR]
                    UNDEFINED <> cCollectionReport [COLL]
                    UNDEFINED <> mnNoSentReminders2 [NBR2]
                    UNDEFINED <> mnNoSentReminders3 [NBR3]
                    UNDEFINED <> mnNoSentCollection [NBCL]
                    UNDEFINED <> cApplyFinChargesYN [AFC]
                    UNDEFINED <> mnFinChrgDaysFutureU [FD]
                    UNDEFINED <> mnPercentageFactor [FP]
                    UNDEFINED <> cFinanChgeCreateEntr [CFCE]
                    UNDEFINED <> cMiscCode2 [AB2]
                    UNDEFINED <> jdDateLastStatementDate_2 [DT1J]
                    UNDEFINED <> jdDateFirstInvoiceJulian [DFIJ]
                    UNDEFINED <> jdDateLastInvoiceJulian [DLIJ]
                    UNDEFINED <> cAbcCodeSales [ABC1]
                    UNDEFINED <> cAbcCodeMargin [ABC2]
                    UNDEFINED <> cAbcCodeAverageDays [ABC3]
                    UNDEFINED <> jdDateFinancialStmtsonHand [FNDJ]
                    UNDEFINED <> jdDateHighBalanceJulian [DHBJ]
                    UNDEFINED <> jdDateLastPaid [DLP]
                    UNDEFINED <> szDunBradstreetRating [DB]
                    UNDEFINED <> jdDateDunBradstreet [DNBJ]
                    UNDEFINED <> szTrwNumber [TRW]
                    UNDEFINED <> jdTRWDateJ [TWDJ]
                    UNDEFINED <> mnAverageDaysToPay [AVD]
                    UNDEFINED <> szCurrencyCodeAmounts [CRCA]
                    UNDEFINED <> mnAmountDue [AD]
                    UNDEFINED <> mnAmtPyFinanceCharges [AFCP]
                    UNDEFINED <> mnAmtYtdFinanceCharges [AFCY]
                    UNDEFINED <> mnAmtInvoicedThisYr [ASTY]
                    UNDEFINED <> mnAmtInvoicedPriorYr [SPYE]
                    UNDEFINED <> mnAmountHighBalance [AHB]
                    UNDEFINED <> mnAmountLastPaid [ALP]
                    UNDEFINED <> mnAmountAddressBook [ABAM]
                    UNDEFINED <> mnAmount1 [ABA1]
                    UNDEFINED <> mnAmountOpenOrder [APRC]
                    UNDEFINED <> mnOrdersYearToDate [OYTD]
                    UNDEFINED <> mnOrdersPriorYear [OPY]
                    UNDEFINED <> szPersonOpeningAcct [POPN]
                    UNDEFINED <> jdDateAccountOpenedJulian [DAOJ]
                    UNDEFINED <> mnRelatedAddressNo [AN8R]
                    UNDEFINED <> jdNextInvoiceDate [NIVD]
                    UNDEFINED <> szUserReservedCode [URCD]
                    UNDEFINED <> jdUserReservedDate [URDT]
                    UNDEFINED <> mnUserReservedAmount [URAT]
                    UNDEFINED <> mnUserReservedNumber [URAB]
                    UNDEFINED <> szUserReservedReference [URRF]
                    UNDEFINED <> mnClaimsManager [MAN8]
                    UNDEFINED <> AN8OutputOnly [AN8]
                    UNDEFINED <> mnAltPayor [ARPY]
                    UNDEFINED <> mnNoSentReminders1 [NBR1]
                    UNDEFINED <> mnMinimumOrderValue [MINO]
                    UNDEFINED <> mnMaximumOrderValue [MAXO]
                    UNDEFINED <> cBillingAddressType [BADT]
                    UNDEFINED <> szOrderTemplate [ORTP]
                    UNDEFINED <> mnDiscountTrade [TRDC]
                    UNDEFINED <> szPrintMessage1 [INMG]
                    UNDEFINED <> cExemptCreditHold [EXHD]
                    UNDEFINED <> szHoldOrdersCode [HOLD]
                    UNDEFINED <> szRouteCode [ROUT]
                    UNDEFINED <> szStopCode [STOP]
                    UNDEFINED <> szZoneNumber [ZON]
                    UNDEFINED <> mnCarrier [CARS]
                    UNDEFINED <> szDeliveryInstructLine1 [DEL1]
                    UNDEFINED <> szDeliveryInstructLine2 [DEL2]
                    UNDEFINED <> mnLeadtimeTransit [LTDT]
                    UNDEFINED <> szFreightHandlingCode [FRTH]
                    UNDEFINED <> cApplyFreightYN [AFT]
                    UNDEFINED <> cPartialShipmntsAllowY [APTS]
                    UNDEFINED <> cSubstitutesAllowedYN [SBAL]
                    UNDEFINED <> cBackordersAllowedYN [BACK]
                    UNDEFINED <> cCustomerPORequiredYN [PORQ]
                    UNDEFINED <> cPriorityProcessing [PRIO]
                    UNDEFINED <> cAccountsReceivableCps [ARTO]
                    UNDEFINED <> mnInvoiceCopies [INVC]
                    UNDEFINED <> cInvoiceConsolidation [ICON]
                    UNDEFINED <> cBillFrequency [BLFR]
                    UNDEFINED <> jdDateLicenseExpiratio [LEDJ]
                    UNDEFINED <> cPricePickListYN [PLST]
                    UNDEFINED <> cMergeOrdersYN [MORD]
                    UNDEFINED <> cPalletControl [PALC]
                    UNDEFINED <> mnCommissionCode1 [CMC1]
                    UNDEFINED <> mnRateCommission1 [CMR1]
                    UNDEFINED <> mnCommissionCode2 [CMC2]
                    UNDEFINED <> mnRateCommission2 [CMR2]
                    UNDEFINED <> szUnitOfMeasureWhtDisp [WUMD]
                    UNDEFINED <> szUnitOfMeasureVolDisp [VUMD]
                    UNDEFINED <> cBatchProcessingMode [EDPM]
                    UNDEFINED <> cCustomerTypeIdentifier [EDCI]
                    UNDEFINED <> cItemTypeIdentifier [EDII]
                    UNDEFINED <> mnQuantityDecimals [EDQD]
                    UNDEFINED <> mnAmountDecimals [EDAD]
                    UNDEFINED <> cDeliveryNote [EDF1]
                    UNDEFINED <> cItemRestrictions [EDF2]
                    UNDEFINED <> cSpecialInstruction01 [SI01]
                    UNDEFINED <> cSpecialInstruction02 [SI02]
                    UNDEFINED <> cSpecialInstruction03 [SI03]
                    UNDEFINED <> cSpecialInstruction04 [SI04]
                    UNDEFINED <> cSpecialInstruction05 [SI05]
                    UNDEFINED <> szPriceAdjustmentScheduleN [ASN]
                    UNDEFINED <> cPricingBasedOnDate [CP01]
                    UNDEFINED <> cPrintAdjustmentsonInvoic [DSPA]
                    UNDEFINED <> cCorrespondenceMethod [CRMD]
                    UNDEFINED <> mnAdminCreditLimit [AMCR]
                    UNDEFINED <> szReportCodeAddBook001 [AC01]
                    UNDEFINED <> szReportCodeAddBook002 [AC02]
                    UNDEFINED <> szReportCodeAddBook003 [AC03]
                    UNDEFINED <> szReportCodeAddBook004 [AC04]
                    UNDEFINED <> szReportCodeAddBook005 [AC05]
                    UNDEFINED <> szReportCodeAddBook006 [AC06]
                    UNDEFINED <> szReportCodeAddBook007 [AC07]
                    UNDEFINED <> szReportCodeAddBook008 [AC08]
                    UNDEFINED <> szReportCodeAddBook009 [AC09]
                    UNDEFINED <> szReportCodeAddBook011 [AC11]
                    UNDEFINED <> szReportCodeAddBook012 [AC12]
                    UNDEFINED <> szReportCodeAddBook013 [AC13]
                    UNDEFINED <> szReportCodeAddBook014 [AC14]
                    UNDEFINED <> szReportCodeAddBook015 [AC15]
                    UNDEFINED <> szReportCodeAddBook016 [AC16]
                    UNDEFINED <> szReportCodeAddBook017 [AC17]
                    UNDEFINED <> szReportCodeAddBook018 [AC18]
                    UNDEFINED <> szReportCodeAddBook019 [AC19]
                    UNDEFINED <> szCategoryCodeAddressBook2 [AC21]
                    UNDEFINED <> szCategoryCodeAddressBk22 [AC22]
                    UNDEFINED <> szCategoryCodeAddressBk23 [AC23]
                    UNDEFINED <> szCategoryCodeAddressBk24 [AC24]
                    UNDEFINED <> szCategoryCodeAddressBk25 [AC25]
                    UNDEFINED <> szCategoryCodeAddressBk26 [AC26]
                    UNDEFINED <> szCategoryCodeAddressBk27 [AC27]
                    UNDEFINED <> szCategoryCodeAddressBk28 [AC28]
                    UNDEFINED <> szCategoryCodeAddressBk29 [AC29]
                    UNDEFINED <> szCategoryCodeAddressBk30 [AC30]
                    UNDEFINED <> szProgramNameShippingLabel [SLPG]
                    UNDEFINED <> szVersionNameShippingLabel [SLDW]
                    UNDEFINED <> szConfigurationPickandPack [CFPP]
                    UNDEFINED <> szConfigurationStandardCar [CFSP]
                    UNDEFINED <> cDefaultConfiguration [CFDF]
                    UNDEFINED <> cRequiresPackagingCode [RQ01]
                    UNDEFINED <> cRequiresWeightCode [RQ02]
                    UNDEFINED <> cRequiresIdentificationCo [RQ03]
                    UNDEFINED <> szDefaultIdentificationCod [DR03]
                    UNDEFINED <> cRequiresIdentificationCode2 [RQ04]
                    UNDEFINED <> cRequiresTransportationMe [RQ05]
                    UNDEFINED <> cRequiresRouting [RQ06]
                    UNDEFINED <> cRequiresEquipment [RQ07]
                    UNDEFINED <> cRequiresReferenceNumber1 [RQ08]
                    UNDEFINED <> szDefaultReferenceNumberQu [DR08]
                    UNDEFINED <> cRequiresReferenceNumber2 [RQ09]
                    UNDEFINED <> szUserId [USER]
                    UNDEFINED <> szProgramId [PID]
                    UNDEFINED <> szWorkStationId [JOBN]
                    UNDEFINED <> jdDateUpdated [UPMJ]
                    UNDEFINED <> mnTimeLastUpdated [UPMT]
                    UNDEFINED <> szGroupCustomerPriceGp [CPGP]
                    UNDEFINED <> szDefaultIdentificationCQ2 [DR04]
                    UNDEFINED <> szDefaultIdentificationCQ [DR09]
                    FC Ship To [SHAN] -> mnCustomerNumber [AN8]
                    UNDEFINED <> OldCreditLimit [AA]
                    UNDEFINED <> szTaxId [TAX]
                    UNDEFINED <> szCompanyPolicyNum [KCO]
                    UNDEFINED <> szPolicyDescription [FDNM]
                    UNDEFINED <> mnAddressNumberParent [PA8]
                    UNDEFINED <> mnParentNumberOriginal [PA8]
                    UNDEFINED <> szAcctNoInputMode [ANI]
                    UNDEFINED <> mnOkToDelete [MATH01]
                    UNDEFINED <> cPersonCorporationCode [TAXC]
                    UNDEFINED <> szTaxId2 [TX2]
                    UNDEFINED <> mnSuccessfullyProcessed [MATH01]
                    UNDEFINED <> szVersionconsolidated [VER]
                    UNDEFINED <> szReportCodeAddBook010 [AC10]
                    UNDEFINED <> szReportCodeAddBook020 [AC20]
                    UNDEFINED <> mnCreditWorkflowStarted [MATH01]
                    UNDEFINED <> szCountryForPayroll [CCPR]
                    UNDEFINED <> cDirectionIndicator [DRIN]
                    VA frm_ShipToBSC [BSC] <- szBuyingSegmentCode [BSC]
                    UNDEFINED <> cBypassAuditLogging [BYAL]
                    UNDEFINED <> cPurgeFlag [PRGF]
                    UNDEFINED <> cFutureUseDateFlag [EFTF]
                    UNDEFINED <> jdFutureUseDate [EFTB]
                    UNDEFINED <> szOPBusinessObjective [OPBO]
                    UNDEFINED <> cAPSBusinessUnit [APSB]
               FC ShipTo Buying Segment Code [BSC] = VA frm_ShipToBSC [BSC]
          Else
               FC ShipTo Buying Segment Code [BSC] = VA frm_SoldToBSC [BSC]
          End If
     Else
          FC ShipTo Buying Segment Code [BSC] = VA frm_ShipToBSC [BSC]
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Customer Set
Event: Tab Page is Selected
Event GUID: 133255d1-1508-40cb-bec0-506d28722a13
=============================================
// This Tab Page was added for the Date Sensitive Customer Sets 


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC ClearAdditionalInfoFields
Event: Button Clicked
Event GUID: 8df204fc-bf48-49ea-96d1-487c54958f16
=============================================
// SAR 8374058 - Clearing of Additinal Info Fields 
FC Carrier Number [CARS] = "0"
FC Apply Freight [AFT] = "  "
FC Freight Handling Code [FRTH] = "  "
FC Route Code [ROUT] = "  "
FC Stop Code [STOP] = "  "
FC Zone Number [ZON] = "  "
FC Delivery Instructions1 [DEL1] = "  "
FC Delivery Instructions2 [DEL2] = "  "
FC Weight Display U/M [WUMD] = "  "
FC Volume Display U/M [VUMD] = "  "
// SAR 8374058 - Ends


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Collection
Event: Control Exited/Changed-Asynch
Event GUID: ce622497-d099-451b-853e-9ee31b155dd4
=============================================
If VA frm_cCollDescSetInVA_EV01 [EV01] is equal to "1"
     VA frm_cCollDescSetInVA_EV01 [EV01] = <Blank>
Else
     FC COLLECTION [DL01] = <Blank>
End If

=============================================
Form: Sales Order Header - W4210G
Object: FC Collection
Event: Visual Assist Button Clicked
Event GUID: 1dd09622-8bd9-4332-9b34-ae26afb553d8
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szPrevCollection_C9COLL [C9COLL]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
VA evt_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
Suppress Default Visual Assist Form
Call App:PCW15 Form:WCW15A Version:Undefined
     FC Collection [C9COLL] <> szC9COLL-Collection [C9COLL]
     FC SeasonCode [C9SEAC] <> szC9SEAC-SeasonCode [C9SEAC]
     FC Season Year [C9SEAY] <> szC9SEAY-SeasonYear [C9SEAY]
     FC Collection Price Effective Date [C9PRDJ] <> jdDatePriceReferenceJulian [C9PRDJ]
     FC COLLECTION [DL01] <> szCollectionDescription [C9DSC1]
If VA evt_szPrevCollection_C9COLL [C9COLL] is not equal to FC Collection [C9COLL]
     VA frm_cCollDescSetInVA_EV01 [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC ValidateCollection
Event: Button Clicked
Event GUID: d0c5237f-c28b-434a-a8b6-cf7386f967f3
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cErrorCode_ERRC [ERRC]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
// Mode = 1 - Called from Post Dialog is Initialized
// Mode = 2 - Called from OK Button
//
If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
          //
          // In Add mode, default from Processing option and validate against FCW06
          //
          If PO szCollection [C9COLL] is not equal to <Blank>
          Or PO szSeasonCode [C9SEAC] is not equal to <Blank>
          Or PO szSeasonYear [C9SEAY] is not equal to <Blank>
               FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                    PO szCollection [C9COLL] = TK Collection [C9COLL]
                    PO szSeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    PO szSeasonYear [C9SEAY] = TK Season Year [C9SEAY]
                    VA frm_szCollDescription_C9DSC1 [C9DSC1] <- TK Description Line 1 [C9DSC1]
                    VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
               If SV File_IO_Status is equal to CO SUCCESS
                    FC Collection [C9COLL] = PO szCollection [C9COLL]
                    FC SeasonCode [C9SEAC] = PO szSeasonCode [C9SEAC]
                    FC Season Year [C9SEAY] = PO szSeasonYear [C9SEAY]
                    FC Collection Price Effective Date [C9PRDJ] = VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                    FC COLLECTION [DL01] = VA frm_szCollDescription_C9DSC1 [C9DSC1]
                    //
                    // Default today's date if Price Effective Date from Collection is Blank
                    //
                    If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                         FC Collection Price Effective Date [C9PRDJ] = SL DateToday
                    End If
                    //
               End If
          End If
     Else
          // Retrieve the Collection from F41F201T (SO Header Apparel Tag File)
          //
          ApparelProcessF41F201T(B41F0020.ApparelProcessF41F201T)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Key Company [KCOO] -> szCompany [KCOO]
               FC Collection [C9COLL] <- szCollection [C9COLL]
               FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
               FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
               VA evt_cErrorCode_ERRC [ERRC] <- cError [EV01]
               "2" -> cActionCode [EV01]
               FC Collection Price Effective Date [C9PRDJ] <- jdDatePriceReference [C9PRDJ]
               FC COLLECTION [DL01] <- szCollectionDescription [C9DSC1]
          //
          // If Collection values are non blank, disable them and set the flag to
          // indicate the validation is done. If blank, allow the user to edit them
          //
          If VA evt_cErrorCode_ERRC [ERRC] is not equal to "1"
               If FC Collection [C9COLL] is greater than <Blank>
               And FC SeasonCode [C9SEAC] is greater than <Blank>
               And FC Season Year [C9SEAY] is greater than <Blank>
                    VA frm_cCollValidationDone_EV01 [EV01] = "1"
                    Disable Control(FC Collection [C9COLL])
                    Disable Control(FC SeasonCode [C9SEAC])
                    Disable Control(FC Season Year [C9SEAY])
                    Disable Control(FC Collection Price Effective Date [C9PRDJ])
               End If
          End If
          //
          // Copy the Previous Collection value to check if it is modified by the user
          VA frm_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
          VA frm_szPrevSeasonCode_C9SEAC [C9SEAC] = FC SeasonCode [C9SEAC]
          VA frm_szPrevSeasonYear_C9SEAY [C9SEAY] = FC Season Year [C9SEAY]
     End If
Else
     If VA frm_cApprlPressButtonMode_EV01 [EV01] is equal to "2"
          VA frm_cCollValidationErrors_ERRC [ERRC] = "0"
          //
          // Validate against FCW06 if one of the three collection fields are entered
          //
          If FC Collection [C9COLL] is not equal to <Blank>
          Or FC Season Year [C9SEAY] is not equal to <Blank>
          Or FC SeasonCode [C9SEAC] is not equal to <Blank>
               FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                    FC Collection [C9COLL] = TK Collection [C9COLL]
                    FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
                    VA frm_szCollDescription_C9DSC1 [C9DSC1] <- TK Description Line 1 [C9DSC1]
                    VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
               If SV File_IO_Status is equal to CO SUCCESS
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "0"
                    FC COLLECTION [DL01] = VA frm_szCollDescription_C9DSC1 [C9DSC1]
                    //
                    // This is validated from OK Button. So, default PEFJ from Collection
                    // or today's date only if user has not entered the Collection Price Eff Date
                    //
                    If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                         If VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ] is not equal to Null Date
                              FC Collection Price Effective Date [C9PRDJ] = VA frm_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                         Else
                              FC Collection Price Effective Date [C9PRDJ] = SL DateToday
                         End If
                    End If
               Else
                    //
                    // If the Collection validation fails, throw an error that its an
                    // invalid combination of Collection/SeasonCode/SeasnYear
                    //
                    VA frm_szCollectionErrorMsg_DTAI [DTAI] = "E41F02"
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "1"
               End If
          Else
               //
               // If all 3 collection fields are blank and the processing option is
               // set up to validate items against collection, then throw an error
               // that Collection/SeasonCode/SeasonYear values are Blank.
               //
               If PO cValidateItemsWithCollection [EV01] is equal to "1"
               Or PO cValidateItemsWithCollection [EV01] is equal to "2"
                    VA frm_szCollectionErrorMsg_DTAI [DTAI] = "E41F01"
                    VA frm_cCollValidationErrors_ERRC [ERRC] = "1"
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Object: FC Get UTP From Tag Customer Master
Event: Button Clicked
Event GUID: da8324a2-2dc3-46ab-902f-b537667d6458
=============================================
// SAR 8955602 - Get Use Taxed Price Flag value from Get Customer Master BSFN
VA frm_cErrorFlag_EV01 [EV01] = "0"
GetTagCustomerMaster(B0100410.GetTagCustomerMaster)
     VA frm_mnCustAddNum_AN8 [AN8] -> mnAddressNumber [AN8]
     VA frm_szOrderCompany_CO [CO] -> szCompany [CO]
     VA frm_cUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
     "1" -> cSuppressErrorMessage [SUPPS]
     VA frm_cErrorFlag_EV01 [EV01] <- cErrorFlag [EV01]
If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
     VA frm_cUseTaxedPrices_UTP [UTP] = "0"
     FC Use Taxed Prices [UTP] = "0"
Else
     FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
End If



=============================================
EVENTS
=============================================
Form: Sales Order Header - W4210G
Event: Dialog is Initialized
Event GUID: f57df5bb-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 6105487 - Verify Demand System is Available
IsDemandSchedulingDelivered(N40R0940.IsDemandSchedulingDelivered)
     VA frm_cDemandSchedReleased_DSRFU [DSRFU] <- cDemandSchedulingReleased [DSRFU]
If VA frm_cDemandSchedReleased_DSRFU [DSRFU] is not equal to "1"
     Hide Control(FC Requested Delivery Time [DRQT])
End If
// End SAR 6105487
//
// SAR 8843029  : Start  : Record reservation Process
// SAR 2341538 Record Reservation Process
//
// This section is to Validate if a record being accessed is being reserved by
// another user/process
//
// First determine if  the Application needs to be validated
// if function returns '0', then the application should be tested
//
// SAR 7818112 - Added a condition: IF the action code passed from the header
// is not ADD Mode then Reserve Object.
If SV Form_ Mode is equal to CO UPDATE_MODE
     If VA frm_cValidateApplication_Ev01 [EV01] is not equal to "2"
     And VA frm_cValidateApplication_Ev01 [EV01] is not equal to "0"
          //
          // to validate Application,  test UDC 00/RR to see if the Application have a
          // special handling code == '1', the function will return
          // '0' : the application should be tested
          // '1': omit the testing
          //
          //
          ValidateApplicationId(N0000604.ValidateApplicationId)
               "P4210" -> szApplicationID_PID [PID]
               VA frm_cValidateApplication_Ev01 [EV01] <- cValidateApplication_ERR1 [ERR1]
          If VA frm_cValidateApplication_Ev01 [EV01] is not equal to "0"
               VA frm_cValidateApplication_Ev01 [EV01] = "2"
          End If
     End If
     //
     // If application is to be tested, build a unique key by concating fields
     // togather
     //
     If VA frm_cValidateApplication_Ev01 [EV01] is equal to "0"
          //
          // To limit the I/O and testing only process with key fields have changed
          //
          If VA frm_mnRReserveOrderNumber_DOCO [DOCO] is not equal to FI Documentorderinvoicee [DOCO]
          Or VA frm_szRReserveOrdCompany_KCOO [KCOO] is not equal to FI Companykeyorderno [KCOO]
          Or VA frm_szRReserveOrderType_DCTO [DCTO] is not equal to FI Ordertype [DCTO]
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([FI Documentorderinvoicee [DOCO]], [FI Ordertype [DCTO]])
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szGenericKey_GENKEY [GENKEY]], [FI Companykeyorderno [KCOO]])
               //
               // Use the function to reserve or issue warning/erro if key/file is already
               // bein
               // used by another user
               //
               // - Get Unique Transaction Identifier for Record Reservation
               GetNextUniqueKeyID(X00022.GetNextUniqueKeyID)
                    "RRESERVE" -> szObjectName [OBNM]
                    VA frm_UniqueIDRecReserve_UKID [UKID] <- mnUniqueKeyID [UKID]
               ConvertNumericToString(B0000045.ConvertNumericToString)
                    VA frm_UniqueIDRecReserve_UKID [UKID] -> mnMathNumeric01 [MATH01]
                    VA frm_szUniqueIDRecReserve_PID [PID] <- szVideoConstant30A [VC30A]
               F00095ReserveObject(N0000602.F00095ReserveObject)
                    "F4201" -> szNameObject [OBNM]
                    SL UserID -> szUserId [USER]
                    "1" -> cSuppressErrorMessage [EV01]
                    VA frm_szRecordReserveErrMsg_DTAI [DTAI] <- szErrorMessageID [DTAI]
                    VA frm_szReserveName_ALPH [ALPH] <- szReserversNameAlpha [ALPH]
                    VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                    VA frm_szUniqueIDRecReserve_PID [PID] -> szApplication [PID]
                    VA frm_szReserveAppID_PID [PID] <- szReserversApplication [PID]
                    "1" -> cWarningError [EV01]
               //
               VA frm_szRReserveOrdCompany_KCOO [KCOO] = FI Companykeyorderno [KCOO]
               VA frm_szRReserveOrderType_DCTO [DCTO] = FI Ordertype [DCTO]
               VA frm_mnRReserveOrderNumber_DOCO [DOCO] = FI Documentorderinvoicee [DOCO]
          End If
          If VA frm_szRecordReserveErrMsg_DTAI [DTAI] is not equal to <Blank>
          And VA frm_szRecordReserveErrMsg_DTAI [DTAI] is not equal to <NULL>
               // On lines that have a warning  / error because the line is used by another
               // user suppress grid line and issue warning  / error.
               SetReservationError(B0000603.SetReservationError)
                    VA frm_szReserveName_ALPH [ALPH] -> szReserversNameAlpha [ALPH]
                    VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                    VA frm_szReserveAppID_PID [PID] -> szApplication [PID]
               Disable Control(HC &OK/&Select)
          End If
          // 8023514 End
     End If
End If
//
// SAR 8843029  : END
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call N7300001 ("Determine if Vertex is Active") to determine if Vertex is
// active.  Also used to retrieve other information.
//
DetermineIfVertexIsActive(N7300001.DetermineIfVertexIsActive)
     <Blank> -> szSystemCode [SY]
     VA frm_cVertexActive [VVTX] <- cUseVertexFlag [VVTX]
     UNDEFINED <- szUSCountryCode [VVUS]
     VA frm_szVertexCanadaCountryCode [VVCN] <- szCanCountryCode [VVCN]
     UNDEFINED <- szDivisionCodeSales [VVAB]
     UNDEFINED <- szItemBalanceCategory [VVIT]
     UNDEFINED <- szDivisionCodeUse [VUAB]
     UNDEFINED <- szItemBalanceCategoryUseTax [VUIT]
     UNDEFINED <- szGlOffset [GL01]
     UNDEFINED <- cFlagMultiCountyAddress [VVMC]
     UNDEFINED <- cPrintLinkParm [VPRT]
     UNDEFINED <- szCustomerClassCodeSales [VCCS]
     UNDEFINED <- szCustomerClassCodeUse [VCCU]
     UNDEFINED <- szQuantumDebugLog [QDLG]
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Form Title(TV Store And Forward Header)
End If
//
// SAR # 1847781 Store off Version into a non-system variable.
VA frm_szVersion_VERS [VERS] = SL VersionName
//
//     If order type is not passed, default from processing option default order
//     type.
//
If FI Ordertype [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
Else
     FC Order Type [DCTO] = FI Ordertype [DCTO]
     FC Order Number [DOCO] = FI Documentorderinvoicee [DOCO]
     FC Order Key Company [KCOO] = FI Companykeyorderno [KCOO]
End If
//
//     Hide previous order fields at the beginning of processing.
//
Hide Control(FC Attachments)
Hide Control(FC This Order Placed On Hold)
Hide Control(FC Previous Order Placed On Hold)
Hide Control(FC Previous Order Number [DOCO])
Hide Control(FC Previous Order Type [DCTO])
Hide Control(FC Prev. Order Company [EKCO])
//
GetAuditInfo(B9800100.GetAuditInfo)
     FC USER-User ID (wf) [UPMB] <- szUserName [USER]
     FC UPMJ-Date Updated [UPMJ] <- jdDate [DTE]
     FC TDAY-Time of Day [TDAY] <- mnTime [TME0]
     FC JOBN-Workstation [JOBN] <- szWorkstation_UserId [JOBN]
     UNDEFINED <> szMachineKey [MKEY]
FC EV16:HoldCodeFlag(WF) [EV16] = "0"
VA frm_ADVP_Adv_Pricing [ADVP] = <Blank>
// SAR 5308881 - Date Sensitive Customer Sets
VA frm_UseCustomerSet_CP19 [CP19] = <Blank>
//
//      If EV22_cCacheOn is "2", use cache to store F42UI01 and F42UI11.
// This setting must match the corresponding setting in the SOD Revisions form
// and the Additional Info form.
//
VA frm_EV22_cCacheOn [EV22] = "2"
//
//     If specified in processing option, hide all credit info.
//
If PO cHideCreditCardInfo [EV07] is equal to "1"
     Hide Control(FC Credit/Bank Account Number [CACT])
     Hide Control(FC Expired Date Credit/Bank Acct [CEXP])
     Hide Control(FC Authorization Number - Credit Approval [AUTN])
End If
//
//     If specified in PO, hide all freight information.
//
If PO cHideFreightInfo [EV08] is equal to "1"
     Hide Control(FC Apply Freight [AFT])
     Hide Control(FC Carrier Number [CARS])
     Hide Control(FC Route Code [ROUT])
     Hide Control(FC Stop Code [STOP])
     Hide Control(FC Zone Number [ZON])
     Hide Control(FC Freight Handling Code [FRTH])
     Hide Control(FC ROUTE CODE [DL01])
     Hide Control(FC STOP CODE [DL01])
     Hide Control(FC ZONE NUMBER [DL01])
     Hide Control(FC VOLUME DISPLAY U/M [DL01])
     Hide Control(FC WEIGHT DISPLAY U/M [DL01])
End If
//     Retrieve from System Constants the Advanced Pricing flag.
//
// SAR 5308881 - Date Sensitive Customer Sets
If VA frm_ADVP_Adv_Pricing [ADVP] is equal to <Blank>
Or VA frm_UseCustomerSet_CP19 [CP19] is equal to <Blank>
     // SAR 8955602 - Get the distribution constants for use Tax Unit Prices
     GetDistribution_TaxedPricesConst(B4000560.GetDistribution_TaxedPricesConst)
          VA frm_ADVP_Adv_Pricing [ADVP] <> cAdvancedSalesPricing [ADVP]
          VA frm_UseCustomerSet_CP19 [CP19] <- cUseCustomerSet [CP19]
          VA frm_cSalesTaxedPrices_TPSC [TPSC] <- cSalesTaxedPricesConstant [TPSC]
          VA frm_cCustomerTaxedPrices_CTXP [CTXP] <- cCustomerTaxedPrices [CTXP]
     //
     // SAR 8955612 - If it is store and forward mode, then Set cSalesTaxedPrices
     // as 0
     If PO cStoreAndForwardMode [SO15] is equal to ("1","2","3")
          VA frm_cSalesTaxedPrices_TPSC [TPSC] = "0"
     End If
End If
//
// SAR 8955602 - If the taxed prices enhancement is not on, hide the Use Taxed
// Prices checkbox.
If VA frm_cSalesTaxedPrices_TPSC [TPSC] is not equal to "1"
     // If use Sales Taxed Prices constant is not set, the the system will function
     // as it was functioning prior to this SAR
     Hide Control(FC Use Taxed Prices [UTP])
End If
//
// SAR 8955602 - If the taxed price enhancement is on and the order already
// exists, disable the Use Taxed Prices checkbox because once the order is
// entered, users are not allowed to change the value.
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     // In change mode, UTP check box value cannot be altered
     Disable Control(FC Use Taxed Prices [UTP])
End If
//
//     If the Advanced Pricing flag in the System Constants (F4009) is
//     on,
//     show the Pricing Schedule field on the screen.
//
If VA frm_ADVP_Adv_Pricing [ADVP] is equal to "Y"
     Show Control(FC Adjustment Schedule [ASN])
     Show Control(FC ADJUSTMENT SCHEDULE [DL01])
     FC Adjustment Schedule [ASN] = FI Priceadjusmentschedulen [ASN]
Else
     Hide Control(FC ADJUSTMENT SCHEDULE [DL01])
     Hide Control(FC Adjustment Schedule [ASN])
End If
// ==Store And Forward
If PO cStoreAndForwardMode [SO15] is equal to <NULL>
Or PO cStoreAndForwardMode [SO15] is equal to <Blank>
     // ==full edit mode, Sales Order Entry
     VA frm_SO15_cCMProcessEdits [SO15] = "1"
End If
If PO cStoreAndForwardMode [SO15] is equal to "1"
     // ==partial edit mode, Store & Forward
     VA frm_SO15_cCMProcessEdits [SO15] = "3"
End If
If PO cStoreAndForwardMode [SO15] is equal to "2"
     // ==full edit mode, Store & forward
     VA frm_SO15_cCMProcessEdits [SO15] = "4"
End If
If PO cStoreAndForwardMode [SO15] is equal to "3"
     // ==full edit mode, Store & forward
     VA frm_SO15_cCMProcessEdits [SO15] = "5"
End If
//
// SAR 5308881 - Date Sensitive Customer Sets
If VA frm_UseCustomerSet_CP19 [CP19] is not equal to "1"
     Hide Tab Page(FC Tab Control107, TP Customer Set)
Else
     Enable Tab Page(FC Tab Control107, TP Customer Set)
End If
//
// Hide Revision Number if Audit Logging not used
//
If PO cUseAuditLog [EV01] is not equal to "1"
Or SV Form_ Mode is equal to CO ADD_MODE
     Hide Control(FC Change Order [CORD])
     Disable Control(HC R&evision History)
End If
// **********************************************************************
// SAR 5814943 - Begins
// SAR 6925223 - no longer using this orderpromising variable
! VA frm_cIsOrderPromisingEnabled [EV01] = "0"
VA frm_cOPShipToChanged_EV01 [EV01] = "0"
VA frm_cOPBranchPlantChanged_EV01 [EV01] = "0"
VA frm_cOPSoldToChanged_EV01 [EV01] = "0"
If SV Form_ Mode is equal to CO ADD_MODE
     VA frm_OPAllowSubstitutes_OPSS [OPSS] = <Blank>
     VA frm_OPAllowMultiSource_OPMS [OPMS] = <Blank>
     VA frm_OPAllowBackorders_OPBA [OPBA] = <Blank>
     VA frm_OPPartialShipLine_OPLL [OPLL] = <Blank>
     VA frm_OPPartialOrderShip_OPPL [OPPL] = <Blank>
     VA frm_OPBusinessObjective_OPBO [OPBO] = <Blank>
     // SAR 8374058 - Begins
     VA frm_mnDeliverTo_DVAN [DVAN] = "0"
     VA frm_cAddressForTransport_AUFI [AUFI] = <Blank>
     // SAR 8374058 - Ends
End If
// SAR 6925223 - No longer using the varible to check order promising
! IsOPEnabled(B4205070.IsOPEnabled)
!      VA frm_cIsOrderPromisingEnabled [EV01] <- cOPEnabled [EV01]
// SAR 8585461 - Scenario Manager processing option removed
If PO cOrderPromising [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
          Disable Control(FC OP Business Objective [OPBO])
          Disable Control(FC OP Allow Multi Source [OPMS])
          Disable Control(FC OP Substitutes Allowed [OPSS])
          Disable Control(FC OP Backorders Allowed [OPBA])
          Disable Control(FC OP Partial Shipments Allowed [OPLL])
          Disable Control(FC OP Partial Order Shipments Allowed [OPPL])
     Else
          Enable Control(FC OP Business Objective [OPBO])
          Enable Control(FC OP Allow Multi Source [OPMS])
          Enable Control(FC OP Substitutes Allowed [OPSS])
          Enable Control(FC OP Backorders Allowed [OPBA])
          Enable Control(FC OP Partial Shipments Allowed [OPLL])
          Enable Control(FC OP Partial Order Shipments Allowed [OPPL])
     End If
Else
     Hide Tab Page(FC Tab Control107, TP Order Promising Overrides)
End If
// SAR 5814943 - Ends
// **********************************************************************
//
// SAR 8953108 - Apparel Enhancements
// Check if Apparel System (SY41F) is Installed. Hide
// the Apparel tab if Apparel System is not Installed
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cApparelInstalled_EV01 [EV01] is not equal to "1"
     Hide Tab Page(FC Tab Control107, TP Apparel)
End If

=============================================
Form: Sales Order Header - W4210G
Event: Clear Screen Before Add
Event GUID: 34b055c7-40a2-429a-9d22-5e38cddc7b19
=============================================
// SAR 6745695
If SV Engine_Type is not equal to CO WINDOWS_ENGINE
     If FC Long Address Number [ALKY] is equal to <Blank>
          FC ADDRESS NUMBER [DL01] = <NULL>
     End If
     If FC Long Address Number-Shipto [ALKY] is equal to <Blank>
          FC SHIP TO [DL01] = <NULL>
     End If
     //
     // SAR 8953108 - Apparel Enhancement
     // Clear the Associated Descriptions for Apparel Collection fields
     //
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
          FC COLLECTION [DL01] = <NULL>
          FC SEASONCODE [DL01] = <NULL>
          FC SEASON YEAR [DL01] = <NULL>
     End If
End If

=============================================
Form: Sales Order Header - W4210G
Event: Post Dialog is Initialized
Event GUID: f57df5bc-a23a-11d0-a204-0000f6728a56
=============================================
//                             SAR REVISION LOG
// SAR #                   PROGRAMMER                   DATE
// 4338092                   VK6272082                 07/06/00
// 5096401                  WZ6999484                 08/24/01
//
// SAR 4609526 -
If SV Form_ Mode is equal to CO ADD_MODE
     Disable Control(HC &Attachments)
     // SAR 8955602 - In add mode initialize the UTP variable to BLANK so that it
     // can be retrieved by Begin Doc
     If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          VA frm_cUseTaxedPrices_UTP [UTP] = <Blank>
     End If
Else
     If SV Form_ Mode is equal to CO UPDATE_MODE
     And VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
          VA frm_cErrorFlag_EV01 [EV01] = "0"
          // In update mode, retrieve the UTP check Box value from table F4201TX by
          // calling BSFN B4205360. Check box cannot be altered in update mode
          GetSalesOrderHeaderTaxTag(B4205360.GetSalesOrderHeaderTaxTag)
               FC Order Key Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               VA frm_cUseTaxedPrices_UTP [UTP] <- cUseTaxedPrices [UTP]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_cErrorFlag_EV01 [EV01] <- cErrorFlag [EV01]
          If VA frm_cErrorFlag_EV01 [EV01] is equal to "1"
               Hide Control(FC Use Taxed Prices [UTP])
          Else
               FC Use Taxed Prices [UTP] = VA frm_cUseTaxedPrices_UTP [UTP]
          End If
     End If
End If
// End SAR 4609526
//
// SAR 7012696
Enable Control(HC &Populate)
//
// -----------------------------------------------------------------------------
// SAR 4792640
VA frm_CompareSoldTo [ALKY] = "  "
//
// *******************************************************************
// SAR 5814943 - Create these variables to track whether Branch/Plant or
// ShipTo has changed.  Control Exited/Changed is getting triggered on Shipto
// field when in fact it is not changed.  We also  want to make sure that the
// same thing doesn't happen to Branch/Plant and SoldTo. These 3 fields will
// affect the default values of OP flags
VA frm_mnPreviousShipTo_SHAN [SHAN] = "  "
VA frm_szPreviousHeaderBranch_MCU [MCU] = "  "
//
// SAR 8252991 - To find out whether company has changed or not
VA frm_cCompanyChanged_EV01 [EV01] = "  "
// *******************************************************************
//
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call B7300011 to validate the GeoCode
//
ValidateGeoCodeTaxRateArea(N7300011.ValidateGeoCodeTaxRateArea)
     VA frm_cVertexActive [VVTX] -> cVertexActivate [VVTX]
     FC Tax Rate/Area [TXA1] -> szGeoCode [TXA1]
     FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
     VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
     UNDEFINED <- szTaxRateAreaDescription [DL01]
// -----------------------------------------------------------------------------
//
// If Shopping Cart Mode, get the Job Number from the CSS Info Cache
//
If PO cShoppingCartMode [CART] is not equal to <Blank>
And PO cShoppingCartMode [CART] is not equal to <NULL>
     CacheUpdateCSSInfo(B4201070.CacheUpdateCSSInfo)
          UNDEFINED <> mnUserAddressNumber [AN8]
          UNDEFINED <> szVersion [VERS]
          FC JOBS-Job Num (BegDoc) [JOBS] <> mnJobnumberA [JOBS]
          UNDEFINED <> szCostCenter [MCU]
          UNDEFINED <> mnAddressNumberShipTo [SHAN]
          UNDEFINED -> cActionCode [ACTN]
          UNDEFINED <> mnAddressNumberParent [PA8]
          UNDEFINED <> mnSoldToAddressNumber [AN8]
          UNDEFINED <> szComputerID [CTID]
          UNDEFINED <> mnLineNumIncrement [LINN]
          UNDEFINED <> cPreviousSessionFound [EV01]
          UNDEFINED <> cGenericChar_EV01 [EV01]
          UNDEFINED <> szGenericString_DL01 [DL01]
          UNDEFINED <> mnGenericMathNumeric_MATH01 [MATH01]
          UNDEFINED <> szUserReservedCode [URCD]
          UNDEFINED <> mnUserReservedAmount [URAT]
          UNDEFINED <> jdUserReservedDate [URDT]
          UNDEFINED <> mnUserReservedNumber [URAB]
          UNDEFINED <> szUserReservedReference [URRF]
          UNDEFINED <> szShipToStructureType [OSTP]
          UNDEFINED <> szBaseCurrencyCode [CRDC]
          UNDEFINED <> szCustomerCurrencyCode [CRCD]
End If
//
//     Initialize F4211 edit object variables.
//
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Disable Control(HC &Credit Check)
     Disable Control(HC &Attachments)
End If
//
// SAR 3359078
GetDetachedModeFlag(B0001070.GetDetachedModeFlag)
     VA frm_cDetachedMode_EV01 [EV01] <- cDetachedMode [EV01]
If VA frm_cDetachedMode_EV01 [EV01] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
     CheckIfDetailsExistInF4211(B4200680.CheckIfDetailsExistInF4211)
          BC Document (Order No, Invoice, etc.) (F4201.0) [DOCO] -> mnDocumentNumber [DOC]
          BC Order Type (F4201.0) [DCTO] -> szDocumentType [DCT]
          BC Order Company (Order Number) (F4201.0) [KCOO] -> szDocumentCompany [KCO]
          UNDEFINED <> cDetailExists [EV01]
          VA frm_cSalesOrderStatus15 [SO15] <- cSalesOrderStatus15 [SO15]
     If VA frm_cSalesOrderStatus15 [SO15] is not equal to "3"
     And VA frm_cSalesOrderStatus15 [SO15] is not equal to "4"
          If PO cDisableorHidePrice [EV04] is not equal to "2"
               PO cDisableorHidePrice [EV04] = "1"
          End If
          //
          If PO cDisableorHideCost [EV03] is not equal to "2"
               PO cDisableorHideCost [EV03] = "1"
          End If
          //
          PO cDisablePricingRelated [EV01] = "1"
          Disable Control(FC Address Number [AN8])
          Disable Control(FC Ship To [SHAN])
          Disable Control(FC Order Date [TRDJ])
          Disable Control(FC Requested [DRQJ])
          Disable Control(FC Freight Handling Code [FRTH])
          Disable Control(FC Volume Display U/M [VUMD])
          Disable Control(FC Weight Display U/M [WUMD])
     End If
End If
//
If PO cDisablePricingRelated [EV01] is equal to "1"
     Disable Control(FC Payment Instrument [RYIN])
     Disable Control(FC Payment Terms [PTC])
     Disable Control(FC Adjustment Schedule [ASN])
     Disable Control(FC Route Code [ROUT])
     Disable Control(FC Carrier Number [CARS])
     Disable Control(FC Trade Discount [TRDC])
     Disable Control(FC Stop Code [STOP])
     Disable Control(FC Zone Number [ZON])
     Disable Control(FC Pricing Group [PRGP])
End If
//
FC EV20:  Updated to Hdr wf [EV20] = "0"
//
//     If Order type is blank, default from proc option.
//
If FC Order Type [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
If BC Hold Orders Code (F4201.0) [HOLD] is greater than <Blank>
     Show Control(FC This Order Placed On Hold)
     Disable Control(FC Hold Orders Code [HOLD])
     FC EV16:HoldCodeFlag(WF) [EV16] = "1"
End If
//
// 7400411 - Remove If PO cDefaultShipToBranch is not equal to "1"
// SAR 4169356 - blank out FC so it can be defaulted
If SV Form_ Mode is equal to CO ADD_MODE
     FC Business Unit [MCU] = <NULL>
End If
// SAR 4169356 - move code from here
If PO szDefaultBranchPlant [MCU] is greater than <Blank>
And FC Business Unit [MCU] is less than or equal to <Blank>
     FC Business Unit [MCU] = PO szDefaultBranchPlant [MCU]
End If
// SAR 7620552 RCD Not Define in P40HDR
// SAR 7973761 - Checked for FORM mode to retain the user changes to Reason
// code in the UPDATE mode
If PO szDefaultReasoncode [RCD] is greater than <Blank>
And FC Reason Code [RCD] is less than or equal to <Blank>
And SV Form_ Mode is equal to CO ADD_MODE
     FC Reason Code [RCD] = PO szDefaultReasoncode [RCD]
End If
// Following Line changed for 1784599
If FC Business Unit [MCU] is equal to or empty <Blank>
And SV Form_ Mode is equal to CO ADD_MODE
     // SAR 5718425
     If PO cDefaultShipToBranch [EV02] is not equal to "2"
     And PO cDefaultShipToBranch [EV02] is not equal to "1"
          GetDefaultBranch(B4000370.GetDefaultBranch)
               FC MCU-Default BP (WF) [MCU] <- szBranch [MCU]
               UNDEFINED <> szApprovalRouteCode [ARTG]
          FC Business Unit [MCU] = FC MCU-Default BP (WF) [MCU]
     End If
End If
// SAR 4169356 - move code to here
If FC Business Unit [MCU] is less than or equal to <Blank>
     FC Business Unit [MCU] = FI Costcenter [MCU]
End If
// SAR 8577251 Begin -  Move tthe code here
If SV Form_ Mode is equal to CO ADD_MODE
     If FC Business Unit [MCU] is less than or equal to <Blank>
     Else
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] -> szCostCenter [MCU0]
               FC Order Key Company [KCOO] <- szCompany [CO]
          Set Control Focus(FC Long Address Number [ALKY])
     End If
End If
//
//     Currency processing.
//
FC CRYR-CurrControl (wf) [CRYR] = SL CurrencyProcessing
If FC CRYR-CurrControl (wf) [CRYR] is less than or equal to <Blank>
     RetrieveCurrencyConversion(B0000131.RetrieveCurrencyConversion)
          FC CRYR-CurrControl (wf) [CRYR] <- cCurrencyConversion [CRYR]
End If
If FC CRYR-CurrControl (wf) [CRYR] is equal to "N"
     Hide Control(FC Foreign [CRRM])
     Hide Control(FC Currency Code [CRCD])
     Hide Control(FC Exchange Rate [CRR])
     Hide Control(FC Base Currency [CRDC])
Else
     Show Control(FC Foreign [CRRM])
     Show Control(FC Currency Code [CRCD])
     Show Control(FC Exchange Rate [CRR])
     Show Control(FC Base Currency [CRDC])
     //
     //     If Transaction Currency and the same as the Base Currency, disable
     //     the 'Foreign' checkbox.
     //
     FC Base Currency [CRDC] = FI Currencycodeto [CRDC]
     If BC Currency Code - From (F4201.0) [CRCD] is equal to FC Base Currency [CRDC]
     And BC Currency Code - From (F4201.0) [CRCD] is not equal to <Blank>
          FC Foreign [CRRM] = "D"
          Disable Control(FC Foreign [CRRM])
     End If
     //
     //     In CHANGE mode, disable the currency code and exchange rate fields.
     //
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Control(FC Currency Code [CRCD])
          Disable Control(FC Exchange Rate [CRR])
     End If
     //
     //     If key compnay is present and the base company is blank, retrieve it from
     //     F0010.
     //
     // // SAR 8598684 - Move the code to get the company from BU prior to the call
     // // to Get Company Currency Code. The reason here is if the BU is populated
     // from Processing Option then it should fetch the company first and then try
     // to fetch the currency code.
     If FC Order Key Company [KCOO] is not equal to <Blank>
     And FC Base Currency [CRDC] is equal to or empty <Blank>
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               FC Order Key Company [KCOO] -> szCompany [CO]
               FC Base Currency [CRDC] <- szCurrencyCode [CRCD]
               UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
               UNDEFINED <> cPostByCurrency [ABIN]
     End If
End If
FC CRYR-CurrControl (wf) [CRYR] = FC CRYR-CurrControl (wf) [CRYR]
If SV Form_ Mode is equal to CO ADD_MODE
     If FC Business Unit [MCU] is less than or equal to <Blank>
          Set Control Focus(FC Business Unit [MCU])
     Else
          // SAR 4338092 BEGIN/END ADD
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] -> szCostCenter [MCU0]
               FC Order Key Company [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
          //
          Set Control Focus(FC Long Address Number [ALKY])
     End If
End If
VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
     BC Address Number (F4201.0) [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szAlphaName [ALPH]
     UNDEFINED <> jdAddressEffectiveDate [EFTB]
     UNDEFINED <> szTaxCertificate [TXCT]
     FC CM-Credit Message [CM] <- szCreditMessage [CM]
     UNDEFINED <> mnRelatedAddress1 [AN81]
     UNDEFINED <> mnRelatedAddress2 [AN82]
     UNDEFINED <> mnRelatedAddress3 [AN83]
     UNDEFINED <> mnRelatedAddress4 [AN84]
     UNDEFINED <> mnRelatedAddress5 [AN85]
     UNDEFINED <> mnRelatedAddress6 [AN86]
     UNDEFINED <> szBranchPlant [MCU]
     UNDEFINED <> szLanguagePreference [LNGP]
     UNDEFINED <> szErrorMessage [DTAI]
     "1" -> cSuppressError [ERR]
     UNDEFINED <> szTaxID [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
//
//     Set generic text indicator
//
FC EV09-Generic Text [EV09] = <Blank>
If SV Form_ Mode is equal to CO UPDATE_MODE
     Media Objects(GT4201A   , <Exist>, FC EV09-Generic Text, BC Document (Order No, Invoice, etc.), BC Order Type, BC Order Company (Order Number))
     If FC EV09-Generic Text [EV09] is equal to "1"
          Show Control(FC Attachments)
          // SAR 3011549 - Begin/End ADD
          VA frm_cHeaderText_ATXT [ATXT] = "Y"
     End If
End If
//
//     Get local computer ID for calling the F4211 edit objects.
//
GetLocalComputerId(B9800181.GetLocalComputerId)
     FC CTID:  Computer ID [CTID] <- szMachineKey [MKEY]
//
//     Save the current values of all header fields that can be changed in the
//     detail table.
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number [ALKY] <- szAlternateAddressKey [ALKY]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          "2" -> cInputSelection [EV01]
          FC ADDRESS NUMBER [DL01] <> szNameAlpha [ALPH]
     ScrubAddressNumber(B0100016.ScrubAddressNumber)
          FC Long Address Number-Shipto [ALKY] <- szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] -> mnAddressNumber [AN8]
          "2" -> cInputSelection [EV01]
          FC SHIP TO [DL01] <> szNameAlpha [ALPH]
     VA frm_Old_SoldTo [AN8] = BC Address Number (F4201.0) [AN8]
     VA frm_Old_HeaderBranch [EMCU] = BC Business Unit (F4201.0) [MCU]
     VA frm_Old_ShipTo [SHAN] = BC Address Number - Ship To (F4201.0) [SHAN]
     VA frm_Old_CustomerPO [VR01] = BC Reference (F4201.0) [VR01]
     VA frm_Old_PrintMessage [INMG] = BC Print Message (F4201.0) [INMG]
     VA frm_Old_TaxArea [TXA1] = BC Tax Rate/Area (F4201.0) [TXA1]
     VA frm_Old_TaxExplanationCode [EXR1] = BC Tax Expl Code 1 (F4201.0) [EXR1]
     VA frm_Old_OrderDate [TRDJ] = BC Date - Order/Transaction (F4201.0) [TRDJ]
     VA frm_Old_RequestedDate [DRQJ] = BC Date - Requested (F4201.0) [DRQJ]
     VA frm_Old_PromisedDate [PDDJ] = BC Date - Scheduled Pick (F4201.0) [PDDJ]
     VA frm_Old_CancelDate [CNDJ] = BC Date - Cancel (F4201.0) [CNDJ]
     VA frm_Old_PaymentTerms [PTC] = BC Payment Terms Code (F4201.0) [PTC]
     VA frm_Old_PaymentInstrument [RYIN] = BC Payment Instrument (F4201.0) [RYIN]
     VA frm_Old_Carrier [CARS] = BC Carrier Number (F4201.0) [CARS]
     VA frm_Old_ApplyFreight [AFT] = BC Apply Freight - Y/N (F4201.0) [AFT]
     VA frm_Old_FreightHandlingCode [FRTH] = BC Freight Handling Code (F4201.0) [FRTH]
     VA frm_Old_RouteCode [ROUT] = BC Route Code (F4201.0) [ROUT]
     VA frm_Old_StopCode [STOP] = BC Stop Code (F4201.0) [STOP]
     VA frm_Old_ZoneCode [ZON] = BC Zone Number (F4201.0) [ZON]
     VA frm_Old_UserCode [URCD] = BC User Reserved Code (F4201.0) [URCD]
     VA frm_Old_UserDate [URDT] = BC User Reserved Date (F4201.0) [URDT]
     VA frm_Old_UserAmount [URAT] = BC User Reserved Amount (F4201.0) [URAT]
     VA frm_Old_UserAddressNumber [URAB] = BC User Reserved Number (F4201.0) [URAB]
     VA frm_Old_UserReference [URRF] = BC User Reserved Reference (F4201.0) [URRF]
     // SAR 7620552 RCD Not Define in P40HDR
     VA frm_Old_ReasonCode [RCD] = BC Reason Code (F4201.0) [RCD]
     // Begin SAR 4783794
     VA frm_CompareSoldTo [ALKY] = FC Long Address Number [ALKY]
     // SAR 2746121 - Begin ADD
     VA frm_szOldPriceAdjustment_ASN [ASN] = BC Price and Adjustment Schedule (F4201.0) [ASN]
     VA frm_mnOldTradeDiscount_TRDC [TRDC] = BC Discount - Trade (F4201.0) [TRDC]
     // SAR 2746121 - End ADD
     //
     // SAR 5814943
     VA frm_OPBusinessObjective_OPBO [OPBO] = BC OP Business Objective (F4201.0) [OPBO]
     VA frm_OPPartialOrderShip_OPPL [OPPL] = BC OP Partial Order Shipment (F4201.0) [OPPL]
     VA frm_OPPartialShipLine_OPLL [OPLL] = BC OP Partial Ship Line Items (F4201.0) [OPLL]
     VA frm_OPAllowMultiSource_OPMS [OPMS] = BC OP Allow Multi Source (F4201.0) [OPMS]
     VA frm_OPAllowSubstitutes_OPSS [OPSS] = BC OP Allow Substitutes (F4201.0) [OPSS]
     VA frm_OPAllowBackorders_OPBA [OPBA] = BC OP Allow Backorders (F4201.0) [OPBA]
     VA frm_mnPreviousShipTo_SHAN [SHAN] = BC Address Number - Ship To (F4201.0) [SHAN]
     VA frm_szPreviousHeaderBranch_MCU [MCU] = BC Business Unit (F4201.0) [MCU]
     VA frm_cIsOPFlagChangedInHeader [EV01] = "0"
     //
     VA frm_TSTA_Credit_Message [TSTA] = <NULL>
     //
     // SAR 8374058 - Begins
     VA frm_mnDeliverTo_DVAN [DVAN] = BC Address Number - Deliver To (F4201.0) [DVAN]
     VA frm_cAddressForTransport_AUFI [AUFI] = BC Address Number to use for Transportation (F4201.0) [AUFI]
     // SAR 8374058 - Ends
     //
     // SAR 6405210 - AUTO
     VA frm_Old_RequestedTime [DRQT] = BC Requested Delivery Time (F4201.0) [DRQT]
     //
     // SAR 6819236
     VA frm_Old_ModeOfTransport [MOT] = BC Mode of Transport (F4201.0) [MOT]
     //
     If FC Address Number [AN8] is not equal to "0"
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               FC ADDRESS NUMBER [DL01] <- szAlphaName [ALPH]
               VA frm_TSTA_Credit_Message [TSTA] <- szCreditMessage [CM]
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               GetUDC(X0005.GetUDC)
                    "CM" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    UNDEFINED <> mnKeyFieldLength [AS]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC CM-CREDIT MESSAGE [DL01] <- szDescription001 [DL01]
                    UNDEFINED <> szDescription002 [DL02]
                    UNDEFINED <> szSpecialHandlingCode [SPHD]
                    UNDEFINED <> cUdcOwnershipFlag [UDCO]
                    UNDEFINED <> cHardCodedYn [HRDC]
                    "1" -> cSuppressErrorMessage [EV01]
                    UNDEFINED <> szErrorMessageId [DTAI]
                    UNDEFINED <> cUDCOne [EV01]
          End If
          //
          VA frm_TSTA_Credit_Message [TSTA] = <NULL>
          //
          GetSoldToBillingInstructions(B4200100.GetSoldToBillingInstructions)
               FC Address Number [AN8] -> mnSoldToAddress [AN8]
               "1" -> cSuppressErrorMsg [EV02]
               UNDEFINED <> cErrorCode [ERRC]
               VA frm_TSTA_Credit_Message [TSTA] <- szTemporaryCreditMsg [TSTA]
               UNDEFINED <> cBillingAddressNumber [BADT]
               UNDEFINED <> szTaxExplainationCode [EXR1]
               UNDEFINED <> cCustomerPORequireDate [PORQ]
               UNDEFINED <> szPaymentTerms [TRAR]
               UNDEFINED <> cPaymentInstructions [RYIN]
               UNDEFINED <> szCurrencyCode [CRCD]
               UNDEFINED <> szAdjustmentSchedule [ASN]
               UNDEFINED <> szCustomerPricingGroup [CPGP]
               UNDEFINED <> mnInvoiceCopies [INVC]
               UNDEFINED <> szHoldCode [HOLD]
               UNDEFINED <> szPrintMsg [INMG]
               VA frm_cPricePickslipYN_PLST [PLST] <- cPricePickList [PLST]
               UNDEFINED <> cBackOrderAllowed [BACK]
               UNDEFINED <> cPriorityCode [PRIO]
               UNDEFINED <> mnTradeDiscount [TRDC]
               UNDEFINED <> mnMaximumOrder [MAXO]
               UNDEFINED <> mnMinimumOrder [MINO]
               UNDEFINED <> mnRelatedAddressNum [AN8R]
               UNDEFINED <> cInvoiceConsolidation [ICON]
               UNDEFINED <> cSendInvoiceTo [SITO]
               UNDEFINED <> cCreditCheckLevel [ARTO]
               UNDEFINED <> cCreditHoldExempt [EXHD]
               UNDEFINED <> szABAmntCurrCode [CRCA]
               UNDEFINED <> szGLClassCode [ARC]
               UNDEFINED <> cDeliveryNotFlag [EDF1]
               UNDEFINED <> cPrintPriceAdjOnInvoice [DSPA]
               UNDEFINED <> cItemRestrictions [EDF2]
               FC Order Key Company [KCOO] -> szCompany [CO]
               UNDEFINED <> cAbcCodeSales [ABC1]
               UNDEFINED <> cAbcCodeMargin [ABC2]
               UNDEFINED <> cAbcCodeAverageDays [ABC3]
               UNDEFINED <> mnAverageDaysToPay [AVD]
               UNDEFINED <> szBuyingSegmentCode [BSC]
               UNDEFINED <> cBypassAuditLogging [BYAL]
               UNDEFINED <> szOPBusinessObjective [OPBO]
          //
          // SAR 2106298 Check Flag for Price Pickslip coming out of Customer Master and
          // change checkbox accordingly.
          //
          If VA frm_TSTA_Credit_Message [TSTA] is not equal to <Blank>
               GetUDC(X0005.GetUDC)
                    "TSTA" -> szDataDictionaryItem [DTAI]
                    "00" -> szSystemCode [SY]
                    "CM" -> szRecordTypeCode [RT]
                    VA frm_TSTA_Credit_Message [TSTA] -> szUserDefinedCode [KY]
                    UNDEFINED <> mnKeyFieldLength [AS]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
                    FC TSTA:  TEMP CREDIT MSG [DL01] <- szDescription001 [DL01]
                    UNDEFINED <> szDescription002 [DL02]
                    UNDEFINED <> szSpecialHandlingCode [SPHD]
                    UNDEFINED <> cUdcOwnershipFlag [UDCO]
                    UNDEFINED <> cHardCodedYn [HRDC]
                    "1" -> cSuppressErrorMessage [EV01]
                    UNDEFINED <> szErrorMessageId [DTAI]
                    UNDEFINED <> cUDCOne [EV01]
          End If
     End If
End If
//
// SAR 1987943  Disable Order Addresses form exit if Sold To or Ship To is zero.
// If Sold To is zero disable Sold To form exit.  If Ship To is zero disable Shi
// To form exit.
//
If FC Address Number [AN8] is equal to "0"
     Disable Control(HC S&old To Customer)
     If FC Ship To [SHAN] is equal to "0"
          Disable Control(HC O&rder Address)
          Disable Control(HC S&hip To Customer)
     End If
Else
     If FC Ship To [SHAN] is equal to "0"
          Disable Control(HC S&hip To Customer)
     End If
End If
If PO cActivatePrepayProcess [EV01] is equal to "1"
     Disable Control(FC Authorization Number - Credit Approval [AUTN])
     Disable Control(FC Expired Date Credit/Bank Acct [CEXP])
     Disable Control(FC Credit/Bank Account Number [CACT])
End If
//
// SAR 3258656
VA frm_SuppressProcess [MATH01] = "0"
VA frm_cBeginDoc_IsCalled_EV19 [EV19] = "0"
//
// SAR 3771003
VA frm_mnShipTo_SHAN [SHAN] = "0"
// SAR 4335537
VA frm_cReviewHeaderWarningIssued [EV01] = "0"
//
// **************************************************************************
// SAR 5308881 - BEGIN - Date Sensitive Customer Sets
// SAR 5528875 - BEGIN - pass back descriptions
ScrubAddressNumber(B0100016.ScrubAddressNumber)
     FC Delivered To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
     BC Address Number - Deliver To (F4201.0) [DVAN] -> mnAddressNumber [AN8]
     UNDEFINED <> szTaxid [TAX]
     "2" -> cInputSelection [EV01]
     UNDEFINED <> cSuccessFlag [EV02]
     FC DELIVERED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
     UNDEFINED <> szLongAddressKey [MLNM]
ScrubAddressNumber(B0100016.ScrubAddressNumber)
     FC Invoiced To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
     BC Address Number - Invoiced To (F4201.0) [ITAN] -> mnAddressNumber [AN8]
     UNDEFINED <> szTaxid [TAX]
     "2" -> cInputSelection [EV01]
     UNDEFINED <> cSuccessFlag [EV02]
     FC INVOICED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
     UNDEFINED <> szLongAddressKey [MLNM]
ScrubAddressNumber(B0100016.ScrubAddressNumber)
     FC Forwaded To - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
     BC Address Number - Forwarded To (F4201.0) [FTAN] -> mnAddressNumber [AN8]
     UNDEFINED <> szTaxid [TAX]
     "2" -> cInputSelection [EV01]
     UNDEFINED <> cSuccessFlag [EV02]
     FC FORWADED TO - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
     UNDEFINED <> szLongAddressKey [MLNM]
ScrubAddressNumber(B0100016.ScrubAddressNumber)
     FC Paid By - Long Address - ALKY [ALKY] <- szAlternateAddressKey [ALKY]
     BC Address Number - Paid By (F4201.0) [PBAN] -> mnAddressNumber [AN8]
     UNDEFINED <> szTaxid [TAX]
     "2" -> cInputSelection [EV01]
     UNDEFINED <> cSuccessFlag [EV02]
     FC PAID BY - LONG ADDRESS - ALKY [DL01] <- szNameAlpha [ALPH]
     UNDEFINED <> szLongAddressKey [MLNM]
FC SHIP TO - CUSTOMER SET - LONG ADDRESS - ALKY [DL01] = FC SHIP TO [DL01]
FC SOLD TO - CUSTOMER SET - LONG ADDRESS - ALKY [DL01] = FC ADDRESS NUMBER [DL01]
FC Sold To - Customer Set - Long Address - ALKY [ALKY] = FC Long Address Number [ALKY]
FC Ship To - Customer Set - Long Address - ALKY [ALKY] = FC Long Address Number-Shipto [ALKY]
// SAR 5528875 - END - pass back descriptions
// SAR 5308881 - END - Date Sensitive Customer Sets
// **************************************************************************
// SAR 5528875 - BEGIN - Disable the Customer Set Tab Fields on Update
// SAR 7825056 - Roll back he code fix for disabling the fields in Customer
// Set.
! If SV Form_ Mode is equal to CO UPDATE_MODE
     ! Disable Control(FC Delivered To - Long Address - ALKY [ALKY])
     ! Disable Control(FC Invoiced To - Long Address - ALKY [ALKY])
     ! Disable Control(FC Paid By - Long Address - ALKY [ALKY])
     ! Disable Control(FC Forwaded To - Long Address - ALKY [ALKY])
     ! Disable Control(FC Address Number to use for Tax [AUFT])
     ! Disable Control(FC Address Number to use for Transportation [AUFI])
! End If
// SAR 5528875 - END - Disable the Customer Set Tab Fields on Update
// SAR# 4648630 Begin
If SV Form_ Mode is equal to CO ADD_MODE
Or PO cHideCommission [EV09] is equal to "1"
     Disable Control(HC &Header Commissions)
End If
// SAR# 4648630 End
// SAR 6386961 Begin
If VA frm_cDemandSchedReleased_DSRFU [DSRFU] is equal to "1"
     EditSystemExistenceF99410(N5200130.EditSystemExistenceF99410)
          "SY40R" -> szDataItem [DTAI]
          VA frm_cDemandSchedEnabled_MEOW [MEOW] <- cModuleExistance [MEOW]
     If VA frm_cDemandSchedEnabled_MEOW [MEOW] is equal to "1"
     And BC Source of Order (F4201.0) [SOOR] is equal to "1"
          Disable Control(FC Long Address Number-Shipto [ALKY])
          Disable Control(FC Long Address Number [ALKY])
     End If
End If
// SAR 6386961 End
//
// SAR 8953108 - Apparel Enhancement
// Default the collection from Processing options and validate it
//
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     VA frm_cApprlPressButtonMode_EV01 [EV01] = "1"
     Press Button(FC ValidateCollection)
End If
//
// SAR 8955602 - Declare variables for Address Number, B/P &  Ship To field
// controls. These variables will hold the last value present in these fields.
// Assign FC values to these previous value variables as this will work both
// for add as well as update mode.
If VA frm_cSalesTaxedPrices_TPSC [TPSC] is equal to "1"
     VA frm_mnPrevAddNumb_AN8 [AN8] = FC Address Number [AN8]
     VA frm_mnPrevShipTo_SHAN [SHAN] = FC Ship To [SHAN]
     VA frm_szPrevHeaderMCU_MCU [MCU] = FC Business Unit [MCU]
End If
// SAR 8955612 - Initiallize and Set  the SOEF internal Flag for Begin Doc
// call which would be used to Turn Off the TPSC if its a Store and Forward
// Order
InitializeSalesOrderSOEFString(B4205101.InitializeSalesOrderSOEFString)
     VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szSOEMBFInternalFlags [SOEF]
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
Or PO cStoreAndForwardMode [SO15] is equal to "3"
     SetSuppressTaxedPricesSOBD17(B4205103.SetSuppressTaxedPricesSOBD17)
          VA frm_szBeginDocSOEMBFFlag_SOEF [SOEF] <> szBeginDocSOEMBFFlags [SOEF]
          "1" -> cValue [EV01]
End If

=============================================
Form: Sales Order Header - W4210G
Event: End Dialog
Event GUID: 8327a884-95ed-11d2-a779-00105a1bfecd
=============================================
// -----------------------------------------------------------------------------
// SAR 1903181, 1451073 Vertex Quantum Implementation
// Call B7300002 to delete the VerifyGeoCode Cache
//
ValidateGeoCode(B7300002.ValidateGeoCode)
     <Blank> -> szTaxExplanationCode [EXR1]
     <Blank> -> szTaxRateArea [TXA1]
     UNDEFINED <- cGeoCodeValid [EV01]
     "1" -> cDeleteGeoCodeCache [EV01]
// -----------------------------------------------------------------------------
// SAR 8023514
If VA frm_szReserveAppID_PID [PID] is equal to <Blank>
     F00095RemoveReservation(N0000602.F00095RemoveReservation)
          SL UserID -> szUserId [USER]
          "F4201" -> szNameObject [OBNM]
          VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
          VA frm_szUniqueIDRecReserve_PID [PID] -> szApplication [PID]
End If




=============================================
Form: Work With Sales Order Headers - W4210H
Event: Form Variables
Event GUID: f57df763-a23a-11d0-a204-0000f6728a56
=============================================
frm_mnPreviousAddrNumber_AN8 [AN8]
frm_szPreviousAlphaName_ALPH [ALPH]
frm_szPreviousKeyCompany_KCOO [KCOO]
frm_TOE_PO_Number_DOC2 [DOC2]
frm_TOE_PO_Type_DCIN [DCIN]
frm_TOE_SO_Branch_MCU1 [MCU1]
frm_TOE_PO_Branch_MCU2 [MCU2]
frm_TOE_Address_Number_AN8 [AN8]
frm_TOE_SO_Number_DOC1 [DOC1]
frm_TOE_Landed_Cost_Rule_PRP5 [PRP5]
frm_TOE_SO_Currency_Code_CRCD [CRCD]
frm_TOE_PO_Currency_Code_CRDC [CRDC]
frm_TOE_Exchange_Rate_CRR [CRR]
frm_TOE_Cancel_EV07 [EV07]
frm_szVersion_VERS [VERS]
frm_szCompany [CO]
frm_cSoldToError_EV01 [EV01]
frm_jdOrderDate_TRDJ [TRDJ]
frm_cApparelInstalled_EV01 [EV01]

=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df5af-a23a-11d0-a204-0000f6728a56
=============================================
If PO cHeaderOrDetailFirst [EV19] is equal to or empty <Blank>
     Press Button(HC SO &Detail Revision)
Else
     // Begin SAR 4363554
     If PO cTransferOrderEntry [EV25] is equal to "1"
          Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
               GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
               GC Or Ty [DCTO] -> OrderType [DCTO]
               GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
               GC Business Unit [MCU] -> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               UNDEFINED <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               UNDEFINED <> UpdatedToHdrWF [EV20]
               FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               GC To Curr [CRDC] <> Currencycodeto [CRDC]
               UNDEFINED <> OrderPlacedOnHold [EV19]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> szTOEToBranchPlant [MCU2]
               UNDEFINED <> szTOELandedCostRule [PRP5]
               UNDEFINED <> mnTOEPONumber [DOC2]
               UNDEFINED <> szTOEPOOrderType [DCIN]
               UNDEFINED <> szPONumber [VR01]
               UNDEFINED <> mnTOEPOExchangeRate [CRRD]
               UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
               UNDEFINED <> szOrderTempSoldTo [ORTP]
               UNDEFINED <> szOrderTempShipTo [ORTP]
               UNDEFINED <> cCurrencyConversionMethod [CRCM]
               UNDEFINED <> mnTr [MATH01]
               UNDEFINED <> mnTriangulationRateFrom [MATH01]
               UNDEFINED <> cShoppingCartMode [CART]
               UNDEFINED <> mnProcessID [PEID]
               UNDEFINED <> mnTransactionID [TCID]
               UNDEFINED <> szLongAddressSoldTo [ALKY]
               UNDEFINED <> szLongAddressShipTo [ALKY]
               UNDEFINED <> mnDeliveredTo [DVAN]
               UNDEFINED <> szLongAddressDeliverTo [ALKY]
               UNDEFINED <> mnForwardedTo [FTAN]
               UNDEFINED <> szLongAddressForwardedTo [ALKY]
               UNDEFINED <> mnInvoicedTo [ITAN]
               UNDEFINED <> szLongAddressInvoicedTo [ALKY]
               UNDEFINED <> mnPaidBy [PBAN]
               UNDEFINED <> szLongAddressPaidBy [ALKY]
               UNDEFINED <> cAddressNumberForTax [AUFT]
               UNDEFINED <> cAddressNumberForTransport [AUFI]
               UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> szGlClass [GLC]
               UNDEFINED <> mnDescTaskNumber [DOCO]
               UNDEFINED <> szDescTaskType [DCTO]
               UNDEFINED <> cOPAllowBackorders [OPBA]
               UNDEFINED <> cOPAllowMultiSource [OPMS]
               UNDEFINED <> cOPAllowSubstitutes [OPSS]
               UNDEFINED <> cOPPartialShipLineItems [OPLL]
               UNDEFINED <> cIsOrderPromisingEnabled [EV01]
               UNDEFINED <> cIsOPChangedInHeader [EV01]
     Else
          Call App:P4210 Form:W4210G Version:VA frm_szVersion_VERS
               GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
               GC Or Ty [DCTO] -> Ordertype [DCTO]
               GC Order Co [KCOO] -> Companykeyorderno [KCOO]
               UNDEFINED <> Everesteventpoint01 [EV01]
               UNDEFINED <> UpdatedToHdrWF [EV20]
               GC Business Unit [MCU] -> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               UNDEFINED <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               GC To Curr [CRDC] <> Currencycodeto [CRDC]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> Pricingbasedondate [CP01]
               UNDEFINED <> Priceretrievaluom [UMB1]
               UNDEFINED <> Processuomconversions [BUMC]
               UNDEFINED <> OrderSuffix [SFXO]
               UNDEFINED <> Deliveryinstructline1 [DEL1]
               UNDEFINED <> Deliveryinstructline2 [DEL2]
               UNDEFINED <> Priceadjusmentschedulen [ASN]
               UNDEFINED <> Discounttrade [TRDC]
               UNDEFINED <> Carrier [CARS]
               UNDEFINED <> Routecode [ROUT]
               UNDEFINED <> Stopcode [STOP]
               UNDEFINED <> Zonenumber [ZON]
               UNDEFINED <> Freighthandlingcode [FRTH]
               UNDEFINED <> Applyfreightyn [AFT]
               UNDEFINED <> Commissioncode1 [CMC1]
               UNDEFINED <> Ratecommission1 [CMR1]
               UNDEFINED <> Commissioncode2 [CMC2]
               UNDEFINED <> Ratecommission2 [CMR2]
               UNDEFINED <> Authorizationnocredit [AUTN]
               UNDEFINED <> Acctnocrbank [CACT]
               UNDEFINED <> Dateexpired [CEXP]
               UNDEFINED <> Paymenttermscode01 [PTC]
               UNDEFINED <> Paymentinstrumenta [RYIN]
               UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
               UNDEFINED <> Unitofmeasurevoldisp [VUMD]
     End If
     // End SAR 4363554
End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Find records
Event: Button Clicked
Event GUID: 0fb0dc87-ae53-11d3-96ff-000039432408
=============================================
If VA frm_cSoldToError_EV01 [EV01] is greater than "1"
     Suppress Find
End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Add record
Event: Button Clicked
Event GUID: f57df5b0-a23a-11d0-a204-0000f6728a56
=============================================
// 
// Call the Detai if the Processing Option is set to blank
// Otherwise, call the header fix/inspect
// 
If PO cTransferOrderEntry [EV25] is equal to "1"
     // Begin SAR 4363554
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          UNDEFINED <> DocumentOrderInvoiceE [DOCO]
          UNDEFINED <> OrderType [DCTO]
          UNDEFINED <> CompanyKeyOrderNo [KCOO]
          FC Business Unit [MCU] <> Costcenter [MCU]
          UNDEFINED <> Addressnumber [AN8]
          UNDEFINED <> Addressnumbershipto [SHAN]
          UNDEFINED <> Datetransactionjulian [TRDJ]
          FC CRYR-Currency Flag [CRYR] <> Currencymode [CRRM]
          UNDEFINED <> Currencycodefrom [CRCD]
          UNDEFINED <> Currencyconverrateov [CRR]
          UNDEFINED <> Amountordergross [OTOT]
          UNDEFINED <> Amountforeignopen [FAP]
          <Blank> -> UpdatedToHdrWF [EV20]
          FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          UNDEFINED <> Currencycodeto [CRDC]
          UNDEFINED <> OrderPlacedOnHold [EV19]
          UNDEFINED <> Advancedsalespricingyn [ADVP]
          UNDEFINED <> szTOEToBranchPlant [MCU2]
          UNDEFINED <> szTOELandedCostRule [PRP5]
          UNDEFINED <> mnTOEPONumber [DOC2]
          UNDEFINED <> szTOEPOOrderType [DCIN]
          UNDEFINED <> szPONumber [VR01]
          UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          UNDEFINED <> szOrderTempSoldTo [ORTP]
          UNDEFINED <> szOrderTempShipTo [ORTP]
          UNDEFINED <> cCurrencyConversionMethod [CRCM]
          UNDEFINED <> mnTr [MATH01]
          UNDEFINED <> mnTriangulationRateFrom [MATH01]
          UNDEFINED <> cShoppingCartMode [CART]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TCID]
          UNDEFINED <> szLongAddressSoldTo [ALKY]
          UNDEFINED <> szLongAddressShipTo [ALKY]
          UNDEFINED <> mnDeliveredTo [DVAN]
          UNDEFINED <> szLongAddressDeliverTo [ALKY]
          UNDEFINED <> mnForwardedTo [FTAN]
          UNDEFINED <> szLongAddressForwardedTo [ALKY]
          UNDEFINED <> mnInvoicedTo [ITAN]
          UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          UNDEFINED <> mnPaidBy [PBAN]
          UNDEFINED <> szLongAddressPaidBy [ALKY]
          UNDEFINED <> cAddressNumberForTax [AUFT]
          UNDEFINED <> cAddressNumberForTransport [AUFI]
          UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szGlClass [GLC]
          UNDEFINED <> mnDescTaskNumber [DOCO]
          UNDEFINED <> szDescTaskType [DCTO]
          UNDEFINED <> cOPAllowBackorders [OPBA]
          UNDEFINED <> cOPAllowMultiSource [OPMS]
          UNDEFINED <> cOPAllowSubstitutes [OPSS]
          UNDEFINED <> cOPPartialShipLineItems [OPLL]
          UNDEFINED <> cIsOrderPromisingEnabled [EV01]
          UNDEFINED <> cIsOPChangedInHeader [EV01]
     ! Call App:P4242 Form:W4242B Version: 
     !      UNDEFINED <> mnDoNotUseSONumber [DOCO]
     !      UNDEFINED <> szDoNotUseSOOrderType [DCTO]
     !      VA frm_TOE_PO_Number_DOC2 [DOC2] <> mnPONumber [DOC1]
     !      VA frm_TOE_PO_Type_DCIN [DCIN] <> szPOOrderType [DCIN]
     !      VA frm_TOE_SO_Branch_MCU1 [MCU1] <> szSOBranchPlant [MCU1]
     !      VA frm_TOE_PO_Branch_MCU2 [MCU2] <> szPOBranchPlant [MCU2]
     !      VA frm_TOE_SO_Currency_Code_CRCD [CRCD] <> szSOCurrencyCode [CRCD]
     !      VA frm_TOE_Exchange_Rate_CRR [CRR] <> mnSOExchangeRate [CRR]
     !      VA frm_TOE_PO_Currency_Code_CRDC [CRDC] <> szPOCurrencyCode [CRDC]
     !      VA frm_TOE_Address_Number_AN8 [AN8] <> mnSoldToShipToAddressNo [AN8]
     !      VA frm_TOE_Landed_Cost_Rule_PRP5 [PRP5] <> szLandedCostRule [PRP5]
     !      "0" -> cProtectedMode [EV01]
     !      VA frm_TOE_SO_Number_DOC1 [DOC1] <> mnSONumber [DOC2]
     !      FC Order Type [DCTO] <> szSOOrderType [DCOT]
     !      VA frm_TOE_Cancel_EV07 [EV07] <- cCancel [EV02]
     !      UNDEFINED <> mnPOExchangeRate [CRRD]
     !      UNDEFINED <> szSOCompanyKeyOrderNo [KCOO]
     ! If VA frm_TOE_PO_Branch_MCU2 [MCU2] is not equal to <NULL>
          ! FC Business Unit [MCU] = VA frm_TOE_SO_Branch_MCU1 [MCU1]
          ! // 
          ! // 2764135
          ! // Assigned VA frm_TOE_Address_Number_AN8 to AddressNumberShipto 
          instead of
          ! // Address Number.
          ! Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          !      VA frm_TOE_SO_Number_DOC1 [DOC1] <> DocumentOrderInvoiceE [DOCO]
          !      FC Order Type [DCTO] <> OrderType [DCTO]
          !      UNDEFINED <> CompanyKeyOrderNo [KCOO]
          !      FC Business Unit [MCU] <> Costcenter [MCU]
          !      UNDEFINED <> Addressnumber [AN8]
          !      VA frm_TOE_Address_Number_AN8 [AN8] <> Addressnumbershipto [SHAN]
          !      UNDEFINED <> Datetransactionjulian [TRDJ]
          !      UNDEFINED <> Currencymode [CRRM]
          !      VA frm_TOE_SO_Currency_Code_CRCD [CRCD] <> Currencycodefrom [CRCD]
          !      VA frm_TOE_Exchange_Rate_CRR [CRR] <> Currencyconverrateov [CRR]
          !      UNDEFINED <> Amountordergross [OTOT]
          !      UNDEFINED <> Amountforeignopen [FAP]
          !      "0" -> UpdatedToHdrWF [EV20]
          !      UNDEFINED <> Computerid [CTID]
          !      UNDEFINED <> Jobnumber [JOBS]
          !      VA frm_TOE_PO_Currency_Code_CRDC [CRDC] <> Currencycodeto [CRDC]
          !      UNDEFINED <> OrderPlacedOnHold [EV19]
          !      UNDEFINED <> Advancedsalespricingyn [ADVP]
          !      VA frm_TOE_PO_Branch_MCU2 [MCU2] <> szTOEToBranchPlant [MCU2]
          !      VA frm_TOE_Landed_Cost_Rule_PRP5 [PRP5] <> szTOELandedCostRule [PRP5]
          !      VA frm_TOE_PO_Number_DOC2 [DOC2] <> mnTOEPONumber [DOC2]
          !      VA frm_TOE_PO_Type_DCIN [DCIN] <> szTOEPOOrderType [DCIN]
          !      UNDEFINED <> szPONumber [VR01]
          !      UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          !      UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          !      UNDEFINED <> szOrderTempSoldTo [ORTP]
          !      UNDEFINED <> szOrderTempShipTo [ORTP]
          !      UNDEFINED <> cCurrencyConversionMethod [CRCM]
          !      UNDEFINED <> mnTr [MATH01]
          !      UNDEFINED <> mnTriangulationRateFrom [MATH01]
          !      UNDEFINED <> cShoppingCartMode [CART]
          !      UNDEFINED <> mnProcessID [PEID]
          !      UNDEFINED <> mnTransactionID [TCID]
          !      UNDEFINED <> szLongAddressSoldTo [ALKY]
          !      UNDEFINED <> szLongAddressShipTo [ALKY]
          !      UNDEFINED <> mnDeliveredTo [DVAN]
          !      UNDEFINED <> szLongAddressDeliverTo [ALKY]
          !      UNDEFINED <> mnForwardedTo [FTAN]
          !      UNDEFINED <> szLongAddressForwardedTo [ALKY]
          !      UNDEFINED <> mnInvoicedTo [ITAN]
          !      UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          !      UNDEFINED <> mnPaidBy [PBAN]
          !      UNDEFINED <> szLongAddressPaidBy [ALKY]
          !      UNDEFINED <> cAddressNumberForTax [AUFT]
          !      UNDEFINED <> cAddressNumberForTransport [AUFI]
     ! Else
     ! End If
     // End SAR 4363554
Else
     If PO cHeaderOrDetailFirst [EV19] is equal to or empty <Blank>
          Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
               UNDEFINED <> DocumentOrderInvoiceE [DOCO]
               UNDEFINED <> OrderType [DCTO]
               UNDEFINED <> CompanyKeyOrderNo [KCOO]
               FC Business Unit [MCU] <> Costcenter [MCU]
               UNDEFINED <> Addressnumber [AN8]
               UNDEFINED <> Addressnumbershipto [SHAN]
               UNDEFINED <> Datetransactionjulian [TRDJ]
               FC CRYR-Currency Flag [CRYR] <> Currencymode [CRRM]
               UNDEFINED <> Currencycodefrom [CRCD]
               UNDEFINED <> Currencyconverrateov [CRR]
               UNDEFINED <> Amountordergross [OTOT]
               UNDEFINED <> Amountforeignopen [FAP]
               <Blank> -> UpdatedToHdrWF [EV20]
               FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
               UNDEFINED <> Jobnumber [JOBS]
               UNDEFINED <> Currencycodeto [CRDC]
               UNDEFINED <> OrderPlacedOnHold [EV19]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> szTOEToBranchPlant [MCU2]
               UNDEFINED <> szTOELandedCostRule [PRP5]
               UNDEFINED <> mnTOEPONumber [DOC2]
               UNDEFINED <> szTOEPOOrderType [DCIN]
               UNDEFINED <> szPONumber [VR01]
               UNDEFINED <> mnTOEPOExchangeRate [CRRD]
               UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
               UNDEFINED <> szOrderTempSoldTo [ORTP]
               UNDEFINED <> szOrderTempShipTo [ORTP]
               UNDEFINED <> cCurrencyConversionMethod [CRCM]
               UNDEFINED <> mnTr [MATH01]
               UNDEFINED <> mnTriangulationRateFrom [MATH01]
               UNDEFINED <> cShoppingCartMode [CART]
               UNDEFINED <> mnProcessID [PEID]
               UNDEFINED <> mnTransactionID [TCID]
               UNDEFINED <> szLongAddressSoldTo [ALKY]
               UNDEFINED <> szLongAddressShipTo [ALKY]
               UNDEFINED <> mnDeliveredTo [DVAN]
               UNDEFINED <> szLongAddressDeliverTo [ALKY]
               UNDEFINED <> mnForwardedTo [FTAN]
               UNDEFINED <> szLongAddressForwardedTo [ALKY]
               UNDEFINED <> mnInvoicedTo [ITAN]
               UNDEFINED <> szLongAddressInvoicedTo [ALKY]
               UNDEFINED <> mnPaidBy [PBAN]
               UNDEFINED <> szLongAddressPaidBy [ALKY]
               UNDEFINED <> cAddressNumberForTax [AUFT]
               UNDEFINED <> cAddressNumberForTransport [AUFI]
               UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> szGlClass [GLC]
               UNDEFINED <> mnDescTaskNumber [DOCO]
               UNDEFINED <> szDescTaskType [DCTO]
               UNDEFINED <> cOPAllowBackorders [OPBA]
               UNDEFINED <> cOPAllowMultiSource [OPMS]
               UNDEFINED <> cOPAllowSubstitutes [OPSS]
               UNDEFINED <> cOPPartialShipLineItems [OPLL]
               UNDEFINED <> cIsOrderPromisingEnabled [EV01]
               UNDEFINED <> cIsOPChangedInHeader [EV01]
     Else
          Call App:P4210 Form:W4210G Version:VA frm_szVersion_VERS
               BC Document (Order No, Invoice, etc.) (F4201.0) [DOCO] <- Documentorderinvoicee [DOCO]
               BC Order Type (F4201.0) [DCTO] <- Ordertype [DCTO]
               BC Order Company (Order Number) (F4201.0) [KCOO] <- Companykeyorderno [KCOO]
               FC EV10-Call SO Detail [EV10] <- Everesteventpoint01 [EV01]
               FC EV20-Updated to Hdr [EV20] <> UpdatedToHdrWF [EV20]
               FC Business Unit [MCU] <> Costcenter [MCU]
               FC AN8-Sold To Num (wf) [AN8] <> Addressnumber [AN8]
               FC SHAN-Ship To Number [SHAN] <> Addressnumbershipto [SHAN]
               FC DATE02-Trans Date [DATE02] <> Datetransactionjulian [TRDJ]
               FC CRRM-Currency Mode [CRRM] <> Currencymode [CRRM]
               FC CRCD-Cust Curr (wf) [CRCD] <> Currencycodefrom [CRCD]
               FC CRR-Exchange Rate [CRR] <> Currencyconverrateov [CRR]
               FC OTOT-Order Total (wf) [OTOT] <> Amountordergross [OTOT]
               FC FAP-Foreign Total (wf) [FAP] <> Amountforeignopen [FAP]
               FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
               FC JOBS-Job Number (wf) [JOBS] <> Jobnumber [JOBS]
               FC CRDC-Base Currency [CRDC] <> Currencycodeto [CRDC]
               UNDEFINED <> Advancedsalespricingyn [ADVP]
               UNDEFINED <> Pricingbasedondate [CP01]
               UNDEFINED <> Priceretrievaluom [UMB1]
               UNDEFINED <> Processuomconversions [BUMC]
               UNDEFINED <> OrderSuffix [SFXO]
               UNDEFINED <> Deliveryinstructline1 [DEL1]
               UNDEFINED <> Deliveryinstructline2 [DEL2]
               UNDEFINED <> Priceadjusmentschedulen [ASN]
               UNDEFINED <> Discounttrade [TRDC]
               UNDEFINED <> Carrier [CARS]
               UNDEFINED <> Routecode [ROUT]
               UNDEFINED <> Stopcode [STOP]
               UNDEFINED <> Zonenumber [ZON]
               UNDEFINED <> Freighthandlingcode [FRTH]
               UNDEFINED <> Applyfreightyn [AFT]
               UNDEFINED <> Commissioncode1 [CMC1]
               UNDEFINED <> Ratecommission1 [CMR1]
               UNDEFINED <> Commissioncode2 [CMC2]
               UNDEFINED <> Ratecommission2 [CMR2]
               UNDEFINED <> Authorizationnocredit [AUTN]
               UNDEFINED <> Acctnocrbank [CACT]
               UNDEFINED <> Dateexpired [CEXP]
               UNDEFINED <> Paymenttermscode01 [PTC]
               UNDEFINED <> Paymentinstrumenta [RYIN]
               UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
               UNDEFINED <> Unitofmeasurevoldisp [VUMD]
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Copy record
Event: Button Clicked
Event GUID: f57df5b1-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 31045001 Begin
If GC Hd CD [HOLD] is not equal to <Blank>
     Set Grid Cell Error(FC Grid,  <Current Row>, GC HdCD, "2585")
     Stop Processing
Else
     // SAR 3530912 - Begin/End CHANGE
     Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
          GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
          GC Business Unit [MCU] -> Costcenter [MCU]
          UNDEFINED <> Addressnumber [AN8]
          UNDEFINED <> Addressnumbershipto [SHAN]
          UNDEFINED <> Datetransactionjulian [TRDJ]
          UNDEFINED <> Currencymode [CRRM]
          UNDEFINED <> Currencycodefrom [CRCD]
          UNDEFINED <> Currencyconverrateov [CRR]
          UNDEFINED <> Amountordergross [OTOT]
          UNDEFINED <> Amountforeignopen [FAP]
          "0" -> UpdatedToHdrWF [EV20]
          UNDEFINED <> Computerid [CTID]
          UNDEFINED <> Jobnumber [JOBS]
          UNDEFINED <> Currencycodeto [CRDC]
          UNDEFINED <> OrderPlacedOnHold [EV19]
          UNDEFINED <> Advancedsalespricingyn [ADVP]
          UNDEFINED <> szTOEToBranchPlant [MCU2]
          UNDEFINED <> szTOELandedCostRule [PRP5]
          UNDEFINED <> mnTOEPONumber [DOC2]
          UNDEFINED <> szTOEPOOrderType [DCIN]
          GC Reference  [VR01] -> szPONumber [VR01]
          UNDEFINED <> mnTOEPOExchangeRate [CRRD]
          UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
          UNDEFINED <> szOrderTempSoldTo [ORTP]
          UNDEFINED <> szOrderTempShipTo [ORTP]
          UNDEFINED <> cCurrencyConversionMethod [CRCM]
          UNDEFINED <> mnTr [MATH01]
          UNDEFINED <> mnTriangulationRateFrom [MATH01]
          UNDEFINED <> cShoppingCartMode [CART]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TCID]
          UNDEFINED <> szLongAddressSoldTo [ALKY]
          UNDEFINED <> szLongAddressShipTo [ALKY]
          UNDEFINED <> mnDeliveredTo [DVAN]
          UNDEFINED <> szLongAddressDeliverTo [ALKY]
          UNDEFINED <> mnForwardedTo [FTAN]
          UNDEFINED <> szLongAddressForwardedTo [ALKY]
          UNDEFINED <> mnInvoicedTo [ITAN]
          UNDEFINED <> szLongAddressInvoicedTo [ALKY]
          UNDEFINED <> mnPaidBy [PBAN]
          UNDEFINED <> szLongAddressPaidBy [ALKY]
          UNDEFINED <> cAddressNumberForTax [AUFT]
          UNDEFINED <> cAddressNumberForTransport [AUFI]
          UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szGlClass [GLC]
          UNDEFINED <> mnDescTaskNumber [DOCO]
          UNDEFINED <> szDescTaskType [DCTO]
          UNDEFINED <> cOPAllowBackorders [OPBA]
          UNDEFINED <> cOPAllowMultiSource [OPMS]
          UNDEFINED <> cOPAllowSubstitutes [OPSS]
          UNDEFINED <> cOPPartialShipLineItems [OPLL]
          UNDEFINED <> cIsOrderPromisingEnabled [EV01]
          UNDEFINED <> cIsOPChangedInHeader [EV01]
End If
// SAR 31045001 End


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Address Book Browse
Event: Button Clicked
Event GUID: f57df5b5-a23a-11d0-a204-0000f6728a56
=============================================
! Call App:P0101 Form:W0101H Version: 
!      UNDEFINED <> Addressnumber [AN8]
! Call App:P01012 Form:W01012B Version: 
!      UNDEFINED <> mnAddressNumber [AN8]
!      UNDEFINED <> szAddressType1 [AT1]
// SAR 5587058
Call App:P01012 Form:W01012B Version:ZJDE0001
     UNDEFINED <> mnAddressNumber [AN8]
     UNDEFINED <> szAddressType1 [AT1]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Sales Order Header Revision
Event: Button Clicked
Event GUID: f57df5b4-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4210 Form:W4210G Version:VA frm_szVersion_VERS
     GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     FC EV10-Call SO Detail [EV10] <> Everesteventpoint01 [EV01]
     FC EV20-Updated to Hdr [EV20] <> UpdatedToHdrWF [EV20]
     FC MCU2-Header Branch [MCU2] <> Costcenter [MCU]
     FC AN8-Sold To Num (wf) [AN8] <> Addressnumber [AN8]
     FC SHAN-Ship To Number [SHAN] <> Addressnumbershipto [SHAN]
     FC DATE02-Trans Date [DATE02] <> Datetransactionjulian [TRDJ]
     FC CRRM-Currency Mode [CRRM] <> Currencymode [CRRM]
     FC CRCD-Cust Curr (wf) [CRCD] <> Currencycodefrom [CRCD]
     FC CRR-Exchange Rate [CRR] <> Currencyconverrateov [CRR]
     FC OTOT-Order Total (wf) [OTOT] <> Amountordergross [OTOT]
     FC FAP-Foreign Total (wf) [FAP] <> Amountforeignopen [FAP]
     FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
     FC JOBS-Job Number (wf) [JOBS] <> Jobnumber [JOBS]
     GC To Curr [CRDC] <> Currencycodeto [CRDC]
     UNDEFINED <> Advancedsalespricingyn [ADVP]
     UNDEFINED <> Pricingbasedondate [CP01]
     UNDEFINED <> Priceretrievaluom [UMB1]
     UNDEFINED <> Processuomconversions [BUMC]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> Deliveryinstructline1 [DEL1]
     UNDEFINED <> Deliveryinstructline2 [DEL2]
     UNDEFINED <> Priceadjusmentschedulen [ASN]
     UNDEFINED <> Discounttrade [TRDC]
     UNDEFINED <> Carrier [CARS]
     UNDEFINED <> Routecode [ROUT]
     UNDEFINED <> Stopcode [STOP]
     UNDEFINED <> Zonenumber [ZON]
     UNDEFINED <> Freighthandlingcode [FRTH]
     UNDEFINED <> Applyfreightyn [AFT]
     UNDEFINED <> Commissioncode1 [CMC1]
     UNDEFINED <> Ratecommission1 [CMR1]
     UNDEFINED <> Commissioncode2 [CMC2]
     UNDEFINED <> Ratecommission2 [CMR2]
     UNDEFINED <> Authorizationnocredit [AUTN]
     UNDEFINED <> Acctnocrbank [CACT]
     UNDEFINED <> Dateexpired [CEXP]
     UNDEFINED <> Paymenttermscode01 [PTC]
     UNDEFINED <> Paymentinstrumenta [RYIN]
     UNDEFINED <> Unitofmeasurewhtdisp [WUMD]
     UNDEFINED <> Unitofmeasurevoldisp [VUMD]
// 
! If FC EV10-Call SO Detail [EV10] is equal to "1"
     ! Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
     !      GC Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
     !      GC Or Ty [DCTO] <> OrderType [DCTO]
     !      GC Order Co [KCOO] <> CompanyKeyOrderNo [KCOO]
     !      FC MCU2-Header Branch [MCU2] -> Costcenter [MCU]
     !      FC AN8-Sold To Num (wf) [AN8] -> Addressnumber [AN8]
     !      FC SHAN-Ship To Number [SHAN] -> Addressnumbershipto [SHAN]
     !      FC DATE02-Trans Date [DATE02] -> Datetransactionjulian [TRDJ]
     !      FC CRRM-Currency Mode [CRRM] -> Currencymode [CRRM]
     !      FC CRCD-Cust Curr (wf) [CRCD] -> Currencycodefrom [CRCD]
     !      FC CRR-Exchange Rate [CRR] -> Currencyconverrateov [CRR]
     !      FC OTOT-Order Total (wf) [OTOT] -> Amountordergross [OTOT]
     !      FC FAP-Foreign Total (wf) [FAP] -> Amountforeignopen [FAP]
     !      FC EV20-Updated to Hdr [EV20] -> UpdatedToHdrWF [EV20]
     !      FC CTID-Computer ID (wf) [CTID] <> Computerid [CTID]
     !      FC JOBS-Job Number (wf) [JOBS] -> Jobnumber [JOBS]
     !      FC CRDC-Base Currency [CRDC] -> Currencycodeto [CRDC]
     !      UNDEFINED <> OrderPlacedOnHold [EV19]
     !      UNDEFINED <> Advancedsalespricingyn [ADVP]
     !      UNDEFINED <> szTOEToBranchPlant [MCU2]
     !      UNDEFINED <> szTOELandedCostRule [PRP5]
     !      UNDEFINED <> mnTOEPONumber [DOC2]
     !      UNDEFINED <> szTOEPOOrderType [DCIN]
     !      UNDEFINED <> szPONumber [VR01]
     !      UNDEFINED <> mnTOEPOExchangeRate [CRRD]
     !      UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
     !      UNDEFINED <> szOrderTempSoldTo [ORTP]
     !      UNDEFINED <> szOrderTempShipTo [ORTP]
     !      UNDEFINED <> cCurrencyConversionMethod [CRCM]
     !      UNDEFINED <> mnTr [MATH01]
     !      UNDEFINED <> mnTriangulationRateFrom [MATH01]
     !      UNDEFINED <> cShoppingCartMode [CART]
! End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Sales Order Detail Revisions
Event: Button Clicked
Event GUID: f57df5b2-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4210 Form:W4210A Version:VA frm_szVersion_VERS
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Business Unit [MCU] -> Costcenter [MCU]
     UNDEFINED <> Addressnumber [AN8]
     UNDEFINED <> Addressnumbershipto [SHAN]
     UNDEFINED <> Datetransactionjulian [TRDJ]
     UNDEFINED <> Currencymode [CRRM]
     UNDEFINED <> Currencycodefrom [CRCD]
     UNDEFINED <> Currencyconverrateov [CRR]
     UNDEFINED <> Amountordergross [OTOT]
     UNDEFINED <> Amountforeignopen [FAP]
     "0" -> UpdatedToHdrWF [EV20]
     UNDEFINED <> Computerid [CTID]
     UNDEFINED <> Jobnumber [JOBS]
     GC To Curr [CRDC] -> Currencycodeto [CRDC]
     UNDEFINED <> OrderPlacedOnHold [EV19]
     UNDEFINED <> Advancedsalespricingyn [ADVP]
     UNDEFINED <> szTOEToBranchPlant [MCU2]
     UNDEFINED <> szTOELandedCostRule [PRP5]
     UNDEFINED <> mnTOEPONumber [DOC2]
     UNDEFINED <> szTOEPOOrderType [DCIN]
     GC Reference  [VR01] -> szPONumber [VR01]
     UNDEFINED <> mnTOEPOExchangeRate [CRRD]
     UNDEFINED <> szHeaderAdjustmentScheduleN [ASN]
     UNDEFINED <> szOrderTempSoldTo [ORTP]
     UNDEFINED <> szOrderTempShipTo [ORTP]
     UNDEFINED <> cCurrencyConversionMethod [CRCM]
     UNDEFINED <> mnTr [MATH01]
     UNDEFINED <> mnTriangulationRateFrom [MATH01]
     UNDEFINED <> cShoppingCartMode [CART]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TCID]
     UNDEFINED <> szLongAddressSoldTo [ALKY]
     UNDEFINED <> szLongAddressShipTo [ALKY]
     UNDEFINED <> mnDeliveredTo [DVAN]
     UNDEFINED <> szLongAddressDeliverTo [ALKY]
     UNDEFINED <> mnForwardedTo [FTAN]
     UNDEFINED <> szLongAddressForwardedTo [ALKY]
     UNDEFINED <> mnInvoicedTo [ITAN]
     UNDEFINED <> szLongAddressInvoicedTo [ALKY]
     UNDEFINED <> mnPaidBy [PBAN]
     UNDEFINED <> szLongAddressPaidBy [ALKY]
     UNDEFINED <> cAddressNumberForTax [AUFT]
     UNDEFINED <> cAddressNumberForTransport [AUFI]
     UNDEFINED <> mnRelatedOrderSetIdentifier [ROSID]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szGlClass [GLC]
     UNDEFINED <> mnDescTaskNumber [DOCO]
     UNDEFINED <> szDescTaskType [DCTO]
     UNDEFINED <> cOPAllowBackorders [OPBA]
     UNDEFINED <> cOPAllowMultiSource [OPMS]
     UNDEFINED <> cOPAllowSubstitutes [OPSS]
     UNDEFINED <> cOPPartialShipLineItems [OPLL]
     UNDEFINED <> cIsOrderPromisingEnabled [EV01]
     UNDEFINED <> cIsOPChangedInHeader [EV01]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Customer Service Inquiry
Event: Button Clicked
Event GUID: f57df5b3-a23a-11d0-a204-0000f6728a56
=============================================
// ***********************************************************************
// SAR 2410610 - Begin/End CHANGE
// The Branch/Plant will no longer be passed so that all orders from
// different B/P can be shown.
// ***********************************************************************
GB Business Unit [MCU] = "*"
Call App:P4210 Form:W4210E Version:VA frm_szVersion_VERS
     GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     GC Reference  [VR01] -> Reference1 [VR01]
     UNDEFINED <> Itemnounknownformat [UITM]
     GB Business Unit [MCU] -> Costcenter [MCU]
     UNDEFINED <> mnAddressNumber [AN8]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Online Sales Invoice Inquiry
Event: Button Clicked
Event GUID: f57df5b6-a23a-11d0-a204-0000f6728a56
=============================================
If PO szP42230Vers [VL05] is equal to or empty <Blank>
Or PO szP42230Vers [VL05] is equal to or empty <NULL>
     PO szP42230Vers [VL05] = "ZJDE0001"
End If
// 
Call App:P42230 Form:W42230A Version:PO szP42230Vers
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> Docvoucherinvoicee [DOC]
     UNDEFINED <> Documenttype [DCT]
     UNDEFINED <> Companykey [KCO]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> mnLineNumber [LNID]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Order Address Window
Event: Button Clicked
Event GUID: f57df5ba-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 4294034 - pass transaction date to P4006
If GC Order Date [TRDJ] is equal to Null Date
     VA frm_jdOrderDate_TRDJ [TRDJ] = date_today()
Else
     VA frm_jdOrderDate_TRDJ [TRDJ] = GC Order Date [TRDJ]
End If
// 
// SAR 8354276 - Cache P4210 & P03013 Version for P4006
// to retrieve Address Book (P01012) Processing Options
// 
// Intialize the Cache
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "1" -> cActionCode [ACTN]
// 
// Add P4210 & P03013 Versions to Cache 
// 
CacheP4210VersionForP4006(B4208260.CacheP4210VersionForP4006)
     SL VersionName -> szP4210Version [VERS]
     "2" -> cActionCode [ACTN]
     PO szP03013Vers [VL17] -> szP03013Version [VERS]
     "EP4210" -> szCallingProgramId [PID]
// 
Call App:P4006 Form:W4006B Version:  [Modeless]
     GC Address Number [AN8] -> AddressNumber [AN8]
     GC Ship To Number [SHAN] -> ShipToNumber [SHAN]
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "S" -> CalledFromSales_S_OrPurch_P [EV01]
     UNDEFINED <> InquiryMode [EV02]
     UNDEFINED <> BatchOrderAddress [EV03]
     UNDEFINED <> EDIOrderAddress [EV04]
     UNDEFINED <> FileName [FILE]
     UNDEFINED <> EdiDocumentNumber [EDOC]
     UNDEFINED <> EdiDocumentType [EDCT]
     UNDEFINED <> CompanyKeyEdiOrder [EKCO]
     UNDEFINED <> EdiLineNumber [EDLN]
     PO cShoppingCartMode [CART] -> cShoppingCartMode [CART]
     UNDEFINED <> jdDateTransactionJulian [TRDJ]
     GC Deliver To Number [DVAN] -> mnDeliverToNumber [DVAN]
     GC Forwarded To Number [FTAN] -> mnForwardedToNumber [FTAN]
     GC Invoiced To Number [ITAN] -> mnInvoiceToNumber [ITAN]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Attachments
Event: Button Clicked
Event GUID: f57df5b7-a23a-11d0-a204-0000f6728a56
=============================================
FC EV05-Attachment Row [EV05] = <NULL>
Media Object Structures(GT4201A, <Edit>, FC EV05-Attachment Row, GC OrderNumber, GC OrTy, GC OrderCo)
If FC EV05-Attachment Row [EV05] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
Else
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <No>)
End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Sold To Customer Master
Event: Button Clicked
Event GUID: f57df5b8-a23a-11d0-a204-0000f6728a56
=============================================
! Call App:P0301 Form:W0301A Version:  [Modeless]
!      GC Address Number [AN8] Could not find member in DSTR
!      "C" Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
// SAR 2905381
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany [CO] = GC Order Co [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     GC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     GC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_szCompany [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Ship To Customer Master
Event: Button Clicked
Event GUID: f57df5b9-a23a-11d0-a204-0000f6728a56
=============================================
! Call App:P0301 Form:W0301A Version:  [Modeless]
!      GC Ship To Number [SHAN] Could not find member in DSTR
!      "C" Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
// SAR 2905381
// SAR 3050652 - Begin ADD
If PO szP03013Vers [VL17] is equal to <Blank>
Or PO szP03013Vers [VL17] is equal to <NULL>
     PO szP03013Vers [VL17] = "ZJDE0001"
End If
// SAR 3050652 - End ADD
VA frm_szCompany [CO] = GC Order Co [KCOO]
CheckCompanyForLOB(B0100063.CheckCompanyForLOB)
     GC Ship To Number [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany [CO] <> szCompany [CO]
     UNDEFINED <> cRecordFound [EV01]
// SAR 3050652 - Begin/End CHANGE
Call App:P03013 Form:W03013B Version:PO szP03013Vers
     GC Ship To Number [SHAN] -> mnAddressNumber [AN8]
     VA frm_szCompany [CO] -> szCompany [CO]
     UNDEFINED <> mn_Tab_ToGoTo [MATH01]
     UNDEFINED <> szCountryForPayroll [CCPR]
     UNDEFINED <> szAlternateAddressKey [ALKY]
     UNDEFINED <> mnAddressNumberParent [PA8]
     UNDEFINED <> szCreditMessage [CM]
     UNDEFINED <> szTaxId [TAX]
     UNDEFINED <> cPersonCorporationCode [TAXC]
     UNDEFINED <> szAdditionalIndividualTax [TX2]
     UNDEFINED <> szCalledFrom [SYS]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Generate Proposal
Event: Button Clicked
Event GUID: f06e0d21-78e9-11d2-9b6d-00104b297363
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szP0039GenericTextKey_TXKY [TXKY]
evt_szB4001060TransKey_TRNK [TRNK]
----------------------------------------
// ==============================================
//     Changes for SAR# 3105271 Enhancement
// ==============================================
! Call App:P0039 Form:W0039A Version:ZJDE0001
!      GC Order Number [DOCO] Could not find member in DSTR
!      GC Or Ty [DCTO] Could not find member in DSTR
!      GC Order Co [KCOO] Could not find member in DSTR
!      Cannot resolve DS Member: 100 Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
!      UNDEFINED Could not find member in DSTR
ConvertOrderTransactionKey(B4001060.ConvertOrderTransactionKey)
     VA evt_szB4001060TransKey_TRNK [TRNK] <- szTransactionKey [TRNK]
     GC Order Number [DOCO] -> mnOrderNumber [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKey [KCOO]
     GC Ord Suf [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> szEditedTransactionKey [TRNK]
     UNDEFINED <> cSeparator [SEP]
     "0" -> cConversionMode [MODE]
VA evt_szP0039GenericTextKey_TXKY [TXKY] = [VA evt_szB4001060TransKey_TRNK [TRNK]]
! Call App:P00391 Form:W00391F Version:PO szP00391Version
!      VA evt_szP0039GenericTextKey_TXKY [TXKY] Could not find member in DSTR
!      "F4211" Could not find member in DSTR
//     Use new proposal app as of 9/17/04
Call App:P90CA24 Form:W90CA24B Version:Undefined
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Shipment Status
Event: Button Clicked
Event GUID: 278ade33-199c-11d2-9a79-0000f64da757
=============================================
Call App:P4947 Form:W4947A Version:ZJDE0001
     UNDEFINED <> mnShipmentNumber [SHPN]
     UNDEFINED <> mnRoutingStepNumber [RSSN]
     UNDEFINED <> szBusinessUnit [MCU]
     GC Ship To Number [SHAN] -> mnShipTo [SHAN]
     UNDEFINED <> mnSoldTo [AN8]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Work With Shipment
Event: Button Clicked
Event GUID: 278ade31-199c-11d2-9a79-0000f64da757
=============================================
// SAR 2884479 - Begin ADD
If PO szP4915Vers [VL16] is equal to <Blank>
Or PO szP4915Vers [VL16] is equal to <NULL>
     PO szP4915Vers [VL16] = "ZJDE0001"
End If
// SAR 2884479 - End ADD
// SAR 2884479 - Begin/End CHANGE
Call App:P4915 Form:W4915B Version:PO szP4915Vers
     UNDEFINED <> mnShipmentNumber [SHPN]
     UNDEFINED <> mnRoutingStepNumber [RSSN]
     UNDEFINED <> szBusiness_Unit_F4215 [MCU]
     GC Ship To Number [SHAN] -> mnAddress_Number__Ship_To_F421 [SHAN]
     UNDEFINED <> mnAddress_Number_F4215 [AN8]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     UNDEFINED <> mnTransportationJobNumber [JOBS]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Regional Information
Event: Button Clicked
Event GUID: 5ef15cd7-e064-11d1-9ac9-00600832fe19
=============================================
N7000310_PlugAndPlay_P4210(N7000310.N7000310_PlugAndPlay_P4210)
     UNDEFINED <> szCompany [CO]
     UNDEFINED <> szCountry [CTR]
     "P4210" -> szCallingAppl [PID]
     "W4210H" -> szCallingForm [FID]
     "XIT" -> szFormAction [FATN]
     SL VersionName -> szCallingVers [VERS]
     UNDEFINED <> szComputerID [CTID]
     FC JOBS-Job Number (wf) [JOBS] -> mnJobnumberA [JOBS]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Ord Suf [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cNewRecords [EV01]
     UNDEFINED <> cTableCache [EV02]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Exit to Revision History
Event: Button Clicked
Event GUID: 376c43aa-fe45-4902-b2f5-e82ea9ed04a3
=============================================
// 
// Exit to Revision History
// 
Call App:P42420 Form:W42420B Version: 
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     UNDEFINED <> mnLineNumber [LNID]
     GC Chg Ord [CORD] -> mnNumberChangeOrder [CORD]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: HC Style Sales Order Matrix Entry Revision
Event: Button Clicked
Event GUID: 82a2fb62-8381-4744-b8ba-64899bf0fa55
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnJobnumber_JOBS [JOBS]
evt_szUserId_USER [USER]
----------------------------------------
// SAR 8953108 - Apparel Enhancement
VA evt_szUserId_USER [USER] = SL UserID
If PO szPCW10Version [VL28] is equal to or empty <Blank>
     PO szPCW10Version [VL28] = "ZJDE0002"
End If
//
// Call BCW31 which will retrieve the SO info from F4211 and insert temp
// workfile records into FCW20 to be used in PCW10 just for this call only
//
MatrixSeizureForShipmentConf(BCW31.MatrixSeizureForShipmentConf)
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Business Unit [MCU] -> szCostCenter [MCU]
     "0" -> mnPickSlipNumber [PSN]
     <Blank> -> szCommodityCode [CDCD]
     <Blank> -> szReference1 [VR01]
     <Blank> -> szStatusCodeNext [NXTR]
     <Blank> -> szStatusCodeLast [LTTR]
     VA evt_mnJobnumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] <> szUserId [USER]
     "F4211" -> szC9FILE_File [C9FILE]
//
// Call PCW10 with MatrixType=3 and make sure to pass the new JOBS from BCW31
Call App:PCW10 Form:WCW10B Version:PO szPCW10Version
     VA evt_mnJobnumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] -> szUserId [USER]
     "3" -> MatrixType [EV01]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     "0" -> QtyControle [UORG]
     "F4211" -> szC9FILE_File [C9FILE]
     PO szP4021Vers [VL02] -> szVersion_P4021 [VERS]
     PO szNonUpdatableStatus [NXT2] -> NonUpdatableStatus [NXTR]
     "EP4210" -> szCallingAPPLProgramId [PID]
     GC Address Number [AN8] -> mnSoldTo [AN8]
     GC Ship To Number [SHAN] -> mnShipTo [AN8]
     GC Order Date [TRDJ] -> jdOrderDate [JDATE]
     GC Reference  [VR01] -> szOrderReference [VR01]
     SL VersionName -> szSalesOrderVersion [VERS]
//
// Delete the temp workfile records from FCW20
FCW20.Delete  [Index 1: Primary]
     VA evt_mnJobnumber_JOBS [JOBS] = TK Job Number [JOBS]


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: FC Long Address Number
Event: Control Exited/Changed-Inline
Event GUID: e1cb9631-a5a9-11d2-a1f4-00105a1bfebf
=============================================
// SAR 3616960 - Begin
VA frm_cSoldToError_EV01 [EV01] = "0"
If FC Long Address Number [ALKY] is not equal to <Blank>
     // SAR 5370131 - Use N0100061 instead of B0100016
     ! ScrubAddressNumber(B0100016.ScrubAddressNumber)
     !      FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Sold To Number [AN8] <- mnAddressNumber [AN8]
     !      UNDEFINED <> szTaxid [TAX]
     !      "5" -> cInputSelection [EV01]
     !      VA frm_cSoldToError_EV01 [EV01] <- cSuccessFlag [EV02]
     !      FC Description [DL01] <> szNameAlpha [ALPH]
     !      UNDEFINED <> szLongAddressKey [MLNM]
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Sold To Number [AN8] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          VA frm_cSoldToError_EV01 [EV01] <- cSuccessFlag [EV02]
          FC Description [DL01] <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
     // SAR 3616960 - End
     // SAR 3483271 - Begin/End DELETE
     ! FC Long Address Number [ALKY] = [FC Sold To Number [AN8]]
     // SAR 3467010 - Begin ADD
Else
     FC Sold To Number [AN8] = "*"
     FC Long Address Number [ALKY] = "*"
     FC Description [DL01] = <Blank>
     // SAR 3467010 - End ADD
End If


=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Object: FC Grid
Event: Double Click on Row Header
Event GUID: f57df5ae-a23a-11d0-a204-0000f6728a56
=============================================
Media Object Structures(GT4201A, <Display>, FC EV05-Attachment Row, GC OrderNumber, GC OrTy, GC OrderCo)



=============================================
EVENTS
=============================================
Form: Work With Sales Order Headers - W4210H
Event: Dialog is Initialized
Event GUID: f57df5ab-a23a-11d0-a204-0000f6728a56
=============================================
//
// SAR 8953108 - Apparel Enhancements
// Check if Apparel System (SY41F) is Installed. Disable
// Apparel Row exits is Apparel System is not Installed.
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cApparelInstalled_EV01 [EV01] is not equal to "1"
Or PO cActivatePrepayProcess [EV01] is equal to "1"
Or PO cUseAuditLog [EV01] is equal to "1"
     Disable Control(HC Style Matrix Entry)
End If
//
// SAR # 1847781 Store off Version into a non-system variable.
VA frm_szVersion_VERS [VERS] = SL VersionName
//
//     Load criterion fields with values from the input parameter.
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Set Form Title(TV Work With Store And Forward Headers)
End If
//
If FI DocumentOrderInvoiceE [DOCO] is not equal to "0"
     FC Order Number [DOCO] = FI DocumentOrderInvoiceE [DOCO]
End If
If FI OrderType [DCTO] is not equal to <Blank>
     FC Order Type [DCTO] = FI OrderType [DCTO]
End If
If FC Order Type [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szDefaultOrdertype [DCTO]
End If
If FI CompanyKeyOrderNo [KCOO] is not equal to <Blank>
     FC Order Company [KCOO] = FI CompanyKeyOrderNo [KCOO]
End If
If FI Originalposonumber [OORN] is not equal to <Blank>
     FC Original Order Number [OORN] = FI Originalposonumber [OORN]
End If
If FI Originalordertype [OCTO] is not equal to <Blank>
     FC Original Order Type [OCTO] = FI Originalordertype [OCTO]
End If
If FI Companykeyoriginal [OKCO] is not equal to <Blank>
     FC Original Order Document Company [OKCO] = FI Companykeyoriginal [OKCO]
End If
If FI Costcenter [MCU] is greater than <Blank>
     FC Business Unit [MCU] = FI Costcenter [MCU]
End If
If FC Business Unit [MCU] is less than or equal to <Blank>
And PO szDefaultBranchPlant [MCU] is greater than <Blank>
     FC Business Unit [MCU] = PO szDefaultBranchPlant [MCU]
End If
If FC Business Unit [MCU] is less than or equal to <Blank>
     // SAR 5493342
     If PO cDefaultShipToBranch [EV02] is equal to <Blank>
     Or PO cDefaultShipToBranch [EV02] is equal to <NULL>
          GetDefaultBranch(B4000370.GetDefaultBranch)
               FC Business Unit [MCU] <- szBranch [MCU]
               UNDEFINED <> szApprovalRouteCode [ARTG]
     End If
End If
If FC Business Unit [MCU] is less than or equal to <Blank>
     FC Business Unit [MCU] = "*"
End If
If FI Reference1 [VR01] is not equal to <Blank>
     FC Customer PO Number [VR01] = FI Reference1 [VR01]
End If
//
//     Disable button from tool bar.
//
// Hide Revision Number, if Audit Logging is not used
//
If PO cUseAuditLog [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC RevNbr)
     Disable Control(HC &Revision History)
End If

=============================================
Form: Work With Sales Order Headers - W4210H
Event: Post Dialog is Initialized
Event GUID: f57e072f-a23a-11d0-a204-0000f6728a56
=============================================
//                                    SAR REVISION LOG
// SAR #                          PROGRAMMER                           DATE
// 4300166                        VK6272082                            06/22/00
//
If PO cStoreAndForwardMode [SO15] is equal to "1"
Or PO cStoreAndForwardMode [SO15] is equal to "2"
     Disable Control(HC SO &Header Revision)
     Disable Control(HC SO &Detail Revision)
     Disable Control(HC Customer &Service)
     Disable Control(HC Online &Invoice)
     Disable Control(HC S&old To Customer)
     Disable Control(HC Shi&p To Customer)
     Disable Control(HC Order &Address)
     Disable Control(HC Re&gional Info)
     Disable Control(HC A&ttachments)
End If
//
// SAR 4300166 BEGIN / END DELETE - DELETE AUTO FIND

=============================================
Form: Work With Sales Order Headers - W4210H
Event: Grid Record is Fetched
Event GUID: f57df5ac-a23a-11d0-a204-0000f6728a56
=============================================
If SL CurrencyProcessing is not equal to " N"
     If BC Order Company (Order Number) (F4201.0) [KCOO] is not equal to VA frm_szPreviousKeyCompany_KCOO [KCOO]
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               BC Order Company (Order Number) (F4201.0) [KCOO] -> szCompany [CO]
               FC CRDC-Base Currency [CRDC] <- szCurrencyCode [CRCD]
               UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
               UNDEFINED <> cPostByCurrency [ABIN]
          VA frm_szPreviousKeyCompany_KCOO [KCOO] = BC Order Company (Order Number) (F4201.0) [KCOO]
     End If
     GC To Curr [CRDC] = FC CRDC-Base Currency [CRDC]
End If
FC EV05-Attachment Row [EV05] = <Blank>
Media Object Structures(GT4201A, <Exist>, FC EV05-Attachment Row, BC Document (Order No, Invoice, etc.) (F4, BC Order Type (F4201), BC Order Company (Order Number) (F4201))
If FC EV05-Attachment Row [EV05] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Current Row>, <Yes>)
End If

=============================================
Form: Work With Sales Order Headers - W4210H
Event: Write Grid Line-Before
Event GUID: f57df5ad-a23a-11d0-a204-0000f6728a56
=============================================
If GC Address Number [AN8] is not equal to VA frm_mnPreviousAddrNumber_AN8 [AN8]
     GetAddressBookDescriptionA7(GETABDA7.GetAddressBookDescriptionA7)
          GC Address Number [AN8] -> mnAddressNumber [AN8]
          VA frm_szPreviousAlphaName_ALPH [ALPH] <- szAddressBookDescription [ALPH]
     VA frm_mnPreviousAddrNumber_AN8 [AN8] = GC Address Number [AN8]
End If
GC Description  [DL01] = VA frm_szPreviousAlphaName_ALPH [ALPH]




