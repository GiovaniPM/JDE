
=============================================
Form: Order Detail - W4310A
Event: Form Variables
Event GUID: 909331fd-a23d-11d0-a204-0000f6728a56
=============================================
frm_BlanketProcessing [EV01]
frm_RelieveBlanketOrder [EV06]
frm_HeaderValuesChanged [EV01]
frm_EndOfFile [EV01]
frm_MaxGridRows [MATH01]
frm_TemplatesExecuted [EV01]
frm_OriginalOrderNo [OORN]
frm_LANC_LandedCostRule [LANC]
frm_CTID_ComputerID [CTID]
frm_JOBS_JobNumber [JOBS]
frm_DRQJ_RequestedDate [DRQJ]
frm_PDDJ_PromiseDate [PDDJ]
frm_CNDJ_CancelDate [CNDJ]
frm_DGL_GLDate [DGL]
frm_ANI_AccountNumber [ANI]
frm_SBL_Subledger [SBL]
frm_SBLT_SubledgerType [SBLT]
frm_USR0_UserID [USR0]
frm_EV01_AddNewToExistingOrder [EV01]
frm_GENLNG_P43216CacheHandle [GENLNG]
frm_EV01_LastCacheRecord [EV01]
frm_LNID_CacheLineNumber [LNID]
frm_LNTY_PreviousLineType [LNTY]
frm_ORNN_OrderNextNumber [ORNN]
frm_EV01_UsesWorkFields [EV01]
frm_EV01_UnitPriceEnteredFlag [EV01]
frm_EV01_SubItemsOK [EV01]
frm_EV01_ProtectCurrFields [EV01]
frm_MATH01_TempOrigOrderNo [MATH01]
frm_GENLNG_CacheCursor [GENLNG]
frm_BranchAtEntry [MCU]
frm_CompanyAtEntry [CO]
frm_CompanyCurrAtEntry [CRCD]
frm_TSTA_Credit_Msg [TSTA]
frm_DG_EffectiveDate [DG]
frm_ADDJ_PhysicalComp [ADDJ]
frm_CatCode1 [PDP1]
frm_CatCode2 [PDP2]
frm_CatCode3 [PDP3]
frm_CatCode4 [PDP4]
frm_CatCode5 [PDP5]
frm_Description [DSC1]
frm_OMCU_BusinessUnit [OMCU]
frm_SUB_Subsidiary [SUB]
frm_OBJ_ObjectAcct [OBJ]
frm_SFX0_ZeroSuffix [SFX0]
frm_MATH01_GridRowCounter [MATH01]
frm_OrderTotal [TOT1]
frm_RecordInHeaderWkFile [EV01]
frm_TempDOCO [DOCO]
frm_TempDCTO [DCTO]
frm_TempAN8 [AN8]
frm_TempSHAN [SHAN]
frm_TempHOLD [HOLD]
frm_TempMCU [MCU]
frm_TempSFX0 [SFXO]
frm_TempTRDJ [TRDJ]
frm_TempCRCD [CRCD]
frm_TempCRR [CRR]
frm_TempCRDC [CRDC]
frm_TempCRRM [CRRM]
frm_XRT_XRefType [XRT]
frm_AVCH_EvalReceipt [AVCH]
frm_EV11_KitsProcessed [EV11]
frm_PMTH_MethodofPriceCalc [PMTH]
frm_EV10_cAddOrMaintenanceMode [EV10]
frm_ERRC_Error [ERRC]
frm_LNIX_LastLineNoAssigned [LNIX]
frm_LNID_Cancel [LNID]
frm_LINN_FromLineNo [LINN]
frm_LIN_ThroughLineNo [LIN]
grd_ASN_AdjSchedule [ASN]
grd_AREV_AdjRevisionLevel [AREV]
grd_PS08_cFreeGoodIndicator [PS08]
frm_CLVL_PriceCatLevel [CLVL]
frm_CO01_CostMgmtFlag [CO01]
frm_MINO [MINO]
frm_MAXO [MAXO]
grd_EV11_ExecuteEditLine [EV11]
frm_c_ERSFlag [EV01]
frm_mnOrderYear_MATH01 [MATH01]
frm_mnOrderCentury_MATH01 [MATH01]
frm_szCenturyYear_GS1A [GS1A]
frm_cVertexActive [VVTX]
frm_szVertexCanadaCountryCode [VVCN]
frm_szSearchType [AT1]
frm_cGeoCodeValid [EV01]
frm_cValidateApplication_EV01 [EV01]
frm_mnReserveOrderNumber_DOCO [DOCO]
frm_szReserveNameAlpha_ALPH [ALPH]
frm_szGenericKey_GENKEY [GENKEY]
frm_szReserveAppID_PID [PID]
frm_szRecordReserveErrMsg_DTAI [DTAI]
frm_szConvertResOrderNo_DOC8 [DOC8]
frm_StringIsNumeric [SVAL]
frm_AN8_LongAddressNumeric [AN8]
frm_cTextYN_TXYN [TXYN]
frm_szPrevLineType_LNTY [LNTY]
frm_szLineType_LNTY [LNTY]
frm_szOrderTemplate_ORTP [ORTP]
frm_EV02_BegDocExecuted [EV02]
frm_cSetFocusToGridFlag_EV01 [EV01]
frm_OriginalOrderCompany_OKCO [OKCO]
frm_OriginalOrderType_OCTO [OCTO]
frm_nNumberOfErrors_INT01 [INT01]
frm_cBlanketsCalled_EV01 [EV01]
frm_cUDCError_EV01 [EV01]
frm_Old_ShipTo [SHAN]
frm_Old_ShipToCopy [SHAN]
frm_Old_LongShipTo [ALKY]
frm_mnCurrentGridRow [MATH01]
frm_cAlreadySetFocus [EV01]
frm_KitRecordInDetail_EV01 [EV01]
frm_cTransportationInstalled [EV01]
frm_szSaveLongAddressNo_ALKY [ALKY]
frm_szSaveCurrencyCdeFrom_CRCD [CRCD]
frm_szSaveHoldOrdersCode_HOLD [HOLD]
frm_mnProcessID_PEID [PEID]
frm_mnTransactionID_TCID [TCID]
frm_cAddressBookConstant_EV01 [EV01]
frm_ManualOrderEntry [EV01]
frm_OriginalBP [MCU]
frm_KitLineNumber_LNID [LNID]
grd_cKitProcessed_EV01 [EV01]
frm_Hyperlink_HLNK [HLNK]
frm_szParentLineNumber_LNID [LNID]
frm_szIntegerLineNumber_LNID [LNID]
frm_szRowNumber_PLND [PLND]
frm_szUDCErrorMessageID_DTAI [DTAI]
frm_EditLineSucessful_EV01 [EV01]
grd_OldExtendedCost [AEXPE1]
grd_TempExtendedWeight_ITWT [ITWT]
grd_TempTransactionUOM_TRUM [TRUM]
grd_TempWeightUOM_WTUM [WTUM]
frm_TempUOMChangeFlag_EV01 [EV01]
grd_TempVolumeUOM_VLUM [VLUM]
grd_TempQtyOrdered_UORGE1 [UORGE1]
grd_PS09StatusFlag_PROV [PROV]
grd_ManualAdj_PS09 [PS09]
grd_DescriptionOverride_EV01 [EV01]
frm_cSendMethod_CRMD [CRMD]
frm_OKButtonClicked_EV01 [EV01]
grd_LineError [EV01]
frm_cItemRestrictions_EDF2 [EDF2]
frm_TempStockingType_STKT [STKT]
grd_TempPurchasingAdjSch_ASN [ASN]
frm_AssetErrorNumber_DTAI [DTAI]
frm_cPublishWarningFlag_EV01 [EV01]
frm_DtlSendMtdChanged_CRMD [CRMD]
frm_AcumulaITWTF4311 [ITWT]
frm_ITWTF4311 [ITWT]
frm_LNIDF4311 [LNID]
frm_NumerodaCarga [SHPN]
frm_RoutingStepNumberF4942 [RSSN]
frm_Primeira_Chamada [EV01]
frm_CMS_Flag [EV01]
frm_CMS_UniqueKey [UKID]
frm_szBPErrorMsgID_DTAI [DTAI]
frm_F41001Ptr_GENLNG [GENLNG]
frm_Add000DetailLine_EV01 [EV01]
frm_AlcadasCancelar [EV01]
frm_AlcadasContador [A1A]
frm_AlcadasDescDoc [DESC]
frm_AlcadasFornecedor [ALPH]
frm_AlcadasGridRows [A1A]
frm_AlcadasPayStatus [PST]
frm_AlcadasProcessIntance [PROCIST]
frm_AlcadasProcessName [PROCNAME]
frm_AlcadasProcessVersion [PROCVER]
frm_AlcadasProximoStatus [NXTR]
frm_AlcadasUDC [KY]
frm_AlcadasUltimoStatus [LTTR]
frm_AlcadasValorDoc [AA]
frm_ANCR [ANCR]
frm_COBR [SHAN]
frm_FRTH [FRTH]
frm_XRT2 [XRT2]
frm_AA18 [AA18]
frm_ADDR1 [ADD1]
frm_ADDR2 [ADD2]
frm_AddressLine1 [ADD1]
frm_CatalogExists [EV01]
frm_CATN [CATN]
frm_CO [CO]
frm_CTA13 [AA02]
frm_DTE [DTE]
frm_ERRO [EV01]
frm_ERRO_NO_OK [EV01]
frm_FRMP [FRMP]
frm_HoldPayment_HDPY [HDPY]
frm_INMG [INMG]
frm_ITM [ITM]
frm_KY [KY]
frm_LITM [LITM]
frm_LNID [LNID]
frm_PID [PID]
frm_PROJETO [AA04]
frm_RESTO_PROJRUBR [AA17]
frm_RT [RT]
frm_RUBRICA [AA04]
frm_SFXO [SFXO]
frm_SY [SY]
frm_TAM_GRID [MATH08]
frm_TME0 [TME0]
frm_VC01A [VC01A]
frm_CostCenterSubsequent [MCUS]
frm_OBJW [OBJ]
frm_SUBW [SUB]
frm_CompanyMCU [CO]
frm_AcctNoInputModeAux [ANI]
frm_CostCenterConta [MCU]
frm_CompanyConta [CO]
frm_ErrorGetRange [EV01]
frm_Conta_Esta_No_Interv [EV01]
frm_MCUW [MCU]
frm_COW [CO]
frm_CCODE20 [R020]
frm_Ev01_ItemNumber [EV01]
frm_acumlocalentrega [MATH01]
frm_PrimeiraVez [EV01]
frm_MathNumeric01 [MATH01]
frm_Identifier2ndItem [LITM]
frm_StatusCodeNext [NXTR]
frm_MenorLineNumber [LNID]
frm_LinhaGrid [MATH08]
frm_LocalEntrega [ADD1]
frm_UnitOfMeasurePurchas [UOM3]
frm_OrderSuffix [SFXO]
frm_RBSZeros_SFXO [SFXO]
frm_RBSLinhaLida_LNID [LNID]
frm_RBSFlagFaltaInfReg_EV01 [EV01]
frm_RBSNatOperacao_BNOP [BNOP]
frm_RBSSufixoNatOperacao_BSOP [BSOP]
frm_RBSClassifFiscal_BCLF [BCLF]
frm_RBSTaxICMSIPI_BCTF [BCTF]
frm_RBSSubstICMS_BIST [BIST]
frm_RBSUsoCompra_BORI [BORI]
frm_F5543ICO_ADDR1 [ADD1]
frm_F5543ICO_ADDR2 [ADD2]
frm_F5543ICO_COBR [SHAN]
frm_F4311_LNID [LNID]
frm_RBSSistUDC_SY [SY]
frm_RBSCodUDC_RT [RT]
frm_RBSKeyUDC_KY [KY]
frm_RBSRespFunc_RSPO [RSPO]
frm_F5543ICO_DS40 [DS40]
frm_FlagGravaF5543ICO [EV01]
frm_ProcessNameF5598010 [PROCNAME]
frm_AchouF5598010 [EV01]
frm_SY02 [SY]
frm_RTMB [RT]
frm_Descricao [DL02]
frm_Valida [SPHD]
frm_StartDate9 [STDATE]
frm_StartTime [STTME]
frm__SY [SY]
frm__RT [RT]
frm__KY [KY]
frm__HIS_OBS [CHIS]
frm__UDC_HIST_PADRAO [DL02]
frm_AUXObjectAccount_OBJ [OBJ]
frm_AUXSubsidiary_SUB [SUB]
frm_AUXCompany_CO [CO]
frm_HistoricoGCAA03 [AA03]
frm__AchouCerto [AA01]
frm_CompanyHIS [CO]
frm_SubsidiaryHIS [SUB]
frm_ExigeAA01 [AA01]
frm_HistoricoAA03 [AA03]
frm_ErroHistorico [AA01]
frm_COD_ERRO [AA05]
frm_ERRORBS [EV01]
frm_RBSCod_HistoricoAux_CHIS [CHIS]
frm_HIST4POS [EV01]
frm_RBS3PosRemark_AA03 [AA03]
frm_Cod_Historico [CHIS]
frm_F5543ICO_EXR [EXR]
frm_EXR [EXR]
frm_FlagSoConsulta_EV01 [EV01]
frm_FlagHistNaoCad_EV01 [EV01]
frm_ContaF4311_ANI [ANI]
frm_FlagHistoricoF5543ICO_EV01 [EV01]
frm_PeriodoF0010_PNC [PNC]
frm_F5543ICODescr4_DSCPED [DSCPED]
frm_SPHD [SPHD]
frm_StatusProjeto [AA01]
frm_HRDC [HRDC]
frm_COInvest [CO]
frm_NumeroInvestimento [N001]
frm_DTAI_F5543DOC [DTAI]
frm_CIA_DO_MCU_F0101 [KCOO]
frm_TAXC_F0101 [TAXC]
frm_MCU_F0101 [MCU]
frm_MDSCF5543ICO [MDSC]
frm_AccountId [AID]
frm_ContractNumberDistributi [DMCT]
frm_GRID_ContractNumberDistr [DMCT]
frm_CoPC [CO]
frm_McuPC [MCU]
frm_ObjPC [OBJ]
frm_SubPC [SUB]
frm_NroAlocacao [N001]
frm_CodErroAlocaoProjRubrica [DTAI]
frm_Local_Erro [UKERRO]
frm_ValorNaAlocacao [AEXPE1]
frm_Linha [MATH08]
frm_NroLinhasGrid [MATH08]
frm_Projeto [PROJE]
frm_Rubrica [RUBRI]
frm_ContaOBJ [OBJ]
frm_NivelValidacao [SPHD]
frm_ValorNoAID [AA]
frm_NroConta [ANI]
frm_ProjetoAux [PROJE]
frm_RubricaAux [RUBRI]
frm_ErroValidacaoOrcamento [DTAI]
frm_ValorRzContabilidade [AA]
frm_ValorSlContabilidade [AA]
frm_ValorCompras [AA]
frm_AnoMes [ANOMES]
frm_DtContabilAID [DGJ]
frm_DtContabilAux [DGJ]
frm_CtaS3 [AA03]
frm_Valida_Rubrica [E1C]
frm_Valida_RubricaTeste [AA14]
frm_AUX_FiliaFabrica_MCU [MCU]
frm_CodRT_FO [RT]
frm_CodSY_55 [SY]
frm_UF_ADDS [ADDS]
frm_IndBloqueioOrcamentario [R009]
frm_AccountId_Linha [AID]
frm_ErroOrcamentoCtasDespesa [DTAI]
frm_ValorTolerancia [AN01]
frm_RecargaSN_LOT2 [LOT2]
frm_CascoNaRbsSN_LOT3 [LOT3]
frm_F5543ICO_Recarga_BPRC [BPRC]
frm_F5543ICO_CascoRBS_ACFL [ACFL]
frm_SY_55 [SY]
frm_RT_F6 [RT]
frm_KY_CodFornec [KY]
frm_QTDnaRBS_F5541062_PQOH [PQOH]
frm_QTDnoFORN_F5541062_SQOH [SQOH]
frm_StringVIAGENS_ORTP [ORTP]
frm_IndicadorAceite [URCD]
frm_DataContabilLinha [DGJ]
frm_FlagCancelandoLinha_EV01 [EV01]
frm_ValorReducaoDespesas [AA]
frm_AddressNumber_F0006_AN8 [AN8]
frm_State_FILIA_ADDS [ADDS]
frm_State_FORNECEDOR_ADDS [ADDS]
frm_COD_FORNE_AN8 [AN8]
frm_CodFornecedor_AN8 [AN8]
frm_szVersao_AA12 [AA12]
frm_cFlag_NaturezaOperaca_EV01 [EV01]
frm_PrimPosRubricaLiberadaS [AA01]
frm_MenuIdentificatF0092_MNI [MNI]
frm_CustoUnitAux_PRRC [PRRC]
frm_NovoCustoCalc_PRRC [PRRC]
frm_RT_FS [RT]
frm_UDC_SY_55 [SY]
grd_TempTaxArea1_TXA1 [TXA1]
frm_BranchPlant_MCU [MCU]
grd_cLineError_EV01 [EV01]
frm_ItemNoUnknownFormat_UITM [UITM]
grd_mnPartsListOrderNum_DOCO [DOCO]
frm_szPoNumber_RORN [RORN]
frm_mnIdentifierShortItem_itm [ITM]
frm_ConfigurationIDNumber [CFGID]
frm_ComponentIDNumber [CFGCID]
frm_BlankStatus [EV01]
frm_ConfigErrorValue [DTAI]
frm_ItemNoUnknownFormat [UITM]
frm_FreeGoodExitEnabled_EV01 [EV01]
grd_FreeGoodExists_EV01 [EV01]
grd_FreeGoodCatalogName_CATLG [CATLG]
frm_PromotionsSystemFlag_PRSF [PRSF]
frm_DoNotCallTemplate [EV01]
frm_mnLagestMatrixLineNum_MCLN [MCLN]
frm_cProduct [MEOW]
frm_szMatrixLineErr_ERR [ERR]
frm_szMatrixCacheCursor_GENLNG [GENLNG]
frm_cAddOrUpdateMatrix_EV01 [EV01]
frm_szMatrixCacheJobNum_JOBS [JOBS]
frm_szComputerID_CTID [CTID]
frm_cMatrixUpdateType_EV01 [EV01]
frm_szMatrixErrorMessage_DTA1 [DTA1]
frm_mnMatrixQtyOrdered_UORG [UORG]
frm_mnCacheMatrixLine_MCLN [MCLN]
frm_mnGridRowCounter_MATH01 [MATH01]
frm_mnNoOfGridLines_MATH01 [MATH01]
frm_cMatrixQtyChanged_EV01 [EV01]
frm_szMatrixParent_ITM [ITM]
grd_szMatrixTemplate_TMPL [TMPL]
grd_cMatrixControlled_MIC [MIC]
grd_szMatrixSegment_SEG1 [SEG1]
grd_szMatrixBranchPlant_MCU [MCU]
frm_szMatrixComputerID_CTID [CTID]
frm_cProductVarianceFlag_MEOW [MEOW]
frm_szMatrixTemplate_TMPL [TMPL]
frm_szMatrixSegment_SEG1 [SEG1]
frm_cMatrixNotInCache_EV01 [EV01]
frm_szMatrixUoM_UOM [UOM]
grd_szRelatedOrderNumber_RORN [RORN]
grd_szRelatedOrderType_RCTO [RCTO]
frm_mnPurchaseOrderQty_QTY [QTY]
grd_mnComponentNumber_CPNB [CPNB]
grd_mnPartsListDocument_DOCO [DOCO]
grd_mnRelatedLineNo_RLLN [RLLN]
frm_cCancelledOut [EV01]
frm_AmountForeignExtCost [FEC]
frm_ConfigPrevValSet [EV01]
frm_P32942ConfigItemCall [EV01]
frm_szProjectError_ERRT [ERRT]
frm_cSkipEditLine_EV01 [EV01]
frm_mnMatrixQuantity_QTY [QTY]
frm_cConfirmCancel_EV01 [EV01]
frm_szHoldCodeType_CTYP [CTYP]
grd_OriginalOrderQty_UORG [UORG]
grd_StockingType_STKT [STKT]
grd_cPreservePOEManualAdj_EV01 [EV01]
grd_mnBlanketOrderNumber_DOCO [DOCO]
grd_cInventoryInterface_IVI [IVI]
grd_cExtCostContLogicRun_EV01 [EV01]
frm_cHeaderActionCode_EV01 [EV01]
frm_cLogsAtLevelsOn_EV01 [EV01]
frm_cCostCodeCacheLoaded_EV01 [EV01]
frm_iCostTypeCacheRecNo_INT01 [INT01]
frm_cMultipleAccountsWritten [EV01]
frm_szAccountDistributionText [ANI]
grd_MultipleAccounts_ANI [ANI]
grd_MultipleAccounts_OMCU [OMCU]
grd_MultipleAccounts_OBJ [OBJ]
grd_MultipleAccounts_SUB [SUB]
grd_MultipleAccounts_SBLT [SBLT]
grd_MultipleAccounts_SBL [SBL]
grd_cGridMultipleAccountExist [EV01]
frm_cTextAllowed_EV01 [EV01]
grd_F4311EditLineCalled_EV01 [EV01]
frm_cTabPage [EV01]
frm_PrevSuppNumber_AN8 [AN8]
frm_PrevShipToNumber_SHAN [SHAN]
frm_PrevCostRuleSelection_AN8 [AN8]
frm_PevCostRule_PDP5 [PDP5]
frm_cTriggerSupplierAdd [EV01]
grd_GLOffsetChgedManually_EV01 [EV01]
frm_cPricingOnOverridePrice [CP29]
grd_cManualOverride_MOADJ [MOADJ]
frm_cInInterfaceFlag_IVI [IVI]
frm_szErrorforProperties_DTAI [DTAI]
frm_cEvalReceiptsFrom0401_AVCH [AVCH]
grd_TempExtendedVolume_ITVL [ITVL]
frm_USGovernmentContractingUse [GCUSED]
frm_cRequestedDateChgd_EV01 [EV01]
frm_cPromisedDelDateChgd_EV01 [EV01]
frm_cPriceEffDateChgd_EV01 [EV01]
frm_cOTMInstalled_EV01 [EV01]
frm_szConcatLnty_DTAI [DTAI]
frm_szOTMErrorMsg_DTAI [DTAI]
frm_mnUniqueKeyID_UKID [UKID]
frm_szUniqueKeyID_PID [PID]
grd_PlannedEffectivityDate [DLEJ]
frm_EditItmMstrforNonStk_EV01 [EV01]
frm_CallAppFlag_EV01 [EV01]
frm_TaxArea_TXA1 [TXA1]
frm_TaxExplanationCode_EXR1 [EXR1]
frm_cApparelEnabled_EV01 [EV01]
frm_szStyleTemplate_C9MOSA [C9MOSA]
frm_cPCW10Mode [EV01]
frm_jdPriceEffectiveDate_PEFJ [PEFJ]
frm_cCollChangedInVA_EV01 [EV01]
frm_jdStyleCancelDate_CNDJ [CNDJ]
frm_jdStyleRequestedDate_DRQJ [DRQJ]
frm_jdPromDeliveryDate_PDDJ [PDDJ]
frm_jdStyleGLDate_DGL [DGL]
frm_cLoadGridFromPCW10_EV01 [EV01]
frm_szPrevCollection_C9COLL [C9COLL]
frm_szPrevSeasonCode_C9SEAC [C9SEAC]
frm_szPrevSeasonYear_C9SEAY [C9SEAY]
frm_QtyChanged_EV01 [EV01]
frm_Prev_ItemNumber [UITM]
grd_cUniCostContLogicRun_EV01 [EV01]
grd_cManualOverrideExtWt_EV01 [EV01]
grd_cManualOverrideExtVl_EV01 [EV01]
frm_AgreementModuleCalled [EV01]
frm_UnitPricePrev_PRRC [PRRC]
frm_modifiedUnitPrice_PRRC [PRRC]
frm_cPMPNInstalled_EV01 [EV01]
frm_szProductionNoFromWB_PMPN [PMPN]
grd_cProdNoChanged_EV01 [EV01]
frm_szErrorMessage_DTAI [DTAI]
frm_MIGR_LinhaF4311_SFXO [SFXO]
frm_F5543ICO1aCOT_FRRC [FRRC]
frm_DataAno [AA10]
frm_Asterisco [AA02]
frm_TpLinha1 [LNTY]
frm_TpLinha2 [LNTY]
frm_TpLinha3 [LNTY]
frm_TpLinha4 [LNTY]
frm_TpLinha5 [LNTY]
frm_VlrTotTpLinha2 [AEXPE1]
frm_VlrTotTpLinha3 [AEXPE1]
frm_VlrTotTpLinha4 [AEXPE1]
frm_VlrTotTpLinha5 [AEXPE1]
frm_VlrTotTpLinha1 [AEXPE1]
frm_Acao [ACTYP]
frm_VlrBlqTpLinha1 [AEXPE1]
frm_VlrBlqTpLinha2 [AEXPE1]
frm_VlrBlqTpLinha3 [AEXPE1]
frm_VlrBlqTpLinha4 [AEXPE1]
frm_VlrBlqTpLinha5 [AEXPE1]
frm_VlrTotTpLinha [AEXPE1]
frm_VlrBlqTpLinha [AEXPE1]
frm_VlrLibTpLinha [AEXPE1]
frm_VlrLibTpLinha1 [AEXPE1]
frm_VlrLibTpLinha2 [AEXPE1]
frm_VlrLibTpLinha3 [AEXPE1]
frm_VlrLibTpLinha4 [AEXPE1]
frm_VlrLibTpLinha5 [AEXPE1]
frm_RBS_IndCtaInvstmntos [R020]
frm_RBS_ContaID [AID]
frm_RBS_NroAlocacao [N001]
frm_RBS_Projeto [PROJE]
frm_RBS_Rubrica [RUBRI]
frm_RBS_DataContabil [AA10]
frm_RBS_ProjetoAux [PROJE]
frm_RBS_RubricaAux [RUBRI]
frm_GridMax [MATH08]
frm_NroLinha [MATH08]
frm_DescricaoCompras [DS02]
frm_DescricaoFamComp [DSE2]
frm_ValorOrcamento [PRRC]
frm_EnviaEmail [EV01]
frm_Email [EMAL]
frm_szItem_UITM [UITM]
frm_szSupplementalDatabase_SDB [SDB]
frm_szTypeofData_TYDT [TYDT]
frm_TpCadastroAT1 [AT1]
frm_szNameRemark_RMK [RMK]
frm_szAddressType1_AT1 [AT1]
frm_cAvisoDIFAL_EV01 [EV01]
frm_cSuprimentos [EV01]

=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Change Order
Event: Col Exited & Changed - Inline
Event GUID: 5ef15c5a-e064-11d1-9ac9-00600832fe19
=============================================
If GC Change Order [SFXO] is not equal to <Blank>
     GC Change Order [SFXO] = lpad([GC Change Order [SFXO]], "0", "3")
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Item Number
Event: Visual Assist Button Clicked
Event GUID: 44defb60-f751-4bb9-aebb-9de2963a40fa
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cFirstCharOfItem_EV01 [EV01]
evt_szTemplate_C9MOSA [C9MOSA]
evt_szBranchPlant_MCU [MCU]
evt_mnItemNumber [ITM]
evt_sz2ndItemNumber_LITM [LITM]
evt_sz3rdItemNumber_AITM [AITM]
----------------------------------------
// SAR 8956903 - Apparel Management
Suppress Default Visual Assist Form
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     VA evt_cFirstCharOfItem_EV01 [EV01] = substr([GC Item Number [UITM]], "0", "1")
     If PO cDisplayPCW10 [EV01] is greater than <Blank>
     And PO cCollectionTemplatePrefix [C9MACO] is greater than <Blank>
     And VA evt_cFirstCharOfItem_EV01 [EV01] is equal to PO cCollectionTemplatePrefix [C9MACO]
          Suppress Default Visual Assist Form
          Call App:PCW43 Form:WCW43A Version:Undefined
               VA evt_szTemplate_C9MOSA [C9MOSA] <- szC9MOSA-Collection_Modele [C9MOSA]
          // Add prefix to returned template
          GC Item Number [UITM] = concat([VA evt_cFirstCharOfItem_EV01 [EV01]], [VA evt_szTemplate_C9MOSA [C9MOSA]])
     Else
          If FC Collection [C9COLL] is greater than <Blank>
          Or FC SeasonCode [C9SEAC] is greater than <Blank>
          Or FC Season Year [C9SEAY] is greater than <Blank>
               Suppress Default Visual Assist Form
               Call App:PCW41011 Form:WCW41011C Version:Undefined
                    GC Item Number [UITM] <- szItemNoUnknownFormat [UITM]
                    FC Collection [C9COLL] -> szCollection_FCW07 [C9COLL]
                    FC SeasonCode [C9SEAC] -> szSeason_FCW07 [C9SEAC]
                    FC Season Year [C9SEAY] -> szSeason_Year_FCW07 [C9SEAY]
          Else
               If PO cStyleItemSearchType [EV01] is greater than <Blank>
                    Suppress Default Visual Assist Form
                    Call App:PCW41011 Form:WCW41011A Version:Undefined
                         VA evt_mnItemNumber [ITM] <- mnIdentifierShortItem [ITM]
                    If VA evt_mnItemNumber [ITM] is greater than "0"
                         If GC Branch/ Plant [MCU] is greater than <Blank>
                              VA evt_szBranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
                         Else
                              VA evt_szBranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
                         End If
                         // Determine the Primay Item Number
                         GetItemMasterByShortItem(X4101.GetItemMasterByShortItem)
                              VA evt_mnItemNumber [ITM] -> mnShortItemNumber [ITM]
                              VA evt_sz2ndItemNumber_LITM [LITM] <- sz2ndItemNumber [LITM]
                              VA evt_sz3rdItemNumber_AITM [AITM] <- sz3rdItemNumber [AITM]
                         ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                              VA evt_mnItemNumber [ITM] -> mnShortItemNumber [ITM]
                              VA evt_sz2ndItemNumber_LITM [LITM] -> sz2ndItemNumber [LITM]
                              VA evt_sz3rdItemNumber_AITM [AITM] -> sz3rdItemNumber [AITM]
                              VA evt_szBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
                              GC Item Number [UITM] <- szPrimaryItemNumber [UITM]
                    End If
               End If
          End If
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/07/19 - Inicio
     // Fornecedor x Item
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Call App:P5543101 Form:W5543101E Version:Undefined
          VA frm_szItem_UITM [UITM] <> sz2nd_ItemNumber [LITM]
     GC Item Number [UITM] = VA frm_szItem_UITM [UITM]
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/07/19 - Fim
     // Fornecedor x Item
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Item Number
Event: Col is Exited
Event GUID: 70034a51-d141-42c6-90fa-45a3b6d594e5
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSupplementalDatabase_SDB [SDB]
evt_szTypeofData_TYDT [TYDT]
evt_szLineType_LNTY [LNTY]
evt_szProductCode_SY [SY]
evt_szUserDefinedCodes_RT [RT]
evt_szUserDefinedCode_KY [KY]
evt_szErro_DTAI [DTAI]
evt_szMensagem_DL01 [DL01]
----------------------------------------
// ===========================================================
// AP1182 por Gindri em 25/11/99
// Objetiva proteger os campos descrição 1 e 2
// da tela W4310A - Detalhes do Pedido.
// ===========================================================
VA frm_Ev01_ItemNumber [EV01] = "0"
If PO szLineType [LNTY] is not equal to "S"
And PO szLineType [LNTY] is not equal to "B"
     If GC Item Number [UITM] is less than or equal to <Blank>
          VA frm_Ev01_ItemNumber [EV01] = "1"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "4750")
          GC Description 1 [DSC1] = <NULL>
     Else
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber)
          // -----------------------------------------------------------------------------
          // ISSUE 5463 - Marília - Quando PO Viagens, Descrição 1(DSC1) da F4101
          If PO OpcaoViagens [EV01] is equal to "1"
               F4101.FetchSingle  [Index 2: 2nd Item Number]
                    GC Item Number [UITM] = TK 2nd Item Number [LITM]
                    GC Description 1 [DSC1] <- TK Description [DSC1]
               // ======================== Marília -  15/12/09
               If GC Cancel Date [CNDJ] is equal to Null Date
                    VA frm_StringVIAGENS_ORTP [ORTP] = "VIAGENS"
                    F4015.Select  [Index 1: Order Template, Address Number]
                         VA frm_StringVIAGENS_ORTP [ORTP] = TK Order Template [ORTP]
                         FC Address Number [AN8] = TK Address Number [AN8]
                         GC Item Number [UITM] = TK 2nd Item Number [LITM]
                    F4015.FetchNext  [Index 1: Order Template, Address Number]
                         VA frm_StringVIAGENS_ORTP [ORTP] <- TK Order Template [ORTP]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
                    End If
               End If
               //
               // ======================== Marília -  15/12/09
          Else
               // -----------------------------------------------------------------------------
               If GC Description 1 [DSC1] is equal to <Blank>
               Or GC Description 1 [DSC1] is equal to <NULL>
                    GC Description 1 [DSC1] = GC Item Number [UITM]
               End If
          End If
     End If
End If
//
// ========= ISSUE 5820 - RBS- VALKIRIA - ABR/03 ============
//       DESABILITADO ATÉ SEGUNDA ORDEM 09/04/03
// ISSUE 5820 - Marília -Habilitado novamente c/ajuste na limpeza linha corrente
//                                  -e não consiste linhas que foram canceladas
// ====================================================
// --- Dionatan -- Chamado 1711602 - Permitir itens Repetidos Catalogo
! If PO OpcaoCatalogo [EV01] is equal to "1"
! And GC Cancel Date [CNDJ] is equal to Null Date
     ! Clear Grid Cell Error(FC Grid,  <All Rows>, GC ItemNumber)
     ! Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber)
     ! VA frm_Identifier2ndItem [LITM] = GC Item Number [UITM]
     ! VA frm_TAM_GRID [MATH08] = "0"
     ! Get Selected Grid Row Number(FC Grid, VA frm_mnCurrentGridRow)
     ! Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
     ! VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
     ! While VA frm_TAM_GRID [MATH08] is greater than "0"
          ! Get Grid Row(FC Grid, VA frm_TAM_GRID)
          ! If VA frm_TAM_GRID [MATH08] is equal to VA frm_mnCurrentGridRow [MATH01]
          ! OrVA frm_Identifier2ndItem [LITM] is equal to <Blank>
          ! Else
               ! If VA frm_Identifier2ndItem [LITM] is equal to GC Item Number [UITM]
               ! And GC Cancel Date [CNDJ] is equal to Null Date
                    ! VA frm_TAM_GRID [MATH08] = "0"
                    ! Set Grid Cell Error(FC Grid, VA frm_mnCurrentGridRow, GC ItemNumber, "2669")
               ! End If
          ! End If
          ! VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
     ! End While
! End If
// ---Fim - Dionatan -- Chamado 1711602 - Permitir itens Repetidos Catalogo
//
// =====
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// Se for Cartões de Visitas - Recebe os Valores e Trava os Campos
If PO CartoesVisita [EV01] is equal to "S"
     If GC Item Number [UITM] is not equal to <NULL>
          GC Unit Cost [UPAX] = <Blank>
          GC Quantity Ordered [UORGE1] = PO mnQuantidadeCartaoVisita_UORG [UORG]
          GC Extended Cost [AEXPE1] = PO mnValorCartaoVisita_UPAX [UPAX]
          GC Unit Cost [UPAX] = [GC Extended Cost [AEXPE1]]/[GC Quantity Ordered [UORGE1]]
          //
          Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedCost)
          Disable Grid(FC Grid, <Currently Selected Row>, GC UnitCost)
     End If
End If
// # FIM Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// =====
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/07/19 - Inicio
     // Fornecedor x Item
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     ! If GC Item Number [UITM] is not equal to <Blank>
     ! And GC Item Number [UITM] is not equal to <NULL>
          ! VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
          ! VA evt_szTypeofData_TYDT [TYDT] = "SE"
          ! V554310A.Select
          !      GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
          !      VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
          !      VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
          ! V554310A.FetchNext
          !      VA evt_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
          !      VA evt_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
          ! If SV File_IO_Status is not equal to CO SUCCESS
               ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
          ! Else
               ! F4101.FetchSingle  [Index 2: 2nd Item Number]
               !      GC Item Number [UITM] = TK 2nd Item Number [LITM]
               !      GC Description 1 [DSC1] <- TK Description [DSC1]
               ! Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
               ! Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
               ! Disable Grid(FC Grid,  <Currently Selected Row>, GC LnTy)
          ! End If
          ! VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
     ! End If
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          GC Short Item No [ITM] <- TK Item Number - Short [ITM]
          GC Item Number [UITM] = TK 2nd Item Number [LITM]
          GC Description 1 [DSC1] <- TK Description [DSC1]
          GC Description 2 [DSC2] <- TK Description - Line 2 [DSC2]
          VA evt_szLineType_LNTY [LNTY] <- TK Line Type [LNTY]
     GC Ln Ty [LNTY] = VA evt_szLineType_LNTY [LNTY]
     If VA evt_szLineType_LNTY [LNTY] is equal to "J"
          If GC Item Number [UITM] is not equal to <Blank>
          And GC Item Number [UITM] is not equal to <NULL>
               VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
               VA evt_szTypeofData_TYDT [TYDT] = "SE"
               V554310A.Select
                    GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                    VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                    VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
               V554310A.FetchNext
                    VA evt_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                    VA evt_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
               If SV File_IO_Status is not equal to CO SUCCESS
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
               Else
                    F4101.FetchSingle  [Index 2: 2nd Item Number]
                         GC Item Number [UITM] = TK 2nd Item Number [LITM]
                         GC Description 1 [DSC1] <- TK Description [DSC1]
                    Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
               End If
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               If PO cSoFornecedorItem [EV01] is equal to "S"
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
                    VA evt_szTypeofData_TYDT [TYDT] = "FI"
                    V554310A.Select
                         GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                         FC Long Address Number_ALKY [ALKY] = TK Name - Remark [RMK2][F00092.0]
                         VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                         VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
                    V554310A.FetchNext
                         VA evt_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                         VA evt_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E55XML01")
                    Else
                         F4101.FetchSingle  [Index 2: 2nd Item Number]
                              GC Item Number [UITM] = TK 2nd Item Number [LITM]
                              GC Description 1 [DSC1] <- TK Description [DSC1]
                         Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
                    End If
               End If
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
          End If
     Else
          If GC Item Number [UITM] is not equal to <Blank>
          And GC Item Number [UITM] is not equal to <NULL>
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               If PO cSoFornecedorItem [EV01] is equal to "S"
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
                    VA evt_szTypeofData_TYDT [TYDT] = "FI"
                    V554310A.Select
                         GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                         FC Long Address Number_ALKY [ALKY] = TK Name - Remark [RMK2][F00092.0]
                         VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                         VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
                    V554310A.FetchNext
                         VA evt_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                         VA evt_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E55XML01")
                    Else
                         F4101.FetchSingle  [Index 2: 2nd Item Number]
                              GC Item Number [UITM] = TK 2nd Item Number [LITM]
                              GC Description 1 [DSC1] <- TK Description [DSC1]
                         Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
                    End If
               End If
               VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
          End If
     End If
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/07/19 - Fim
     // Fornecedor x Item
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Item Number
Event: Col Exited & Changed - Inline
Event GUID: 872cd121-bf52-4477-a4c3-759c1be86ec2
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_nItemLength_INT01 [INT01]
evt_cFirstCharOfItem_EV01 [EV01]
evt_szBranchPlant_MCU [MCU]
----------------------------------------
VA frm_P32942ConfigItemCall [EV01] = "0"
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     If PO cDisplayPCW10 [EV01] is greater than <Blank>
          If PO cCollectionTemplatePrefix [C9MACO] is greater than <Blank>
               VA evt_cFirstCharOfItem_EV01 [EV01] = substr([GC Item Number [UITM]], "0", "1")
               If VA evt_cFirstCharOfItem_EV01 [EV01] is equal to PO cCollectionTemplatePrefix [C9MACO]
                    VA evt_nItemLength_INT01 [INT01] = length([GC Item Number [UITM]])
                    If VA evt_nItemLength_INT01 [INT01] is equal to "1"
                         Call App:PCW43 Form:WCW43A Version:Undefined
                              VA frm_szStyleTemplate_C9MOSA [C9MOSA] <- szC9MOSA-Collection_Modele [C9MOSA]
                    Else
                         VA frm_szStyleTemplate_C9MOSA [C9MOSA] = substr([GC Item Number [UITM]], "1", "10")
                    End If
                    VA frm_cPCW10Mode [EV01] = "2"
                    Press Button(FC Invoke Style Item Matrix Entry)
               End If
          End If
          VA frm_cPCW10Mode [EV01] = "1"
          Press Button(FC Invoke Style Item Matrix Entry)
     End If
End If
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If GC Item Number [UITM] is not equal to <Blank>
     And GC Item Number [UITM] is not equal to <NULL>
          VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Descrição Família Compras
Event: Col Exited & Changed - Inline
Event GUID: eb583f6b-1f98-42c4-8197-48007ac8a35f
=============================================
If PO szOrderType [DCT] is equal to ("OF","OM")
     If GC Descrição Família Compras [DSE2] is equal to or empty <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC DescriçãoFamília Compras, "57OB")
     Else
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC DescriçãoFamília Compras)
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Quantity Ordered
Event: Col Exited & Changed - Inline
Event GUID: 380d4870-4975-4e97-9e2c-55f6243f9319
=============================================
VA frm_P32942ConfigItemCall [EV01] = "0"

=============================================
Form: Order Detail - W4310A
Object: GC Quantity Ordered
Event: Col Exited & Changed - Asynch
Event GUID: 7308a963-bb03-4128-b313-e6c9d3454f68
=============================================
// Begin SAR 8943681
VA frm_QtyChanged_EV01 [EV01] = "1"
GC Extended Weight [ITWT] = "0"
// End SAR 8943681
// Begin SAR 11051893
// The Flag Price override will be set as 1 on changing Quantity Ordered in
// when the UDC 38/AP has no value as 'AP' and agreement number is not blank
// or null. This is to consider quantity ordered as critical field for
// Agreement processing.
If GC ACTN:Action Code (wf) [ACTN] is equal to "C"
And GC Objeto de Custo 1 [DMCT] is not equal to <Blank>
And GC Objeto de Custo 1 [DMCT] is not equal to <NULL>
     GetUDC(X0005.GetUDC)
          "38" -> szSystemCode [SY]
          "AP" -> szRecordTypeCode [RT]
          "AP" -> szUserDefinedCode [KY]
          "10.00" -> mnKeyFieldLength [AS]
          "1" -> cSuppressErrorMessage [EV01]
     If SV Error_Status is not equal to CO SUCCESS
          GC PROV:Price Override - (wf) [PROV] = "1"
     Else
          GC PROV:Price Override - (wf) [PROV] = <Blank>
     End If
End If
// End SAR 11051893


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Tr. UoM
Event: Visual Assist Button Clicked
Event GUID: fe46ea47-9eeb-11d4-a5e6-000629ae6f6f
=============================================
// SAR 4541980 Begins
// OTC:Modify POE for UOM Lookup
// SAR 7911229 Start  - To display 00/UM for J Line Type entries
VA frm_cInInterfaceFlag_IVI [IVI] = <NULL>
// Begin SAR # 8947086
! If GC Ln Ty [LNTY] is not equal to <Blank>
! And GC Ln Ty [LNTY] is not equal to <NULL>
     ! GetLineTypeConstants(B4000260.GetLineTypeConstants)
     !      GC Ln Ty [LNTY] -> szLineType [LNTY]
     !      VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
     !      VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
     !      "1" -> cSuppressErrorMessage [EV01]
! End If
If GC Ln Ty [LNTY] is not equal to <Blank>
And GC Ln Ty [LNTY] is not equal to <NULL>
     GetLineTypeConstants(B4000260.GetLineTypeConstants)
          GC Ln Ty [LNTY] -> szLineType [LNTY]
          VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
          VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
          "1" -> cSuppressErrorMessage [EV01]
Else
     If PO szLineType [LNTY] is not equal to <Blank>
     And PO szLineType [LNTY] is not equal to <NULL>
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               PO szLineType [LNTY] -> szLineType [LNTY]
               VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
               VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
// End SAR # 8947086
// SAR 8832910 - Added a condition to check for Inventory interface N
If VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "A"
And VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "N"
     VA frm_CallAppFlag_EV01 [EV01] = "1"
Else
     If VA frm_cInInterfaceFlag_IVI [IVI] is equal to "N"
     And VA frm_EditItmMstrforNonStk_EV01 [EV01] is equal to "1"
          VA frm_CallAppFlag_EV01 [EV01] = "1"
     End If
End If
// SAR 7911229 End
If VA frm_CallAppFlag_EV01 [EV01] is equal to "1"
     If GC Item Number [UITM] is not equal to <Blank>
     And GC Item Number [UITM] is not equal to <NULL>
     And GC Item Number [UITM] is not equal to "0"
          If GC Branch/ Plant [MCU] is not equal to <Blank>
          And GC Branch/ Plant [MCU] is not equal to <NULL>
          And GC Branch/ Plant [MCU] is not equal to "0"
               VA frm_BranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
          Else
               // SAR 7766754 BEGIN
               VA frm_BranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
               // SAR 7766754 END
          End If
          // BUG 13092595 -  Modal Search and Select Clean Up
          Suppress Default Visual Assist Form
          Call App:P40100 Form:W40100A Version: 
               VA frm_BranchPlant_MCU [MCU] -> szCostCenter [MCU]
               GC Tr. UoM [UOM] <> szUnitOfMeasure [UM]
               "2" -> cExcludeFlag [EV01]
               GC Item Number [UITM] -> ItemNumber [UITM]
          // SAR 7147216
     End If
     // SAR 4541980 Ends
End If

=============================================
Form: Order Detail - W4310A
Object: GC Tr. UoM
Event: Col Exited & Changed - Inline
Event GUID: 098c6fea-c965-4c74-a358-03719842450b
=============================================
VA frm_P32942ConfigItemCall [EV01] = "0"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Unit Cost
Event: Col Exited & Changed - Asynch
Event GUID: f57df412-a23a-11d0-a204-0000f6728a56
=============================================
//
// ---------------------------------------------------------------------------
//     If the price is manually changed, then set on the price override flag
// ---------------------------------------------------------------------------
//
//
If GC Unit Cost [UPAX] is not equal to GC PRRCE1:Old Unit Price (wf) [PRRCE1]
     If GC Unit Cost [UPAX] is not equal to "0"
          GC PROV:Price Override - (wf) [PROV] = "1"
          // SAR 7801302
          If VA frm_cPricingOnOverridePrice [CP29] is equal to ("1","Y")
               VA grd_cManualOverride_MOADJ [MOADJ] = "2"
          Else
               VA grd_cManualOverride_MOADJ [MOADJ] = "0"
               // SAR#4313485
               VA grd_AREV_AdjRevisionLevel [AREV] = [VA grd_AREV_AdjRevisionLevel [AREV]]+1
          End If
          //
     Else
          // SAR#8584469 - Begin
          // Deleted the below code as there is no significance of
          // it, once the PROV flag is set to 1 then don't reassign it to BLANK.
          ! GC PROV:Price Override - (wf) [PROV] = <Blank>
          // SAR#8584469 - End
          VA grd_PS09StatusFlag_PROV [PROV] = <Blank>
          // SAR 7801302
          If VA frm_cPricingOnOverridePrice [CP29] is equal to ("1","Y")
               VA grd_cManualOverride_MOADJ [MOADJ] = "0"
          End If
          //
          // ---------------------------------------------------------------------------
          // Pass a '9' in the PS09 flag to indicate that line should be reprice
          // and not preserve any previous manaul adjustments.
          // ---------------------------------------------------------------------------
          //
          If GC Extended Cost [AEXPE1] is equal to "0"
               //
               // SAR 5952246 Preserve POE Manual Adj
               VA grd_cPreservePOEManualAdj_EV01 [EV01] = "1"
          End If
     End If
End If
//
GC PRRCE1:Old Unit Price (wf) [PRRCE1] = GC Unit Cost [UPAX]
//
// Begin SAR 11051893
VA grd_cUniCostContLogicRun_EV01 [EV01] = "1"
// End SAR 11051893
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Extended Cost
Event: Col Exited & Changed - Asynch
Event GUID: 9f9f48f7-3e4a-11d4-97ae-00003910070e
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cMatchType1_MATC [MATC]
evt_cMatchType2_MATC [MATC]
evt_szWrittenBy_RTBY [RTBY]
evt_mnAmountPaidToDate_APTD [APTD]
evt_mnAmountForeignPaidTd_FAPT [FAPT]
evt_mnAmountReceived_AREC [AREC]
evt_mnAmountRecvedForeign_FREC [FREC]
evt_mnAmountOpen_AOPN [AOPN]
evt_mnTotalAmountOpen_AOPN [AOPN]
evt_mnAmountForeignOpen_FAP [FAP]
evt_mnTotAmountForeignOpen_FAP [FAP]
----------------------------------------
// SAR 7189184
// SAR 7557311 Begin
! If SV Form_ Mode is equal to CO UPDATE_MODE
! And GC Extended Cost [AEXPE1] is less than VA grd_OldExtendedCost [AEXPE1]
! And GC Extended Cost [AEXPE1] is less than GC Amount Received [AREC]
! And GC Amount Open [AOPN] is not equal to "0"
     ! Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ExtendedCost, "43PV")
! End If
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA evt_cMatchType2_MATC [MATC] = "2"
     F43121.FetchSingle  [Index 1: Order Number, Order Type, +]
          VA evt_cMatchType2_MATC [MATC] = TK Type - Match Record Type [MATC]
          GC KCOO:Order Company (wf) [KCOO] = TK Order Company (Order Number) [KCOO]
          FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          GC DCTO:Order Type (wf) [DCTO] = TK Order Type [DCTO]
          GC Change Order [SFXO] = TK Order Suffix [SFXO]
          GC Line Number [LNID] = TK Line Number [LNID]
          VA evt_szWrittenBy_RTBY [RTBY] <- TK Written By Program [RTBY]
     // Succes of fetch single indicates that VM has been performed.
     If SV File_IO_Status is equal to CO SUCCESS
          // Indicating 2 way VM
          If VA evt_szWrittenBy_RTBY [RTBY] is equal to "02"
               // if 2 way , retrieve from purchase order details
               RetrievePurchaseOrderDetails(B4305210.RetrievePurchaseOrderDetails)
                    FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    GC DCTO:Order Type (wf) [DCTO] -> szOrderType [DCTO]
                    GC KCOO:Order Company (wf) [KCOO] -> szOrderCompany [KCOO]
                    GC Change Order [SFXO] -> szOrderSuffix [SFXO]
                    GC Line Number [LNID] -> mnLineNumber [LNID]
                    VA evt_mnTotalAmountOpen_AOPN [AOPN] <- mnAmountOpen [AOPN]
                    VA evt_mnAmountReceived_AREC [AREC] <- mnAmountReceived [AREC]
                    VA evt_mnAmountRecvedForeign_FREC [FREC] <- mnAmountReceivedForeign [FREC]
                    VA evt_mnTotAmountForeignOpen_FAP [FAP] <- mnAmountForeignOpen [FAP]
          Else
               // indicating 3 way
               If VA evt_szWrittenBy_RTBY [RTBY] is equal to <Blank>
                    VA evt_cMatchType1_MATC [MATC] = "1"
                    F43121.Select  [Index 1: Order Number, Order Type, +]
                         VA evt_cMatchType1_MATC [MATC] = TK Type - Match Record Type [MATC]
                         GC KCOO:Order Company (wf) [KCOO] = TK Order Company (Order Number) [KCOO]
                         FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                         GC DCTO:Order Type (wf) [DCTO] = TK Order Type [DCTO]
                         GC Change Order [SFXO] = TK Order Suffix [SFXO]
                         GC Line Number [LNID] = TK Line Number [LNID]
                    F43121.FetchNext  [Index 1: Order Number, Order Type, +]
                         VA evt_mnAmountPaidToDate_APTD [APTD] <- TK Amount - Paid to Date [APTD]
                         VA evt_mnTotalAmountOpen_AOPN [AOPN] <- TK Amount - Open [AOPN]
                         VA evt_mnTotAmountForeignOpen_FAP [FAP] <- TK Amount - Foreign Open [FAP]
                         VA evt_mnAmountForeignPaidTd_FAPT [FAPT] <- TK Amount - Foreign Amount Paid to Date [FAPT]
                    // While loop is introduced to take care of partial receipts
                    While SV File_IO_Status is equal to CO SUCCESS
                         VA evt_mnAmountReceived_AREC [AREC] = [VA evt_mnAmountPaidToDate_APTD [APTD]]+[VA evt_mnAmountReceived_AREC [AREC]]
                         VA evt_mnAmountRecvedForeign_FREC [FREC] = [VA evt_mnAmountForeignPaidTd_FAPT [FAPT]]+[VA evt_mnAmountRecvedForeign_FREC [FREC]]
                         VA evt_mnTotAmountForeignOpen_FAP [FAP] = [VA evt_mnAmountForeignOpen_FAP [FAP]]+[VA evt_mnTotAmountForeignOpen_FAP [FAP]]
                         VA evt_mnTotalAmountOpen_AOPN [AOPN] = [VA evt_mnAmountOpen_AOPN [AOPN]]+[VA evt_mnTotalAmountOpen_AOPN [AOPN]]
                         F43121.FetchNext  [Index 1: Order Number, Order Type, +]
                              VA evt_mnAmountPaidToDate_APTD [APTD] <- TK Amount - Paid to Date [APTD]
                              VA evt_mnAmountOpen_AOPN [AOPN] <- TK Amount - Open [AOPN]
                              VA evt_mnAmountForeignOpen_FAP [FAP] <- TK Amount - Foreign Open [FAP]
                              VA evt_mnAmountForeignPaidTd_FAPT [FAPT] <- TK Amount - Foreign Amount Paid to Date [FAPT]
                    End While
               End If
          End If
          If FC Foreign [CRRM] is equal to "F"
               If GC Extended Cost [AEXPE1] is less than VA grd_OldExtendedCost [AEXPE1]
               And GC Extended Cost [AEXPE1] is less than VA evt_mnAmountRecvedForeign_FREC [FREC]
               And VA evt_mnTotAmountForeignOpen_FAP [FAP] is not equal to "0"
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ExtendedCost, "43PV")
               End If
          Else
               If GC Extended Cost [AEXPE1] is less than VA grd_OldExtendedCost [AEXPE1]
               And GC Extended Cost [AEXPE1] is less than VA evt_mnAmountReceived_AREC [AREC]
               And VA evt_mnTotalAmountOpen_AOPN [AOPN] is not equal to "0"
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ExtendedCost, "43PV")
               End If
          End If
     End If
End If
// 7557311 End
// Begin SAR #4260951
If GC Extended Cost [AEXPE1] is not equal to GC TOT1:Previous Line Total(wf) [TOT1]
     If GC Extended Cost [AEXPE1] is not equal to "0"
          GC PROV:Price Override - (wf) [PROV] = "1"
          // 
          // SAR 7801302
          If VA frm_cPricingOnOverridePrice [CP29] is equal to ("1","Y")
               VA grd_cManualOverride_MOADJ [MOADJ] = "2"
          Else
               VA grd_cManualOverride_MOADJ [MOADJ] = "0"
               // SAR#4313485
               VA grd_AREV_AdjRevisionLevel [AREV] = [VA grd_AREV_AdjRevisionLevel [AREV]]+1
          End If
     Else
          // SAR#8584469 - Begin 
          // Deleted the below code as there is no significance of
          // it, once the PROV flag is set to 1 then don't reassign it to BLANK. 
          ! GC PROV:Price Override - (wf) [PROV] = <Blank>
          // SAR#8584469 - End
          VA grd_PS09StatusFlag_PROV [PROV] = <Blank>
          // 
          // SAR 7801302
          If VA frm_cPricingOnOverridePrice [CP29] is equal to ("1","Y")
               VA grd_cManualOverride_MOADJ [MOADJ] = "0"
          End If
          // ---------------------------------------------------------------------------
          // Pass a '9' in the PS09 flag to indicate that line should be reprice
          // and not preserve any previous manaul adjustments.
          // ---------------------------------------------------------------------------
          // 
          If GC Unit Cost [UPAX] is equal to "0"
               // SAR 5952246 Preserve POE Manual Adjustments
               VA grd_cPreservePOEManualAdj_EV01 [EV01] = "1"
          End If
     End If
End If
// End SAR #4260951
// SAR 6386830 Begin
VA grd_cExtCostContLogicRun_EV01 [EV01] = "1"
// SAR 6386830 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Pu. UoM
Event: Visual Assist Button Clicked
Event GUID: fe46ea48-9eeb-11d4-a5e6-000629ae6f6f
=============================================
// SAR 4541980 Begins
// OTC:Modify POE for UOM Lookup
// SAR 7911229 start - To display 00/UM for J LnTy entries
//
VA frm_cInInterfaceFlag_IVI [IVI] = <NULL>
// Retrieve the Inventory interface for the passed in LnTy
// Begin SAR # 8947086
! If GC Ln Ty [LNTY] is not equal to <Blank>
! And GC Ln Ty [LNTY] is not equal to <NULL>
     ! GetLineTypeConstants(B4000260.GetLineTypeConstants)
     !      GC Ln Ty [LNTY] -> szLineType [LNTY]
     !      VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
     !      VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
     !      "1" -> cSuppressErrorMessage [EV01]
! End If
If GC Ln Ty [LNTY] is not equal to <Blank>
And GC Ln Ty [LNTY] is not equal to <NULL>
     GetLineTypeConstants(B4000260.GetLineTypeConstants)
          GC Ln Ty [LNTY] -> szLineType [LNTY]
          VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
          VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
          "1" -> cSuppressErrorMessage [EV01]
Else
     If PO szLineType [LNTY] is not equal to <Blank>
     And PO szLineType [LNTY] is not equal to <NULL>
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               PO szLineType [LNTY] -> szLineType [LNTY]
               VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
               VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
// End SAR # 8947086
// SAR 8832910 - Added a condition to check for Inventory interface N
If VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "A"
And VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "N"
     VA frm_CallAppFlag_EV01 [EV01] = "1"
Else
     If VA frm_cInInterfaceFlag_IVI [IVI] is equal to "N"
     And VA frm_EditItmMstrforNonStk_EV01 [EV01] is equal to "1"
          VA frm_CallAppFlag_EV01 [EV01] = "1"
     End If
End If
If VA frm_CallAppFlag_EV01 [EV01] is equal to "1"
     // SAR 7911229 end
     If GC Item Number [UITM] is not equal to <Blank>
     And GC Item Number [UITM] is not equal to <NULL>
     And GC Item Number [UITM] is not equal to "0"
          If GC Branch/ Plant [MCU] is not equal to <Blank>
          And GC Branch/ Plant [MCU] is not equal to <NULL>
               VA frm_BranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
          Else
               VA frm_BranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
          End If
          // BUG 13092595 -  Modal Search and Select Clean Up
          Suppress Default Visual Assist Form
          Call App:P40100 Form:W40100A Version: 
               VA frm_BranchPlant_MCU [MCU] -> szCostCenter [MCU]
               GC Pu. UoM [UOM3] <> szUnitOfMeasure [UM]
               "2" -> cExcludeFlag [EV01]
               GC Item Number [UITM] -> ItemNumber [UITM]
          // SAR 7147216
     End If
     // SAR 4541980 Ends
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Ln Ty
Event: Visual Assist Button Clicked
Event GUID: 62fabcce-6903-4401-935f-69a8fdd54745
=============================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     Suppress Default Visual Assist Form
     Call App:P5543101 Form:W5543101D Version:Undefined
          GC Ln Ty [LNTY] <> szTipo_deLinha [RMK]
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Ln Ty
Event: Col is Exited
Event GUID: d719d545-1646-455d-b210-1f2f8404ff83
=============================================
//  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Inicio
// Tipo de linha
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
     VA frm_szTypeofData_TYDT [TYDT] = "TP"
     VA frm_szNameRemark_RMK [RMK] = GC Ln Ty [LNTY]
     F00092.Select  [Index 2: SuppDB]
          VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
          VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
          VA frm_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
     F00092.FetchNext  [Index 2: SuppDB]
          VA frm_szNameRemark_RMK [RMK] <- TK Name - Remark [RMK]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC LnTy, "E55XML02")
     End If
Else
     // ===================================================
     // AP1182 por Gindri em 10/11/99
     // Objetiva proteger os campos descrição 1 e 2
     // da tela W4310A - Detalhes do Pedido.
     // ===================================================
     // Linha "S" - Item Cadastrado/Estoque
     // ===================================================
     If GC Ln Ty [LNTY] is equal to "S"
     And PO szLineType [LNTY] is not equal to "S"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC LnTy, "5515M")
     Else
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC LnTy)
     End If
     // ===================================================
     // Linha "B" - Item Cadastrado/Não Estoque
     // ===================================================
     If GC Ln Ty [LNTY] is equal to "B"
     And PO szLineType [LNTY] is not equal to "B"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC LnTy, "5515M")
     Else
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC LnTy)
     End If
End If
//  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Fim
// Tipo de linha
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Ln Ty
Event: Col Exited & Changed - Inline
Event GUID: caa11563-f958-440a-a992-e5714e82779a
=============================================
// SAR 7515824 - Making G\L Offset as Blank only when user is not entering it
// manually, so that corresponding G\L offset will be populated in Edit line.
If VA grd_GLOffsetChgedManually_EV01 [EV01] is not equal to "1"
And GC G/L Offset [GLC] is not equal to <Blank>
And GC G/L Offset [GLC] is not equal to <NULL>
     GC G/L Offset [GLC] = <NULL>
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Description 1
Event: Col Exited & Changed - Asynch
Event GUID: 22ef3ac7-7385-11d4-a5e0-000629ae6f6f
=============================================
// SAR 4448110 Begins
// SAR 4731169 Begins
If GB Description 1 [DSC1] is equal to or empty <Blank>
     VA grd_DescriptionOverride_EV01 [EV01] = "0"
Else
     VA grd_DescriptionOverride_EV01 [EV01] = "1"
End If
// SAR 4731169 Ends
// SAR 4448110 Ends


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Account Number
Event: Visual Assist Button Clicked
Event GUID: 7696a009-347a-4b41-b633-7b0b4620d42f
=============================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     ! If Could not resolve Form Control. 999 is equal to <Blank>
     ! OrCould not resolve Form Control. 999 is equal to <NULL>
     ! Else
          ! Suppress Default Visual Assist Form
          ! Call App:P5543101 Form:W5543101A Version:Undefined
          !      Could not resolve Form Control. 999 -> szCentrodeCusto [MCU]
          !      PO szLineType [LNTY] -> szLineType [LNTY]
          !      VA frm_szItem_UITM [UITM] -> szIdentifier2ndItem [LITM]
          !      GC Account Number [ANI] <- szRúbricas [RMK3]
     ! End If
     If GC Centro de Custo p/ CTB [MCU] is equal to <Blank>
     Or GC Centro de Custo p/ CTB [MCU] is equal to <NULL>
     Else
          Suppress Default Visual Assist Form
          ! Call App:P5543101 Form:W5543101A Version:Undefined
          !      GC Centro de Custo p/ CTB [MCU] -> szCentrodeCusto [MCU]
          !      PO szLineType [LNTY] -> szLineType [LNTY]
          !      VA frm_szItem_UITM [UITM] -> szIdentifier2ndItem [LITM]
          !      GC Account Number [ANI] <- szRúbricas [RMK3]
          Call App:P5543101 Form:W5543101A Version:Undefined
               GC Centro de Custo p/ CTB [MCU] -> szCentrodeCusto [MCU]
               GC Ln Ty [LNTY] -> szLineType [LNTY]
               GC Item Number [UITM] -> szIdentifier2ndItem [LITM]
               GC Account Number [ANI] <- szRúbricas [RMK3]
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Account Number
Event: Col is Exited
Event GUID: 00e654fa-61c4-4d7e-b810-2ef6c13a038c
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSupplementalDatabase_SDB [SDB]
evt_szTypeofData_TYDT [TYDT]
evt_szNameRemark_RMK [RMK]
evt_szNameRemarksLine2_RMK2 [RMK2]
evt_szTextRemark_RMK3 [RMK3]
evt_szMCU1 [MCU]
evt_szMCU2 [MCU]
evt_szOBJ1 [OBJ]
evt_szOBJ2 [OBJ]
evt_szSUB1 [SUB]
evt_szSUB2 [SUB]
evt_cValido_EV01 [EV01]
evt_szCiaConta_CO [CO]
evt_szCiaFF_CO [CO]
----------------------------------------
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If GC Account Number [ANI] is not equal to <Blank>
     And GC Account Number [ANI] is not equal to <NULL>
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Account Number)
          VA evt_cValido_EV01 [EV01] = "N"
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Account Number [ANI] -> szAccountNumber [ANI]
               VA evt_szMCU1 [MCU] <> szDisplayBusinessUnit [MCUR]
               VA evt_szOBJ1 [OBJ] <> szDisplayObject [OBJA]
               VA evt_szSUB1 [SUB] <> szDisplaySubsidiary [SUBA]
               "7" -> cBasedOnFormat [EV01]
          VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
          VA evt_szTypeofData_TYDT [TYDT] = "CT"
          VA evt_szNameRemark_RMK [RMK] = GC Item Number [UITM]
          VA evt_szNameRemarksLine2_RMK2 [RMK2] = GC Ln Ty [LNTY]
          F00092.Select  [Index 2: SuppDB]
               VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
               VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
               VA evt_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
               VA evt_szNameRemarksLine2_RMK2 [RMK2] = TK Name - Remark [RMK2]
          F00092.FetchNext  [Index 2: SuppDB]
               VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
          While SV File_IO_Status is equal to CO SUCCESS
               ValidateAccountNumber(XX0901.ValidateAccountNumber)
                    VA evt_szTextRemark_RMK3 [RMK3] -> szAccountNumber [ANI]
                    VA evt_szMCU2 [MCU] <> szDisplayBusinessUnit [MCUR]
                    VA evt_szOBJ2 [OBJ] <> szDisplayObject [OBJA]
                    VA evt_szSUB2 [SUB] <> szDisplaySubsidiary [SUBA]
                    "7" -> cBasedOnFormat [EV01]
               If VA evt_szMCU2 [MCU] is equal to "         999"
               Or VA evt_szMCU2 [MCU] is equal to VA evt_szMCU1 [MCU]
                    If VA evt_szOBJ2 [OBJ] is equal to VA evt_szOBJ1 [OBJ]
                         If VA evt_szSUB2 [SUB] is equal to VA evt_szSUB1 [SUB]
                              VA evt_cValido_EV01 [EV01] = "S"
                         End If
                    End If
               End If
               F00092.FetchNext  [Index 2: SuppDB]
                    VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
          End While
          If VA evt_cValido_EV01 [EV01] is not equal to "S"
               VA evt_szNameRemark_RMK [RMK] = GC Item Number [UITM]
               VA evt_szNameRemarksLine2_RMK2 [RMK2] = "*"
               F00092.Select  [Index 2: SuppDB]
                    VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
                    VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
                    VA evt_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
                    VA evt_szNameRemarksLine2_RMK2 [RMK2] = TK Name - Remark [RMK2]
               F00092.FetchNext  [Index 2: SuppDB]
                    VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               While SV File_IO_Status is equal to CO SUCCESS
                    ValidateAccountNumber(XX0901.ValidateAccountNumber)
                         VA evt_szTextRemark_RMK3 [RMK3] -> szAccountNumber [ANI]
                         VA evt_szMCU2 [MCU] <> szDisplayBusinessUnit [MCUR]
                         VA evt_szOBJ2 [OBJ] <> szDisplayObject [OBJA]
                         VA evt_szSUB2 [SUB] <> szDisplaySubsidiary [SUBA]
                         "7" -> cBasedOnFormat [EV01]
                    If VA evt_szMCU2 [MCU] is equal to "         999"
                    Or VA evt_szMCU2 [MCU] is equal to VA evt_szMCU1 [MCU]
                         If VA evt_szOBJ2 [OBJ] is equal to VA evt_szOBJ1 [OBJ]
                              If VA evt_szSUB2 [SUB] is equal to VA evt_szSUB1 [SUB]
                                   VA evt_cValido_EV01 [EV01] = "S"
                              End If
                         End If
                    End If
                    F00092.FetchNext  [Index 2: SuppDB]
                         VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               End While
          End If
          If VA evt_cValido_EV01 [EV01] is not equal to "S"
               VA evt_szNameRemark_RMK [RMK] = "*"
               VA evt_szNameRemarksLine2_RMK2 [RMK2] = GC Ln Ty [LNTY]
               F00092.Select  [Index 2: SuppDB]
                    VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
                    VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
                    VA evt_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
                    VA evt_szNameRemarksLine2_RMK2 [RMK2] = TK Name - Remark [RMK2]
               F00092.FetchNext  [Index 2: SuppDB]
                    VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               While SV File_IO_Status is equal to CO SUCCESS
                    ValidateAccountNumber(XX0901.ValidateAccountNumber)
                         VA evt_szTextRemark_RMK3 [RMK3] -> szAccountNumber [ANI]
                         VA evt_szMCU2 [MCU] <> szDisplayBusinessUnit [MCUR]
                         VA evt_szOBJ2 [OBJ] <> szDisplayObject [OBJA]
                         VA evt_szSUB2 [SUB] <> szDisplaySubsidiary [SUBA]
                         "7" -> cBasedOnFormat [EV01]
                    If VA evt_szMCU2 [MCU] is equal to "         999"
                    Or VA evt_szMCU2 [MCU] is equal to VA evt_szMCU1 [MCU]
                         If VA evt_szOBJ2 [OBJ] is equal to VA evt_szOBJ1 [OBJ]
                              If VA evt_szSUB2 [SUB] is equal to VA evt_szSUB1 [SUB]
                                   VA evt_cValido_EV01 [EV01] = "S"
                              End If
                         End If
                    End If
                    F00092.FetchNext  [Index 2: SuppDB]
                         VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               End While
          End If
          If VA evt_cValido_EV01 [EV01] is not equal to "S"
               VA evt_szNameRemark_RMK [RMK] = "*"
               VA evt_szNameRemarksLine2_RMK2 [RMK2] = "*"
               F00092.Select  [Index 2: SuppDB]
                    VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
                    VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
                    VA evt_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
                    VA evt_szNameRemarksLine2_RMK2 [RMK2] = TK Name - Remark [RMK2]
               F00092.FetchNext  [Index 2: SuppDB]
                    VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               While SV File_IO_Status is equal to CO SUCCESS
                    ValidateAccountNumber(XX0901.ValidateAccountNumber)
                         VA evt_szTextRemark_RMK3 [RMK3] -> szAccountNumber [ANI]
                         VA evt_szMCU2 [MCU] <> szDisplayBusinessUnit [MCUR]
                         VA evt_szOBJ2 [OBJ] <> szDisplayObject [OBJA]
                         VA evt_szSUB2 [SUB] <> szDisplaySubsidiary [SUBA]
                         "7" -> cBasedOnFormat [EV01]
                    If VA evt_szMCU2 [MCU] is equal to "         999"
                    Or VA evt_szMCU2 [MCU] is equal to VA evt_szMCU1 [MCU]
                         If VA evt_szOBJ2 [OBJ] is equal to VA evt_szOBJ1 [OBJ]
                              If VA evt_szSUB2 [SUB] is equal to VA evt_szSUB1 [SUB]
                                   VA evt_cValido_EV01 [EV01] = "S"
                              End If
                         End If
                    End If
                    F00092.FetchNext  [Index 2: SuppDB]
                         VA evt_szTextRemark_RMK3 [RMK3] <- TK Text Remark [RMK3]
               End While
          End If
          //
          If VA evt_cValido_EV01 [EV01] is equal to "N"
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "CME1212")
          End If
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//   Giovani_Mesquita
//   3292421 - 17/09/2019 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO cValidaRExFFxCta [EV01] is equal to "S"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          GC Account Number [ANI] -> szAccountNumber [ANI]
          VA evt_szMCU1 [MCU] <> szDisplayBusinessUnit [MCUR]
          VA evt_szOBJ1 [OBJ] <> szDisplayObject [OBJA]
          VA evt_szSUB1 [SUB] <> szDisplaySubsidiary [SUBA]
          "7" -> cBasedOnFormat [EV01]
          VA evt_szCiaConta_CO [CO] <- szAccountCompany [CO]
     F0006.FetchSingle  [Index 1: Cost Center]
          FC Branch/Plant1 [MCU] = TK Business Unit [MCU]
          VA evt_szCiaFF_CO [CO] <- TK Company [CO]
     If VA evt_szCiaConta_CO [CO] is not equal to VA evt_szCiaFF_CO [CO]
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "E55XML05")
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//   Giovani_Mesquita
//   3292421 - 17/09/2019 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: GC Account Number
Event: Col Exited & Changed - Inline
Event GUID: 37b6ad26-beae-46e2-a099-5ee7e6ad5426
=============================================
// -----------------------------------------------------------------------------
// INICIO - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
//                               não consistir  linhas canceladas/recebidas
// -----------------------------------------------------------------------------
//             Se trocar só a conta deve consistir histórico novamente
//
If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
     VA frm_HistoricoGCAA03 [AA03] = lpad([GC CHIS [CHIS]], "0", "3")
     VA frm_ErroHistorico [AA01] = "N"
     VA frm__AchouCerto [AA01] = "N"
     //
     If GC Account Number [ANI] is not equal to <Blank>
     And GC Account Number [ANI] is not equal to <NULL>
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Account Number [ANI] -> szAccountNumber [ANI]
               VA frm_RBS_ContaID [AID] <- szAccountID [AID]
               VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
               VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
               "7" -> cBasedOnFormat [EV01]
               VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
          //
          F5509HIS.Select  [Index 1: Índice]
               VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
          F5509HIS.FetchNext  [Index 1: Índice]
               VA frm_CompanyHIS [CO] <- TK Company [CO]
               VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
               VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
               VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          While SV File_IO_Status is equal to CO SUCCESS
               If VA frm_ExigeAA01 [AA01] is equal to "S"
                    If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                    Or VA frm_CompanyHIS [CO] is equal to "*"
                         If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
                         Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                              If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                              Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                                   VA frm_ErroHistorico [AA01] = "N"
                                   VA frm__AchouCerto [AA01] = "S"
                                   Consiste_hist_padrao(N5509HIS.Consiste_hist_padrao)
                                        GC Explanation -Remark- [EXR] -> HISTORICO [RMK]
                                        VA frm_ERRORBS [EV01] <- ERRO_V1 [EV01]
                                        VA frm_COD_ERRO [AA05] <- COD_ERRO [AA05]
                                   If VA frm_ERRORBS [EV01] is equal to "1"
                                        Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, VA frm_COD_ERRO)
                                   End If
                                   // ---------------------------------------------------------
                                   If VA frm_ERRORBS [EV01] is not equal to "1"
                                        VA frm_RBSCod_HistoricoAux_CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                        If GC CHIS [CHIS] is less than or equal to "0"
                                             VA frm_HIST4POS [EV01] = substr([GC Explanation -Remark- [EXR]], "3", "1")
                                             VA frm_RBS3PosRemark_AA03 [AA03] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                             VA frm_SY [SY] = "55"
                                             VA frm__RT [RT] = "HI"
                                             VA frm__KY [KY] = concat("       ", lpad([VA frm_RBS3PosRemark_AA03 [AA03]], "0", "3"))
                                             F0005.FetchSingle  [Index 1: System, Type, Code]
                                                  VA frm_SY [SY] = TK Product Code [SY]
                                                  VA frm__RT [RT] = TK User Defined Codes [RT]
                                                  VA frm__KY [KY] = TK User Defined Code [KY]
                                                  VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
                                             If SV File_IO_Status is equal to CO SUCCESS
                                                  GC CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                             Else
                                                  Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                             End If
                                        Else
                                             If GC CHIS [CHIS] is not equal to VA frm_RBSCod_HistoricoAux_CHIS [CHIS]
                                                  Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                             End If
                                        End If
                                   End If
                                   // ---------------------------------------------------------
                              Else
                                   If VA frm__AchouCerto [AA01] is equal to "S"
                                   Else
                                        VA frm_ErroHistorico [AA01] = "S"
                                   End If
                              End If
                         End If
                    End If
               End If
               F5509HIS.FetchNext  [Index 1: Índice]
                    VA frm_CompanyHIS [CO] <- TK Company [CO]
                    VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                    VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                    VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          End While
          //
          // --
          // Chamado 1684993 - Validar Conta Investimento - Camila 08/2014
          VA frm_RBS_IndCtaInvstmntos [R020] = <Blank>
          F0901.FetchSingle  [Index 3: Account Id]
               VA frm_RBS_ContaID [AID] = TK Account ID [AID]
               VA frm_RBS_IndCtaInvstmntos [R020] <- TK Category Code - G/L20 [R020]
          If VA frm_RBS_IndCtaInvstmntos [R020] is not equal to("I","S")
               ! Hide Grid Column(FC Grid, GC NúmeroAlocação)
               ! Hide Grid Column(FC Grid, GC ProjetoRubrica)
               GC Número Alocação [N001] = <Blank>
               GC Projeto Rubrica [VR01] = <Blank>
          Else
               ! Show Grid Column(FC Grid, GC NúmeroAlocação)
               ! Show Grid Column(FC Grid, GC ProjetoRubrica)
               ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, "55182")
               ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica, "55181")
          End If
          // ---------------------------------------------------------------------------
     End If
     If VA frm_ErroHistorico [AA01] is equal to "S"
          // - erro Exige Histórico
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554102")
     Else
          If GC Explanation -Remark- [EXR] is not equal to <Blank>
          And GC Explanation -Remark- [EXR] is not equal to <NULL>
          And GC CHIS [CHIS] is equal to "0"
               GC Explanation -Remark- [EXR] = <NULL>
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
          End If
     End If
End If
// -----------------------------------------------------------------------------
// FIM  - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
// -----------------------------------------------------------------------------
// ISSUE 7707 - Valkiria Schulte - Conta Contábil x F5543DOC
If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
And GC Item Number [UITM] is greater than <Blank>
And GC Account Number [ANI] is greater than <Blank>
     // Issue 7954 - Valkiria - Não limpar erros anteriores da conta
     ! Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Account Number)
     // End Issue 7954
     ContaContabilxTipoDocumento(N5543DOC.ContaContabilxTipoDocumento)
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA frm_DTAI_F5543DOC [DTAI] <- szDataItem [DTAI]
          GC Account Number [ANI] -> szAcctNoInputMode [ANI]
     If VA frm_DTAI_F5543DOC [DTAI] is greater than <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, VA frm_DTAI_F5543DOC)
     End If
End If
// END ISSUE 7707
//
// -----------------------------------------------------------------------------
// INICIO - ISSUE 274337 - Camila - Consistir rubricas digitadas
// ISSUE 288865 - Marília - não consiste quando cancelada e inibe cor do grid
// ISSUE 469511 - Dionatan Irigaray -Consitência na VI0006 rubrica 302.06
// -----------------------------------------------------------------------------
//
If PO OpcaoViagens [EV01] is equal to "1"
     If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
     And GC Next Status [NXTR] is not equal to "999"
          VA frm_Valida_RubricaTeste [AA14] = substr([GC Account Number [ANI]], "8", "6")
          If GC Item Number [UITM] is equal to ("VI0001","VI0005","VI0006","VI0011","VI0012")
          And VA frm_Valida_RubricaTeste [AA14] is not equal to "302.06"
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
          End If
          If GC Item Number [UITM] is equal to ("VI0003")
          And VA frm_Valida_RubricaTeste [AA14] is not equal to "303.04"
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
          End If
          If GC Item Number [UITM] is equal to ("VI0002","VI0004","VI0008","VI0010")
          And VA frm_Valida_RubricaTeste [AA14] is not equal to "302.05"
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
          End If
     End If
End If
//
//
// ---------------------------------------------------------------------------
// --
// FIM - ISSUE 274337 - Camila - Consistir rubricas digitadas
// ---------------------------------------------------------------------------


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC CHIS
Event: Col Exited & Changed - Inline
Event GUID: e0162410-9d9f-49fb-ab6d-335f0105c3dc
=============================================
// -----------------------------------------------------------------------------
// INICIO - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
//                                     Campo CHIS+EXR novo no GRID
//                               não consistir  linhas canceladas/recebidas
// -----------------------------------------------------------------------------
If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS)
     VA frm__SY [SY] = "55"
     VA frm__RT [RT] = "HI"
     VA frm__KY [KY] = concat("       ", lpad([GC CHIS [CHIS]], "0", "3"))
     VA frm__HIS_OBS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
     If GC CHIS [CHIS] is equal to VA frm__HIS_OBS [CHIS]
     And GC CHIS [CHIS] is greater than <Blank>
     Else
          If GC CHIS [CHIS] is equal to "0"
               GC Explanation -Remark- [EXR] = <NULL>
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
          Else
               //        Pesquisa na UDC
               F0005.FetchSingle  [Index 1: System, Type, Code]
                    VA frm__SY [SY] = TK Product Code [SY]
                    VA frm__RT [RT] = TK User Defined Codes [RT]
                    VA frm__KY [KY] = TK User Defined Code [KY]
                    VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
               If SV File_IO_Status is equal to CO SUCCESS
                    // ++++
                    //    Verifica se histórico não é obrigatório p/a conta
                    VA frm_HistoricoGCAA03 [AA03] = lpad([GC CHIS [CHIS]], "0", "3")
                    VA frm__AchouCerto [AA01] = "N"
                    If GC Account Number [ANI] is not equal to <Blank>
                    And GC Account Number [ANI] is not equal to <NULL>
                         ValidateAccountNumber(XX0901.ValidateAccountNumber)
                              GC Account Number [ANI] -> szAccountNumber [ANI]
                              VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
                              VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
                              "7" -> cBasedOnFormat [EV01]
                              VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
                         F5509HIS.Select  [Index 1: Índice]
                              VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
                         F5509HIS.FetchNext  [Index 1: Índice]
                              VA frm_CompanyHIS [CO] <- TK Company [CO]
                              VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                              VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                              VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
                         While SV File_IO_Status is equal to CO SUCCESS
                              If VA frm_ExigeAA01 [AA01] is equal to "S"
                                   If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                                   Or VA frm_CompanyHIS [CO] is equal to "*"
                                        If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
                                        Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                                             If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                                             Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                                                  VA frm__AchouCerto [AA01] = "S"
                                             End If
                                        End If
                                   End If
                              End If
                              F5509HIS.FetchNext  [Index 1: Índice]
                                   VA frm_CompanyHIS [CO] <- TK Company [CO]
                                   VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                                   VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                                   VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
                         End While
                    End If
                    If VA frm__AchouCerto [AA01] is equal to "S"
                         GC Explanation -Remark- [EXR] = VA frm__UDC_HIST_PADRAO [DL02]
                         Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS)
                    Else
                         If GC Account Number [ANI] is not equal to <Blank>
                         And GC Account Number [ANI] is not equal to <NULL>
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554101")
                         End If
                    End If
                    // ++++
               End If
          End If
     End If
     //
     If GC CHIS [CHIS] is equal to "0"
          Disable Grid(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
     Else
          Enable Grid(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
     End If
End If
// -----------------------------------------------------------------------------
// FIM - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
// -----------------------------------------------------------------------------


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Explanation -Remark-
Event: Col Exited & Changed - Inline
Event GUID: dff4fcce-6483-4672-ab63-b7c5c7b7d626
=============================================
// -----------------------------------------------------------------------------
// INICIO - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
//                               não consistir  linhas canceladas/recebidas
// -----------------------------------------------------------------------------
If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
     VA frm_HistoricoGCAA03 [AA03] = lpad([GC CHIS [CHIS]], "0", "3")
     VA frm_ErroHistorico [AA01] = "N"
     VA frm__AchouCerto [AA01] = "N"
     //
     If GC Account Number [ANI] is not equal to <Blank>
     And GC Account Number [ANI] is not equal to <NULL>
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Account Number [ANI] -> szAccountNumber [ANI]
               VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
               VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
               "7" -> cBasedOnFormat [EV01]
               VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
          //
          F5509HIS.Select  [Index 1: Índice]
               VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
          F5509HIS.FetchNext  [Index 1: Índice]
               VA frm_CompanyHIS [CO] <- TK Company [CO]
               VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
               VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
               VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          While SV File_IO_Status is equal to CO SUCCESS
               If VA frm_ExigeAA01 [AA01] is equal to "S"
                    If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                    Or VA frm_CompanyHIS [CO] is equal to "*"
                         If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
                         Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                              If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                              Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                                   VA frm_ErroHistorico [AA01] = "N"
                                   VA frm__AchouCerto [AA01] = "S"
                                   Consiste_hist_padrao(N5509HIS.Consiste_hist_padrao)
                                        GC Explanation -Remark- [EXR] -> HISTORICO [RMK]
                                        VA frm_ERRORBS [EV01] <- ERRO_V1 [EV01]
                                        VA frm_COD_ERRO [AA05] <- COD_ERRO [AA05]
                                   If VA frm_ERRORBS [EV01] is equal to "1"
                                        Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, VA frm_COD_ERRO)
                                   End If
                                   // ---------------------------------------------------------
                                   If VA frm_ERRORBS [EV01] is not equal to "1"
                                        VA frm_RBSCod_HistoricoAux_CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                        If GC CHIS [CHIS] is less than or equal to "0"
                                             VA frm_HIST4POS [EV01] = substr([GC Explanation -Remark- [EXR]], "3", "1")
                                             ! If VA frm_HIST4POS [EV01] is equal to ("*","+")
                                                  VA frm_RBS3PosRemark_AA03 [AA03] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                                  VA frm_SY [SY] = "55"
                                                  VA frm__RT [RT] = "HI"
                                                  VA frm__KY [KY] = concat("       ", lpad([VA frm_RBS3PosRemark_AA03 [AA03]], "0", "3"))
                                                  F0005.FetchSingle  [Index 1: System, Type, Code]
                                                       VA frm_SY [SY] = TK Product Code [SY]
                                                       VA frm__RT [RT] = TK User Defined Codes [RT]
                                                       VA frm__KY [KY] = TK User Defined Code [KY]
                                                       VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
                                                  If SV File_IO_Status is equal to CO SUCCESS
                                                       GC CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                                  Else
                                                       Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                                  End If
                                             ! End If
                                        Else
                                             If GC CHIS [CHIS] is not equal to VA frm_RBSCod_HistoricoAux_CHIS [CHIS]
                                                  Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                             End If
                                        End If
                                   End If
                                   // ---------------------------------------------------------
                              Else
                                   If VA frm__AchouCerto [AA01] is equal to "S"
                                   Else
                                        VA frm_ErroHistorico [AA01] = "S"
                                   End If
                              End If
                         End If
                    End If
               End If
               F5509HIS.FetchNext  [Index 1: Índice]
                    VA frm_CompanyHIS [CO] <- TK Company [CO]
                    VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                    VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                    VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          End While
     End If
     If VA frm_ErroHistorico [AA01] is equal to "S"
          // - erro Exige Histórico
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554102")
     Else
          If GC Explanation -Remark- [EXR] is not equal to <Blank>
          And GC Explanation -Remark- [EXR] is not equal to <NULL>
          And GC CHIS [CHIS] is equal to "0"
               GC Explanation -Remark- [EXR] = <NULL>
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
               Disable Grid(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
          End If
     End If
End If
// -----------------------------------------------------------------------------
// FIM  - ISSUE 7065 - Marília - Consistência do campo Histórico x CHis
// -----------------------------------------------------------------------------


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Obj Acct
Event: Visual Assist Button Clicked
Event GUID: eb84fb16-9b3b-415d-866f-b18a6970a41c
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idAccCacheCursor_GENLNG [GENLNG]
evt_szErrorMessageID_DTAI [DTAI]
evt_mnSelectedGridRowNo_LNID [LNID]
----------------------------------------
//
// Load from Line Defaults if GC values are blank.
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GC Business Unit [OMCU] = FC Project Cost Center [OMCU]
End If
If GC Sub  [SUB] is equal to or empty <Blank>
     GC Sub  [SUB] = FC Subsidiary [SUB]
End If
If GC Obj Acct [OBJ] is equal to or empty <Blank>
     GC Obj Acct [OBJ] = FC Object Account [OBJ]
End If
// SAR  6776109  Begin - Pass back iCostTypeCacheRecNo to P430901, so cache
// only gets loaded once.
// BUG 13092595 -  Modal Search and Select Clean Up
Suppress Default Visual Assist Form
Call App:P430901 Form:W430901A Version:Undefined
     GC Business Unit [OMCU] <> szBusiness_F0901_Unit_MCU [MCU]
     GC Obj Acct [OBJ] <> szObject_F0901_Account_OBJ [OBJ]
     GC Sub  [SUB] <> sz0901BC_Subsidiary_SUB [SUB]
     FC Branch/Plant1 [MCU] -> szF4301MCU_MCU [MCU]
     FC F4301:Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo_KCOO [KCOO]
     PO cDescriptionDefaults [EV01] -> cPOAccountDescription_EV01 [EV01]
     PO cFinancialAAIs [EV01] -> cPOFinancialAAIs_EV01 [EV01]
     PO cSingleJob [EV01] -> cPOSingleJob_EV01 [EV01]
     PO cJobProject [EV01] -> cPOJobProject_EV01 [EV01]
     "E" -> cCallType_EV01 [EV01]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     VA frm_iCostTypeCacheRecNo_INT01 [INT01] <> iCostTypeCacheRecordNo_INT01 [INT01]
     VA frm_cCostCodeCacheLoaded_EV01 [EV01] <> cCostTypeCacheLoaded_EV01 [EV01]
//
//
Press Button(FC LoadAccountCache)
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Sub 
Event: Visual Assist Button Clicked
Event GUID: d3ffb618-d66a-4221-89a5-32c70327d816
=============================================
//
// Load from Line Defaults if GC values are blank.
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GC Business Unit [OMCU] = FC Project Cost Center [OMCU]
End If
If GC Sub  [SUB] is equal to or empty <Blank>
     GC Sub  [SUB] = FC Subsidiary [SUB]
End If
If GC Obj Acct [OBJ] is equal to or empty <Blank>
     GC Obj Acct [OBJ] = FC Object Account [OBJ]
End If
//
// SAR  6776109  Begin - Pass back iCostTypeCacheRecNo to P430901, so cache
// only gets loaded once.
// BUG 13092595 -  Modal Search and Select Clean Up
Suppress Default Visual Assist Form
Call App:P430901 Form:W430901A Version:Undefined
     GC Business Unit [OMCU] <> szBusiness_F0901_Unit_MCU [MCU]
     GC Obj Acct [OBJ] <> szObject_F0901_Account_OBJ [OBJ]
     GC Sub  [SUB] <> sz0901BC_Subsidiary_SUB [SUB]
     FC Branch/Plant1 [MCU] -> szF4301MCU_MCU [MCU]
     FC F4301:Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo_KCOO [KCOO]
     PO cDescriptionDefaults [EV01] -> cPOAccountDescription_EV01 [EV01]
     PO cFinancialAAIs [EV01] -> cPOFinancialAAIs_EV01 [EV01]
     PO cSingleJob [EV01] -> cPOSingleJob_EV01 [EV01]
     PO cJobProject [EV01] -> cPOJobProject_EV01 [EV01]
     "E" -> cCallType_EV01 [EV01]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     VA frm_iCostTypeCacheRecNo_INT01 [INT01] <> iCostTypeCacheRecordNo_INT01 [INT01]
     VA frm_cCostCodeCacheLoaded_EV01 [EV01] <> cCostTypeCacheLoaded_EV01 [EV01]
Press Button(FC LoadAccountCache)


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Centro de Respons.
Event: Col is Exited
Event GUID: 5a070d96-798c-4e94-804f-b20c2489cb36
=============================================
// ======================================================
// SERGIO BENCKE - ISSUE 2992
// ======================================================
GC Centro de Respons. [VR02] = ltrim([GC Centro de Respons. [VR02]], <Blank>)

=============================================
Form: Order Detail - W4310A
Object: GC Centro de Respons.
Event: Col Exited & Changed - Asynch
Event GUID: 6d803f04-e1d7-4897-84a4-7ae88728a62f
=============================================
// ======================================================
// SERGIO BENCKE - ISSUE 2992
// ======================================================
GC Centro de Respons. [VR02] = ltrim([GC Centro de Respons. [VR02]], <Blank>)


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Número Alocação
Event: Visual Assist Button Clicked
Event GUID: 47767e84-1529-4857-9c37-4d91e4b8f114
=============================================
// Validações de Conta Investimento - Camila 08/2014
Suppress Default Visual Assist Form
ValidateAccountNumber(XX0901.ValidateAccountNumber)
     GC Account Number [ANI] -> szAccountNumber [ANI]
     VA frm_RBS_ContaID [AID] <- szAccountID [AID]
     VA frm_ObjPC [OBJ] <- szDatabaseObject [OBJ]
     VA frm_SubPC [SUB] <- szDatabaseSubsidiary [SUB]
     VA frm_McuPC [MCU] <- szDisplayBusinessUnit [MCUR]
     "7" -> cBasedOnFormat [EV01]
     VA frm_CoPC [CO] <- szAccountCompany [CO]
F0901.FetchSingle  [Index 3: Account Id]
     VA frm_RBS_ContaID [AID] = TK Account ID [AID]
     VA frm_RBS_IndCtaInvstmntos [R020] <- TK Category Code - G/L20 [R020]
If VA frm_RBS_IndCtaInvstmntos [R020] is equal to or empty <Blank>
     Call App:P4310 Form:W4310R Version:Undefined
Else
     VA frm_RBS_NroAlocacao [N001] = GC Número Alocação [N001]
     VA frm_RBS_Projeto [PROJE] = substr([GC Projeto Rubrica [VR01]], "0", "4")
     VA frm_RBS_Rubrica [RUBRI] = substr([GC Projeto Rubrica [VR01]], "4", "4")
     VA frm_RBS_DataContabil [AA10] = date_year([FC Order Date [TRDJ]])
     If VA frm_RBS_IndCtaInvstmntos [R020] is equal to "I"
          Call App:P5509IV2 Form:W5509IV2L Version:Undefined
               VA frm_RBS_DataContabil [AA10] -> AnoMes [ANOMES]
               VA frm_CoPC [CO] -> Empresa [CO]
               "           *" -> CCusto [MCU]
               "*" -> CtaCtbObj [OBJ]
               "*" -> CtaCtbDet [SUB]
               VA frm_RBS_NroAlocacao [N001] <> mnNroalocacao [N001]
               VA frm_RBS_Projeto [PROJE] <> szPROJETO [PROJE]
               VA frm_RBS_Rubrica [RUBRI] <> szRUBRICA [RUBRI]
     Else
          Call App:P5509IV2 Form:W5509IV2L Version:Undefined
               VA frm_RBS_DataContabil [AA10] -> AnoMes [ANOMES]
               VA frm_CoPC [CO] -> Empresa [CO]
               VA frm_McuPC [MCU] -> CCusto [MCU]
               VA frm_ObjPC [OBJ] -> CtaCtbObj [OBJ]
               VA frm_SubPC [SUB] -> CtaCtbDet [SUB]
               VA frm_RBS_NroAlocacao [N001] <> mnNroalocacao [N001]
               VA frm_RBS_Projeto [PROJE] <> szPROJETO [PROJE]
               VA frm_RBS_Rubrica [RUBRI] <> szRUBRICA [RUBRI]
     End If
     GC Número Alocação [N001] = VA frm_RBS_NroAlocacao [N001]
     GC Projeto Rubrica [VR01] = concat([VA frm_RBS_Projeto [PROJE]], [VA frm_RBS_Rubrica [RUBRI]])
End If
// Validações de Conta Investimento - Camila 08/2014

=============================================
Form: Order Detail - W4310A
Object: GC Número Alocação
Event: Col is Exited
Event GUID: 44ae7980-74a2-4ca7-8735-2d2e76f05ddd
=============================================
// Validações de Conta Investimento - Camila 08/2014
Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação)
Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica)
If GC Número Alocação [N001] is equal to <NULL>
Or GC Número Alocação [N001] is equal to "0"
Or GC Número Alocação [N001] is equal to <Blank>
     If VA frm_RBS_IndCtaInvstmntos [R020] is equal to ("I","S")
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, "5518H")
     Else
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação)
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica)
          GC Projeto Rubrica [VR01] = <Blank>
     End If
Else
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação)
     If GC Projeto Rubrica [VR01] is equal to or empty <Blank>
          F5509IND.Select  [Index 2: NroInvestmto]
               GC Número Alocação [N001] = TK Next Number Range 1 [N001]
          F5509IND.FetchNext  [Index 2: NroInvestmto]
               VA frm_RBS_Projeto [PROJE] <- TK Projeto [PROJE]
               VA frm_RBS_Rubrica [RUBRI] <- TK Rubrica [RUBRI]
          If SV File_IO_Status is equal to CO SUCCESS
               F5509IND.FetchNext  [Index 2: NroInvestmto]
                    VA frm_RBS_Projeto [PROJE] <- TK Projeto [PROJE]
                    VA frm_RBS_Rubrica [RUBRI] <- TK Rubrica [RUBRI]
               If SV File_IO_Status is not equal to CO SUCCESS
                    GC Projeto Rubrica [VR01] = concat([VA frm_RBS_Projeto [PROJE]], [VA frm_RBS_Rubrica [RUBRI]])
               End If
          End If
          If GC Projeto Rubrica [VR01] is equal to or empty <Blank>
               VA frm_RBS_NroAlocacao [N001] = GC Número Alocação [N001]
               VA frm_RBS_Projeto [PROJE] = substr([GC Projeto Rubrica [VR01]], "0", "4")
               VA frm_RBS_Rubrica [RUBRI] = substr([GC Projeto Rubrica [VR01]], "4", "4")
               VA frm_RBS_DataContabil [AA10] = date_year([FC Order Date [TRDJ]])
               If VA frm_RBS_IndCtaInvstmntos [R020] is equal to "I"
                    Call App:P5509IV2 Form:W5509IV2L Version:Undefined
                         VA frm_RBS_DataContabil [AA10] -> AnoMes [ANOMES]
                         GC Co Key [RKCO] -> Empresa [CO]
                         GC Número Alocação [N001] -> NroAlocacao [N001]
                         "           *" -> CCusto [MCU]
                         "*" -> CtaCtbObj [OBJ]
                         "*" -> CtaCtbDet [SUB]
                         VA frm_RBS_NroAlocacao [N001] <> mnNroalocacao [N001]
                         VA frm_RBS_Projeto [PROJE] <> szPROJETO [PROJE]
                         VA frm_RBS_Rubrica [RUBRI] <> szRUBRICA [RUBRI]
               Else
                    Call App:P5509IV2 Form:W5509IV2L Version:Undefined
                         VA frm_RBS_DataContabil [AA10] -> AnoMes [ANOMES]
                         GC Co Key [RKCO] -> Empresa [CO]
                         GC Número Alocação [N001] -> NroAlocacao [N001]
                         GC Business Unit [OMCU] -> CCusto [MCU]
                         GC Obj Acct [OBJ] -> CtaCtbObj [OBJ]
                         GC Sub  [SUB] -> CtaCtbDet [SUB]
                         VA frm_RBS_NroAlocacao [N001] <> mnNroalocacao [N001]
                         VA frm_RBS_Projeto [PROJE] <> szPROJETO [PROJE]
                         VA frm_RBS_Rubrica [RUBRI] <> szRUBRICA [RUBRI]
               End If
          End If
          GC Número Alocação [N001] = VA frm_RBS_NroAlocacao [N001]
          GC Projeto Rubrica [VR01] = concat([VA frm_RBS_Projeto [PROJE]], [VA frm_RBS_Rubrica [RUBRI]])
     End If
     If GC Projeto Rubrica [VR01] is equal to or empty <Blank>
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC NúmeroAlocação, "55108")
     Else
          VA frm_RBS_ProjetoAux [PROJE] = substr([GC Projeto Rubrica [VR01]], "0", "4")
          VA frm_RBS_RubricaAux [RUBRI] = substr([GC Projeto Rubrica [VR01]], "4", "4")
          F5509IND.Select  [Index 2: NroInvestmto]
               VA frm_RBS_ProjetoAux [PROJE] = TK Projeto [PROJE]
               VA frm_RBS_RubricaAux [RUBRI] = TK Rubrica [RUBRI]
               GC Número Alocação [N001] = TK Next Number Range 1 [N001]
          F5509IND.FetchNext  [Index 2: NroInvestmto]
               VA frm_RBS_ProjetoAux [PROJE] <- TK Projeto [PROJE]
               VA frm_RBS_RubricaAux [RUBRI] <- TK Rubrica [RUBRI]
          If SV File_IO_Status is not equal to CO SUCCESS
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, "5519A")
          End If
     End If
End If
// Validações de Conta Investimento - Camila 08/2014


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Projeto Rubrica
Event: Col is Exited
Event GUID: bbb1655e-37cb-44a3-90db-515e13bed0d4
=============================================
Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica)
VA frm_RBS_IndCtaInvstmntos [R020] = <Blank>
ValidateAccountNumber(XX0901.ValidateAccountNumber)
     GC Account Number [ANI] -> szAccountNumber [ANI]
     VA frm_RBS_ContaID [AID] <- szAccountID [AID]
     VA frm_ObjPC [OBJ] <- szDatabaseObject [OBJ]
     VA frm_SubPC [SUB] <- szDatabaseSubsidiary [SUB]
     VA frm_McuPC [MCU] <- szDisplayBusinessUnit [MCUR]
     "7" -> cBasedOnFormat [EV01]
     VA frm_CoPC [CO] <- szAccountCompany [CO]
F0901.FetchSingle  [Index 3: Account Id]
     VA frm_RBS_ContaID [AID] = TK Account ID [AID]
     VA frm_RBS_IndCtaInvstmntos [R020] <- TK Category Code - G/L20 [R020]
If VA frm_RBS_IndCtaInvstmntos [R020] is not equal to("I","S")
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica)
Else
     If GC Projeto Rubrica [VR01] is equal to or empty <Blank>
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ProjetoRubrica, "55181")
     End If
End If
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Subledger
Event: Visual Assist Button Clicked
Event GUID: 9405b1c9-7237-41c8-819a-3f79d48e9598
=============================================
// ***************************************************************************
// SAR 6805803 - Suppress dummy visual assist search and select form assigned
// in subledger type event rules.
// ***************************************************************************
Suppress Default Visual Assist Form
// ***************************************************************************
// SAR 6805803 - Call the search and select form that corresponds to subledger
// type.
// ***************************************************************************
GetSubledgerValue(N0900010.GetSubledgerValue)
     GC Sub Type [SBLT] -> cSubledgerType [SBLT]
     GC Subledger [SBL] <> szSubledger [SBL]
// ***************************************************************************

=============================================
Form: Order Detail - W4310A
Object: GC Subledger
Event: Col Exited & Changed - Asynch
Event GUID: 0577af1c-bfc0-4bbd-8abd-264ded7fb8e6
=============================================
// ======================================================
// SERGIO BENCKE - ISSUE 2992
// ======================================================
GC Subledger [SBL] = ltrim([GC Subledger [SBL]], <Blank>)


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Sub Type
Event: Col Exited & Changed - Inline
Event GUID: 243a02aa-b319-4e25-9dc3-87cc0c6ee143
=============================================
// ***************************************************************************
// SAR 6805803 - If subledger type has a search and select form, override
// visual assist to dummy search and select to dispaly visual assist
// flashlight on subledger field.  If subledger type does not have a search
// and select form, disable visual assist on subledger field.
// ***************************************************************************
If GC Sub Type [SBLT] is equal to ("A","C","E","F","G","I","L","W")
     Set Data Dictionary Overrides(FC Grid, GC Subledger,  <Data Dictionary Overrides>)
Else
     Set Data Dictionary Overrides(FC Grid, GC Subledger,  <Data Dictionary Overrides>)
End If
// ***************************************************************************


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Ship To Number
Event: Col Exited & Changed - Inline
Event GUID: 5ef15c62-e064-11d1-9ac9-00600832fe19
=============================================
If GC Ship To Number [SHAN] is not equal to "0"
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          GC Ship To Number [SHAN] -> mnAddressNumber [AN8]
          UNDEFINED <> szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          UNDEFINED <> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If
// 
VA frm_P32942ConfigItemCall [EV01] = "0"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Carrier Number
Event: Col Exited & Changed - Inline
Event GUID: 5ef15c60-e064-11d1-9ac9-00600832fe19
=============================================
If GC Carrier Number [ANCR] is not equal to "0"
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          GC Carrier Number [ANCR] -> mnAddressNumber [AN8]
          UNDEFINED <> szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          UNDEFINED <> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Request Date
Event: Col is Exited
Event GUID: ba0f31b2-cfbb-49bc-af4f-677ba5d388df
=============================================
// ======================================================
// ISSUE 9830 - Obrigatório preenchimento Data Solicitação
// ======================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Request Date [DRQJ] is less than or equal to Null Date
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RequestDate, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC RequestDate)
          End If
     End If
End If

=============================================
Form: Order Detail - W4310A
Object: GC Request Date
Event: Col Exited & Changed - Inline
Event GUID: 9c615d24-696f-4210-9a5b-68398d21d113
=============================================
// ======================================================
// 819872 - Marília - Aviso Data da Solicitação deve ser Data da Viagem
// ======================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Request Date [DRQJ] is greater than Null Date
               // Ajuste de customização - na  migração o nome da tela mudou para W4310P
               ! Call App:P4310 Form:W4310N Version: 
               ! Call App:P4310 Form:W4310P Version:Undefined
               GC G/L Date [DGL] = GC Request Date [DRQJ]
          End If
     End If
End If
VA frm_cRequestedDateChgd_EV01 [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Promised Delivery
Event: Col is Exited
Event GUID: 420d9b7f-ffb1-43f8-a40e-e33057edf43c
=============================================
// ======================================================
// Obrigatório preenchimento Data Prometida
// ======================================================
If PO OpcaoDataPrometida_ [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Promised Delivery [PDDJ] is less than or equal to Null Date
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC PromisedDelivery, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC PromisedDelivery)
          End If
     End If
End If

=============================================
Form: Order Detail - W4310A
Object: GC Promised Delivery
Event: Col Exited & Changed - Inline
Event GUID: 8f7f7e1c-40ff-4692-bc4e-b74313ea491f
=============================================
VA frm_cPromisedDelDateChgd_EV01 [EV01] = "1"
// SAR 8858511 Begin
If GC Promised Delivery [PDDJ] is not equal to Null Date
And GC Planned Effective [DLEJ] is equal to VA grd_PlannedEffectivityDate [DLEJ]
     GC Planned Effective [DLEJ] = <NULL>
End If
// SAR 8858511 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Tax Rate/Area
Event: Visual Assist Button Clicked
Event GUID: 8e832190-9601-11d2-973d-000039ae070e
=============================================
// sar 6115167 Begin
If GC Expl Code [EXR1] is equal to ("E","S","U")
     // SAR 4495717 Begins - Tax Rate/Area and Visual Asst 
     VA grd_TempTaxArea1_TXA1 [TXA1] = <Blank>
     If VA frm_cVertexActive [VVTX] is equal to "1"
          Suppress Default Visual Assist Form
          If PO szTaxRateAreaSelection [VL01] is equal to "1"
               SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
                    FC Ship To [SHAN] -> mnAddressNumber [AN8]
                    GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    VA grd_TempTaxArea1_TXA1 [TXA1] <> szGeoCode [TXA1]
                    VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
                    VA frm_szSearchType [AT1] <> szSearchType [AT1]
                    VA frm_szVertexCanadaCountryCode [VVCN] -> szVertrexCanadaCountryCode [VVCN]
                    UNDEFINED <- cCloseFlag [EV02]
                    "0" -> cMasterFile [EV03]
                    VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]
          Else
               SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    VA grd_TempTaxArea1_TXA1 [TXA1] <> szGeoCode [TXA1]
                    VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
                    VA frm_szSearchType [AT1] <> szSearchType [AT1]
                    VA frm_szVertexCanadaCountryCode [VVCN] -> szVertrexCanadaCountryCode [VVCN]
                    UNDEFINED <- cCloseFlag [EV02]
                    "0" -> cMasterFile [EV03]
                    VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]
          End If
     End If
     If VA grd_TempTaxArea1_TXA1 [TXA1] is not equal to <Blank>
          GC Tax Rate/Area [TXA1] = VA grd_TempTaxArea1_TXA1 [TXA1]
     End If
     // SAR 4495717 Ends
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Discount Factor
Event: Col Exited & Changed - Inline
Event GUID: 97de7746-4c2f-482a-b90c-c270d5e7ba76
=============================================
// SAR 8833091 Begin
If VA grd_PS09StatusFlag_PROV [PROV] is not equal to "1"
And GC PROV:Price Override - (wf) [PROV] is not equal to "1"
     GC Unit Cost [UPAX] = <NULL>
     GC Extended Cost [AEXPE1] = <NULL>
End If
// SAR 8833091 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Location
Event: Visual Assist Button Clicked
Event GUID: 876023f6-0443-11d4-a286-00105a1c01bf
=============================================
//      SAR 4063050 Begin
//      Pass in the related Lot Number
Suppress Default Visual Assist Form
// SAR 7565864
Call App:P41LOCN Form:W41LOCNB Version:Undefined
     GC Location [LOCNE1] <> Location [LOCN]
     GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]
     GC Lot/Serial [LOTN] <> szLot [LOTN]
//      SAR 4063050 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Asset ID
Event: Col Exited & Changed - Asynch
Event GUID: e7ca3ff8-a3d2-4ea8-ad07-9e0de480a556
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnAssetItemNumber_NUMB [NUMB]
evt_szAssetItemNumber_ASID [ASID]
evt_jdDateDisposal_DSP [DSP]
----------------------------------------
//  SAR    5169139   Begin
//
If GC Asset ID [ASII] is equal to <Blank>
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AssetID)
     BC Serial Number (F4311.0) [ASID] = <Blank>
Else
     //
     //  SAR     5339492     Begin
     // ---------------------------------------------------------------------------
     // Allow user to enter a valid asset number, revalidate, and clear error.
     // ---------------------------------------------------------------------------
     //
     If GC Asset ID [ASII] is not equal to <Blank>
     And GC Asset ID [ASII] is not equal to <NULL>
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               GC Asset ID [ASII] <> szPrimaryAssetNumber [ASII]
               VA evt_mnAssetItemNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
               "1" -> cSuppressErrorMessages [EV02]
               VA frm_AssetErrorNumber_DTAI [DTAI] <- szErrorMessageID [DTAI]
          ConvertNumericToString(B0000045.ConvertNumericToString)
               VA evt_mnAssetItemNumber_NUMB [NUMB] -> mnMathNumeric01 [MATH01]
               VA evt_szAssetItemNumber_ASID [ASID] <- szVideoConstant30A [VC30A]
     End If
     // SAR# 8482921 - Retrieve the disposal date of entered asset ID for setting
     // an error
     F1201RetrieveDisposalDate(N1200380.F1201RetrieveDisposalDate)
          VA evt_mnAssetItemNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
          VA evt_jdDateDisposal_DSP [DSP] <- jdDateDisposal [DSP]
End If
If VA frm_AssetErrorNumber_DTAI [DTAI] is not equal to <Blank>
And VA frm_AssetErrorNumber_DTAI [DTAI] is not equal to <NULL>
     Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC AssetID, VA frm_AssetErrorNumber_DTAI)
Else
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AssetID)
     //  SAR    5339492    End
     //
End If
//
// SAR    5163139    End
// Begin SAR# 88482921 - Set an error “Asset ID Disposed” when using asset ID
// which has disposed date
If VA evt_jdDateDisposal_DSP [DSP] is not equal to Null Date
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AssetID, "4A12")
End If
// End SAR# 8482921


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Extended Weight
Event: Col Exited & Changed - Asynch
Event GUID: 63d39941-4572-44ef-ad7d-37c3707793e5
=============================================
// Begin BUG #11654720
If GC Extended Weight [ITWT] is not equal to <Blank>
     VA grd_cManualOverrideExtWt_EV01 [EV01] = "1"
End If
// End BUG #11654720


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Extended Volume
Event: Col Exited & Changed - Asynch
Event GUID: 9254561e-b572-4a3c-99c7-2380cfb6e97c
=============================================
// Begin BUG #11654720
If GC Extended Volume [ITVL] is not equal to <Blank>
     VA grd_cManualOverrideExtVl_EV01 [EV01] = "1"
End If
// End BUG #11654720


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC G/L Offset
Event: Col Exited & Changed - Inline
Event GUID: d5c05ed3-47c3-43d3-abee-7054b2a66def
=============================================
// SAR 7515824 - Set this flag if manually changed G\L Offset
VA grd_GLOffsetChgedManually_EV01 [EV01] = 1


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC S M
Event: Col Exited & Changed - Inline
Event GUID: a671c9f9-3dcd-4ec0-a56a-9af53b9690cd
=============================================
// SAR 5302180
If GC S M [CRMD] is equal to <Blank>
     VA frm_DtlSendMtdChanged_CRMD [CRMD] = "1"
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Objeto de Custo 1
Event: Col Exited & Changed - Asynch
Event GUID: fec4e5bd-f9ca-498c-8712-e42277681794
=============================================
// SAR 6568191 - Begin, Blank Out Adjustment Schedule if Agreement No Changed
// to blank or Null 
If GC Objeto de Custo 1 [DMCT] is equal to or empty <Blank>
     VA grd_ASN_AdjSchedule [ASN] = "        "
End If
// SAR 6568191 - End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Requisitante
Event: Post Visual Assist Clicked
Event GUID: e255eaf9-7dfa-49af-9500-5403ecdf10fa
=============================================
Suppress Default Visual Assist Form
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If PO cRequisitantes_EV01 [EV01] is equal to "S"
          Call App:P5543101 Form:W5543101G Version:Undefined
               GC Requisitante [ADD2] <> szUserID [USER]
     End If
End If

=============================================
Form: Order Detail - W4310A
Object: GC Requisitante
Event: Col is Exited
Event GUID: a5e84ec4-bbf7-4745-8ba7-95a6e25f0b45
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnAddressNumber_AN8 [AN8]
evt_szAddressType1_AT1 [AT1]
----------------------------------------
// =====================================================
// Obrigatório preenchimento do Requisitante
// =====================================================
// Issue 8084 - Valkiria - RBS - 10/06/05
// Para Viagens não faz a crítica da coluna
If PO OpcaoViagens [EV01] is equal to "1"
Else
     If GC Item Number [UITM] is greater than <Blank>
          // -----------------------------------------------------------------------------
          //  7065 -   Marilia -  ajuste IF p/não consistir  linhas canceladas/recebidas
          If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
          And GC Requisitante [ADD2] is less than or equal to <Blank>
          And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
          And GC Next Status [NXTR] is not equal to "999"
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante)
          End If
     End If
End If
//
If FC F4301:Order Type [DCTO] is equal to "OM"
     If GC Requisitante [ADD2] is equal to or empty <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante, "4980")
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 19/07/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If PO cRequisitantes_EV01 [EV01] is equal to "S"
          If GC Account Number [ANI] is not equal to <Blank>
          And GC Account Number [ANI] is not equal to <NULL>
               VA frm_szAddressType1_AT1 [AT1] = <NULL>
               F0092.Select  [Index 1: User]
                    GC Requisitante [ADD2] = TK User ID [USER]
               F0092.FetchNext  [Index 1: User]
                    VA evt_mnAddressNumber_AN8 [AN8] <- TK Address Number [AN8]
               F0101.Select  [Index 1: Address #]
                    VA evt_mnAddressNumber_AN8 [AN8] = TK Address Number [AN8]
               F0101.FetchNext  [Index 1: Address #]
                    VA frm_szAddressType1_AT1 [AT1] <- TK Search Type [AT1]
               VA evt_szAddressType1_AT1 [AT1] = "E"
               VA evt_szAddressType1_AT1 [AT1] = ltrim(rtrim([VA evt_szAddressType1_AT1 [AT1]], <Blank>), <Blank>)
               VA frm_szAddressType1_AT1 [AT1] = ltrim(rtrim([VA frm_szAddressType1_AT1 [AT1]], <Blank>), <Blank>)
               If VA frm_szAddressType1_AT1 [AT1] is not equal to VA evt_szAddressType1_AT1 [AT1]
                    Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Requisitante, "E55XML03")
               End If
          End If
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 19/07/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Sec UoM
Event: Visual Assist Button Clicked
Event GUID: 77d2e114-0e92-11d5-93c5-000629d38894
=============================================
// ---------------------------------------------------------------------------
// **** DUAL UOM Search and Select ****
// ---------------------------------------------------------------------------
// SAR 7911229 Start - To display 00/UM for J Line Type entries
//
VA frm_cInInterfaceFlag_IVI [IVI] = <NULL>
// Retrieve the Inventory Interface for the passed in LnTy.
// Begin SAR # 8947086
! If GC Ln Ty [LNTY] is not equal to <Blank>
! And GC Ln Ty [LNTY] is not equal to <NULL>
     ! GetLineTypeConstants(B4000260.GetLineTypeConstants)
     !      GC Ln Ty [LNTY] -> szLineType [LNTY]
     !      VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
     !      VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
     !      "1" -> cSuppressErrorMessage [EV01]
! End If
If GC Ln Ty [LNTY] is not equal to <Blank>
And GC Ln Ty [LNTY] is not equal to <NULL>
     GetLineTypeConstants(B4000260.GetLineTypeConstants)
          GC Ln Ty [LNTY] -> szLineType [LNTY]
          VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
          VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
          "1" -> cSuppressErrorMessage [EV01]
Else
     If PO szLineType [LNTY] is not equal to <Blank>
     And PO szLineType [LNTY] is not equal to <NULL>
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               PO szLineType [LNTY] -> szLineType [LNTY]
               VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
               VA frm_EditItmMstrforNonStk_EV01 [EV01] <- cPrintDocument3 [PDC3]
               "1" -> cSuppressErrorMessage [EV01]
     End If
End If
// End SAR # 8947086
// SAR 8832910 - Added a condition to check for Inventory interface N
If VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "A"
And VA frm_cInInterfaceFlag_IVI [IVI] is not equal to "N"
     VA frm_CallAppFlag_EV01 [EV01] = "1"
Else
     If VA frm_cInInterfaceFlag_IVI [IVI] is equal to "N"
     And VA frm_EditItmMstrforNonStk_EV01 [EV01] is equal to "1"
          VA frm_CallAppFlag_EV01 [EV01] = "1"
     End If
End If
If VA frm_CallAppFlag_EV01 [EV01] is equal to "1"
     If GC Item Number [UITM] is not equal to <Blank>
     And GC Item Number [UITM] is not equal to <NULL>
     And GC Item Number [UITM] is not equal to "0"
          If GC Branch/ Plant [MCU] is not equal to <Blank>
          And GC Branch/ Plant [MCU] is not equal to <NULL>
               VA frm_BranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
          Else
               VA frm_BranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
          End If
          // BUG 13092595 -  Modal Search and Select Clean Up
          Suppress Default Visual Assist Form
          Call App:P40100 Form:W40100A Version: 
               VA frm_BranchPlant_MCU [MCU] -> szCostCenter [MCU]
               GC Sec UoM [UOM2] <> szUnitOfMeasure [UM]
               "2" -> cExcludeFlag [EV01]
               GC Item Number [UITM] -> ItemNumber [UITM]
          // SAR 7147216
     End If
     //
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Effective Date
Event: Col Exited & Changed - Inline
Event GUID: 9ce22ec7-fe3e-42b1-b30c-a53a8c48a479
=============================================
VA frm_cPriceEffDateChgd_EV01 [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Pymt Terms
Event: Col Exited & Changed - Inline
Event GUID: f1296bb4-7a7e-4c82-9a79-fe6476782814
=============================================
// ===========================================================
// Alteração Condições de Pagamento
// ===========================================================
GC Pymt Terms [PTC] = FC Payment Terms [PTC]
// ===========================================================


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Project Number
Event: Col Exited & Changed - Inline
Event GUID: 1c6c2f6d-79f2-445e-9413-09cca4d32863
=============================================
// 
// SAR 5207385 MPM Enhancement - Disable project after entry
VA frm_szProjectError_ERRT [ERRT] = " 0"
Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ProjectNumber)
If GC Project Number [PRJM] is not equal to "0"
     F31P01ProjectAttributesSever(N31P0040.F31P01ProjectAttributesSever)
          GC Project Number [PRJM] -> mnProjectNumber [PRJM]
          UNDEFINED <> cOverrideEstimatesFlag [OVEF]
          UNDEFINED <> cJobCostBugdetUploadedFlag [JCBU]
          UNDEFINED <> cRequireActivityCode [REAF]
          UNDEFINED <> cLockWBSFlag [LWBS]
          UNDEFINED <> mnSalesOrderNumber [DOCO]
          UNDEFINED <> szSalesOrderType [DCTO]
          UNDEFINED <> szSalesOrderKeyCompany [KCOO]
          UNDEFINED <> cQuoteIsAccepted [QTAF]
          UNDEFINED <> cEstimateIsFirmed [ESFF]
          UNDEFINED <> cMPMSSProjectUsedFlag [MPJU]
          UNDEFINED <> cMPMInactiveProjectFlag [IPJF]
          UNDEFINED <> cJobCostInterfaceY/N [JBIF]
          UNDEFINED <> szProjectG/LClassCode [GLCM]
          UNDEFINED <> cLockJobCostBudget [LJOB]
          UNDEFINED <> cCommitAfterQuoteAcceptFlag [CAQA]
          UNDEFINED <> szCostCenterSubsequent [MCUS]
          UNDEFINED <> cProjectBillingMethod [PBMT]
          UNDEFINED -> szUserId [USER]
          UNDEFINED -> szProgramId [PID]
          UNDEFINED -> szWorkStationId [JOBN]
          UNDEFINED -> mnTimeLastUpdated [UPMT]
          UNDEFINED -> jdDateUpdated [UPMJ]
          "4" -> cActionCode [EV01]
          UNDEFINED <> szOrganizationTypeStructur [OSTP]
          UNDEFINED <> mnAddressNumberParent [PA8]
          UNDEFINED <> cResourceAssignmentsInterf [RSIF]
          UNDEFINED <> cConfigureLowLevelCode [CLLX]
          VA frm_szProjectError_ERRT [ERRT] <- szErrorMessageID [DTAI]
     If VA frm_szProjectError_ERRT [ERRT] is equal to "0"
     Or VA frm_szProjectError_ERRT [ERRT] is equal to <Blank>
          Disable Grid(FC Grid,  <Currently Selected Row>, GC ProjectNumber)
     Else
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ProjectNumber, VA frm_szProjectError_ERRT)
          Enable Grid(FC Grid,  <Currently Selected Row>, GC ProjectNumber)
     End If
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object Type 1
Event: Visual Assist Button Clicked
Event GUID: 1541ae41-3151-11d2-8df4-0000f6782893
=============================================
Suppress Default Visual Assist Form
Call App:P1620 Form:W1620D Version: 
     GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object 1
Event: Visual Assist Button Clicked
Event GUID: 52f4cc54-e9b7-4e49-ba97-74806e7876c9
=============================================
// SAR 6121410  Begin
Suppress Default Visual Assist Form
GetCostObjectValues(N1600160.GetCostObjectValues)
     GC Cost Object Type 1 [ABT1] -> cCostObjectType [ABT1]
     GC Cost Object 1 [ABR1] <- szCostObject [ABR1]
     UNDEFINED <> cSuppressErrorMessage [SUPPS]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cSubledgerFlag [EV01]
// SAR 6121410  End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object Type 2
Event: Visual Assist Button Clicked
Event GUID: 9580ebb0-3155-11d2-8df4-0000f6782893
=============================================
Suppress Default Visual Assist Form
Call App:P1620 Form:W1620D Version: 
     GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType1 [ABT1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object 2
Event: Visual Assist Button Clicked
Event GUID: ad5555f4-c5f7-4eba-8ae0-a616732a85ed
=============================================
// SAR 6121410  Begin
Suppress Default Visual Assist Form
GetCostObjectValues(N1600160.GetCostObjectValues)
     GC Cost Object Type 2 [ABT2] -> cCostObjectType [ABT1]
     GC Cost Object 2 [ABR2] <- szCostObject [ABR1]
     UNDEFINED <> cSuppressErrorMessage [SUPPS]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cSubledgerFlag [EV01]
// SAR 6121410  End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object Type 3
Event: Visual Assist Button Clicked
Event GUID: 9580ebb1-3155-11d2-8df4-0000f6782893
=============================================
Suppress Default Visual Assist Form
Call App:P1620 Form:W1620D Version: 
     GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType1 [ABT1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object 3
Event: Visual Assist Button Clicked
Event GUID: 75bc1dab-409c-4b7d-a5f3-c71fc15b5cec
=============================================
// SAR 6121410  Begin
Suppress Default Visual Assist Form
GetCostObjectValues(N1600160.GetCostObjectValues)
     GC Cost Object Type 3 [ABT3] -> cCostObjectType [ABT1]
     GC Cost Object 3 [ABR3] <- szCostObject [ABR1]
     UNDEFINED <> cSuppressErrorMessage [SUPPS]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cSubledgerFlag [EV01]
// SAR 6121410  End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object Type 4
Event: Visual Assist Button Clicked
Event GUID: 9580ebb2-3155-11d2-8df4-0000f6782893
=============================================
Suppress Default Visual Assist Form
Call App:P1620 Form:W1620D Version: 
     GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType1 [ABT1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Cost Object 4
Event: Visual Assist Button Clicked
Event GUID: a0074a1f-12d3-4e3c-9eeb-b1d824dcc556
=============================================
// SAR 6121410  Begin
Suppress Default Visual Assist Form
GetCostObjectValues(N1600160.GetCostObjectValues)
     GC Cost Object Type 4 [ABT4] -> cCostObjectType [ABT1]
     GC Cost Object 4 [ABR4] <- szCostObject [ABR1]
     UNDEFINED <> cSuppressErrorMessage [SUPPS]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cSubledgerFlag [EV01]
// SAR 6121410  End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Job Typ
Event: Visual Assist Button Clicked
Event GUID: 6e04721d-3af0-4b5e-95ca-e8d5e7b56cf1
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_BusinessUnit [MCU]
evt_PurchasingCostCenter [OMCU]
evt_ObjectAccount [OBJ]
evt_Subsidiary [SUB]
evt_LineType [LNTY]
evt_OrderSuffix [SFXO]
evt_DisplayP52G20S [EV01]
----------------------------------------
// 
// Use Account MCU if Populated, otherwise, use line MCU.
// 
If GC Multiple Accounts [MACT] is equal to "1"
     VA evt_PurchasingCostCenter [OMCU] = VA grd_MultipleAccounts_OMCU [OMCU]
Else
     VA evt_PurchasingCostCenter [OMCU] = GC Business Unit [OMCU]
     VA evt_ObjectAccount [OBJ] = GC Obj Acct [OBJ]
     VA evt_Subsidiary [SUB] = GC Sub  [SUB]
     // 
     If GC Branch/ Plant [MCU] is equal to or empty <Blank>
          VA evt_BusinessUnit [MCU] = FC Branch/Plant1 [MCU]
     Else
          VA evt_BusinessUnit [MCU] = GC Branch/ Plant [MCU]
     End If
     // 
     If GC Ln Ty [LNTY] is equal to or empty <Blank>
          VA evt_LineType [LNTY] = PO szLineType [LNTY]
     Else
          VA evt_LineType [LNTY] = GC Ln Ty [LNTY]
     End If
     // 
     If GC Change Order [SFXO] is equal to or empty <Blank>
          VA evt_OrderSuffix [SFXO] = "000"
     Else
          VA evt_OrderSuffix [SFXO] = GC Change Order [SFXO]
     End If
     // 
     POEntryDetermineAccount(B4303530.POEntryDetermineAccount)
          <Blank> -> cSuppressErrorMessage [SUPPS]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          VA evt_OrderSuffix [SFXO] -> szOrderSuffix [SFXO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          VA evt_BusinessUnit [MCU] -> szBranchPlant [MCU]
          GC G/L Offset [GLC] -> szGlCategory [GLPT]
          VA evt_LineType [LNTY] -> szLineType [LNTY]
          GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
          GC Objeto de Custo 1 [DMCT] -> szAgreementNumber [DMCT]
          GC Agreement Supplement [DMCS] -> mnAgreementSupplement [DMCS]
          GC Project Number [PRJM] -> mnProjectNumber [PRJM]
          GC Subledger [SBL] -> szSubledger [SBL]
          GC Sub Type [SBLT] -> cSubledgerType [SBLT]
          GC Account Number [ANI] -> szAccountNumber [ANI]
          VA evt_PurchasingCostCenter [OMCU] <> szPurchasingCostCenter [OMCU]
          VA evt_ObjectAccount [OBJ] <> szObjectAccount [OBJ]
          VA evt_Subsidiary [SUB] <> szSubsidiary [SUB]
          VA evt_DisplayP52G20S [EV01] <- cDisplayP52G20SForm [EV01]
End If
// 
If VA evt_DisplayP52G20S [EV01] is equal to "1"
     Suppress Default Visual Assist Form
     Call App:P52G20S Form:W52G20SA Version:Undefined
          VA evt_PurchasingCostCenter [OMCU] -> szCostCenter [MCU]
          GC Job Typ [JBCD] <> szJobCategory [JBCD]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Production Number
Event: Col Exited & Changed - Asynch
Event GUID: 5fec37ec-cf9d-432d-8200-0e5c9af93914
=============================================
VA grd_cProdNoChanged_EV01 [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Destinatário 1
Event: Col is Exited
Event GUID: 721c0944-6259-4020-9c49-76e7d89cca7a
=============================================
F0101.FetchSingle  [Index 1: Address #]
     GC Destinatário 1 [AN8] = TK Address Number [AN8]
     GC Nome Destinatário 1 [ALPH] <- TK Name - Alpha [ALPH]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Destinatário 2
Event: Col is Exited
Event GUID: e5f7bde1-f66d-4a1d-8d42-3c395606b4c3
=============================================
F0101.FetchSingle  [Index 1: Address #]
     GC Destinatário 2 [AN8] = TK Address Number [AN8]
     GC Nome Destinatário 2 [ALPH] <- TK Name - Alpha [ALPH]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: GC Descrição 4
Event: Col is Exited
Event GUID: f105f4e1-5c3e-4ee6-9b04-ed892a3f959d
=============================================
// -----------------------------------------------------------------------------
// INICIO - ISSUE 274344 - Camila - Obrigatório preenchimento da descrição 4 OA
// Viagem (102009)
// ISSUE 288865 - Marília - Limpar o erro + tirar cor do grid + casos cancelam.
// -----------------------------------------------------------------------------
If PO OpcaoViagens [EV01] is equal to "1"
     If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
     And GC Next Status [NXTR] is not equal to "999"
          If GC Descrição 4 [DSCPED] is equal to <Blank>
          And GC Item Number [UITM] is greater than <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 4, "5543E015")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 4)
          End If
     End If
End If
// -----------------------------------------------------------------------------
// FIM - ISSUE 274344 - Camila - Obrigatório preenchimento da descrição 4 OA
// -----------------------------------------------------------------------------


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57e017f-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_NewChangeOrderValue [CORD]
evt_cContinueFGCacheLoop_EV01 [EV01]
evt_szReadCacheError_DTAI [DTAI]
evt_FreeGoodCatalogName_CATLG [CATLG]
evt_FGItemSelected_EV01 [EV01]
evt_idFreeGoodCacheCursor [GENLNG]
evt_evt_nNumberOfWarning_INT01 [INT01]
evt_mnTomador_AN8 [AN8]
evt_mnPrestador_AN8 [AN8]
evt_szSupplementalDatabase_SDB [SDB]
evt_szTypeofData_TYDT [TYDT]
evt_szServiceTypeUtility_SRVC [SRVC]
evt_cValido_EV01 [EV01]
evt_szDescricao_DL01 [DL01]
evt_szDescricao_DCRC [DCRC]
evt_szOPERACAO_KY [KY]
evt_szCAMPO_RMK [RMK]
evt_szVALOR_RMK2 [RMK2]
evt_cRetorno_EV01 [EV01]
evt_szTipoDado_SPHD [SPHD]
evt_cO_ITEM_BORI [BORI]
evt_mnN_ITEM_ITM [ITM]
evt_szCaracter_DL01 [DL01]
evt_szP_FORNECED_CTR [CTR]
evt_szRegra_DL011 [DL011]
evt_cRetornoRegra_EV01 [EV01]
evt_mnTotPedido_OTOT [OTOT]
----------------------------------------
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 23/09/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     Press Button(FC Verifica Linhas)
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 23/09/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// Início chamado 1630622
// Bloqueio por Perfil/Usuário-Tp.Linha-Valor
// Maio 2014 - Gindri
//
If PO verificarbloqueioporvalor [EV01] is equal to "S"
     VA frm_TpLinha1 [LNTY] = <NULL>
     VA frm_VlrTotTpLinha1 [AEXPE1] = 0
     VA frm_VlrBlqTpLinha1 [AEXPE1] = 0
     VA frm_VlrLibTpLinha1 [AEXPE1] = 0
     VA frm_TpLinha2 [LNTY] = <NULL>
     VA frm_VlrTotTpLinha2 [AEXPE1] = 0
     VA frm_VlrBlqTpLinha2 [AEXPE1] = 0
     VA frm_VlrLibTpLinha2 [AEXPE1] = 0
     VA frm_TpLinha3 [LNTY] = <NULL>
     VA frm_VlrTotTpLinha3 [AEXPE1] = 0
     VA frm_VlrBlqTpLinha3 [AEXPE1] = 0
     VA frm_VlrLibTpLinha3 [AEXPE1] = 0
     VA frm_TpLinha4 [LNTY] = <NULL>
     VA frm_VlrTotTpLinha4 [AEXPE1] = 0
     VA frm_VlrBlqTpLinha4 [AEXPE1] = 0
     VA frm_VlrLibTpLinha4 [AEXPE1] = 0
     VA frm_TpLinha5 [LNTY] = <NULL>
     VA frm_VlrTotTpLinha5 [AEXPE1] = 0
     VA frm_VlrBlqTpLinha5 [AEXPE1] = 0
     VA frm_VlrLibTpLinha5 [AEXPE1] = 0
     //
     VA frm_LinhaGrid [MATH08] = 1
     Get Max Grid Rows(FC Grid, VA frm_NroLinhasGrid)
     VA frm_NroLinhasGrid [MATH08] = [VA frm_NroLinhasGrid [MATH08]]-1
     While VA frm_LinhaGrid [MATH08] is less than or equal to VA frm_NroLinhasGrid [MATH08]
          Get Grid Row(FC Grid, VA frm_LinhaGrid)
          If GC Ln Ty [LNTY] is equal to VA frm_TpLinha1 [LNTY]
          Or VA frm_TpLinha1 [LNTY] is equal to or empty <Blank>
               VA frm_TpLinha1 [LNTY] = GC Ln Ty [LNTY]
               VA frm_VlrTotTpLinha1 [AEXPE1] = [VA frm_VlrTotTpLinha1 [AEXPE1]]+[GC Extended Cost [AEXPE1]]
               If VA frm_VlrBlqTpLinha1 [AEXPE1] is equal to "0"
                    VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                         SL UserID -> Usuario [USER]
                         FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                         GC Ln Ty [LNTY] -> TpLinha [LNTY]
                         VA frm_VlrBlqTpLinha1 [AEXPE1] <- VlrLimite [BAA]
                         "B" -> TpVerificacao [EV01]
                    VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                         SL UserID -> Usuario [USER]
                         FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                         GC Ln Ty [LNTY] -> TpLinha [LNTY]
                         VA frm_VlrLibTpLinha1 [AEXPE1] <- VlrLimite [BAA]
                         "L" -> TpVerificacao [EV01]
               End If
          Else
               If GC Ln Ty [LNTY] is equal to VA frm_TpLinha2 [LNTY]
               Or VA frm_TpLinha2 [LNTY] is equal to or empty <Blank>
                    VA frm_TpLinha2 [LNTY] = GC Ln Ty [LNTY]
                    VA frm_VlrTotTpLinha2 [AEXPE1] = [VA frm_VlrTotTpLinha2 [AEXPE1]]+[GC Extended Cost [AEXPE1]]
                    If VA frm_VlrBlqTpLinha2 [AEXPE1] is equal to "0"
                         VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                              SL UserID -> Usuario [USER]
                              FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                              GC Ln Ty [LNTY] -> TpLinha [LNTY]
                              VA frm_VlrBlqTpLinha2 [AEXPE1] <- VlrLimite [BAA]
                              "B" -> TpVerificacao [EV01]
                         VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                              SL UserID -> Usuario [USER]
                              FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                              GC Ln Ty [LNTY] -> TpLinha [LNTY]
                              VA frm_VlrLibTpLinha2 [AEXPE1] <- VlrLimite [BAA]
                              "L" -> TpVerificacao [EV01]
                    End If
               Else
                    If GC Ln Ty [LNTY] is equal to VA frm_TpLinha3 [LNTY]
                    Or VA frm_TpLinha3 [LNTY] is equal to or empty <Blank>
                         VA frm_TpLinha3 [LNTY] = GC Ln Ty [LNTY]
                         VA frm_VlrTotTpLinha3 [AEXPE1] = [VA frm_VlrTotTpLinha3 [AEXPE1]]+[GC Extended Cost [AEXPE1]]
                         If VA frm_VlrBlqTpLinha3 [AEXPE1] is equal to "0"
                              VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                   SL UserID -> Usuario [USER]
                                   FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                   GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                   VA frm_VlrBlqTpLinha3 [AEXPE1] <- VlrLimite [BAA]
                                   "B" -> TpVerificacao [EV01]
                              VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                   SL UserID -> Usuario [USER]
                                   FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                   GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                   VA frm_VlrLibTpLinha3 [AEXPE1] <- VlrLimite [BAA]
                                   "L" -> TpVerificacao [EV01]
                         End If
                    Else
                         If GC Ln Ty [LNTY] is equal to VA frm_TpLinha4 [LNTY]
                         Or VA frm_TpLinha4 [LNTY] is equal to or empty <Blank>
                              VA frm_TpLinha4 [LNTY] = GC Ln Ty [LNTY]
                              VA frm_VlrTotTpLinha4 [AEXPE1] = [VA frm_VlrTotTpLinha4 [AEXPE1]]+[GC Extended Cost [AEXPE1]]
                              If VA frm_VlrBlqTpLinha4 [AEXPE1] is equal to "0"
                                   VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                        SL UserID -> Usuario [USER]
                                        FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                        GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                        VA frm_VlrBlqTpLinha4 [AEXPE1] <- VlrLimite [BAA]
                                        "B" -> TpVerificacao [EV01]
                                   VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                        SL UserID -> Usuario [USER]
                                        FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                        GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                        VA frm_VlrLibTpLinha4 [AEXPE1] <- VlrLimite [BAA]
                                        "L" -> TpVerificacao [EV01]
                              End If
                         Else
                              VA frm_TpLinha5 [LNTY] = GC Ln Ty [LNTY]
                              VA frm_VlrTotTpLinha5 [AEXPE1] = [VA frm_VlrTotTpLinha5 [AEXPE1]]+[GC Extended Cost [AEXPE1]]
                              If VA frm_VlrBlqTpLinha5 [AEXPE1] is equal to "0"
                                   VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                        SL UserID -> Usuario [USER]
                                        FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                        GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                        VA frm_VlrBlqTpLinha5 [AEXPE1] <- VlrLimite [BAA]
                                        "B" -> TpVerificacao [EV01]
                                   VerificarLimitePermitido(N5543BVL.VerificarLimitePermitido)
                                        SL UserID -> Usuario [USER]
                                        FC F4301:Order Type [DCTO] -> TpPedido [DCTO]
                                        GC Ln Ty [LNTY] -> TpLinha [LNTY]
                                        VA frm_VlrLibTpLinha5 [AEXPE1] <- VlrLimite [BAA]
                                        "L" -> TpVerificacao [EV01]
                              End If
                         End If
                    End If
               End If
          End If
          VA frm_LinhaGrid [MATH08] = [VA frm_LinhaGrid [MATH08]]+1
     End While
     VA frm_VlrTotTpLinha [AEXPE1] = ((([VA frm_VlrTotTpLinha1 [AEXPE1]]+[VA frm_VlrTotTpLinha2 [AEXPE1]])+[VA frm_VlrTotTpLinha3 [AEXPE1]])+[VA frm_VlrTotTpLinha4 [AEXPE1]])+[VA frm_VlrTotTpLinha5 [AEXPE1]]
     VA frm_VlrBlqTpLinha [AEXPE1] = ((([VA frm_VlrBlqTpLinha1 [AEXPE1]]+[VA frm_VlrBlqTpLinha2 [AEXPE1]])+[VA frm_VlrBlqTpLinha3 [AEXPE1]])+[VA frm_VlrBlqTpLinha4 [AEXPE1]])+[VA frm_VlrBlqTpLinha5 [AEXPE1]]
     VA frm_VlrLibTpLinha [AEXPE1] = ((([VA frm_VlrLibTpLinha1 [AEXPE1]]+[VA frm_VlrLibTpLinha2 [AEXPE1]])+[VA frm_VlrLibTpLinha3 [AEXPE1]])+[VA frm_VlrLibTpLinha4 [AEXPE1]])+[VA frm_VlrLibTpLinha5 [AEXPE1]]
     Clear Grid Cell Error(FC Grid,  <All Rows>, GC ExtendedCost)
     If VA frm_VlrLibTpLinha [AEXPE1] is greater than "0"
     And VA frm_VlrLibTpLinha [AEXPE1] is greater than VA frm_VlrBlqTpLinha [AEXPE1]
          VA frm_VlrBlqTpLinha [AEXPE1] = VA frm_VlrLibTpLinha [AEXPE1]
     End If
     If VA frm_VlrBlqTpLinha [AEXPE1] is greater than "0"
     And VA frm_VlrTotTpLinha [AEXPE1] is greater than VA frm_VlrBlqTpLinha [AEXPE1]
          VA frm_LinhaGrid [MATH08] = 1
          Get Max Grid Rows(FC Grid, VA frm_NroLinhasGrid)
          VA frm_NroLinhasGrid [MATH08] = [VA frm_NroLinhasGrid [MATH08]]-1
          While VA frm_LinhaGrid [MATH08] is less than or equal to VA frm_NroLinhasGrid [MATH08]
               Get Grid Row(FC Grid, VA frm_LinhaGrid)
               If GC Ln Ty [LNTY] is equal to VA frm_TpLinha1 [LNTY]
               And VA frm_VlrBlqTpLinha1 [AEXPE1] is not equal to "0"
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ExtendedCost, "5519O")
               Else
                    If GC Ln Ty [LNTY] is equal to VA frm_TpLinha2 [LNTY]
                    And VA frm_VlrBlqTpLinha2 [AEXPE1] is not equal to "0"
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ExtendedCost, "5519O")
                    Else
                         If GC Ln Ty [LNTY] is equal to VA frm_TpLinha3 [LNTY]
                         And VA frm_VlrBlqTpLinha3 [AEXPE1] is not equal to "0"
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ExtendedCost, "5519O")
                         Else
                              If GC Ln Ty [LNTY] is equal to VA frm_TpLinha4 [LNTY]
                              And VA frm_VlrBlqTpLinha4 [AEXPE1] is not equal to "0"
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ExtendedCost, "5519O")
                              Else
                                   If GC Ln Ty [LNTY] is equal to VA frm_TpLinha5 [LNTY]
                                   And VA frm_VlrBlqTpLinha5 [AEXPE1] is not equal to "0"
                                        Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ExtendedCost, "5519O")
                                   End If
                              End If
                         End If
                    End If
               End If
               VA frm_LinhaGrid [MATH08] = [VA frm_LinhaGrid [MATH08]]+1
          End While
     End If
End If
//
// Fim chamado 1630622
//
// ISSUE 7707 - Valkiria Schulte - Conta Contábil x F5543DOC
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Inicio
// Verifica regras da requisição
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
VA frm_TAM_GRID [MATH08] = "0"
VA evt_mnTotPedido_OTOT [OTOT] = 0
Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
While VA frm_TAM_GRID [MATH08] is greater than "0"
     Get Grid Row(FC Grid, VA frm_TAM_GRID)
     VA evt_mnTotPedido_OTOT [OTOT] = [VA evt_mnTotPedido_OTOT [OTOT]]+[GC Extended Cost [AEXPE1]]
     VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
End While
VA frm_cSuprimentos [EV01] = "N"
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
VA frm_TAM_GRID [MATH08] = "0"
Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
While VA frm_TAM_GRID [MATH08] is greater than "0"
     Get Grid Row(FC Grid, VA frm_TAM_GRID)
     If PO CartoesVisita [EV01] is equal to "S"
     And VA frm_TAM_GRID [MATH08] is greater than "1"
     And GC Account Number [ANI] is greater than <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, <All Columns>, "5518E")
     End If
     If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
     And GC Next Status [NXTR] is not equal to "999"
     And GC Item Number [UITM] is greater than <Blank>
     And GC Account Number [ANI] is greater than <Blank>
          // Issue 7954 - Valkiria - Não limpar erros anteriores da conta
          ! Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Account Number)
          // End Issue 7954
          ContaContabilxTipoDocumento(N5543DOC.ContaContabilxTipoDocumento)
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               VA frm_DTAI_F5543DOC [DTAI] <- szDataItem [DTAI]
               GC Account Number [ANI] -> szAcctNoInputMode [ANI]
          If VA frm_DTAI_F5543DOC [DTAI] is greater than <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, VA frm_DTAI_F5543DOC)
          End If
          // ISSUE 9485 - VALKIRIA - RBS
          If PO OpcaoCatalogo [EV01] is equal to "1"
               F41061.FetchSingle  [Index 5: Address Number, Short Item, +B]
                    FC Address Number [AN8] = TK Address Number [AN8]
                    GC Short Item No [ITM] = TK Item Number - Short [ITM]
                    GC CATN:Catalog Number(wf) [CATN] = TK Catalog [CATN]
                    VA frm_ContractNumberDistributi [DMCT] <- TK Agreement Number - Distribution [DMCT]
                    FC Currency Code [CRCD] = TK Currency Code - From [CRCD]
                    GC Tr. UoM [UOM] = TK Unit of Measure as Input [UOM]
               If VA frm_ContractNumberDistributi [DMCT] is greater than <Blank>
                    // ISSUE 292366 - Marília - verifica se liberado qualquer rubrica
                    VA frm_PrimPosRubricaLiberadaS [AA01] = substr([VA frm_ContractNumberDistributi [DMCT]], "0", "1")
                    If VA frm_PrimPosRubricaLiberadaS [AA01] is equal to "S"
                         VA frm_ContractNumberDistributi [DMCT] = ltrim([VA frm_ContractNumberDistributi [DMCT]], "S")
                         // Verificar se usuário pertence a grupo p/liberação, na UDC 55-GO
                         F0092.FetchSingle  [Index 1: User]
                              VA frm_USR0_UserID [USR0] = TK User ID [USER]
                              VA frm_MenuIdentificatF0092_MNI [MNI] <- TK Menu Identification [MNI]
                         If SV File_IO_Status is not equal to CO SUCCESS
                              VA frm_GRID_ContractNumberDistr [DMCT] = concat([GC Obj Acct [OBJ]], concat(".", [GC Sub  [SUB]]))
                              If VA frm_ContractNumberDistributi [DMCT] is not equal to VA frm_GRID_ContractNumberDistr [DMCT]
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "007Q")
                              End If
                         Else
                              VA frm_CodSY_55 [SY] = "55"
                              VA frm_CodRT_FO [RT] = "GO"
                              F0005.FetchSingle  [Index 1: System, Type, Code]
                                   VA frm_CodSY_55 [SY] = TK Product Code [SY]
                                   VA frm_CodRT_FO [RT] = TK User Defined Codes [RT]
                                   VA frm_MenuIdentificatF0092_MNI [MNI] = TK User Defined Code [KY]
                              If SV File_IO_Status is equal to CO SUCCESS
                                   // não consiste - pode ser qualquer rubrica (Grupo consta na UDC de liberação)
                              Else
                                   VA frm_GRID_ContractNumberDistr [DMCT] = concat([GC Obj Acct [OBJ]], concat(".", [GC Sub  [SUB]]))
                                   If VA frm_ContractNumberDistributi [DMCT] is not equal to VA frm_GRID_ContractNumberDistr [DMCT]
                                        Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "007Q")
                                   End If
                              End If
                         End If
                    Else
                         VA frm_GRID_ContractNumberDistr [DMCT] = concat([GC Obj Acct [OBJ]], concat(".", [GC Sub  [SUB]]))
                         If VA frm_ContractNumberDistributi [DMCT] is not equal to VA frm_GRID_ContractNumberDistr [DMCT]
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "007Q")
                         End If
                    End If
               End If
          End If
     End If
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/11/19 - Inicio
     // Verifica regras da requisição
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     If PO szVersaoR554308A [VL01] is not equal to <Blank>
     And PO szVersaoR554308A [VL01] is not equal to <NULL>
     And PO szVersaoR554308A [VL01] is not equal to "0"
          VA evt_szRegra_DL011 [DL011] = <NULL>
          F00092.Select  [Index 2: SuppDB]
               PO szCodigoRegra [SDB] = TK Supplemental Database Code [SDB]
               PO szTipoRegra [TYDT] = TK Type Data [TYDT]
               SL DateToday >= TK Date - Effective [EFT]
               SL DateToday <= TK Date - Ending Effective [EFTE]
          F00092.FetchNext  [Index 2: SuppDB]
               VA evt_szOPERACAO_KY [KY] <- TK User Defined Code [KY]
               VA evt_szCAMPO_RMK [RMK] <- TK Name - Remark [RMK]
               VA evt_szVALOR_RMK2 [RMK2] <- TK Name - Remark [RMK2]
          While SV File_IO_Status is equal to CO SUCCESS
               VA evt_cRetorno_EV01 [EV01] = <NULL>
               If VA evt_szOPERACAO_KY [KY] is equal to "("
                    VA evt_cRetorno_EV01 [EV01] = "("
               Else
                    If VA evt_szOPERACAO_KY [KY] is equal to ")"
                         VA evt_cRetorno_EV01 [EV01] = ")"
                    Else
                         If VA evt_szOPERACAO_KY [KY] is equal to "AND"
                              VA evt_cRetorno_EV01 [EV01] = "A"
                         Else
                              If VA evt_szOPERACAO_KY [KY] is equal to "OR"
                                   VA evt_cRetorno_EV01 [EV01] = "O"
                              Else
                                   GetUDC(X0005.GetUDC)
                                        "57" -> szSystemCode [SY]
                                        "RC" -> szRecordTypeCode [RT]
                                        VA evt_szCAMPO_RMK [RMK] -> szUserDefinedCode [KY]
                                        VA evt_szTipoDado_SPHD [SPHD] <> szSpecialHandlingCode [SPHD]
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "C_CUSTO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Business Unit [OMCU] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "C_FORNECED"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Address Number [AN8] -> mnEntradaNumerico [AEXP]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "C_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Obj Acct [OBJ] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "D_ENTREGA"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Scheduled Pick [PDDJ] -> jdEntradaData [UPMJ]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "D_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Order Date [TRDJ] -> jdEntradaData [UPMJ]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "F_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Branch/Plant [MCU] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "L_POR"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             SL UserID -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "N_ALOCACAO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Número Alocação [N001] -> mnEntradaNumerico [AEXP]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "O_ITEM"
                                        F4101.FetchSingle  [Index 2: 2nd Item Number]
                                             VA evt_mnN_ITEM_ITM [ITM] <- TK Item Number - Short [ITM]
                                             GC Item Number [UITM] = TK 2nd Item Number [LITM]
                                        F76411.FetchSingle  [Index 1: IdentifierShortItem]
                                             VA evt_mnN_ITEM_ITM [ITM] = TK Item Number - Short [ITM]
                                             VA evt_cO_ITEM_BORI [BORI] <- TK Item Origin [BORI]
                                        VA evt_szCaracter_DL01 [DL01] = [VA evt_cO_ITEM_BORI [BORI]]
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             VA evt_szCaracter_DL01 [DL01] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "P_FORNECED"
                                        F0116.Select  [Index 1: Address #, Date Eff]
                                             FC Address Number [AN8] = TK Address Number [AN8]
                                        F0116.FetchNext  [Index 1: Address #, Date Eff]
                                             VA evt_szP_FORNECED_CTR [CTR] <- TK Country [CTR]
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             VA evt_szP_FORNECED_CTR [CTR] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "R_ENTREGA"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Ship To [SHAN] -> mnEntradaNumerico [AEXP]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "R_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Requisitante [ADD2] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "S_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Sub  [SUB] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "T_LINHA"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Ln Ty [LNTY] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "T_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC F4301:Order Type [DCTO] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "T_FRETE"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             FC Freight Handling Code [FRTH] -> szEntradaString [DL011]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "V_LINHA"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             GC Extended Cost [AEXPE1] -> mnEntradaNumerico [AEXP]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                                   If VA evt_szCAMPO_RMK [RMK] is equal to "V_PEDIDO"
                                        InterpretaRegra(N554308.InterpretaRegra)
                                             VA evt_mnTotPedido_OTOT [OTOT] -> mnEntradaNumerico [AEXP]
                                             VA evt_szOPERACAO_KY [KY] -> szOperador [RMK]
                                             VA evt_szVALOR_RMK2 [RMK2] -> szValor [RMK]
                                             VA evt_cRetorno_EV01 [EV01] <- cRetorno [EV01]
                                             VA evt_szTipoDado_SPHD [SPHD] -> szTipo [SPHD]
                                   End If
                              End If
                         End If
                    End If
               End If
               If VA evt_cRetorno_EV01 [EV01] is not equal to <Blank>
               And VA evt_cRetorno_EV01 [EV01] is not equal to <NULL>
                    VA evt_szRegra_DL011 [DL011] = concat([VA evt_szRegra_DL011 [DL011]], [VA evt_cRetorno_EV01 [EV01]])
               End If
               F00092.FetchNext  [Index 2: SuppDB]
                    VA evt_szOPERACAO_KY [KY] <- TK User Defined Code [KY]
                    VA evt_szCAMPO_RMK [RMK] <- TK Name - Remark [RMK]
                    VA evt_szVALOR_RMK2 [RMK2] <- TK Name - Remark [RMK2]
          End While
          ResolveRegra(N554308.ResolveRegra)
               VA evt_szRegra_DL011 [DL011] <> szRegra [DL011]
               VA evt_cRetornoRegra_EV01 [EV01] <- cResultado [EV01]
          If VA evt_cRetornoRegra_EV01 [EV01] is equal to "1"
               VA frm_cSuprimentos [EV01] = "S"
          End If
     End If
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/11/19 - Inicio
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
End While
//
// END ISSUE 7707
//
// *****************************************************************************
// INICIO - ISSUE 7065 - MARÍLIA - Consiste CHIS x Descr. Histórico
// *****************************************************************************
//                                Liga Flag p/não consistir histórico antigo
//
If FC Order Number [DOCO] is greater than "0"
And PO cProhibitChanges [EV01] is equal to "1"
     F55UI020.Select  [Index 1: Primary]
          FC Order Number [DOCO] = TK Document (Voucher, Invoice, etc.) [DOC]
          FC F4301:Order Type [DCTO] = TK Document Type [DCT]
          FC Order Company [KCOO] = TK Document Company [KCO]
     F55UI020.FetchNext  [Index 1: Primary]
          VA frm_CO [CO] <- TK Document Company [KCO]
     If SV File_IO_Status is not equal to CO SUCCESS
          F5598010.Select  [Index 1: VoucherWFDate]
               FC Order Company [KCOO] = TK Document Company [KCO]
               FC F4301:Order Type [DCTO] = TK Document Type [DCT]
               FC Order Number [DOCO] = TK Document (Voucher, Invoice, etc.) [DOC]
          F5598010.FetchNext  [Index 1: VoucherWFDate]
               VA frm_CO [CO] <- TK Document Company [KCO]
     End If
     If SV File_IO_Status is equal to CO SUCCESS
          // linhas protegidas - não pode alterar/acrescentar (já em alçadas)
          VA frm_FlagSoConsulta_EV01 [EV01] = "S"
     Else
          VA frm_FlagSoConsulta_EV01 [EV01] = "N"
     End If
Else
     // ADD ou COPY (novo)
     VA frm_FlagSoConsulta_EV01 [EV01] = "N"
End If
//
VA frm_FlagHistoricoF5543ICO_EV01 [EV01] = "N"
VA frm_FlagHistNaoCad_EV01 [EV01] = "0"
VA frm_ErroHistorico [AA01] = "N"
VA frm_ERRORBS [EV01] = <NULL>
VA frm_TAM_GRID [MATH08] = "0"
Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
While VA frm_TAM_GRID [MATH08] is greater than "0"
     Get Grid Row(FC Grid, VA frm_TAM_GRID)
     // =====
     If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
     Or GC Next Status [NXTR] is equal to "999"
          //      7065 -   Marilia -     não consiste as linhas canceladas, nem recebidas
          ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>,  <All Columns>)
     Else
          //
          VA frm_HistoricoGCAA03 [AA03] = [GC CHIS [CHIS]]
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS)
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
          VA frm__AchouCerto [AA01] = "N"
          VA frm_ErroHistorico [AA01] = "N"
          //
          If GC Account Number [ANI] is not equal to <Blank>
          And GC Account Number [ANI] is not equal to <NULL>
               ValidateAccountNumber(XX0901.ValidateAccountNumber)
                    GC Account Number [ANI] -> szAccountNumber [ANI]
                    VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
                    VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
                    "7" -> cBasedOnFormat [EV01]
                    VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
               //
               F5509HIS.Select  [Index 1: Índice]
                    VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
               F5509HIS.FetchNext  [Index 1: Índice]
                    VA frm_CompanyHIS [CO] <- TK Company [CO]
                    VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                    VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                    VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
               While SV File_IO_Status is equal to CO SUCCESS
                    If VA frm_ExigeAA01 [AA01] is equal to "S"
                         If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                         Or VA frm_CompanyHIS [CO] is equal to "*"
                              If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
                              Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                                   If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                                   Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                                        VA frm_ErroHistorico [AA01] = "N"
                                        // -----------------------------------------------------------------------------
                                        // ISSUE 7065.01 - Marília - limpa erro, pois histórico pode não ser o primeiro
                                        Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS)
                                        // -----------------------------------------------------------------------------
                                        VA frm__AchouCerto [AA01] = "S"
                                        Consiste_hist_padrao(N5509HIS.Consiste_hist_padrao)
                                             GC Explanation -Remark- [EXR] -> HISTORICO [RMK]
                                             VA frm_ERRORBS [EV01] <- ERRO_V1 [EV01]
                                             VA frm_COD_ERRO [AA05] <- COD_ERRO [AA05]
                                        If VA frm_ERRORBS [EV01] is equal to "1"
                                        And VA frm_FlagSoConsulta_EV01 [EV01] is equal to "N"
                                             Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, VA frm_COD_ERRO)
                                        End If
                                        // ---------------------------------------------------------
                                        If VA frm_ERRORBS [EV01] is not equal to "1"
                                             VA frm_RBSCod_HistoricoAux_CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                             If GC CHIS [CHIS] is less than or equal to "0"
                                                  VA frm_HIST4POS [EV01] = substr([GC Explanation -Remark- [EXR]], "3", "1")
                                                  ! If VA frm_HIST4POS [EV01] is equal to "*"
                                                       VA frm_RBS3PosRemark_AA03 [AA03] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                                       VA frm_SY [SY] = "55"
                                                       VA frm__RT [RT] = "HI"
                                                       VA frm__KY [KY] = concat("       ", lpad([VA frm_RBS3PosRemark_AA03 [AA03]], "0", "3"))
                                                       F0005.FetchSingle  [Index 1: System, Type, Code]
                                                            VA frm_SY [SY] = TK Product Code [SY]
                                                            VA frm_RT [RT] = TK User Defined Codes [RT]
                                                            VA frm_KY [KY] = TK User Defined Code [KY]
                                                            VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
                                                       If SV File_IO_Status is equal to CO SUCCESS
                                                            GC CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                                       Else
                                                            If VA frm_FlagSoConsulta_EV01 [EV01] is equal to "N"
                                                                 VA frm_FlagHistNaoCad_EV01 [EV01] = "1"
                                                                 Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                                            End If
                                                       End If
                                                  ! End If
                                             Else
                                                  If GC CHIS [CHIS] is not equal to VA frm_RBSCod_HistoricoAux_CHIS [CHIS]
                                                  And VA frm_FlagSoConsulta_EV01 [EV01] is equal to "N"
                                                       VA frm_FlagHistNaoCad_EV01 [EV01] = "1"
                                                       Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                                  End If
                                             End If
                                        End If
                                        // ---------------------------------------------------------
                                   Else
                                        If VA frm__AchouCerto [AA01] is equal to "S"
                                        Else
                                             If VA frm_FlagSoConsulta_EV01 [EV01] is equal to "N"
                                                  VA frm_ErroHistorico [AA01] = "S"
                                                  Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554101")
                                             Else
                                             End If
                                        End If
                                   End If
                              End If
                         End If
                    End If
                    F5509HIS.FetchNext  [Index 1: Índice]
                         VA frm_CompanyHIS [CO] <- TK Company [CO]
                         VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                         VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                         VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
               End While
               //
               //  liga flag para gravar a F5543ICO se pelo menos umas das linhas houve
               // Histórico padrão.
               If VA frm__AchouCerto [AA01] is equal to "S"
                    VA frm_FlagHistoricoF5543ICO_EV01 [EV01] = "S"
               End If
          End If
     End If
     //
     VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
End While
//
If VA frm_ErroHistorico [AA01] is equal to "S"
Or VA frm_ERRORBS [EV01] is equal to "1"
Or VA frm_FlagHistNaoCad_EV01 [EV01] is equal to "1"
     If VA frm_FlagSoConsulta_EV01 [EV01] is equal to "N"
          Stop Processing
     End If
End If
// *****************************************************************************
// FIM  - ISSUE 7065 - MARÍLIA - Consiste CHIS x Descr. Histórico
// *****************************************************************************
//
// =============================================================
// ALTERAÇÕES SERGIO BENCKE - RBS
// =============================================================
//
VA frm_ERRO_NO_OK [EV01] = "N"
//
//
// SERGIO BENCKE - 19/10/00 - ISSUE 3100
//
// ----------------------------------------------------------
//  Issue 6711 - Fernando Herrera - Início - 28/01/2004
VA frm_FlagGravaF5543ICO [EV01] = "N"
VA frm_ValorNaAlocacao [AEXPE1] = 0
//  Issue 6711 - Fernando Herrera - FIM
//
VA frm_Primeira_Chamada [EV01] = "S"
Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
VA frm_NroLinhasGrid [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
While VA frm_TAM_GRID [MATH08] is greater than "0"
     Get Grid Row(FC Grid, VA frm_TAM_GRID)
     VA frm_ValorNoAID [AA] = 0
     VA frm_ValorNaAlocacao [AEXPE1] = 0
     VA frm_NroAlocacao [N001] = GC Número Alocação [N001]
     VA frm_Projeto [PROJE] = substr([GC Projeto Rubrica [VR01]], "0", "4")
     VA frm_Rubrica [RUBRI] = substr([GC Projeto Rubrica [VR01]], "4", "4")
     VA frm_NroConta [ANI] = GC Account Number [ANI]
     VA frm_DtContabilAID [DGJ] = last_day([GC G/L Date [DGL]])
     VA frm_ContaOBJ [OBJ] = GC Obj Acct [OBJ]
     VA frm_CtaS3 [AA03] = GC Obj Acct [OBJ]
     VA frm__SY [SY] = "55"
     VA frm__RT [RT] = "VA"
     VA frm__KY [KY] = "9999999999"
     F0005.FetchSingle  [Index 1: System, Type, Code]
          VA frm__SY [SY] = TK Product Code [SY]
          VA frm__RT [RT] = TK User Defined Codes [RT]
          VA frm__KY [KY] = TK User Defined Code [KY]
          VA frm_NivelValidacao [SPHD] <- TK Special Handling Code - User Def Codes [SPHD]
     VA frm__KY [KY] = [GC Número Alocação [N001]]
     F0005.FetchSingle  [Index 1: System, Type, Code]
          VA frm__SY [SY] = TK Product Code [SY]
          VA frm__RT [RT] = TK User Defined Codes [RT]
          VA frm__KY [KY] = TK User Defined Code [KY]
          VA frm_NivelValidacao [SPHD] <- TK Special Handling Code - User Def Codes [SPHD]
     // ------ ISSUE 309691 - 17/12/09 - Marília - Ajustes solicitados
     VA frm_FlagCancelandoLinha_EV01 [EV01] = <NULL>
     // ------ ISSUE 309691 - 17/12/09 - Marília - Ajustes solicitados
     VA frm_Linha [MATH08] = 1
     While VA frm_Linha [MATH08] is less than or equal to VA frm_NroLinhasGrid [MATH08]
          Get Grid Row(FC Grid, VA frm_Linha)
          VA frm_ProjetoAux [PROJE] = substr([GC Projeto Rubrica [VR01]], "0", "4")
          VA frm_RubricaAux [RUBRI] = substr([GC Projeto Rubrica [VR01]], "4", "4")
          VA frm_DtContabilAux [DGJ] = last_day([GC G/L Date [DGL]])
          If GC Account Number [ANI] is equal to VA frm_NroConta [ANI]
          And VA frm_DtContabilAux [DGJ] is equal to VA frm_DtContabilAID [DGJ]
               VA frm_ValorNoAID [AA] = [VA frm_ValorNoAID [AA]]+[GC Extended Cost [AEXPE1]]
          End If
          If VA frm_NivelValidacao [SPHD] is equal to "RUBRICA"
               VA frm_ContaOBJ [OBJ] = GC Obj Acct [OBJ]
          Else
               If VA frm_NivelValidacao [SPHD] is equal to "PROJETO"
                    VA frm_Rubrica [RUBRI] = VA frm_RubricaAux [RUBRI]
                    VA frm_ContaOBJ [OBJ] = GC Obj Acct [OBJ]
               Else
                    If VA frm_NivelValidacao [SPHD] is equal to "INVSTMTO"
                         VA frm_Projeto [PROJE] = VA frm_ProjetoAux [PROJE]
                         VA frm_Rubrica [RUBRI] = VA frm_RubricaAux [RUBRI]
                         VA frm_ContaOBJ [OBJ] = GC Obj Acct [OBJ]
                    End If
               End If
          End If
          If GC Número Alocação [N001] is equal to VA frm_NroAlocacao [N001]
          And VA frm_ProjetoAux [PROJE] is equal to VA frm_Projeto [PROJE]
          And VA frm_RubricaAux [RUBRI] is equal to VA frm_Rubrica [RUBRI]
          And GC Obj Acct [OBJ] is equal to VA frm_ContaOBJ [OBJ]
               If GC Cancel Date [CNDJ] is equal to Null Date
               And GC Last Status [LTTR] is not equal to "980"
                    VA frm_ValorNaAlocacao [AEXPE1] = [VA frm_ValorNaAlocacao [AEXPE1]]+[GC Extended Cost [AEXPE1]]
               End If
          End If
          // ------ ISSUE 309691 - 17/12/09 - Marília - Ajustes solicitados
          If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
               VA frm_FlagCancelandoLinha_EV01 [EV01] = "S"
          End If
          // ------ ISSUE 309691 - 17/12/09 -Marília - Ajustes solicitados
          VA frm_Linha [MATH08] = [VA frm_Linha [MATH08]]+1
     End While
     Get Grid Row(FC Grid, VA frm_TAM_GRID)
     //
     // Chamado 1684993 - Validação conta investimento - Camila 08/2014
     If GC Account Number [ANI] is not equal to <Blank>
     And GC Account Number [ANI] is not equal to <NULL>
          Get Max Grid Rows(FC Grid, VA frm_GridMax)
          VA frm_NroLinha [MATH08] = 1
          While VA frm_NroLinha [MATH08] is less than VA frm_GridMax [MATH08]
               Get Grid Row(FC Grid, VA frm_NroLinha)
               ValidateAccountNumber(XX0901.ValidateAccountNumber)
                    GC Account Number [ANI] -> szAccountNumber [ANI]
                    VA frm_RBS_ContaID [AID] <- szAccountID [AID]
                    VA frm_ObjPC [OBJ] <- szDatabaseObject [OBJ]
                    VA frm_SubPC [SUB] <- szDatabaseSubsidiary [SUB]
                    VA frm_McuPC [MCU] <- szDisplayBusinessUnit [MCUR]
                    "7" -> cBasedOnFormat [EV01]
                    VA frm_CoPC [CO] <- szAccountCompany [CO]
               F0901.FetchSingle  [Index 3: Account Id]
                    VA frm_RBS_ContaID [AID] = TK Account ID [AID]
                    VA frm_RBS_IndCtaInvstmntos [R020] <- TK Category Code - G/L20 [R020]
               If VA frm_RBS_IndCtaInvstmntos [R020] is not equal to <Blank>
               And VA frm_RBS_IndCtaInvstmntos [R020] is not equal to <NULL>
                    If GC Projeto Rubrica [VR01] is equal to or empty <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica, "55181")
                    End If
                    If GC Número Alocação [N001] is equal to or empty <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, "5518H")
                    End If
               End If
               VA frm_NroLinha [MATH08] = [VA frm_NroLinha [MATH08]]+1
          End While
     End If
     // #Fim# Chamado 1684993 - Validação conta investimento - Camila 08/2014
     // =====
     // Chamado 155678 - Grava F5543ICO  - Camila 08/2014
     // Grava F5543ICO - Inf Valor Orçamento \Valor Cotação \Família compras
     //
     If PO cCampo_Primeira_CotacaoEV01 [EV01] is equal to "S"
     Or PO szOrderType [DCT] is equal to ("OF","OM")
          Get Max Grid Rows(FC Grid, VA frm_GridMax)
          VA frm_NroLinha [MATH08] = 1
          While VA frm_NroLinha [MATH08] is less than VA frm_GridMax [MATH08]
               Get Grid Row(FC Grid, VA frm_NroLinha)
               If GC Orçamento [PRRC] is not equal to <Blank>
               And GC Orçamento [PRRC] is not equal to <NULL>
               And GC Orçamento [PRRC] is not equal to "0"
                    VA frm_FlagGravaF5543ICO [EV01] = "S"
               Else
                    If GC Descrição Família Compras [DSE2] is not equal to <Blank>
                    And GC Descrição Família Compras [DSE2] is not equal to <NULL>
                         VA frm_FlagGravaF5543ICO [EV01] = "S"
                    Else
                         If GC Valor 1º. Cotação [FRRC] is not equal to <Blank>
                         And GC Valor 1º. Cotação [FRRC] is not equal to <NULL>
                         And GC Valor 1º. Cotação [FRRC] is not equal to "0"
                              VA frm_FlagGravaF5543ICO [EV01] = "S"
                         End If
                    End If
               End If
               //
               If PO szOrderType [DCT] is equal to ("OF","OM")
                    If GC Descrição Família Compras [DSE2] is equal to or empty <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC DescriçãoFamília Compras, "57OB")
                    End If
               End If
               //
               If FC F4301:Order Type [DCTO] is equal to "OM"
                    If GC Requisitante [ADD2] is equal to or empty <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante, "4980")
                    End If
               End If
               VA frm_NroLinha [MATH08] = [VA frm_NroLinha [MATH08]]+1
          End While
     End If
     // #Fim# Chamado 155678 - Grava F5543ICO  - Camila 08/2014
     //
     If FC email [EMAL] is not equal to <Blank>
     And FC email [EMAL] is not equal to <NULL>
          VA frm_FlagGravaF5543ICO [EV01] = "S"
     End If
     // ------ ISSUE 288865 - Marília - inclusão teste PO qdo. cancelamento
     If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
     Or GC Next Status [NXTR] is equal to "999"
          //      7065 -   Marilia -     não consiste as linhas canceladas, nem recebidas
          ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>,  <All Columns>)
     Else
          // -----------------------------------------------------------------------------
          // INICIO - ISSUE 274337 - Camila - Consistir rubricas digitadas
          // ISSUE 288865 - Marília -  (troca de lugar + ajustes)
          // ISSUE 469511 - Dionatan Irigaray -Consitência na VI0006 rubrica 302.06
          // -----------------------------------------------------------------------------
          //
          If PO OpcaoViagens [EV01] is equal to "1"
               ! If PO szStatusCodeLast [LTTR] is equal to PO cNotifyQuantityChanges [EV01]
               ! And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
               ! And GC Next Status [NXTR] is not equal to "999"
               ! End If
               // ------ ISSUE 309691 - 17/12/09 - Marília - Incluído últ. AND no IF abaixo
               If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
               And GC Next Status [NXTR] is not equal to "999"
               And VA frm_FlagCancelandoLinha_EV01 [EV01] is not equal to "S"
                    VA frm_Valida_RubricaTeste [AA14] = substr([GC Account Number [ANI]], "8", "6")
                    If GC Item Number [UITM] is equal to ("VI0001","VI0005","VI0006","VI0011","VI0012")
                    And VA frm_Valida_RubricaTeste [AA14] is not equal to "302.06"
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
                    End If
                    If GC Item Number [UITM] is equal to ("VI0003")
                    And VA frm_Valida_RubricaTeste [AA14] is not equal to "303.04"
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
                    End If
                    If GC Item Number [UITM] is equal to ("VI0002","VI0004","VI0008","VI0010")
                    And VA frm_Valida_RubricaTeste [AA14] is not equal to "302.05"
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, "5543E014")
                    End If
                    If GC Descrição 4 [DSCPED] is equal to <Blank>
                    And GC Item Number [UITM] is greater than <Blank>
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 4, "5543E015")
                    End If
               End If
          End If
          //
          //
          // -----------------------------------------------------------------------------
          // FIM - ISSUE 274337 - Camila - Consistir rubricas digitadas
          // -----------------------------------------------------------------------------
          //
          VA frm_OBJW [OBJ] = GC Obj Acct [OBJ]
          VA frm_SUBW [SUB] = GC Sub  [SUB]
          VA frm_CTA13 [AA02] = substr(ltrim([VA frm_OBJW [OBJ]], <Blank>), "0", "2")
          If VA frm_OBJW [OBJ] is less than or equal to <Blank>
          And VA frm_SUBW [SUB] is less than or equal to <Blank>
          Else
               //
               // SERGIO BENCKE - INICIALIZA BF PARA VERIFICAR SE CONTA É AQUISIÇÃO
               //
               If GC Account Number [ANI] is not equal to <Blank>
               And GC Account Number [ANI] is not equal to <NULL>
                    F0006.FetchSingle  [Index 1: Cost Center]
                         FC Branch/Plant1 [MCU] = TK Business Unit [MCU]
                         VA frm_CompanyMCU [CO] <- TK Company [CO]
                         VA frm_CostCenterSubsequent [MCUS] <- TK Business Unit - Subsequent [MCUS]
                    If SV File_IO_Status is equal to CO ERROR
                         VA frm_CompanyMCU [CO] = "            "
                    End If
                    //
                    VA frm_AcctNoInputModeAux [ANI] = GC Account Number [ANI]
                    ValidateAccountNumber(XX0901.ValidateAccountNumber)
                         VA frm_AcctNoInputModeAux [ANI] -> szAccountNumber [ANI]
                         VA frm_CostCenterConta [MCU] <- szDatabaseBusinessUnit [MCU]
                         VA frm_OBJW [OBJ] <- szDatabaseObject [OBJ]
                         VA frm_SUBW [SUB] <- szDatabaseSubsidiary [SUB]
                         "7" -> cBasedOnFormat [EV01]
                         <Blank> <> cFormatAccountNumberAs [EV02]
                         VA frm_CompanyConta [CO] <- szAccountCompany [CO]
                    //
               End If
               F0012GetAAIRangeOfAccounts(B0000115.F0012GetAAIRangeOfAccounts)
                    VA frm_CompanyMCU [CO] -> szCompany [CO]
                    "FC" -> szItemAAI [ITEM]
                    VA frm_ErrorGetRange [EV01] <- cWithInRangeFlag [EV01]
               If VA frm_ErrorGetRange [EV01] is equal to "1"
                    VA frm_Primeira_Chamada [EV01] = "N"
               End If
               F0901.FetchSingle  [Index 2: Business Unit, Object, +]
                    GC Business Unit [OMCU] = TK Business Unit [MCU]
                    GC Obj Acct [OBJ] = TK Object Account [OBJ]
                    GC Sub  [SUB] = TK Subsidiary [SUB]
                    VA frm_CCODE20 [R020] <- TK Category Code - G/L20 [R020]
               If VA frm_CCODE20 [R020] is not equal to "D"
                    AAIRangeOfAccountsCompare(B0000115.AAIRangeOfAccountsCompare)
                         VA frm_CompanyMCU [CO] -> szCompany [CO]
                         "FC" -> szItemAAI [ITEM]
                         VA frm_OBJW [OBJ] -> szObject [OBJ]
                         VA frm_SUBW [SUB] -> szSubsidiary [SUB]
                         VA frm_Conta_Esta_No_Interv [EV01] <- cWithInRangeFlag [EV01]
                    If VA frm_Conta_Esta_No_Interv [EV01] is equal to "1"
                    Or VA frm_CTA13 [AA02] is equal to "13"
                         VA frm_MCUW [MCU] = ltrim([GC Centro de Respons. [VR02]], <Blank>)
                         VA frm_AA18 [AA18] = substr(ltrim([GC Centro de Respons. [VR02]], <Blank>), "7", "18")
                         VA frm_COW [CO] = lpad(substr([VA frm_MCUW [MCU]], "0", "3"), "0", "5")
                         VA frm_MCUW [MCU] = concat("     ", substr([VA frm_MCUW [MCU]], "0", "7"))
                         F0006.FetchSingle  [Index 1: Cost Center]
                              VA frm_MCUW [MCU] = TK Business Unit [MCU]
                         If SV File_IO_Status is equal to CO SUCCESS
                         And VA frm_AA18 [AA18] is less than or equal to <Blank>
                              If VA frm_COW [CO] is not equal to VA frm_CompanyMCU [CO]
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Centro deRespons., "55106")
                                   VA frm_ERRO_NO_OK [EV01] = "S"
                              Else
                              End If
                         Else
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Centro deRespons., "55105")
                              VA frm_ERRO_NO_OK [EV01] = "S"
                         End If
                    End If
               End If
               //
               // ------ ISSUE 309691 - 17/12/09 - Marília - Incluído IF abaixo
               // ----- ISSUE 798527- Marília - Incluído último teste no IF abaixo
               If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
               And GC Next Status [NXTR] is not equal to "999"
               And VA frm_FlagCancelandoLinha_EV01 [EV01] is not equal to "S"
               And SV Form_ Mode is not equal to CO UPDATE_MODE
                    // ------
                    // Issue 10278 - Luiz Gindri - 01/07/2008
                    Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação)
                    Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica)
                    Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 1)
                    Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 2)
                    ValidacaoAlocacao(N5509INV.ValidacaoAlocacao)
                         GC Account Number [ANI] -> CtaContabil [ANI]
                         GC Business Unit [OMCU] -> CCusto [MCU]
                         GC Obj Acct [OBJ] -> CtaObjeto [OBJ]
                         GC Sub  [SUB] -> CtaDetalhe [SUB]
                         VA frm_CCODE20 [R020] <- R020 [R020]
                         GC Número Alocação [N001] -> NroAlocacao [N001]
                         GC Projeto Rubrica [VR01] -> ProjetoRubrica [CN]
                         VA frm_CodErroAlocaoProjRubrica [DTAI] <- Erro [DTAI]
                         VA frm_Local_Erro [UKERRO] <- Local_Erro [UKERRO]
                         VA frm_ValorNaAlocacao [AEXPE1] -> Valor [AA]
                         "0" -> ValorImobilizacao [AN01]
                         "V" -> cInd_Operacao [IDOP]
                         FC Order Company [KCOO] -> szCompanyKey [KCO]
                         FC F4301:Order Type [DCTO] -> szDocumentType [DCT]
                         FC Order Number [DOCO] -> mnDocVoucherInvoiceE [DOC]
                         FC G/L Date [DGL] -> jdDateForGLandVoucherJULIA [DGJ]
                         "F4311" -> szTableName [LRSTN]
                    If PO cInvest [AA01] is equal to "S"
                    And VA frm_CodErroAlocaoProjRubrica [DTAI] is not equal to <Blank>
                         If VA frm_Local_Erro [UKERRO] is equal to "1"
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, VA frm_CodErroAlocaoProjRubrica)
                         Else
                              If VA frm_Local_Erro [UKERRO] is equal to "2"
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica, VA frm_CodErroAlocaoProjRubrica)
                              Else
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC NúmeroAlocação, VA frm_CodErroAlocaoProjRubrica)
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ProjetoRubrica, VA frm_CodErroAlocaoProjRubrica)
                              End If
                         End If
                    End If
                    If GC Projeto Rubrica [VR01] is not equal to <Blank>
                         //  Issue 6711 - Fernando Herrera - Início - 28/01/2004
                         //  Issue 6711 - Consistência dos campos Detinatários Obrigatórios
                         // e liga flag para gravar a F5543ICO se pelo menos umas das linhas houve
                         // Projeto/Rubrica
                         VA frm_FlagGravaF5543ICO [EV01] = "S"
                         If GC Destinatário 1 [AN8] is not equal to "0"
                              If GC Destinatário 2 [AN8] is not equal to "0"
                              Else
                                   Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 2, "5516C")
                              End If
                         Else
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 1, "5516C")
                         End If
                         //  Issue 6711 - Fernando Herrera - Final
                    End If
                    // Fim Issue 10278
                    //
                    //
                    // Dionatan Silveira - Desabilitado Migraçao 9.1 - Não se faz mais Necessário
                    // Issue 10536 - Luiz Gindri - 17/12/2008
                    ! If PO bloquearlanctosnaoorcados [EV01] is equal to "S"
                         ! F0901.FetchSingle  [Index 10: Business Unit, Sub, Object]
                         !      VA frm_AccountId [AID] <- TK Account ID [AID]
                         !      GC Business Unit [OMCU] = TK Business Unit [MCU]
                         !      GC Obj Acct [OBJ] = TK Object Account [OBJ]
                         !      GC Sub  [SUB] = TK Subsidiary [SUB]
                         ! ValidarExecXOrcDespesas(N5514DSP.ValidarExecXOrcDespesas)
                         !      FC Order Company [KCOO] -> szCompanyKey [KCO]
                         !      FC F4301:Order Type [DCTO] -> szDocumentType [DCT]
                         !      FC Order Number [DOCO] -> mnDocVoucherInvoiceE [DOC]
                         !      VA frm_AccountId [AID] -> szAccountId [AID]
                         !      GC G/L Date [DGL] -> jdDateForGLandVoucherJULIA [DGJ]
                         !      VA frm_ValorNoAID [AA] <> ValorGrid [AA]
                         !      VA frm_ValorRzContabilidade [AA] <> ValorRzContabiildade [AA]
                         !      VA frm_ValorCompras [AA] <> ValorCompras [AA]
                         !      VA frm_ValorSlContabilidade [AA] <> ValorSlContabilidade [AA]
                         !      VA frm_ErroValidacaoOrcamento [DTAI] <> Erro [DTAI]
                         ! If VA frm_ErroValidacaoOrcamento [DTAI] is not equal to <Blank>
                              ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Account Number, VA frm_ErroValidacaoOrcamento)
                         ! End If
                    ! End If
                    // Fim Issue 10536
               End If
               //
               ! //
               ! // SERGIO BENCKE - ISSUE 2906 - CONSISTE PROJETO/RUBRICA NO CAMPO VR01
               ! //
          End If
     End If
     //
     // -----------------------------------------------------------------------------
     //  ISSUE 7385 - Marilia  - p/ gravar Descrição 4 na F5543ICO (no POST Clicked)
     //    liga flag para gravar a F5543ICO se pelo menos umas das linhas,
     //    houve Descrição 4 (DSCPED) digitada - se Flag ainda não ligado.
     If VA frm_FlagGravaF5543ICO [EV01] is not equal to "S"
          If GC Descrição 4 [DSCPED] is not equal to <Blank>
          And GC Descrição 4 [DSCPED] is not equal to <NULL>
               VA frm_FlagGravaF5543ICO [EV01] = "S"
               // ----- ISSUE 10591 - INI - Marília - se tem requisitante, deve gravar F5543ICO
          Else
               If GC Requisitante [ADD2] is not equal to <Blank>
               And GC Requisitante [ADD2] is not equal to <NULL>
                    VA frm_FlagGravaF5543ICO [EV01] = "S"
                    // ------ ISSUE 251190 - Marília - Campos novos Recarga-O6
               End If
               // ----- ISSUE 10591 - FIM
          End If
     End If
     // -----------------------------------------------------------------------------
     VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
End While
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
And FI cCollectionValuesChanged [EV01] is equal to "1"
     If PO cValidateItemsWithCollection [EV01] is equal to ("1","2")
          If VA frm_EndOfFile [EV01] is not equal to "1"
               Set Control Error(FC Order Number, "E41F05")
          Else
               Press Button(FC Validate Items Against Collection)
          End If
     End If
     // Set Edit Line Successful to ensure collection information is saved
     VA frm_EditLineSucessful_EV01 [EV01] = "1"
End If
//
// SAR 5133291 Begins Free Goods Catalog Enhancement
If PO cFreeGoodsCatalogWarning [EV01] is equal to "1"
     If VA frm_FreeGoodExitEnabled_EV01 [EV01] is equal to "1"
     And VA frm_OKButtonClicked_EV01 [EV01] is not equal to "1"
          VA evt_cContinueFGCacheLoop_EV01 [EV01] = "1"
          While VA evt_cContinueFGCacheLoop_EV01 [EV01] is equal to "1"
               F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                    "2" -> cFile [EV01]
                    "5" -> cAction [EV02]
                    VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                    VA frm_JOBS_JobNumber [JOBS] -> mnJobNo [JOBS]
                    UNDEFINED <> mnWFLineNo [LNIX]
                    FC Order Number [DOCO] -> mnOrderNo [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szOrderCo [KCOO]
                    GC Line Number [LNID] -> mnParentLineNo [OGNO]
                    UNDEFINED <> mnLineNo [LNID]
                    UNDEFINED <> sz2ndItemNo [LITM]
                    UNDEFINED <> mnQtyShipped [SOQS]
                    UNDEFINED <> szUnitOfMeasure [UOM]
                    UNDEFINED <> cFreeGoodType [FGTY]
                    "1" -> cSuppressErrorMsg [EV03]
                    VA evt_szReadCacheError_DTAI [DTAI] <- szErrorMsgId [DTAI]
                    VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
                    UNDEFINED <> mnRelatedPrice [RPRI]
                    UNDEFINED <> mnRelatedItemNo [ITMR]
                    UNDEFINED <> szLineType [LNTY]
                    UNDEFINED <> mnUnitCost [UNCS]
                    UNDEFINED <> szGLClass [GLC]
                    GC Line Number [LNID] -> mnParentWFLineNo [RLLN]
                    UNDEFINED <> cCurrencyMode [CRMD]
                    "5" -> cNumKeys [EV04]
                    UNDEFINED <> mnUnitsTransactionQty [UORG]
                    UNDEFINED <> mnUnitsQuanBackorHeld [SOBK]
                    UNDEFINED <> mnUnitsQuantityCanceled [SOCN]
                    VA evt_FreeGoodCatalogName_CATLG [CATLG] <- szFreeGoodCatalogName [CATLG]
                    UNDEFINED <> szPriceAdjustmentType [AST]
                    VA evt_FGItemSelected_EV01 [EV01] <- cItemSelected [EV01]
                    UNDEFINED <> cSubledgerInformation [SBIF]
                    UNDEFINED <> cProcessingMode [MODE]
                    UNDEFINED <> cSalesOrderStatus08 [SO08]
               If VA evt_FGItemSelected_EV01 [EV01] is equal to "N"
                    If VA evt_FreeGoodCatalogName_CATLG [CATLG] is not equal to <Blank>
                    And VA evt_FreeGoodCatalogName_CATLG [CATLG] is not equal to <NULL>
                    And VA evt_FreeGoodCatalogName_CATLG [CATLG] is not equal to "0"
                         VA evt_cContinueFGCacheLoop_EV01 [EV01] = "0"
                         Set Control Error(HC &OK, "42B2")
                         // Close free good cache cursor
                         F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
                              "2" -> cFile [EV01]
                              "6" -> cAction [EV02]
                              VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
                    End If
               End If
               If VA evt_szReadCacheError_DTAI [DTAI] is not equal to <Blank>
               And VA evt_szReadCacheError_DTAI [DTAI] is not equal to <NULL>
               And VA evt_szReadCacheError_DTAI [DTAI] is not equal to "0"
                    VA evt_cContinueFGCacheLoop_EV01 [EV01] = "0"
               End If
          End While
     End If
     VA frm_OKButtonClicked_EV01 [EV01] = "1"
End If
// SAR 5133291 Ends
//
// -----------------------------------------------------------------------------
// When in copy mode, and set focus to grid has not been performed - set warning
// message to pause process long enough for user to view order number assigned
// -----------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO COPY_MODE
And VA frm_cSetFocusToGridFlag_EV01 [EV01] is equal to "0"
     Set Control Focus(FC Grid)
     Set Control Error(FC Long Address Number_ALKY, "031W")
     // SAR 6066941 Disable Stop Processing
End If
//
// ---------------------------------------------------------------------------
//      If header values have been changed, issue an error if all grid rows have
//     not been loaded.
// ---------------------------------------------------------------------------
//
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
And VA frm_EndOfFile [EV01] is not equal to "1"
     Set Edit Control Error(FC Order Number, "052S")
End If
//
// ---------------------------------------------------------------------------
// SAR 2509089.  Edit Line needs to be excuted again when coping a change order
// with multiple lines.
// ---------------------------------------------------------------------------
//
If FI cAddChangeOrder [EV03] is equal to "3"
     Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
     VA frm_MATH01_GridRowCounter [MATH01] = "1"
     While VA frm_MATH01_GridRowCounter [MATH01] is less than or equal to VA frm_MaxGridRows [MATH01]
          VA grd_EV11_ExecuteEditLine [EV11] = "1"
          Get Grid Row(FC Grid, VA frm_MATH01_GridRowCounter)
          Copy Grid Row To Grid Buffer(FC Grid, VA frm_MATH01_GridRowCounter)
          Update Grid Buffer Row(FC Grid, VA frm_MATH01_GridRowCounter, <Yes>, <No>, <Yes>, <No>, <Yes>)
          VA frm_MATH01_GridRowCounter [MATH01] = [VA frm_MATH01_GridRowCounter [MATH01]]+1
     End While
End If
//
// ---------------------------------------------------------------------------
// Do not process edit doc if in update mode but no changes have been made
// ---------------------------------------------------------------------------
//
If VA frm_EditLineSucessful_EV01 [EV01] is equal to "0"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_cMultipleAccountsWritten [EV01] is not equal to "1"
     Stop Processing
End If
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 26/03/19 - Inicio
// Aviso se item não possui setup ISSQN
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If FC Long Address AB01 [ALKY] is not equal to <Blank>
     And FC Long Address AB01 [ALKY] is not equal to <NULL>
     And FC Long Address AB01 [ALKY] is not equal to "0"
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          VA evt_szSupplementalDatabase_SDB [SDB] = "XML"
          VA evt_szTypeofData_TYDT [TYDT] = "SE"
          VA evt_mnPrestador_AN8 [AN8] = [FC Long Address AB01 [ALKY]]
          VA evt_mnTomador_AN8 [AN8] = [FC Long Ship To_ALKY [ALKY]]
          VA frm_MATH01_GridRowCounter [MATH01] = "1"
          While VA frm_MATH01_GridRowCounter [MATH01] is less than or equal to VA frm_MaxGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_MATH01_GridRowCounter)
               If GC Item Number [UITM] is not equal to <Blank>
               And GC Item Number [UITM] is not equal to <NULL>
               And GC Item Number [UITM] is not equal to "0"
                    F00092.Select  [Index 2: SuppDB]
                         VA evt_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
                         VA evt_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
                         GC Item Number [UITM] = TK Name - Remark [RMK]
                    F00092.FetchNext  [Index 2: SuppDB]
                         VA evt_szServiceTypeUtility_SRVC [SRVC] <- TK Name - Remark [RMK2]
                    ValidaSetupISSQN(N5543001.ValidaSetupISSQN)
                         VA evt_szServiceTypeUtility_SRVC [SRVC] -> szCodigoServico [SRVC]
                         VA evt_mnPrestador_AN8 [AN8] -> mnPrestador [BSFH]
                         VA evt_mnTomador_AN8 [AN8] -> mnTomador [SHAN]
                         SL DateToday -> jdData [BGDATE]
                         VA evt_cValido_EV01 [EV01] <- cPossuiISSQN [EV01]
                    If VA evt_cValido_EV01 [EV01] is equal to "N"
                         VA evt_szDescricao_DCRC [DCRC] = "O item "
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], [GC Item Number [UITM]])
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], " não possui setup para o serviço ")
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], [VA evt_szServiceTypeUtility_SRVC [SRVC]])
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], " para o tomador ")
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], [VA evt_mnTomador_AN8 [AN8]])
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], " no local do serviço ")
                         VA evt_szDescricao_DCRC [DCRC] = concat([VA evt_szDescricao_DCRC [DCRC]], [VA evt_mnPrestador_AN8 [AN8]])
                         Call App:P5543101 Form:W5543101C Version:Undefined
                              VA evt_szDescricao_DCRC [DCRC] <> szDescricao [DCRC]
                    End If
               End If
               VA frm_MATH01_GridRowCounter [MATH01] = [VA frm_MATH01_GridRowCounter [MATH01]]+1
          End While
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 26/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
// ---------------------------------------------------------------------------
// Pass Calling Application Name parameter SAR  5731831
// ---------------------------------------------------------------------------
// Call Edit Doc for mino maxo and budget check
// ---------------------------------------------------------------------------
//
F4311EditDoc(XT4311Z1.F4311EditDoc)
     FC Change Order [SFXO] -> szOrderSuffix [SFXO]
     BC Line Number (F4311.0) [LNID] -> mnLineNumber [LNID]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumber [JOBS]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     SL VersionName -> szVersionProcOption [VER1]
     UNDEFINED <> cSourceRequestingPOGeneration [EV01]
     GC ACTN:Action Code (wf) [ACTN] -> cActionCode [ACTN]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     "EP4310" -> szCallingApplicationName [PGM]
//
// Begin SAR 8924964
If SL CountryCode is not equal to <Blank>
And SL CountryCode is not equal to <NULL>
     GetErrorCount(B9800250.GetErrorCount)
          VA frm_nNumberOfErrors_INT01 [INT01] <- nNumberOfErrors [INT01]
          VA evt_evt_nNumberOfWarning_INT01 [INT01] <- nNumberOfWarnings [INT01]
     P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
          "P4310" -> szCallingAppl [PID]
          SL VersionName -> szCallingVers [VERS]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
          "W4310A" -> szCallingForm [FID]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Change Order [SFXO] -> szOrderSuffix [SFXO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          "OK" -> szFormAction [FATN]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
          GC Change Order [SFXO] -> szChangeOrder [SFXO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA evt_evt_nNumberOfWarning_INT01 [INT01] -> nNumberOfWarnings [INT01]
          VA frm_nNumberOfErrors_INT01 [INT01] -> nNumberOfErrors [INT01]
End If
// End SAR 8924964

=============================================
Form: Order Detail - W4310A
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df3fe-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_NewChangeOrderValue [CORD]
evt_SFXO_000HardCoded [SFXO]
evt_szLocalizationOrderSuffix [SFXO]
evt_cJobCostProjection_EV01 [EV01]
evt_EnabledFlag_EV01 [EV01]
evt_mnRequisitante_AN8 [AN8]
evt_mnFornecedor_AN8 [AN8]
evt_NumeroGrupo_UKID [UKID]
----------------------------------------
// ---------------------------------------------------------------------------
// Hard code SFXO to 000.  Media objects(GT4301A), revisions on change orders
// show up in Order revision history.  Revision media objects on change orders
// are connected to the base order not the change orders.  SAR 1898650
// ---------------------------------------------------------------------------
//
VA evt_SFXO_000HardCoded [SFXO] = "000"
//
// ---------------------------------------------------------------------------
//     Perform Regional Processing.
// ---------------------------------------------------------------------------
//
// SAR #6362871 begin
If SL CountryCode is equal to "BR"
     If FI cAddChangeOrder [EV03] is equal to ("2","3")
     Or FI cAddChangeOrder [EV03] is equal to or empty <Blank>
          VA evt_szLocalizationOrderSuffix [SFXO] = "*"
     Else
          Get Grid Row(FC Grid, "1")
          VA evt_szLocalizationOrderSuffix [SFXO] = GC Change Order [SFXO]
     End If
Else
     VA evt_szLocalizationOrderSuffix [SFXO] = "000"
End If
// SAR #6362871 end
//
If SL CountryCode is not equal to <Blank>
     // SAR 5808527, 6362871
     // SAR 7048912
     // Begin SAR 8924964
     ! P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
     !      "P4310" -> szCallingAppl [PID]
     !      SL VersionName -> szCallingVers [VERS]
     !      "W4310A" -> szCallingForm [FID]
     !      FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     !      FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     !      FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     !      VA evt_szLocalizationOrderSuffix [SFXO] -> szOrderSuffix [SFXO]
     !      VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     !      "CSD" -> szFormAction [FATN]
     !      VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     !      VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
          "P4310" -> szCallingAppl [PID]
          SL VersionName -> szCallingVers [VERS]
          "W4310A" -> szCallingForm [FID]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          VA evt_szLocalizationOrderSuffix [SFXO] -> szOrderSuffix [SFXO]
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          "CSD" -> szFormAction [FATN]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
          FC Change Order [SFXO] -> szChangeOrder [SFXO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
     // Begin SAR 8924964
End If
//
// ---------------------------------------------------------------------------
// Do not process end doc if in update mode but no changes have been made
// ---------------------------------------------------------------------------
//
If VA frm_EditLineSucessful_EV01 [EV01] is equal to "0"
And SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_cMultipleAccountsWritten [EV01] is not equal to "1"
     //
     // ---------------------------------------------------------------------------
     //    SAR 5745976: Cleanup the cache containing header field changes before
     // processing stops.
     // ---------------------------------------------------------------------------
     //
     If VA frm_HeaderValuesChanged [EV01] is equal to "1"
          // SAR #6473280 - do not pass in computer ID
          // SAR 7224584 - Made call async
          CacheProcessHeaderToDetailChange(B4002390.CacheProcessHeaderToDetailChange) [Asynchronous]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
               "4" -> cCacheActionCode [EV01]
     End If
     ! Stop Processing
Else
     //
     // SAR 8916318 - If the VF is set to use New Logs Application - P4305 and
     // the processing option is set to invoke logs automatically, Call P4305
     If PO cDisplayLogs [EV01] is equal to "1"
     And VA frm_cLogsAtLevelsOn_EV01 [EV01] is equal to "1"
          If SV Form_ Mode is equal to CO ADD_MODE
          Or SV Form_ Mode is equal to CO COPY_MODE
               Call App:P4305 Form:W4305B Version:PO szLogsEntryVersion
                    FC Order Number [DOCO] -> mnDocument_Order_No_Invoic [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrder_F4305_Type [DCTO]
                    FC Order Company [KCOO] -> szOrder_Company_Order_F430 [KCOO]
                    "000" -> szOrder_F4305_Suffix [SFXO]
                    "E" -> cCallType [EV01]
                    "01" -> szLog_Hierarchy_F4305_Level [LOGH]
                    FC Address Number [AN8] -> mnSubcontractor_AN8 [AN8]
                    FC Branch/Plant1 [MCU] -> szProject_MCU [MCU]
                    PO cJobProject [EV01] -> cP4310PO_JobProject_EV01 [EV01]
                    "2" -> cCallMode_EV01 [EV01]
          End If
     End If
     //
     // ---------------------------------------------------------------------------
     //     Update all tables related to the purchase order.
     // ---------------------------------------------------------------------------
     //
     // SAR 6463508 Begins - SAR# 7363470 - Added cAllowedText condition below
     If PO szChangeOrderProcessingOn [VL13] is not equal to <Blank>
     And PO cAllowChangeOrderText [EV04] is equal to "1"
     And SV Form_ Mode is equal to CO UPDATE_MODE
     And VA frm_cTextAllowed_EV01 [EV01] is equal to "1"
          //
          // ---------------------------------------------------------------------------
          // Do End Doc on the Media Object Form to prevent TP Locking on WTS window
          // If you add conditions to the above IF statement, please find the call to
          // form W4310J (media objects) below and add the condition there as well.
          // ---------------------------------------------------------------------------
          //
     Else
          // SAR 8956903 - Apparel Management
          If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
               ApparelProcessF41F301TCache(B41F0050.ApparelProcessF41F301TCache)
                    FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompany [KCOO]
                    FC Collection [C9COLL] -> szCollection [C9COLL]
                    FC SeasonCode [C9SEAC] -> szSeasonCode [C9SEAC]
                    FC Season Year [C9SEAY] -> szSeasonYear [C9SEAY]
                    "1" -> cActionCode [EV01]
                    VA frm_JOBS_JobNumber [JOBS] -> mnJobNo [JOBS]
                    FC Collection Price Effective Date [C9PRDJ] -> jdPriceEffectiveDate [C9PRDJ]
                    "000" -> szOrderSuffix [SFXO]
          End If
          //
          // ---------------------------------------------------------------------------
          // SAR 4420547. If the Order is OD then we call EndDoc with TP off.
          // ---------------------------------------------------------------------------
          //
          // SAR 8424027 - Get Job Cost Projections Constant
          GetJobCostProjectionConstant(N4317020.GetJobCostProjectionConstant)
               FC Order Company [KCOO] -> szCompany [CO]
               VA evt_cJobCostProjection_EV01 [EV01] <- cJobCostProjections [JCP]
          If FC Transfer/Direct Ship Flag [PS01] is equal to "1"
               // SAR 8938528 Begin
               IsRealTimeEventEnabled(B0500895.IsRealTimeEventEnabled)
                    "RTPOOUT" -> szEventName_VC10A [VC10A]
                    VA evt_EnabledFlag_EV01 [EV01] <- cEnabledFlag_EV01 [EV01]
               // SAR 8424027 - Do not run F4311EndDoc  Asynchronously if Job Cost
               // projections is turned on
               If VA evt_cJobCostProjection_EV01 [EV01] is equal to "Y"
               Or VA evt_EnabledFlag_EV01 [EV01] is equal to "Y"
                    // SAR 8938528 End
                    F4311EndDoc(XT4311Z1.F4311EndDoc)
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                         "EP4310" -> szCallingApplicationName [PGM]
                         SL VersionName -> szVersion [VERS]
                         VA frm_USR0_UserID [USR0] -> szUserID [USER]
                         VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
                         "0" -> cConsolidateLines [EV02]
                         VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         FI mnROSI [ROSI] -> mnROSI [ROSI]
                         FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                         FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               Else
                    F4311EndDoc(XT4311Z1.F4311EndDoc) [Asynchronous]
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                         "EP4310" -> szCallingApplicationName [PGM]
                         SL VersionName -> szVersion [VERS]
                         VA frm_USR0_UserID [USR0] -> szUserID [USER]
                         VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
                         "0" -> cConsolidateLines [EV02]
                         VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         FI mnROSI [ROSI] -> mnROSI [ROSI]
                         FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                         FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               End If
          Else
               // SAR 8938528 Begin
               // SAR 8424027 - Do not run F4311EndDoc  Asynchronously if Job Cost
               // projections is turned on
               IsRealTimeEventEnabled(B0500895.IsRealTimeEventEnabled)
                    "RTPOOUT" -> szEventName_VC10A [VC10A]
                    VA evt_EnabledFlag_EV01 [EV01] <- cEnabledFlag_EV01 [EV01]
               If VA evt_cJobCostProjection_EV01 [EV01] is equal to "Y"
               Or VA evt_EnabledFlag_EV01 [EV01] is equal to "Y"
                    // SAR 8938528 End
                    F4311EndDoc(XT4311Z1.F4311EndDoc) [Include in Transaction]
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                         "EP4310" -> szCallingApplicationName [PGM]
                         SL VersionName -> szVersion [VERS]
                         VA frm_USR0_UserID [USR0] -> szUserID [USER]
                         VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
                         "0" -> cConsolidateLines [EV02]
                         VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         FI mnROSI [ROSI] -> mnROSI [ROSI]
                         FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                         FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               Else
                    // Migração XE > 9.0 - Dionatan Silveira [Setembro 2011] -Desmarcado
                    // Asynchronously e Include in Trasaction
                    ! F4311EndDoc(XT4311Z1.F4311EndDoc) [Asynchronous, Include in Transaction]
                    !      VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                    !      VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                    !      "EP4310" -> szCallingApplicationName [PGM]
                    !      SL VersionName -> szVersion [VERS]
                    !      VA frm_USR0_UserID [USR0] -> szUserID [USER]
                    !      VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
                    !      "0" -> cConsolidateLines [EV02]
                    !      VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                    !      VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                    !      FI mnROSI [ROSI] -> mnROSI [ROSI]
                    !      FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                    !      FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
                    F4311EndDoc(XT4311Z1.F4311EndDoc)
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                         "EP4310" -> szCallingApplicationName [PGM]
                         SL VersionName -> szVersion [VERS]
                         VA frm_USR0_UserID [USR0] -> szUserID [USER]
                         VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
                         "0" -> cConsolidateLines [EV02]
                         VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         FI mnROSI [ROSI] -> mnROSI [ROSI]
                         FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                         FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               End If
          End If
          //
     End If
     // SAR 6463508 Ends
     //
     // =======================================================
     // SAR 6585679 Begin. If the VF is set to use New Logs Application - P4305 and
     // the processing option is set to invoke logs automatically, Call P4305
     // ---------------------------------------------------------------------------
     //
     //
     // ------  Migração JDE 9.0  - Marília - agosto/2011
     // Atribuído campo SFXO na F4330 (campo adicionado na chave primária na 9.0)
     // =======================================================
     // ISSUE 5463 - Marília - Força gravação F4330 (c/AN8 da F4301) - VIAGENS
     // ISSUE 6868 (25/02/04) - Marília - Atualiza linha cancelada (p/TODOS)
     // ISSUE 7146 - Marília - BUG - retira gravação da F4330 a partir do GRID
     VA frm_TAM_GRID [MATH08] = "0"
     Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
     While VA frm_TAM_GRID [MATH08] is greater than "0"
          Get Grid Row(FC Grid, VA frm_TAM_GRID)
          If GC Item Number [UITM] is greater than <Blank>
               // ------------------------------
               If PO OpcaoSuprimentos [EV01] is equal to "1"
                    //             --> atualiza sem erros  SE já existir <--
                    If GC Cancel Date [CNDJ] is not equal to Null Date
                         VA frm_RBSRespFunc_RSPO [RSPO] = "1"
                         F4330.Update  [Index 1: OrderNumber, Order Type +A]
                              BC Order Company (Order Number) (F4301.0) [KCOO] = TK Order Company (Order Number) [KCOO]
                              BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                              BC Order Type (F4301.0) [DCTO] = TK Order Type [DCTO]
                              GC Line Number [LNID] = TK Line Number [LNID]
                              BC Address Number (F4301.0) [AN8] = TK Address Number [AN8]
                              VA frm_RBSRespFunc_RSPO [RSPO] -> TK Response Function [RSPO]
                              GC Request Date [DRQJ] -> TK Date - Required Reponse Date [RQQJ]
                              GC Orig Sfx [OSFX] = TK Order Suffix [SFXO]
                    Else
                         F4330.Update  [Index 1: OrderNumber, Order Type +A]
                              BC Order Company (Order Number) (F4301.0) [KCOO] = TK Order Company (Order Number) [KCOO]
                              BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                              BC Order Type (F4301.0) [DCTO] = TK Order Type [DCTO]
                              GC Line Number [LNID] = TK Line Number [LNID]
                              BC Address Number (F4301.0) [AN8] = TK Address Number [AN8]
                              GC Request Date [DRQJ] -> TK Date - Required Reponse Date [RQQJ]
                              GC Orig Sfx [OSFX] = TK Order Suffix [SFXO]
                    End If
               Else
                    If GC Cancel Date [CNDJ] is not equal to Null Date
                         VA frm_RBSRespFunc_RSPO [RSPO] = "1"
                         F4330.Update  [Index 1: OrderNumber, Order Type +A]
                              BC Order Company (Order Number) (F4301.0) [KCOO] = TK Order Company (Order Number) [KCOO]
                              BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                              BC Order Type (F4301.0) [DCTO] = TK Order Type [DCTO]
                              GC Line Number [LNID] = TK Line Number [LNID]
                              BC Address Number (F4301.0) [AN8] = TK Address Number [AN8]
                              VA frm_RBSRespFunc_RSPO [RSPO] -> TK Response Function [RSPO]
                              GC Orig Sfx [OSFX] = TK Order Suffix [SFXO]
                    End If
               End If
               // ------------------------------
          End If
          If GC Projeto Rubrica [VR01] is not equal to <Blank>
               If GC Cancel Date [CNDJ] is not equal to Null Date
                    ValidacaoAlocacao(N5509INV.ValidacaoAlocacao)
                         UNDEFINED <> CtaContabil [ANI]
                         UNDEFINED <> CCusto [MCU]
                         UNDEFINED <> CtaObjeto [OBJ]
                         UNDEFINED <> CtaDetalhe [SUB]
                         UNDEFINED <> R020 [R020]
                         UNDEFINED <> NroAlocacao [N001]
                         UNDEFINED <> ProjetoRubrica [CN]
                         UNDEFINED <> Projeto [PROJE]
                         UNDEFINED <> Rubrica [RUBRI]
                         UNDEFINED <> Erro [DTAI]
                         UNDEFINED <> AID [AID]
                         UNDEFINED <> Local_Erro [UKERRO]
                         UNDEFINED <> Valor [AA]
                         UNDEFINED <> ValorImobilizacao [AN01]
                         "X" -> cInd_Operacao [IDOP]
                         FC Order Company [KCOO] -> szCompanyKey [KCO]
                         FC F4301:Order Type [DCTO] -> szDocumentType [DCT]
                         FC Order Number [DOCO] -> mnDocVoucherInvoiceE [DOC]
                         UNDEFINED <> jdDateForGLandVoucherJULIA [DGJ]
                         UNDEFINED <> mnJournalEntryLineNo [JELN]
                         UNDEFINED <> szLineExtensionCode [EXTL]
                         UNDEFINED <> szLedgerType [LT]
                         "F4311" -> szTableName [LRSTN]
                         UNDEFINED <> szUserId [USER]
                         UNDEFINED <> szWorkStationId [JOBN]
                         UNDEFINED <> szProgramId [PID]
                         UNDEFINED <> jdDateUpdated [UPMJ]
                         UNDEFINED <> mnTimeLastUpdated [UPMT]
                         UNDEFINED <> szBatchType [ICUT]
                         UNDEFINED <> mnBatchNumber [ICU]
                         UNDEFINED <> mnCentury [CTRY]
                         UNDEFINED <> mnFiscalYear1 [FY]
                         UNDEFINED <> mnPeriodNoGeneralLedge [PN]
                         UNDEFINED <> ItemPluriAnual [IPLURI]
                         UNDEFINED <> Negocio [CDNEG]
                         UNDEFINED <> TipoInvestimento [AIGR]
                         UNDEFINED <> Situacao [STA]
                         UNDEFINED <> Gestor [TAN8]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         "000" -> szOrderSuffix [SFXO]
                         UNDEFINED <> szNameRemarkExplanation [EXR]
               Else
                    ValidacaoAlocacao(N5509INV.ValidacaoAlocacao)
                         GC Business Unit [OMCU] -> CCusto [MCU]
                         GC Obj Acct [OBJ] -> CtaObjeto [OBJ]
                         GC Sub  [SUB] -> CtaDetalhe [SUB]
                         GC Número Alocação [N001] -> NroAlocacao [N001]
                         GC Projeto Rubrica [VR01] -> ProjetoRubrica [CN]
                         GC Extended Cost [AEXPE1] -> Valor [AA]
                         "C" -> cInd_Operacao [IDOP]
                         FC Order Company [KCOO] -> szCompanyKey [KCO]
                         FC F4301:Order Type [DCTO] -> szDocumentType [DCT]
                         FC Order Number [DOCO] -> mnDocVoucherInvoiceE [DOC]
                         GC G/L Date [DGL] -> jdDateForGLandVoucherJULIA [DGJ]
                         <Blank> -> szLedgerType [LT]
                         "F4311" -> szTableName [LRSTN]
                         "O" -> szBatchType [ICUT]
                         "0" -> mnBatchNumber [ICU]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         "000" -> szOrderSuffix [SFXO]
               End If
          End If
          VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
     End While
     // -----------------------------------------------------------------------------
     // ISSUE 7146 - Marília - BUG - não utiliza campo LNID do GRID (às vezes=branco)
     If PO OpcaoSuprimentos [EV01] is equal to "1"
          F4311.Select  [Index 1: Doc No, Order Type, + 1]
               BC Order Company (Order Number) (F4301.0) [KCOO] = TK Order Company (Order Number) [KCOO]
               BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
               BC Order Type (F4301.0) [DCTO] = TK Order Type [DCTO]
               VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
          F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
               VA frm_MIGR_LinhaF4311_SFXO [SFXO] <- TK Order Suffix [SFXO]
               VA frm_F4311_LNID [LNID] <- TK Line Number [LNID]
          //             --> insere sem erros  SE não existir <--
          While SV File_IO_Status is equal to CO SUCCESS
               VA frm_RBSRespFunc_RSPO [RSPO] = "0"
               F4330.Insert  [Index 1: OrderNumber, Order Type +A]
                    BC Order Company (Order Number) (F4301.0) [KCOO] -> TK Order Company (Order Number) [KCOO]
                    BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> TK Document (Order No, Invoice, etc.) [DOCO]
                    BC Order Type (F4301.0) [DCTO] -> TK Order Type [DCTO]
                    VA frm_F4311_LNID [LNID] -> TK Line Number [LNID]
                    BC Address Number (F4301.0) [AN8] -> TK Address Number [AN8]
                    BC Date - Order/Transaction (F4301.0) [TRDJ] -> TK Date - Order/Transaction [TRDJ]
                    VA frm_RBSRespFunc_RSPO [RSPO] -> TK Response Function [RSPO]
                    BC Date - Requested (F4301.0) [DRQJ] -> TK Date - Required Reponse Date [RQQJ]
                    VA frm_MIGR_LinhaF4311_SFXO [SFXO] -> TK Order Suffix [SFXO]
               F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
                    VA frm_MIGR_LinhaF4311_SFXO [SFXO] <- TK Order Suffix [SFXO]
                    VA frm_F4311_LNID [LNID] <- TK Line Number [LNID]
          End While
     End If
     // -----------------------------------------------------------------------------
     // =======================================================
     //  ISSUE 3233 - Grava ou não as Informações Específicas
     // =======================================================
     //  ISSUE 5876 - Grava o campo Local de Entrega do Cabeçalho
     // =======================================================
     //  ISSUE 5463 - Grava Descrição 3 (DS40)  para  VIAGENS
     //              Incluído mais um OR no comando IF abaixo + comandos F5543ICO
     // =======================================================
     //  ISSUE 7065 - Marilia  - Grava EXR (Descr.Histórico) na F5543ICO
     // =======================================================
     //  ISSUE 7385 - Marilia  - Grava Descrição 4 (DSCPED) na F5543ICO
     //                          quando FlagGravaF5543ICO  ligado no "Button Clicked"
     // =======================================================
     //  ISSUE 7511 - Herrera  - Grava Número Investimento na F5543ICO
     // =======================================================
     //  Issue 6711 - Fernando Herrera - Início - 28/01/2004
     If VA frm_FlagGravaF5543ICO [EV01] is equal to "S"
     Or VA frm_FlagHistoricoF5543ICO_EV01 [EV01] is equal to "S"
          //  Issue 6711 - Fernando Herrera - Final
          //
          // ===========================================================
          // Grava tabela F5543ICO com informações de Local de Cobrança e Entrega
          // ===========================================================
          GetAuditInfo(B9800100.GetAuditInfo)
               VA frm_USR0_UserID [USR0] -> szUserName [USER]
               VA frm_TME0 [TME0] <- mnTime [TME0]
          VA frm_PID [PID] = "P4310"
          VA frm_TAM_GRID [MATH08] = "0"
          Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
          While VA frm_TAM_GRID [MATH08] is greater than "0"
               Get Grid Row(FC Grid, VA frm_TAM_GRID)
               VA frm_LITM [LITM] = GC Item Number [UITM]
               VA frm_LNID [LNID] = GC Line Number [LNID]
               VA frm_ADDR1 [ADD1] = GC Local Entrega [ADD1]
               VA frm_ADDR2 [ADD2] = GC Requisitante [ADD2]
               VA frm_ANCR [ANCR] = GC Carrier Number [ANCR]
               // -----------------------------------------------------------------------------
               // ISSUE 7065 - MARÍLIA - Confirma se ContaContabil foi gravada
               // ISSUE 7146 - MARÍLIA - incluído IF de verificação de linha válida
               If VA frm_LITM [LITM] is greater than <Blank>
                    F4311.FetchSingle  [Index 1: Doc No, Order Type, + 1]
                         FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                         FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                         FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                         VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
                         VA frm_LNID [LNID] = TK Line Number [LNID]
                         VA frm_ContaF4311_ANI [ANI] <- TK Account Number - Input (Mode Unknown) [ANI]
                    If VA frm_ContaF4311_ANI [ANI] is not equal to <Blank>
                    And VA frm_ContaF4311_ANI [ANI] is not equal to <NULL>
                         VA frm_EXR [EXR] = GC Explanation -Remark- [EXR]
                    Else
                         VA frm_EXR [EXR] = <NULL>
                    End If
               End If
               // -----------------------------------------------------------------------------
               VA frm_FRTH [FRTH] = FC Freight Handling Code [FRTH]
               VA frm_COBR [SHAN] = FC Local Cobrança [SHAN]
               VA frm_DTE [DTE] = date_today()
               If VA frm_LITM [LITM] is greater than <Blank>
                    // -----------------------------------------------------------------------------
                    // ISSUE 7065 - MARÍLIA - grava campo EXR (Descr.Hist) na F5543ICO
                    //  ISSUE 7385 - Marilia  - Grava Descrição 4 na F5543ICO
                    // ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
                    //                                          na F5543ICO e GRID
                    // ------ ISSUE 251190 - Marília - Campos novos qdo. Recarga-O6
                    // ------
                    F5543ICO.Insert  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                         FC Order Company [KCOO] -> TK Order Company (Order Number) [KCOO]
                         FC Order Number [DOCO] -> TK Document (Order No, Invoice, etc.) [DOCO]
                         FC F4301:Order Type [DCTO] -> TK Order Type [DCTO]
                         VA frm_SFX0_ZeroSuffix [SFX0] -> TK Order Suffix [SFXO]
                         VA frm_LNID [LNID] -> TK Line Number [LNID]
                         FC LocalEntrega [ADD1] -> TK Address Line 1 [ADD1]
                         VA frm_ADDR2 [ADD2] -> TK Address Line 2 [ADD2]
                         VA frm_COBR [SHAN] -> TK Address Number - Ship To [SHAN]
                         GC Descrição 3 [MDSC] -> TK User Based Pricing Message Description [MDSC]
                         GC Descrição 4 [DSCPED] -> TK Descrição  de Pedido [DSCPED]
                         VA frm_USR0_UserID [USR0] -> TK Transaction Originator [TORG]
                         GC Destinatário 1 [AN8] -> TK Address Number [AN8]
                         GC Destinatário 2 [AN8] -> TK Address Number - 1st [AN81]
                         VA frm_EXR [EXR] -> TK Name - Remark Explanation [EXR]
                         GC Número Alocação [N001] -> TK Next Number Range 1 [N001]
                         GC Valor 1º. Cotação [FRRC] -> TK Amount - Foreign Unit Price [FRRC]
                         GC Orçamento [PRRC] -> TK Amount - Unit Cost [PRRC]
                         GC Descrição Família Compras [DSE2] -> TK Description [DSE2]
                         VA frm_USR0_UserID [USR0] -> TK User ID [USER]
                         VA frm_PID [PID] -> TK Program ID [PID]
                         VA frm_CTID_ComputerID [CTID] -> TK Work Station ID [JOBN]
                         VA frm_DTE [DTE] -> TK Date - Updated [UPMJ]
                         VA frm_TME0 [TME0] -> TK Time of Day [TDAY]
                         FC Enviar E-Mail [EV01] -> TK J.D. EnterpriseOne Event Point 01 [EV01]
                         FC email [EMAL] -> TK Electronic Address [EMAL]
                    // -----------------------------------------------------------------------------
                    If SV File_IO_Status is equal to CO ERROR
                         // -----------------------------------------------------------------------------
                         // ISSUE 7065 - MARÍLIA - grava campo EXR (Descr.Hist) na F5543ICO
                         //  ISSUE 7385 - Marilia  - Grava Descrição 4 na F5543ICO
                         // ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
                         //                                          na F5543ICO e GRID
                         // ------ ISSUE 251190 - Marília - Campos novos qdo. Recarga-O6
                         // ------
                         F5543ICO.Update  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                              FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                              FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                              FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                              VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
                              VA frm_LNID [LNID] = TK Line Number [LNID]
                              VA frm_ADDR2 [ADD2] -> TK Address Line 2 [ADD2]
                              GC Descrição 3 [MDSC] -> TK User Based Pricing Message Description [MDSC]
                              GC Descrição 4 [DSCPED] -> TK Descrição  de Pedido [DSCPED]
                              GC Destinatário 1 [AN8] -> TK Address Number [AN8]
                              GC Destinatário 2 [AN8] -> TK Address Number - 1st [AN81]
                              VA frm_EXR [EXR] -> TK Name - Remark Explanation [EXR]
                              GC Número Alocação [N001] -> TK Next Number Range 1 [N001]
                              GC Valor 1º. Cotação [FRRC] -> TK Amount - Foreign Unit Price [FRRC]
                              GC Orçamento [PRRC] -> TK Amount - Unit Cost [PRRC]
                              GC Descrição Família Compras [DSE2] -> TK Description [DSE2]
                              VA frm_USR0_UserID [USR0] -> TK User ID [USER]
                              VA frm_PID [PID] -> TK Program ID [PID]
                              VA frm_CTID_ComputerID [CTID] -> TK Work Station ID [JOBN]
                              VA frm_DTE [DTE] -> TK Date - Updated [UPMJ]
                              VA frm_TME0 [TME0] -> TK Time of Day [TDAY]
                              FC Enviar E-Mail [EV01] -> TK J.D. EnterpriseOne Event Point 01 [EV01]
                              FC email [EMAL] -> TK Electronic Address [EMAL]
                         // -----------------------------------------------------------------------------
                    End If
               End If
               VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
          End While
          //
     End If
     // =======================================================
     //  ISSUE 6297 - Valkiria - RBS - 05/08/03
     // =======================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
     Or PO TpCatalogo [EV01] is equal to "1"
     Or PO OpcaoSuprimentos [EV01] is equal to "1"
     Or VA frm_FlagGravaF5543ICO [EV01] is equal to "S"
     Or VA frm_FlagHistoricoF5543ICO_EV01 [EV01] is equal to "S"
          VA frm_LNID [LNID] = .000
          // -----------------------------------------------------------------------------
          // ISSUE 7065 - MARÍLIA - guarda campo EXR (Descr.Hist) da F5543ICO
          //  ISSUE 7385 - Marilia  - Guarda Descrição 4 da F5543ICO
          // ISSUE 8024 - VALKIRIA - RBS - 18/05/05 - MDSCF5543ICO
          // ------ ISSUE 251190 - Marília - Campos novos qdo. Recarga-O6
          // ------
          // ------  Migração JDE 9.0  - Marília - agosto/2011 (BUG - uso do GC em vez
          // de VA)
          F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
               FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
               FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
               FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
               VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
               VA frm_LNID [LNID] = TK Line Number [LNID]
               VA frm_F5543ICO_ADDR1 [ADD1] <- TK Address Line 1 [ADD1]
               VA frm_F5543ICO_ADDR2 [ADD2] <- TK Address Line 2 [ADD2]
               VA frm_F5543ICO_COBR [SHAN] <- TK Address Number - Ship To [SHAN]
               VA frm_F5543ICO_DS40 [DS40] <- TK Description [DS40]
               VA frm_MDSCF5543ICO [MDSC] <- TK User Based Pricing Message Description [MDSC]
               VA frm_F5543ICODescr4_DSCPED [DSCPED] <- TK Descrição  de Pedido [DSCPED]
               VA frm_F5543ICO_EXR [EXR] <- TK Name - Remark Explanation [EXR]
               VA frm_NumeroInvestimento [N001] <- TK Next Number Range 1 [N001]
               VA frm_F5543ICO1aCOT_FRRC [FRRC] <- TK Amount - Foreign Unit Price [FRRC]
               VA frm_ValorOrcamento [PRRC] <- TK Amount - Unit Cost [PRRC]
               VA frm_DescricaoFamComp [DSE2] <- TK Description [DSE2]
               VA frm_EnviaEmail [EV01] <- TK J.D. EnterpriseOne Event Point 01 [EV01]
               VA frm_Email [EMAL] <- TK Electronic Address [EMAL]
          // -----------------------------------------------------------------------------
          If SV File_IO_Status is equal to CO SUCCESS
               F4311.Select  [Index 1: Doc No, Order Type, + 1]
                    FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                    FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                    FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                    VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
               F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
                    VA frm_F4311_LNID [LNID] <- TK Line Number [LNID]
               While SV File_IO_Status is equal to CO SUCCESS
                    F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                         FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                         FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                         FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                         VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
                         VA frm_F4311_LNID [LNID] = TK Line Number [LNID]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         // -----------------------------------------------------------------------------
                         // ISSUE 7065 - MARÍLIA - guarda campo EXR (Descr.Hist) da F5543ICO
                         //  ISSUE 7385 - Marilia  - Guarda Descrição 4 da F5543ICO
                         // ISSUE 8024 - VALKIRIA - RBS - 18/05/05 - MDSCF5543ICO
                         // ------ ISSUE 251190 - Marília - Campos novos qdo. Recarga-O6
                         // ------
                         // ------  Migração JDE 9.0  - Marília - agosto/2011 (BUG - s/ campo FRRC)
                         F5543ICO.Insert  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                              FC Order Company [KCOO] -> TK Order Company (Order Number) [KCOO]
                              FC Order Number [DOCO] -> TK Document (Order No, Invoice, etc.) [DOCO]
                              FC F4301:Order Type [DCTO] -> TK Order Type [DCTO]
                              VA frm_SFX0_ZeroSuffix [SFX0] -> TK Order Suffix [SFXO]
                              VA frm_F4311_LNID [LNID] -> TK Line Number [LNID]
                              VA frm_F5543ICO_ADDR1 [ADD1] -> TK Address Line 1 [ADD1]
                              VA frm_F5543ICO_ADDR2 [ADD2] -> TK Address Line 2 [ADD2]
                              VA frm_F5543ICO_COBR [SHAN] -> TK Address Number - Ship To [SHAN]
                              VA frm_F5543ICO_DS40 [DS40] -> TK Description [DS40]
                              VA frm_MDSCF5543ICO [MDSC] -> TK User Based Pricing Message Description [MDSC]
                              VA frm_F5543ICODescr4_DSCPED [DSCPED] -> TK Descrição  de Pedido [DSCPED]
                              VA frm_USR0_UserID [USR0] -> TK Transaction Originator [TORG]
                              VA frm_F5543ICO_EXR [EXR] -> TK Name - Remark Explanation [EXR]
                              VA frm_NumeroInvestimento [N001] -> TK Next Number Range 1 [N001]
                              VA frm_F5543ICO1aCOT_FRRC [FRRC] -> TK Amount - Foreign Unit Price [FRRC]
                              VA frm_ValorOrcamento [PRRC] -> TK Amount - Unit Cost [PRRC]
                              VA frm_DescricaoFamComp [DSE2] -> TK Description [DSE2]
                              VA frm_USR0_UserID [USR0] -> TK User ID [USER]
                              VA frm_PID [PID] -> TK Program ID [PID]
                              VA frm_CTID_ComputerID [CTID] -> TK Work Station ID [JOBN]
                              VA frm_DTE [DTE] -> TK Date - Updated [UPMJ]
                              VA frm_TME0 [TME0] -> TK Time of Day [TDAY]
                              VA frm_EnviaEmail [EV01] -> TK J.D. EnterpriseOne Event Point 01 [EV01]
                              VA frm_Email [EMAL] -> TK Electronic Address [EMAL]
                         // -----------------------------------------------------------------------------
                    End If
                    F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
                         VA frm_F4311_LNID [LNID] <- TK Line Number [LNID]
               End While
               F5543ICO.Delete  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                    FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                    FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                    FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                    VA frm_SFX0_ZeroSuffix [SFX0] = TK Order Suffix [SFXO]
                    VA frm_LNID [LNID] = TK Line Number [LNID]
          End If
          // =======================================================
          // END  ISSUE 6297
          // =======================================================
     End If
     // ======================================================
     //
     //     Cleanup the cache containing header field changes.
     //
     If VA frm_HeaderValuesChanged [EV01] is equal to "1"
          // SAR #6473280 - do not pass in computer ID
          // SAR 7224584 - Made call async
          CacheProcessHeaderToDetailChange(B4002390.CacheProcessHeaderToDetailChange) [Asynchronous]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
               "4" -> cCacheActionCode [EV01]
     End If
     //
     // =======================================================
     //
     // ---------------------------------------------------------------------------
     // SAR 5046964 If Usre enter spplier and BP and clicks OK then dont call Order
     // Template
     // ---------------------------------------------------------------------------
     //
     If VA frm_TemplatesExecuted [EV01] is equal to "0"
     And FC Order Number [DOCO] is equal to "0"
          VA frm_DoNotCallTemplate [EV01] = "1"
     End If
     //
     // ---------------------------------------------------------------------------
     //     If the option is set, prompt the user to enter Change Order Text.
     // ---------------------------------------------------------------------------
     //
     If PO szChangeOrderProcessingOn [VL13] is not equal to <Blank>
     And PO cAllowChangeOrderText [EV04] is equal to "1"
          VA evt_NewChangeOrderValue [CORD] = [FC Modification No. [CORD]]+1
          FC Modification No. [CORD] = VA evt_NewChangeOrderValue [CORD]
          //
          // do not display media object on the original order.  SAR 1845873
          //
          //     SAR 3813779 - Do not display Media Objects window in copy mode
          If SV Form_ Mode is equal to CO UPDATE_MODE
          And VA frm_cTextAllowed_EV01 [EV01] is equal to "1"
               //
               // ---------------------------------------------------------------------------
               // SAR 6463508
               // Commented out Call and Added new Form interconnect to Media Object Form
               // If you add conditions to the above two IF statement, please add the same to
               // the condition before performing EndDoc - otherwise issues similar to that
               // of SAR# 7363470 might come up.
               // ---------------------------------------------------------------------------
               //
               // SAR 8482075 Begin
               // Changed the version from Hard coded ZJDE0001 to system value SL Version
               // Name
               Call App:P4310 Form:W4310J Version:SL VersionName
                    FC Order Number [DOCO] <> mnDocumentOrderInvoiceE [DOCO]
                    FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                    FC Order Company [KCOO] <> szCompanyKeyOrderNo [KCOO]
                    VA evt_SFXO_000HardCoded [SFXO] <> szOrderSuffix [SFXO]
                    GC Line Number [LNID] <> mnLineNumber [LNID]
                    VA evt_NewChangeOrderValue [CORD] <> mnNumberChangeOrder [CORD]
                    FC EV03-Detail Generic Text (wf) [EV03] <> cDetailGenericText_EV03 [EV03]
                    VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                    VA frm_JOBS_JobNumber [JOBS] <> mnJobnumberA [JOBS]
                    VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                    VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                    VA frm_EV01_UsesWorkFields [EV01] <> cUseWorkFiles [EV01]
                    SL VersionName -> szVersionconsolidated [VER]
                    VA frm_USR0_UserID [USR0] <> szUser [USR0]
                    SL LanguagePreference -> szLanguagePreference [LNGP]
          End If
     End If
     //
     FI PreviousOrderNumber [LDOC] = FC Order Number [DOCO]
     FC Previous Order Number [LDOC] = FI PreviousOrderNumber [LDOC]
     FI szPrevOrderType [OCTO] = FC F4301:Order Type [DCTO]
     FC Previous Order Type [DCTO] = FI szPrevOrderType [OCTO]
     //
     FC Order Number [DOCO] = "0"
     VA frm_JOBS_JobNumber [JOBS] = "0"
     GC Line Number [LNID] = "0"
     FC Clause ID [CUKID] = 0
     //
     // SAR 3046750 ,4579435 After OK is Clicked do not call the Template again
     //
     VA frm_OKButtonClicked_EV01 [EV01] = "1"
     //
     VA frm_EV02_BegDocExecuted [EV02] = "0"
     //
     // ---------------------------------------------------------------------------
     // Initialize variables that will track whether or not a form control has been
     // changed.
     // ---------------------------------------------------------------------------
     //
     VA frm_TempCRDC [CRDC] = <Blank>
     VA frm_TempCRR [CRR] = "0"
     VA frm_TempCRCD [CRCD] = <Blank>
     VA frm_TempTRDJ [TRDJ] = <NULL>
     VA frm_TempSFX0 [SFXO] = <Blank>
     VA frm_TempMCU [MCU] = <Blank>
     VA frm_TempHOLD [HOLD] = <Blank>
     VA frm_TempSHAN [SHAN] = "0"
     VA frm_TempAN8 [AN8] = "0"
     VA frm_TempDCTO [DCTO] = <Blank>
     VA frm_TempDOCO [DOCO] = "0"
     VA frm_RecordInHeaderWkFile [EV01] = "0"
End If
// ------  Migração JDE 9.0  - Marília - agosto/2011
// ==========================================================
// Issue 3933 - Migração Alçadas - Fernando Herrera - 19.07.2002 - Início
//
// Só chama o Processo de Alçadas se ainda não foi submetido a Aprovação
//
//
If FC Previous Order Number [LDOC] is greater than "0"
Else
     FC Previous Order Number [LDOC] = FC Order Number [DOCO]
End If
// Issue 6892  - Fernando Herrera - 02/03/2004 - Início
VA frm_SY02 [SY] = "02"
VA frm_RTMB [RT] = "MB"
VA frm_AchouF5598010 [EV01] = "N"
F5598010.Select  [Index 1: VoucherWFDate]
     FC Order Company [KCOO] = TK Document Company [KCO]
     FC Previous Order Type [DCTO] = TK Document Type [DCT]
     FC Previous Order Number [LDOC] = TK Document (Voucher, Invoice, etc.) [DOC]
F5598010.FetchNext  [Index 1: VoucherWFDate]
     VA frm_ProcessNameF5598010 [PROCNAME] <- TK Process ID [PROCNAME]
While SV File_IO_Status is equal to CO SUCCESS
And VA frm_AchouF5598010 [EV01] is equal to "N"
     VA frm_Descricao [DL02] = VA frm_ProcessNameF5598010 [PROCNAME]
     F0005.Select  [Index 1: System, Type, Code]
          VA frm_SY02 [SY] = TK Product Code [SY]
          VA frm_RTMB [RT] = TK User Defined Codes [RT]
          VA frm_Descricao [DL02] = TK Description 02 [DL02]
     F0005.FetchNext  [Index 1: System, Type, Code]
          VA frm_Valida [SPHD] <- TK Special Handling Code - User Def Codes [SPHD]
     If VA frm_Valida [SPHD] is equal to "Y"
          VA frm_AchouF5598010 [EV01] = "S"
     End If
     F5598010.FetchNext  [Index 1: VoucherWFDate]
          VA frm_ProcessNameF5598010 [PROCNAME] <- TK Process ID [PROCNAME]
End While
If VA frm_AchouF5598010 [EV01] is equal to "N"
     F55UI020.Select  [Index 1: Primary]
          FC Previous Order Number [LDOC] = TK Document (Voucher, Invoice, etc.) [DOC]
          FC Previous Order Type [DCTO] = TK Document Type [DCT]
          FC Order Company [KCOO] = TK Document Company [KCO]
     F55UI020.FetchNext  [Index 1: Primary]
          VA frm_CO [CO] <- TK Document Company [KCO]
     If SV File_IO_Status is equal to CO SUCCESS
          VA frm_AchouF5598010 [EV01] = "S"
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Inicio
// Verifica regras da requisição
// Ignora se:
// 1) Se req vai para suprimentos e tem versao R554308A
// 2) Se req for OM e não tiver versão preenchida
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
! If VA frm_cSuprimentos [EV01] is equal to "S"
! And PO szVersaoR554308A [VL01] is not equal to <Blank>
! And PO szVersaoR554308A [VL01] is not equal to <NULL>
! And PO szVersaoR554308A [VL01] is not equal to "0"
     ! VA frm_AchouF5598010 [EV01] = "S"
! Else
     ! If FC F4301:Order Type [DCTO] is equal to "OM"
          ! If PO szVersaoR554308A [VL01] is equal to <Blank>
          ! OrPO szVersaoR554308A [VL01] is equal to <NULL>
          ! OrPO szVersaoR554308A [VL01] is equal to "0"
               ! VA frm_AchouF5598010 [EV01] = "S"
          ! End If
     ! End If
! End If
If PO szVersaoR554308A [VL01] is not equal to <Blank>
And PO szVersaoR554308A [VL01] is not equal to <NULL>
And PO szVersaoR554308A [VL01] is not equal to "0"
     If VA frm_cSuprimentos [EV01] is equal to "S"
          VA frm_AchouF5598010 [EV01] = "S"
     End If
Else
     If FC F4301:Order Type [DCTO] is equal to "OM"
          VA frm_AchouF5598010 [EV01] = "S"
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If VA frm_AchouF5598010 [EV01] is equal to "N"
     // Issue 6892  - Fernando Herrera - 02/03/2004 - Final
     VA frm_AlcadasUDC [KY] = concat("        ", [FC Previous Order Type [DCTO]])
     GetUDCTextfromF0005(B9800903.GetUDCTextfromF0005)
          "55" -> szSystemCode [SY]
          "DA" -> szUserDefinedCodes [RT]
          VA frm_AlcadasUDC [KY] -> szUserDefinedCode [KY]
          VA frm_AlcadasDescDoc [DESC] <- szDescription01002 [DL02]
     If VA frm_AlcadasDescDoc [DESC] is not equal to <Blank>
     And VA frm_AlcadasDescDoc [DESC] is not equal to <NULL>
          // Busca o nome do Fornecedor
          F0101.FetchSingle  [Index 1: Address #]
               FC Address Number [AN8] = TK Address Number [AN8]
               VA frm_AlcadasFornecedor [ALPH] <- TK Name - Alpha [ALPH]
          // Solução para o problema do Fetch Single (F4301) na Aplicação de Alçadas
          // Determina o Valor do Documento
          Get Max Grid Rows(FC Grid, VA frm_AlcadasGridRows)
          VA frm_AlcadasContador [A1A] = 1
          VA frm_AlcadasValorDoc [AA] = 0
          While VA frm_AlcadasContador [A1A] is less than or equal to VA frm_AlcadasGridRows [A1A]
               Get Grid Row(FC Grid, VA frm_AlcadasContador)
               If GC Next Status [NXTR] is not equal to "999"
                    VA frm_AlcadasValorDoc [AA] = [VA frm_AlcadasValorDoc [AA]]+[GC Extended Cost [AEXPE1]]
               End If
               VA frm_AlcadasContador [A1A] = [VA frm_AlcadasContador [A1A]]+1
          End While
          // ++++  INI -  ISSUE 6105 - BUG - Marília +++++
          //  Sempre que entrou na tela de Inf.Regionais, verificar nas
          //  linhas, se faltou algum campo de Inf. Regional. Se sim, é porque
          //  o usuário fechou a tela sem dar OK.
          //  E neste caso, não deve desviar para a tela de alçadas.
          If SL CountryCode is not equal to <Blank>
               //                 Desviou para Tela de Informações Regionais
               VA frm_RBSZeros_SFXO [SFXO] = "000"
               VA frm_RBSFlagFaltaInfReg_EV01 [EV01] = "1"
               F76432.Select  [Index 1: OrderNumber,OrderType+]
                    FC Previous Order Number [LDOC] = TK Document (Order No, Invoice, etc.) [DOCO]
                    FC Previous Order Type [DCTO] = TK Order Type [DCTO]
                    FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                    VA frm_RBSZeros_SFXO [SFXO] = TK Order Suffix [SFXO]
               F76432.FetchNext  [Index 1: OrderNumber,OrderType+]
                    VA frm_RBSLinhaLida_LNID [LNID] <- TK Line Number [LNID]
                    VA frm_RBSNatOperacao_BNOP [BNOP] <- TK Code - Transaction Nature [BNOP]
                    VA frm_RBSSufixoNatOperacao_BSOP [BSOP] <- TK Suffix - Transaction Nature [BSOP]
                    VA frm_RBSTaxICMSIPI_BCTF [BCTF] <- TK ICMS/IPI Tax Summary [BCTF]
                    VA frm_RBSClassifFiscal_BCLF [BCLF] <- TK Fiscal Classification [BCLF]
                    VA frm_RBSSubstICMS_BIST [BIST] <- TK ICMS Tax Substitution Mark-up [BIST]
                    VA frm_RBSUsoCompra_BORI [BORI] <- TK Item Origin [BORI]
               //            Verifica se todas as linhas tem Informações Regionais,
               //                      só daí desvia para Tela de Alçadas.
               While SV File_IO_Status is equal to CO SUCCESS
                    VA frm_RBSFlagFaltaInfReg_EV01 [EV01] = "0"
                    // If campos sem informações, liga flag
                    If VA frm_RBSNatOperacao_BNOP [BNOP] is equal to <Blank>
                    Or VA frm_RBSSufixoNatOperacao_BSOP [BSOP] is equal to <Blank>
                    Or VA frm_RBSTaxICMSIPI_BCTF [BCTF] is equal to <Blank>
                    Or VA frm_RBSClassifFiscal_BCLF [BCLF] is equal to <Blank>
                    Or VA frm_RBSSubstICMS_BIST [BIST] is equal to <Blank>
                    Or VA frm_RBSUsoCompra_BORI [BORI] is equal to <Blank>
                         VA frm_RBSFlagFaltaInfReg_EV01 [EV01] = "1"
                    End If
                    F76432.FetchNext  [Index 1: OrderNumber,OrderType+]
                         VA frm_RBSLinhaLida_LNID [LNID] <- TK Line Number [LNID]
                         VA frm_RBSNatOperacao_BNOP [BNOP] <- TK Code - Transaction Nature [BNOP]
                         VA frm_RBSSufixoNatOperacao_BSOP [BSOP] <- TK Suffix - Transaction Nature [BSOP]
                         VA frm_RBSTaxICMSIPI_BCTF [BCTF] <- TK ICMS/IPI Tax Summary [BCTF]
                         VA frm_RBSClassifFiscal_BCLF [BCLF] <- TK Fiscal Classification [BCLF]
                         VA frm_RBSSubstICMS_BIST [BIST] <- TK ICMS Tax Substitution Mark-up [BIST]
                         VA frm_RBSUsoCompra_BORI [BORI] <- TK Item Origin [BORI]
               End While
               If VA frm_RBSFlagFaltaInfReg_EV01 [EV01] is not equal to "1"
               And VA frm_FlagCancelandoLinha_EV01 [EV01] is not equal to "S"
                    ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                         FC Long Address Number_ALKY [ALKY] -> szInputString [AA15]
                         VA evt_mnFornecedor_AN8 [AN8] <- mnOutputMathNumeric [MATH01]
                    F0092.FetchSingle  [Index 1: User]
                         VA frm_USR0_UserID [USR0] = TK User ID [USER]
                         VA evt_mnRequisitante_AN8 [AN8] <- TK Address Number [AN8]
                    Call App:P5598011 Form:W5598011A Version:Undefined
                         FC Order Company [KCOO] -> szCompanyKey [KCO]
                         FC Previous Order Number [LDOC] -> mnDocVoucherInvoiceE [DOC]
                         FC Previous Order Type [DCTO] -> szDocumentType [DCT]
                         VA frm_AlcadasFornecedor [ALPH] -> szBeneficiario [DL01]
                         VA evt_mnFornecedor_AN8 [AN8] -> mnFornecedor [AN8]
                         VA evt_mnRequisitante_AN8 [AN8] -> mnRequisitante [AN81]
               End If
          Else
               // ++++  FIM  -  ISSUE 6105 - BUG - Marília +++++
               If VA frm_FlagCancelandoLinha_EV01 [EV01] is not equal to "S"
                    ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                         FC Long Address Number_ALKY [ALKY] -> szInputString [AA15]
                         VA evt_mnFornecedor_AN8 [AN8] <- mnOutputMathNumeric [MATH01]
                    F0092.FetchSingle  [Index 1: User]
                         VA frm_USR0_UserID [USR0] = TK User ID [USER]
                         VA evt_mnRequisitante_AN8 [AN8] <- TK Address Number [AN8]
                    Call App:P5598011 Form:W5598011A Version:Undefined
                         FC Order Company [KCOO] -> szCompanyKey [KCO]
                         FC Previous Order Number [LDOC] -> mnDocVoucherInvoiceE [DOC]
                         FC Previous Order Type [DCTO] -> szDocumentType [DCT]
                         VA frm_AlcadasFornecedor [ALPH] -> szBeneficiario [DL01]
                         VA evt_mnFornecedor_AN8 [AN8] -> mnFornecedor [AN8]
                         VA evt_mnRequisitante_AN8 [AN8] -> mnRequisitante [AN81]
               End If
               //
          End If
     End If
Else
     // Verifica se foi cancelada a Ordem de Compra
     // Neste caso, encerrar Workflow
     VA frm_AlcadasCancelar [EV01] = "S"
     F4311.Select  [Index 1: Doc No, Order Type, + 1]
          FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
          FC Previous Order Number [LDOC] = TK Document (Order No, Invoice, etc.) [DOCO]
          FC Previous Order Type [DCTO] = TK Order Type [DCTO]
     F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
          VA frm_AlcadasProximoStatus [NXTR] <- TK Status Code - Next [NXTR]
          VA frm_AlcadasUltimoStatus [LTTR] <- TK Status Code - Last [LTTR]
     // Verifica se todos as linhas de detalhe estão canceladas...
     While SV File_IO_Status is equal to CO SUCCESS
          If VA frm_AlcadasUltimoStatus [LTTR] is not equal to "980"
          Or VA frm_AlcadasProximoStatus [NXTR] is not equal to "999"
               VA frm_AlcadasCancelar [EV01] = "N"
          End If
          F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
               VA frm_AlcadasProximoStatus [NXTR] <- TK Status Code - Next [NXTR]
               VA frm_AlcadasUltimoStatus [LTTR] <- TK Status Code - Last [LTTR]
     End While
     If VA frm_AlcadasCancelar [EV01] is equal to "S"
          VA evt_NumeroGrupo_UKID [UKID] = <NULL>
          F55UI020.FetchSingle  [Index 1: Primary]
               FC Previous Order Number [LDOC] = TK Document (Voucher, Invoice, etc.) [DOC]
               FC Previous Order Type [DCTO] = TK Document Type [DCT]
               FC Order Company [KCOO] = TK Document Company [KCO]
               VA evt_NumeroGrupo_UKID [UKID] <- TK Unique Key ID (Internal) [UKID]
          CanceledSourceDocument(N5598012.CanceledSourceDocument)
               FC Previous Order Number [LDOC] -> mnDocVoucherInvoiceE [DOC]
               FC Previous Order Type [DCTO] -> szDocumentType [DCT]
               FC Order Company [KCOO] -> szCompanyKey [KCO]
               VA frm_USR0_UserID [USR0] -> szUserId [USER]
               VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
               VA evt_NumeroGrupo_UKID [UKID] -> mnNumeroGrupo [UKID]
          ! // Terminar processo de Workflow referente ao documento que está sendo excluído
          ! // Issue 6892  - Fernando Herrera - 02/03/2004 - Início
          ! F5598010.Select  [Index 1: VoucherWFDate]
          !      FC Order Company [KCOO] = TK Document Company [KCO]
          !      FC Previous Order Type [DCTO] = TK Document Type [DCT]
          !      FC Previous Order Number [LDOC] = TK Document (Voucher, Invoice, etc.) [DOC]
          !      VA frm_ProcessNameF5598010 [PROCNAME] = TK Process ID [PROCNAME]
          ! F5598010.FetchNext  [Index 1: VoucherWFDate]
          !      VA frm_StartDate9 [STDATE] <- TK Start Date [STDATE]
          !      VA frm_StartTime [STTME] <- TK Start Time [STTME]
          !      VA frm_AlcadasProcessName [PROCNAME] <- TK Process ID [PROCNAME]
          !      VA frm_AlcadasProcessVersion [PROCVER] <- TK Workflow Process Version [PROCVER]
          !      VA frm_AlcadasProcessIntance [PROCIST] <- TK Process Instance [PROCIST]
          ! Terminate Process(VA frm_AlcadasProcessName, VA frm_AlcadasProcessVersion, VA frm_AlcadasProcessIntance)
          ! VA frm_AlcadasPayStatus [PST] = "D"
          ! F5598010.Update  [Index 1: VoucherWFDate]
          !      FC Order Company [KCOO] = TK Document Company [KCO]
          !      FC Previous Order Type [DCTO] = TK Document Type [DCT]
          !      FC Previous Order Number [LDOC] = TK Document (Voucher, Invoice, etc.) [DOC]
          !      VA frm_StartDate9 [STDATE] = TK Start Date [STDATE]
          !      VA frm_StartTime [STTME] = TK Start Time [STTME]
          !      VA frm_AlcadasPayStatus [PST] -> TK Pay Status Code [PST]
          ! // Issue 6892  - Fernando Herrera - 02/03/2004 - Final
     End If
End If
//
// Issue 3933 - Migração Alçadas - Fernando Herrera - 19.07.2002 - Final
// ==========================================================
//
If SV Form_ Mode is equal to CO COPY_MODE
     // SAR #6374441
     Disable Control(FC Grid)
End If
//
If VA frm_EV01_ProtectCurrFields [EV01] is equal to "1"
     Enable Control(FC Currency Code [CRCD])
     Enable Control(FC ExchangeRate_CRR [CRR])
     Enable Control(FC Foreign [CRRM])
     Enable Control(FC Branch/Plant1 [MCU])
     Enable Control(FC Order Date [TRDJ])
     Enable Control(FC HOLD Code [HOLD])
     Enable Control(FC Address Number [AN8])
     Enable Control(FC Long Address Number_ALKY [ALKY])
     Enable Control(FC Ship To [SHAN])
     Enable Control(FC Long Ship To_ALKY [ALKY])
     // =============================================================
     Enable Control(FC Business Unit)
     Enable Control(FC Project)
     Enable Control(FC Job)
     Enable Control(FC Branch/Plant [MCU])
     VA frm_EV01_ProtectCurrFields [EV01] = "0"
     // SAR  6585679  - Add FC Retainage %
     Enable Control(FC Retainage % [PCRT])
     // SAR 8164309 Enable FC Retainage Indicator after OK buttont pressed
     Enable Control(FC Retainage Indicator [RETI])
     // SAR 8164296, After OK button pressed, the same form appears and the tab
     // fields needs to be enabled for the new order entry
     If PO cAdditionalProperties [EV01] is equal to "1"
          Press Button(FC Enable Additonal Properties)
     End If
     If PO cCategoryCodes [EV01] is equal to "1"
          Press Button(FC Enable Category Code)
     End If
     //
     // SAR 8956903 - Apparel Management
     If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
          Enable Control(FC Collection [C9COLL])
          Enable Control(FC SeasonCode [C9SEAC])
          Enable Control(FC Season Year [C9SEAY])
          Enable Control(FC Collection Price Effective Date [C9PRDJ])
     End If
End If
//
// SAR #4201301 - to catch errors in header on subsequent orders
VA frm_cAlreadySetFocus [EV01] = "0"
// ------  Migração JDE 9.0  - Marília - agosto/2011
// ==========================================================
If PO CartoesVisita [EV01] is equal to "S"
     Call App:P5504CVI Form:W5504CVIA Version: 
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Previous Order Number [LDOC] -> mnDocumentOrderInvoiceE [DOCO]
          FC Previous Order Type [DCTO] -> szOrderType [DCTO]
          "0" -> mnLineNumber [LNID]
          UNDEFINED <> szLogoDL02 [DL02]
End If
// ==========================================================
// Ajuste para HAbilitar todos os camps frete, condições de pegamento...
//
// ------  Migração JDE 9.0  - Marília - agosto/2011
Enable Control(FC Payment Terms [PTC])
// ==========================================================
// ISSUE 3233 - VALKIRIA - RBS - 27/07/2002
// ==========================================================
If PO OpcaoSuprimentos [EV01] is equal to "1"
     Enable Control(FC Carrier Number [ANCR])
     Enable Control(FC Freight Handling Code [FRTH])
     Enable Control(FC Local Cobrança [SHAN])
     // ==========================================================
     // ISSUE 5876 - VALKIRIA - RBS - 16/04/2003
     // ==========================================================
     Enable Control(FC LocalEntrega [ADD1])
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Inicio
// Verifica regras da requisição
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szVersaoR554308A [VL01] is not equal to <Blank>
And PO szVersaoR554308A [VL01] is not equal to <NULL>
And PO szVersaoR554308A [VL01] is not equal to "0"
     Call UBE:R554308A Version:PO szVersaoR554308A
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Cancel/Close
Event: Post Button Clicked
Event GUID: 90933709-a23d-11d0-a204-0000f6728a56
=============================================
// 
// SAR 8164296 Should Delete the Clause table records if the Clause records
// exist and the user has hit cancel before F4301 records were even created.
// Pass the Order header key information to check the table recrods.
DeleteClausesTableRecords(B4300080.DeleteClausesTableRecords)
     "000" -> szOrderSuffix [SFXO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] -> mnClause_ID [CUKID]
// ---------------------------------------------------------------------------
//     If OK presses CANCEL, do not treat as a user cancel. 
// ---------------------------------------------------------------------------
// 
If FI DetailFormCancelled [EV02] is equal to "2"
     FI DetailFormCancelled [EV02] = <Blank>
Else
     F4311ClearWorkFiles(XT4311Z1.F4311ClearWorkFiles) [Asynchronous]
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
          "1" -> cClearHeaderFile [EV01]
          "1" -> cClearDetailFile [EV02]
          UNDEFINED <> cErrorInClear [ERR]
          UNDEFINED <> mnLineNumber [LNID]
          VA frm_EV01_UsesWorkFields [EV01] -> cUseWorkFiles [EV01]
          UNDEFINED <> szOrderSuffix [SFX0]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     FI DetailFormCancelled [EV02] = "1"
End If
// 
// ======================================================= 
// 
// ---------------------------------------------------------------------------
//     Cleanup the cache containing header field changes. 
// ---------------------------------------------------------------------------
// 
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     // SAR #6473280 - do not pass in computer ID
     CacheProcessHeaderToDetailChange(B4002390.CacheProcessHeaderToDetailChange)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderKeyCompany [KCOO]
          "4" -> cCacheActionCode [EV01]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supplier Catalog Search
Event: Button Clicked
Event GUID: f57df411-a23a-11d0-a204-0000f6728a56
=============================================
// ==========================================================================
//
//     Catalogs can only be used if the Supplier has been entered.
//
If FC Address Number [AN8] is equal to "0"
     Set Control Error(FC Long Address Number_ALKY, "0003")
     Stop Processing
End If
//
// ==========================================================================
//
//      Call Catalog Search & insert all items returned.
//
Call App:P41061W Form:W41061WB Version:Undefined
     FC Branch/Plant1 [MCU] -> szCostCenter [MCU]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     FC Order Date [TRDJ] -> jdTransactionDate [TRDJ]
     FC To Currency Code [CRDC] -> szBaseCurrency [CRRP]
     FC Currency Code [CRCD] -> szCurrencyCode [CRCD]
Press Button(FC PROCESS: Load Grid From Cache)
//
// ---------------------------------------------------------------------------
// Set the focus in the header in case BeginDoc() has not run.  This way it will
// not run in error when the user tabs out of the grid to enter values in the
// header.
// ---------------------------------------------------------------------------
//
Set Control Focus(FC Long Address Number_ALKY [ALKY])
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Multiple Item Search
Event: Button Clicked
Event GUID: 7db49380-3c46-11d2-a13a-00104bc6f7e5
=============================================
Call App:P40ITM2 Form:W40ITM2F Version:ZJDE0001
     UNDEFINED <> mnIdentifierShortItem [ITM]
     FC Branch/Plant1 [MCU] -> szCostCenter [MCU]
     UNDEFINED <> szLocation [LOCN]
     UNDEFINED <> szLot [LOTN]
     UNDEFINED <> mnQtyOnHandPrimaryUn [PQOH]
     UNDEFINED <> szUnitOfMeasureAsInput [UOM]
     UNDEFINED <> jdDateLayerExpiration [MMEJ]
     UNDEFINED <> cLotStatusCode [LOTS]
     UNDEFINED <> mnLotPotency [LOTP]
     UNDEFINED <> szLotGrade [LOTG]
     UNDEFINED <> cVisualAssistMode [EV01]
     UNDEFINED <> cQualityMode [EV01]
     UNDEFINED <> szLocationE1 [LOCNE1]
     UNDEFINED <> szItemNoUnknownFormat [UITM]
Press Button(FC PROCESS: Load Grid From Cache)


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Cancel Order
Event: Button Clicked
Event GUID: 9eafe1f5-fc11-4111-baaa-ca138116b433
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_CancelOrderFlag_EV01 [EV01]
evt_cBeginDocCalled [EV01]
----------------------------------------
// 
// ---------------------------------------------------------------------------
// Call message box to confirm cancellation,  SAR 5560411
// ---------------------------------------------------------------------------
// 
VA frm_cConfirmCancel_EV01 [EV01] = "0"
Call App:P4310 Form:W4310D Version: 
     VA frm_cConfirmCancel_EV01 [EV01] <> cEverestEventPoint01 [EV01]
// 
If VA frm_cConfirmCancel_EV01 [EV01] is equal to "1"
     // 
     If PO szLastStatusAllowingChange [A1TR] is equal to <Blank>
          PO szLastStatusAllowingChange [A1TR] = "999"
     End If
     // SAR# - 7071418 Base protection also checked
     If PO cProhibitChanges [EV01] is equal to "1"
          Set Control Error(FC Grid, "43CI")
     Else
          // 
          // SAR 6105920 - Cancel Order will return flag if successful
          // SAR 8204905 Begins
          VA frm_cTextAllowed_EV01 [EV01] = "1"
          // SAR 8204905 Ends
          CancelPurchaseOrder(N4301900.CancelPurchaseOrder)
               BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] -> mnOrderNumber [DOCO]
               BC Order Type (F4301.0) [DCTO] -> szOrderType [DCTO]
               BC Order Company (Order Number) (F4301.0) [KCOO] -> szDocumentCompany [KCOO]
               VA evt_CancelOrderFlag_EV01 [EV01] <- cReturnFlag [EV01]
               "1" <> cSuppressErrorMessage [EV01]
               VA frm_JOBS_JobNumber [JOBS] <> mnJobnumberA [JOBS]
               VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               BC Currency Mode-Foreign or Domestic Entry (F4301.0) [CRRM] <> cCurrencyMode [CRRM]
               PO szLastStatusAllowingChange [A1TR] -> szStatusCodeNext [NXTR]
               VA evt_cBeginDocCalled [EV01] <- cBeginDocCalled [EV01]
          // 
          // SAR 7907086 - Begin Doc Firing Twice
          If VA evt_cBeginDocCalled [EV01] is equal to "1"
               VA frm_EV02_BegDocExecuted [EV02] = "1"
          End If
     End If
     // SAR 7969404
     ! Disable Control(HC Cancel/Close)
     // SAR 7969404
     Set Grid Font(FC Grid,  <All Rows>,  <All Columns>, <,Regular,10,Black>)
     Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
     // 
     // SAR 6105920 - Only set flag if cancel order bsfn returned success
     If VA evt_CancelOrderFlag_EV01 [EV01] is equal to "1"
          VA frm_EditLineSucessful_EV01 [EV01] = "1"
     Else
          VA frm_EditLineSucessful_EV01 [EV01] = "0"
     End If
     // 
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Order Templates
Event: Button Clicked
Event GUID: 90932196-a23d-11d0-a204-0000f6728a56
=============================================
// 
// ---------------------------------------------------------------------------
//     Call Order Templates & insert all items returned. 
// ---------------------------------------------------------------------------
// 
If VA frm_szOrderTemplate_ORTP [ORTP] is equal to or empty <Blank>
     Call App:P4015 Form:W4015A Version:ZJDE0002
          FC Address Number [AN8] -> AddressNumber [AN8]
          "3" -> ProcessingMode [EV01]
          "1" -> ProtectAddressNumber [EV02]
          VA frm_GENLNG_P43216CacheHandle [GENLNG] <> CacheHandle [GENLNG]
          "1" -> CalledFromPODetail [EV03]
          FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
Else
     Call App:P40215 Form:W40215A Version:ZJDE0001
          VA frm_szOrderTemplate_ORTP [ORTP] -> OrderTemplate [ORTP]
          FC Address Number [AN8] -> AddressNumber [AN8]
          "3" -> ProcessingMode [EV01]
          FC Order Date [TRDJ] -> TransactionDate [TRDJ]
          UNDEFINED <> OpenOrdersVersion [VERS]
          UNDEFINED <> OrderType [DCTO]
          VA frm_GENLNG_P43216CacheHandle [GENLNG] <> CacheHandle [GENLNG]
          UNDEFINED <> szTemplateBusinessUnit [MCU]
End If
// 
Press Button(FC PROCESS: Load Grid From Cache)
// 
// ---------------------------------------------------------------------------
// Set the focus in the header in case BeginDoc() has not run.  This way it will
// not run in error when the user tabs out of the grid to enter values in the
// header.
// ---------------------------------------------------------------------------
// 
Set Control Focus(FC Long Address Number_ALKY [ALKY])
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supplier Hyperlink
Event: Button Clicked
Event GUID: d8856750-2252-11d2-9ab8-0000f6783946
=============================================
If FC Address Number [AN8] is equal to "0"
Or FC ADDRESS NUMBER [DL01] is equal to or empty <Blank>
     Call App:P4350 Form:W4350A Version: 
          UNDEFINED <> mnAddressNumber [AN8]
          "1" -> cInteractiveModeFlag [IMFOW]
Else
     F4350.FetchSingle  [Index 1: AddressNumber]
          FC Address Number [AN8] = TK Address Number [AN8]
          VA frm_Hyperlink_HLNK [HLNK] <- TK Hyperlink [HLNK]
     If SV File_IO_Status is not equal to CO ERROR
     And VA frm_Hyperlink_HLNK [HLNK] is not equal to <Blank>
     And VA frm_Hyperlink_HLNK [HLNK] is not equal to <NULL>
          Go to Url(VA frm_Hyperlink_HLNK [HLNK])
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Quote Supplier Entry - Order Level
Event: Button Clicked
Event GUID: c7858428-a240-11d0-a204-0000f6728a56
=============================================
// 
If SV Form_ Mode is equal to CO COPY_MODE
And VA frm_RecordInHeaderWkFile [EV01] is not equal to "1"
And FC Address Number [AN8] is not equal to "0"
And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
     Set Control Focus(FC Grid)
End If
//  
// ---------------------------------------------------------------------------
// If order company is blank use branch to retrieve it 
// ---------------------------------------------------------------------------
//  
If FC Branch/Plant1 [MCU] is equal to <Blank>
     Set Edit Control Error(FC Branch/Plant1, "0003")
Else
     //  
     // ---------------------------------------------------------------------------
     // If order number is 0 assign next number  
     // ---------------------------------------------------------------------------
     //  
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               VA frm_ManualOrderEntry [EV01] <> cManualOrderEntry [EV01]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC F4301:Order Type [DCTO])
     End If
     // 
     // SAR 8463923- Prevent account number validation when multiple accounts are
     // in use.
     Call App:P4330 Form:W4330A Version:Undefined
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          "0" -> mnLineNumber [LNID]
          "0" -> mnIdentifierShortItem [ITM]
          FC Ship To [SHAN] -> mnAddressNumberShipTo [SHAN]
          FC Change Order [SFXO] -> szOrderSuffix [SFXO]
          GC Multiple Accounts [MACT] -> cMultipleAccounts [MACT]
     Disable Control(FC Branch/Plant1 [MCU])
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Print the Order (Cotação)
Event: Button Clicked
Event GUID: 5ef15c66-e064-11d1-9ac9-00600832fe19
=============================================
//
// Impressão de cotação (OA, OF, OM..)
// Issue 8063 - Valkiria - RBS - 20/05/05
//
If PO cImprimeR5543501S [EV01] is equal to "1"
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "RBS43001"
     End If
     Call UBE:R5543501S Version:PO szPOPrintOnDemandVersion
          FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
          FC Order Company [KCOO] -> Companykeyorderno [KCOO]
          GC Change Order [SFXO] -> Ordersuffix [SFXO]
          UNDEFINED <> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
Else
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "XJDE0003"
     End If
     ! Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
     !      FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     !      FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
     !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     !      UNDEFINED <> Ordersuffix [SFXO]
     !      "1" -> Modeprocessing [MODE]
     !      UNDEFINED <> Numberchangeorder [CORD]
     Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
          FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
          FC Order Company [KCOO] -> Companykeyorderno [KCOO]
          GC Change Order [SFXO] -> Ordersuffix [SFXO]
          "1" -> Modeprocessing [MODE]
End If
//
// End Issue 8063


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Impressão de Ordem de Compra
Event: Button Clicked
Event GUID: e72e9839-ee62-4c81-841c-3acae5fbaf48
=============================================
// Impressão de Ordem de compra (O2, O3, O4..)
Call UBE:R5543501N Version:RBS002
     FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
     FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     GC Change Order [SFXO] -> Ordersuffix [SFXO]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Order Summary
Event: Button Clicked
Event GUID: f57e0b54-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P430114 Form:W430114A Version: 
     FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> OrderType [DCTO]
     FC Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cSupplierSelfService1 [SSS1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Financial Status Inquiry
Event: Button Clicked
Event GUID: 5ef15c5c-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P44200 Form:W44200A Version:PO szFinancialStatusInquiry
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Change Order [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szDescription [DESC]
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC Branch/Plant1 [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Landed Cost Rules
Event: Button Clicked
Event GUID: 90933466-a23d-11d0-a204-0000f6728a56
=============================================
Call App:P43291 Form:W43291A Version: 
     UNDEFINED <> SystemCode [SY]
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC DCTO:Order Type (wf) [DCTO] -> Ordertype [DCTO]
     GC KCOO:Order Company (wf) [KCOO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Ordersuffix [SFXO]
     "I" -> Modeprocessing [MODE]
     UNDEFINED <> DocumentNumber [DOC]
     UNDEFINED <> DocumentType [DCT]
     UNDEFINED <> DocKeyCompany [KCO]
     UNDEFINED <> BatchNumber [ICU]
     UNDEFINED <> BatchType [ICUT]
     UNDEFINED <> DtForGLandVouch [DGL]
     FC Foreign [CRRM] -> CurrencyMode [CRRM]
     FC Currency Code [CRCD] -> CurrencyCode [CRCD]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> GLSummaryMode [SORD]
     UNDEFINED <> GLLineNumber [LNID]
     UNDEFINED <> ReceiptJobNo [AN8O]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Order Address Information
Event: Button Clicked
Event GUID: f57e0b69-a23a-11d0-a204-0000f6728a56
=============================================
//  
If FC Address Number [AN8] is equal to "0"
Or FC Address Number [AN8] is equal to <Blank>
     Stop Processing
End If
//  
If FC Branch/Plant1 [MCU] is equal to <Blank>
     Set Edit Control Error(FC Branch/Plant1, "0003")
Else
     //  
     // ---------------------------------------------------------------------------
     // If order number is 0 assign next number  
     // ---------------------------------------------------------------------------
     //  
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               VA frm_ManualOrderEntry [EV01] <> cManualOrderEntry [EV01]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC F4301:Order Type [DCTO])
          // 
     End If
     // 
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          Press Button(FC BeginDoc)
          If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
               Call App:P4006 Form:W4006B Version: 
                    FC Address Number [AN8] <> AddressNumber [AN8]
                    FC Ship To [SHAN] <> ShipToNumber [SHAN]
                    FC Order Number [DOCO] <> OrderNumber [DOCO]
                    FC F4301:Order Type [DCTO] <> OrderType [DCTO]
                    FC Order Company [KCOO] <> OrderCompany [KCOO]
                    "P" <> CalledFromSales_S_OrPurch_P [EV01]
                    UNDEFINED <> InquiryMode [EV02]
                    UNDEFINED <> BatchOrderAddress [EV03]
                    UNDEFINED <> EDIOrderAddress [EV04]
                    UNDEFINED <> FileName [FILE]
                    UNDEFINED <> EdiDocumentNumber [EDOC]
                    UNDEFINED <> EdiDocumentType [EDCT]
                    UNDEFINED <> CompanyKeyEdiOrder [EKCO]
                    UNDEFINED <> EdiLineNumber [EDLN]
                    UNDEFINED <> cShoppingCartMode [CART]
                    FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
                    UNDEFINED <> mnDeliverToNumber [DVAN]
                    UNDEFINED <> mnForwardedToNumber [FTAN]
                    UNDEFINED <> mnInvoiceToNumber [ITAN]
               Disable Control(FC Branch/Plant1 [MCU])
          End If
     Else
          Call App:P4006 Form:W4006B Version: 
               FC Address Number [AN8] <> AddressNumber [AN8]
               FC Ship To [SHAN] <> ShipToNumber [SHAN]
               FC Order Number [DOCO] <> OrderNumber [DOCO]
               FC F4301:Order Type [DCTO] <> OrderType [DCTO]
               FC Order Company [KCOO] <> OrderCompany [KCOO]
               "P" <> CalledFromSales_S_OrPurch_P [EV01]
               UNDEFINED <> InquiryMode [EV02]
               UNDEFINED <> BatchOrderAddress [EV03]
               UNDEFINED <> EDIOrderAddress [EV04]
               UNDEFINED <> FileName [FILE]
               UNDEFINED <> EdiDocumentNumber [EDOC]
               UNDEFINED <> EdiDocumentType [EDCT]
               UNDEFINED <> CompanyKeyEdiOrder [EKCO]
               UNDEFINED <> EdiLineNumber [EDLN]
               UNDEFINED <> cShoppingCartMode [CART]
               FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
               UNDEFINED <> mnDeliverToNumber [DVAN]
               UNDEFINED <> mnForwardedToNumber [FTAN]
               UNDEFINED <> mnInvoiceToNumber [ITAN]
     End If
     // 
     // ---------------------------------------------------------------------------
     // .....load the visible ALKY fields in case address values changed
     // ---------------------------------------------------------------------------
     // 
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Ship To [SHAN] -> mnMathNumeric01 [MATH01]
          FC Long Ship To_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supplier Master Information
Event: Button Clicked
Event GUID: f57e0b52-a23a-11d0-a204-0000f6728a56
=============================================
If FC Address Number [AN8] is not equal to "0"
     Call App:P04012 Form:W04012D Version:PO szSupplierMasterVersion
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          UNDEFINED <> szCountryForPayroll [CCPR]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supplier Analysis
Event: Button Clicked
Event GUID: 5ef15c65-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43230 Form:W43230L Version:PO szSupplierAnalysisVersion
     UNDEFINED <> 1qual2del3cost [EV01]
     FC Address Number [AN8] -> Addressnumber [AN8]
     UNDEFINED <> Identifiershortitem [ITM]
     FC Branch/Plant1 [MCU] -> Costcenter [MCU]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Work With Address Book
Event: Button Clicked
Event GUID: f57e0b53-a23a-11d0-a204-0000f6728a56
=============================================
// 
If PO szNewSupplierAdd [VL12] is equal to "1"
     Call App:P01012 Form:W01012B Version:ZJDE0001
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          "V" -> szAddressType1 [AT1]
Else
     Call App:P0101S Form:W0101SA Version: 
          UNDEFINED <> AddressNumber [AN8]
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Log Details
Event: Button Clicked
Event GUID: 5ef15c5d-e064-11d1-9ac9-00600832fe19
=============================================
//  
If FC Branch/Plant1 [MCU] is equal to <Blank>
     Set Edit Control Error(FC Branch/Plant1, "0003")
Else
     //  
     // ---------------------------------------------------------------------------
     // If order number is 0 assign next number  
     // ---------------------------------------------------------------------------
     //  
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               VA frm_ManualOrderEntry [EV01] <> cManualOrderEntry [EV01]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC F4301:Order Type [DCTO])
     End If
     // SAR 6585679 Begin Call New App when Subcontract Logs activated in 40/VF
     If VA frm_cLogsAtLevelsOn_EV01 [EV01] is equal to "1"
          Call App:P4305 Form:W4305A Version:PO szLogsEntryVersion
               FC Order Number [DOCO] -> mnDocument_Order_No_DOCO [DOCO]
               FC F4301:Order Type [DCTO] -> szOrder_F4305_Type_DCTO [DCTO]
               FC Order Company [KCOO] -> szOrder_Company_Order_KCOO [KCOO]
               "000" -> szOrder_F4305_Suffix_OSFX [SFXO]
               "01" -> szLogHierarchyLevel_LOGH [LOGH]
               FC Address Number [AN8] -> mnSubcontractor_AN8 [AN8]
               FC Branch/Plant1 [MCU] -> szProject_MCU [MCU]
               "E" -> cCallType_EV01 [EV01]
               PO cJobProject [EV01] -> cP4310PO_JobProject_EV01 [EV01]
               "2" -> cCallMode_EV01 [EV01]
     Else
          // SAR 6585679 End
          Call App:P4303 Form:W4303A Version:Undefined
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               <Blank> -> cCallType [EV01]
     End If
     Disable Control(FC Branch/Plant1 [MCU])
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Clauses using Print Messages
Event: Button Clicked
Event GUID: 778825bd-92d5-4a06-9220-14d207217540
=============================================
// SAR 8164296
Call App:P4310 Form:W4310K Version:Undefined
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] <> mnClause_ID [CUKID]
// Update the POE Cache record with the new clause ID. Pass the cache related
// to update the cache and Order information to update the order.
// information.
UpdatePOEWithClauseID(B4300080.UpdatePOEWithClauseID)
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
     "000" -> szOrderSuffix [SFXO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] -> mnClause_ID [CUKID]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Work With Routing Options
Event: Button Clicked
Event GUID: ba836521-4aa4-11d3-b031-00105a1bfee6
=============================================
// 
F4215EditDoc(N4900010.F4215EditDoc)
     VA frm_JOBS_JobNumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cSuppressErrorMessages [EV01]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cErrorCode [ERRC]
Call App:P4915 Form:W4915O Version:PO szInboundTransportationVersion
     UNDEFINED <> mnShipmentNumber [SHPN]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     VA frm_JOBS_JobNumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cRoutingOptionsExit [EV01]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Work With Freight Info
Event: Button Clicked
Event GUID: ba836522-4aa4-11d3-b031-00105a1bfee6
=============================================
// 
F4215EditDoc(N4900010.F4215EditDoc)
     VA frm_JOBS_JobNumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "1" -> cSuppressErrorMessages [EV01]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> cErrorCode [ERRC]
Call App:P4915 Form:W4915O Version:PO szInboundTransportationVersion
     UNDEFINED <> mnShipmentNumber [SHPN]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     VA frm_JOBS_JobNumber [JOBS] -> mnTransportationJobNumber [JOBS]
     "0" -> cRoutingOptionsExit [EV01]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Free Goods Catalog
Event: Button Clicked
Event GUID: 7f3ec6f2-403a-4d1a-ba0d-e544fdcc7722
=============================================
// SAR 5133291 Free Goods Catalog Enhancement
Call App:P45731 Form:W45731A Version: 
     UNDEFINED <> szPriceAdjustmentType [AST]
     UNDEFINED <> mnPriceAdjustmentKeyID [ATID]
     UNDEFINED <> szIdentifier2ndItem [LITM]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
     UNDEFINED <> mnRelatedPoSoLineNo [RLLN]
     UNDEFINED <> mnLineNumberXREF [LNIX]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> mnOriginalLineNumber [OGNO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Requested [DRQJ] -> jdDateEffectiveJulian1 [EFTJ]
     UNDEFINED <> szVersion [VERS]
     UNDEFINED <> szCostCenter [MCU]
     UNDEFINED <> mnAddressNumber [AN8]
     UNDEFINED <> szStatusCodeNext [NXTR]
     UNDEFINED <> szPriceAdjustmentScheduleN [ASN]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     UNDEFINED <> cCMRecdWrittenToWF [EV01]
     "P" -> FormCalledFromOrderEntry [EV01]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Publish Externally
Event: Button Clicked
Event GUID: c717ec4f-1ae9-46e7-b71d-2c6ce5a61484
=============================================
// BEGIN SAR 7123652
PurchaseOrderExternalPublish(B4302160.PurchaseOrderExternalPublish)
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_cPublishWarningFlag_EV01 [EV01] <> cExternalPublishWarningFlag [EV01]
// 12580420 - GLN  - B
PurchaseOrderExternalPublish2(B4302160.PurchaseOrderExternalPublish2)
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     "000" -> szOrderSuffix [SFXO]
     VA frm_cPublishWarningFlag_EV01 [EV01] <> cExternalPublishWarningFlag [EV01]
// 12580420 - GLN  - E
VA frm_ManualOrderEntry [EV01] = "1"
// END SAR 7123652


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Additional Information
Event: Button Clicked
Event GUID: daeb69a2-6169-4902-b196-922d85a6567a
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_InteractiveMode [IMFOW]
----------------------------------------
// SAR 8164261 Call Additional information for Supplier classification codes
// If Begin doc is not executed, then should executed the begin doc before
// calling the Form to view the classification code. The classification codes
// are written to  header cache and Begin doc writes the values to the cache. 
! If FC Address Number [AN8] is equal to "0"
! OrFC Address Number [AN8] is equal to <Blank>
     ! Stop Processing
! End If
//  
! If FC Branch/Plant1 [MCU] is equal to <Blank>
     ! Set Edit Control Error(FC Branch/Plant1, "0003")
! Else
     ! //  
     ! // ---------------------------------------------------------------------------
     ! // If order number is 0 assign next number  
     ! // ---------------------------------------------------------------------------
     ! //  
     ! If FC Order Number [DOCO] is equal to "0"
          ! // 
          ! GetNextOrderNumber(B4302960.GetNextOrderNumber)
          !      FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          !      FC Order Company [KCOO] <> szOrderCompany [KCOO]
          !      FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          !      FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
          !      FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          !      VA frm_ManualOrderEntry [EV01] <> cManualOrderEntry [EV01]
          ! // 
          ! Disable Control(FC Order Number [DOCO])
          ! Disable Control(FC F4301:Order Type [DCTO])
          ! // 
     ! End If
! End If
! If VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
     ! Press Button(FC BeginDoc)
! End If
// 
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA evt_InteractiveMode [IMFOW] = "1"
Else
     VA evt_InteractiveMode [IMFOW] = <Blank>
End If
// 
Call App:P4310 Form:W4310M Version:Undefined
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Change Order [SFXO] -> szOrderSuffix [SFXO]
     VA evt_InteractiveMode [IMFOW] -> cInteractiveMode [IMFOW]
! If VA frm_EV02_BegDocExecuted [EV02] is equal to "1"
! End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Regional Information
Event: Button Clicked
Event GUID: 59272cf4-939b-4c3c-84dc-e78fd775be62
=============================================
// Begin SAR 8924964 
P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
     "P4310" -> szCallingAppl [PID]
     SL VersionName -> szCallingVers [VERS]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
     "W4310A" -> szCallingForm [FID]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Change Order [SFXO] -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     "XI1" -> szFormAction [FATN]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     GC Change Order [SFXO] -> szChangeOrder [SFXO]
// End SAR 8924964 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Purchase Order Entry using Collection Templates
Event: Button Clicked
Event GUID: 41adbc18-8844-4619-97e7-9e3f71eef1a1
=============================================
// SAR 8956903 - Apparel Management
Call App:PCW43 Form:WCW43A Version:Undefined
     VA frm_szStyleTemplate_C9MOSA [C9MOSA] <- szC9MOSA-Collection_Modele [C9MOSA]
If VA frm_szStyleTemplate_C9MOSA [C9MOSA] is greater than <Blank>
     VA frm_cPCW10Mode [EV01] = "3"
     Press Button(FC Invoke Style Item Matrix Entry)
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC 
Event: Button Clicked
Event GUID: 95adbb29-9c94-4786-818c-fd66b9d7b00a
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cValidateMultiplesCall [EV01]
evt_cP4310FormMode [EV01]
evt_PreviousMultiplesFlag [EV01]
evt_szCurrencyMode_CRRM [CRRM]
evt_cActionCode_ACTN [ACTN]
----------------------------------------
// 02/01/2008  8668654-Allow user to view account distribution when there is
// partial or full reciept
// 07/13/2011  11040029 -Acct Distribution And Detail L
VA evt_PreviousMultiplesFlag [EV01] = GC Multiple Accounts [MACT]
//
ValidateP4310ToP4316Call(N4303210.ValidateP4310ToP4316Call)
     VA evt_cValidateMultiplesCall [EV01] <- cErrorCode_EV01 [EV01]
     <Blank> -> cSuppressErrorMessage_EV01 [EV01]
     VA grd_cInventoryInterface_IVI [IVI] -> cInventoryInterface_IVI [IVI]
     VA grd_StockingType_STKT [STKT] -> cStockingType_STKT [STKT]
     GC Related Item No [RLIT] -> szItemNumberRelatedKit_RLIT [RLIT]
     VA grd_FreeGoodExists_EV01 [EV01] -> cFreeGoodExists_EV01 [EV01]
     GC Extended Cost [AEXPE1] -> mnExtendedPrice_AEXP1 [AEXPE1]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumber_JOBS [JOBS]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     FC Order Company [KCOO] -> szOrderCompany_KCOO [KCOO]
     FC Order Number [DOCO] -> mnOrderNumber_DOCO [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     GC Change Order [SFXO] -> szOrderSuffix_SFXO [SFXO]
     GC Line Number [LNID] -> mnLineNumber_LNID [LNID]
     VA grd_cLineError_EV01 [EV01] -> cEditLineErrorCode_EV01 [EV01]
     PO cProhibitChanges [EV01] -> cProhibitChanges_EV01 [EV01]
//
If VA evt_cValidateMultiplesCall [EV01] is not equal to "1"
     //
     If SV Form_ Mode is equal to CO ADD_MODE
          VA evt_cP4310FormMode [EV01] = "A"
     End If
     //
     // SAR 8668654-To disallow the user from making any changes to the  account
     // distribution in case of partial / full receipt or when base  order
     // protection is turned on we call p4316 in inquire mode   .
     VA evt_cActionCode_ACTN [ACTN] = GC ACTN:Action Code (wf) [ACTN]
     If BC Amount - Received (F4311.0) [AREC] is greater than "0"
     Or BC Amount - Received Foreign (F4311.0) [FREC] is greater than "0"
     Or BC Units - Received (F4311.0) [UREC] is greater than "0"
     Or PO cProhibitChanges [EV01] is equal to "1"
          VA evt_cActionCode_ACTN [ACTN] = "I"
     End If
     // Bug#11040029 - Begin
     // If Detail Order Line is protected then call P4316 in inquire mode so that
     // the application will be read only.
     If GC EV03-ProtectedLine(1/0) [EV03] is equal to "1"
          VA evt_cActionCode_ACTN [ACTN] = "I"
     End If
     // Bug#11040029 – End
     // SAR 8472766 - P4316 Dist Amount is not displayed when currency off.  If
     // currency off, pass blank for currency mode
     If SL CurrencyProcessing is equal to "N"
          VA evt_szCurrencyMode_CRRM [CRRM] = <NULL>
     Else
          VA evt_szCurrencyMode_CRRM [CRRM] = FC Foreign [CRRM]
     End If
     //
     // SAR 8164317 Service Units enhancement
     // SAR 8462998 Job Type and Multiples
     Call App:P4316 Form:W4316A Version:Undefined
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Extended Cost [AEXPE1] -> mnExtendedPrice [AEXPE1]
          GC Quantity Ordered [UORGE1] -> mnOrderQuantity [UORGE1]
          VA evt_szCurrencyMode_CRRM [CRRM] -> cCurrencyMode [CRRM]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobnumber [JOBS]
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
          SL VersionName -> szPOVersion [VL01]
          VA evt_cActionCode_ACTN [ACTN] -> cDetailActionMode [EV01]
          FC Currency Code [CRCD] -> szCurrencyCode [CRCD]
          GC Account Number [ANI] -> szUnformattedAccountNumber [ANI]
          VA evt_cP4310FormMode [EV01] -> cPreviousFormMode_EV01 [EV01]
          GC G/L Date [DGL] -> jdDateGL_DGL [DGL]
          VA grd_cGridMultipleAccountExist [EV01] <> cMultiplesCacheRecsWritten [EV01]
          GC Next Status [NXTR] -> szPreviousFormNextStatus [NXTR]
          GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
          GC Job Typ [JBCD] -> szJobCategory [JBCD]
          GC Ln Ty [LNTY] -> szLineType [LNTY]
     // END SAR 8668654
     //
     // If multiple accounts were written, assign the GC value so this will trigger
     // the F4311 row written to cache.
     If VA grd_cGridMultipleAccountExist [EV01] is equal to "1"
          //
          // SAR #7162547 Force the Z2 Edit line to run if there are multiple accounts.
          // This is necessary because Z4 End Doc will not fire or write the cache
          // records for multiples.  Hence, Multiples values will be incorrect.
          // SAR 7221113 Add if condition
          If VA grd_F4311EditLineCalled_EV01 [EV01] is not equal to "1"
               GC Multiple Accounts [MACT] = "0"
               GC Multiple Accounts [MACT] = VA grd_cGridMultipleAccountExist [EV01]
          End If
          //
          VA frm_cMultipleAccountsWritten [EV01] = "1"
          //
          // ***************************************************************************
          // Populate the display and work variables in order to have Multiple Accounts
          // notification display correctly and populate the Edit Line call correctly.
          // Do this only if it has not already been done.
          //
          If VA evt_PreviousMultiplesFlag [EV01] is not equal to "1"
               GC Multiple Accounts [MACT] = VA grd_cGridMultipleAccountExist [EV01]
               // populate the work variables
               VA grd_MultipleAccounts_ANI [ANI] = GC Account Number [ANI]
               VA grd_MultipleAccounts_OMCU [OMCU] = GC Business Unit [OMCU]
               VA grd_MultipleAccounts_OBJ [OBJ] = GC Obj Acct [OBJ]
               VA grd_MultipleAccounts_SUB [SUB] = GC Sub  [SUB]
               VA grd_MultipleAccounts_SBLT [SBLT] = GC Sub Type [SBLT]
               VA grd_MultipleAccounts_SBL [SBL] = GC Subledger [SBL]
               //
               // populate the display columns
               GC Account Number [ANI] = TV *** ACCOUNT DISTRIBUTION ***
               GC Business Unit [OMCU] = <Blank>
               GC Obj Acct [OBJ] = <Blank>
               GC Sub  [SUB] = <Blank>
               GC Sub Type [SBLT] = <Blank>
               GC Subledger [SBL] = <Blank>
          End If
          //
          // Disable the GC fields to prevent entry
          Disable Grid(FC Grid, <Currently Selected Row>, GC MultipleAccounts)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC Account Number)
          Disable Grid(FC Grid, <Currently Selected Row>, GC CostCenter)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
          Disable Grid(FC Grid, <Currently Selected Row>, GC SubType)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Subledger)
          // SAR 8462998 Job Type enhancement
          If VA frm_USGovernmentContractingUse [GCUSED] is equal to "1"
               Disable Grid(FC Grid, <Currently Selected Row>, GC JobTyp)
          End If
     End If
End If
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Set Unit And Extended Price To Zero
Event: Button Clicked
Event GUID: 90933c98-a23d-11d0-a204-0000f6728a56
=============================================
GC Unit Cost [UPAX] = "0"
GC PRRCE1:Old Unit Price (wf) [PRRCE1] = "0"
GC Extended Cost [AEXPE1] = "0"
GC PROV:Price Override - (wf) [PROV] = "1"
// SAR 7801302
VA grd_cManualOverride_MOADJ [MOADJ] = "0"
// 
VA grd_AREV_AdjRevisionLevel [AREV] = [VA grd_AREV_AdjRevisionLevel [AREV]]+1


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Price History
Event: Button Clicked
Event GUID: 0f34d311-23fc-11d2-8dee-0000f6782893
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cPriceHistoryLineCanceled [EV01]
evt_szPriceHistoryIntVariable [SOEF]
----------------------------------------
//
ConvertNumericToString(B0000045.ConvertNumericToString)
     VA grd_AREV_AdjRevisionLevel [AREV] -> mnMathNumeric01 [MATH01]
     VA frm_CLVL_PriceCatLevel [CLVL] <- szVideoConstant30A [VC30A]
//
// ---------------------------------------------------------------------------
// 4073864 - Return flag to indicate if user manually added/inserted an
// adjustment.  If so, the PS09 flag will be updated to indicate that price
// history exists for this detail line.
// SAR #6563630 - pass in Change Order to Price History window
// ---------------------------------------------------------------------------
//
// Sar 7144939 Add non-currency
If FC Foreign [CRRM] is equal to "D"
Or SL CurrencyProcessing is equal to "N"
     ! Call App:P4074 Form:W4074C Version:ZJDE0001
     !      VA frm_CTID_ComputerID [CTID] -> ComputerID [CTID]
     !      VA frm_JOBS_JobNumber [JOBS] -> JobNumber [JOBS]
     !      GC Line Number [LNID] -> LineNumber2 [XLIN]
     !      FC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     !      FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
     !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     !      GC Line Number [LNID] -> Linenumber [LNID]
     !      GC Item Number [UITM] -> Itemnounknownformat [UITM]
     !      GC Description 1 [DSC1] -> Descriptionline1 [DSC1]
     !      GC Quantity Ordered [UORGE1] -> Unitstransactionqty [UORG]
     !      GC Tr. UoM [UOM] -> Unitofmeasureasinput [UOM]
     !      GC Pu. UoM [UOM3] -> Unitofmeasurepricing [UOM4]
     !      FC Address Number [AN8] -> Addressnumber [AN8]
     !      GC Short Item No [ITM] -> Identifiershortitem [ITM]
     !      FC Foreign [CRRM] -> Currencymode [CRRM]
     !      GC Unit Cost [UPAX] -> Amtpriceperunit2 [UPRC]
     !      GC Unit Cost [UPAX] <- Amtlistpriceperunit [LPRC]
     !      GC Quantity Ordered [UORGE1] -> Unitsquantityshipped [SOQS]
     !      GC Branch/ Plant [MCU] -> Costcenter [MCU]
     !      GC Unit Cost [UPAX] -> Amtpriceperunitupr2 [UPR2]
     !      FC Currency Code [CRCD] -> Currencycodefrom [CRCD]
     !      FC To Currency Code [CRDC] -> Currencycodeto [CRDC]
     !      GC PROV:Price Override - (wf) [PROV] -> Priceoverridecode [PROV]
     !      VA frm_CLVL_PriceCatLevel [CLVL] <> Pricingcategorylevel1 [CLVL]
     !      FC Order Date [TRDJ] -> Datepriceeffectivedate [PEFJ]
     !      VA grd_ASN_AdjSchedule [ASN] -> Priceadjustmentschedulen [ASN]
     !      GC Ship To Number [SHAN] -> Addressnumbershipto [SHAN]
     !      "A" -> CheckPriceOrAdjustments [EV01]
     !      VA grd_AREV_AdjRevisionLevel [AREV] <> Adjustmentrevisionlevel [AREV]
     !      "1" -> cTargetApplication [EV02]
     !      VA frm_mnProcessID_PEID [PEID] -> mnProcess_ID_F40UI74 [PEID]
     !      VA frm_mnTransactionID_TCID [TCID] -> mnTransaction_ID_F40UI74 [TCID]
     !      VA grd_ManualAdj_PS09 [PS09] <- cSalesOrderStatus09 [SO09]
     !      GC POE Trigger Reprice [EV01] <- cPOETriggerReprice [EV01]
     !      GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     Call App:P4074 Form:W4074D Version:ZJDE0001
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Line Number [LNID] -> mnWFLineNumber [XLIN]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          GC Branch/ Plant [MCU] -> szCostCenter [MCU]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Ship To Number [SHAN] -> mnShipTo [SHAN]
          GC Short Item No [ITM] -> mnShortItemNo [ITM]
          GC Item Number [UITM] -> szItemUnknownFormat [UITM]
          GC Quantity Ordered [UORGE1] -> mnQuantityOrdered [UORG]
          GC Quantity Ordered [UORGE1] -> mnQuantityShipped [SOQS]
          GC Unit Cost [UPAX] -> mnUnitPrice [UPRC]
          GC Unit Cost [UPAX] -> mnForeignUnitPrice [UPR2]
          GC Unit Cost [UPAX] <- mnListPrice [LPRC]
          GC Description 1 [DSC1] -> szDescriptionLine [DSC1]
          GC Tr. UoM [UOM] -> szUnitOfMeasureAsInput [UOM]
          GC Pu. UoM [UOM3] -> szUnitOfMeasurePricing [UOM4]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdPriceEffectiveDate [PEFJ]
          GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideCode [PROV]
          VA frm_CLVL_PriceCatLevel [CLVL] <> szPricingCategoryLevel1 [CLVL]
          VA grd_ASN_AdjSchedule [ASN] -> szPriceAdjSchedule [ASN]
          "A" -> cCheckPriceOrAdjustments [EV01]
          GC POE Trigger Reprice [EV01] <- cPOETriggerReprice [EV01]
          VA grd_ManualAdj_PS09 [PS09] <- cAdjTypeAppliedSO09 [SO09]
          "1" -> cTargetApplication [EV02]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
Else
     // SAR 7052153 - Passed FC Exchange Rate
     ! Call App:P4074 Form:W4074C Version:ZJDE0001
     !      VA frm_CTID_ComputerID [CTID] -> ComputerID [CTID]
     !      VA frm_JOBS_JobNumber [JOBS] -> JobNumber [JOBS]
     !      GC Line Number [LNID] -> LineNumber2 [XLIN]
     !      FC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     !      FC F4301:Order Type [DCTO] -> Ordertype [DCTO]
     !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     !      GC Line Number [LNID] -> Linenumber [LNID]
     !      GC Item Number [UITM] -> Itemnounknownformat [UITM]
     !      GC Description 1 [DSC1] -> Descriptionline1 [DSC1]
     !      GC Quantity Ordered [UORGE1] -> Unitstransactionqty [UORG]
     !      GC Tr. UoM [UOM] -> Unitofmeasureasinput [UOM]
     !      GC Pu. UoM [UOM3] -> Unitofmeasurepricing [UOM4]
     !      FC Address Number [AN8] -> Addressnumber [AN8]
     !      GC Short Item No [ITM] -> Identifiershortitem [ITM]
     !      FC Foreign [CRRM] -> Currencymode [CRRM]
     !      GC Unit Cost [UPAX] -> Amtpriceperunit2 [UPRC]
     !      GC Quantity Ordered [UORGE1] -> Unitsquantityshipped [SOQS]
     !      GC Unit Cost [UPAX] <- Amountlistpriceforeign [FPRC]
     !      GC Branch/ Plant [MCU] -> Costcenter [MCU]
     !      FC ExchangeRate_CRR [CRR] -> Currencyconverrateov [CRR]
     !      GC Unit Cost [UPAX] -> Amtpriceperunitupr2 [UPR2]
     !      FC Currency Code [CRCD] -> Currencycodefrom [CRCD]
     !      FC To Currency Code [CRDC] -> Currencycodeto [CRDC]
     !      GC PROV:Price Override - (wf) [PROV] -> Priceoverridecode [PROV]
     !      VA frm_CLVL_PriceCatLevel [CLVL] <> Pricingcategorylevel1 [CLVL]
     !      FC Order Date [TRDJ] -> Datepriceeffectivedate [PEFJ]
     !      VA grd_ASN_AdjSchedule [ASN] -> Priceadjustmentschedulen [ASN]
     !      GC Ship To Number [SHAN] -> Addressnumbershipto [SHAN]
     !      "A" -> CheckPriceOrAdjustments [EV01]
     !      VA grd_AREV_AdjRevisionLevel [AREV] <> Adjustmentrevisionlevel [AREV]
     !      "1" -> cTargetApplication [EV02]
     !      VA frm_mnProcessID_PEID [PEID] -> mnProcess_ID_F40UI74 [PEID]
     !      VA frm_mnTransactionID_TCID [TCID] -> mnTransaction_ID_F40UI74 [TCID]
     !      VA grd_ManualAdj_PS09 [PS09] <- cSalesOrderStatus09 [SO09]
     !      GC POE Trigger Reprice [EV01] <- cPOETriggerReprice [EV01]
     !      GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     Call App:P4074 Form:W4074D Version:ZJDE0001
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Line Number [LNID] -> mnWFLineNumber [XLIN]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szOrderCompany [KCOO]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          GC Branch/ Plant [MCU] -> szCostCenter [MCU]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Ship To Number [SHAN] -> mnShipTo [SHAN]
          GC Short Item No [ITM] -> mnShortItemNo [ITM]
          GC Item Number [UITM] -> szItemUnknownFormat [UITM]
          GC Quantity Ordered [UORGE1] -> mnQuantityOrdered [UORG]
          GC Quantity Ordered [UORGE1] -> mnQuantityShipped [SOQS]
          GC Unit Cost [UPAX] -> mnUnitPrice [UPRC]
          GC Unit Cost [UPAX] -> mnForeignUnitPrice [UPR2]
          GC Unit Cost [UPAX] <- mnForeignListPrice [FPRC]
          GC Description 1 [DSC1] -> szDescriptionLine [DSC1]
          GC Tr. UoM [UOM] -> szUnitOfMeasureAsInput [UOM]
          GC Pu. UoM [UOM3] -> szUnitOfMeasurePricing [UOM4]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC ExchangeRate_CRR [CRR] -> mnCurrencyConvRate [CRR]
          FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdPriceEffectiveDate [PEFJ]
          GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideCode [PROV]
          VA frm_CLVL_PriceCatLevel [CLVL] <> szPricingCategoryLevel1 [CLVL]
          VA grd_ASN_AdjSchedule [ASN] -> szPriceAdjSchedule [ASN]
          "A" -> cCheckPriceOrAdjustments [EV01]
          GC POE Trigger Reprice [EV01] <- cPOETriggerReprice [EV01]
          VA grd_ManualAdj_PS09 [PS09] <- cAdjTypeAppliedSO09 [SO09]
          "1" -> cTargetApplication [EV02]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
End If
//
//
// ---------------------------------------------------------------------------
// 4073864 - If unit cost is zero, zero extended cost so that cost is not
// recalculated based on extended again.  This indicates that user adjusted cost
// to zero in price history window.
// ---------------------------------------------------------------------------
//
If GC Unit Cost [UPAX] is equal to "0"
     GC Extended Cost [AEXPE1] = "0"
End If
//
ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
     VA frm_CLVL_PriceCatLevel [CLVL] -> szInputString [AA15]
     VA grd_AREV_AdjRevisionLevel [AREV] <- mnOutputMathNumeric [MATH01]
     UNDEFINED <> cReturnedErrorCode [ERR]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Cancel Line
Event: Button Clicked
Event GUID: f57df40f-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_NXTR_TempStatus [NXTR]
evt_ReleaseType_EV01 [EV01]
evt_BudgetHoldExist_EV01 [EV01]
evt_FreeGoodDeleteCursor [GENLNG]
evt_FreeGoodDeleteErrorID [DTAI]
evt_FreeGoodOrderSuffix [SFXO]
evt_FreeGoodActionCode2 [ACTN]
evt_FreeGoodLineNumber [LNID]
evt_FreeGoodOrderType [DCTO]
evt_FreeGoodOrderNumber [DOCO]
evt_FreeGoodCompany [KCOO]
evt_FreeGoodPurOrdStat08 [PS08]
evt_FreeGoodOrigCompany [OKCO]
evt_FreeGoodTempOrderNumber [OORN]
evt_FreeGoodOrigDocType [OCTO]
evt_FreeGoodOrigLineNumber [OGNO]
evt_FreeGoodOrigOrderNumber [DOCO]
evt_FreeGoodPrevComputerID [CTID]
evt_FreeGoodPrevProcessID [PEID]
evt_FreeGoodPrevTransactionID [TCID]
evt_FreeGoodPrevJobNumber [JOBS]
evt_FreeGoodPrevOrderSuffix [SFXO]
evt_FreeGoodPrevActionCode2 [ACTN]
evt_FreeGoodPrevLineNumber [LNID]
evt_FreeGoodFirstCacheFetch [EV01]
----------------------------------------
// Chamado 304544 - Luiz Gindri - 17/12/2009
// Não Permite Cancelamento Linhas com Aceite
F4311.FetchSingle  [Index 1: Doc No, Order Type, + 1]
     FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
     FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
     GC Change Order [SFXO] = TK Order Suffix [SFXO]
     GC Line Number [LNID] = TK Line Number [LNID]
     VA frm_IndicadorAceite [URCD] <- TK User Reserved Code [URCD]
If VA frm_IndicadorAceite [URCD] is equal to "S"
     Call App:P4310 Form:W4310O Version:Undefined
     Stop Processing
Else
     //
     // Do not processes lines in change mode with errors.  User must fix errors.
     //
     //
     //  SAR  6736334 - Delete condition that all errors must be cleaned up to
     // cancel a line
     ! If VA grd_cLineError_EV01 [EV01] is equal to "1"
     ! And GC ACTN:Action Code (wf) [ACTN] is not equal to "A"
          ! Stop Processing
     ! Else
          //
          // ATRIBUI A DATA DE CANCELAMENTO A DATA DO DIA
          //
          If GC Cancel Date [CNDJ] is equal to Null Date
               GC Cancel Date [CNDJ] = date_today()
               // ------ ISSUE 10700 - Marília - Permitir cancelamento OC c/data futura
               If FC Order Date [TRDJ] is greater than GC Cancel Date [CNDJ]
                    GC Cancel Date [CNDJ] = [FC Order Date [TRDJ]]
               End If
               // ------
          End If
          //
          // -----------------------------------------------------------------------------
          // ISSUE 7065 - Marília - Ajuste na DT.G/L linha p/permitir cancelmto
          GC G/L Date [DGL] = date_today()
          GC Request Date [DRQJ] = date_today()
          GC Promised Delivery [PDDJ] = date_today()
          // -----------------------------------------------------------------------------
          // ------ ISSUE 10700 - Marília - Permitir cancelamento OC c/data futura
          If FC Order Date [TRDJ] is greater than GC G/L Date [DGL]
               GC G/L Date [DGL] = [FC Order Date [TRDJ]]
          End If
          // ------
          //
          // ---------------------------------------------------------------------------
          // If the processing option which limits modification of a line past a certain
          // NextStatus is set, then do not perform any processing on the line.
          // ---------------------------------------------------------------------------
          //
          If PO szLastStatusAllowingChange [A1TR] is equal to <Blank>
               PO szLastStatusAllowingChange [A1TR] = "999"
          End If
          //
          VA grd_cKitProcessed_EV01 [EV01] = "1"
          //
          If GC Next Status [NXTR] is less than PO szLastStatusAllowingChange [A1TR]
          And PO szLastStatusAllowingChange [A1TR] is not equal to <Blank>
               //
               // ---------------------------------------------------------------------------
               // If line being cancelled only exists in Work File...clear the line from the
               // file
               // ---------------------------------------------------------------------------
               //
               If GC ACTN:Action Code (wf) [ACTN] is equal to "A"
                    //
                    // ---------------------------------------------------------------------------
                    // Clear errors before canceling line so that order will be commited
                    // ---------------------------------------------------------------------------
                    //
                    Clear Grid Cell Error(FC Grid,  <Currently Selected Row>,  <All Columns>)
                    //
                    If GC EV01:Record in Detail W.File (wf) [EV01] is equal to "1"
                    And GC Line Number [LNID] is not equal to "0"
                    And GC Line Number [LNID] is not equal to <NULL>
                         If GC Change Order [SFXO] is not equal to <Blank>
                         And GC Change Order [SFXO] is not equal to <NULL>
                              F4311ClearWorkFiles(XT4311Z1.F4311ClearWorkFiles)
                                   VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                                   VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                                   "0" <> cClearHeaderFile [EV01]
                                   "1" <> cClearDetailFile [EV02]
                                   UNDEFINED <> cErrorInClear [ERR]
                                   GC Line Number [LNID] <> mnLineNumber [LNID]
                                   VA frm_EV01_UsesWorkFields [EV01] <> cUseWorkFiles [EV01]
                                   GC Change Order [SFXO] -> szOrderSuffix [SFX0]
                                   VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
                                   VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                              //
                              // SAR 7287569 begin
                              // Delete the Transportation Line from the shipment when a line is canceled.
                              If VA frm_cTransportationInstalled [EV01] is equal to "1"
                                   ProcessOrderLine(N4900180.ProcessOrderLine)
                                        "P" -> cSourceofOrder [SRCO]
                                        "D" -> cActionCode2 [ACTN]
                                        FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                                        FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                                        GC KCOO:Order Company (wf) [KCOO] -> szCompanyKeyOrderNo [KCOO]
                                        GC Line Number [LNID] -> mnLineNumber [LNID]
                                        GC Ln Ty [LNTY] -> szLineType [LNTY]
                                        GC Business Unit [OMCU] -> szCostCenter [MCU]
                                        GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
                                        GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
                                        GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                                        GC Quantity Ordered [UORGE1] -> mnUnitsQuantityShipped [SOQS]
                                        GC Tr. UoM [UOM] -> szUnitOfMeasureAsInput [UOM]
                                        GC Extended Weight [ITWT] -> mnAmountUnitWeight [ITWT]
                                        GC Wt UoM [WTUM] -> szWeightUnitOfMeasure [WTUM]
                                        GC Extended Volume [ITVL] -> mnAmountUnitVolume [ITVL]
                                        GC Vol  UoM [VLUM] -> szVolumeUnitOfMeasure [VLUM]
                                        FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                                        VA frm_JOBS_JobNumber [JOBS] -> mnTransportationJobNumber [JOBS]
                                        "1" -> cSuppressErrorMessages [EV01]
                                        "P4310" -> szProgramId [PID]
                                        FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
                                        GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
                                        GC Line Number [LNID] -> mnWorkLineNumber [LNID]
                                        GC Sec Quantity Ordered [SQOR] -> mnSecondaryQtyShipped [SQOR]
                                        GC Sec UoM [UOM2] -> szSecondaryUOMAsInput [UOM2]
                              End If
                              // SAR 7287569 end
                              //
                              // SAR 6464957
                              If VA grd_StockingType_STKT [STKT] is equal to "K"
                                   VA frm_ERRC_Error [ERRC] = "0"
                                   VA frm_KitLineNumber_LNID [LNID] = GC Line Number [LNID]
                                   While VA frm_ERRC_Error [ERRC] is not equal to "1"
                                        VA frm_KitLineNumber_LNID [LNID] = [VA frm_KitLineNumber_LNID [LNID]]+.01
                                        F4311ClearWorkFiles(XT4311Z1.F4311ClearWorkFiles)
                                             VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                                             VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                                             "0" <> cClearHeaderFile [EV01]
                                             "1" <> cClearDetailFile [EV02]
                                             VA frm_ERRC_Error [ERRC] <> cErrorInClear [ERR]
                                             VA frm_KitLineNumber_LNID [LNID] <> mnLineNumber [LNID]
                                             VA frm_EV01_UsesWorkFields [EV01] <> cUseWorkFiles [EV01]
                                             GC Change Order [SFXO] -> szOrderSuffix [SFX0]
                                             VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
                                             VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                                   End While
                                   VA frm_ERRC_Error [ERRC] = "0"
                              End If
                              //
                              // ---------------------------------------------------------------------------
                              // If we are canceling a parent line that has an associated free good line, we
                              // need to loop through the cache and remove the free good lines from cache so
                              // they will not be written.
                              // ---------------------------------------------------------------------------
                              //
                              If VA grd_FreeGoodExists_EV01 [EV01] is equal to "1"
                                   VA evt_FreeGoodFirstCacheFetch [EV01] = "1"
                                   While VA evt_FreeGoodDeleteErrorID [DTAI] is equal to or empty <Blank>
                                        //
                                        // ---------------------------------------------------------------------------
                                        // Retrieve detail cache record
                                        // ---------------------------------------------------------------------------
                                        //
                                        CacheProcessPODetailCache(B4302180.CacheProcessPODetailCache)
                                             "6" -> szCacheActionCode_CACTN [CACTN]
                                             "1" -> NidIndexNumber_INID [INID]
                                             "4" -> mnNumberKeys_NKEYS [NKEYS]
                                             "1" -> cSuppressErrorMessages_EV01 [EV01]
                                             VA evt_FreeGoodDeleteErrorID [DTAI] <- szErrorMessageID_DTAI [DTAI]
                                             VA evt_FreeGoodDeleteCursor [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
                                             VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
                                             VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                                             VA evt_FreeGoodActionCode2 [ACTN] <- cActionCode2_ACTN [ACTN]
                                             UNDEFINED <> cFlagTransactionEdit_EDFL [EDFL]
                                             VA evt_FreeGoodCompany [KCOO] <- szCompanyKeyOrderNo_KCOO [KCOO]
                                             VA evt_FreeGoodOrderNumber [DOCO] <- mnDocumentOrderInvoiceE_DOCO [DOCO]
                                             VA evt_FreeGoodOrderType [DCTO] <- szOrderType_DCTO [DCTO]
                                             VA evt_FreeGoodOrderSuffix [SFXO] <- szOrderSuffix_SFXO [SFXO]
                                             VA evt_FreeGoodLineNumber [LNID] <- mnLineNumber_LNID [LNID]
                                             UNDEFINED <> szCostCenter_MCU [MCU]
                                             VA evt_FreeGoodOrigCompany [OKCO] <- szCompanyKeyOriginal_OKCO [OKCO]
                                             VA evt_FreeGoodTempOrderNumber [OORN] <- szOriginalPoSoNumber_OORN [OORN]
                                             VA evt_FreeGoodOrigDocType [OCTO] <- szOriginalOrderType_OCTO [OCTO]
                                             VA evt_FreeGoodOrigLineNumber [OGNO] <- mnOriginalLineNumber_OGNO [OGNO]
                                             UNDEFINED <> szCompanyKeyRelated_RKCO [RKCO]
                                             UNDEFINED <> szRelatedPoSoNumber_RORN [RORN]
                                             UNDEFINED <> szRelatedOrderType_RCTO [RCTO]
                                             UNDEFINED <> mnRelatedPoSoLineNo_RLLN [RLLN]
                                             UNDEFINED <> szContractNumberDist_DMCT [DMCT]
                                             UNDEFINED <> mnContractSuppDist_DMCS [DMCS]
                                             UNDEFINED <> cContractBalancesUpdatedY_BALU [BALU]
                                             UNDEFINED <> mnAddressNumber_AN8 [AN8]
                                             UNDEFINED <> mnAddressNumberShipTo_SHAN [SHAN]
                                             UNDEFINED <> jdDateRequestedJulian_DRQJ [DRQJ]
                                             UNDEFINED <> jdDateTransactionJulian_TRDJ [TRDJ]
                                             UNDEFINED <> jdPromisedDeliveryDate_PDDJ [PDDJ]
                                             UNDEFINED <> jdDateOriginalPromisde_OPDJ [OPDJ]
                                             UNDEFINED <> jdActualDeliveryDate_ADDJ [ADDJ]
                                             UNDEFINED <> jdCancelDate_CNDJ [CNDJ]
                                             UNDEFINED <> jdDatePriceEffectiveDate_PEFJ [PEFJ]
                                             UNDEFINED <> jdDatePromisedPickJu_PPDJ [PPDJ]
                                             UNDEFINED <> jdDatePromisedShipJu_PSDJ [PSDJ]
                                             UNDEFINED <> jdDateServiceCurrency_DSVJ [DSVJ]
                                             UNDEFINED <> jdDtForGLAndVouch1_DGL [DGL]
                                             UNDEFINED <> mnPeriodNoGeneralLedge_PN [PN]
                                             UNDEFINED <> szReference1_VR01 [VR01]
                                             UNDEFINED <> szReference2Vendor_VR02 [VR02]
                                             UNDEFINED <> mnIdentifierShortItem_ITM [ITM]
                                             UNDEFINED <> szIdentifier2ndItem_LITM [LITM]
                                             UNDEFINED <> szIdentifier3rdItem_AITM [AITM]
                                             UNDEFINED <> szLocation_LOCN [LOCN]
                                             UNDEFINED <> szLot_LOTN [LOTN]
                                             UNDEFINED <> szFromGrade_FRGD [FRGD]
                                             UNDEFINED <> szThruGrade_THGD [THGD]
                                             UNDEFINED <> mnFromPotency_FRMP [FRMP]
                                             UNDEFINED <> mnThruPotency_THRP [THRP]
                                             UNDEFINED <> szDescriptionLine1_DSC1 [DSC1]
                                             UNDEFINED <> szDescriptionLine2_DSC2 [DSC2]
                                             UNDEFINED <> szLineType_LNTY [LNTY]
                                             UNDEFINED <> szStatusCodeNext_NXTR [NXTR]
                                             UNDEFINED <> szStatusCodeLast_LTTR [LTTR]
                                             UNDEFINED <> szItemNumberRelatedKit_RLIT [RLIT]
                                             UNDEFINED <> szReportingCode1Sales_PDS1 [PDS1]
                                             UNDEFINED <> szReportingCode2Sales_PDS2 [PDS2]
                                             UNDEFINED <> szReportingCode3Sales_PDS3 [PDS3]
                                             UNDEFINED <> szReportingCode4Sales_PDS4 [PDS4]
                                             UNDEFINED <> szReportingCode5Sales_PDS5 [PDS5]
                                             UNDEFINED <> szUnitOfMeasureAsInput_UOM [UOM]
                                             UNDEFINED <> mnUnitsTransactionQty_UORG [UORG]
                                             UNDEFINED <> mnUnitsChangeOrderQty_UCHG [UCHG]
                                             UNDEFINED <> mnUnitsOpenQuantity_UOPN [UOPN]
                                             UNDEFINED <> mnUnitsLineItemQtyRe_UREC [UREC]
                                             UNDEFINED <> mnCumulativeReceived_CREC [CREC]
                                             UNDEFINED <> mnUnitsRelieved_URLV [URLV]
                                             UNDEFINED <> cOtherQuantity12_OTQY [OTQY]
                                             UNDEFINED <> mnPurchasingUnitPrice_PRRC [PRRC]
                                             UNDEFINED <> mnAmountExtendedPrice_AEXP [AEXP]
                                             UNDEFINED <> mnAmountChange_ACHG [ACHG]
                                             UNDEFINED <> mnAmountOpen1_AOPN [AOPN]
                                             UNDEFINED <> mnAmountReceived_AREC [AREC]
                                             UNDEFINED <> mnAmountRelieved_ARLV [ARLV]
                                             UNDEFINED <> mnTaxCommitment_FTN1 [FTN1]
                                             UNDEFINED <> mnTaxAmountRelieved_TRLV [TRLV]
                                             UNDEFINED <> cPriceOverrideCode_PROV [PROV]
                                             UNDEFINED <> mnUnitCostPurchasing_AMC3 [AMC3]
                                             UNDEFINED <> mnAmountExtendedCost_ECST [ECST]
                                             UNDEFINED <> cCostOverrideCode_CSTO [CSTO]
                                             UNDEFINED <> cCostMethodPurchasing_CSMP [CSMP]
                                             UNDEFINED <> szPrintMessage1_INMG [INMG]
                                             UNDEFINED <> szPriceAdjustmentScheduleN_ASN [ASN]
                                             UNDEFINED <> szPricingCategory_PRGR [PRGR]
                                             UNDEFINED <> szPricingCategoryLevel1_CLVL [CLVL]
                                             UNDEFINED <> szCatalogName_CATN [CATN]
                                             UNDEFINED <> mnDiscountFactor_DSPR [DSPR]
                                             UNDEFINED <> szPaymentTermsCode01_PTC [PTC]
                                             UNDEFINED <> cTaxableYN1_TX [TX]
                                             UNDEFINED <> szTaxExplanationCode1_EXR1 [EXR1]
                                             UNDEFINED <> szTaxArea1_TXA1 [TXA1]
                                             UNDEFINED <> cAssociatedText_ATXT [ATXT]
                                             UNDEFINED <> szContainerID_CNID [CNID]
                                             UNDEFINED <> szCommodityCode_CDCD [CDCD]
                                             UNDEFINED <> szNatureOfTransaction_NTR [NTR]
                                             UNDEFINED <> szFreightHandlingCode_FRTH [FRTH]
                                             UNDEFINED <> cFreightCalculatedYN_FRTC [FRTC]
                                             UNDEFINED <> szZoneNumber_ZON [ZON]
                                             UNDEFINED <> szRateCodeFrieghtMisc_FRAT [FRAT]
                                             UNDEFINED <> cRateTypeFreightMisc_RATT [RATT]
                                             UNDEFINED <> mnBuyerNumber_ANBY [ANBY]
                                             UNDEFINED <> mnCarrierNumber_ANCR [ANCR]
                                             UNDEFINED <> szModeOfTransport_MOT [MOT]
                                             UNDEFINED <> szConditionsOfTransport_COT [COT]
                                             UNDEFINED <> szShippingCommodityClass_SHCM [SHCM]
                                             UNDEFINED <> szShippingConditionsCode_SHCN [SHCN]
                                             UNDEFINED <> szUnitOfMeasurePrimary_UOM1 [UOM1]
                                             UNDEFINED <> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                                             UNDEFINED <> szUnitOfMeasureSecondary_UOM2 [UOM2]
                                             UNDEFINED <> mnUnitsSecondaryQtyOr_SQOR [SQOR]
                                             UNDEFINED <> szUnitOfMeasurePurchas_UOM3 [UOM3]
                                             UNDEFINED <> szWeightUnitOfMeasure_WTUM [WTUM]
                                             UNDEFINED <> mnAmountUnitVolume_ITVL [ITVL]
                                             UNDEFINED <> szVolumeUnitOfMeasure_VLUM [VLUM]
                                             UNDEFINED <> szGlClass_GLC [GLC]
                                             UNDEFINED <> mnCentury_CTRY [CTRY]
                                             UNDEFINED <> mnFiscalYear1_FY [FY]
                                             UNDEFINED <> szLineStatus_STTS [STTS]
                                             UNDEFINED <> szReasonCode_RCD [RCD]
                                             UNDEFINED <> cApplyFreight_FUF1 [FUF1]
                                             UNDEFINED <> cPostQuantities_FUF2 [FUF2]
                                             UNDEFINED <> mnGrossWeight_GRWT [GRWT]
                                             UNDEFINED <> szUnitOfMeasureGrossWt_GWUM [GWUM]
                                             UNDEFINED <> szLedgerType_LT [LT]
                                             UNDEFINED <> szAcctNoInputMode_ANI [ANI]
                                             UNDEFINED <> szAccountId_AID [AID]
                                             UNDEFINED <> szPurchasingCostCenter_OMCU [OMCU]
                                             UNDEFINED <> szObjectAccount_OBJ [OBJ]
                                             UNDEFINED <> szSubsidiary_SUB [SUB]
                                             UNDEFINED <> cSubledgerType_SBLT [SBLT]
                                             UNDEFINED <> szSubledger_SBL [SBL]
                                             UNDEFINED <> szSerialTagNumber_ASID [ASID]
                                             UNDEFINED <> mnCostComponentNumber_CCMP [CCMP]
                                             UNDEFINED <> szTagReference_TAG [TAG]
                                             UNDEFINED <> szCategoriesWorkOrder001_WR01 [WR01]
                                             UNDEFINED <> szPlan_PL [PL]
                                             UNDEFINED <> szElevation_ELEV [ELEV]
                                             UNDEFINED <> szCategoryCodeGl001_R001 [R001]
                                             UNDEFINED <> szRetainageRule_RTNR [RTNR]
                                             UNDEFINED <> szCodeLocationTaxStat_LCOD [LCOD]
                                             UNDEFINED <> cPurgeCode1_PURG [PURG]
                                             UNDEFINED <> cProcessingMode_PROM [PROM]
                                             UNDEFINED <> cFinalPayment_FNLP [FNLP]
                                             UNDEFINED <> cCodeAutomaticVoucher_AVCH [AVCH]
                                             UNDEFINED <> cPrepaymentYN_PRPY [PRPY]
                                             UNDEFINED <> cWoOrderFreezeCode_UNCD [UNCD]
                                             UNDEFINED <> cTypeMatch_MATY [MATY]
                                             UNDEFINED <> cRoutingProcessYN_RTGC [RTGC]
                                             UNDEFINED <> cReceiptCode_RCPF [RCPF]
                                             UNDEFINED <> cPurchaseOrderStatus01_PS01 [PS01]
                                             UNDEFINED <> cPurchaseOrderStatus02_PS02 [PS02]
                                             UNDEFINED <> cPurchaseOrderStatus03_PS03 [PS03]
                                             UNDEFINED <> cPurchaseOrderStatus04_PS04 [PS04]
                                             UNDEFINED <> cPurchaseOrderStatus05_PS05 [PS05]
                                             UNDEFINED <> cPurchaseOrderStatus06_PS06 [PS06]
                                             UNDEFINED <> cPurchaseOrderStatus07_PS07 [PS07]
                                             VA evt_FreeGoodPurOrdStat08 [PS08] <- cPurchaseOrderStatus08_PS08 [PS08]
                                             UNDEFINED <> cPurchaseOrderStatus09_PS09 [PS09]
                                             UNDEFINED <> cPurchaseOrderStatus10_PS10 [PS10]
                                             UNDEFINED <> cCorrespondenceMethod_CRMD [CRMD]
                                             UNDEFINED <> szRoutingApproval_ARTG [ARTG]
                                             UNDEFINED <> mnNumberChangeOrder_CORD [CORD]
                                             UNDEFINED <> szChangeOrderType_CHDT [CHDT]
                                             UNDEFINED <> mnDocumentChangeOrder_DOCC [DOCC]
                                             UNDEFINED <> mnChangeOrderLineNumber_CHLN [CHLN]
                                             UNDEFINED <> szCurrencyCodeFrom_CRCD [CRCD]
                                             UNDEFINED <> mnCurrencyConverRateOv_CRR [CRR]
                                             UNDEFINED <> mnForeignPurchasingCost_FRRC [FRRC]
                                             UNDEFINED <> mnAmountForeignExtPrice_FEA [FEA]
                                             UNDEFINED <> mnAmountForeignUnitCost_FUC [FUC]
                                             UNDEFINED <> mnAmountForeignExtCost_FEC [FEC]
                                             UNDEFINED <> mnForeignChangedAmount_FCHG [FCHG]
                                             UNDEFINED <> mnAmountForeignOpen_FAP [FAP]
                                             UNDEFINED <> mnAmountReceivedForeign_FREC [FREC]
                                             UNDEFINED <> szUserReservedCode_URCD [URCD]
                                             UNDEFINED <> jdUserReservedDate_URDT [URDT]
                                             UNDEFINED <> mnUserReservedAmount_URAT [URAT]
                                             UNDEFINED <> mnUserReservedNumber_URAB [URAB]
                                             UNDEFINED <> szUserReservedReference_URRF [URRF]
                                             UNDEFINED <> szTransactionOriginator_TORG [TORG]
                                             UNDEFINED <> szUserId_USER [USER]
                                             UNDEFINED <> szProgramId_PID [PID]
                                             UNDEFINED <> szWorkStationId_JOBN [JOBN]
                                             UNDEFINED <> jdDateUpdated_UPMJ [UPMJ]
                                             UNDEFINED <> mnTimeOfDay_TDAY [TDAY]
                                             UNDEFINED <> cInInterfaceFlgDistri_IVI [IVI]
                                             UNDEFINED <> cFlagWriteLedgerRecrd_WRTH [WRTH]
                                             UNDEFINED <> cPOGeneratorSourceSystem_POGS [POGS]
                                             UNDEFINED <> cStockingType_STKT [STKT]
                                             UNDEFINED <> mnConversionFactorPurch_CNV2 [CNV2]
                                             UNDEFINED <> mnConversionFactor_CONV [CONV]
                                             UNDEFINED <> cModeProcessing_MODE [MODE]
                                             UNDEFINED <> mnUniqueKeyIDInternal_UKID [UKID]
                                             UNDEFINED <> cFlagSalesPurchasing_SOPO [SOPO]
                                             UNDEFINED <> mnSequenceNumber1_SEQ1 [SEQ]
                                             UNDEFINED <> szProductSourceType_PSRY [PSRY]
                                             UNDEFINED <> szProductSource_PSR [PSR]
                                             UNDEFINED <> szDocumentPayItem_SFX [SFX]
                                             UNDEFINED <> cMessageCde_MSGT [MSGT]
                                             UNDEFINED <> szMaterialStatusCodeWo_MTST [MTST]
                                             UNDEFINED <> mnLineNumberXREF_LNIX [LNIX]
                                             UNDEFINED <> mnAdjustmentRevisionLevel_AREV [AREV]
                                             UNDEFINED <> mnDetachedAdjDomestic_DETD [DETD]
                                             UNDEFINED <> mnDetachedAdjForeign_DETF [DETF]
                                             UNDEFINED <> cManagerialAnalysisType1_ABT1 [ABT1]
                                             UNDEFINED <> szManagerialAnalysisCode1_ABR1 [ABR1]
                                             UNDEFINED <> cManagerialAnalysisType2_ABT2 [ABT2]
                                             UNDEFINED <> szManagerialAnalysisCode2_ABR2 [ABR2]
                                             UNDEFINED <> cManagerialAnalysisType3_ABT3 [ABT3]
                                             UNDEFINED <> szManagerialAnalysisCode3_ABR3 [ABR3]
                                             UNDEFINED <> cManagerialAnalysisType4_ABT4 [ABT4]
                                             UNDEFINED <> szManagerialAnalysisCode4_ABR4 [ABR4]
                                             UNDEFINED <> szOriginalDocPayItem_OSFX [OSFX]
                                             UNDEFINED <> cHoldCode_HCLD [HCLD]
                                             UNDEFINED <> szDOCNAME_DOC8 [DOC8]
                                             UNDEFINED <> szOriginalDocumentType_ODCT [ODCT]
                                             UNDEFINED <> szCompanyParent_CO0 [CO0]
                                             UNDEFINED <> szSuffixCode_SFIX [SFIX]
                                             UNDEFINED <> mnLineNum_LINN [LINN]
                                             UNDEFINED <> mnShipmentNumber_SHPN [SHPN]
                                             VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                                             VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                                             UNDEFINED <> cDualUnitOfMeasureItem_DUAL [DUAL]
                                             UNDEFINED <> mnProjectNumber_PRJM [PRJM]
                                             UNDEFINED <> jdLotEffectivityDate_DLEJ [DLEJ]
                                             UNDEFINED <> szPromotionID_PMTN [PMTN]
                                             UNDEFINED <> cCrossDockFlag_XDCK [XDCK]
                                             UNDEFINED <> mnMatrixControlLine_MCLN [MCLN]
                                             UNDEFINED <> szReportCode1Purchasing_PDP1 [PDP1]
                                             UNDEFINED <> szReportCode2Purchasing_PDP2 [PDP2]
                                             UNDEFINED <> szReportCode4Purchasing_PDP4 [PDP4]
                                             UNDEFINED <> szReportCode5Purchasing_PDP5 [PDP5]
                                             UNDEFINED <> szReportCode3Purchasing_PDP3 [PDP3]
                                             UNDEFINED <> mnAmountUnitWeight_ITWT [ITWT]
                                             UNDEFINED <> szCompany_CO [CO]
                                             UNDEFINED <> mnLineNumberKitMaster_KTLN [KTLN]
                                             UNDEFINED <> mnComponentNumber_CPNT [CPNT]
                                             UNDEFINED <> mnNumbOfCpntPerParent_KTP [KTP]
                                             UNDEFINED <> cFixedOrVariableQty_FORQ [FORQ]
                                        //
                                        // ---------------------------------------------------------------------------
                                        // If the original information in the cache record is equal to the current
                                        // grid line, then this means that we need to delete this cache record because
                                        // it is a free good line for the grid line that we are canceling.
                                        // ---------------------------------------------------------------------------
                                        //
                                        ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                                             VA evt_FreeGoodTempOrderNumber [OORN] -> szInputString [AA15]
                                             VA evt_FreeGoodOrigOrderNumber [DOCO] <- mnOutputMathNumeric [MATH01]
                                             UNDEFINED <> cReturnedErrorCode [ERR]
                                        If FC Order Company [KCOO] is equal to VA evt_FreeGoodOrigCompany [OKCO]
                                        And FC Order Number [DOCO] is equal to VA evt_FreeGoodOrigOrderNumber [DOCO]
                                        And FC F4301:Order Type [DCTO] is equal to VA evt_FreeGoodOrigDocType [OCTO]
                                        And GC Line Number [LNID] is equal to VA evt_FreeGoodOrigLineNumber [OGNO]
                                        And VA evt_FreeGoodPurOrdStat08 [PS08] is equal to "3"
                                             // Delete the free good record from cache
                                             CacheProcessPODetailCache(B4302180.CacheProcessPODetailCache)
                                                  "4" -> szCacheActionCode_CACTN [CACTN]
                                                  "1" -> NidIndexNumber_INID [INID]
                                                  "7" -> mnNumberKeys_NKEYS [NKEYS]
                                                  UNDEFINED <> cSuppressErrorMessages_EV01 [EV01]
                                                  UNDEFINED <> szErrorMessageID_DTAI [DTAI]
                                                  UNDEFINED <> idCacheCursor_GENLNG [GENLNG]
                                                  VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
                                                  VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                                                  VA evt_FreeGoodActionCode2 [ACTN] -> cActionCode2_ACTN [ACTN]
                                                  UNDEFINED <> cFlagTransactionEdit_EDFL [EDFL]
                                                  UNDEFINED <> szCompanyKeyOrderNo_KCOO [KCOO]
                                                  UNDEFINED <> mnDocumentOrderInvoiceE_DOCO [DOCO]
                                                  UNDEFINED <> szOrderType_DCTO [DCTO]
                                                  VA evt_FreeGoodOrderSuffix [SFXO] -> szOrderSuffix_SFXO [SFXO]
                                                  VA evt_FreeGoodLineNumber [LNID] -> mnLineNumber_LNID [LNID]
                                                  UNDEFINED <> szCostCenter_MCU [MCU]
                                                  UNDEFINED <> szCompanyKeyOriginal_OKCO [OKCO]
                                                  UNDEFINED <> szOriginalPoSoNumber_OORN [OORN]
                                                  UNDEFINED <> szOriginalOrderType_OCTO [OCTO]
                                                  UNDEFINED <> mnOriginalLineNumber_OGNO [OGNO]
                                                  UNDEFINED <> szCompanyKeyRelated_RKCO [RKCO]
                                                  UNDEFINED <> szRelatedPoSoNumber_RORN [RORN]
                                                  UNDEFINED <> szRelatedOrderType_RCTO [RCTO]
                                                  UNDEFINED <> mnRelatedPoSoLineNo_RLLN [RLLN]
                                                  UNDEFINED <> szContractNumberDist_DMCT [DMCT]
                                                  UNDEFINED <> mnContractSuppDist_DMCS [DMCS]
                                                  UNDEFINED <> cContractBalancesUpdatedY_BALU [BALU]
                                                  UNDEFINED <> mnAddressNumber_AN8 [AN8]
                                                  UNDEFINED <> mnAddressNumberShipTo_SHAN [SHAN]
                                                  UNDEFINED <> jdDateRequestedJulian_DRQJ [DRQJ]
                                                  UNDEFINED <> jdDateTransactionJulian_TRDJ [TRDJ]
                                                  UNDEFINED <> jdPromisedDeliveryDate_PDDJ [PDDJ]
                                                  UNDEFINED <> jdDateOriginalPromisde_OPDJ [OPDJ]
                                                  UNDEFINED <> jdActualDeliveryDate_ADDJ [ADDJ]
                                                  UNDEFINED <> jdCancelDate_CNDJ [CNDJ]
                                                  UNDEFINED <> jdDatePriceEffectiveDate_PEFJ [PEFJ]
                                                  UNDEFINED <> jdDatePromisedPickJu_PPDJ [PPDJ]
                                                  UNDEFINED <> jdDatePromisedShipJu_PSDJ [PSDJ]
                                                  UNDEFINED <> jdDateServiceCurrency_DSVJ [DSVJ]
                                                  UNDEFINED <> jdDtForGLAndVouch1_DGL [DGL]
                                                  UNDEFINED <> mnPeriodNoGeneralLedge_PN [PN]
                                                  UNDEFINED <> szReference1_VR01 [VR01]
                                                  UNDEFINED <> szReference2Vendor_VR02 [VR02]
                                                  UNDEFINED <> mnIdentifierShortItem_ITM [ITM]
                                                  UNDEFINED <> szIdentifier2ndItem_LITM [LITM]
                                                  UNDEFINED <> szIdentifier3rdItem_AITM [AITM]
                                                  UNDEFINED <> szLocation_LOCN [LOCN]
                                                  UNDEFINED <> szLot_LOTN [LOTN]
                                                  UNDEFINED <> szFromGrade_FRGD [FRGD]
                                                  UNDEFINED <> szThruGrade_THGD [THGD]
                                                  UNDEFINED <> mnFromPotency_FRMP [FRMP]
                                                  UNDEFINED <> mnThruPotency_THRP [THRP]
                                                  UNDEFINED <> szDescriptionLine1_DSC1 [DSC1]
                                                  UNDEFINED <> szDescriptionLine2_DSC2 [DSC2]
                                                  UNDEFINED <> szLineType_LNTY [LNTY]
                                                  UNDEFINED <> szStatusCodeNext_NXTR [NXTR]
                                                  UNDEFINED <> szStatusCodeLast_LTTR [LTTR]
                                                  UNDEFINED <> szItemNumberRelatedKit_RLIT [RLIT]
                                                  UNDEFINED <> szReportingCode1Sales_PDS1 [PDS1]
                                                  UNDEFINED <> szReportingCode2Sales_PDS2 [PDS2]
                                                  UNDEFINED <> szReportingCode3Sales_PDS3 [PDS3]
                                                  UNDEFINED <> szReportingCode4Sales_PDS4 [PDS4]
                                                  UNDEFINED <> szReportingCode5Sales_PDS5 [PDS5]
                                                  UNDEFINED <> szUnitOfMeasureAsInput_UOM [UOM]
                                                  UNDEFINED <> mnUnitsTransactionQty_UORG [UORG]
                                                  UNDEFINED <> mnUnitsChangeOrderQty_UCHG [UCHG]
                                                  UNDEFINED <> mnUnitsOpenQuantity_UOPN [UOPN]
                                                  UNDEFINED <> mnUnitsLineItemQtyRe_UREC [UREC]
                                                  UNDEFINED <> mnCumulativeReceived_CREC [CREC]
                                                  UNDEFINED <> mnUnitsRelieved_URLV [URLV]
                                                  UNDEFINED <> cOtherQuantity12_OTQY [OTQY]
                                                  UNDEFINED <> mnPurchasingUnitPrice_PRRC [PRRC]
                                                  UNDEFINED <> mnAmountExtendedPrice_AEXP [AEXP]
                                                  UNDEFINED <> mnAmountChange_ACHG [ACHG]
                                                  UNDEFINED <> mnAmountOpen1_AOPN [AOPN]
                                                  UNDEFINED <> mnAmountReceived_AREC [AREC]
                                                  UNDEFINED <> mnAmountRelieved_ARLV [ARLV]
                                                  UNDEFINED <> mnTaxCommitment_FTN1 [FTN1]
                                                  UNDEFINED <> mnTaxAmountRelieved_TRLV [TRLV]
                                                  UNDEFINED <> cPriceOverrideCode_PROV [PROV]
                                                  UNDEFINED <> mnUnitCostPurchasing_AMC3 [AMC3]
                                                  UNDEFINED <> mnAmountExtendedCost_ECST [ECST]
                                                  UNDEFINED <> cCostOverrideCode_CSTO [CSTO]
                                                  UNDEFINED <> cCostMethodPurchasing_CSMP [CSMP]
                                                  UNDEFINED <> szPrintMessage1_INMG [INMG]
                                                  UNDEFINED <> szPriceAdjustmentScheduleN_ASN [ASN]
                                                  UNDEFINED <> szPricingCategory_PRGR [PRGR]
                                                  UNDEFINED <> szPricingCategoryLevel1_CLVL [CLVL]
                                                  UNDEFINED <> szCatalogName_CATN [CATN]
                                                  UNDEFINED <> mnDiscountFactor_DSPR [DSPR]
                                                  UNDEFINED <> szPaymentTermsCode01_PTC [PTC]
                                                  UNDEFINED <> cTaxableYN1_TX [TX]
                                                  UNDEFINED <> szTaxExplanationCode1_EXR1 [EXR1]
                                                  UNDEFINED <> szTaxArea1_TXA1 [TXA1]
                                                  UNDEFINED <> cAssociatedText_ATXT [ATXT]
                                                  UNDEFINED <> szContainerID_CNID [CNID]
                                                  UNDEFINED <> szCommodityCode_CDCD [CDCD]
                                                  UNDEFINED <> szNatureOfTransaction_NTR [NTR]
                                                  UNDEFINED <> szFreightHandlingCode_FRTH [FRTH]
                                                  UNDEFINED <> cFreightCalculatedYN_FRTC [FRTC]
                                                  UNDEFINED <> szZoneNumber_ZON [ZON]
                                                  UNDEFINED <> szRateCodeFrieghtMisc_FRAT [FRAT]
                                                  UNDEFINED <> cRateTypeFreightMisc_RATT [RATT]
                                                  UNDEFINED <> mnBuyerNumber_ANBY [ANBY]
                                                  UNDEFINED <> mnCarrierNumber_ANCR [ANCR]
                                                  UNDEFINED <> szModeOfTransport_MOT [MOT]
                                                  UNDEFINED <> szConditionsOfTransport_COT [COT]
                                                  UNDEFINED <> szShippingCommodityClass_SHCM [SHCM]
                                                  UNDEFINED <> szShippingConditionsCode_SHCN [SHCN]
                                                  UNDEFINED <> szUnitOfMeasurePrimary_UOM1 [UOM1]
                                                  UNDEFINED <> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                                                  UNDEFINED <> szUnitOfMeasureSecondary_UOM2 [UOM2]
                                                  UNDEFINED <> mnUnitsSecondaryQtyOr_SQOR [SQOR]
                                                  UNDEFINED <> szUnitOfMeasurePurchas_UOM3 [UOM3]
                                                  UNDEFINED <> szWeightUnitOfMeasure_WTUM [WTUM]
                                                  UNDEFINED <> mnAmountUnitVolume_ITVL [ITVL]
                                                  UNDEFINED <> szVolumeUnitOfMeasure_VLUM [VLUM]
                                                  UNDEFINED <> szGlClass_GLC [GLC]
                                                  UNDEFINED <> mnCentury_CTRY [CTRY]
                                                  UNDEFINED <> mnFiscalYear1_FY [FY]
                                                  UNDEFINED <> szLineStatus_STTS [STTS]
                                                  UNDEFINED <> szReasonCode_RCD [RCD]
                                                  UNDEFINED <> cApplyFreight_FUF1 [FUF1]
                                                  UNDEFINED <> cPostQuantities_FUF2 [FUF2]
                                                  UNDEFINED <> mnGrossWeight_GRWT [GRWT]
                                                  UNDEFINED <> szUnitOfMeasureGrossWt_GWUM [GWUM]
                                                  UNDEFINED <> szLedgerType_LT [LT]
                                                  UNDEFINED <> szAcctNoInputMode_ANI [ANI]
                                                  UNDEFINED <> szAccountId_AID [AID]
                                                  UNDEFINED <> szPurchasingCostCenter_OMCU [OMCU]
                                                  UNDEFINED <> szObjectAccount_OBJ [OBJ]
                                                  UNDEFINED <> szSubsidiary_SUB [SUB]
                                                  UNDEFINED <> cSubledgerType_SBLT [SBLT]
                                                  UNDEFINED <> szSubledger_SBL [SBL]
                                                  UNDEFINED <> szSerialTagNumber_ASID [ASID]
                                                  UNDEFINED <> mnCostComponentNumber_CCMP [CCMP]
                                                  UNDEFINED <> szTagReference_TAG [TAG]
                                                  UNDEFINED <> szCategoriesWorkOrder001_WR01 [WR01]
                                                  UNDEFINED <> szPlan_PL [PL]
                                                  UNDEFINED <> szElevation_ELEV [ELEV]
                                                  UNDEFINED <> szCategoryCodeGl001_R001 [R001]
                                                  UNDEFINED <> szRetainageRule_RTNR [RTNR]
                                                  UNDEFINED <> szCodeLocationTaxStat_LCOD [LCOD]
                                                  UNDEFINED <> cPurgeCode1_PURG [PURG]
                                                  UNDEFINED <> cProcessingMode_PROM [PROM]
                                                  UNDEFINED <> cFinalPayment_FNLP [FNLP]
                                                  UNDEFINED <> cCodeAutomaticVoucher_AVCH [AVCH]
                                                  UNDEFINED <> cPrepaymentYN_PRPY [PRPY]
                                                  UNDEFINED <> cWoOrderFreezeCode_UNCD [UNCD]
                                                  UNDEFINED <> cTypeMatch_MATY [MATY]
                                                  UNDEFINED <> cRoutingProcessYN_RTGC [RTGC]
                                                  UNDEFINED <> cReceiptCode_RCPF [RCPF]
                                                  UNDEFINED <> cPurchaseOrderStatus01_PS01 [PS01]
                                                  UNDEFINED <> cPurchaseOrderStatus02_PS02 [PS02]
                                                  UNDEFINED <> cPurchaseOrderStatus03_PS03 [PS03]
                                                  UNDEFINED <> cPurchaseOrderStatus04_PS04 [PS04]
                                                  UNDEFINED <> cPurchaseOrderStatus05_PS05 [PS05]
                                                  UNDEFINED <> cPurchaseOrderStatus06_PS06 [PS06]
                                                  UNDEFINED <> cPurchaseOrderStatus07_PS07 [PS07]
                                                  UNDEFINED <> cPurchaseOrderStatus08_PS08 [PS08]
                                                  UNDEFINED <> cPurchaseOrderStatus09_PS09 [PS09]
                                                  UNDEFINED <> cPurchaseOrderStatus10_PS10 [PS10]
                                                  UNDEFINED <> cCorrespondenceMethod_CRMD [CRMD]
                                                  UNDEFINED <> szRoutingApproval_ARTG [ARTG]
                                                  UNDEFINED <> mnNumberChangeOrder_CORD [CORD]
                                                  UNDEFINED <> szChangeOrderType_CHDT [CHDT]
                                                  UNDEFINED <> mnDocumentChangeOrder_DOCC [DOCC]
                                                  UNDEFINED <> mnChangeOrderLineNumber_CHLN [CHLN]
                                                  UNDEFINED <> szCurrencyCodeFrom_CRCD [CRCD]
                                                  UNDEFINED <> mnCurrencyConverRateOv_CRR [CRR]
                                                  UNDEFINED <> mnForeignPurchasingCost_FRRC [FRRC]
                                                  UNDEFINED <> mnAmountForeignExtPrice_FEA [FEA]
                                                  UNDEFINED <> mnAmountForeignUnitCost_FUC [FUC]
                                                  UNDEFINED <> mnAmountForeignExtCost_FEC [FEC]
                                                  UNDEFINED <> mnForeignChangedAmount_FCHG [FCHG]
                                                  UNDEFINED <> mnAmountForeignOpen_FAP [FAP]
                                                  UNDEFINED <> mnAmountReceivedForeign_FREC [FREC]
                                                  UNDEFINED <> szUserReservedCode_URCD [URCD]
                                                  UNDEFINED <> jdUserReservedDate_URDT [URDT]
                                                  UNDEFINED <> mnUserReservedAmount_URAT [URAT]
                                                  UNDEFINED <> mnUserReservedNumber_URAB [URAB]
                                                  UNDEFINED <> szUserReservedReference_URRF [URRF]
                                                  UNDEFINED <> szTransactionOriginator_TORG [TORG]
                                                  UNDEFINED <> szUserId_USER [USER]
                                                  UNDEFINED <> szProgramId_PID [PID]
                                                  UNDEFINED <> szWorkStationId_JOBN [JOBN]
                                                  UNDEFINED <> jdDateUpdated_UPMJ [UPMJ]
                                                  UNDEFINED <> mnTimeOfDay_TDAY [TDAY]
                                                  UNDEFINED <> cInInterfaceFlgDistri_IVI [IVI]
                                                  UNDEFINED <> cFlagWriteLedgerRecrd_WRTH [WRTH]
                                                  UNDEFINED <> cPOGeneratorSourceSystem_POGS [POGS]
                                                  UNDEFINED <> cStockingType_STKT [STKT]
                                                  UNDEFINED <> mnConversionFactorPurch_CNV2 [CNV2]
                                                  UNDEFINED <> mnConversionFactor_CONV [CONV]
                                                  UNDEFINED <> cModeProcessing_MODE [MODE]
                                                  UNDEFINED <> mnUniqueKeyIDInternal_UKID [UKID]
                                                  UNDEFINED <> cFlagSalesPurchasing_SOPO [SOPO]
                                                  UNDEFINED <> mnSequenceNumber1_SEQ1 [SEQ]
                                                  UNDEFINED <> szProductSourceType_PSRY [PSRY]
                                                  UNDEFINED <> szProductSource_PSR [PSR]
                                                  UNDEFINED <> szDocumentPayItem_SFX [SFX]
                                                  UNDEFINED <> cMessageCde_MSGT [MSGT]
                                                  UNDEFINED <> szMaterialStatusCodeWo_MTST [MTST]
                                                  UNDEFINED <> mnLineNumberXREF_LNIX [LNIX]
                                                  UNDEFINED <> mnAdjustmentRevisionLevel_AREV [AREV]
                                                  UNDEFINED <> mnDetachedAdjDomestic_DETD [DETD]
                                                  UNDEFINED <> mnDetachedAdjForeign_DETF [DETF]
                                                  UNDEFINED <> cManagerialAnalysisType1_ABT1 [ABT1]
                                                  UNDEFINED <> szManagerialAnalysisCode1_ABR1 [ABR1]
                                                  UNDEFINED <> cManagerialAnalysisType2_ABT2 [ABT2]
                                                  UNDEFINED <> szManagerialAnalysisCode2_ABR2 [ABR2]
                                                  UNDEFINED <> cManagerialAnalysisType3_ABT3 [ABT3]
                                                  UNDEFINED <> szManagerialAnalysisCode3_ABR3 [ABR3]
                                                  UNDEFINED <> cManagerialAnalysisType4_ABT4 [ABT4]
                                                  UNDEFINED <> szManagerialAnalysisCode4_ABR4 [ABR4]
                                                  UNDEFINED <> szOriginalDocPayItem_OSFX [OSFX]
                                                  UNDEFINED <> cHoldCode_HCLD [HCLD]
                                                  UNDEFINED <> szDOCNAME_DOC8 [DOC8]
                                                  UNDEFINED <> szOriginalDocumentType_ODCT [ODCT]
                                                  UNDEFINED <> szCompanyParent_CO0 [CO0]
                                                  UNDEFINED <> szSuffixCode_SFIX [SFIX]
                                                  UNDEFINED <> mnLineNum_LINN [LINN]
                                                  UNDEFINED <> mnShipmentNumber_SHPN [SHPN]
                                                  VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                                                  VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                                                  UNDEFINED <> cDualUnitOfMeasureItem_DUAL [DUAL]
                                                  UNDEFINED <> mnProjectNumber_PRJM [PRJM]
                                                  UNDEFINED <> jdLotEffectivityDate_DLEJ [DLEJ]
                                                  UNDEFINED <> szPromotionID_PMTN [PMTN]
                                                  UNDEFINED <> cCrossDockFlag_XDCK [XDCK]
                                                  UNDEFINED <> mnMatrixControlLine_MCLN [MCLN]
                                                  UNDEFINED <> szReportCode1Purchasing_PDP1 [PDP1]
                                                  UNDEFINED <> szReportCode2Purchasing_PDP2 [PDP2]
                                                  UNDEFINED <> szReportCode4Purchasing_PDP4 [PDP4]
                                                  UNDEFINED <> szReportCode5Purchasing_PDP5 [PDP5]
                                                  UNDEFINED <> szReportCode3Purchasing_PDP3 [PDP3]
                                                  UNDEFINED <> mnAmountUnitWeight_ITWT [ITWT]
                                                  UNDEFINED <> szCompany_CO [CO]
                                                  UNDEFINED <> mnLineNumberKitMaster_KTLN [KTLN]
                                                  UNDEFINED <> mnComponentNumber_CPNT [CPNT]
                                                  UNDEFINED <> mnNumbOfCpntPerParent_KTP [KTP]
                                                  UNDEFINED <> cFixedOrVariableQty_FORQ [FORQ]
                                             //
                                             // ---------------------------------------------------------------------------
                                             // reset the cursor and move the cursor to the previous record so we can
                                             // continue to search for related free good items.
                                             // ---------------------------------------------------------------------------
                                             //
                                             CacheProcessPODetailCache(B4302180.CacheProcessPODetailCache)
                                                  "10" -> szCacheActionCode_CACTN [CACTN]
                                                  "1" -> NidIndexNumber_INID [INID]
                                                  UNDEFINED <> mnNumberKeys_NKEYS [NKEYS]
                                                  UNDEFINED <> cSuppressErrorMessages_EV01 [EV01]
                                                  UNDEFINED <> szErrorMessageID_DTAI [DTAI]
                                                  VA evt_FreeGoodDeleteCursor [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
                                                  VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
                                                  VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                                                  VA evt_FreeGoodActionCode2 [ACTN] -> cActionCode2_ACTN [ACTN]
                                                  UNDEFINED <> cFlagTransactionEdit_EDFL [EDFL]
                                                  UNDEFINED <> szCompanyKeyOrderNo_KCOO [KCOO]
                                                  UNDEFINED <> mnDocumentOrderInvoiceE_DOCO [DOCO]
                                                  UNDEFINED <> szOrderType_DCTO [DCTO]
                                                  VA evt_FreeGoodOrderSuffix [SFXO] -> szOrderSuffix_SFXO [SFXO]
                                                  VA evt_FreeGoodLineNumber [LNID] -> mnLineNumber_LNID [LNID]
                                                  UNDEFINED <> szCostCenter_MCU [MCU]
                                                  UNDEFINED <> szCompanyKeyOriginal_OKCO [OKCO]
                                                  UNDEFINED <> szOriginalPoSoNumber_OORN [OORN]
                                                  UNDEFINED <> szOriginalOrderType_OCTO [OCTO]
                                                  UNDEFINED <> mnOriginalLineNumber_OGNO [OGNO]
                                                  UNDEFINED <> szCompanyKeyRelated_RKCO [RKCO]
                                                  UNDEFINED <> szRelatedPoSoNumber_RORN [RORN]
                                                  UNDEFINED <> szRelatedOrderType_RCTO [RCTO]
                                                  UNDEFINED <> mnRelatedPoSoLineNo_RLLN [RLLN]
                                                  UNDEFINED <> szContractNumberDist_DMCT [DMCT]
                                                  UNDEFINED <> mnContractSuppDist_DMCS [DMCS]
                                                  UNDEFINED <> cContractBalancesUpdatedY_BALU [BALU]
                                                  UNDEFINED <> mnAddressNumber_AN8 [AN8]
                                                  UNDEFINED <> mnAddressNumberShipTo_SHAN [SHAN]
                                                  UNDEFINED <> jdDateRequestedJulian_DRQJ [DRQJ]
                                                  UNDEFINED <> jdDateTransactionJulian_TRDJ [TRDJ]
                                                  UNDEFINED <> jdPromisedDeliveryDate_PDDJ [PDDJ]
                                                  UNDEFINED <> jdDateOriginalPromisde_OPDJ [OPDJ]
                                                  UNDEFINED <> jdActualDeliveryDate_ADDJ [ADDJ]
                                                  UNDEFINED <> jdCancelDate_CNDJ [CNDJ]
                                                  UNDEFINED <> jdDatePriceEffectiveDate_PEFJ [PEFJ]
                                                  UNDEFINED <> jdDatePromisedPickJu_PPDJ [PPDJ]
                                                  UNDEFINED <> jdDatePromisedShipJu_PSDJ [PSDJ]
                                                  UNDEFINED <> jdDateServiceCurrency_DSVJ [DSVJ]
                                                  UNDEFINED <> jdDtForGLAndVouch1_DGL [DGL]
                                                  UNDEFINED <> mnPeriodNoGeneralLedge_PN [PN]
                                                  UNDEFINED <> szReference1_VR01 [VR01]
                                                  UNDEFINED <> szReference2Vendor_VR02 [VR02]
                                                  UNDEFINED <> mnIdentifierShortItem_ITM [ITM]
                                                  UNDEFINED <> szIdentifier2ndItem_LITM [LITM]
                                                  UNDEFINED <> szIdentifier3rdItem_AITM [AITM]
                                                  UNDEFINED <> szLocation_LOCN [LOCN]
                                                  UNDEFINED <> szLot_LOTN [LOTN]
                                                  UNDEFINED <> szFromGrade_FRGD [FRGD]
                                                  UNDEFINED <> szThruGrade_THGD [THGD]
                                                  UNDEFINED <> mnFromPotency_FRMP [FRMP]
                                                  UNDEFINED <> mnThruPotency_THRP [THRP]
                                                  UNDEFINED <> szDescriptionLine1_DSC1 [DSC1]
                                                  UNDEFINED <> szDescriptionLine2_DSC2 [DSC2]
                                                  UNDEFINED <> szLineType_LNTY [LNTY]
                                                  UNDEFINED <> szStatusCodeNext_NXTR [NXTR]
                                                  UNDEFINED <> szStatusCodeLast_LTTR [LTTR]
                                                  UNDEFINED <> szItemNumberRelatedKit_RLIT [RLIT]
                                                  UNDEFINED <> szReportingCode1Sales_PDS1 [PDS1]
                                                  UNDEFINED <> szReportingCode2Sales_PDS2 [PDS2]
                                                  UNDEFINED <> szReportingCode3Sales_PDS3 [PDS3]
                                                  UNDEFINED <> szReportingCode4Sales_PDS4 [PDS4]
                                                  UNDEFINED <> szReportingCode5Sales_PDS5 [PDS5]
                                                  UNDEFINED <> szUnitOfMeasureAsInput_UOM [UOM]
                                                  UNDEFINED <> mnUnitsTransactionQty_UORG [UORG]
                                                  UNDEFINED <> mnUnitsChangeOrderQty_UCHG [UCHG]
                                                  UNDEFINED <> mnUnitsOpenQuantity_UOPN [UOPN]
                                                  UNDEFINED <> mnUnitsLineItemQtyRe_UREC [UREC]
                                                  UNDEFINED <> mnCumulativeReceived_CREC [CREC]
                                                  UNDEFINED <> mnUnitsRelieved_URLV [URLV]
                                                  UNDEFINED <> cOtherQuantity12_OTQY [OTQY]
                                                  UNDEFINED <> mnPurchasingUnitPrice_PRRC [PRRC]
                                                  UNDEFINED <> mnAmountExtendedPrice_AEXP [AEXP]
                                                  UNDEFINED <> mnAmountChange_ACHG [ACHG]
                                                  UNDEFINED <> mnAmountOpen1_AOPN [AOPN]
                                                  UNDEFINED <> mnAmountReceived_AREC [AREC]
                                                  UNDEFINED <> mnAmountRelieved_ARLV [ARLV]
                                                  UNDEFINED <> mnTaxCommitment_FTN1 [FTN1]
                                                  UNDEFINED <> mnTaxAmountRelieved_TRLV [TRLV]
                                                  UNDEFINED <> cPriceOverrideCode_PROV [PROV]
                                                  UNDEFINED <> mnUnitCostPurchasing_AMC3 [AMC3]
                                                  UNDEFINED <> mnAmountExtendedCost_ECST [ECST]
                                                  UNDEFINED <> cCostOverrideCode_CSTO [CSTO]
                                                  UNDEFINED <> cCostMethodPurchasing_CSMP [CSMP]
                                                  UNDEFINED <> szPrintMessage1_INMG [INMG]
                                                  UNDEFINED <> szPriceAdjustmentScheduleN_ASN [ASN]
                                                  UNDEFINED <> szPricingCategory_PRGR [PRGR]
                                                  UNDEFINED <> szPricingCategoryLevel1_CLVL [CLVL]
                                                  UNDEFINED <> szCatalogName_CATN [CATN]
                                                  UNDEFINED <> mnDiscountFactor_DSPR [DSPR]
                                                  UNDEFINED <> szPaymentTermsCode01_PTC [PTC]
                                                  UNDEFINED <> cTaxableYN1_TX [TX]
                                                  UNDEFINED <> szTaxExplanationCode1_EXR1 [EXR1]
                                                  UNDEFINED <> szTaxArea1_TXA1 [TXA1]
                                                  UNDEFINED <> cAssociatedText_ATXT [ATXT]
                                                  UNDEFINED <> szContainerID_CNID [CNID]
                                                  UNDEFINED <> szCommodityCode_CDCD [CDCD]
                                                  UNDEFINED <> szNatureOfTransaction_NTR [NTR]
                                                  UNDEFINED <> szFreightHandlingCode_FRTH [FRTH]
                                                  UNDEFINED <> cFreightCalculatedYN_FRTC [FRTC]
                                                  UNDEFINED <> szZoneNumber_ZON [ZON]
                                                  UNDEFINED <> szRateCodeFrieghtMisc_FRAT [FRAT]
                                                  UNDEFINED <> cRateTypeFreightMisc_RATT [RATT]
                                                  UNDEFINED <> mnBuyerNumber_ANBY [ANBY]
                                                  UNDEFINED <> mnCarrierNumber_ANCR [ANCR]
                                                  UNDEFINED <> szModeOfTransport_MOT [MOT]
                                                  UNDEFINED <> szConditionsOfTransport_COT [COT]
                                                  UNDEFINED <> szShippingCommodityClass_SHCM [SHCM]
                                                  UNDEFINED <> szShippingConditionsCode_SHCN [SHCN]
                                                  UNDEFINED <> szUnitOfMeasurePrimary_UOM1 [UOM1]
                                                  UNDEFINED <> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                                                  UNDEFINED <> szUnitOfMeasureSecondary_UOM2 [UOM2]
                                                  UNDEFINED <> mnUnitsSecondaryQtyOr_SQOR [SQOR]
                                                  UNDEFINED <> szUnitOfMeasurePurchas_UOM3 [UOM3]
                                                  UNDEFINED <> szWeightUnitOfMeasure_WTUM [WTUM]
                                                  UNDEFINED <> mnAmountUnitVolume_ITVL [ITVL]
                                                  UNDEFINED <> szVolumeUnitOfMeasure_VLUM [VLUM]
                                                  UNDEFINED <> szGlClass_GLC [GLC]
                                                  UNDEFINED <> mnCentury_CTRY [CTRY]
                                                  UNDEFINED <> mnFiscalYear1_FY [FY]
                                                  UNDEFINED <> szLineStatus_STTS [STTS]
                                                  UNDEFINED <> szReasonCode_RCD [RCD]
                                                  UNDEFINED <> cApplyFreight_FUF1 [FUF1]
                                                  UNDEFINED <> cPostQuantities_FUF2 [FUF2]
                                                  UNDEFINED <> mnGrossWeight_GRWT [GRWT]
                                                  UNDEFINED <> szUnitOfMeasureGrossWt_GWUM [GWUM]
                                                  UNDEFINED <> szLedgerType_LT [LT]
                                                  UNDEFINED <> szAcctNoInputMode_ANI [ANI]
                                                  UNDEFINED <> szAccountId_AID [AID]
                                                  UNDEFINED <> szPurchasingCostCenter_OMCU [OMCU]
                                                  UNDEFINED <> szObjectAccount_OBJ [OBJ]
                                                  UNDEFINED <> szSubsidiary_SUB [SUB]
                                                  UNDEFINED <> cSubledgerType_SBLT [SBLT]
                                                  UNDEFINED <> szSubledger_SBL [SBL]
                                                  UNDEFINED <> szSerialTagNumber_ASID [ASID]
                                                  UNDEFINED <> mnCostComponentNumber_CCMP [CCMP]
                                                  UNDEFINED <> szTagReference_TAG [TAG]
                                                  UNDEFINED <> szCategoriesWorkOrder001_WR01 [WR01]
                                                  UNDEFINED <> szPlan_PL [PL]
                                                  UNDEFINED <> szElevation_ELEV [ELEV]
                                                  UNDEFINED <> szCategoryCodeGl001_R001 [R001]
                                                  UNDEFINED <> szRetainageRule_RTNR [RTNR]
                                                  UNDEFINED <> szCodeLocationTaxStat_LCOD [LCOD]
                                                  UNDEFINED <> cPurgeCode1_PURG [PURG]
                                                  UNDEFINED <> cProcessingMode_PROM [PROM]
                                                  UNDEFINED <> cFinalPayment_FNLP [FNLP]
                                                  UNDEFINED <> cCodeAutomaticVoucher_AVCH [AVCH]
                                                  UNDEFINED <> cPrepaymentYN_PRPY [PRPY]
                                                  UNDEFINED <> cWoOrderFreezeCode_UNCD [UNCD]
                                                  UNDEFINED <> cTypeMatch_MATY [MATY]
                                                  UNDEFINED <> cRoutingProcessYN_RTGC [RTGC]
                                                  UNDEFINED <> cReceiptCode_RCPF [RCPF]
                                                  UNDEFINED <> cPurchaseOrderStatus01_PS01 [PS01]
                                                  UNDEFINED <> cPurchaseOrderStatus02_PS02 [PS02]
                                                  UNDEFINED <> cPurchaseOrderStatus03_PS03 [PS03]
                                                  UNDEFINED <> cPurchaseOrderStatus04_PS04 [PS04]
                                                  UNDEFINED <> cPurchaseOrderStatus05_PS05 [PS05]
                                                  UNDEFINED <> cPurchaseOrderStatus06_PS06 [PS06]
                                                  UNDEFINED <> cPurchaseOrderStatus07_PS07 [PS07]
                                                  UNDEFINED <> cPurchaseOrderStatus08_PS08 [PS08]
                                                  UNDEFINED <> cPurchaseOrderStatus09_PS09 [PS09]
                                                  UNDEFINED <> cPurchaseOrderStatus10_PS10 [PS10]
                                                  UNDEFINED <> cCorrespondenceMethod_CRMD [CRMD]
                                                  UNDEFINED <> szRoutingApproval_ARTG [ARTG]
                                                  UNDEFINED <> mnNumberChangeOrder_CORD [CORD]
                                                  UNDEFINED <> szChangeOrderType_CHDT [CHDT]
                                                  UNDEFINED <> mnDocumentChangeOrder_DOCC [DOCC]
                                                  UNDEFINED <> mnChangeOrderLineNumber_CHLN [CHLN]
                                                  UNDEFINED <> szCurrencyCodeFrom_CRCD [CRCD]
                                                  UNDEFINED <> mnCurrencyConverRateOv_CRR [CRR]
                                                  UNDEFINED <> mnForeignPurchasingCost_FRRC [FRRC]
                                                  UNDEFINED <> mnAmountForeignExtPrice_FEA [FEA]
                                                  UNDEFINED <> mnAmountForeignUnitCost_FUC [FUC]
                                                  UNDEFINED <> mnAmountForeignExtCost_FEC [FEC]
                                                  UNDEFINED <> mnForeignChangedAmount_FCHG [FCHG]
                                                  UNDEFINED <> mnAmountForeignOpen_FAP [FAP]
                                                  UNDEFINED <> mnAmountReceivedForeign_FREC [FREC]
                                                  UNDEFINED <> szUserReservedCode_URCD [URCD]
                                                  UNDEFINED <> jdUserReservedDate_URDT [URDT]
                                                  UNDEFINED <> mnUserReservedAmount_URAT [URAT]
                                                  UNDEFINED <> mnUserReservedNumber_URAB [URAB]
                                                  UNDEFINED <> szUserReservedReference_URRF [URRF]
                                                  UNDEFINED <> szTransactionOriginator_TORG [TORG]
                                                  UNDEFINED <> szUserId_USER [USER]
                                                  UNDEFINED <> szProgramId_PID [PID]
                                                  UNDEFINED <> szWorkStationId_JOBN [JOBN]
                                                  UNDEFINED <> jdDateUpdated_UPMJ [UPMJ]
                                                  UNDEFINED <> mnTimeOfDay_TDAY [TDAY]
                                                  UNDEFINED <> cInInterfaceFlgDistri_IVI [IVI]
                                                  UNDEFINED <> cFlagWriteLedgerRecrd_WRTH [WRTH]
                                                  UNDEFINED <> cPOGeneratorSourceSystem_POGS [POGS]
                                                  UNDEFINED <> cStockingType_STKT [STKT]
                                                  UNDEFINED <> mnConversionFactorPurch_CNV2 [CNV2]
                                                  UNDEFINED <> mnConversionFactor_CONV [CONV]
                                                  UNDEFINED <> cModeProcessing_MODE [MODE]
                                                  UNDEFINED <> mnUniqueKeyIDInternal_UKID [UKID]
                                                  UNDEFINED <> cFlagSalesPurchasing_SOPO [SOPO]
                                                  UNDEFINED <> mnSequenceNumber1_SEQ1 [SEQ]
                                                  UNDEFINED <> szProductSourceType_PSRY [PSRY]
                                                  UNDEFINED <> szProductSource_PSR [PSR]
                                                  UNDEFINED <> szDocumentPayItem_SFX [SFX]
                                                  UNDEFINED <> cMessageCde_MSGT [MSGT]
                                                  UNDEFINED <> szMaterialStatusCodeWo_MTST [MTST]
                                                  UNDEFINED <> mnLineNumberXREF_LNIX [LNIX]
                                                  UNDEFINED <> mnAdjustmentRevisionLevel_AREV [AREV]
                                                  UNDEFINED <> mnDetachedAdjDomestic_DETD [DETD]
                                                  UNDEFINED <> mnDetachedAdjForeign_DETF [DETF]
                                                  UNDEFINED <> cManagerialAnalysisType1_ABT1 [ABT1]
                                                  UNDEFINED <> szManagerialAnalysisCode1_ABR1 [ABR1]
                                                  UNDEFINED <> cManagerialAnalysisType2_ABT2 [ABT2]
                                                  UNDEFINED <> szManagerialAnalysisCode2_ABR2 [ABR2]
                                                  UNDEFINED <> cManagerialAnalysisType3_ABT3 [ABT3]
                                                  UNDEFINED <> szManagerialAnalysisCode3_ABR3 [ABR3]
                                                  UNDEFINED <> cManagerialAnalysisType4_ABT4 [ABT4]
                                                  UNDEFINED <> szManagerialAnalysisCode4_ABR4 [ABR4]
                                                  UNDEFINED <> szOriginalDocPayItem_OSFX [OSFX]
                                                  UNDEFINED <> cHoldCode_HCLD [HCLD]
                                                  UNDEFINED <> szDOCNAME_DOC8 [DOC8]
                                                  UNDEFINED <> szOriginalDocumentType_ODCT [ODCT]
                                                  UNDEFINED <> szCompanyParent_CO0 [CO0]
                                                  UNDEFINED <> szSuffixCode_SFIX [SFIX]
                                                  UNDEFINED <> mnLineNum_LINN [LINN]
                                                  UNDEFINED <> mnShipmentNumber_SHPN [SHPN]
                                                  VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                                                  VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                                                  UNDEFINED <> cDualUnitOfMeasureItem_DUAL [DUAL]
                                                  UNDEFINED <> mnProjectNumber_PRJM [PRJM]
                                                  UNDEFINED <> jdLotEffectivityDate_DLEJ [DLEJ]
                                                  UNDEFINED <> szPromotionID_PMTN [PMTN]
                                                  UNDEFINED <> cCrossDockFlag_XDCK [XDCK]
                                                  UNDEFINED <> mnMatrixControlLine_MCLN [MCLN]
                                                  UNDEFINED <> szReportCode1Purchasing_PDP1 [PDP1]
                                                  UNDEFINED <> szReportCode2Purchasing_PDP2 [PDP2]
                                                  UNDEFINED <> szReportCode4Purchasing_PDP4 [PDP4]
                                                  UNDEFINED <> szReportCode5Purchasing_PDP5 [PDP5]
                                                  UNDEFINED <> szReportCode3Purchasing_PDP3 [PDP3]
                                                  UNDEFINED <> mnAmountUnitWeight_ITWT [ITWT]
                                                  UNDEFINED <> szCompany_CO [CO]
                                                  UNDEFINED <> mnLineNumberKitMaster_KTLN [KTLN]
                                                  UNDEFINED <> mnComponentNumber_CPNT [CPNT]
                                                  UNDEFINED <> mnNumbOfCpntPerParent_KTP [KTP]
                                                  UNDEFINED <> cFixedOrVariableQty_FORQ [FORQ]
                                             If VA evt_FreeGoodFirstCacheFetch [EV01] is not equal to "1"
                                                  CacheProcessPODetailCache(B4302180.CacheProcessPODetailCache)
                                                       "6" -> szCacheActionCode_CACTN [CACTN]
                                                       "1" -> NidIndexNumber_INID [INID]
                                                       "7" -> mnNumberKeys_NKEYS [NKEYS]
                                                       "1" -> cSuppressErrorMessages_EV01 [EV01]
                                                       UNDEFINED <- szErrorMessageID_DTAI [DTAI]
                                                       VA evt_FreeGoodDeleteCursor [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
                                                       VA evt_FreeGoodPrevJobNumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
                                                       VA evt_FreeGoodPrevComputerID [CTID] -> szComputerID_CTID [CTID]
                                                       VA evt_FreeGoodPrevActionCode2 [ACTN] -> cActionCode2_ACTN [ACTN]
                                                       UNDEFINED <> cFlagTransactionEdit_EDFL [EDFL]
                                                       UNDEFINED <> szCompanyKeyOrderNo_KCOO [KCOO]
                                                       UNDEFINED <> mnDocumentOrderInvoiceE_DOCO [DOCO]
                                                       UNDEFINED <> szOrderType_DCTO [DCTO]
                                                       VA evt_FreeGoodPrevOrderSuffix [SFXO] <> szOrderSuffix_SFXO [SFXO]
                                                       VA evt_FreeGoodPrevLineNumber [LNID] <> mnLineNumber_LNID [LNID]
                                                       UNDEFINED <> szCostCenter_MCU [MCU]
                                                       UNDEFINED <> szCompanyKeyOriginal_OKCO [OKCO]
                                                       UNDEFINED <> szOriginalPoSoNumber_OORN [OORN]
                                                       UNDEFINED <> szOriginalOrderType_OCTO [OCTO]
                                                       UNDEFINED <> mnOriginalLineNumber_OGNO [OGNO]
                                                       UNDEFINED <> szCompanyKeyRelated_RKCO [RKCO]
                                                       UNDEFINED <> szRelatedPoSoNumber_RORN [RORN]
                                                       UNDEFINED <> szRelatedOrderType_RCTO [RCTO]
                                                       UNDEFINED <> mnRelatedPoSoLineNo_RLLN [RLLN]
                                                       UNDEFINED <> szContractNumberDist_DMCT [DMCT]
                                                       UNDEFINED <> mnContractSuppDist_DMCS [DMCS]
                                                       UNDEFINED <> cContractBalancesUpdatedY_BALU [BALU]
                                                       UNDEFINED <> mnAddressNumber_AN8 [AN8]
                                                       UNDEFINED <> mnAddressNumberShipTo_SHAN [SHAN]
                                                       UNDEFINED <> jdDateRequestedJulian_DRQJ [DRQJ]
                                                       UNDEFINED <> jdDateTransactionJulian_TRDJ [TRDJ]
                                                       UNDEFINED <> jdPromisedDeliveryDate_PDDJ [PDDJ]
                                                       UNDEFINED <> jdDateOriginalPromisde_OPDJ [OPDJ]
                                                       UNDEFINED <> jdActualDeliveryDate_ADDJ [ADDJ]
                                                       UNDEFINED <> jdCancelDate_CNDJ [CNDJ]
                                                       UNDEFINED <> jdDatePriceEffectiveDate_PEFJ [PEFJ]
                                                       UNDEFINED <> jdDatePromisedPickJu_PPDJ [PPDJ]
                                                       UNDEFINED <> jdDatePromisedShipJu_PSDJ [PSDJ]
                                                       UNDEFINED <> jdDateServiceCurrency_DSVJ [DSVJ]
                                                       UNDEFINED <> jdDtForGLAndVouch1_DGL [DGL]
                                                       UNDEFINED <> mnPeriodNoGeneralLedge_PN [PN]
                                                       UNDEFINED <> szReference1_VR01 [VR01]
                                                       UNDEFINED <> szReference2Vendor_VR02 [VR02]
                                                       UNDEFINED <> mnIdentifierShortItem_ITM [ITM]
                                                       UNDEFINED <> szIdentifier2ndItem_LITM [LITM]
                                                       UNDEFINED <> szIdentifier3rdItem_AITM [AITM]
                                                       UNDEFINED <> szLocation_LOCN [LOCN]
                                                       UNDEFINED <> szLot_LOTN [LOTN]
                                                       UNDEFINED <> szFromGrade_FRGD [FRGD]
                                                       UNDEFINED <> szThruGrade_THGD [THGD]
                                                       UNDEFINED <> mnFromPotency_FRMP [FRMP]
                                                       UNDEFINED <> mnThruPotency_THRP [THRP]
                                                       UNDEFINED <> szDescriptionLine1_DSC1 [DSC1]
                                                       UNDEFINED <> szDescriptionLine2_DSC2 [DSC2]
                                                       UNDEFINED <> szLineType_LNTY [LNTY]
                                                       UNDEFINED <> szStatusCodeNext_NXTR [NXTR]
                                                       UNDEFINED <> szStatusCodeLast_LTTR [LTTR]
                                                       UNDEFINED <> szItemNumberRelatedKit_RLIT [RLIT]
                                                       UNDEFINED <> szReportingCode1Sales_PDS1 [PDS1]
                                                       UNDEFINED <> szReportingCode2Sales_PDS2 [PDS2]
                                                       UNDEFINED <> szReportingCode3Sales_PDS3 [PDS3]
                                                       UNDEFINED <> szReportingCode4Sales_PDS4 [PDS4]
                                                       UNDEFINED <> szReportingCode5Sales_PDS5 [PDS5]
                                                       UNDEFINED <> szUnitOfMeasureAsInput_UOM [UOM]
                                                       UNDEFINED <> mnUnitsTransactionQty_UORG [UORG]
                                                       UNDEFINED <> mnUnitsChangeOrderQty_UCHG [UCHG]
                                                       UNDEFINED <> mnUnitsOpenQuantity_UOPN [UOPN]
                                                       UNDEFINED <> mnUnitsLineItemQtyRe_UREC [UREC]
                                                       UNDEFINED <> mnCumulativeReceived_CREC [CREC]
                                                       UNDEFINED <> mnUnitsRelieved_URLV [URLV]
                                                       UNDEFINED <> cOtherQuantity12_OTQY [OTQY]
                                                       UNDEFINED <> mnPurchasingUnitPrice_PRRC [PRRC]
                                                       UNDEFINED <> mnAmountExtendedPrice_AEXP [AEXP]
                                                       UNDEFINED <> mnAmountChange_ACHG [ACHG]
                                                       UNDEFINED <> mnAmountOpen1_AOPN [AOPN]
                                                       UNDEFINED <> mnAmountReceived_AREC [AREC]
                                                       UNDEFINED <> mnAmountRelieved_ARLV [ARLV]
                                                       UNDEFINED <> mnTaxCommitment_FTN1 [FTN1]
                                                       UNDEFINED <> mnTaxAmountRelieved_TRLV [TRLV]
                                                       UNDEFINED <> cPriceOverrideCode_PROV [PROV]
                                                       UNDEFINED <> mnUnitCostPurchasing_AMC3 [AMC3]
                                                       UNDEFINED <> mnAmountExtendedCost_ECST [ECST]
                                                       UNDEFINED <> cCostOverrideCode_CSTO [CSTO]
                                                       UNDEFINED <> cCostMethodPurchasing_CSMP [CSMP]
                                                       UNDEFINED <> szPrintMessage1_INMG [INMG]
                                                       UNDEFINED <> szPriceAdjustmentScheduleN_ASN [ASN]
                                                       UNDEFINED <> szPricingCategory_PRGR [PRGR]
                                                       UNDEFINED <> szPricingCategoryLevel1_CLVL [CLVL]
                                                       UNDEFINED <> szCatalogName_CATN [CATN]
                                                       UNDEFINED <> mnDiscountFactor_DSPR [DSPR]
                                                       UNDEFINED <> szPaymentTermsCode01_PTC [PTC]
                                                       UNDEFINED <> cTaxableYN1_TX [TX]
                                                       UNDEFINED <> szTaxExplanationCode1_EXR1 [EXR1]
                                                       UNDEFINED <> szTaxArea1_TXA1 [TXA1]
                                                       UNDEFINED <> cAssociatedText_ATXT [ATXT]
                                                       UNDEFINED <> szContainerID_CNID [CNID]
                                                       UNDEFINED <> szCommodityCode_CDCD [CDCD]
                                                       UNDEFINED <> szNatureOfTransaction_NTR [NTR]
                                                       UNDEFINED <> szFreightHandlingCode_FRTH [FRTH]
                                                       UNDEFINED <> cFreightCalculatedYN_FRTC [FRTC]
                                                       UNDEFINED <> szZoneNumber_ZON [ZON]
                                                       UNDEFINED <> szRateCodeFrieghtMisc_FRAT [FRAT]
                                                       UNDEFINED <> cRateTypeFreightMisc_RATT [RATT]
                                                       UNDEFINED <> mnBuyerNumber_ANBY [ANBY]
                                                       UNDEFINED <> mnCarrierNumber_ANCR [ANCR]
                                                       UNDEFINED <> szModeOfTransport_MOT [MOT]
                                                       UNDEFINED <> szConditionsOfTransport_COT [COT]
                                                       UNDEFINED <> szShippingCommodityClass_SHCM [SHCM]
                                                       UNDEFINED <> szShippingConditionsCode_SHCN [SHCN]
                                                       UNDEFINED <> szUnitOfMeasurePrimary_UOM1 [UOM1]
                                                       UNDEFINED <> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                                                       UNDEFINED <> szUnitOfMeasureSecondary_UOM2 [UOM2]
                                                       UNDEFINED <> mnUnitsSecondaryQtyOr_SQOR [SQOR]
                                                       UNDEFINED <> szUnitOfMeasurePurchas_UOM3 [UOM3]
                                                       UNDEFINED <> szWeightUnitOfMeasure_WTUM [WTUM]
                                                       UNDEFINED <> mnAmountUnitVolume_ITVL [ITVL]
                                                       UNDEFINED <> szVolumeUnitOfMeasure_VLUM [VLUM]
                                                       UNDEFINED <> szGlClass_GLC [GLC]
                                                       UNDEFINED <> mnCentury_CTRY [CTRY]
                                                       UNDEFINED <> mnFiscalYear1_FY [FY]
                                                       UNDEFINED <> szLineStatus_STTS [STTS]
                                                       UNDEFINED <> szReasonCode_RCD [RCD]
                                                       UNDEFINED <> cApplyFreight_FUF1 [FUF1]
                                                       UNDEFINED <> cPostQuantities_FUF2 [FUF2]
                                                       UNDEFINED <> mnGrossWeight_GRWT [GRWT]
                                                       UNDEFINED <> szUnitOfMeasureGrossWt_GWUM [GWUM]
                                                       UNDEFINED <> szLedgerType_LT [LT]
                                                       UNDEFINED <> szAcctNoInputMode_ANI [ANI]
                                                       UNDEFINED <> szAccountId_AID [AID]
                                                       UNDEFINED <> szPurchasingCostCenter_OMCU [OMCU]
                                                       UNDEFINED <> szObjectAccount_OBJ [OBJ]
                                                       UNDEFINED <> szSubsidiary_SUB [SUB]
                                                       UNDEFINED <> cSubledgerType_SBLT [SBLT]
                                                       UNDEFINED <> szSubledger_SBL [SBL]
                                                       UNDEFINED <> szSerialTagNumber_ASID [ASID]
                                                       UNDEFINED <> mnCostComponentNumber_CCMP [CCMP]
                                                       UNDEFINED <> szTagReference_TAG [TAG]
                                                       UNDEFINED <> szCategoriesWorkOrder001_WR01 [WR01]
                                                       UNDEFINED <> szPlan_PL [PL]
                                                       UNDEFINED <> szElevation_ELEV [ELEV]
                                                       UNDEFINED <> szCategoryCodeGl001_R001 [R001]
                                                       UNDEFINED <> szRetainageRule_RTNR [RTNR]
                                                       UNDEFINED <> szCodeLocationTaxStat_LCOD [LCOD]
                                                       UNDEFINED <> cPurgeCode1_PURG [PURG]
                                                       UNDEFINED <> cProcessingMode_PROM [PROM]
                                                       UNDEFINED <> cFinalPayment_FNLP [FNLP]
                                                       UNDEFINED <> cCodeAutomaticVoucher_AVCH [AVCH]
                                                       UNDEFINED <> cPrepaymentYN_PRPY [PRPY]
                                                       UNDEFINED <> cWoOrderFreezeCode_UNCD [UNCD]
                                                       UNDEFINED <> cTypeMatch_MATY [MATY]
                                                       UNDEFINED <> cRoutingProcessYN_RTGC [RTGC]
                                                       UNDEFINED <> cReceiptCode_RCPF [RCPF]
                                                       UNDEFINED <> cPurchaseOrderStatus01_PS01 [PS01]
                                                       UNDEFINED <> cPurchaseOrderStatus02_PS02 [PS02]
                                                       UNDEFINED <> cPurchaseOrderStatus03_PS03 [PS03]
                                                       UNDEFINED <> cPurchaseOrderStatus04_PS04 [PS04]
                                                       UNDEFINED <> cPurchaseOrderStatus05_PS05 [PS05]
                                                       UNDEFINED <> cPurchaseOrderStatus06_PS06 [PS06]
                                                       UNDEFINED <> cPurchaseOrderStatus07_PS07 [PS07]
                                                       UNDEFINED <> cPurchaseOrderStatus08_PS08 [PS08]
                                                       UNDEFINED <> cPurchaseOrderStatus09_PS09 [PS09]
                                                       UNDEFINED <> cPurchaseOrderStatus10_PS10 [PS10]
                                                       UNDEFINED <> cCorrespondenceMethod_CRMD [CRMD]
                                                       UNDEFINED <> szRoutingApproval_ARTG [ARTG]
                                                       UNDEFINED <> mnNumberChangeOrder_CORD [CORD]
                                                       UNDEFINED <> szChangeOrderType_CHDT [CHDT]
                                                       UNDEFINED <> mnDocumentChangeOrder_DOCC [DOCC]
                                                       UNDEFINED <> mnChangeOrderLineNumber_CHLN [CHLN]
                                                       UNDEFINED <> szCurrencyCodeFrom_CRCD [CRCD]
                                                       UNDEFINED <> mnCurrencyConverRateOv_CRR [CRR]
                                                       UNDEFINED <> mnForeignPurchasingCost_FRRC [FRRC]
                                                       UNDEFINED <> mnAmountForeignExtPrice_FEA [FEA]
                                                       UNDEFINED <> mnAmountForeignUnitCost_FUC [FUC]
                                                       UNDEFINED <> mnAmountForeignExtCost_FEC [FEC]
                                                       UNDEFINED <> mnForeignChangedAmount_FCHG [FCHG]
                                                       UNDEFINED <> mnAmountForeignOpen_FAP [FAP]
                                                       UNDEFINED <> mnAmountReceivedForeign_FREC [FREC]
                                                       UNDEFINED <> szUserReservedCode_URCD [URCD]
                                                       UNDEFINED <> jdUserReservedDate_URDT [URDT]
                                                       UNDEFINED <> mnUserReservedAmount_URAT [URAT]
                                                       UNDEFINED <> mnUserReservedNumber_URAB [URAB]
                                                       UNDEFINED <> szUserReservedReference_URRF [URRF]
                                                       UNDEFINED <> szTransactionOriginator_TORG [TORG]
                                                       UNDEFINED <> szUserId_USER [USER]
                                                       UNDEFINED <> szProgramId_PID [PID]
                                                       UNDEFINED <> szWorkStationId_JOBN [JOBN]
                                                       UNDEFINED <> jdDateUpdated_UPMJ [UPMJ]
                                                       UNDEFINED <> mnTimeOfDay_TDAY [TDAY]
                                                       UNDEFINED <> cInInterfaceFlgDistri_IVI [IVI]
                                                       UNDEFINED <> cFlagWriteLedgerRecrd_WRTH [WRTH]
                                                       UNDEFINED <> cPOGeneratorSourceSystem_POGS [POGS]
                                                       UNDEFINED <> cStockingType_STKT [STKT]
                                                       UNDEFINED <> mnConversionFactorPurch_CNV2 [CNV2]
                                                       UNDEFINED <> mnConversionFactor_CONV [CONV]
                                                       UNDEFINED <> cModeProcessing_MODE [MODE]
                                                       UNDEFINED <> mnUniqueKeyIDInternal_UKID [UKID]
                                                       UNDEFINED <> cFlagSalesPurchasing_SOPO [SOPO]
                                                       UNDEFINED <> mnSequenceNumber1_SEQ1 [SEQ]
                                                       UNDEFINED <> szProductSourceType_PSRY [PSRY]
                                                       UNDEFINED <> szProductSource_PSR [PSR]
                                                       UNDEFINED <> szDocumentPayItem_SFX [SFX]
                                                       UNDEFINED <> cMessageCde_MSGT [MSGT]
                                                       UNDEFINED <> szMaterialStatusCodeWo_MTST [MTST]
                                                       UNDEFINED <> mnLineNumberXREF_LNIX [LNIX]
                                                       UNDEFINED <> mnAdjustmentRevisionLevel_AREV [AREV]
                                                       UNDEFINED <> mnDetachedAdjDomestic_DETD [DETD]
                                                       UNDEFINED <> mnDetachedAdjForeign_DETF [DETF]
                                                       UNDEFINED <> cManagerialAnalysisType1_ABT1 [ABT1]
                                                       UNDEFINED <> szManagerialAnalysisCode1_ABR1 [ABR1]
                                                       UNDEFINED <> cManagerialAnalysisType2_ABT2 [ABT2]
                                                       UNDEFINED <> szManagerialAnalysisCode2_ABR2 [ABR2]
                                                       UNDEFINED <> cManagerialAnalysisType3_ABT3 [ABT3]
                                                       UNDEFINED <> szManagerialAnalysisCode3_ABR3 [ABR3]
                                                       UNDEFINED <> cManagerialAnalysisType4_ABT4 [ABT4]
                                                       UNDEFINED <> szManagerialAnalysisCode4_ABR4 [ABR4]
                                                       UNDEFINED <> szOriginalDocPayItem_OSFX [OSFX]
                                                       UNDEFINED <> cHoldCode_HCLD [HCLD]
                                                       UNDEFINED <> szDOCNAME_DOC8 [DOC8]
                                                       UNDEFINED <> szOriginalDocumentType_ODCT [ODCT]
                                                       UNDEFINED <> szCompanyParent_CO0 [CO0]
                                                       UNDEFINED <> szSuffixCode_SFIX [SFIX]
                                                       UNDEFINED <> mnLineNum_LINN [LINN]
                                                       UNDEFINED <> mnShipmentNumber_SHPN [SHPN]
                                                       VA evt_FreeGoodPrevProcessID [PEID] <> mnProcessID_PEID [PEID]
                                                       VA evt_FreeGoodPrevTransactionID [TCID] <> mnTransactionID_TCID [TCID]
                                                       UNDEFINED <> cDualUnitOfMeasureItem_DUAL [DUAL]
                                                       UNDEFINED <> mnProjectNumber_PRJM [PRJM]
                                                       UNDEFINED <> jdLotEffectivityDate_DLEJ [DLEJ]
                                                       UNDEFINED <> szPromotionID_PMTN [PMTN]
                                                       UNDEFINED <> cCrossDockFlag_XDCK [XDCK]
                                                       UNDEFINED <> mnMatrixControlLine_MCLN [MCLN]
                                                       UNDEFINED <> szReportCode1Purchasing_PDP1 [PDP1]
                                                       UNDEFINED <> szReportCode2Purchasing_PDP2 [PDP2]
                                                       UNDEFINED <> szReportCode4Purchasing_PDP4 [PDP4]
                                                       UNDEFINED <> szReportCode5Purchasing_PDP5 [PDP5]
                                                       UNDEFINED <> szReportCode3Purchasing_PDP3 [PDP3]
                                                       UNDEFINED <> mnAmountUnitWeight_ITWT [ITWT]
                                                       UNDEFINED <> szCompany_CO [CO]
                                                       UNDEFINED <> mnLineNumberKitMaster_KTLN [KTLN]
                                                       UNDEFINED <> mnComponentNumber_CPNT [CPNT]
                                                       UNDEFINED <> mnNumbOfCpntPerParent_KTP [KTP]
                                                       UNDEFINED <> cFixedOrVariableQty_FORQ [FORQ]
                                             End If
                                             //
                                             VA evt_FreeGoodFirstCacheFetch [EV01] = "0"
                                        Else
                                             //
                                             // ---------------------------------------------------------------------------
                                             // Save the previous cache records key values to we can reset the cache cursor
                                             // to the previous position
                                             // ---------------------------------------------------------------------------
                                             //
                                             VA evt_FreeGoodPrevComputerID [CTID] = VA frm_szComputerID_CTID [CTID]
                                             VA evt_FreeGoodPrevProcessID [PEID] = VA frm_mnProcessID_PEID [PEID]
                                             VA evt_FreeGoodPrevTransactionID [TCID] = VA frm_mnTransactionID_TCID [TCID]
                                             VA evt_FreeGoodPrevJobNumber [JOBS] = VA frm_JOBS_JobNumber [JOBS]
                                             VA evt_FreeGoodPrevOrderSuffix [SFXO] = VA evt_FreeGoodOrderSuffix [SFXO]
                                             VA evt_FreeGoodPrevActionCode2 [ACTN] = VA evt_FreeGoodActionCode2 [ACTN]
                                             VA evt_FreeGoodPrevLineNumber [LNID] = VA evt_FreeGoodLineNumber [LNID]
                                        End If
                                        //
                                   End While
                                   //
                                   // ---------------------------------------------------------------------------
                                   // Close the cache cursor
                                   // ---------------------------------------------------------------------------
                                   //
                                   CacheProcessPODetailCache(B4302180.CacheProcessPODetailCache)
                                        "9" -> szCacheActionCode_CACTN [CACTN]
                                        "1" -> NidIndexNumber_INID [INID]
                                        "7" -> mnNumberKeys_NKEYS [NKEYS]
                                        UNDEFINED <> cSuppressErrorMessages_EV01 [EV01]
                                        UNDEFINED <> szErrorMessageID_DTAI [DTAI]
                                        VA evt_FreeGoodDeleteCursor [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
                                        VA evt_FreeGoodPrevJobNumber [JOBS] -> mnJobnumberA_JOBS [JOBS]
                                        VA evt_FreeGoodPrevComputerID [CTID] -> szComputerID_CTID [CTID]
                                        VA evt_FreeGoodPrevActionCode2 [ACTN] -> cActionCode2_ACTN [ACTN]
                                        UNDEFINED <> cFlagTransactionEdit_EDFL [EDFL]
                                        UNDEFINED <> szCompanyKeyOrderNo_KCOO [KCOO]
                                        UNDEFINED <> mnDocumentOrderInvoiceE_DOCO [DOCO]
                                        UNDEFINED <> szOrderType_DCTO [DCTO]
                                        VA evt_FreeGoodPrevOrderSuffix [SFXO] -> szOrderSuffix_SFXO [SFXO]
                                        VA evt_FreeGoodPrevLineNumber [LNID] -> mnLineNumber_LNID [LNID]
                                        UNDEFINED <> szCostCenter_MCU [MCU]
                                        UNDEFINED <> szCompanyKeyOriginal_OKCO [OKCO]
                                        UNDEFINED <> szOriginalPoSoNumber_OORN [OORN]
                                        UNDEFINED <> szOriginalOrderType_OCTO [OCTO]
                                        UNDEFINED <> mnOriginalLineNumber_OGNO [OGNO]
                                        UNDEFINED <> szCompanyKeyRelated_RKCO [RKCO]
                                        UNDEFINED <> szRelatedPoSoNumber_RORN [RORN]
                                        UNDEFINED <> szRelatedOrderType_RCTO [RCTO]
                                        UNDEFINED <> mnRelatedPoSoLineNo_RLLN [RLLN]
                                        UNDEFINED <> szContractNumberDist_DMCT [DMCT]
                                        UNDEFINED <> mnContractSuppDist_DMCS [DMCS]
                                        UNDEFINED <> cContractBalancesUpdatedY_BALU [BALU]
                                        UNDEFINED <> mnAddressNumber_AN8 [AN8]
                                        UNDEFINED <> mnAddressNumberShipTo_SHAN [SHAN]
                                        UNDEFINED <> jdDateRequestedJulian_DRQJ [DRQJ]
                                        UNDEFINED <> jdDateTransactionJulian_TRDJ [TRDJ]
                                        UNDEFINED <> jdPromisedDeliveryDate_PDDJ [PDDJ]
                                        UNDEFINED <> jdDateOriginalPromisde_OPDJ [OPDJ]
                                        UNDEFINED <> jdActualDeliveryDate_ADDJ [ADDJ]
                                        UNDEFINED <> jdCancelDate_CNDJ [CNDJ]
                                        UNDEFINED <> jdDatePriceEffectiveDate_PEFJ [PEFJ]
                                        UNDEFINED <> jdDatePromisedPickJu_PPDJ [PPDJ]
                                        UNDEFINED <> jdDatePromisedShipJu_PSDJ [PSDJ]
                                        UNDEFINED <> jdDateServiceCurrency_DSVJ [DSVJ]
                                        UNDEFINED <> jdDtForGLAndVouch1_DGL [DGL]
                                        UNDEFINED <> mnPeriodNoGeneralLedge_PN [PN]
                                        UNDEFINED <> szReference1_VR01 [VR01]
                                        UNDEFINED <> szReference2Vendor_VR02 [VR02]
                                        UNDEFINED <> mnIdentifierShortItem_ITM [ITM]
                                        UNDEFINED <> szIdentifier2ndItem_LITM [LITM]
                                        UNDEFINED <> szIdentifier3rdItem_AITM [AITM]
                                        UNDEFINED <> szLocation_LOCN [LOCN]
                                        UNDEFINED <> szLot_LOTN [LOTN]
                                        UNDEFINED <> szFromGrade_FRGD [FRGD]
                                        UNDEFINED <> szThruGrade_THGD [THGD]
                                        UNDEFINED <> mnFromPotency_FRMP [FRMP]
                                        UNDEFINED <> mnThruPotency_THRP [THRP]
                                        UNDEFINED <> szDescriptionLine1_DSC1 [DSC1]
                                        UNDEFINED <> szDescriptionLine2_DSC2 [DSC2]
                                        UNDEFINED <> szLineType_LNTY [LNTY]
                                        UNDEFINED <> szStatusCodeNext_NXTR [NXTR]
                                        UNDEFINED <> szStatusCodeLast_LTTR [LTTR]
                                        UNDEFINED <> szItemNumberRelatedKit_RLIT [RLIT]
                                        UNDEFINED <> szReportingCode1Sales_PDS1 [PDS1]
                                        UNDEFINED <> szReportingCode2Sales_PDS2 [PDS2]
                                        UNDEFINED <> szReportingCode3Sales_PDS3 [PDS3]
                                        UNDEFINED <> szReportingCode4Sales_PDS4 [PDS4]
                                        UNDEFINED <> szReportingCode5Sales_PDS5 [PDS5]
                                        UNDEFINED <> szUnitOfMeasureAsInput_UOM [UOM]
                                        UNDEFINED <> mnUnitsTransactionQty_UORG [UORG]
                                        UNDEFINED <> mnUnitsChangeOrderQty_UCHG [UCHG]
                                        UNDEFINED <> mnUnitsOpenQuantity_UOPN [UOPN]
                                        UNDEFINED <> mnUnitsLineItemQtyRe_UREC [UREC]
                                        UNDEFINED <> mnCumulativeReceived_CREC [CREC]
                                        UNDEFINED <> mnUnitsRelieved_URLV [URLV]
                                        UNDEFINED <> cOtherQuantity12_OTQY [OTQY]
                                        UNDEFINED <> mnPurchasingUnitPrice_PRRC [PRRC]
                                        UNDEFINED <> mnAmountExtendedPrice_AEXP [AEXP]
                                        UNDEFINED <> mnAmountChange_ACHG [ACHG]
                                        UNDEFINED <> mnAmountOpen1_AOPN [AOPN]
                                        UNDEFINED <> mnAmountReceived_AREC [AREC]
                                        UNDEFINED <> mnAmountRelieved_ARLV [ARLV]
                                        UNDEFINED <> mnTaxCommitment_FTN1 [FTN1]
                                        UNDEFINED <> mnTaxAmountRelieved_TRLV [TRLV]
                                        UNDEFINED <> cPriceOverrideCode_PROV [PROV]
                                        UNDEFINED <> mnUnitCostPurchasing_AMC3 [AMC3]
                                        UNDEFINED <> mnAmountExtendedCost_ECST [ECST]
                                        UNDEFINED <> cCostOverrideCode_CSTO [CSTO]
                                        UNDEFINED <> cCostMethodPurchasing_CSMP [CSMP]
                                        UNDEFINED <> szPrintMessage1_INMG [INMG]
                                        UNDEFINED <> szPriceAdjustmentScheduleN_ASN [ASN]
                                        UNDEFINED <> szPricingCategory_PRGR [PRGR]
                                        UNDEFINED <> szPricingCategoryLevel1_CLVL [CLVL]
                                        UNDEFINED <> szCatalogName_CATN [CATN]
                                        UNDEFINED <> mnDiscountFactor_DSPR [DSPR]
                                        UNDEFINED <> szPaymentTermsCode01_PTC [PTC]
                                        UNDEFINED <> cTaxableYN1_TX [TX]
                                        UNDEFINED <> szTaxExplanationCode1_EXR1 [EXR1]
                                        UNDEFINED <> szTaxArea1_TXA1 [TXA1]
                                        UNDEFINED <> cAssociatedText_ATXT [ATXT]
                                        UNDEFINED <> szContainerID_CNID [CNID]
                                        UNDEFINED <> szCommodityCode_CDCD [CDCD]
                                        UNDEFINED <> szNatureOfTransaction_NTR [NTR]
                                        UNDEFINED <> szFreightHandlingCode_FRTH [FRTH]
                                        UNDEFINED <> cFreightCalculatedYN_FRTC [FRTC]
                                        UNDEFINED <> szZoneNumber_ZON [ZON]
                                        UNDEFINED <> szRateCodeFrieghtMisc_FRAT [FRAT]
                                        UNDEFINED <> cRateTypeFreightMisc_RATT [RATT]
                                        UNDEFINED <> mnBuyerNumber_ANBY [ANBY]
                                        UNDEFINED <> mnCarrierNumber_ANCR [ANCR]
                                        UNDEFINED <> szModeOfTransport_MOT [MOT]
                                        UNDEFINED <> szConditionsOfTransport_COT [COT]
                                        UNDEFINED <> szShippingCommodityClass_SHCM [SHCM]
                                        UNDEFINED <> szShippingConditionsCode_SHCN [SHCN]
                                        UNDEFINED <> szUnitOfMeasurePrimary_UOM1 [UOM1]
                                        UNDEFINED <> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                                        UNDEFINED <> szUnitOfMeasureSecondary_UOM2 [UOM2]
                                        UNDEFINED <> mnUnitsSecondaryQtyOr_SQOR [SQOR]
                                        UNDEFINED <> szUnitOfMeasurePurchas_UOM3 [UOM3]
                                        UNDEFINED <> szWeightUnitOfMeasure_WTUM [WTUM]
                                        UNDEFINED <> mnAmountUnitVolume_ITVL [ITVL]
                                        UNDEFINED <> szVolumeUnitOfMeasure_VLUM [VLUM]
                                        UNDEFINED <> szGlClass_GLC [GLC]
                                        UNDEFINED <> mnCentury_CTRY [CTRY]
                                        UNDEFINED <> mnFiscalYear1_FY [FY]
                                        UNDEFINED <> szLineStatus_STTS [STTS]
                                        UNDEFINED <> szReasonCode_RCD [RCD]
                                        UNDEFINED <> cApplyFreight_FUF1 [FUF1]
                                        UNDEFINED <> cPostQuantities_FUF2 [FUF2]
                                        UNDEFINED <> mnGrossWeight_GRWT [GRWT]
                                        UNDEFINED <> szUnitOfMeasureGrossWt_GWUM [GWUM]
                                        UNDEFINED <> szLedgerType_LT [LT]
                                        UNDEFINED <> szAcctNoInputMode_ANI [ANI]
                                        UNDEFINED <> szAccountId_AID [AID]
                                        UNDEFINED <> szPurchasingCostCenter_OMCU [OMCU]
                                        UNDEFINED <> szObjectAccount_OBJ [OBJ]
                                        UNDEFINED <> szSubsidiary_SUB [SUB]
                                        UNDEFINED <> cSubledgerType_SBLT [SBLT]
                                        UNDEFINED <> szSubledger_SBL [SBL]
                                        UNDEFINED <> szSerialTagNumber_ASID [ASID]
                                        UNDEFINED <> mnCostComponentNumber_CCMP [CCMP]
                                        UNDEFINED <> szTagReference_TAG [TAG]
                                        UNDEFINED <> szCategoriesWorkOrder001_WR01 [WR01]
                                        UNDEFINED <> szPlan_PL [PL]
                                        UNDEFINED <> szElevation_ELEV [ELEV]
                                        UNDEFINED <> szCategoryCodeGl001_R001 [R001]
                                        UNDEFINED <> szRetainageRule_RTNR [RTNR]
                                        UNDEFINED <> szCodeLocationTaxStat_LCOD [LCOD]
                                        UNDEFINED <> cPurgeCode1_PURG [PURG]
                                        UNDEFINED <> cProcessingMode_PROM [PROM]
                                        UNDEFINED <> cFinalPayment_FNLP [FNLP]
                                        UNDEFINED <> cCodeAutomaticVoucher_AVCH [AVCH]
                                        UNDEFINED <> cPrepaymentYN_PRPY [PRPY]
                                        UNDEFINED <> cWoOrderFreezeCode_UNCD [UNCD]
                                        UNDEFINED <> cTypeMatch_MATY [MATY]
                                        UNDEFINED <> cRoutingProcessYN_RTGC [RTGC]
                                        UNDEFINED <> cReceiptCode_RCPF [RCPF]
                                        UNDEFINED <> cPurchaseOrderStatus01_PS01 [PS01]
                                        UNDEFINED <> cPurchaseOrderStatus02_PS02 [PS02]
                                        UNDEFINED <> cPurchaseOrderStatus03_PS03 [PS03]
                                        UNDEFINED <> cPurchaseOrderStatus04_PS04 [PS04]
                                        UNDEFINED <> cPurchaseOrderStatus05_PS05 [PS05]
                                        UNDEFINED <> cPurchaseOrderStatus06_PS06 [PS06]
                                        UNDEFINED <> cPurchaseOrderStatus07_PS07 [PS07]
                                        UNDEFINED <> cPurchaseOrderStatus08_PS08 [PS08]
                                        UNDEFINED <> cPurchaseOrderStatus09_PS09 [PS09]
                                        UNDEFINED <> cPurchaseOrderStatus10_PS10 [PS10]
                                        UNDEFINED <> cCorrespondenceMethod_CRMD [CRMD]
                                        UNDEFINED <> szRoutingApproval_ARTG [ARTG]
                                        UNDEFINED <> mnNumberChangeOrder_CORD [CORD]
                                        UNDEFINED <> szChangeOrderType_CHDT [CHDT]
                                        UNDEFINED <> mnDocumentChangeOrder_DOCC [DOCC]
                                        UNDEFINED <> mnChangeOrderLineNumber_CHLN [CHLN]
                                        UNDEFINED <> szCurrencyCodeFrom_CRCD [CRCD]
                                        UNDEFINED <> mnCurrencyConverRateOv_CRR [CRR]
                                        UNDEFINED <> mnForeignPurchasingCost_FRRC [FRRC]
                                        UNDEFINED <> mnAmountForeignExtPrice_FEA [FEA]
                                        UNDEFINED <> mnAmountForeignUnitCost_FUC [FUC]
                                        UNDEFINED <> mnAmountForeignExtCost_FEC [FEC]
                                        UNDEFINED <> mnForeignChangedAmount_FCHG [FCHG]
                                        UNDEFINED <> mnAmountForeignOpen_FAP [FAP]
                                        UNDEFINED <> mnAmountReceivedForeign_FREC [FREC]
                                        UNDEFINED <> szUserReservedCode_URCD [URCD]
                                        UNDEFINED <> jdUserReservedDate_URDT [URDT]
                                        UNDEFINED <> mnUserReservedAmount_URAT [URAT]
                                        UNDEFINED <> mnUserReservedNumber_URAB [URAB]
                                        UNDEFINED <> szUserReservedReference_URRF [URRF]
                                        UNDEFINED <> szTransactionOriginator_TORG [TORG]
                                        UNDEFINED <> szUserId_USER [USER]
                                        UNDEFINED <> szProgramId_PID [PID]
                                        UNDEFINED <> szWorkStationId_JOBN [JOBN]
                                        UNDEFINED <> jdDateUpdated_UPMJ [UPMJ]
                                        UNDEFINED <> mnTimeOfDay_TDAY [TDAY]
                                        UNDEFINED <> cInInterfaceFlgDistri_IVI [IVI]
                                        UNDEFINED <> cFlagWriteLedgerRecrd_WRTH [WRTH]
                                        UNDEFINED <> cPOGeneratorSourceSystem_POGS [POGS]
                                        UNDEFINED <> cStockingType_STKT [STKT]
                                        UNDEFINED <> mnConversionFactorPurch_CNV2 [CNV2]
                                        UNDEFINED <> mnConversionFactor_CONV [CONV]
                                        UNDEFINED <> cModeProcessing_MODE [MODE]
                                        UNDEFINED <> mnUniqueKeyIDInternal_UKID [UKID]
                                        UNDEFINED <> cFlagSalesPurchasing_SOPO [SOPO]
                                        UNDEFINED <> mnSequenceNumber1_SEQ1 [SEQ]
                                        UNDEFINED <> szProductSourceType_PSRY [PSRY]
                                        UNDEFINED <> szProductSource_PSR [PSR]
                                        UNDEFINED <> szDocumentPayItem_SFX [SFX]
                                        UNDEFINED <> cMessageCde_MSGT [MSGT]
                                        UNDEFINED <> szMaterialStatusCodeWo_MTST [MTST]
                                        UNDEFINED <> mnLineNumberXREF_LNIX [LNIX]
                                        UNDEFINED <> mnAdjustmentRevisionLevel_AREV [AREV]
                                        UNDEFINED <> mnDetachedAdjDomestic_DETD [DETD]
                                        UNDEFINED <> mnDetachedAdjForeign_DETF [DETF]
                                        UNDEFINED <> cManagerialAnalysisType1_ABT1 [ABT1]
                                        UNDEFINED <> szManagerialAnalysisCode1_ABR1 [ABR1]
                                        UNDEFINED <> cManagerialAnalysisType2_ABT2 [ABT2]
                                        UNDEFINED <> szManagerialAnalysisCode2_ABR2 [ABR2]
                                        UNDEFINED <> cManagerialAnalysisType3_ABT3 [ABT3]
                                        UNDEFINED <> szManagerialAnalysisCode3_ABR3 [ABR3]
                                        UNDEFINED <> cManagerialAnalysisType4_ABT4 [ABT4]
                                        UNDEFINED <> szManagerialAnalysisCode4_ABR4 [ABR4]
                                        UNDEFINED <> szOriginalDocPayItem_OSFX [OSFX]
                                        UNDEFINED <> cHoldCode_HCLD [HCLD]
                                        UNDEFINED <> szDOCNAME_DOC8 [DOC8]
                                        UNDEFINED <> szOriginalDocumentType_ODCT [ODCT]
                                        UNDEFINED <> szCompanyParent_CO0 [CO0]
                                        UNDEFINED <> szSuffixCode_SFIX [SFIX]
                                        UNDEFINED <> mnLineNum_LINN [LINN]
                                        UNDEFINED <> mnShipmentNumber_SHPN [SHPN]
                                        VA evt_FreeGoodPrevProcessID [PEID] -> mnProcessID_PEID [PEID]
                                        VA evt_FreeGoodPrevTransactionID [TCID] -> mnTransactionID_TCID [TCID]
                                        UNDEFINED <> cDualUnitOfMeasureItem_DUAL [DUAL]
                                        UNDEFINED <> mnProjectNumber_PRJM [PRJM]
                                        UNDEFINED <> jdLotEffectivityDate_DLEJ [DLEJ]
                                        UNDEFINED <> szPromotionID_PMTN [PMTN]
                                        UNDEFINED <> cCrossDockFlag_XDCK [XDCK]
                                        UNDEFINED <> mnMatrixControlLine_MCLN [MCLN]
                                        UNDEFINED <> szReportCode1Purchasing_PDP1 [PDP1]
                                        UNDEFINED <> szReportCode2Purchasing_PDP2 [PDP2]
                                        UNDEFINED <> szReportCode4Purchasing_PDP4 [PDP4]
                                        UNDEFINED <> szReportCode5Purchasing_PDP5 [PDP5]
                                        UNDEFINED <> szReportCode3Purchasing_PDP3 [PDP3]
                                        UNDEFINED <> mnAmountUnitWeight_ITWT [ITWT]
                                        UNDEFINED <> szCompany_CO [CO]
                                        UNDEFINED <> mnLineNumberKitMaster_KTLN [KTLN]
                                        UNDEFINED <> mnComponentNumber_CPNT [CPNT]
                                        UNDEFINED <> mnNumbOfCpntPerParent_KTP [KTP]
                                        UNDEFINED <> cFixedOrVariableQty_FORQ [FORQ]
                                   //
                              End If
                              // SAR #5921108 end
                              //
                         End If
                    End If
                    //
                    GC ACTN:Action Code (wf) [ACTN] = "D"
                    GC EV04:Skip Line/Cancelled (wf) [EV04] = "1"
                    GC EV01:Record in Detail W.File (wf) [EV01] = "0"
                    //
                    // ---------------------------------------------------------------------------
                    // SAR 5280443 - Strikeout entire row
                    // ---------------------------------------------------------------------------
                    //
                    Set Grid Font(FC Grid, <Currently Selected Row>,  <All Columns>, <,Regular,10,Black>)
                    Disable Grid(FC Grid,  <Current Row>,  <All Columns>, )
                    //
               Else
                    //
                    // ---------------------------------------------------------------------------
                    // If line exists in Live File set the action code to Delete the line.  This is
                    // used by EditLine to cancel the PO detail line
                    // ---------------------------------------------------------------------------
                    //
                    If GC ACTN:Action Code (wf) [ACTN] is equal to "C"
                         GC ACTN:Action Code (wf) [ACTN] = "D"
                         GC EV04:Skip Line/Cancelled (wf) [EV04] = "0"
                         // SAR 5024431 changed value of workfile exists variable
                         GC EV01:Record in Detail W.File (wf) [EV01] = <NULL>
                         //
                         // ---------------------------------------------------------------------------
                         // Clear errors before canceling line so that order will be commited
                         // ---------------------------------------------------------------------------
                         //
                         Clear Grid Cell Error(FC Grid, <Currently Selected Row>, <All Columns>)
                         //
                         // ---------------------------------------------------------------------------
                         // SAR 5280443 - Strikeout entire row
                         // ---------------------------------------------------------------------------
                         //
                         Set Grid Font(FC Grid, <Currently Selected Row>,  <All Columns>, <,Regular,10,Black>)
                         Disable Grid(FC Grid,  <Current Row>,  <All Columns>, )
                         //
                    End If
               End If
               // ==========================================================================
               //
               //   Reduce the total order amount by the amount of the cancelled line
               //
          Else
               //
               Set Grid Cell Error(FC Grid, <Current Row>, GC NextStatus, "124T")
               //
          End If
          //
     ! End If
End If

=============================================
Form: Order Detail - W4310A
Object: HC Cancel Line
Event: Post Button Clicked
Event GUID: 5076cd37-fb4b-11d3-a5cc-0004ac1b6107
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnLineNumberKitMaster_KTLN [KTLN]
----------------------------------------
//  SAR 7310431 Add if condition
If SV Form_ Mode is equal to CO UPDATE_MODE
And GC Short Item No [ITM] is not equal to "0"
And GC Short Item No [ITM] is not equal to <NULL>
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          VA grd_StockingType_STKT [STKT] <- cStockingType [STKT]
     //
     // SAR 5775711, 6464957
     //
     If VA grd_StockingType_STKT [STKT] is equal to "K"
          If PO mnLineNumberIncrement [LNID] is greater than or equal to "1.000"
               VA frm_szParentLineNumber_LNID [LNID] = GC Line Number [LNID]
               Get Selected Grid Row Number(FC Grid, VA frm_szRowNumber_PLND)
               //
               // ---------------------------------------------------------------------------
               // skip row
               // ---------------------------------------------------------------------------
               //
               VA frm_szRowNumber_PLND [PLND] = [VA frm_szRowNumber_PLND [PLND]]+1
               Get Grid Row(FC Grid, VA frm_szRowNumber_PLND)
               //
               VA frm_szIntegerLineNumber_LNID [LNID] = floor([GC Line Number [LNID]])
               While VA frm_szIntegerLineNumber_LNID [LNID] is equal to VA frm_szParentLineNumber_LNID [LNID]
                    GC EV04:Skip Line/Cancelled (wf) [EV04] = "0"
                    GC ACTN:Action Code (wf) [ACTN] = "D"
                    //
                    // ---------------------------------------------------------------------------
                    // Strike out the extended amount
                    // ---------------------------------------------------------------------------
                    //
                    Set Grid Font(FC Grid,  <Currently Selected Row>, GC ExtendedCost, <,Regular,10,Black>)
                    Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
                    //
                    // ---------------------------------------------------------------------------
                    // skip row
                    // ---------------------------------------------------------------------------
                    //
                    VA frm_szRowNumber_PLND [PLND] = [VA frm_szRowNumber_PLND [PLND]]+1
                    Get Grid Row(FC Grid, VA frm_szRowNumber_PLND)
                    //
                    VA frm_szIntegerLineNumber_LNID [LNID] = floor([GC Line Number [LNID]])
               End While
          Else
               If PO mnLineNumberIncrement [LNID] is less than "1.000"
                    Get Selected Grid Row Number(FC Grid, VA frm_szRowNumber_PLND)
                    //
                    // ---------------------------------------------------------------------------
                    // skip row
                    // ---------------------------------------------------------------------------
                    //
                    VA evt_mnLineNumberKitMaster_KTLN [KTLN] = GC Line Number [LNID]
                    VA frm_szRowNumber_PLND [PLND] = [VA frm_szRowNumber_PLND [PLND]]+1
                    Get Grid Row(FC Grid, VA frm_szRowNumber_PLND)
                    //
                    While GC Kit ln Number [KTLN] is equal to VA evt_mnLineNumberKitMaster_KTLN [KTLN]
                         GC EV04:Skip Line/Cancelled (wf) [EV04] = "0"
                         GC ACTN:Action Code (wf) [ACTN] = "D"
                         //
                         // ---------------------------------------------------------------------------
                         // Strike out the extended amount
                         // ---------------------------------------------------------------------------
                         //
                         Set Grid Font(FC Grid, <Currently Selected Row>,  <All Columns>, <,Regular,10,Black>)
                         Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
                         //
                         // ---------------------------------------------------------------------------
                         // skip row
                         // ---------------------------------------------------------------------------
                         //
                         VA frm_szRowNumber_PLND [PLND] = [VA frm_szRowNumber_PLND [PLND]]+1
                         Get Grid Row(FC Grid, VA frm_szRowNumber_PLND)
                         //
                    End While
               End If
          End If
     End If
     //
     //
End If
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Select Blanket Order to release
Event: Button Clicked
Event GUID: 9093370a-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_BranchPlantBlanketRel_MCU [MCU]
----------------------------------------
// SAR 8500165 Begin
If GC Original Order No [OORN] is not equal to <Blank>
And GC Original Order No [OORN] is not equal to <NULL>
And GC Original Order No [OORN] is not equal to "0"
And GC ACTN:Action Code (wf) [ACTN] is equal to "C"
And GC DCTO:Order Type (wf) [DCTO] is not equal to GC Orig Type [OCTO]
     Stop Processing
End If
// SAR 8500165  End
// Added code for SAR 2964102  SD5729159  5/13/99
VA frm_cBlanketsCalled_EV01 [EV01] = <Blank>
If GC Item Number [UITM] is not equal to <Blank>
     //
     // -----------------------------------------------------
     //    SAR 5760922 - Pass in the version of P43216
     // -----------------------------------------------------
     //
     // -----------------------------------------------------
     //    SAR 5716121 Begins
     //    If Proc Option is set to "2" for Blanket Release then send B/P to search
     //    else search for all Blankets in P43216
     // -----------------------------------------------------
     //
     // -------------------------------------------------
     //  SAR  6448877 Begin
     // Combine two calls to P43216 to one, by using variable to pass in
     // branch/plant.  Removed passing in the parameter to original order type.
     // The order type in P43216 will come from its processing option.  The
     // original order type parameter will only be passed back to the calling
     // application.
     // --------------------------------------------------
     //
     If PO szBlanketQuoteRelease [VL14] is equal to "2"
          VA evt_BranchPlantBlanketRel_MCU [MCU] = GC Branch/ Plant [MCU]
     Else
          VA evt_BranchPlantBlanketRel_MCU [MCU] = <Blank>
     End If
     //
     // ---------------------------------------------------------------------------
     // SAR  6415012  - Pass Requested date (DRQJ) parm to P43216.
     // SAR 7381707 - Pass in VA_OriginalSFXO instead of VA_OrigSfx
     // SAR # 8352334 Pass OrigType (OCTO) needs to go both ways.  Same as 8250469
     // ---------------------------------------------------------------------------
     //
     // SAR 8250469 Begin
     // SAR 8607384
     // BUG# 11904731 - PMPN Enhancements - Pass PMPN
     Call App:P43216 Form:W43216A Version:PO szBlanketReleaseVersion
          FC Address Number [AN8] -> SupplierNumber [AN8]
          GC Tr. UoM [UOM] -> TransactionUOM [UOM]
          FC Foreign [CRRM] -> CurrencyMode [CRRM]
          FC Currency Code [CRCD] -> CurrencyCode [CRCD]
          GC Original Order No [OORN] <> OriginalOrder [OORN]
          GC Orig Type [OCTO] <> OriginalType [OCTO]
          GC Orig Co [OKCO] <> OriginalCompany [OKCO]
          GC Original Line No [OGNO] <> OriginalLine [OGNO]
          GC Item Number [UITM] -> ItemNumber [UITM]
          GC Unit Cost [UPAX] <> OriginalUnitCost [PRRC]
          GC Quantity Ordered [UORGE1] <> TransactionQuantity [UORG]
          GC Orig Sfx [OSFX] <> szOriginalSuffix [SFX]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
          VA evt_BranchPlantBlanketRel_MCU [MCU] -> BusinessUnit [MCU]
          GC Production Number [PMPN] <> szProject_Mfg_Production_N [PMPN]
     // SAR 8250469 End
     //
     If GC Orig Type [OCTO] is not equal to <Blank>
          //
          // ---------------------------------------------------------------------
          //    SAR 6213841 - If coming from P43216 and blanket has not been released
          //    in EditLine and Blanket Release proc. option is not ON then release
          //    the blanket now.
          // ---------------------------------------------------------------------
          //
          If GC EV07..BlanketOrdersFound(wf) [EV07] is not equal to "1"
          And GC EV07..BlanketOrdersFound(wf) [EV07] is not equal to "3"
               GC EV07..BlanketOrdersFound(wf) [EV07] = "2"
          End If
          //
          Disable Grid(FC Grid,  <Current Row>, GC UnitCost)
          If GC EV07..BlanketOrdersFound(wf) [EV07] is equal to "2"
               VA frm_RelieveBlanketOrder [EV06] = "1"
               VA frm_cBlanketsCalled_EV01 [EV01] = "1"
               GC Get Blanket [EV09] = "1"
          End If
          //
          // ---------------------------------------------------------------------------
          // Override grid cost with blanket order amount
          // ---------------------------------------------------------------------------
          //
          GC PROV:Price Override - (wf) [PROV] = "1"
     End If
     //
     Press Button(FC PROCESS: Load Grid From Cache)
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Select Agreement
Event: Button Clicked
Event GUID: 5ef15c5b-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P38200W Form:W38200WB Version: 
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
     GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
     GC Disply Seq [SEQ] <- mnSequenceNumber [SEQ]
     GC Product Source [PSR] <- szProductSource [PSR]
     GC Sr Ty [PSRY] <- szProductSourceType [PSRY]
     FC Order Number [DOCO] -> mnOrderNumber [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szOrderCompany [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> cUpdateGeneralLedger [UPGL]
     UNDEFINED <> cPriceatAmbiantorStandard [PRAS]
     GC Unit Cost [UPAX] <> mnUnitPrice [UPRC]
     VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
     UNDEFINED <> mnPartner [PTNR]
     UNDEFINED <> szUnitOfMeasureAsInput [UOM]
     UNDEFINED <> cAgreementType [DMTC]
     UNDEFINED <> cCommingledOtherOwner [CMOO]
     UNDEFINED <> mnForeignUnitPrice [FUP]
If GC Objeto de Custo 1 [DMCT] is not equal to <Blank>
Or GC Objeto de Custo 1 [DMCT] is not equal to <NULL>
     VA frm_AgreementModuleCalled [EV01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Select a Substitute Item
Event: Button Clicked
Event GUID: 90932e2d-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_UITM [UITM]
----------------------------------------
// 
// 
// Pass Substitute Processesing option and Promise Delivery date
// 
CallSubstituteItemApplication(N4302970.CallSubstituteItemApplication)
     PO szCrossReferenceType [XRT] -> szCrossReferenceType [XRT]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     GC Short Item No [ITM] <> mnShortItemNumber [ITM]
     GC Item Number [UITM] <> szItemNumber [UITM]
     GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
     GC Promised Delivery [PDDJ] -> jdDateExpired [TRDJ]
     GC Unit Cost [UPAX] <> mnUnitCost [UPAX]
     GC PRRCE1:Old Unit Price (wf) [PRRCE1] <> mnOldUnitCost [PRRCE1]
     GC Extended Cost [AEXPE1] <> mnExtendedCost [AEXPE1]
     GC PROV:Price Override - (wf) [PROV] <> cPriceOverrideCode [PROV]
     GC Description 1 [DSC1] <> szDescription1 [DSC1]
     GC Description 2 [DSC2] <> szDescription2 [DSC2]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Select a Replacement For Obsolete Item
Event: Button Clicked
Event GUID: 5ef15c64-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ObsoleteItemsOK [EV01]
evt_UITM [UITM]
----------------------------------------
// 
// Pass Obsolete Processesing option and cancel date
// 
CallSubstituteItemApplication(N4302970.CallSubstituteItemApplication)
     PO szTypeCrossReferenceT [XRT2] -> szCrossReferenceType [XRT]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     GC Short Item No [ITM] <> mnShortItemNumber [ITM]
     GC Item Number [UITM] <> szItemNumber [UITM]
     GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
     GC Cancel Date [CNDJ] -> jdDateExpired [TRDJ]
     GC Unit Cost [UPAX] <> mnUnitCost [UPAX]
     GC PRRCE1:Old Unit Price (wf) [PRRCE1] <> mnOldUnitCost [PRRCE1]
     GC Extended Cost [AEXPE1] <> mnExtendedCost [AEXPE1]
     GC PROV:Price Override - (wf) [PROV] <> cPriceOverrideCode [PROV]
     GC Description 1 [DSC1] <> szDescription1 [DSC1]
     GC Description 2 [DSC2] <> szDescription2 [DSC2]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Select a Parts List
Event: Button Clicked
Event GUID: f1878b07-72a1-4f28-ba3e-887da5983908
=============================================
// 
// ---------------------------------------------------------------------------
// Do not process until user sets focus to grid. SAR 6277211
// ---------------------------------------------------------------------------
// 
If VA frm_cSetFocusToGridFlag_EV01 [EV01] is equal to "1"
     // 
     // ---------------------------------------------------------------------------
     // SAR 5031826 Added for MPM enhancement
     // Call to parts list form to attach a parts list and workorder to purchase orde
     // ---------------------------------------------------------------------------
     // 
     VA frm_mnPurchaseOrderQty_QTY [QTY] = GC Quantity Ordered [UORGE1]
     Call App:P31P201 Form:W31P201B Version:Undefined
          GC Project Number [PRJM] <> mnProjectNumber [PRJM]
          VA frm_ANI_AccountNumber [ANI] <> szAccountId [AID]
          BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Quantity Ordered [UORGE1] <> mnUnitsTransactionQty [UORG]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Rel Ord Type [RCTO] <> szRelatedOrderType [RCTO]
          GC Related PO/SO No [RORN] <> szRelatedPoSoNumber [RORN]
          GC Item Number [UITM] <> szComponentItemNo2nd [CPIL]
          GC Unique Key ID [UKID] <- mnUniqueKeyIDInternal [UKID]
          VA grd_mnRelatedLineNo_RLLN [RLLN] <- mnComponentNumberBOM [CPNB]
          GC Branch/ Plant [MCU] -> szCostCenterAlt [MMCU]
          BC Order Type (F4301.0) [DCTO] -> szOrderType [DCTO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC KCOO:Order Company (wf) [KCOO] -> szCompanyKeyOrderNo [KCOO]
     // 
     If VA frm_mnPurchaseOrderQty_QTY [QTY] is not equal to "0"
          If GC Quantity Ordered [UORGE1] is not equal to VA frm_mnPurchaseOrderQty_QTY [QTY]
               Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC QuantityOrdered, "31PJ")
          End If
     End If
     // 
End If
// 

=============================================
Form: Order Detail - W4310A
Object: HC Select a Parts List
Event: Post Button Clicked
Event GUID: b70c2724-29dc-4212-9778-a1fcb6ecb953
=============================================
// 
// ---------------------------------------------------------------------------
// SAR 5031826, 5532524 Added for MPM enhancement
// ---------------------------------------------------------------------------
// 
If GC Unique Key ID [UKID] is not equal to <Blank>
And GC Unique Key ID [UKID] is not equal to <NULL>
And GC Unique Key ID [UKID] is not equal to "0"
     ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
          GC Original Order No [OORN] -> szInputString [AA15]
          VA grd_mnPartsListOrderNum_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
          UNDEFINED <- cReturnedErrorCode [ERR]
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Kits
Event: Button Clicked
Event GUID: 4d53e2c1-fed7-11d1-8dd3-0000f6782893
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idF4101Pointer_GENLNG [GENLNG]
----------------------------------------
// 
// -----------------------------------------------------------------------
//    SAR 6069973 - Now users can take Kits Row Exit as many times
//    as they want.  However, Row Exit and Changed event will call Kit
//    Processing only once (grd_Kit variable) if not already called by this
//    row exit
// -----------------------------------------------------------------------
// 
// SAR 6464957 Begin
If VA grd_StockingType_STKT [STKT] is equal to "K"
And GC Next Status [NXTR] is not equal to "999"
     If VA grd_cLineError_EV01 [EV01] is equal to "0"
     Or VA grd_cLineError_EV01 [EV01] is equal to or empty <Blank>
          VA frm_EV11_KitsProcessed [EV11] = "0"
          // 
          Press Button(FC Kit Processing)
          VA grd_cKitProcessed_EV01 [EV01] = "1"
          // 
     End If
End If
// SAR 6464957 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Quote Supplier Entry - Line Level
Event: Button Clicked
Event GUID: 90932357-a23d-11d0-a204-0000f6728a56
=============================================
//  
// ---------------------------------------------------------------------------
// If GC Line Number is zero, a line has not been entered yet, don't execute.
// Added if statement so that users can not add suppliers to closed quotes
// ---------------------------------------------------------------------------
// 
If GC Next Status [NXTR] is not equal to "999"
     If GC Line Number [LNID] is not equal to "0"
     And GC Line Number [LNID] is not equal to <Blank>
          // SAR 8463923- Prevent account number validation when multiple accounts are
          // in use.
          Call App:P4330 Form:W4330A Version:Undefined
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
               GC 2nd Item Number [LITM] -> szItemNoUnknownFormat [UITM]
               GC 3rd Item Number [AITM] -> szIdentifier3rdItem [AITM]
               GC Branch/ Plant [MCU] -> szCostCenter [MCU]
               FC Ship To [SHAN] -> mnAddressNumberShipTo [SHAN]
               GC Asset ID [ASII] -> szSerialTagNumber [ASID]
               GC Account Number [ANI] -> szAcctNoInputMode [ANI]
               GC Change Order [SFXO] -> szOrderSuffix [SFXO]
               GC Multiple Accounts [MACT] -> cMultipleAccounts [MACT]
     End If
End If
//  


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Original Orders Entry
Event: Button Clicked
Event GUID: 9093247b-a23d-11d0-a204-0000f6728a56
=============================================
Call App:P4332 Form:W4332A Version:Undefined
     FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> OrderType [DCTO]
     FC Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Line Number [LNID] -> LineNumber [LNID]
     GC Original Order No [OORN] -> OriginalPoSoNumber [OORN]
     GC Orig Type [OCTO] -> OriginalOrderType [OCTO]
     GC Orig Co [OKCO] -> CompanyKeyOriginal [OKCO]
     GC Original Line No [OGNO] -> OriginalLineNumber [OGNO]
     "1" -> ProgramOrigin [EV01]
     GC Item Number [UITM] -> Itemnounknownformat [UITM]
     GC Quantity Ordered [UORGE1] -> Unitsrequistioned [UREQ]
     GC Tr. UoM [UOM] -> Unitofmeasure [UM]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Associated Requisitions
Event: Button Clicked
Event GUID: e1c92c68-6189-4a8b-a7e7-cc2c930173ae
=============================================
Call App:P43E11 Form:W43E11A Version:Undefined
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     "000" -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
     PO szRequistionSelfServiceVersion [VER1] -> szP43E10Version [VER1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Change Order Summary
Event: Button Clicked
Event GUID: 5ef15c58-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P430114 Form:W430114A Version:PO InqChangeOrderVersion
     FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> OrderType [DCTO]
     FC Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> OrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cSupplierSelfService1 [SSS1]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Matrix Order Entry
Event: Button Clicked
Event GUID: d4958134-8c06-4e66-945b-0ca8b2f47e64
=============================================
// 
// SAR 8180798 Pt.2
// We will not allow access to Matrix Order Entry unless there is a Matrix
// Order Line.  Therefore MatrixLineNumber must be greater than "0"
// 
If VA grd_cMatrixControlled_MIC [MIC] is equal to ("1","2")
And GC Matrix Line Number [MCLN] is greater than "0"
     // End SAR 8180798 Pt. 2
     Press Button(FC Matrix Order Entry)
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Order Recap
Event: Button Clicked
Event GUID: 5ef15c5e-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4310 Form:W4310C Version: 
     GC KCOO:Order Company (wf) [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC DCTO:Order Type (wf) [DCTO] -> szOrderType [DCTO]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supply/Demand Inquiry
Event: Button Clicked
Event GUID: f57e0b55-a23a-11d0-a204-0000f6728a56
=============================================
// 
// SAR #6553204
Call App:P4021 Form:W4021B Version:PO szSupplyDemandInquiry
     GC Branch/ Plant [MCU] -> InputBranch [MCU]
     GC Tr. UoM [UOM] -> InputUOM [UOM]
     GC Item Number [UITM] -> InputPrimaryItem [UITM]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Quote Price Breaks Entry
Event: Button Clicked
Event GUID: 90932356-a23d-11d0-a204-0000f6728a56
=============================================
// ---------------------------------------------------------------------------
// Short item number needs to be determined before hitting "ok" fo
// entry to Quote Price Breaks directly from Add mode.
// ---------------------------------------------------------------------------
// 
If SV Form_ Mode is equal to CO ADD_MODE
And GC Ln Ty [LNTY] is not equal to "J"
And GC Ln Ty [LNTY] is not equal to "T"
     GetItemWithShortOrUnknownItem(N4200940.GetItemWithShortOrUnknownItem)
          UNDEFINED <> szCostcenter [MCU]
          GC Short Item No [ITM] <- mnIdentifiershortitem [ITM]
          GC Item Number [UITM] -> szItemnounknownformat [UITM]
          UNDEFINED <> szDescriptionline1 [DSC1]
          UNDEFINED <> szDescriptionline2 [DSC2]
          UNDEFINED <> szDataitem [DTAI]
          UNDEFINED <> szUnitofmeasuresecondary [UOM2]
End If
// 
// Passed in FC F4301:Order Type instead of GC Order Type to prevent Price Break
// from Disappearing. 
// 
// ---------------------------------------------------------------------------
// Added if statement so that users can not add price breaks to closed quotes
// ---------------------------------------------------------------------------
// 
If GC Next Status [NXTR] is not equal to "999"
     Call App:P4331 Form:W4331A Version:Undefined
          FC Order Company [KCOO] -> CompanyKeyOrderNo [KCOO]
          FC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          FC F4301:Order Type [DCTO] -> OrderType [DCTO]
          GC Line Number [LNID] -> LineNumber [LNID]
          "0" -> AddressNumber [AN8]
          GC Quantity Ordered [UORGE1] -> UnitsTransactionQty [UORG]
          <Blank> -> ProgramCallFrom [EV01]
          GC Short Item No [ITM] -> ShortItemNumber [ITM]
          GC Branch/ Plant [MCU] -> BranchPlant [MCU]
          GC Promised Delivery [PDDJ] -> CancelDate [CNDJ]
          GC Original Promised Date [OPDJ] -> PromisedDate [PDDJ]
          GC Account Number [ANI] -> AccountNumber [ANI]
          FC Currency Code [CRCD] -> CurrencyCode [CRCD]
          GC Tr. UoM [UOM] -> UnitOfMeasure [UM]
          GC 2nd Item Number [LITM] -> LongItemNumber [LITM]
          GC 3rd Item Number [AITM] -> ThirdItemNumber [AITM]
          UNDEFINED <> UnitPrice [PRRC]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          UNDEFINED <> cShowReleaseQty [EV01]
          UNDEFINED <> cIsLineClosed [YN]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Supplier Schedule Master Revision
Event: Button Clicked
Event GUID: 90932d7d-a23d-11d0-a204-0000f6728a56
=============================================
Call App:P4321 Form:W4321C Version:ZJDE0001
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC DCTO:Order Type (wf) [DCTO] -> szOrderType [DCTO]
     GC KCOO:Order Company (wf) [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     GC Ship To Number [SHAN] <> mnAddressNumberShipTo [SHAN]
     GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
     GC Quantity Ordered [UORGE1] -> mnBlanketOrder [UORG]
     GC Original Promised Date [OPDJ] <> jdPromisedDeliveryDate [PDDJ]
     UNDEFINED <> szWorkDayCalendarType [WDCT]
     UNDEFINED <> szWorkDayCalendarKey [WDCK]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Line Attachments
Event: Button Clicked
Event GUID: f57e0b58-a23a-11d0-a204-0000f6728a56
=============================================
//  
If GC Line Number [LNID] is not equal to <Blank>
And GC Line Number [LNID] is not equal to "0"
     //  
     // ---------------------------------------------------------------------------
     // Pass in the GC values into the media object structure instead of the FC
     // values.  SAR 1884805
     // ---------------------------------------------------------------------------
     // 
     Media Object Structures(GT4311, <Default Media Object>, <Edit>, <First Text Item>, FC EV03-Detail Generic Text (wf), FC Order Number, FC Order Company, FC F4301:Order Type, GC ChangeOrder, ...)
     If FC EV03-Detail Generic Text (wf) [EV03] is equal to "1"
          Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>, )
          // 
          // ---------------------------------------------------------------------------
          // SAR 6143782- On Update Mode, set ATXT flag in F4311 if user             
          // adds attachments. GC PDATXT column is set
          // off to start edit line to save value
          // then enddoc to  write to DB
          // ---------------------------------------------------------------------------
          // 
          GC Associated Text [ATXT] = "Y"
     Else
          Set Grid Text Indicator(FC Grid,  <Current Row>,  <No>, )
     End If
End If
//  


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Additional Information 1
Event: Button Clicked
Event GUID: f57df40d-a23a-11d0-a204-0000f6728a56
=============================================
// 
// ---------------------------------------------------------------------------
//  SAR    5261488    Begin
// Check if processing option for branch plant validation is set to validate the
// F41001 or the F0006.   If the processing option is set to validate the F0006,
// in two scenarios, the Branch/Plant (MCU) will still be passed through the for
// interconnect, rather than the CostCenter (OMCU). 
// ---------------------------------------------------------------------------
// 
If PO cBranchPlantValidation [EV01] is equal to "1"
     Call App:P4310 Form:W4310F Version: 
          GC Tax Y/N [TX] <> TaxableFlag [TX]
          GC Expl Code [EXR1] <> TaxExplanationCode [EXR1]
          GC Tax Rate/Area [TXA1] <> TaxRateArea [TXA1]
          GC Discount Factor [DSPR] <> DiscountFactor [DSPR]
          GC Item Price Group [PRGR] <> ItemPriceGroup [PRGR]
          GC Price Cat Level [CLVL] <> PriceCategoryLevel [CLVL]
          GC Print Message [INMG] <> PrintMessage [INMG]
          GC Branch/ Plant [MCU] <> BranchPlantOnLineLevel [MCU]
          GC Lot/Serial [LOTN] <> Lot [LOTN]
          GC Location [LOCNE1] <> Location [LOCN]
          GC Asset ID [ASII] <> AssetNumber [ASID]
          FC F4301:Order Type [DCTO] <> OrderType [DCTO]
          UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
          UNDEFINED <> szCompanyKeyOrderNo [KCOO]
          UNDEFINED <> szOrderSuffix [SFXO]
          UNDEFINED <> mnLineNumber [LNID]
          VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
          GC Promotion ID [PMTN] <> szPromotionID [PMTN]
          VA frm_PromotionsSystemFlag_PRSF [PRSF] -> cPromotionsSystemFlag [PRSF]
Else
     If PO cBranchPlantValidation [EV01] is equal to <Blank>
          // 
          // ---------------------------------------------------------------------------
          // Check if CostCenter is blank.
          // ---------------------------------------------------------------------------
          // 
          If GC Business Unit [OMCU] is equal to <Blank>
               Call App:P4310 Form:W4310F Version: 
                    GC Tax Y/N [TX] <> TaxableFlag [TX]
                    GC Expl Code [EXR1] <> TaxExplanationCode [EXR1]
                    GC Tax Rate/Area [TXA1] <> TaxRateArea [TXA1]
                    GC Discount Factor [DSPR] <> DiscountFactor [DSPR]
                    GC Item Price Group [PRGR] <> ItemPriceGroup [PRGR]
                    GC Price Cat Level [CLVL] <> PriceCategoryLevel [CLVL]
                    GC Print Message [INMG] <> PrintMessage [INMG]
                    GC Branch/ Plant [MCU] <> BranchPlantOnLineLevel [MCU]
                    GC Lot/Serial [LOTN] <> Lot [LOTN]
                    GC Location [LOCNE1] <> Location [LOCN]
                    GC Asset ID [ASII] <> AssetNumber [ASID]
                    FC F4301:Order Type [DCTO] <> OrderType [DCTO]
                    UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
                    UNDEFINED <> szCompanyKeyOrderNo [KCOO]
                    UNDEFINED <> szOrderSuffix [SFXO]
                    UNDEFINED <> mnLineNumber [LNID]
                    VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
                    GC Promotion ID [PMTN] <> szPromotionID [PMTN]
                    VA frm_PromotionsSystemFlag_PRSF [PRSF] -> cPromotionsSystemFlag [PRSF]
          Else
               // 
               // ---------------------------------------------------------------------------
               // Check if CostCenter is not blank and if CostCenter is not equal to
               // Branch/Plant. 
               // ---------------------------------------------------------------------------
               // 
               If GC Business Unit [OMCU] is not equal to GC Branch/ Plant [MCU]
                    Call App:P4310 Form:W4310F Version: 
                         GC Tax Y/N [TX] <> TaxableFlag [TX]
                         GC Expl Code [EXR1] <> TaxExplanationCode [EXR1]
                         GC Tax Rate/Area [TXA1] <> TaxRateArea [TXA1]
                         GC Discount Factor [DSPR] <> DiscountFactor [DSPR]
                         GC Item Price Group [PRGR] <> ItemPriceGroup [PRGR]
                         GC Price Cat Level [CLVL] <> PriceCategoryLevel [CLVL]
                         GC Print Message [INMG] <> PrintMessage [INMG]
                         GC Branch/ Plant [MCU] <> BranchPlantOnLineLevel [MCU]
                         GC Lot/Serial [LOTN] <> Lot [LOTN]
                         GC Location [LOCNE1] <> Location [LOCN]
                         GC Asset ID [ASII] <> AssetNumber [ASID]
                         FC F4301:Order Type [DCTO] <> OrderType [DCTO]
                         UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
                         UNDEFINED <> szCompanyKeyOrderNo [KCOO]
                         UNDEFINED <> szOrderSuffix [SFXO]
                         UNDEFINED <> mnLineNumber [LNID]
                         VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
                         GC Promotion ID [PMTN] <> szPromotionID [PMTN]
                         VA frm_PromotionsSystemFlag_PRSF [PRSF] -> cPromotionsSystemFlag [PRSF]
               Else
                    Call App:P4310 Form:W4310F Version: 
                         GC Tax Y/N [TX] <> TaxableFlag [TX]
                         GC Expl Code [EXR1] <> TaxExplanationCode [EXR1]
                         GC Tax Rate/Area [TXA1] <> TaxRateArea [TXA1]
                         GC Discount Factor [DSPR] <> DiscountFactor [DSPR]
                         GC Item Price Group [PRGR] <> ItemPriceGroup [PRGR]
                         GC Price Cat Level [CLVL] <> PriceCategoryLevel [CLVL]
                         GC Print Message [INMG] <> PrintMessage [INMG]
                         GC Business Unit [OMCU] <> BranchPlantOnLineLevel [MCU]
                         GC Lot/Serial [LOTN] <> Lot [LOTN]
                         GC Location [LOCNE1] <> Location [LOCN]
                         GC Asset ID [ASII] <> AssetNumber [ASID]
                         FC F4301:Order Type [DCTO] <> OrderType [DCTO]
                         UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
                         UNDEFINED <> szCompanyKeyOrderNo [KCOO]
                         UNDEFINED <> szOrderSuffix [SFXO]
                         UNDEFINED <> mnLineNumber [LNID]
                         VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
                         GC Promotion ID [PMTN] <> szPromotionID [PMTN]
                         VA frm_PromotionsSystemFlag_PRSF [PRSF] -> cPromotionsSystemFlag [PRSF]
               End If
          End If
     End If
End If
//  SAR     5261488     End
// SAR 8906579
GC Adj. Schedule [ASN] = VA grd_ASN_AdjSchedule [ASN]
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Additional Information 2
Event: Button Clicked
Event GUID: f57df40e-a23a-11d0-a204-0000f6728a56
=============================================
// 
// ---------------------------------------------------------------------------
// Comment out related order ER.  There is no way to change these fields through
// POE, hence, since no change will occur let the business view populate fields.
// Pass in BC values into form interconnect.
// SAR  6198960 - Pass in GC Original Suffix
// ---------------------------------------------------------------------------
// 
! Call App:P4310 Form:W4310E Version:ZJDE0001
!      GC Report Code 1 [PDP1] <> PurchaseReportingCode1 [PDP1]
!      GC Objeto de Custo 2 [PDP2] <> PurchaseReportingCode2 [PDP2]
!      GC Objeto de Custo 3 [PDP3] <> PurchaseReportingCode3 [PDP3]
!      GC Objeto de Custo 4 [PDP4] <> PurchaseReportingCode4 [PDP4]
!      GC Cost Rule [PDP5] <> PurchaseReportingCode5 [PDP5]
!      GC Extended Weight [ITWT] <> UnitWeight [ITWT]
!      GC Wt UoM [WTUM] <> WeightUoM [WTUM]
!      GC Extended Volume [ITVL] <> UnitVolume [ITVL]
!      GC Vol  UoM [VLUM] <> VolumeUoM [VLUM]
!      GC Reference  [VR01] <> SupplierSO [VR01]
!      GC Centro de Respons. [VR02] <> Reference2 [VR02]
!      GC S M [CRMD] <> SendMethod [CRMD]
!      GC F C [UNCD] <> WorkOrderFreezeCode [UNCD]
!      GC G/L Offset [GLC] <> GLOffset [GLC]
!      GC E R [AVCH] <> EvaluatedReceiptsSettlement [AVCH]
!      GC Original Order No [OORN] <> OriginalOrderNumber [OORN]
!      GC Orig Type [OCTO] <> OriginalOrderType [OCTO]
!      GC Orig Co [OKCO] <> OriginalOrderCompany [OKCO]
!      GC Original Line No [OGNO] <> OriginalOrderLineNumber [OGNO]
!      UNDEFINED <> RelatedOrderNumber [RORN]
!      UNDEFINED <> RelatedOrderType [RCTO]
!      UNDEFINED <> RelatedOrderCompany [RKCO]
!      UNDEFINED <> RelatedOrderLineNumber [RLLN]
!      GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
!      GC DCTO:Order Type (wf) [DCTO] -> Ordertype [DCTO]
!      GC KCOO:Order Company (wf) [KCOO] -> Companykeyorderno [KCOO]
!      GC Line Number [LNID] -> Linenumber [LNID]
!      GC Quantity Ordered [UORGE1] -> Unitstransactionqty [UORG]
!      GC Tr. UoM [UOM] -> Unitofmeasureasinput [UOM]
!      GC Item Number [UITM] -> Itemnounknownformat [UITM]
!      GC Change Order [SFXO] -> szOrderSuffix [SFXO]
!      GC Orig Sfx [OSFX] -> OriginalOrderSuffix [OSFX]
Call App:P4310 Form:W4310E Version:ZJDE0001
     GC Report Code 1 [PDP1] <> PurchaseReportingCode1 [PDP1]
     GC Objeto de Custo 2 [PDP2] <> PurchaseReportingCode2 [PDP2]
     GC Objeto de Custo 3 [PDP3] <> PurchaseReportingCode3 [PDP3]
     GC Objeto de Custo 4 [PDP4] <> PurchaseReportingCode4 [PDP4]
     GC Cost Rule [PDP5] <> PurchaseReportingCode5 [PDP5]
     GC Extended Weight [ITWT] <> UnitWeight [ITWT]
     GC Wt UoM [WTUM] <> WeightUoM [WTUM]
     GC Extended Volume [ITVL] <> UnitVolume [ITVL]
     GC Vol  UoM [VLUM] <> VolumeUoM [VLUM]
     GC Projeto Rubrica [VR01] <> SupplierSO [VR01]
     GC Centro de Respons. [VR02] <> Reference2 [VR02]
     GC S M [CRMD] <> SendMethod [CRMD]
     GC F C [UNCD] <> WorkOrderFreezeCode [UNCD]
     GC G/L Offset [GLC] <> GLOffset [GLC]
     GC E R [AVCH] <> EvaluatedReceiptsSettlement [AVCH]
     GC Original Order No [OORN] <> OriginalOrderNumber [OORN]
     GC Orig Type [OCTO] <> OriginalOrderType [OCTO]
     GC Orig Co [OKCO] <> OriginalOrderCompany [OKCO]
     GC Original Line No [OGNO] <> OriginalOrderLineNumber [OGNO]
     GC Order Number [DOCO] -> Documentorderinvoicee [DOCO]
     GC DCTO:Order Type (wf) [DCTO] -> Ordertype [DCTO]
     GC KCOO:Order Company (wf) [KCOO] -> Companykeyorderno [KCOO]
     GC Line Number [LNID] -> Linenumber [LNID]
     GC Quantity Ordered [UORGE1] -> Unitstransactionqty [UORG]
     GC Tr. UoM [UOM] -> Unitofmeasureasinput [UOM]
     GC Item Number [UITM] -> Itemnounknownformat [UITM]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     GC Orig Sfx [OSFX] -> OriginalOrderSuffix [OSFX]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Configured Related Order
Event: Button Clicked
Event GUID: 9f8b005c-5b61-40f9-8a2e-b70be0919757
=============================================
// 
// SAR 5133689,  6464957
If VA grd_StockingType_STKT [STKT] is equal to "C"
     Call App:P3201 Form:W3201A Version:Undefined
          UNDEFINED <> mnConfigurationIDNumber [CFGID]
          UNDEFINED <> mnComponentIDNumber [CFGCID]
          "43" -> szProductCode [SY]
          FC Order Company [KCOO] -> szOrder_Company_Order_Numb [KCOO]
          FC Order Number [DOCO] -> mnDocument_Order_No_Invoic [DOCO]
          FC F4301:Order Type [DCTO] -> szOrder_Type_F3201 [DCTO]
          GC Change Order [SFXO] -> szOrder_Suffix_F3201 [SFXO]
          GC Line Number [LNID] -> mnLine_Number_F3201 [LNID]
End If
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC View Configurated Item
Event: Button Clicked
Event GUID: 8132c4ff-89c0-4f69-b32a-0aa854f78751
=============================================
// 
// ---------------------------------------------------------------------------
// SAR 6006016  Call Hidden button instead of directly calling form
// in order to reflect changes in configuration.
// ---------------------------------------------------------------------------
// 
Press Button(FC Config Item)


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Configured Generic Text
Event: Button Clicked
Event GUID: d7a4bd0b-30d6-4dbc-9c4b-6b27558a2c11
=============================================
// Begin SAR 5133689 and 6206544
If VA grd_StockingType_STKT [STKT] is equal to "C"
     If GC Created By Configurator Flag [CFGFL] is equal to "1"
          GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
               "43P" -> szSystemCode [SY]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKey [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GC Change Order [SFXO] -> szOrderSuffix [SFXO]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_ConfigErrorValue [DTAI] <- szErrorMessageID [DTAI]
               VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
               VA frm_ComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
     Else
          GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
               "43" -> szSystemCode [SY]
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKey [KCOO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GC Change Order [SFXO] -> szOrderSuffix [SFXO]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_ConfigErrorValue [DTAI] <- szErrorMessageID [DTAI]
               VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
               VA frm_ComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
               UNDEFINED <> szProgramId [PID]
     End If
     VA frm_BlankStatus [EV01] = <Blank>
     If VA frm_ConfigErrorValue [DTAI] is equal to <Blank>
          Media Object Structures(GT3201, <Default Media Object>, <Display>, <First Text Item>, VA frm_BlankStatus, VA frm_ConfigurationIDNumber, VA frm_ComponentIDNumber)
     End If
End If
// End SAR 5133689


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Regional Information
Event: Button Clicked
Event GUID: c7858258-a240-11d0-a204-0000f6728a56
=============================================
// SAR 5808527 Begin - Replace the above function with the new one
// Begin SAR 8924964 
// Passed JobNumber 
P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
     "P4310" -> szCallingAppl [PID]
     SL VersionName -> szCallingVers [VERS]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
     "W4310A" -> szCallingForm [FID]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     VA frm_szComputerID_CTID [CTID] -> szComputerID [CTID]
     "XIT" -> szFormAction [FATN]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
// End SAR 8924964 
// SAR 5808527 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: HC Solicitar Projeto
Event: Button Clicked
Event GUID: fdf002e0-d0d2-40c9-a9b6-fc1e3e47dd25
=============================================
VA frm_DataContabilLinha [DGJ] = GC G/L Date [DGL]
ValidateAccountNumber(XX0901.ValidateAccountNumber)
     GC Account Number [ANI] -> szAccountNumber [ANI]
     VA frm_AccountId_Linha [AID] <- szAccountID [AID]
     "2" -> cBasedOnFormat [EV01]
     "5" -> cFormatAccountNumberAs [EV02]
F0901.FetchSingle  [Index 3: Account Id]
     VA frm_AccountId_Linha [AID] = TK Account ID [AID]
     VA frm_IndBloqueioOrcamentario [R009] <- TK Category Code - G/L9 [R009]
If VA frm_IndBloqueioOrcamentario [R009] is equal to "S"
     Get Max Grid Rows(FC Grid, VA frm_NroLinhasGrid)
     VA frm_ValorNoAID [AA] = 0
     VA frm_Linha [MATH08] = 1
     While VA frm_Linha [MATH08] is less than VA frm_NroLinhasGrid [MATH08]
          Get Grid Row(FC Grid, VA frm_Linha)
          If GC Account Number [ANI] is not equal to <NULL>
          And GC Account Number [ANI] is not equal to <Blank>
               ValidateAccountNumber(XX0901.ValidateAccountNumber)
                    GC Account Number [ANI] -> szAccountNumber [ANI]
                    VA frm_AccountId [AID] <- szAccountID [AID]
                    "2" -> cBasedOnFormat [EV01]
                    "5" -> cFormatAccountNumberAs [EV02]
               If VA frm_AccountId [AID] is equal to VA frm_AccountId_Linha [AID]
                    VA frm_ValorNoAID [AA] = [VA frm_ValorNoAID [AA]]+[GC Extended Cost [AEXPE1]]
               End If
          End If
          VA frm_Linha [MATH08] = [VA frm_Linha [MATH08]]+1
     End While
     VA frm_ErroOrcamentoCtasDespesa [DTAI] = "PLANO"
     ValidarExecXOrcDespesas(N5514DSP.ValidarExecXOrcDespesas)
          VA frm_ValorTolerancia [AN01] <- mnDocVoucherInvoiceE [DOC]
          VA frm_AccountId_Linha [AID] -> szAccountId [AID]
          VA frm_DataContabilLinha [DGJ] -> jdDateForGLandVoucherJULIA [DGJ]
          VA frm_ValorNoAID [AA] -> ValorGrid [AA]
          VA frm_ValorRzContabilidade [AA] <> ValorRzContabiildade [AA]
          VA frm_ValorCompras [AA] <> ValorCompras [AA]
          VA frm_ValorSlContabilidade [AA] <> ValorSlContabilidade [AA]
          VA frm_ErroOrcamentoCtasDespesa [DTAI] <> Erro [DTAI]
          VA frm_ValorReducaoDespesas [AA] <> ValorReducaoDespesas [AA]
     Call App:P5514025 Form:W5514025A Version:Undefined
          VA frm_DataContabilLinha [DGJ] -> DataContabil [DGJ]
          VA frm_AccountId_Linha [AID] -> Aid [AID]
          VA frm_ValorSlContabilidade [AA] -> ValorOrcado [AN01]
          VA frm_ValorTolerancia [AN01] -> ValorTolerancia [AN01]
          VA frm_ValorCompras [AA] -> ValorCompras [AN01]
          VA frm_ValorRzContabilidade [AA] -> ValorContabilidade [AN01]
          VA frm_ValorNoAID [AA] -> ValorLancado [AN01]
          VA frm_ValorReducaoDespesas [AA] -> ValorReducaoDespesas [AN01]
Else
     Call App:P4310 Form:W4310K Version: 
End If
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Order Number
Event: Control is Exited
Event GUID: 5ef15c55-e064-11d1-9ac9-00600832fe19
=============================================
If VA frm_TempDOCO [DOCO] is not equal to FC Order Number [DOCO]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempDOCO [DOCO] = FC Order Number [DOCO]
End If

=============================================
Form: Order Detail - W4310A
Object: FC Order Number
Event: Control Exited/Changed-Inline
Event GUID: a0064c17-ddaa-11d3-a209-00105a1c0012
=============================================
VA frm_ManualOrderEntry [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC F4301:Order Type
Event: Control is Exited
Event GUID: 5ef15c54-e064-11d1-9ac9-00600832fe19
=============================================
If VA frm_TempDCTO [DCTO] is not equal to FC F4301:Order Type [DCTO]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempDCTO [DCTO] = FC F4301:Order Type [DCTO]
End If

=============================================
Form: Order Detail - W4310A
Object: FC F4301:Order Type
Event: Control Exited/Changed-Inline
Event GUID: 667dbd53-2da2-11d3-a27b-00105a1c04c1
=============================================
// 
If FC F4301:Order Type [DCTO] is not equal to <Blank>
And FC F4301:Order Type [DCTO] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          UNDEFINED <> szDataDictionaryItem [DTAI]
          "00" -> szSystemCode [SY]
          "DT" -> szRecordTypeCode [RT]
          FC F4301:Order Type [DCTO] -> szUserDefinedCode [KY]
          "2.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC F4301:Order Type, "2362")
     End If
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Branch/Plant1
Event: Control is Entered
Event GUID: a0064c18-ddaa-11d3-a209-00105a1c0012
=============================================
// SAR 3252748 & 3775645
VA frm_OriginalBP [MCU] = FC Branch/Plant1 [MCU]

=============================================
Form: Order Detail - W4310A
Object: FC Branch/Plant1
Event: Control is Exited
Event GUID: 35cc0fa7-be1d-4b15-b461-3839753f8770
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnShipTo_AN8 [AN8]
----------------------------------------
// ISSUE 288865 - Marília - Mostrar o erro no campo F/F
// ============================================================
// ISSUE 27620 - Camila - Consistência Fabesul, Filial Fábrica O6
// ===========================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
     // ------ ISSUE 251190 - Marília - Recarga Cartuchos 1001 (O6)
     ! If PO TpCatalogo [EV01] is equal to "R"
          // Recarga Cartucho - não consiste com F/F
     ! Else
          // Fabesul
          // ------
          // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
          // 944303 - Problema geração O6 BR SUPPLY - Dionatan Irigaray - 18/05/12
          // .........................................
          // a Validação abaixo é apenas para algumas Cias de SC ao fazer soclicitação par
          // Fabesul (UDC 55/FS)
          // .........................................
          //
          VA frm_RT_FS [RT] = "FS"
          VA frm_UDC_SY_55 [SY] = "55"
          F0005.FetchSingle  [Index 1: System, Type, Code]
               VA frm_SY_55 [SY] = TK Product Code [SY]
               VA frm_RT_FS [RT] = TK User Defined Codes [RT]
               FC Long Address Number_ALKY [ALKY] = TK User Defined Code [KY]
          If SV File_IO_Status is equal to CO SUCCESS
               // Fim - 944303 - Problema geração O6 BR SUPPLY - Dionatan Irigaray - 18/05/12
               // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
               If FC Branch/Plant1 [MCU] is not equal to <Blank>
               And FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
                    VA frm_AUX_FiliaFabrica_MCU [MCU] = ltrim([FC Branch/Plant1 [MCU]], <Blank>)
                    VA frm_CodSY_55 [SY] = "55"
                    VA frm_CodRT_FO [RT] = "FO"
                    F0116.Select  [Index 1: Address #, Date Eff]
                         FC Address Number [AN8] = TK Address Number [AN8]
                    F0116.FetchNext  [Index 1: Address #, Date Eff]
                         VA frm_UF_ADDS [ADDS] <- TK State [ADDS]
                    F0005.FetchSingle  [Index 1: System, Type, Code]
                         VA frm_CodSY_55 [SY] = TK Product Code [SY]
                         VA frm_CodRT_FO [RT] = TK User Defined Codes [RT]
                         VA frm_AUX_FiliaFabrica_MCU [MCU] = TK User Defined Code [KY]
                    If SV File_IO_Status is equal to CO SUCCESS
                         If VA frm_UF_ADDS [ADDS] is equal to "SC"
                              Clear Control Error(FC Branch/Plant1 [MCU])
                         Else
                              Set Control Error(FC Branch/Plant1, "5543E016")
                              Stop Processing
                         End If
                    Else
                         If VA frm_UF_ADDS [ADDS] is equal to "RS"
                              Clear Control Error(FC Branch/Plant1 [MCU])
                         Else
                              Set Control Error(FC Branch/Plant1, "5543E016")
                              Stop Processing
                         End If
                    End If
               End If
          End If
     ! End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If PO cValidaRExFFxCta [EV01] is equal to "S"
          Clear Control Error(FC Long Ship To_ALKY [ALKY])
          V0006A.FetchSingle
               FC Branch/Plant1 [MCU] = TK Business Unit [MCU][F0006.0]
               VA evt_mnShipTo_AN8 [AN8] <- TK Address Number [AN8][F0006.0]
          FC Long Ship To_ALKY [ALKY] = [VA evt_mnShipTo_AN8 [AN8]]
          FC Ship To [SHAN] = [VA evt_mnShipTo_AN8 [AN8]]
          F0101.FetchSingle  [Index 1: Address #]
               VA evt_mnShipTo_AN8 [AN8] = TK Address Number [AN8]
               FC SHIP TO [DL01] <- TK Name - Alpha [ALPH]
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: FC Branch/Plant1
Event: Control Exited/Changed-Inline
Event GUID: 5ef15c4c-e064-11d1-9ac9-00600832fe19
=============================================
// ---------------------------------------------------------------------------
// Code Change for copy functionality when processing option HeaderToDetail
is
// set to 1 and user is in copy mode
// ---------------------------------------------------------------------------
//
If PO szHeaderChangesToDetail [VL03] is equal to "1"
And SV Form_ Mode is equal to CO COPY_MODE
     If FC Branch/Plant1 [MCU] is not equal to <Blank>
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          VA frm_mnCurrentGridRow [MATH01] = "1"
          While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               GC Branch/ Plant [MCU] = FC Branch/Plant1 [MCU]
               VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
          End While
     End If
End If
//
// ---------------------------------------------------------------------------
// This code was moved from async processing.  Default MCU processing was
// changed.  The branch is no longer reset the default B/P after an add.  Bug
// fix: the base currency is reset when the company changes.  MA 7/21/97
// ---------------------------------------------------------------------------
//
If FC Branch/Plant1 [MCU] is equal to <Blank>
     Set Edit Control Error(FC Branch/Plant1, "0003")
Else
     RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
          FC Branch/Plant1 [MCU] -> szCostCenter [MCU0]
          FC Order Company [KCOO] <- szCompany [CO]
          UNDEFINED <> szCostCenterDescription [DL01]
     //
     // Recuperar a Cia do projeto para poder criticar a conta informada
     //
     F0006.FetchSingle  [Index 1: Cost Center]
          FC Branch/Plant1 [MCU] = TK Business Unit [MCU]
          VA frm_CostCenterSubsequent [MCUS] <- TK Business Unit - Subsequent [MCUS]
     If SV File_IO_Status is equal to CO ERROR
          VA frm_CostCenterSubsequent [MCUS] = "            "
     End If
     If FC Order Company [KCOO] is not equal to <Blank>
     And SL CurrencyProcessing is not equal to "N"
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               FC Order Company [KCOO] -> szCompany [CO]
               FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
               UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
               UNDEFINED <> cPostByCurrency [ABIN]
          SetForeignFlag(B4302980.SetForeignFlag)
               FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
               FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
               FC Foreign [CRRM] <> cCurrencyMode [CRRM]
               SL CurrencyProcessing -> cCurrencyProcessing [EV01]
          //
     End If
     //
     // Reset defaults
     //
     VA frm_BranchAtEntry [MCU] = FC Branch/Plant1 [MCU]
     VA frm_CompanyAtEntry [CO] = FC Order Company [KCOO]
     VA frm_CompanyCurrAtEntry [CRCD] = FC To Currency Code [CRDC]
     //
     If VA frm_TempMCU [MCU] is not equal to FC Branch/Plant1 [MCU]
          //
          If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
               Press Button(FC BeginDoc)
          End If
          VA frm_TempMCU [MCU] = FC Branch/Plant1 [MCU]
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Change Order
Event: Control Exited/Changed-Inline
Event GUID: baa5f090-2e5d-11d3-af99-00105a1bff2e
=============================================
If FC Change Order [SFXO] is not equal to <Blank>
     FC Change Order [SFXO] = lpad([FC Change Order [SFXO]], "0", "3")
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Long Address Number_ALKY
Event: Control is Entered
Event GUID: 635f0064-5fc7-11d3-a2a5-00105a1c04c1
=============================================
//
VA frm_szSaveLongAddressNo_ALKY [ALKY] = FC Long Address Number_ALKY [ALKY]

=============================================
Form: Order Detail - W4310A
Object: FC Long Address Number_ALKY
Event: Control Exited/Changed-Asynch
Event GUID: b9511c84-8b63-4a66-b30c-964bfefeeafb
=============================================
// SAR  8972483 - Begins
// Copy New Send Method to GC SM when the  Supplier is changed while copying a
// purchase order.New Send Method is fetched by Display Purchasing
// Instructions function in Control Exited/Changed - Inline Event
If SV Form_ Mode is equal to CO COPY_MODE
     If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
     And FC Long Address Number_ALKY [ALKY] is not equal to "*"
     And FC Long Address Number_ALKY [ALKY] is not equal to "0"
     And FC Long Address Number_ALKY [ALKY] is not equal to <NULL>
          // Copy Send method to purchase Order Header
          BC Send Method (F4301.0) [CRMD] = VA frm_cSendMethod_CRMD [CRMD]
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          VA frm_mnCurrentGridRow [MATH01] = "1"
          // Copy Send method to GC SM for all Detail Lines
          While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               // Begin SAR 11880301
               GC Pymt Terms [PTC] = BC Payment Terms Code (F4301.0) [PTC]
               // End SAR 11880301
               GC S M [CRMD] = VA frm_cSendMethod_CRMD [CRMD]
               VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
          End While
     End If
End If
// SAR  8972483  - Ends

=============================================
Form: Order Detail - W4310A
Object: FC Long Address Number_ALKY
Event: Control is Exited
Event GUID: 93736288-b471-11d2-a1b8-00104bc6f551
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_DTAI_SupplierError2Message [DTAI]
----------------------------------------
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
//
// SAR 7048496 Begin - If statement commented out - already exists on Control
// is Exited Changed Inline Event
//
! If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
! And FC Long Address Number_ALKY [ALKY] is not equal to "*"
! And FC Long Address Number_ALKY [ALKY] is not equal to "0"
! And FC Long Address Number_ALKY [ALKY] is not equal to <NULL>
     ! AddandEditSupplier(N4303040.AddandEditSupplier)
     !      SV Form_ Mode -> idFormMode [GENLNG]
     !      FC Long Address Number_ALKY [ALKY] <> szLongAddressNumber [ALKY]
     !      FC ADDRESS NUMBER [DL01] <> szAddressNumberDescription [DL01]
     !      FC Address Number [AN8] <> mnAddressNumber [AN8]
     !      PO szNewSupplierAdd [VL12] -> szNewSupplierAdd [VL12]
     !      VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [TSTA]
! Else
     ! Set Control Error(FC Long Address Number_ALKY, "0037")
     ! Stop Processing
! End If
//
// ===============================================================
//
If SV Form_ Mode is equal to CO COPY_MODE
And VA frm_RecordInHeaderWkFile [EV01] is not equal to "1"
And FC Address Number [AN8] is not equal to "0"
And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
     //
     VA frm_TempAN8 [AN8] = FC Address Number [AN8]
End If
//
// SAR 7322205
If FC Order Date [TRDJ] is equal to Null Date
     FC Order Date [TRDJ] = date_today()
End If

=============================================
Form: Order Detail - W4310A
Object: FC Long Address Number_ALKY
Event: Control Exited/Changed-Inline
Event GUID: c00b8eca-b170-11d2-a1b6-00104bc6f551
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSupplierError_DTAI [DTAI]
----------------------------------------
// =====
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// Se for Cartões de Visitas - Recebe os Valores e Trava os Campos
If PO CartoesVisita [EV01] is equal to "S"
     FC Long Address Number_ALKY [ALKY] = [PO mnFornecedorCartaoVisita_AN8 [AN8]]
End If
// # FIM Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// =====
//
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
//
If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
And FC Long Address Number_ALKY [ALKY] is not equal to "*"
And FC Long Address Number_ALKY [ALKY] is not equal to "0"
And FC Long Address Number_ALKY [ALKY] is not equal to <NULL>
     // SAR #7503014 Begin - Remove N4303040 from event
     ! AddandEditSupplier(N4303040.AddandEditSupplier)
     !      SV Form_ Mode -> idFormMode [GENLNG]
     !      FC Long Address Number_ALKY [ALKY] <> szLongAddressNumber [ALKY]
     !      FC ADDRESS NUMBER [DL01] <> szAddressNumberDescription [DL01]
     !      FC Address Number [AN8] <> mnAddressNumber [AN8]
     !      PO szNewSupplierAdd [VL12] -> szNewSupplierAdd [VL12]
     !      VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [TSTA]
     !      FC CREDIT MESSAGE [DL01] <> szCreditDescription [DL01]
     !      VA frm_cTriggerSupplierAdd [EV01] <- cTriggerSupplierAdd [EV01]
     ! //
     ! // SAR 7048496 Begin
     ! If VA frm_cTriggerSupplierAdd [EV01] is equal to "Y"
          ! Call App:P01012 Form:W01012B Version:ZJDE0001
          !      "V" -> szAddressType1 [AT1]
     ! End If
     ! ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
     !      FC Long Address Number_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Address Number [AN8] <- mnAddressNumber [AN8]
     !      "5" -> cInputSelection [EV01]
     ! // SAR 7048496 End
     CheckStringIsNumeric(B7600580.CheckStringIsNumeric)
          FC Long Address Number_ALKY [ALKY] -> szString [VR01]
          VA frm_StringIsNumeric [SVAL] <- cStringIsNumericYN [EV01]
     ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
          FC Long Address Number_ALKY [ALKY] -> szGenericString [DSC1]
          VA frm_AN8_LongAddressNumeric [AN8] <- mnNumericValue [ITM]
     FC Address Number [AN8] = VA frm_AN8_LongAddressNumeric [AN8]
     VA evt_szSupplierError_DTAI [DTAI] = <Blank>
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          RetrieveCreditMessage(B4303050.RetrieveCreditMessage)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               SV Form_ Mode -> idFormMode [GENLNG]
               FC ADDRESS NUMBER [DL01] <> szAddressDescription [DL01]
               FC CREDIT MESSAGE [DL01] <> szCreditDescription [DL01]
               VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [TSTA]
               VA evt_szSupplierError_DTAI [DTAI] <- szSupplierErrorMessage [DTAI]
     Else
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               FC ADDRESS NUMBER [DL01] <- szAlphaName [ALPH]
               VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [CM]
               VA evt_szSupplierError_DTAI [DTAI] <- szErrorMessage [DTAI]
               "1" -> cSuppressError [ERR]
     End If
     If VA frm_StringIsNumeric [SVAL] is equal to "Y"
          If PO szNewSupplierAdd [VL12] is equal to "1"
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to <Blank>
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to <NULL>
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to "0"
               Call App:P01012 Form:W01012B Version:ZJDE0001
                    "V" -> szAddressType1 [AT1]
          End If
     End If
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
     // SAR #7503014 End- Remove N4303040 from event
     //
Else
     Set Control Error(FC Long Address Number_ALKY, "0037")
     Stop Processing
End If
// ===============================================================
If VA frm_TSTA_Credit_Msg [TSTA] is not equal to <Blank>
     Show Control(FC CREDIT MESSAGE [DL01])
Else
     Hide Control(FC CREDIT MESSAGE [DL01])
End If
//
// SAR  6604569 Begin
If VA evt_szSupplierError_DTAI [DTAI] is equal to <Blank>
Or VA evt_szSupplierError_DTAI [DTAI] is equal to <NULL>
     // SAR 7681751 - Only pass back the advance schedule
     // SAR 8906579
     // Begin SAR # 8937607 - Added PTC Value
     DisplayPurchasingInstructions(B4302980.DisplayPurchasingInstructions)
          SV Form_ Mode -> idFormMode [GENLNG]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA frm_cItemRestrictions_EDF2 [EDF2] <> cItemRestrictions [EDF2]
          VA frm_szSaveHoldOrdersCode_HOLD [HOLD] <> szHoldOrdersCode [HOLD]
          VA frm_MAXO [MAXO] <> mnMaximumOrderValue [MAXO]
          VA frm_MINO [MINO] <> mnMinimumOrderValue [MINO]
          VA frm_szOrderTemplate_ORTP [ORTP] <> szOrderTemplate [ORTP]
          VA frm_szSaveCurrencyCdeFrom_CRCD [CRCD] <- szCurrencyCode [CRCD]
          VA frm_cSendMethod_CRMD [CRMD] <> cSendMethod [CRCM]
          VA frm_c_ERSFlag [EV01] <> cEvalReceiptNewSupp [AVCH]
          VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
          VA frm_szSaveLongAddressNo_ALKY [ALKY] <> szSaveLongAddressNo [ALKY]
          SL CurrencyProcessing -> cCurrencyProcessing [EV01]
          FC Foreign [CRRM] <> cCurrencyMode [CRRM]
          FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
          FC Long Address Number_ALKY [ALKY] -> szLongAddressNo [ALKY]
          BC Payment Terms Code (F4301.0) [PTC] <- szPaymentTerms [PTC]
     // End SAR # 8937607
     //
     // ===========================================================================
     // Chamado 3081234
     // 01/03/2019 - Gindri
     // Ñ Permitir Pedidos para Clientes
     If PO cPermitirSoFornecedor [EV01] is not equal to("S")
          F0101.FetchSingle  [Index 1: Address #]
               FC Address Number [AN8] = TK Address Number [AN8]
               VA frm_TpCadastroAT1 [AT1] <- TK Search Type [AT1]
          // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
          // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               If VA frm_TpCadastroAT1 [AT1] is not equal to("G","V")
                    Set Control Error(FC Long Address Number_ALKY, "5050")
                    Stop Processing
               End If
          Else
               If VA frm_TpCadastroAT1 [AT1] is equal to "C"
                    Set Control Error(FC Long Address Number_ALKY, "5050")
                    Stop Processing
               End If
          End If
     End If
     // Chamado 3081234 - Fim
     // ===========================================================================
     //
     // Marilia - 22/10/01 - ISSUE 3424 - se suspenso p/compras (3,4)
     // Marilia - 16/02/05  - ISSUE 7831  - se bloqueado para pgto. (1,Y)
     // Marília - 11/01/06 - ISSUE 8667 - incluído teste se não existe F0401
     // ==================================================================
     F0401.FetchSingle  [Index 1: Address #]
          FC Address Number [AN8] = TK Address Number [AN8]
          VA frm_HoldPayment_HDPY [HDPY] <- TK Hold Payment Code [HDPY]
     If SV File_IO_Status is equal to CO SUCCESS
          If VA frm_HoldPayment_HDPY [HDPY] is equal to ("1","3","4","Y")
               Set Control Error(FC Long Address Number_ALKY, "5543E012")
               Stop Processing
          End If
     Else
          Set Control Error(FC Long Address Number_ALKY, "5543E013")
          Stop Processing
     End If
     // ===========================================================
     // Fornecedor deve ter Catálogo de Preços cadastrado
     // ===========================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
          F41061.FetchSingle  [Index 1: Bus. Unit, Addr Num, +A]
               FC Address Number [AN8] = TK Address Number [AN8]
          If SV File_IO_Status is equal to CO ERROR
               Set Control Error(FC Long Address Number_ALKY, "4607")
               Stop Processing
          End If
     End If
     // ISSUE 288865 - Marília - (troca de lugar e mostrar o erro no campo F/F)
     // ============================================================
     // INICIO - ISSUE 27620 - Camila - Consistência Fabesul, Filial Fábrica O6
     // ------ ISSUE 251190 - Marília - Recarga Cartuchos 1001 (O6)
     // ===========================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
          VA frm_SY_55 [SY] = "55"
          VA frm_RT_F6 [RT] = "F6"
          VA frm_KY_CodFornec [KY] = concat("%", concat([FC Address Number [AN8]], "%"))
          ! If PO TpCatalogo [EV01] is equal to "R"
               ! // Recarga Cartucho
               ! If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
                    ! F0005.FetchSingle  [Index 1: System, Type, Code]
                    !      VA frm_SY_55 [SY] = TK Product Code [SY]
                    !      VA frm_RT_F6 [RT] = TK User Defined Codes [RT]
                    !      VA frm_KY_CodFornec [KY] Is Like TK User Defined Code [KY]
                    ! If SV File_IO_Status is not equal to CO SUCCESS
                         ! Set Control Error(FC Long Address Number_ALKY, "5543E18")
                         ! Stop Processing
                    ! End If
               ! End If
          ! Else
               // Fabesul
               If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
                    F0005.FetchSingle  [Index 1: System, Type, Code]
                         VA frm_SY_55 [SY] = TK Product Code [SY]
                         VA frm_RT_F6 [RT] = TK User Defined Codes [RT]
                         VA frm_KY_CodFornec [KY] Is Like TK User Defined Code [KY]
                    If SV File_IO_Status is equal to CO SUCCESS
                         Set Control Error(FC Long Address Number_ALKY, "5543E18")
                         Stop Processing
                    End If
               End If
               // ------
               // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
               // 944303 - Problema geração O6 BR SUPPLY - Dionatan Irigaray - 18/05/12
               // .........................................
               // a Validação abaixo é apenas para algumas Cias de SC ao fazer soclicitação par
               // Fabesul (UDC 55/FS)
               // .........................................
               //
               VA frm_RT_FS [RT] = "FS"
               VA frm_UDC_SY_55 [SY] = "55"
               F0005.FetchSingle  [Index 1: System, Type, Code]
                    VA frm_SY_55 [SY] = TK Product Code [SY]
                    VA frm_RT_FS [RT] = TK User Defined Codes [RT]
                    FC Long Address Number_ALKY [ALKY] = TK User Defined Code [KY]
               If SV File_IO_Status is equal to CO SUCCESS
                    // Fim - 944303 - Problema geração O6 BR SUPPLY - Dionatan Irigaray - 18/05/12
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                    //
                    If FC Branch/Plant1 [MCU] is not equal to <Blank>
                    And FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
                         VA frm_AUX_FiliaFabrica_MCU [MCU] = ltrim([FC Branch/Plant1 [MCU]], <Blank>)
                         VA frm_CodSY_55 [SY] = "55"
                         VA frm_CodRT_FO [RT] = "FO"
                         F0116.Select  [Index 1: Address #, Date Eff]
                              FC Address Number [AN8] = TK Address Number [AN8]
                         F0116.FetchNext  [Index 1: Address #, Date Eff]
                              VA frm_UF_ADDS [ADDS] <- TK State [ADDS]
                         F0005.FetchSingle  [Index 1: System, Type, Code]
                              VA frm_CodSY_55 [SY] = TK Product Code [SY]
                              VA frm_CodRT_FO [RT] = TK User Defined Codes [RT]
                              VA frm_AUX_FiliaFabrica_MCU [MCU] = TK User Defined Code [KY]
                         If SV File_IO_Status is equal to CO SUCCESS
                              If VA frm_UF_ADDS [ADDS] is equal to "SC"
                                   Clear Control Error(FC Branch/Plant1 [MCU])
                              Else
                                   Set Control Error(FC Branch/Plant1, "5543E016")
                                   Stop Processing
                              End If
                         Else
                              If VA frm_UF_ADDS [ADDS] is equal to "RS"
                                   Clear Control Error(FC Branch/Plant1 [MCU])
                              Else
                                   Set Control Error(FC Branch/Plant1, "5543E016")
                                   Stop Processing
                              End If
                         End If
                    End If
               End If
          ! End If
     End If
     // ============================================================
     // FIM - ISSUE 27620 - Camila - Consistência Fabesul, Filial Fábrica O6
     // ===========================================================
End If
//
// SAR# 8124024 - Added condition to show the correct currency code when doing
// copy
If SV Form_ Mode is equal to CO ADD_MODE
     FC Currency Code [CRCD] = [VA frm_szSaveCurrencyCdeFrom_CRCD [CRCD]]
End If
// SAR 6604569 End
//
// ---------------------------------------------------------------------------
// Call BeginDoc() if field is modified and BeginDoc() has already run
// ---------------------------------------------------------------------------
//
If VA frm_TempAN8 [AN8] is not equal to FC Address Number [AN8]
     //
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
     And FC Address Number [AN8] is not equal to "0"
          Press Button(FC BeginDoc)
          //
     End If
End If
// ISSUE 288865 - Marília - INIBIDO (troca de lugar)
// =====
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões
// Visitas
// Se for Cartões de Visitas - Recebe os Valores e Trava os Campos
If PO CartoesVisita [EV01] is equal to "S"
     Disable Control(FC Long Address Number_ALKY [ALKY])
End If
// # FIM Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// =====


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Long Ship To_ALKY
Event: Control Exited/Changed-Asynch
Event GUID: 3b550861-2d64-11d3-9756-0000393c050e
=============================================
//
// ---------------------------------------------------------------------------
// Code Change for copy functionality when processing option headerToDetail is
// Set to 1 and User is in Copy Mode
// ---------------------------------------------------------------------------
// SAR 8927324 - Begins
VA frm_TaxArea_TXA1 [TXA1] = <NULL>
VA frm_TaxExplanationCode_EXR1 [EXR1] = <NULL>
// SAR 8927324 - Ends
//
If PO szHeaderChangesToDetail [VL03] is equal to "1"
And SV Form_ Mode is equal to CO COPY_MODE
     If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
          // SAR 8927324 - Begins
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               FC Ship To [SHAN] -> mnAddressNumber [AN8]
               VA frm_TaxArea_TXA1 [TXA1] <- szTaxRateArea [TXA2]
               VA frm_TaxExplanationCode_EXR1 [EXR1] <- szTaxExplCode [EXR2]
          // SAR 8927324 - Ends
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          VA frm_mnCurrentGridRow [MATH01] = "1"
          While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               GC Ship To Number [SHAN] = FC Ship To [SHAN]
               // SAR 8927324 - Begins
               GC Tax Rate/Area [TXA1] = VA frm_TaxArea_TXA1 [TXA1]
               GC Expl Code [EXR1] = VA frm_TaxExplanationCode_EXR1 [EXR1]
               // SAR 8927324 - Ends
               VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
          End While
     End If
End If
VA frm_Old_ShipTo [SHAN] = FC Ship To [SHAN]
If PO szHeaderChangesToDetail [VL03] is equal to "1"
And SV Form_ Mode is equal to CO COPY_MODE
     If FC Long Ship To_ALKY [ALKY] is equal to or empty <Blank>
     Or FC Long Ship To_ALKY [ALKY] is equal to "0"
          // SAR 8927324 - Begins
          If VA frm_BranchAtEntry [MCU] is equal to VA frm_OriginalBP [MCU]
               FC Long Ship To_ALKY [ALKY] = VA frm_Old_LongShipTo [ALKY]
               // SAR 8927324 - Ends
               FC Ship To [SHAN] = VA frm_Old_ShipToCopy [SHAN]
               // SAR 8927324 - Begins
               GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
                    FC Ship To [SHAN] -> mnAddressNumber [AN8]
                    VA frm_TaxArea_TXA1 [TXA1] <- szTaxRateArea [TXA2]
                    VA frm_TaxExplanationCode_EXR1 [EXR1] <- szTaxExplCode [EXR2]
               // SAR 8927324 - Ends
               Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
               VA frm_mnCurrentGridRow [MATH01] = "1"
               While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
                    Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
                    GC Ship To Number [SHAN] = FC Ship To [SHAN]
                    // SAR 8927324 - Begins
                    GC Tax Rate/Area [TXA1] = VA frm_TaxArea_TXA1 [TXA1]
                    GC Expl Code [EXR1] = VA frm_TaxExplanationCode_EXR1 [EXR1]
                    // SAR 8927324 - Ends
                    VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
               End While
               // SAR 8927324 - Begins
          End If
          // SAR 8927324 - Ends
          //
          // SAR 8927324 - Begins , SAR 6436075  Code moved above
          //
          ! // SAR 6436075 Begins
          ! // ---------------------------------------------------------------------------
          ! // If you are on Copy Mode, and user has blanked out Ship To and has changed
          ! // the Branch Plant, Do no default back the old Branch Plant as BeginDoc will
          ! // retrieve the new Branch Plant
          ! // ---------------------------------------------------------------------------
          ! //
          ! If VA frm_BranchAtEntry [MCU] is equal to VA frm_OriginalBP [MCU]
               ! FC Long Ship To_ALKY [ALKY] = VA frm_Old_LongShipTo [ALKY]
          ! End If
          ! // SAR 6436075 Ends
          // SAR 8927324 - Ends
          //
     End If
End If

=============================================
Form: Order Detail - W4310A
Object: FC Long Ship To_ALKY
Event: Control is Exited
Event GUID: 93736287-b471-11d2-a1b8-00104bc6f551
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnMCU_AN8 [AN8]
evt_mnALKY_AN8 [AN8]
----------------------------------------
//
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
//
// ---------------------------------------------------------------------------
// Changed condition to check for blank AND '*' instead of  blank OR '*'
// ---------------------------------------------------------------------------
//
If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
And FC Long Ship To_ALKY [ALKY] is not equal to "*"
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Ship To_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC SHIP TO [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO cValidaRExFFxCta [EV01] is equal to "S"
     Clear Control Error(FC Long Ship To_ALKY [ALKY])
     F0006.FetchSingle  [Index 1: Cost Center]
          FC Branch/Plant1 [MCU] = TK Business Unit [MCU]
          VA evt_mnMCU_AN8 [AN8] <- TK Address Number [AN8]
     VA evt_mnALKY_AN8 [AN8] = [FC Long Ship To_ALKY [ALKY]]
     If VA evt_mnMCU_AN8 [AN8] is not equal to VA evt_mnALKY_AN8 [AN8]
          Set Control Error(FC Long Ship To_ALKY, "E55XML05")
     Else
          F0101.FetchSingle  [Index 1: Address #]
               VA evt_mnALKY_AN8 [AN8] = TK Address Number [AN8]
               FC SHIP TO [DL01] <- TK Name - Alpha [ALPH]
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
If VA frm_TempSHAN [SHAN] is not equal to FC Ship To [SHAN]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          Press Button(FC BeginDoc)
          //
     End If
     VA frm_TempSHAN [SHAN] = FC Ship To [SHAN]
End If

=============================================
Form: Order Detail - W4310A
Object: FC Long Ship To_ALKY
Event: Control Exited/Changed-Inline
Event GUID: c00b8ecb-b170-11d2-a1b6-00104bc6f551
=============================================
//
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
//
// Changed condition to check for blank AND '*' instead of  blank OR '*'
If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
And FC Long Ship To_ALKY [ALKY] is not equal to "*"
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Ship To_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To [SHAN] <- mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          UNDEFINED <> szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Order Date
Event: Control is Exited
Event GUID: 5ef15c50-e064-11d1-9ac9-00600832fe19
=============================================
//
If FC Order Date [TRDJ] is equal to Null Date
     FC Order Date [TRDJ] = date_today()
End If
//
If VA frm_TempTRDJ [TRDJ] is not equal to FC Order Date [TRDJ]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempTRDJ [TRDJ] = FC Order Date [TRDJ]
End If
// SAR 8956903 - Apparel Management
If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Order Date [TRDJ]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC HOLD Code
Event: Control is Exited
Event GUID: 5ef15c4f-e064-11d1-9ac9-00600832fe19
=============================================
If VA frm_TempHOLD [HOLD] is not equal to FC HOLD Code [HOLD]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempHOLD [HOLD] = FC HOLD Code [HOLD]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Currency Code
Event: Control Exited/Changed-Inline
Event GUID: 5ef15c56-e064-11d1-9ac9-00600832fe19
=============================================
// 
// 
SetForeignFlag(B4302980.SetForeignFlag)
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
     FC Foreign [CRRM] <> cCurrencyMode [CRRM]
     SL CurrencyProcessing -> cCurrencyProcessing [EV01]
// 
// 
If VA frm_TempCRCD [CRCD] is not equal to FC Currency Code [CRCD]
     // 
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempCRCD [CRCD] = FC Currency Code [CRCD]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC ExchangeRate_CRR
Event: Control is Exited
Event GUID: 5ef15c57-e064-11d1-9ac9-00600832fe19
=============================================
If VA frm_TempCRR [CRR] is not equal to FC ExchangeRate_CRR [CRR]
     // SAR 3046750 
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempCRR [CRR] = FC ExchangeRate_CRR [CRR]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Foreign
Event: Selection Changed
Event GUID: 5ef15c53-e064-11d1-9ac9-00600832fe19
=============================================
If VA frm_TempCRRM [CRRM] is not equal to FC Foreign [CRRM]
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
          Press Button(FC BeginDoc)
     End If
     VA frm_TempCRRM [CRRM] = FC Foreign [CRRM]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC LocalEntrega
Event: Control is Exited
Event GUID: 7b6906bb-74dd-469b-985b-174c9d4000c6
=============================================
// =======================================================
// Obrigatório o preenchimento do Local de Entrega
// =======================================================
If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
     If FC LocalEntrega [ADD1] is less than or equal to <Blank>
          Set Control Error(FC LocalEntrega, "0003")
     Else
          Clear Control Error(FC LocalEntrega [ADD1])
     End If
End If
// =======================================================


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Freight Handling Code
Event: Control is Exited
Event GUID: 89b2a810-3f73-4561-a759-04402bd6d99a
=============================================
// =======================================================
Obrigatório o
// preenchimento do Frete 

// ======================================================
If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
     If FC Freight Handling Code [FRTH] is less than or equal to "0"
          Set Control Error(FC Freight Handling Code, "0003")
     Else
          // ------------------------------------------------------------------
          // ISSUE 6536 - Marília - 09/10/03
          //  Acusar erro quando Frete preenchido não existe na UDC
          VA frm_RBSSistUDC_SY [SY] = "42"
          VA frm_RBSCodUDC_RT [RT] = "FR"
          VA frm_RBSKeyUDC_KY [KY] = concat("%", concat([FC Freight Handling Code [FRTH]], "%"))
          F0005.FetchSingle  [Index 1: System, Type, Code]
               VA frm_RBSSistUDC_SY [SY] = TK Product Code [SY]
               VA frm_RBSCodUDC_RT [RT] = TK User Defined Codes [RT]
               VA frm_RBSKeyUDC_KY [KY] Is Like TK User Defined Code [KY]
          If SV File_IO_Status is equal to CO SUCCESS
               Clear Control Error(FC Freight Handling Code [FRTH])
          End If
     End If
End If
// =======================================================


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Add Last Entry Row to Grid
Event GUID: 78fa6392-678e-11d2-aedc-0000f6383a84
=============================================
If VA frm_MATH01_GridRowCounter [MATH01] is greater than "0"
     Disable Control(FC Currency Code [CRCD])
     Disable Control(FC ExchangeRate_CRR [CRR])
     Disable Control(FC To Currency Code [CRDC])
     Disable Control(FC Foreign [CRRM])
End If
//
// ---------------------------------------------------------------------------
// If the form has been called from the COPY CHANGE ORDER Row Exit, a '3' will b
// passed in to cAddChangeOrder flag.  In this event, blank out the suffix info.
// ---------------------------------------------------------------------------
//
If FI cAddChangeOrder [EV03] is equal to "3"
     FC Change Order [SFXO] = <Blank>
     Enable Control(FC Change Order [SFXO])
End If
//
//
If FC Address Number [AN8] is not equal to "0"
And PO szOrderTemplates [VL15] is equal to "1"
And VA frm_TemplatesExecuted [EV01] is equal to "0"
And SV Form_ Mode is equal to CO ADD_MODE
And VA frm_OKButtonClicked_EV01 [EV01] is equal to "0"
     //
     // SAR 4872421  Begins
     If PO szProtectPriceFlag [VL09] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC UnitCost)
          Disable Grid(FC Grid, <All Rows>, GC ExtendedCost)
     End If
     // SAR 4872421  Ends
     //
     // SAR 4933289 Begin
     If PO szProtectStatusCode [VL10] is equal to "1"
          Disable Grid(FC Grid,  <All Rows>, GC NextStatus)
          Disable Grid(FC Grid, <All Rows>, GC LastStatus)
     End If
     // SAR 4933289 Ends
     //
     // ---------------------------------------------------------------------------
     // SAR 5046964 This flag is set on OK Button Post clicked
     // ---------------------------------------------------------------------------
     //
     If VA frm_DoNotCallTemplate [EV01] is not equal to "1"
          If VA frm_szOrderTemplate_ORTP [ORTP] is not equal to <Blank>
          And VA frm_szOrderTemplate_ORTP [ORTP] is not equal to <NULL>
               Call App:P40215 Form:W40215A Version:ZJDE0001
                    VA frm_szOrderTemplate_ORTP [ORTP] -> OrderTemplate [ORTP]
                    FC Address Number [AN8] -> AddressNumber [AN8]
                    "3" -> ProcessingMode [EV01]
                    FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                    UNDEFINED <> OpenOrdersVersion [VERS]
                    UNDEFINED <> OrderType [DCTO]
                    UNDEFINED <> CacheHandle [GENLNG]
                    UNDEFINED <> szTemplateBusinessUnit [MCU]
          Else
               Call App:P4015 Form:W4015A Version:ZJDE0002
                    FC Address Number [AN8] -> AddressNumber [AN8]
                    "3" -> ProcessingMode [EV01]
                    "1" -> ProtectAddressNumber [EV02]
                    "1" -> CalledFromPODetail [EV03]
                    FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
          End If
          VA frm_TemplatesExecuted [EV01] = "1"
          Press Button(FC PROCESS: Load Grid From Cache)
     End If
End If
//
// ---------------------------------------------------------------------------
// Make sure EditLine runs if Header Values Changed and Focus hasn't been set on
// Grid before you clicked the OK Button SAR5377085
// ---------------------------------------------------------------------------
//
If VA frm_cSetFocusToGridFlag_EV01 [EV01] is not equal to "1"
And VA frm_EditLineSucessful_EV01 [EV01] is not equal to "1"
And VA frm_HeaderValuesChanged [EV01] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
     Set Control Focus(FC Grid)
End If
//
Disable Grid(FC Grid,  <All Rows>, GC SM)
// SAR 8758836
// SAR 8914771 Begin
! If PO cProhibitChanges [EV01] is equal to "1"
     ! Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
! End If
If SV Form_ Mode is not equal to CO ADD_MODE
     If PO cProhibitChanges [EV01] is equal to "1"
          Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
     End If
End If
// SAR 8914771 End
//

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Double Click on Row Header
Event GUID: 5ef15c5f-e064-11d1-9ac9-00600832fe19
=============================================
Set Control Focus(HC Line Attach&ments)
Press Button(HC Line Attach&ments)

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Set Focus on Grid
Event GUID: 5ef15c67-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_EV01_BD_Executed [EV01]
evt_ProcessEdits_EV01 [EV01]
evt_szOrderedBy_ORBY [ORBY]
evt_ShipToFtchdByBegindoc_EV02 [EV02]
evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
----------------------------------------
// ++++  INI -  ISSUE 6105 - BUG - Marília +++++
//        Não permite inclusão de novos Itens na O.C, nem alterações
//     quando a mesma já foi p/ processo de Alçadas (Workflow)
//  ISSUE 6326 - Marília - Ajuste p/não fazer o teste dependendo da PO
If FC Order Number [DOCO] is greater than "0"
And GC Item Number [UITM] is equal to <Blank>
And PO cProhibitChanges [EV01] is equal to "1"
     F5598010.Select  [Index 1: VoucherWFDate]
          FC Order Company [KCOO] = TK Document Company [KCO]
          FC F4301:Order Type [DCTO] = TK Document Type [DCT]
          FC Order Number [DOCO] = TK Document (Voucher, Invoice, etc.) [DOC]
     F5598010.FetchNext  [Index 1: VoucherWFDate]
          VA frm_CO [CO] <- TK Document Company [KCO]
     If SV File_IO_Status is equal to CO SUCCESS
          Disable Grid(FC Grid,  <All Rows>, <All Columns>)
     End If
End If
// ++++  FIM  -  ISSUE 6105 - BUG - Marília +++++
//
// ==============================================================
// ISSUE 7707 - Valkiria Schulte - Cia do Docto NE Cia do MCU
// ==============================================================
If PO cPessoaFisica [AA01] is greater than <Blank>
     F0101.FetchSingle  [Index 1: Address #]
          FC Address Number [AN8] = TK Address Number [AN8]
          VA frm_MCU_F0101 [MCU] <- TK Business Unit [MCU]
          VA frm_TAXC_F0101 [TAXC] <- TK Person/Corporation Code [TAXC]
     If VA frm_TAXC_F0101 [TAXC] is equal to "1"
          F0006.FetchSingle  [Index 1: Cost Center]
               VA frm_MCU_F0101 [MCU] = TK Business Unit [MCU]
               VA frm_CIA_DO_MCU_F0101 [KCOO] <- TK Company [CO]
          If FC Order Company [KCOO] is not equal to VA frm_CIA_DO_MCU_F0101 [KCOO]
          Else
               Set Control Error(FC Long Address Number_ALKY, "2718")
               Stop Processing
          End If
     End If
End If
// ==============================================================
// END ISSUE 7707
// ==============================================================
If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
     // ===========================================================
     // Fornecedor deve ter Catálogo de Preços cadastrado
     // ===========================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
          F41061.FetchSingle  [Index 1: Bus. Unit, Addr Num, +A]
               FC Address Number [AN8] = TK Address Number [AN8]
          If SV File_IO_Status is equal to CO ERROR
               Set Control Error(FC Address Number, "4607")
               Set Control Focus(FC Long Address Number_ALKY [ALKY])
               Stop Processing
          End If
     End If
     // ===========================================================
     // Obrigatório o preenchimento do Frete para OC - ISSUE 3233
     // ===========================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
     Or PO OpcaoSuprimentos [EV01] is equal to "1"
          If FC Freight Handling Code [FRTH] is less than or equal to "0"
               Set Control Error(FC Freight Handling Code, "0003")
               Set Control Focus(FC Freight Handling Code [FRTH])
               Stop Processing
               // ------------------------------------------------------------------
               // ISSUE 6536 - Marília - 09/10/03
          Else
               // Acusar erro quando Frete preenchido não existe na UDC
               VA frm_RBSSistUDC_SY [SY] = "42"
               VA frm_RBSCodUDC_RT [RT] = "FR"
               VA frm_RBSKeyUDC_KY [KY] = concat("%", concat([FC Freight Handling Code [FRTH]], "%"))
               F0005.FetchSingle  [Index 1: System, Type, Code]
                    VA frm_RBSSistUDC_SY [SY] = TK Product Code [SY]
                    VA frm_RBSCodUDC_RT [RT] = TK User Defined Codes [RT]
                    VA frm_RBSKeyUDC_KY [KY] Is Like TK User Defined Code [KY]
               If SV File_IO_Status is not equal to CO SUCCESS
                    Set Control Focus(FC Freight Handling Code [FRTH])
                    Stop Processing
               End If
               // ------------------------------------------------------------------
          End If
     End If
     // ===========================================================
     // Obrigatório o preenchimento doLocal de Entrega para OC - ISSUE 5876
     // ===========================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
     Or PO OpcaoSuprimentos [EV01] is equal to "1"
          If FC LocalEntrega [ADD1] is less than or equal to <Blank>
               Set Control Error(FC LocalEntrega, "0003")
               Set Control Focus(FC LocalEntrega [ADD1])
               Stop Processing
          End If
     End If
End If
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     If FC Collection [C9COLL] is greater than <Blank>
     Or FC SeasonCode [C9SEAC] is greater than <Blank>
     Or FC Season Year [C9SEAY] is greater than <Blank>
          If FI szCollection [C9COLL] is equal to or empty <Blank>
          And FI szSeasonCode [C9SEAC] is equal to or empty <Blank>
          And FI szSeasonYear [C9SEAY] is equal to or empty <Blank>
               FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                    FC Collection [C9COLL] = TK Collection [C9COLL]
                    FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
                    FC COLLECTION [DL01] <- TK Description Line 1 [C9DSC1]
                    VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
               If SV File_IO_Status is equal to CO SUCCESS
                    If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                         If VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ] is equal to or empty Null Date
                              FC Collection Price Effective Date [C9PRDJ] = date_today()
                         Else
                              FC Collection Price Effective Date [C9PRDJ] = VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                         End If
                    End If
               Else
                    Set Control Error(FC Collection, "E41F02")
                    Set Control Error(FC SeasonCode, "E41F02")
                    Set Control Error(FC Season Year, "E41F02")
                    Stop Processing
               End If
          End If
     Else
          If PO cValidateItemsWithCollection [EV01] is equal to ("1","2")
               Set Control Error(FC Collection, "E41F01")
               Set Control Error(FC SeasonCode, "E41F01")
               Set Control Error(FC Season Year, "E41F01")
               Stop Processing
          End If
     End If
End If
//
// SAR 6526863 - Initialize Process Edits Flag to "1"
VA evt_ProcessEdits_EV01 [EV01] = "1"
// SAR# - 7384879 Order date is assigned to scheduled pick date when scheduled
// pickdate is than the order date.
//
// SAR 8927324 - Begins
VA frm_TaxArea_TXA1 [TXA1] = <NULL>
VA frm_TaxExplanationCode_EXR1 [EXR1] = <NULL>
VA evt_ShipToFtchdByBegindoc_EV02 [EV02] = <NULL>
// SAR 8927324 - Ends
//
If PO cJobProject [EV01] is equal to ("1","2")
And FC Scheduled Pick [PDDJ] is less than FC Order Date [TRDJ]
     FC Scheduled Pick [PDDJ] = FC Order Date [TRDJ]
End If
//
// ---------------------------------------------------------------------------
// SAR 6255303 If Form value for Ship To is Blank also Blank out the Ship to
// Hidden value
//
If FC Long Ship To_ALKY [ALKY] is equal to <Blank>
And FC Ship To [SHAN] is not equal to <Blank>
     FC Ship To [SHAN] = <NULL>
End If
// SAR 8927324 - Begins
If SV Form_ Mode is equal to CO COPY_MODE
     If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
     And FC Long Ship To_ALKY [ALKY] is not equal to <NULL>
          VA evt_ShipToFtchdByBegindoc_EV02 [EV02] = "1"
     End If
End If
// SAR 8927324 - Ends
//
// ---------------------------------------------------------------------------
// SAR 3252748 & 3775645 & 4860737
// SAR 5236565 revoked changes made by SAR 4860737
// ---------------------------------------------------------------------------
//
If VA frm_OriginalBP [MCU] is not equal to FC Branch/Plant1 [MCU]
And VA frm_ManualOrderEntry [EV01] is equal to "0"
And VA frm_cSetFocusToGridFlag_EV01 [EV01] is not equal to "1"
     FC Order Number [DOCO] = "0"
End If
//
VA frm_cSetFocusToGridFlag_EV01 [EV01] = "1"
//
//
// ---------------------------------------------------------------------------
// If order number is zero assign next number
// ---------------------------------------------------------------------------
//
If FC Order Number [DOCO] is equal to "0"
     //
     GetNextOrderNumber(B4302960.GetNextOrderNumber)
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Company [KCOO] <> szOrderCompany [KCOO]
          FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
     //
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC F4301:Order Type [DCTO])
     //
     //
     If SV Form_ Mode is equal to CO ADD_MODE
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          //
          // ---------------------------------------------------------------------------
          // SAR#4480161 - Not defaulting Send Method from purchasing instructions
          // ---------------------------------------------------------------------------
          //
          //  SAR  6585679  - Add FC Retainage % to Begin Doc
          // SAR 7537839 - Passed Requested date and Promised delivery date
          // SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
          F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
               VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               "A" -> cHeaderActionCode [ACTN]
               "1" <> cProcessEdits [EV01]
               VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
               VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
               FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               "000" -> szOrderSuffix [SFXO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Address Number [AN8] <> mnSupplierNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNumber [SHAN]
               FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
               FC Payment Terms [PTC] <> szPaymentTerms [PTC]
               FC HOLD Code [HOLD] <> szHoldCode [HOLD]
               VA frm_c_ERSFlag [EV01] <> cEvaluatedReceiptsFlag [AVCH]
               VA frm_cSendMethod_CRMD [CRMD] <> cSendMethod [CRMD]
               FC Foreign [CRRM] <> cCurrencyMode [CRRM]
               FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
               FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
               VA frm_USR0_UserID [USR0] <> szOrderedPlacedBy [ORBY]
               "EP4310" -> szProgramID [PID]
               SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
               FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
               VA frm_USR0_UserID [USR0] -> szUserID [USER]
               FC Retainage % [PCRT] <> mnRetainage [PCRT]
               VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
               VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
               FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
               FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
               FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
               FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
               FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
               FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
               FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
               FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
               FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
               FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
               FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
               FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
               FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
               FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
               FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
               FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
               FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
               FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
               FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
               FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
               FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
               FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
               FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
               FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
               FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
               FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
               FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
               FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
               FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
               FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
               FC Clause ID [CUKID] -> mnClause_ID [CUKID]
               FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
               FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
               FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
          //
          If SV Error_Status is equal to CO SUCCESS
               VA frm_EV02_BegDocExecuted [EV02] = "1"
          End If
          //
          PopulateAddressNumber(B4303010.PopulateAddressNumber)
               VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
               FC Address Number [AN8] -> mnSupplierNumber [AN8]
               FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
               FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
               FC Ship To [SHAN] -> mnShipToNumber [SHAN]
               FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
               FC SHIP TO [DL01] <- szShipToDescription [DL01]
          //
     End If
     //
     //
     If SV Form_ Mode is equal to CO COPY_MODE
     And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          //
          //
          // In copy mode, do not pass in dates to begin doc.
          //
          // ---------------------------------------------------------------------------
          // SAR 4989119 Begins
          // On Copy Mode, Copy Adjustment Schedule from Exisitng Order to New Order
          // ---------------------------------------------------------------------------
          //
          If BC Price and Adjustment Schedule (F4311.0) [ASN] is not equal to <Blank>
          And BC Price and Adjustment Schedule (F4311.0) [ASN] is not equal to <NULL>
               If VA grd_ASN_AdjSchedule [ASN] is equal to or empty <Blank>
                    VA grd_ASN_AdjSchedule [ASN] = BC Price and Adjustment Schedule (F4311.0) [ASN]
               End If
          End If
          // SAR 4989119 Ends
          //
          // ---------------------------------------------------------------------------
          // Do not pass BC Approval Routing into Begin Doc.  The approval route will then
          // be assigned according to the processing options. SAR 5416865
          //
          //  SAR  6585679  - Add FC Retainage % to Begin Doc
          //  SAR  8164309  - Pass FC Retainage Indicator to Begin Doc
          // ---------------------------------------------------------------------------
          //
          F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
               VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               "A" -> cHeaderActionCode [ACTN]
               "1" <> cProcessEdits [EV01]
               VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
               VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
               FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               "000" -> szOrderSuffix [SFXO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               VA frm_OriginalOrderCompany_OKCO [OKCO] -> szOriginalOrderCompany [OKCO]
               VA frm_OriginalOrderNo [OORN] -> szOriginalOrderNumber [OORN]
               VA frm_OriginalOrderType_OCTO [OCTO] -> szOriginalOrderType [OCTO]
               BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
               BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
               BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
               FC Address Number [AN8] <> mnSupplierNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNumber [SHAN]
               FC Order Date [TRDJ] -> jdOrderDate [TRDJ]
               BC Reference (F4301.0) [VR01] -> szReference01 [VR01]
               BC Reference 2 (F4301.0) [VR02] -> szReference02 [VR02]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] -> szDeliveryInstructions01 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] -> szDeliveryInstructions02 [DEL2]
               BC Print Message (F4301.0) [INMG] -> szPrintMessage [INMG]
               BC Pricing Group (F4301.0) [PRGP] -> szSupplierPriceGroup [PRGP]
               BC Payment Terms Code (F4301.0) [PTC] -> szPaymentTerms [PTC]
               BC Tax Expl Code 1 (F4301.0) [EXR1] -> szTaxExplanationCode [EXR1]
               BC Tax Rate/Area (F4301.0) [TXA1] -> szTaxRateArea [TXA1]
               BC Certificate, Tax Exemption (F4301.0) [TXCT] -> szTaxCertificate [TXCT]
               BC Associated Text (F4301.0) [ATXT] -> cAssociatedText [ATXT]
               FC HOLD Code [HOLD] <> szHoldCode [HOLD]
               BC Freight Handling Code (F4301.0) [FRTH] -> szFreightHandlingCode [FRTH]
               BC Buyer Number (F4301.0) [ANBY] -> mnBuyerNumber [ANBY]
               BC Carrier Number (F4301.0) [ANCR] -> mnCarrierNumber [ANCR]
               BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] -> cEvaluatedReceiptsFlag [AVCH]
               BC Send Method (F4301.0) [CRMD] -> cSendMethod [CRMD]
               BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCostRule [PRP5]
               FC Foreign [CRRM] -> cCurrencyMode [CRRM]
               FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
               FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
               VA frm_USR0_UserID [USR0] <> szOrderedPlacedBy [ORBY]
               "EP4310" -> szProgramID [PID]
               SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
               FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
               VA frm_USR0_UserID [USR0] -> szUserID [USER]
               FC Retainage % [PCRT] <> mnRetainage [PCRT]
               BC Description (F4301.0) [DESC] -> szDescription [DESC]
               BC Name - Remark (F4301.0) [RMK] -> szRemark [RMK]
               VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
               VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
               FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
               FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
               FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
               FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
               FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
               FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
               FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
               FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
               FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
               FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
               FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
               FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
               FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
               FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
               FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
               FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
               FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
               FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
               FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
               FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
               FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
               FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
               FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
               FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
               FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
               FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
               FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
               FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
               FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
               FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
               FC Clause ID [CUKID] -> mnClause_ID [CUKID]
               FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
               FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
               FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
          //
          If SV Error_Status is equal to CO SUCCESS
               VA frm_EV02_BegDocExecuted [EV02] = "1"
          End If
          //
          PopulateAddressNumber(B4303010.PopulateAddressNumber)
               VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
               FC Address Number [AN8] -> mnSupplierNumber [AN8]
               FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
               FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
               FC Ship To [SHAN] -> mnShipToNumber [SHAN]
               FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
               FC SHIP TO [DL01] <- szShipToDescription [DL01]
          //
     End If
     //
     If SV Error_Status is equal to CO SUCCESS
          SaveOffProcurementOrderValue(B4303030.SaveOffProcurementOrderValue)
               FC Ship To [SHAN] -> mnSHANToSave [SHAN]
               VA frm_TempSHAN [SHAN] <- mnSHANSaved1 [SHAN]
               FC HOLD Code [HOLD] -> szHOLDToSave [HOLD]
               VA frm_TempHOLD [HOLD] <- szHOLDSaved [HOLD]
               FC Currency Code [CRCD] -> szCRCDToSave [CRCD]
               VA frm_TempCRCD [CRCD] <- szCRCDSaved [CRCD]
               FC ExchangeRate_CRR [CRR] -> szCRRToSave [CRR]
               VA frm_TempCRR [CRR] <- szCRRSaved [CRR]
     Else
          Set Control Focus(FC Long Address Number_ALKY [ALKY])
     End If
     //
Else
     //
     //
     // SAR 8164296 Changed condition from AND to OR. When erorrs are encountered
     // on the form, Begin Doc flag is set to 0 and this should re-execute Begin
     // Doc.
     If VA frm_RecordInHeaderWkFile [EV01] is equal to "0"
     Or VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
          //
          //
          // SAR 6472375 Begin
          If SV Form_ Mode is equal to CO ADD_MODE
          Or SV Form_ Mode is equal to CO UPDATE_MODE
               //
               If SV Form_ Mode is equal to CO ADD_MODE
                    VA frm_cHeaderActionCode_EV01 [EV01] = "A"
                    // SAR 7740845
                    VA evt_szOrderedBy_ORBY [ORBY] = VA frm_USR0_UserID [USR0]
                    // SAR 7740845
               Else
                    //
                    // SAR 6526863 - Set ProcessEdits Flag to "0" if on Update mode
                    VA evt_ProcessEdits_EV01 [EV01] = "0"
                    VA frm_cHeaderActionCode_EV01 [EV01] = "C"
                    // SAR 7740845
                    VA evt_szOrderedBy_ORBY [ORBY] = <NULL>
                    // SAR 7740845
               End If
               //
               // ---------------------------------------------------------------------------
               // SAR 6472375 Begin
               // SAR#4480161 - Not defaulting Send Method from purchasing instructions
               // SAR 6526863 - Send in Process Edit Flag instead of Hard Coded "1"
               //  SAR  6585679  - Add FC Retainage % to Begin Doc
               // SAR 7276448 - had to pass all BC F4301 values to prevent clearing out,  MBF
               // does null logic to replace from DB, but when called from ER they were
               // coming in Blank - so the logic was interpreting a change from non blank to
               // blank
               // ---------------------------------------------------------------------------
               //
               // SAR 7740845 - Ordered by value passed is changed
               // SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
               //  SAR 8943156  -  Passed BC values of  RMA Number and RMA Type
               F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
                    VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                    VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                    VA frm_cHeaderActionCode_EV01 [EV01] -> cHeaderActionCode [ACTN]
                    VA evt_ProcessEdits_EV01 [EV01] <> cProcessEdits [EV01]
                    VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
                    VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
                    FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
                    FC Order Number [DOCO] <> mnOrderNumber [DOCO]
                    FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                    "000" -> szOrderSuffix [SFXO]
                    FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
                    FC Address Number [AN8] <> mnSupplierNumber [AN8]
                    FC Ship To [SHAN] <> mnShipToNumber [SHAN]
                    BC Date - Requested (F4301.0) [DRQJ] -> jdRequestedDate [DRQJ]
                    FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
                    BC Date - Promised Shipment (F4301.0) [PPDJ] -> jdPromisedDate [PDDJ]
                    BC Date - Cancel (F4301.0) [CNDJ] -> jdCancelDate [CNDJ]
                    BC Reference (F4301.0) [VR01] -> szReference01 [VR01]
                    BC Reference 2 (F4301.0) [VR02] -> szReference02 [VR02]
                    BC Delivery Instructions Line 1 (F4301.0) [DEL1] -> szDeliveryInstructions01 [DEL1]
                    BC Delivery Instructions Line 2 (F4301.0) [DEL2] -> szDeliveryInstructions02 [DEL2]
                    BC Print Message (F4301.0) [INMG] -> szPrintMessage [INMG]
                    BC Pricing Group (F4301.0) [PRGP] -> szSupplierPriceGroup [PRGP]
                    BC Payment Terms Code (F4301.0) [PTC] -> szPaymentTerms [PTC]
                    BC Tax Expl Code 1 (F4301.0) [EXR1] -> szTaxExplanationCode [EXR1]
                    BC Tax Rate/Area (F4301.0) [TXA1] -> szTaxRateArea [TXA1]
                    BC Certificate, Tax Exemption (F4301.0) [TXCT] -> szTaxCertificate [TXCT]
                    BC Associated Text (F4301.0) [ATXT] -> cAssociatedText [ATXT]
                    FC HOLD Code [HOLD] <> szHoldCode [HOLD]
                    BC Freight Handling Code (F4301.0) [FRTH] -> szFreightHandlingCode [FRTH]
                    BC Buyer Number (F4301.0) [ANBY] -> mnBuyerNumber [ANBY]
                    BC Carrier Number (F4301.0) [ANCR] -> mnCarrierNumber [ANCR]
                    VA frm_c_ERSFlag [EV01] <> cEvaluatedReceiptsFlag [AVCH]
                    VA frm_cSendMethod_CRMD [CRMD] <> cSendMethod [CRMD]
                    BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCostRule [PRP5]
                    BC Code - Approval Routing (F4301.0) [ARTG] -> szApprovalRouteCode [ARTG]
                    FC Foreign [CRRM] -> cCurrencyMode [CRRM]
                    FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
                    FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
                    VA evt_szOrderedBy_ORBY [ORBY] <> szOrderedPlacedBy [ORBY]
                    "EP4310" -> szProgramID [PID]
                    SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
                    FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
                    VA frm_USR0_UserID [USR0] -> szUserID [USER]
                    FC Retainage % [PCRT] <> mnRetainage [PCRT]
                    BC Description (F4301.0) [DESC] -> szDescription [DESC]
                    BC Name - Remark (F4301.0) [RMK] -> szRemark [RMK]
                    VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
                    BC AIA Document Flag (F4301.0) [FUF1] -> cAIADocument [FUF1]
                    VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                    VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                    BC Document (Order #, Invoice, etc.) (F4301.0) [DOC1] <> mnRMADocNumber [DOC1]
                    BC Document Type (F4301.0) [DCT4] <> szRMADocType [DCT4]
                    BC User Reserved Date (F4301.0) [URDT] -> jdUserReservedDate [URDT]
                    BC User Reserved Amount (F4301.0) [URAT] -> mnUserReservedAmount [URAT]
                    BC User Reserved Code (F4301.0) [URCD] -> szUserReservedCode [URCD]
                    BC User Reserved Reference (F4301.0) [URRF] -> szUserReservedReference [URRF]
                    BC User Reserved Number (F4301.0) [URAB] -> mnUserReservedNumber [URAB]
                    FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
                    FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
                    FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
                    FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
                    FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
                    FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
                    FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
                    FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
                    FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
                    FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
                    FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
                    FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
                    FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
                    FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
                    FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
                    FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
                    FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
                    FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
                    FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
                    FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
                    FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
                    FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
                    FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
                    FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
                    FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
                    FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
                    FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
                    FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
                    FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
                    FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
                    FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
                    FC Clause ID [CUKID] -> mnClause_ID [CUKID]
                    FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
                    FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
                    FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
               //
               If SV Error_Status is equal to CO SUCCESS
                    VA frm_EV02_BegDocExecuted [EV02] = "1"
               End If
               //
               PopulateAddressNumber(B4303010.PopulateAddressNumber)
                    VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
                    FC Address Number [AN8] -> mnSupplierNumber [AN8]
                    FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
                    FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
                    FC Ship To [SHAN] -> mnShipToNumber [SHAN]
                    FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
                    FC SHIP TO [DL01] <- szShipToDescription [DL01]
               //
          End If
          //
     End If
     //
     If SV Form_ Mode is equal to CO COPY_MODE
          //
          // In copy mode, do not pass in dates to begin doc.
          //  SAR  6585679  - Add FC Retainage % to Begin Doc
          //  SAR  8164309  - Pass FC Retainage Indicator to Begin Doc
          //
          //
          // Do not pass BC Approval Routing into Begin Doc.  The approval route will
          // be assigned according to the processing options. SAR 7772855
          //
          // SAR 8678730 - Should be passing the carrier number from the header
          //
          F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
               VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               "A" -> cHeaderActionCode [ACTN]
               "1" <> cProcessEdits [EV01]
               VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
               VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
               FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               "000" -> szOrderSuffix [SFXO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               VA frm_OriginalOrderCompany_OKCO [OKCO] -> szOriginalOrderCompany [OKCO]
               VA frm_OriginalOrderNo [OORN] -> szOriginalOrderNumber [OORN]
               VA frm_OriginalOrderType_OCTO [OCTO] -> szOriginalOrderType [OCTO]
               BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
               BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
               BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
               FC Address Number [AN8] <> mnSupplierNumber [AN8]
               FC Ship To [SHAN] <> mnShipToNumber [SHAN]
               FC Order Date [TRDJ] -> jdOrderDate [TRDJ]
               BC Reference (F4301.0) [VR01] -> szReference01 [VR01]
               BC Reference 2 (F4301.0) [VR02] -> szReference02 [VR02]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] -> szDeliveryInstructions01 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] -> szDeliveryInstructions02 [DEL2]
               BC Print Message (F4301.0) [INMG] -> szPrintMessage [INMG]
               BC Pricing Group (F4301.0) [PRGP] -> szSupplierPriceGroup [PRGP]
               BC Payment Terms Code (F4301.0) [PTC] -> szPaymentTerms [PTC]
               BC Tax Expl Code 1 (F4301.0) [EXR1] -> szTaxExplanationCode [EXR1]
               BC Tax Rate/Area (F4301.0) [TXA1] -> szTaxRateArea [TXA1]
               BC Certificate, Tax Exemption (F4301.0) [TXCT] -> szTaxCertificate [TXCT]
               BC Associated Text (F4301.0) [ATXT] -> cAssociatedText [ATXT]
               FC HOLD Code [HOLD] <> szHoldCode [HOLD]
               BC Freight Handling Code (F4301.0) [FRTH] -> szFreightHandlingCode [FRTH]
               BC Buyer Number (F4301.0) [ANBY] -> mnBuyerNumber [ANBY]
               BC Carrier Number (F4301.0) [ANCR] -> mnCarrierNumber [ANCR]
               BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] -> cEvaluatedReceiptsFlag [AVCH]
               BC Send Method (F4301.0) [CRMD] -> cSendMethod [CRMD]
               BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCostRule [PRP5]
               BC Code - Approval Routing (F4301.0) [ARTG] <> szApprovalRouteCode [ARTG]
               FC Foreign [CRRM] -> cCurrencyMode [CRRM]
               FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
               FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
               VA frm_USR0_UserID [USR0] <> szOrderedPlacedBy [ORBY]
               "EP4310" -> szProgramID [PID]
               SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
               FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
               VA frm_USR0_UserID [USR0] -> szUserID [USER]
               FC Retainage % [PCRT] <> mnRetainage [PCRT]
               BC Description (F4301.0) [DESC] -> szDescription [DESC]
               BC Name - Remark (F4301.0) [RMK] -> szRemark [RMK]
               VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
               VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
               FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
               FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
               FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
               FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
               FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
               FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
               FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
               FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
               FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
               FC Property 10 [POHP10] -> cPurchaseOrderProperty11 [POHP11]
               FC Property 11 [POHP11] -> cPurchaseOrderProperty12 [POHP12]
               FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
               FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
               FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
               FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
               FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
               FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
               FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
               FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
               FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
               FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
               FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
               FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
               FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
               FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
               FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
               FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
               FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
               FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
               FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
               FC Clause ID [CUKID] -> mnClause_ID [CUKID]
               FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
               FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
               FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
          //
          //
          If SV Error_Status is equal to CO SUCCESS
               VA frm_EV02_BegDocExecuted [EV02] = "1"
          End If
          //
          PopulateAddressNumber(B4303010.PopulateAddressNumber)
               VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
               FC Address Number [AN8] -> mnSupplierNumber [AN8]
               FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
               FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
               FC Ship To [SHAN] -> mnShipToNumber [SHAN]
               FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
               FC SHIP TO [DL01] <- szShipToDescription [DL01]
          //
     End If
     //
     If SV Error_Status is equal to CO SUCCESS
          SaveOffProcurementOrderValue(B4303030.SaveOffProcurementOrderValue)
               FC Ship To [SHAN] -> mnSHANToSave [SHAN]
               VA frm_TempSHAN [SHAN] <- mnSHANSaved1 [SHAN]
               FC HOLD Code [HOLD] -> szHOLDToSave [HOLD]
               VA frm_TempHOLD [HOLD] <- szHOLDSaved [HOLD]
               FC Currency Code [CRCD] -> szCRCDToSave [CRCD]
               VA frm_TempCRCD [CRCD] <- szCRCDSaved [CRCD]
               FC ExchangeRate_CRR [CRR] -> szCRRToSave [CRR]
               VA frm_TempCRR [CRR] <- szCRRSaved [CRR]
     Else
          Set Control Focus(FC Long Address Number_ALKY [ALKY])
     End If
     //
End If
// ===============================================================
//
// SAR 8164296 If there are date/Utime Error BSFN doesn't catch this since
// Tools does not pass Invalid Date/Utime fields to BSFN. Thus avoiding the
// Errors.
GetErrorCount(B9800250.GetErrorCount)
     VA frm_nNumberOfErrors_INT01 [INT01] <- nNumberOfErrors [INT01]
     UNDEFINED <> nNumberOfWarnings [INT01]
If VA frm_nNumberOfErrors_INT01 [INT01] is not equal to "0"
     VA frm_EV02_BegDocExecuted [EV02] = "0"
     Stop Processing
End If
//    Protect the currency fields once a line has been entered successfully
//
If VA frm_RecordInHeaderWkFile [EV01] is equal to "1"
     //
     If VA frm_EV01_ProtectCurrFields [EV01] is not equal to "1"
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC F4301:Order Type [DCTO])
          Disable Control(FC Currency Code [CRCD])
          Disable Control(FC Foreign [CRRM])
          Disable Control(FC ExchangeRate_CRR [CRR])
          Disable Control(FC Branch/Plant1 [MCU])
          Disable Control(FC Address Number [AN8])
          Disable Control(FC Long Address Number_ALKY [ALKY])
          Disable Control(FC Order Date [TRDJ])
          Disable Control(FC Ship To [SHAN])
          Disable Control(FC Long Ship To_ALKY [ALKY])
          Disable Control(FC HOLD Code [HOLD])
          Disable Control(FC Payment Terms [PTC])
          // =======================================================
          // ISSUE 3233
          // =======================================================
          // ISSUE 5876
          // =======================================================
          If PO OpcaoCatalogo [EV01] is equal to "1"
          Or PO OpcaoSuprimentos [EV01] is equal to "1"
               Disable Control(FC Carrier Number [ANCR])
               Disable Control(FC Freight Handling Code [FRTH])
               Disable Control(FC Local Cobrança [SHAN])
               Disable Control(FC LocalEntrega [ADD1])
          End If
          //
          // ===============================================================
          // SAR 2583676 KH 3/99
          //
          Disable Control(FC Business Unit)
          Disable Control(FC Project)
          Disable Control(FC Job)
          Disable Control(FC Branch/Plant [MCU])
          // SAR 6585679
          Disable Control(FC Retainage % [PCRT])
          // SAR 8164309
          Disable Control(FC Retainage Indicator [RETI])
          //
          // SAR 8164296
          Press Button(FC Disable Additonal Properties)
          Press Button(FC Disable Category Code)
          VA frm_EV01_ProtectCurrFields [EV01] = "1"
          //
          // SAR 8956903 - Apparel Management
          If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
               Press Button(FC Disable Style Fields)
          End If
     End If
     //
     //
     If FC Address Number [AN8] is not equal to "0"
     And PO szOrderTemplates [VL15] is equal to "1"
     And VA frm_TemplatesExecuted [EV01] is equal to "0"
     And SV Form_ Mode is equal to CO ADD_MODE
          //
          //
          If VA frm_szOrderTemplate_ORTP [ORTP] is equal to or empty <Blank>
               Call App:P4015 Form:W4015A Version:ZJDE0002
                    FC Address Number [AN8] -> AddressNumber [AN8]
                    "3" -> ProcessingMode [EV01]
                    "1" -> ProtectAddressNumber [EV02]
                    "1" -> CalledFromPODetail [EV03]
                    FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
          Else
               Call App:P40215 Form:W40215A Version:ZJDE0001
                    VA frm_szOrderTemplate_ORTP [ORTP] -> OrderTemplate [ORTP]
                    FC Address Number [AN8] -> AddressNumber [AN8]
                    "3" -> ProcessingMode [EV01]
                    FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                    UNDEFINED <> OpenOrdersVersion [VERS]
                    UNDEFINED <> OrderType [DCTO]
                    UNDEFINED <> CacheHandle [GENLNG]
                    UNDEFINED <> szTemplateBusinessUnit [MCU]
          End If
          VA frm_TemplatesExecuted [EV01] = "1"
          Press Button(FC PROCESS: Load Grid From Cache)
     End If
     // ====================================================
     // ISSUE 3327 - Chama Catálogo de Preços
     // ====================================================
     If PO OpcaoCatalogo [EV01] is equal to "1"
          If FC Address Number [AN8] is not equal to "0"
          And SV Form_ Mode is equal to CO ADD_MODE
          And VA frm_TemplatesExecuted [EV01] is equal to "0"
               // ----- 288865 - Marília - inibido aguardando pacote c/nova ISSUE
               // +++ INI - 251190 - Marília - Catálogo Recarga de Cartuchos (desinibido)
               ! If PO TpCatalogo [EV01] is equal to "R"
                    ! Call App:P554162W Form:W554162WB Version: 
                    !      FC Branch/Plant1 [MCU] -> szCostCenter [MCU]
                    !      FC Address Number [AN8] -> mnAddressNumber [AN8]
                    !      UNDEFINED <> szCatalogName [CATN]
                    !      UNDEFINED <> mnUnitsTransactionQty [UORG]
                    !      FC Order Date [TRDJ] -> jdTransactionDate [TRDJ]
                    !      FC To Currency Code [CRDC] -> szBaseCurrency [CRRP]
                    !      UNDEFINED <> idCacheHandle [GENLNG]
                    !      UNDEFINED <> szCurrencyCode [CRCD]
                    !      UNDEFINED <> mnIdentifierShortItem [ITM]
                    !      UNDEFINED <> szUnitOfMeasureAsInput [UOM]
                    !      UNDEFINED <> jdDateExpiredJulian1 [EXDJ]
               ! Else
                    // +++ FIM - 251190 - Marília - Catálogo Recarga de Cartuchos
                    Call App:P41061W Form:W41061WB Version: 
                         FC Branch/Plant1 [MCU] -> szCostCenter [MCU]
                         FC Address Number [AN8] -> mnAddressNumber [AN8]
                         UNDEFINED <> szCatalogName [CATN]
                         UNDEFINED <> mnUnitsTransactionQty [UORG]
                         FC Order Date [TRDJ] -> jdTransactionDate [TRDJ]
                         FC To Currency Code [CRDC] -> szBaseCurrency [CRRP]
                         UNDEFINED <> idCacheHandle [GENLNG]
                         UNDEFINED <> szCurrencyCode [CRCD]
               ! End If
               VA frm_TemplatesExecuted [EV01] = "1"
               Press Button(FC PROCESS: Load Grid From Cache)
          End If
     End If
     // ====================================================
     //
End If
//
// ====================================================
// Para ordem de compra de catálogo, o custo unitário
// e o custo total serão sempre protegidos - ISSUE 3327
// ====================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC Tr.UoM)
     Disable Grid(FC Grid, <All Rows>, GC Pu.UoM)
     Disable Grid(FC Grid,  <All Rows>, GC UnitCost)
     Disable Grid(FC Grid, <All Rows>, GC ExtendedCost)
End If
// ====================================================
//
// -----------------------------------------------------------------------------
//    SAR 5408970 - Changes made by SAR 3083534 below has been moved to
//    Post Dialog Is Initialized event because of web issues.
// -----------------------------------------------------------------------------
// SAR#3040059 - Grid was accessed when there were errors in header, which would
// then disable header fields so they could not be corrected.
// ---------------------------------------------------------------------------
//
// SAR 7850411 Begin
If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
     Clear Control Error(FC Long Ship To_ALKY [ALKY])
End If
// SAR 7850411 End
If VA frm_cAlreadySetFocus [EV01] is not equal to "1"
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          GetErrorCount(B9800250.GetErrorCount)
               VA frm_nNumberOfErrors_INT01 [INT01] <- nNumberOfErrors [INT01]
               UNDEFINED <> nNumberOfWarnings [INT01]
          If VA frm_nNumberOfErrors_INT01 [INT01] is not equal to "0"
               Disable Grid(FC Grid,  <All Rows>,  <All Columns>)
               Stop Processing
          Else
               Enable Grid(FC Grid,  <All Rows>,  <All Columns>)
               VA frm_cAlreadySetFocus [EV01] = "1"
               //
               // SAR #5706096 begin  01/02/2002
               If PO szProtectStatusCode [VL10] is equal to "1"
                    Disable Grid(FC Grid, <All Rows>, GC LastStatus)
                    Disable Grid(FC Grid, <All Rows>, GC NextStatus)
               End If
               //
               If PO szProtectPriceFlag [VL09] is equal to "1"
                    Disable Grid(FC Grid, <All Rows>, GC UnitCost)
                    Disable Grid(FC Grid, <All Rows>, GC ExtendedCost)
               End If
               //
               //
               // AP1182 por Gindri em 10/11/99 e 26/11/99
               // Objetiva proteger os campos descrição 1 e 2
               // da tela W4310A - Detalhes do Pedido
               //
               Disable Grid(FC Grid, <All Rows>, GC Description 1)
               If PO szLineType [LNTY] is equal to "S"
               Or PO szLineType [LNTY] is equal to "B"
                    Disable Grid(FC Grid,  <All Rows>, GC LnTy)
                    Disable Grid(FC Grid, <All Rows>, GC Description 2)
               End If
               //
               // Fim AP1182
               //
               // ====================================================
               // ISSUE 6017 - Marília - Campo F/F GRID deve estar sempre protegido
               Disable Grid(FC Grid,  <All Rows>, GC Branch/Plant)
               // ====================================================
               ! // ISSUE 251190 - Marília - Recarga Cartuchos 1001 (O6)
               ! // colunas usadas somente no Catálogo de Recarga de Cartuchos
               ! // deve puxar da tela de catálogo(qdo.habilitado) - não pode digitar aqui
               ! Disable Grid(FC Grid, <All Rows>, GC Recarga(S/N))
               ! Disable Grid(FC Grid, <All Rows>, GC Casco naRBS (S/N))
               // ====================================================
               //
               // SAR #5706096 end
          End If
     End If
End If
//
// ---------------------------------------------------------------------------
// MPM Purchased Items
// ---------------------------------------------------------------------------
//
// SAR 7126239 Begin - Need to lock down the Project Number field.  Moving
// outside of the IF condition so it is always locked.
Disable Grid(FC Grid, <All Rows>, GC ProjectNumber)
// SAR 7126239 End
If FI mnProjectNumber [PRJM] is not equal to "0"
Or GC Project Number [PRJM] is not equal to "0"
     Disable Grid(FC Grid, <All Rows>, GC CostCenter)
     Disable Grid(FC Grid, <All Rows>, GC Sub)
End If
//
// BEGIN SAR 7123652 CD5947922
Disable Grid(FC Grid,  <All Rows>, GC SM)
// END SAR 7123652 CD5947922
//
// SAR 8927324 - Begins
If PO szHeaderChangesToDetail [VL03] is equal to "1"
And SV Form_ Mode is equal to CO COPY_MODE
     If VA evt_ShipToFtchdByBegindoc_EV02 [EV02] is equal to "1"
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               FC Ship To [SHAN] -> mnAddressNumber [AN8]
               VA frm_TaxArea_TXA1 [TXA1] <- szTaxRateArea [TXA2]
               VA frm_TaxExplanationCode_EXR1 [EXR1] <- szTaxExplCode [EXR2]
          Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
          VA frm_mnCurrentGridRow [MATH01] = "1"
          While VA frm_mnCurrentGridRow [MATH01] is less than VA frm_MaxGridRows [MATH01]
               Get Grid Row(FC Grid, VA frm_mnCurrentGridRow)
               GC Ship To Number [SHAN] = FC Ship To [SHAN]
               GC Tax Rate/Area [TXA1] = VA frm_TaxArea_TXA1 [TXA1]
               GC Expl Code [EXR1] = VA frm_TaxExplanationCode_EXR1 [EXR1]
               VA frm_mnCurrentGridRow [MATH01] = [VA frm_mnCurrentGridRow [MATH01]]+1
          End While
     End If
End If
// SAR 8927324 - Ends
//
If PO OpcaoViagens [EV01] is equal to "1"
     Call App:P4310 Form:W4310P Version:Undefined
End If
//

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Row is Entered
Event GUID: f940ba66-ebb3-11d3-a5c7-0004ac1b6107
=============================================
//
// Begin SAR # 8967574 – Made Null to get value from Header.
// Begin SAR 11880301
// Commented the fix done by the SAR 8967574 as it was triggerring
// F4311Editline for all lines
! GC Pymt Terms [PTC] = <NULL>
// End SAR 11880301
// End SAR # 8967574
If GC EV01:Record in Detail W.File (wf) [EV01] is equal to "1"
     VA frm_EV11_KitsProcessed [EV11] = "1"
Else
     VA frm_EV11_KitsProcessed [EV11] = "0"
End If
//
//
// SAR 7044348 - Zero cost should be enabled for open purchase orders
If GC Next Status [NXTR] is equal to "999"
     Disable Control(HC &Zero Cost)
Else
     Enable Control(HC &Zero Cost)
End If
//
// ---------------------------------------------------------------------------
//  SAR  6209198
//  Change from GC Stocking Type to VA grd_Stocking Type STKT
// ---------------------------------------------------------------------------
//
//  SAR 7310431 Add if condition
If VA grd_StockingType_STKT [STKT] is equal to <Blank>
And GC Short Item No [ITM] is not equal to "0"
And GC Short Item No [ITM] is not equal to <NULL>
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          UNDEFINED <> szPrimaryItemNumber [UITM]
          UNDEFINED <> szSecondItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescriptionLine2 [DSC2]
          UNDEFINED <> szItemFlashMessage [IFLA]
          UNDEFINED <> szPrimaryUOM [UOM1]
          UNDEFINED <> szSecondaryUOM [UOM2]
          UNDEFINED <> szPurchasingUOM [UOM3]
          UNDEFINED <> szPricingUOM [UOM4]
          UNDEFINED <> szShippingUOM [UOM6]
          UNDEFINED <> szWeightUOM [UWUM]
          UNDEFINED <> szVolumeUOM [UVM1]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> cBackOrdersAllowedYN [BACK]
          VA grd_StockingType_STKT [STKT] <- cStockingType [STKT]
          UNDEFINED <> cBulkPackedFlag [BPFG]
          UNDEFINED <> cInventoryCostLevel [CLEV]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> cLotProcessType [SRCE]
          UNDEFINED <> mnShelfLifeDays [SLD]
          UNDEFINED <> szGLClassCode [GLPT]
          UNDEFINED <> cContractItem [CONT]
          UNDEFINED <> szProductionUOM [UOM8]
          UNDEFINED <> szFromGrade [FRGD]
          UNDEFINED <> szThruGrade [THGD]
          UNDEFINED <> mnFromPotency [FRMP]
          UNDEFINED <> mnThruPotency [THRP]
          UNDEFINED <> cPriceLevel [PLEV]
          UNDEFINED <> cGradePotencyPricing [PRPO]
          UNDEFINED <> cRoundToWholeNumber [SNS]
          UNDEFINED <> cKitPricingMethod [PMTH]
          UNDEFINED <> szComponentUOM [UOM9]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> szPrintMessage [INMG]
          UNDEFINED <> cCommitmentMethod [CMGL]
          UNDEFINED <> cCheckAvailability [CKAV]
          UNDEFINED <> cSerialNumberReqsted [SRNR]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cPurchasePriceLevel [PPLV]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
          UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
          UNDEFINED <> cDualPickingProcessOption [DPPO]
          UNDEFINED <> mnDualTolerance [DLTL]
End If
//
// Begin SAR 5133689
If VA grd_StockingType_STKT [STKT] is equal to "C"
     Enable Control(HC Confg Generic Text)
     Enable Control(HC Confg Related Order)
     Enable Control(HC View Config Item)
Else
     Disable Control(HC Confg Generic Text)
     Disable Control(HC Confg Related Order)
     Disable Control(HC View Config Item)
End If
// End SAR 5133689
//
// SAR 5228354 Product Variance
If VA frm_cProductVarianceFlag_MEOW [MEOW] is equal to "1"
And PO cInventoryParent [SEGB] is not equal to "1"
     If VA grd_cMatrixControlled_MIC [MIC] is equal to ("1","2")
          Enable Control(HC Matrix Orders)
     Else
          // SAR 5458424  Do not disable for web
          If SV Engine_Type is not equal to CO HTML_ENGINE
          And SV Engine_Type is not equal to CO JAVA_ENGINE
               Disable Control(HC Matrix Orders)
          End If
     End If
End If
//
// SAR 5960385 A PO line can only be assoiciated with one Part list component.
! If GC Project Number [PRJM] is equal to <Blank>
! OrGC Project Number [PRJM] is equal to <NULL>
     Enable Control(HC &Parts List)
! Else
     ! Disable Control(HC &Parts List)
! End If
//
// ---------------------------------------------------------------------------
// SAR# 5509391 - MPM Purchased Items
// ---------------------------------------------------------------------------
//
If FI mnProjectNumber [PRJM] is not equal to "0"
Or GC Project Number [PRJM] is not equal to "0"
     Disable Grid(FC Grid, <All Rows>, GC ProjectNumber)
     Disable Grid(FC Grid, <All Rows>, GC CostCenter)
     Disable Grid(FC Grid, <All Rows>, GC Sub)
End If
//
Disable Grid(FC Grid,  <All Rows>, GC SM)
// SAR 7954528 - Do not allow Qty change on a Kit in copy mode.
If VA grd_StockingType_STKT [STKT] is equal to "K"
And SV Form_ Mode is equal to CO COPY_MODE
     Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
End If
// SAR 8500165 Begin
If GC Original Order No [OORN] is not equal to <Blank>
And GC Original Order No [OORN] is not equal to <NULL>
And GC Original Order No [OORN] is not equal to "0"
And GC ACTN:Action Code (wf) [ACTN] is equal to "C"
And GC DCTO:Order Type (wf) [DCTO] is not equal to GC Orig Type [OCTO]
     Disable Control(HC &Blanket Release)
Else
     Enable Control(HC &Blanket Release)
End If
// SAR 8500165 End
// =====
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// Se for Cartões de Visitas - Recebe os Valores e Trava os Campos
If PO CartoesVisita [EV01] is equal to "S"
     Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
     Disable Grid(FC Grid, <Currently Selected Row>, GC UnitCost)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedCost)
End If
// # FIM Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// =====

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Row Exit & Changed - Inline
Event GUID: f8ce7667-7b54-440c-be35-490c9aded7ae
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szLineType_LNTY [LNTY]
evt_szAddressNumber_AN8 [AN8]
evt_szProductCode_SY [SY]
evt_szUserDefinedCodes_RT [RT]
evt_szUserDefinedCode_KY [KY]
evt_szMensagem_DL01 [DL01]
----------------------------------------
VA evt_szLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
// ==============================================================
// Ordem Compra Catálogo - Item, Custo unitário e Total protegidos-ISSUE 3327
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
     Disable Grid(FC Grid, <Currently Selected Row>, GC Tr.UoM)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Pu.UoM)
     Disable Grid(FC Grid,  <Currently Selected Row>, GC UnitCost)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedCost)
End If
// ==============================================================
// Verifica se Item/Fornecedor tem Catálogo de Preços
// ==============================================================
// ==============================================================
// AP1182 por Gindri em 25/11/99 e 26/11/99
// Objetiva proteger os campos descrição 1 e 2
// da tela W4310A - Detalhes do Pedido.
// ==============================================================
If PO szLineType [LNTY] is not equal to "S"
And PO szLineType [LNTY] is not equal to "B"
     If GC Item Number [UITM] is less than or equal to <Blank>
     And GC Account Number [ANI] is greater than <Blank>
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber, "4750")
          GC Description 1 [DSC1] = <NULL>
     Else
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ItemNumber)
          // -----------------------------------------------------------------------------
          // ISSUE 5463 - Marília - Quando PO Viagens, Descrição 1(DSC1) da F4101
          If PO OpcaoViagens [EV01] is equal to "1"
          And GC Item Number [UITM] is greater than <Blank>
               F4101.FetchSingle  [Index 2: 2nd Item Number]
                    GC Item Number [UITM] = TK 2nd Item Number [LITM]
                    GC Description 1 [DSC1] <- TK Description [DSC1]
               // ======================== Marília -  15/12/09
               VA frm_StringVIAGENS_ORTP [ORTP] = "VIAGENS"
               F4015.Select  [Index 1: Order Template, Address Number]
                    VA frm_StringVIAGENS_ORTP [ORTP] = TK Order Template [ORTP]
                    FC Address Number [AN8] = TK Address Number [AN8]
                    GC Item Number [UITM] = TK 2nd Item Number [LITM]
               F4015.FetchNext  [Index 1: Order Template, Address Number]
                    VA frm_StringVIAGENS_ORTP [ORTP] <- TK Order Template [ORTP]
               If SV File_IO_Status is not equal to CO SUCCESS
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
               End If
               // ======================== Marília -  15/12/09
          Else
               // -----------------------------------------------------------------------------
               GC Description 1 [DSC1] = GC Item Number [UITM]
          End If
     End If
End If
// ==============================================================
// Obrigatório preenchimento da Data de Entrega
// ==============================================================
If PO OpcaoDataPrometida_ [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Promised Delivery [PDDJ] is less than or equal to Null Date
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC PromisedDelivery, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC PromisedDelivery)
          End If
     End If
End If
// ==============================================================
// Obrigatório preenchimento do Requisitante
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
          And GC Requisitante [ADD2] is less than or equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante)
          End If
     End If
     // ==============================================================
     // Verifica se item tem PART NUMBER cadastrado para fornecedor
     // ==============================================================
     GetCrossReferenceFields(B4001050.GetCrossReferenceFields)
          GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
          VA frm_XRT2 [XRT2] <- szCrossRefTypeSupplier [XRT2]
     If GC Item Number [UITM] is greater than <Blank>
          F4101.FetchSingle  [Index 2: 2nd Item Number]
               GC Short Item No [ITM] <- TK Item Number - Short [ITM]
               GC Item Number [UITM] = TK 2nd Item Number [LITM]
          If SV File_IO_Status is equal to CO SUCCESS
               GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
                    GC Short Item No [ITM] <> mnShortItemNumber [ITM]
                    VA frm_XRT2 [XRT2] <> szCrossReferenceType [XRT]
                    FC Address Number [AN8] <> mnAddressNumber [AN8]
                    FC Order Date [TRDJ] <> jdOrderDate [EXDJ]
                    GC Customer/Supplier Item Number [CITM] <> szItemNumber [UITM]
                    "1" <> cSuppressErrorMesg [EV01]
          End If
     End If
End If
// ==============================================================
// ISSUE 5463 - Marília - Obrigatório Requisitante quando OpcaoViagens = 1
// ISSUE 274344 - Camila - Obrigatório Campo Descrição 4 OpcaoViagens = 1
// ==============================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Requisitante [ADD2] is less than or equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Requisitante)
          End If
          If GC Descrição 4 [DSCPED] is less than or equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 4, "5543E015")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 4)
          End If
     End If
End If
// ==============================================================
// Ordem Compra Catálogo - PU UoM deve ser igual a Tr.UoM - ISSUE 6013
// Ordem Compra Catálogo - Controle Recarga Cartuchos
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          F4101.FetchSingle  [Index 2: 2nd Item Number]
               GC Item Number [UITM] = TK 2nd Item Number [LITM]
               VA frm_UnitOfMeasurePurchas [UOM3] <- TK Unit of Measure - Purchasing [UOM3]
          If GC Tr. UoM [UOM] is not equal to VA frm_UnitOfMeasurePurchas [UOM3]
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Tr.UoM, "2709")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Tr.UoM)
          End If
          // ------ ISSUE 251190 - Marília - Controle Recarga Cartuchos 1001 (O6)
          ! If PO TpCatalogo [EV01] is equal to "R"
               ! If Cannot resolve GC  Object: 962 is not equal to("N","S")
               ! OrCannot resolve GC  Object: 963 is not equal to("N","S")
                    ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Recarga(S/N), "5515P")
               ! Else
                    ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Recarga(S/N))
               ! End If
               ! VA frm_QTDnaRBS_F5541062_PQOH [PQOH] = "0"
               ! VA frm_QTDnoFORN_F5541062_SQOH [SQOH] = "0"
               ! F5541062.FetchSingle  [Index 1: AN8,ITM]
               !      FC Address Number [AN8] = TK Address Number [AN8]
               !      GC Short Item No [ITM] = TK Item Number - Short [ITM]
               !      VA frm_QTDnaRBS_F5541062_PQOH [PQOH] <- TK Quantity on Hand - Primary units [PQOH]
               !      VA frm_QTDnoFORN_F5541062_SQOH [SQOH] <- TK Quantity on Hand - in Secondary units [SQOH]
               ! If SV File_IO_Status is not equal to CO SUCCESS
                    ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "554103")
               ! Else
                    ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber)
                    ! If Cannot resolve GC  Object: 962 is equal to "S"
                    ! And Cannot resolve GC  Object: 963 is equal to "S"
                         ! If VA frm_QTDnaRBS_F5541062_PQOH [PQOH] is less than or equal to "0"
                              ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered, "3694")
                         ! Else
                              ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
                         ! End If
                    ! Else
                         ! If Cannot resolve GC  Object: 962 is equal to "S"
                         ! And Cannot resolve GC  Object: 963 is equal to "N"
                              ! If VA frm_QTDnoFORN_F5541062_SQOH [SQOH] is less than or equal to "0"
                                   ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered, "3694")
                              ! Else
                                   ! Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
                              ! End If
                         ! Else
                              ! If Cannot resolve GC  Object: 962 is equal to "N"
                              ! And Cannot resolve GC  Object: 963 is equal to "S"
                                   ! // compra de casco usado (complementar - substitui casco inutilizado)
                                   ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Casco naRBS (S/N), "554105")
                              ! Else
                                   ! If Cannot resolve GC  Object: 962 is equal to "N"
                                   ! And Cannot resolve GC  Object: 963 is equal to "N"
                                        ! // compra de casco usado (vai incrementar estoque)
                                        ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Casco naRBS (S/N), "554104")
                                   ! End If
                              ! End If
                         ! End If
                    ! End If
               ! End If
          ! End If
          // ------
     End If
End If
// ==============================================================
// Obrigatório preenchimento do Local de Entrega (somente 1º linha)
// ==============================================================
// DESABILITADO - TESTAR NO BOTÃO OK
// ==============================================================
// ==============================================================
// ISSUE 6536 - Marília - 09/10/03
// Quando OC Catálogo, não aceitar Quantidade (UORGE1) = zero ou branco
// Valkiria - 30/01/04- VIAGENS-> não aceitar Qtdade (UORGE1) = zero ou branco
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoViagens [EV01] is equal to "1"
     // ==============================================================
     // Issue 6558 - ACERTO DE BUG - Valkiria - 01/12/03
     // Teste: Item Number greater than  blank
     // ==============================================================
     If GC Item Number [UITM] is greater than <Blank>
          If GC Quantity Ordered [UORGE1] is equal to "0"
          Or GC Quantity Ordered [UORGE1] is equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered, "0557")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
          End If
     End If
End If
// -----------------------------------------------------------------------------
// ISSUE 5463 - Marília -10/10/03
// Quando OC Viagens, obrigatório preenchimento dos campos DSC2 e DS40
// DSC2 (não era utilizado) e DS40 é novo na F5543ICO
// ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
//                                          na F5543ICO e GRID
// -----------------------------------------------------------------------------
// ======================================================
// ISSUE 9830 - Obrigatório preenchimento Data Solicitação
// ======================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Description 2 [DSC2] is equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Description 2, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Description 2)
          End If
          If GC Descrição 3 [MDSC] is equal to <Blank>
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 3, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Descrição 3)
          End If
          // ======================================================
          If GC Request Date [DRQJ] is equal to Null Date
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RequestDate, "4980")
          Else
               Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC RequestDate)
          End If
          // ======================================================
     End If
End If
// =====
// -----------------------------------------------------------------------------
//      7065 -   Marilia -     não consiste as linhas canceladas, nem recebidas
// -----------------------------------------------------------------------------
If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
Or GC Next Status [NXTR] is equal to "999"
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, <All Columns>)
End If
//
// -----------------------------------------------------------------------------
// ISSUE 798527 - Marília - Ajuste p/ "erro correto" qdo. não alteram TpLin da P
//                               OC Não Estoque e Serviço (mesmo Menu)
// -----------------------------------------------------------------------------
If SL VersionName is equal to "RBS43X10"
And GC Item Number [UITM] is greater than <Blank>
     If GC Ln Ty [LNTY] is less than or equal to <Blank>
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC LnTy, "5515M")
     End If
End If
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
! If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     ! VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
     ! VA frm_szTypeofData_TYDT [TYDT] = "SE"
     ! V554310A.Select
     !      GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
     !      VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
     !      VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
     ! V554310A.FetchNext
     !      VA frm_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
     !      VA frm_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
     ! If SV File_IO_Status is not equal to CO SUCCESS
          ! Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
     ! Else
          ! F4101.FetchSingle  [Index 2: 2nd Item Number]
          !      GC Item Number [UITM] = TK 2nd Item Number [LITM]
          !      GC Description 1 [DSC1] <- TK Description [DSC1]
          ! Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
          ! Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
          ! Disable Grid(FC Grid,  <Currently Selected Row>, GC LnTy)
     ! End If
! End If
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          GC Short Item No [ITM] <- TK Item Number - Short [ITM]
          GC Item Number [UITM] = TK 2nd Item Number [LITM]
          GC Description 1 [DSC1] <- TK Description [DSC1]
     If VA evt_szLineType_LNTY [LNTY] is equal to "J"
          If GC Item Number [UITM] is not equal to <Blank>
          And GC Item Number [UITM] is not equal to <NULL>
               VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
               VA frm_szTypeofData_TYDT [TYDT] = "SE"
               V554310A.Select
                    GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                    VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                    VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
               V554310A.FetchNext
                    VA frm_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                    VA frm_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
               If SV File_IO_Status is not equal to CO SUCCESS
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "4083")
               Else
                    F4101.FetchSingle  [Index 2: 2nd Item Number]
                         GC Item Number [UITM] = TK 2nd Item Number [LITM]
                         GC Description 1 [DSC1] <- TK Description [DSC1]
                    Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                    Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC LnTy)
               End If
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               If PO cSoFornecedorItem [EV01] is equal to "S"
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
                    VA frm_szTypeofData_TYDT [TYDT] = "FI"
                    V554310A.Select
                         GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                         FC Long Address Number_ALKY [ALKY] = TK Name - Remark [RMK2][F00092.0]
                         VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                         VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
                    V554310A.FetchNext
                         VA frm_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                         VA frm_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E55XML01")
                    Else
                         F4101.FetchSingle  [Index 2: 2nd Item Number]
                              GC Item Number [UITM] = TK 2nd Item Number [LITM]
                              GC Description 1 [DSC1] <- TK Description [DSC1]
                         Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
                         Disable Grid(FC Grid,  <Currently Selected Row>, GC LnTy)
                    End If
               End If
               VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
          End If
     Else
          If GC Item Number [UITM] is not equal to <Blank>
          And GC Item Number [UITM] is not equal to <NULL>
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Inicio
               // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
               If PO cSoFornecedorItem [EV01] is equal to "S"
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    // 3292421 - Giovani Perotto Mesquita - 16/09/19 - Fim
                    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
                    VA frm_szTypeofData_TYDT [TYDT] = "FI"
                    V554310A.Select
                         GC Item Number [UITM] = TK 2nd Item Number [LITM][F4101.0]
                         FC Long Address Number_ALKY [ALKY] = TK Name - Remark [RMK2][F00092.0]
                         VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB][F00092.0]
                         VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT][F00092.0]
                    V554310A.FetchNext
                         VA frm_szSupplementalDatabase_SDB [SDB] <- TK Supplemental Database Code [SDB][F00092.0]
                         VA frm_szTypeofData_TYDT [TYDT] <- TK Type Data [TYDT][F00092.0]
                    If SV File_IO_Status is not equal to CO SUCCESS
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E55XML01")
                    Else
                         F4101.FetchSingle  [Index 2: 2nd Item Number]
                              GC Item Number [UITM] = TK 2nd Item Number [LITM]
                              GC Description 1 [DSC1] <- TK Description [DSC1]
                         Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
                         Disable Grid(FC Grid,  <Currently Selected Row>, GC LnTy)
                    End If
               End If
               VA frm_szItem_UITM [UITM] = GC Item Number [UITM]
          End If
     End If
     GC Ln Ty [LNTY] = VA evt_szLineType_LNTY [LNTY]
End If
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     VA frm_szSupplementalDatabase_SDB [SDB] = "XML"
     VA frm_szTypeofData_TYDT [TYDT] = "TP"
     VA frm_szNameRemark_RMK [RMK] = GC Ln Ty [LNTY]
     F00092.Select  [Index 2: SuppDB]
          VA frm_szSupplementalDatabase_SDB [SDB] = TK Supplemental Database Code [SDB]
          VA frm_szTypeofData_TYDT [TYDT] = TK Type Data [TYDT]
          VA frm_szNameRemark_RMK [RMK] = TK Name - Remark [RMK]
     F00092.FetchNext  [Index 2: SuppDB]
          VA frm_szNameRemark_RMK [RMK] <- TK Name - Remark [RMK]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC LnTy, "E55XML02")
     End If
End If
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     If PO cRequisitantes_EV01 [EV01] is equal to "S"
          VA frm_szAddressType1_AT1 [AT1] = <NULL>
          ! V550092B.Select
          !      GC Requisitante [ADD2] = TK User ID [USER][F0092.0]
          ! V550092B.FetchNext
          !      VA frm_szAddressType1_AT1 [AT1] <- TK Search Type [AT1][F0101.0]
          F0092.Select  [Index 1: User]
               GC Requisitante [ADD2] = TK User ID [USER]
          F0092.FetchNext  [Index 1: User]
               VA evt_szAddressNumber_AN8 [AN8] <- TK Address Number [AN8]
          F0101.FetchSingle  [Index 1: Address #]
               VA evt_szAddressNumber_AN8 [AN8] = TK Address Number [AN8]
               VA frm_szAddressType1_AT1 [AT1] <- TK Search Type [AT1]
          If VA frm_szAddressType1_AT1 [AT1] is not equal to "E"
               Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Requisitante, "E55XML03")
          End If
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/07/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Row is Exited
Event GUID: 44e93475-e2f2-45d6-ae4e-1ee68b6d8c47
=============================================
Enable Control(HC &Parts List)
//
// SAR# 8352393
//
// If the selected supplier has an evaluated receipt value of "N" we will
// never allow that value to be over-ridden
//
// SAR 8715799 - code validation for the GC ER Field was being done for a
// blank line which gives an error when you have a blank value in UDC 41/9.
! If VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] is equal to "N"
     ! Disable Grid(FC Grid,  <All Rows>, GC ER)
! Else
     ! Enable Grid(FC Grid,  <All Rows>, GC ER)
! End If
//
// End SAR# 8352393

=============================================
Form: Order Detail - W4310A
Object: FC Grid
Event: Row Exit & Changed - Asynch
Event GUID: f57df3fc-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_ShortItem [ITM]
evt_ErrorCode [DTAI]
evt_PrimaryUOM [UOM1]
evt_ERRC_ErrorFlag [ERRC]
evt_F4101Ptr [GENLNG]
evt_cLineNumberExists_EV01 [EV01]
evt_mnAssetItemNumber_NUMB [NUMB]
evt_szAssetItemNumber_ASID [ASID]
evt_mnCostRuleSelection_AN801 [AN8]
evt_CompanyKeyRelated [RKCO]
evt_RelatedPoSoLineNo [RLLN]
evt_RelatedPoSoNumber [RORN]
evt_RelatedOrderType [RCTO]
evt_szOrigGCLineType_LNTY [LNTY]
evt_mnBlanketUnitsOpenQty_UOPN [UOPN]
evt_mnBlanketReleaseQty_UORG [UORG]
evt_mnBlanketPrimQtyOrder_PQOR [PQOR]
evt_mnBlanketShortItemNo_ITM [ITM]
evt_mnBlanketSupplierNo_AN8 [AN8]
evt_szErrorMessageID_DTAI [DTAI]
evt_mnBlanketUnitCost_PRRC [PRRC]
evt_szBlanketUnitOfMeasure_UOM [UOM]
evt_cBlanketFoundIndictor_EV01 [EV01]
evt_cOtherQuantity12_OTQY [OTQY]
evt_idFreeGoodCacheCursor [GENLNG]
evt_szFGErrorMessageID [DTAI]
evt_szAssetItemNumberHold_ASID [ASID]
evt_TempVolume_ITVL [ITVL]
evt_TempWeight_ITWT [ITWT]
evt_cKitComponentYorN_EV01 [EV01]
evt_cPOBasedOnDate_POBD [POBD]
evt_OrderSuffix_SFXO [SFXO]
evt_ReverseSignFlag_EV01 [EV01]
evt_ShortItemNumber_ITEMNUM [ITEMNUM]
evt_cPMPNEnabled_PNYN [PNYN]
evt_szSupplementalDatabase_SDB [SDB]
evt_szTypeofData_TYDT [TYDT]
evt_szAcctNoInputMode_ANI [ANI]
evt_szXML_LNTY [LNTY]
----------------------------------------
//
// 02/1/2008  TB9051701  8723609 The grid should not get locked when editline
// returns an error .
// 03/09/2010  AG9056158  8953260  OD Credit is positive
// 06/04/2010 KK9056297 8937607 - Not retireve master info
// 09/27/2010  AG9056158  8958632 - P4310 - "Invalid Line Type" er
// 28/09/10 NB9064959 8943681 - Credit LIne Changes to Positiv
// 06/12/2010   AG9056158  8970996 - Not accepting order with UOM o
//
// ===============================================
// SAR 8906579
GC Adj. Schedule [ASN] = VA grd_ASN_AdjSchedule [ASN]
// Begin BUG# 11654720
! // Begin SAR # 8938394
! VA grd_TempQtyOrdered_UORGE1 [UORGE1] = GC Quantity Ordered [UORGE1]
! // End SAR # 8938394
// End BUG# 11654720
// ---------------------------------------------------------------------------
//
// Add this code in the Start of this event. If the Column Exit (Ext Cost)
// event runs, then grd_cExtCostContLogicRun_EVO1 is set as 1. But if we are
// importing a line from excel sheet, the logic on controls does not run. Only
// the Row exit and change vent run. As the extended cost control exit logic
// did not ran for importing, price override flag was not set. So we are
// setting the flag as 1 here if it the line is imported from Excel Sheet.
// ---------------------------------------------------------------------------
//
// SAR 6386830 Begin
// Begin SAR 11051893
// Removed the condition for Add Mode
// This code will only be called when Col Exit of Ext Cost,Quantity Ordered
// and Unit Cost have not executed
VA evt_szXML_LNTY [LNTY] = GC Ln Ty [LNTY]
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO UPDATE_MODE
     If VA grd_cExtCostContLogicRun_EV01 [EV01] is not equal to "1"
     And VA grd_cUniCostContLogicRun_EV01 [EV01] is not equal to "1"
     And VA frm_QtyChanged_EV01 [EV01] is not equal to "1"
          If GC Extended Cost [AEXPE1] is not equal to GC TOT1:Previous Line Total(wf) [TOT1]
               If GC Extended Cost [AEXPE1] is not equal to "0"
                    GC PROV:Price Override - (wf) [PROV] = "1"
                    VA grd_AREV_AdjRevisionLevel [AREV] = [VA grd_AREV_AdjRevisionLevel [AREV]]+1
               Else
                    GC PROV:Price Override - (wf) [PROV] = <Blank>
                    If GC Unit Cost [UPAX] is equal to "0"
                         VA grd_cPreservePOEManualAdj_EV01 [EV01] = "1"
                    End If
               End If
               // Begin SAR 11051893
          Else
               // Begin SAR 11880301
               If PO cAgreementSearchMethod [SCH1] is not equal to <Blank>
               And PO cAgreementSearchMethod [SCH1] is not equal to <NULL>
               And GC Objeto de Custo 1 [DMCT] is not equal to <Blank>
               And GC Objeto de Custo 1 [DMCT] is not equal to <NULL>
                    // End SAR 11880301
                    GC PROV:Price Override - (wf) [PROV] = <Blank>
                    // Begin SAR 11880301
               End If
               // End SAR 11880301
               // End SAR 11051893
          End If
     End If
     // Begin SAR 11051893
End If
// End SAR 11051893
// SAR 6386830 End
//
// ==========================================================
//
VA evt_cLineNumberExists_EV01 [EV01] = <Blank>
//
// ==========================================================
// ---------------------------------------------------------------------------
// If product variance is activated and matrix form should be shown due to
// Processing Option, then get item/branch information related to matrix
// parent.
// ---------------------------------------------------------------------------
//
// SAR 8715799 - Moved the code for SAR 8352393 from row is exited to here.
If VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] is equal to "N"
     Disable Grid(FC Grid,  <All Rows>, GC ER)
Else
     Enable Grid(FC Grid,  <All Rows>, GC ER)
End If
// ==============================================================
// SAR 5228354  Product Variance Enhancement Begin
VA frm_cSkipEditLine_EV01 [EV01] = "0"
//  SAR 7310431 Add if condition
If VA frm_cProductVarianceFlag_MEOW [MEOW] is equal to "1"
And PO cInventoryParent [SEGB] is not equal to "1"
And GC Item Number [UITM] is not equal to <Blank>
And GC Item Number [UITM] is not equal to <NULL>
     //
     // 8749948- Branch plant was not getting passed into get item master
     
     // information and hence the correct primary item number was not getting
     
     // fetched
     //
     If GC Branch/ Plant [MCU] is equal to <Blank>
     Or GC Branch/ Plant [MCU] is equal to <NULL>
     Or GC Branch/ Plant [MCU] is equal to <NULL>
          GC Branch/ Plant [MCU] = FC Branch/Plant1 [MCU]
     End If
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
          "1" -> cSuppressErrorMessage [EV01]
          GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
          VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
          VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
          VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
     If VA grd_cMatrixControlled_MIC [MIC] is equal to "1"
          VA frm_szMatrixParent_ITM [ITM] = GC Short Item No [ITM]
          VA frm_szMatrixTemplate_TMPL [TMPL] = VA grd_szMatrixTemplate_TMPL [TMPL]
          VA frm_szMatrixSegment_SEG1 [SEG1] = VA grd_szMatrixSegment_SEG1 [SEG1]
          VA frm_szMatrixUoM_UOM [UOM] = GC Tr. UoM [UOM]
          VA frm_mnMatrixQuantity_QTY [QTY] = GC Quantity Ordered [UORGE1]
          Hide Grid Row(FC Grid,  <Currently Selected Row>)
          //
     End If
End If
// SAR 5228354  End
// ===============================================================
//
//  SAR    5666899    Begin
VA evt_szOrigGCLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
If GC Ln Ty [LNTY] is equal to <Blank>
     VA frm_szLineType_LNTY [LNTY] = PO szLineType [LNTY]
     //
     // ---------------------------------------------------------------------------
     //  Assign PO szLineType_LNTY to GC LnTy.  If PO szLineType is a text line
     // type, no other fields need to be entered which would trigger Edit Line.
     // ---------------------------------------------------------------------------
     //
     GC Ln Ty [LNTY] = PO szLineType [LNTY]
Else
     VA frm_szLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
End If
//
// SAR 8678730 - Moved this assign to below the check for GC = blank (directly
// above this assign) - This variable was blanking out GC LnTy in the IF
// statement below if the LnTy was not a text line since GC LnTy was
// potentially still blank.
VA evt_szOrigGCLineType_LNTY [LNTY] = GC Ln Ty [LNTY]
//
If VA frm_szLineType_LNTY [LNTY] is not equal to <Blank>
     If VA frm_szPrevLineType_LNTY [LNTY] is not equal to VA frm_szLineType_LNTY [LNTY]
          // //BUG# 11870630 - UPDATE TRANS UOM NOT CHANGING PURCH UOM Begin
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               VA frm_szLineType_LNTY [LNTY] -> szLineType [LNTY]
               VA frm_cInInterfaceFlag_IVI [IVI] <- cInventoryInterface [IVI]
               VA frm_cTextYN_TXYN [TXYN] <- cTextLine [TXYN]
          // //BUG#11870630 – End
          VA frm_szPrevLineType_LNTY [LNTY] = VA frm_szLineType_LNTY [LNTY]
          //
          // ---------------------------------------------------------------------------
          //   SAR   5666899  - If line type is not a text line type, set the GC LnTy
          // back to VA szOrigGCLineType.
          // ---------------------------------------------------------------------------
          //
          If VA frm_cTextYN_TXYN [TXYN] is not equal to "Y"
               GC Ln Ty [LNTY] = VA evt_szOrigGCLineType_LNTY [LNTY]
          End If
     Else
          If VA frm_cTextYN_TXYN [TXYN] is not equal to "Y"
               GC Ln Ty [LNTY] = VA evt_szOrigGCLineType_LNTY [LNTY]
          End If
     End If
End If
// ==============================================================
// AP1182 por Gindri em 25/11/99 e 26/11/99
// Objetiva proteger os campos descrição 1 e 2
// da tela W4310A - Detalhes do Pedido.
// ==============================================================
//
If PO szLineType [LNTY] is not equal to "S"
And GC Item Number [UITM] is less than or equal to <Blank>
And GC Account Number [ANI] is greater than <Blank>
     Stop Processing
End If
// ==============================================================
// Obrigatório preenchimento do Requisitante
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          // -----------------------------------------------------------------------------
          //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
          // -----------------------------------------------------------------------------
          If PO szStatusCodeLast [LTTR] is equal to PO UltimoStatusPermitido [LTTR]
          And GC Requisitante [ADD2] is less than or equal to <Blank>
          And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
          And GC Next Status [NXTR] is not equal to "999"
               Stop Processing
          End If
     End If
End If
// ==============================================================
// ISSUE 5463 - Marília - Obrigatório Requisitante quando OpcaoViagens = 1
// ==============================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          // -----------------------------------------------------------------------------
          //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
          // -----------------------------------------------------------------------------
          If GC Requisitante [ADD2] is less than or equal to <Blank>
          And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
          And GC Next Status [NXTR] is not equal to "999"
               Stop Processing
          End If
     End If
End If
// ==============================================================
// ISSUE 6536 - Marília - 09/10/03
// Quando OC Catálogo, não aceitar Quantidade (UORGE1) = zero ou branco
// Valkiria - 30/01/04- VIAGENS-> não aceitar Qtdade (UORGE1) = zero ou branco
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Quantity Ordered [UORGE1] is equal to "0"
          Or GC Quantity Ordered [UORGE1] is equal to <Blank>
               // -----------------------------------------------------------------------------
               //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
               If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
               And GC Next Status [NXTR] is not equal to "999"
                    // -----------------------------------------------------------------------------
                    Stop Processing
               End If
          End If
     End If
End If
// -----------------------------------------------------------------------------
// ISSUE 5463 - Marília -10/10/03
// Quando OC Viagens, obrigatório preenchimento dos campos DSC2 e DS40
// DSC2 (não era utilizado) e DS40 é novo na F5543ICO
// ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
//                                          na F5543ICO e GRID
// -----------------------------------------------------------------------------
// ======================================================
// ISSUE 9830 - Obrigatório Data Solicitação p/Viagens
// ======================================================
If PO OpcaoViagens [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          If GC Description 2 [DSC2] is equal to <Blank>
          Or GC Descrição 3 [MDSC] is equal to <Blank>
          Or GC Request Date [DRQJ] is equal to Null Date
               // -----------------------------------------------------------------------------
               //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
               If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
               And GC Next Status [NXTR] is not equal to "999"
                    // -----------------------------------------------------------------------------
                    Stop Processing
               End If
          End If
     End If
End If
// ==============================================================
// Verifica se Item/Fornecedor tem Catálogo de Preços
// ==============================================================
// ==============================================================
// Obrigatório preenchimento da Data de Entrega
// ==============================================================
If PO OpcaoDataPrometida_ [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          // -----------------------------------------------------------------------------
          //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
          // -----------------------------------------------------------------------------
          If GC Promised Delivery [PDDJ] is less than or equal to Null Date
          And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
          And GC Next Status [NXTR] is not equal to "999"
               Stop Processing
          End If
     End If
End If
// ==============================================================
// Ordem Compra Catálogo - PU UoM deve ser igual a Tr.UoM - ISSUE 6013
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
     If GC Item Number [UITM] is greater than <Blank>
          F4101.FetchSingle  [Index 2: 2nd Item Number]
               GC Item Number [UITM] = TK 2nd Item Number [LITM]
               VA frm_UnitOfMeasurePurchas [UOM3] <- TK Unit of Measure - Purchasing [UOM3]
          // -----------------------------------------------------------------------------
          //  7065 -   Marilia -  ajuste IF p/não considerar  linhas canceladas/recebidas
          // -----------------------------------------------------------------------------
          If GC Tr. UoM [UOM] is not equal to VA frm_UnitOfMeasurePurchas [UOM3]
          And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
          And GC Next Status [NXTR] is not equal to "999"
               Stop Processing
          End If
     End If
End If
// SAR 6284471 Added a check for parts of account.
// ---------------------------------------------------------------------------
//
// SAR 7552861 BEGIN
// SAR 8892664  -  Commented the if condition for checking Account Number
! If GC Account Number [ANI] is equal to GC Previous Account Number [ANI]
     If GC Business Unit [OMCU] is not equal to GC Previous Cost Center [OMCU]
     Or GC Obj Acct [OBJ] is not equal to GC Previous Obj Acct [OBJ]
     Or GC Sub  [SUB] is not equal to GC Previous Sub [SUB]
          GC Account Number [ANI] = <NULL>
     End If
! End If
// SAR 7552861 END
If GC Account Number [ANI] is equal to or empty <Blank>
And GC Unit Cost [UPAX] is equal to "0"
And GC Quantity Ordered [UORGE1] is equal to "0"
And GC Extended Cost [AEXPE1] is equal to "0"
And GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
And GC Item Number [UITM] is equal to <Blank>
And VA frm_cTextYN_TXYN [TXYN] is not equal to "Y"
And GC Sub  [SUB] is equal to <Blank>
And GC Obj Acct [OBJ] is equal to <Blank>
And GC Business Unit [OMCU] is equal to <Blank>
     Stop Processing
End If
//
//
// ---------------------------------------------------------------------------
// If the user has made a selection from a catalog or template with
// out executing BeginDoc properly, it could be the case that RowIsExited will
// be called before BeginDoc() executes correctly.  In view of this, stop
// execution until BeginDoc() has been properly executed.  SAR 2076236  MA
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
     If VA frm_RecordInHeaderWkFile [EV01] is not equal to "1"
          Stop Processing
     End If
End If
//
// ---------------------------------------------------------------------------
//     Skip processing the grid row if it is protected due to the next status
//     code being at or beyond the processing option status.
// ---------------------------------------------------------------------------
//
If GC EV03-ProtectedLine(1/0) [EV03] is equal to "1"
     Stop Processing
End If
//
// ---------------------------------------------------------------------------
//     Skip processing if the line was cancelled and it never existed in the
//     F4311.
// ---------------------------------------------------------------------------
//
If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
And GC EV01:Record in Detail W.File (wf) [EV01] is equal to "0"
And GC EV04:Skip Line/Cancelled (wf) [EV04] is equal to "1"
     Stop Processing
End If
//
// ---------------------------------------------------------------------------
//   Because the supplier currency has been resolved ( as of 7/21/97 ), if
//   blank, default company currency to transaction currency.
// ---------------------------------------------------------------------------
//
If FC Currency Code [CRCD] is equal to or empty <Blank>
     FC Currency Code [CRCD] = FC To Currency Code [CRDC]
End If
//
// ---------------------------------------------------------------------------
//    Load defaults to the line level from the header level if they are
//     blank on the detail line.
// ---------------------------------------------------------------------------
//
If GC Branch/ Plant [MCU] is equal to or empty <Blank>
     GC Branch/ Plant [MCU] = FC Branch/Plant1 [MCU]
End If
//
// ==============================================================
// ISSUE 3233 - RBS - 26/07/2002
// ==============================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     If GC Ship To Number [SHAN] is equal to or empty "0"
          GC Ship To Number [SHAN] = FC Ship To [SHAN]
     End If
     If GC Carrier Number [ANCR] is equal to "0"
          GC Carrier Number [ANCR] = FC Carrier Number [ANCR]
     End If
     If GC F H [FRTH] is equal to <Blank>
          GC F H [FRTH] = FC Freight Handling Code [FRTH]
     End If
     // ==============================================================
     // ISSUE 5876 - RBS - 16/04/2003
     // ==============================================================
     If GC Local Entrega [ADD1] is equal to <Blank>
          GC Local Entrega [ADD1] = FC LocalEntrega [ADD1]
     End If
End If
// ==============================================================
// ---------------------------------------------------------------------------
//  Get data dictionary default value for MCU.
// ---------------------------------------------------------------------------
//
//  SAR  5878496  Begin
If GC Branch/ Plant [MCU] is equal to or empty <Blank>
     GetDataDictionaryDefinition(B9800420.GetDataDictionaryDefinition)
          "MCU" -> szDataDictionaryItem [DTAI]
          "1" -> cSuppressErrorMessage [EV01]
          UNDEFINED <> szSystemCode [SY]
          UNDEFINED <> szReportingCode [RT]
          UNDEFINED <> szItemDescription [DSCR]
          UNDEFINED <> mnLength [DTAS]
          UNDEFINED <> mnDecimals [DTAD]
          UNDEFINED <> szEditRule [VC07A]
          UNDEFINED <> szNextNumberingSystem [VC05A]
          UNDEFINED <> mnNextNumberingIndexNo [NNIX]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> szErrorMessageID [DTAI]
          UNDEFINED <> mnDisplayDecimals [MATH01]
          UNDEFINED <> mnDataType [MATH02]
          GC Branch/ Plant [MCU] <- szDefaultValString [DVAL]
          UNDEFINED <> cDefaultValChar [EV02]
          UNDEFINED <> mnDefaultValNumeric [MATH03]
          UNDEFINED <> szEditRuleParameterOne [ER01]
          UNDEFINED <> szEditRuleParameterTwo [ER02]
End If
//  SAR  5878496  End
//
//
// ---------------------------------------------------------------------------
// Perform a test to see whether data has been imported.  If it has, set price
// override flag.
// ---------------------------------------------------------------------------
//
If GC ACTN:Action Code (wf) [ACTN] is equal to <Blank>
And GC PRRCE1:Old Unit Price (wf) [PRRCE1] is equal to "0"
And GC Unit Cost [UPAX] is not equal to "0"
     GC PROV:Price Override - (wf) [PROV] = "1"
End If
//
// ---------------------------------------------------------------------------
//     If this is a new line then the Action Code needs to be 'A' for add
//    Set this as a default value if the action code is blank.
// ---------------------------------------------------------------------------
//
If GC ACTN:Action Code (wf) [ACTN] is equal to or empty <Blank>
     GC ACTN:Action Code (wf) [ACTN] = "A"
End If
//
// ---------------------------------------------------------------------------
//   If this is a new line, resolve the SFXO Change Order.
// ---------------------------------------------------------------------------
//
If GC Change Order [SFXO] is equal to or empty <Blank>
And FC Change Order [SFXO] is not equal to "*"
And FC Change Order [SFXO] is not equal to <Blank>
     GC Change Order [SFXO] = FC Change Order [SFXO]
End If
//
// ---------------------------------------------------------------------------
//   If the Add000DetailLine_EV01 is '1', this means that the Detail
//   Revision form was called from the Header Revisions form and header values
//   were changed.
// ---------------------------------------------------------------------------
//
//  SAR    5703602    Begin
If VA frm_Add000DetailLine_EV01 [EV01] is equal to "1"
     If GC Change Order [SFXO] is equal to <Blank>
          GC Change Order [SFXO] = "000"
     End If
End If
//  SAR    5703602    End
//
//
// ---------------------------------------------------------------------------
//     Set last and next status of the Purchase Order as specified in the
//     processing options.
// ---------------------------------------------------------------------------
//
If GC Last Status [LTTR] is equal to or empty <Blank>
     GC Last Status [LTTR] = PO szStatusCodeLast [LTTR]
End If
//
If GC Next Status [NXTR] is equal to or empty <Blank>
     If PO szOverrideNextStatus [NXTR] is not equal to <Blank>
          GC Next Status [NXTR] = PO szOverrideNextStatus [NXTR]
     End If
End If
//
//
// ---------------------------------------------------------------------------
//    Assign default dates to the line if they have been left blank
// ---------------------------------------------------------------------------
//
If GC Request Date [DRQJ] is equal to Null Date
And FC Requested [DRQJ] is not equal to SL DateToday
     GC Request Date [DRQJ] = FC Requested [DRQJ]
End If
//
//
// ---------------------------------------------------------------------------
// Check for Null Date.
// ---------------------------------------------------------------------------
//
// MM7128091 SAR 5248582 - Begin
If GC Promised Delivery [PDDJ] is equal to Null Date
     //
     // ---------------------------------------------------------------------------
     // Promised Delivery Date in the grid should always default from
     // Header Requested Date if Header Scheduled Pick Date is empty
     // ---------------------------------------------------------------------------
     //
     // SAR 4829182  Begins
     // SAR 8924507 - Modified the condition
     If FC Scheduled Pick [PDDJ] is not equal to Null Date
     And FC Scheduled Pick [PDDJ] is greater than or equal to SL DateToday
          GC Promised Delivery [PDDJ] = FC Scheduled Pick [PDDJ]
     Else
          GC Promised Delivery [PDDJ] = GC Request Date [DRQJ]
     End If
     // SAR 4829182  Ends
     //
     // SAR# - 7384879 For Sub contract orders promised delivery date would be
     // hidden. So changing the promised delivery date to scheduled pick or request
     // date when the promised delivery is less than the order date.
Else
     If PO cJobProject [EV01] is equal to ("1","2")
     And GC Promised Delivery [PDDJ] is less than FC Order Date [TRDJ]
          If FC Scheduled Pick [PDDJ] is not equal to Null Date
               GC Promised Delivery [PDDJ] = FC Scheduled Pick [PDDJ]
          Else
               GC Promised Delivery [PDDJ] = GC Request Date [DRQJ]
          End If
     End If
End If
// MM7128091 SAR 5248582 - End
//
If FC G/L Date [DGL] is equal to Null Date
     FC G/L Date [DGL] = date_today()
End If
//
// ---------------------------------------------------------------------------
// Copy Cancel Date form Header only in ADD mode
// ---------------------------------------------------------------------------
//
// SAR 4443394  Begins
If GC ACTN:Action Code (wf) [ACTN] is equal to "1"
Or GC ACTN:Action Code (wf) [ACTN] is equal to "A"
     //
     If GC G/L Date [DGL] is equal to Null Date
          GC G/L Date [DGL] = FC G/L Date [DGL]
     End If
     //
End If
// SAR 4443394  Ends
//
// ---------------------------------------------------------------------------
// Rehook Cancel Date from Business View to Grid
// ---------------------------------------------------------------------------
//
// SAR 4985741 Begins
If GC Cancel Date [CNDJ] is equal to Null Date
     GC Cancel Date [CNDJ] = FC Cancel Date [CNDJ]
End If
// SAR 4985741 Ends
//
If GC Effective Date [PEFJ] is equal to Null Date
     GC Effective Date [PEFJ] = FC Effective Date [PEFJ]
End If
//
If GC Actual Ship Date [ADDJ] is equal to Null Date
     GC Actual Ship Date [ADDJ] = FC Phyiscal Comp. [ADDJ]
End If
//
// ---------------------------------------------------------------------------
//     Assign other default fields if they were left blank
// ---------------------------------------------------------------------------
//
If GC Account Number [ANI] is equal to or empty <Blank>
     GC Account Number [ANI] = FC Account Number [ANI]
End If
//
If GC Description 1 [DSC1] is equal to <Blank>
     GC Description 1 [DSC1] = FC Description [DSC1]
End If
//
If GC Subledger [SBL] is equal to or empty <Blank>
     GC Subledger [SBL] = FC Subledger [SBL]
End If
//
If GC Sub Type [SBLT] is equal to or empty <Blank>
     GC Sub Type [SBLT] = FC Subledger Type [SBLT]
End If
//
If GC Cost Rule [PDP5] is equal to or empty <Blank>
     GC Cost Rule [PDP5] = FC Landed Cost Rule [LANC]
End If
//
If GC Report Code 1 [PDP1] is equal to or empty <Blank>
     GC Report Code 1 [PDP1] = FC Cat Code 1 [PDP1]
End If
//
If GC Objeto de Custo 2 [PDP2] is equal to or empty <Blank>
     GC Objeto de Custo 2 [PDP2] = FC Cat Code 2 [PDP2]
End If
//
If GC Objeto de Custo 3 [PDP3] is equal to or empty <Blank>
     GC Objeto de Custo 3 [PDP3] = FC Cat Code 3 [PDP3]
End If
//
If GC Objeto de Custo 4 [PDP4] is equal to or empty <Blank>
     GC Objeto de Custo 4 [PDP4] = FC Cat Code 4 [PDP4]
End If
//
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GC Business Unit [OMCU] = FC Project Cost Center [OMCU]
End If
//
// ---------------------------------------------------------------------------
//  Get data dictionary default value for OMCU.
// ---------------------------------------------------------------------------
//
//  SAR  5878496 Begin
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GetDataDictionaryDefinition(B9800420.GetDataDictionaryDefinition)
          "OMCU" -> szDataDictionaryItem [DTAI]
          "1" -> cSuppressErrorMessage [EV01]
          GC Business Unit [OMCU] <- szDefaultValString [DVAL]
End If
//  SAR  5878496  End
//
If GC Obj Acct [OBJ] is equal to or empty <Blank>
     GC Obj Acct [OBJ] = FC Object Account [OBJ]
End If
//
If GC Sub  [SUB] is equal to or empty <Blank>
     GC Sub  [SUB] = FC Subsidiary [SUB]
End If
//
// ---------------------------------------------------------------------------
// SAR# 5509391 - MPMPurchased Items
// ---------------------------------------------------------------------------
//
If FI mnProjectNumber [PRJM] is not equal to "0"
And GC Project Number [PRJM] is equal to "0"
     GC Project Number [PRJM] = FC Project Number [PRJM]
     // SAR 8942498 - Begin
     If GC Subledger [SBL] is equal to or empty <Blank>
          GC Subledger [SBL] = [FI mnTaskOrderNumber [DOCO]]
     End If
     If GC Sub Type [SBLT] is equal to or empty <Blank>
          GC Sub Type [SBLT] = "W"
     End If
     // SAR 8942498 - End
End If
//
//
// SAR #8352393
// This code was not allowing the correct header value to populate the grid
! If SV Form_ Mode is equal to CO ADD_MODE
     ! If GC E R [AVCH] is equal to <Blank>
          ! GC E R [AVCH] = VA frm_c_ERSFlag [EV01]
     ! End If
     // End SAR#8352393
     //
     // SAR 5302180
     If GC S M [CRMD] is equal to <Blank>
     And VA frm_DtlSendMtdChanged_CRMD [CRMD] is not equal to "1"
     And VA frm_DtlSendMtdChanged_CRMD [CRMD] is not equal to <NULL>
          GC S M [CRMD] = VA frm_cSendMethod_CRMD [CRMD]
     End If
     // SAR 5302180
     //
! Else
     If GC ACTN:Action Code (wf) [ACTN] is equal to "A"
     And GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
          GC S M [CRMD] = BC Send Method (F4301.0) [CRMD]
     End If
! End If
//
//    BUG# 11904731 - PMPN Enhancements - Begin
// Default the Production Number if called from PMPN Workbench
If VA frm_cPMPNInstalled_EV01 [EV01] is equal to "1"
     If GC Production Number [PMPN] is equal to or empty <Blank>
     Or GC Production Number [PMPN] is equal to <NULL>
          If SV Form_ Mode is equal to CO ADD_MODE
          And VA frm_szProductionNoFromWB_PMPN [PMPN] is not equal to <Blank>
          And VA frm_szProductionNoFromWB_PMPN [PMPN] is not equal to <NULL>
          And VA grd_cProdNoChanged_EV01 [EV01] is not equal to "1"
               GC Production Number [PMPN] = VA frm_szProductionNoFromWB_PMPN [PMPN]
          End If
     End If
End If
//    BUG# 11904731 - PMPN Enhancements - End
//
// ---------------------------------------------------------------------------
//     Call the Purchase Order Edit Line for processing.
// ---------------------------------------------------------------------------
//
// ---------------------------------------------------------------------------
// Added condition to check for 'T' (text line) line type.  SAR 2433408 KH
// SAR 6284471 Added a check for parts of account.
// ---------------------------------------------------------------------------
//
If GC Account Number [ANI] is equal to or empty <Blank>
And GC Unit Cost [UPAX] is equal to "0"
And GC Quantity Ordered [UORGE1] is equal to "0"
And GC Item Number [UITM] is equal to or empty <Blank>
And GC Extended Cost [AEXPE1] is equal to "0"
And GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
And VA frm_cTextYN_TXYN [TXYN] is not equal to "Y"
And GC Business Unit [OMCU] is equal to <Blank>
And GC Sub  [SUB] is equal to <Blank>
And GC Obj Acct [OBJ] is equal to <Blank>
     Stop Processing
Else
     //
     If GC Line Number [LNID] is not equal to "0"
          VA evt_cLineNumberExists_EV01 [EV01] = "1"
     End If
     //
     // ---------------------------------------------------------------------------
     // Initialize the temporary variables to the GCs in the add mode
     // ---------------------------------------------------------------------------
     //
     // SAR 4700098, 5455688 Begins
     //
     // Begin SAR # 8938394
     // Begin BUG# 11654720
     If SV Form_ Mode is equal to CO UPDATE_MODE
     Or SV Form_ Mode is equal to CO ADD_MODE
          // End BUG# 11654720
          // End SAR # 8938394
          VA grd_TempWeightUOM_WTUM [WTUM] = GC Wt UoM [WTUM]
          VA grd_TempVolumeUOM_VLUM [VLUM] = GC Vol  UoM [VLUM]
          //
          // ---------------------------------------------------------------------------
          // If the Transaction UOM changes, recalculate the extended weight.
          // ---------------------------------------------------------------------------
          //
          // SAR #5857249 begin
          If GC Tr. UoM [UOM] is not equal to VA grd_TempTransactionUOM_TRUM [TRUM]
          And GC Tr. UoM [UOM] is not equal to <Blank>
          And GC Tr. UoM [UOM] is not equal to <NULL>
               VA frm_TempUOMChangeFlag_EV01 [EV01] = "1"
               VA grd_TempExtendedWeight_ITWT [ITWT] = "0"
               // SAR 8352705 Begin
               VA grd_TempExtendedVolume_ITVL [ITVL] = "0"
               // SAR 8352705 End
               // BUG# 11870630 - UPDATE TRANS UOM NOT CHANGING PURCH UOM Begin
               If PO szUnitOfMeasureSelection [VL02] is equal to <Blank>
               And VA frm_cInInterfaceFlag_IVI [IVI] is equal to "A"
                    GC Pu. UoM [UOM3] = GC Tr. UoM [UOM]
               End If
               // BUG#11870630 - End
          Else
               VA grd_TempExtendedWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
               // SAR 8352705 Begin
               VA grd_TempExtendedVolume_ITVL [ITVL] = GC Extended Volume [ITVL]
               // SAR 8352705 End
          End If
          //
          // Begin SAR # 8938394
          //
          If GC Wt UoM [WTUM] is not equal to VA grd_TempWeightUOM_WTUM [WTUM]
               VA grd_TempWeightUOM_WTUM [WTUM] = GC Wt UoM [WTUM]
               VA frm_TempUOMChangeFlag_EV01 [EV01] = "1"
               VA grd_TempExtendedWeight_ITWT [ITWT] = "0"
               // SAR 8352705 Begin
               VA grd_TempExtendedVolume_ITVL [ITVL] = "0"
               // SAR 8352705 End
          End If
          If GC Tr. UoM [UOM] is not equal to VA grd_TempTransactionUOM_TRUM [TRUM]
               VA grd_TempTransactionUOM_TRUM [TRUM] = GC Tr. UoM [UOM]
               VA frm_TempUOMChangeFlag_EV01 [EV01] = "1"
               // Begin BUG# 11654720
               If VA grd_cManualOverrideExtWt_EV01 [EV01] is not equal to "1"
                    VA grd_TempExtendedWeight_ITWT [ITWT] = "0"
               End If
               // SAR 8352705 Begin
               If VA grd_cManualOverrideExtVl_EV01 [EV01] is not equal to "1"
                    VA grd_TempExtendedVolume_ITVL [ITVL] = "0"
               End If
               // End BUG# 11654720
               // SAR 8352705 End
          End If
          If GC Vol  UoM [VLUM] is not equal to VA grd_TempVolumeUOM_VLUM [VLUM]
               VA grd_TempVolumeUOM_VLUM [VLUM] = GC Vol  UoM [VLUM]
               VA frm_TempUOMChangeFlag_EV01 [EV01] = "1"
               VA grd_TempExtendedWeight_ITWT [ITWT] = "0"
               // SAR 8352705 Begin
               VA grd_TempExtendedVolume_ITVL [ITVL] = "0"
               // SAR 8352705 End
          End If
          If GC Quantity Ordered [UORGE1] is not equal to VA grd_TempQtyOrdered_UORGE1 [UORGE1]
               VA frm_TempUOMChangeFlag_EV01 [EV01] = "1"
               // Begin BUG# 11654720
               If VA grd_cManualOverrideExtWt_EV01 [EV01] is not equal to "1"
                    VA grd_TempExtendedWeight_ITWT [ITWT] = "0"
               End If
               // SAR 8352705 Begin
               If VA grd_cManualOverrideExtVl_EV01 [EV01] is not equal to "1"
                    VA grd_TempExtendedVolume_ITVL [ITVL] = "0"
               End If
               // End BUG# 11654720
               // SAR 8352705 End
          End If
          //
          // SAR 8970996 Begin
          ! VA grd_TempTransactionUOM_TRUM [TRUM] = GC Tr. UoM [UOM]
          // SAR 8970996 End
          // SAR #5857249 end
          //
     End If
     // SAR 8970996 Begin
     VA grd_TempTransactionUOM_TRUM [TRUM] = GC Tr. UoM [UOM]
     // SAR 8970996 End
     // End SAR # 8938394
     //
     // SAR 4700098, 5455688 Ends
     //
     // SAR 4356400  Begins
     // SAR 4700098 Begins
     If GC Extended Weight [ITWT] is not equal to VA grd_TempExtendedWeight_ITWT [ITWT]
     And GC Extended Weight [ITWT] is not equal to "0"
     And GC Extended Weight [ITWT] is not equal to <NULL>
     And VA frm_TempUOMChangeFlag_EV01 [EV01] is not equal to "1"
          VA grd_TempExtendedWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
     End If
     // SAR 4700098,4356400  Ends
     // SAR 8352705 Begin
     If GC Extended Volume [ITVL] is not equal to VA grd_TempExtendedVolume_ITVL [ITVL]
     And GC Extended Volume [ITVL] is not equal to "0"
     And GC Extended Volume [ITVL] is not equal to <NULL>
     And VA frm_TempUOMChangeFlag_EV01 [EV01] is not equal to "1"
          VA grd_TempExtendedVolume_ITVL [ITVL] = GC Extended Volume [ITVL]
     End If
     // SAR 8352705 End
     //
     // ---------------------------------------------------------------------------
     // 4073864 - Use the PROV flag parameter passed to EDIT LINE for multiple
     //             purposes.
     //             1=True price(cost) override.
     //                    window.  PS09 will be updated to '1' in F4311.
     //             8=User manually added/inserted adjustment using price history
     //             9=User blanked out unit cost and extended cost.  This will cause
     //                   pricing/cost functions to re-retrieve cost and manual
     //                   adjustments will NOT be retained.
     // ---------------------------------------------------------------------------
     //
     //
     If VA grd_ManualAdj_PS09 [PS09] is equal to "1"
     And VA grd_cPreservePOEManualAdj_EV01 [EV01] is not equal to "1"
          VA grd_PS09StatusFlag_PROV [PROV] = "8"
     End If
     //
     If GC PROV:Price Override - (wf) [PROV] is not equal to <Blank>
          VA grd_PS09StatusFlag_PROV [PROV] = GC PROV:Price Override - (wf) [PROV]
     End If
     //
     //  SAR    5169139    Begin
     //
     If GC Asset ID [ASII] is equal to or empty <Blank>
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AssetID)
          VA evt_szAssetItemNumber_ASID [ASID] = <Blank>
          VA evt_mnAssetItemNumber_NUMB [NUMB] = <Blank>
     End If
     //
     //  SAR    5169139    End
     //
     // ---------------------------------------------------------------------------
     //  Pass Relieve Blanket Order Flag Both Directions
     // ---------------------------------------------------------------------------
     //
     // SAR 4813754, 469022, 5169139 - Begin
     // Add condition If GC AssetID is not equal to NULL.  Change  F1201 Validate
     // Asset Number call to include additional parameters.
     If GC Asset ID [ASII] is not equal to <Blank>
     And GC Asset ID [ASII] is not equal to <NULL>
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               GC Asset ID [ASII] <> szPrimaryAssetNumber [ASII]
               VA evt_mnAssetItemNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
               "1" -> cSuppressErrorMessages [EV02]
               VA frm_AssetErrorNumber_DTAI [DTAI] <- szErrorMessageID [DTAI]
          ConvertNumericToString(B0000045.ConvertNumericToString)
               VA evt_mnAssetItemNumber_NUMB [NUMB] -> mnMathNumeric01 [MATH01]
               VA evt_szAssetItemNumber_ASID [ASID] <- szVideoConstant30A [VC30A]
     End If
     //
     // SAR 8180763 Pt.1
     // Hold that AssetID
     //
     VA evt_szAssetItemNumberHold_ASID [ASID] = GC Asset ID [ASII]
     //
     // End SAR 8180763 Pt.1
     //
     //  SAR    5169139    End
     //
     // ---------------------------------------------------------------------------
     //
     If GC Cost Rule [PDP5] is equal to <Blank>
     And PO szLandedCostRule [LANC] is not equal to <Blank>
          GC Cost Rule [PDP5] = PO szLandedCostRule [LANC]
     Else
          //
          // ---------------------------------------------------------------------------
          // If Cost Rule is not set in Order Header or proc.options, not manually entered
          // use Supplier Master  Cost rule setup
          // Defines Landed Cost Rule based on the Processing Option selection.
          // If the Processing Option is = 1 then the Landed Cost Rule will be based
          // on the Ship To's Landed Cost Rule, otherwise the Landed Cost Rule will
          // be based on the Supplier's Landed Cost Rule
          // ---------------------------------------------------------------------------
          //
          // SAR 5263328 - begin
          If GC Cost Rule [PDP5] is equal to <Blank>
               If PO szCostRuleSelection_VL24 [VL24] is equal to "1"
                    // Sar 7043661 Begin
                    ! VA evt_mnCostRuleSelection_AN801 [AN8] = FC Ship To [SHAN]
                    If GC Ship To Number [SHAN] is equal to <Blank>
                         VA evt_mnCostRuleSelection_AN801 [AN8] = FC Ship To [SHAN]
                    Else
                         VA evt_mnCostRuleSelection_AN801 [AN8] = GC Ship To Number [SHAN]
                    End If
                    // Sar 7043661 End
               Else
                    VA evt_mnCostRuleSelection_AN801 [AN8] = FC Address Number [AN8]
               End If
               // BEGIN SAR 7295788
               If VA frm_PrevCostRuleSelection_AN8 [AN8] is not equal to VA evt_mnCostRuleSelection_AN801 [AN8]
                    GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
                         VA evt_mnCostRuleSelection_AN801 [AN8] -> mnAddressNumber [AN8]
                         UNDEFINED <> mnCarrierNumber [ANCR]
                         UNDEFINED <> szPriceGroup [CPGP]
                         UNDEFINED <> szDeliveryInstructions1 [DEL1]
                         UNDEFINED <> szDeliveryInstructions2 [DEL2]
                         UNDEFINED <> cItemRestrictions [EDF2]
                         UNDEFINED <> szFreightHandlingCode [FRTH]
                         UNDEFINED <> szOrderHoldCode [HOLD]
                         UNDEFINED <> szPrintMessage [INMG]
                         UNDEFINED <> mnOrderCopies [INVC]
                         UNDEFINED <> mnMaximumOrderValue [MAXO]
                         UNDEFINED <> mnMinimumOrderValue [MINO]
                         UNDEFINED <> szOrderTemplate [ORTP]
                         UNDEFINED <> cPricePickList [PLST]
                         GC Cost Rule [PDP5] <- szLandedCostRule [PRP5]
                         UNDEFINED <> szUnitOfMeasureVolume [VUMD]
                         UNDEFINED <> szUnitOfMeasureWeight [WUMD]
                         UNDEFINED <> szPaymentTerms [TRAP]
                         UNDEFINED <> szSupplierCurrencyCode [CRRP]
                         UNDEFINED <> szTaxRateArea [TXA2]
                         UNDEFINED <> szTaxExplCode [EXR2]
                         UNDEFINED <> cCorrespondenceMethod [CRMD]
                         UNDEFINED <> cEvaluatedReceipts [AVCH]
                         UNDEFINED <> cErrorCode [ERR]
                         UNDEFINED <> szPriceAdjustmentSchedule [ASN]
                    VA frm_PrevCostRuleSelection_AN8 [AN8] = VA evt_mnCostRuleSelection_AN801 [AN8]
                    VA frm_PevCostRule_PDP5 [PDP5] = GC Cost Rule [PDP5]
               Else
                    GC Cost Rule [PDP5] = VA frm_PevCostRule_PDP5 [PDP5]
               End If
               // END SAR 7295788
          End If
          // SAR 5263328 End
          //
     End If
     // SAR 4916083 Ends
     //
     // ---------------------------------------------------------------------------
     // SAR 5228354 Product Variance Enhancement - don't call edit line for parent
     // item, unless processing option for inventory parent is set, then don't call
     // MOE.
     // ---------------------------------------------------------------------------
     //
     If VA grd_cMatrixControlled_MIC [MIC] is equal to "1"
     And VA frm_cProductVarianceFlag_MEOW [MEOW] is equal to "1"
     And PO cInventoryParent [SEGB] is not equal to "1"
          If GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
               VA frm_cAddOrUpdateMatrix_EV01 [EV01] = "2"
               VA frm_mnLagestMatrixLineNum_MCLN [MCLN] = [VA frm_mnLagestMatrixLineNum_MCLN [MCLN]]+1
               GC Matrix Line Number [MCLN] = VA frm_mnLagestMatrixLineNum_MCLN [MCLN]
               VA frm_cSkipEditLine_EV01 [EV01] = "1"
          End If
     End If
     //
     If VA frm_cSkipEditLine_EV01 [EV01] is not equal to "1"
          //
          // ---------------------------------------------------------------------------
          // SAR 5565764 Property Management - UK Localization
          // ---------------------------------------------------------------------------
          //
          If SL CountryCode is equal to "UK"
          And GC Property Unit Number [UNIT] is not equal to <Blank>
               PropertyTaxSelection(N74U0237.PropertyTaxSelection)
                    FC Order Company [KCOO] -> szCompany [CO]
                    FC Project Cost Center [OMCU] -> szCostCentre [OMCU]
                    FC Branch/Plant [MCU] -> szBusinessUnit [MCU]
                    GC Property Unit Number [UNIT] -> szUnitNumber [UNIT]
                    GC Account Number [ANI] -> szAccountNumber [ANI]
                    GC Sub Type [SBLT] <> cSubledgerType [SBLT]
                    GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
                    GC Tax Rate/Area [TXA1] <> szTaxArea [TXA1]
                    FC Order Date [TRDJ] <> jdDateTransactionJulian [TRDJ]
                    "0" -> cErrorFlag [EV01]
                    GC Subledger [SBL] <> szSubledger [SBL]
                    UNDEFINED <> szErrorCode [DTA1]
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
               GC Centro de Respons. [VR02] = GC Property Unit Number [UNIT]
               Disable Grid(FC Grid,  <Currently Selected Row>, GC Reference)
          End If
          //
          // ---------------------------------------------------------------------------
          // MM7128091 SAR 5598566 - Begin
          // If in copy mode do not pass in any related order information.
          In COPY_MODE,
          // realted order information should not be passed in therefore I have created 4
          // event level variables namely:
          // 1. evt_CompanyKeyRelated
          // 2. evt_RelateedPoSoNumber
          // 3. evt_RelatedOrderType
          // 4. evt_RelatedPoSoLineNo
          // And these variables have be passed in F4311EditLine
          // instead of :
          // BCCompany-Key(RelatedOrder), BC Related PO/SO/WO Number,
          //  BC Related PO/SO/WO Order Type, BC Related PO/SO/WO  LineNumber
          // respectively.
          // SAR 5629027 Begin
          // Pass GC values instead of BC
          // ---------------------------------------------------------------------------
          //
          VA evt_CompanyKeyRelated [RKCO] = GC Co Key [RKCO]
          VA evt_RelatedPoSoNumber [RORN] = GC Related PO/SO No [RORN]
          VA evt_RelatedOrderType [RCTO] = GC Rel Ord Type [RCTO]
          VA evt_RelatedPoSoLineNo [RLLN] = GC Related PO/SO Line No [RLLN]
          // SAR 5629027 End
          If SV Form_ Mode is equal to CO COPY_MODE
               VA evt_CompanyKeyRelated [RKCO] = <NULL>
               VA evt_RelatedPoSoNumber [RORN] = <NULL>
               VA evt_RelatedOrderType [RCTO] = <NULL>
               VA evt_RelatedPoSoNumber [RORN] = <NULL>
               // Begin SAR # 8937607
               // SAR 8974177 Begin
               If VA frm_Prev_ItemNumber [UITM] is not equal to GC Item Number [UITM]
               And GC Item Number [UITM] is not equal to <Blank>
               And VA frm_Prev_ItemNumber [UITM] is not equal to <Blank>
                    GC Item Price Group [PRGR] = <NULL>
                    GC Report Code 1 [PDP1] = <NULL>
                    GC Objeto de Custo 2 [PDP2] = <NULL>
                    GC Objeto de Custo 3 [PDP3] = <NULL>
                    GC Objeto de Custo 4 [PDP4] = <NULL>
                    // End SAR # 8937607
               End If
               // SAR 8974177 End
          End If
          // MM7128091 SAR 5598566 - End
          // SAR 5629027 Begin - comment the below code
          If VA grd_szRelatedOrderNumber_RORN [RORN] is not equal to <Blank>
          And VA grd_szRelatedOrderNumber_RORN [RORN] is not equal to <NULL>
               VA evt_RelatedPoSoNumber [RORN] = VA grd_szRelatedOrderNumber_RORN [RORN]
               VA evt_RelatedOrderType [RCTO] = VA grd_szRelatedOrderType_RCTO [RCTO]
               VA evt_RelatedPoSoLineNo [RLLN] = VA grd_mnRelatedLineNo_RLLN [RLLN]
               VA evt_CompanyKeyRelated [RKCO] = GC Co Key [RKCO]
          End If
          // SAR 5629027 End
          //  SAR    5587955    Begin - Pass Payment Terms to Edit Line
          // SAR 5952246 Pass in Preserver POE Manual Adjustments Flag
          If VA grd_cPreservePOEManualAdj_EV01 [EV01] is not equal to "1"
               VA grd_cPreservePOEManualAdj_EV01 [EV01] = "0"
          End If
          //  SAR  6198960  - Pass GC Orig Sfx to Edit Line
          //
          //
          // =============================================================
          //
          // ---------------------------------------------------------------------------
          // BLANKETS in UPDATE MODE
          // ---------------------------------------------------------------------------
          //
          If VA grd_OriginalOrderQty_UORG [UORG] is less than GC Quantity Ordered [UORGE1]
          And GC Quantity Ordered [UORGE1] is greater than <Blank>
          And SV Form_ Mode is equal to CO UPDATE_MODE
               If VA frm_mnProcessID_PEID [PEID] is equal to "0"
                    RetrieveProcessAndTransactionID(B0001060.RetrieveProcessAndTransactionID)
                         VA frm_mnProcessID_PEID [PEID] <- mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] <- mnTransactionID [TCID]
               End If
               ConvertStringToMathNumeric(B0000580.ConvertStringToMathNumeric)
                    GC Original Order No [OORN] -> szInputString [AA15]
                    VA grd_mnBlanketOrderNumber_DOCO [DOCO] <- mnOutputMathNumeric [MATH01]
                    UNDEFINED <- cReturnedErrorCode [ERR]
               VA evt_cOtherQuantity12_OTQY [OTQY] = <NULL>
               VA evt_cBlanketFoundIndictor_EV01 [EV01] = <NULL>
               VA evt_mnBlanketUnitCost_PRRC [PRRC] = <NULL>
               VA evt_szErrorMessageID_DTAI [DTAI] = <NULL>
               VA evt_mnBlanketSupplierNo_AN8 [AN8] = <NULL>
               VA evt_mnBlanketShortItemNo_ITM [ITM] = <NULL>
               VA evt_mnBlanketPrimQtyOrder_PQOR [PQOR] = <NULL>
               VA evt_mnBlanketReleaseQty_UORG [UORG] = <NULL>
               VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN] = <NULL>
               VA evt_szBlanketUnitOfMeasure_UOM [UOM] = <NULL>
               //
               // ---------------------------------------------------------------------------
               // CALL THE BLANKET CAHE IN GET MODE
               // ---------------------------------------------------------------------------
               //
               // SAR # 8926501 - Pass 9 as cache keys and branch/plant to
               // cacheprocessblanketcache function
               CacheProcessBlanketCache(B4302180.CacheProcessBlanketCache)
                    "1" -> szCacheActionCode_CACTN [CACTN]
                    "1" -> idIndexNumber_INID [INID]
                    "9" -> mnNumberKeys_NKEYS [NKEYS]
                    "1" -> cSuppressErrorMessages_EV01 [EV01]
                    VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                    VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                    VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                    GC Original Order No [OORN] -> szBlanketOrderNumber_OORN [OORN]
                    GC Orig Type [OCTO] -> szBlanketOrderType_OCTO [OCTO]
                    GC Orig Co [OKCO] -> szBlanketCompanyKey_OKCO [OKCO]
                    GC Original Line No [OGNO] -> mnBlanketLineNumber_OGNO [OGNO]
                    GC Original SFXO (wf) [SFX] -> szBlanketOrderSuffix_OSFX [OSFX]
                    VA evt_mnBlanketSupplierNo_AN8 [AN8] <- mnSupplierNumber_AN8 [AN8]
                    VA evt_mnBlanketShortItemNo_ITM [ITM] <- mnShortItemNumber_ITM [ITM]
                    VA evt_szBlanketUnitOfMeasure_UOM [UOM] <- szTransactionUnitOfMeasure_UOM [UOM]
                    VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageID_DTAI [DTAI]
                    VA evt_mnBlanketUnitCost_PRRC [PRRC] <- mnUnitCost_PRRC [PRRC]
                    VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN] <- mnUnitsOpenQuantity_UOPN [UOPN]
                    VA evt_mnBlanketReleaseQty_UORG [UORG] <- mnUnitsReleaseToDateQty_UORG [UORG]
                    VA evt_mnBlanketPrimQtyOrder_PQOR [PQOR] <- mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                    GC Branch/ Plant [MCU] -> szBusinessUnit_MCU [MCU]
               //
               If VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
                    VA evt_cBlanketFoundIndictor_EV01 [EV01] = "1"
                    VA evt_cOtherQuantity12_OTQY [OTQY] = "1"
               End If
               //
               If VA evt_szErrorMessageID_DTAI [DTAI] is greater than <Blank>
                    // Nothing Found In Cache. get Blanket from F4311
                    VA evt_cOtherQuantity12_OTQY [OTQY] = <NULL>
                    RetrievePODetailRows(B4300520.RetrievePODetailRows)
                         VA grd_mnBlanketOrderNumber_DOCO [DOCO] -> mnOrderNumber [DOCO]
                         GC Orig Type [OCTO] -> szOrderType [DCTO]
                         GC Orig Co [OKCO] -> szOrderKeyCompany [KCOO]
                         GC Original SFXO (wf) [SFX] -> szOrderSuffix [SFXO]
                         VA evt_mnBlanketSupplierNo_AN8 [AN8] <- mnAddressNumber [AN8]
                         VA evt_mnBlanketShortItemNo_ITM [ITM] <- mnItemNumber [ITM]
                         UNDEFINED <> szCostCenter [MCU]
                         UNDEFINED <> szLastStatusCode [LTTR]
                         UNDEFINED <> mnAmountExtendedPrice [AEXP]
                         UNDEFINED <> mnAmountOnHold [ACHG]
                         VA evt_mnBlanketPrimQtyOrder_PQOR [PQOR] <- mnUnitsPrimaryQtyOrder [PQOR]
                         UNDEFINED <> cSuppressErrorMessage [EV02]
                         UNDEFINED <> cErrorCode [ERRC]
                         UNDEFINED <> szErrorMessageID [DTAI]
                         UNDEFINED <> idhRequestF4311 [GENLN2]
                         UNDEFINED <> mnOrderQuantity [UORG]
                         VA evt_szBlanketUnitOfMeasure_UOM [UOM] <- szUnitOfMeasure [UOM]
                         UNDEFINED <> szStatusCodeNext [NXTR]
                         UNDEFINED <> mnOpenAmount [AOPN]
                         UNDEFINED <> szCurrencyCode [CRCD]
                         UNDEFINED <> mnOpenAmountForeign [FAP]
                         UNDEFINED <> szPurchasingUOM [UOM3]
                         VA evt_mnBlanketUnitCost_PRRC [PRRC] <- mnCost [PRRC]
                         UNDEFINED <> szPurchasingReportCode5 [PRP5]
                         UNDEFINED <> mnForeignCost [FRRC]
                         UNDEFINED <> jdTransactionDate [TRDJ]
                         VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN] <- mnOpenQuantity [UOPN]
                         UNDEFINED <> szDescription [DSC1]
                         UNDEFINED <> szUOM [UOM]
                         GC Original Line No [OGNO] -> mnLineNumber [LNID]
                         UNDEFINED <> mnExchangeRate [CRR]
                         UNDEFINED <> szLineType [LNTY]
                         UNDEFINED <> szAccountId [AID]
                         VA evt_mnBlanketReleaseQty_UORG [UORG] <- mnUnitsReceived [UREC]
                         VA evt_cOtherQuantity12_OTQY [OTQY] <- cOtherQuantity12 [OTQY]
               End If
               //
               If VA evt_cOtherQuantity12_OTQY [OTQY] is equal to "1"
                    VA evt_mnBlanketReleaseQty_UORG [UORG] = ([VA evt_mnBlanketPrimQtyOrder_PQOR [PQOR]]-[VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN]])-[VA grd_OriginalOrderQty_UORG [UORG]]
                    VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN] = [VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN]]+[VA grd_OriginalOrderQty_UORG [UORG]]
                    //
                    // CAll The Blanket Cache in ADD/UPDATE MODE
                    // SAR # 8926501 - Pass 9 as cache keys and branch/plant to
                    // cacheprocessblanketcache function
                    CacheProcessBlanketCache(B4302180.CacheProcessBlanketCache)
                         "7" -> szCacheActionCode_CACTN [CACTN]
                         "1" -> idIndexNumber_INID [INID]
                         "9" -> mnNumberKeys_NKEYS [NKEYS]
                         "1" -> cSuppressErrorMessages_EV01 [EV01]
                         VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                         VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                         GC Original Order No [OORN] -> szBlanketOrderNumber_OORN [OORN]
                         GC Orig Type [OCTO] -> szBlanketOrderType_OCTO [OCTO]
                         GC Orig Co [OKCO] -> szBlanketCompanyKey_OKCO [OKCO]
                         GC Original Line No [OGNO] -> mnBlanketLineNumber_OGNO [OGNO]
                         GC Original SFXO (wf) [SFX] -> szBlanketOrderSuffix_OSFX [OSFX]
                         VA evt_mnBlanketSupplierNo_AN8 [AN8] -> mnSupplierNumber_AN8 [AN8]
                         VA evt_mnBlanketShortItemNo_ITM [ITM] -> mnShortItemNumber_ITM [ITM]
                         VA evt_szBlanketUnitOfMeasure_UOM [UOM] -> szTransactionUnitOfMeasure_UOM [UOM]
                         VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageID_DTAI [DTAI]
                         VA evt_mnBlanketUnitCost_PRRC [PRRC] -> mnUnitCost_PRRC [PRRC]
                         VA evt_mnBlanketUnitsOpenQty_UOPN [UOPN] -> mnUnitsOpenQuantity_UOPN [UOPN]
                         VA evt_mnBlanketReleaseQty_UORG [UORG] -> mnUnitsReleaseToDateQty_UORG [UORG]
                         VA evt_mnBlanketPrimQtyOrder_PQOR [PQOR] -> mnUnitsPrimaryQtyOrder_PQOR [PQOR]
                         VA evt_cOtherQuantity12_OTQY [OTQY] -> cOtherQuantity12_OTQY [OTQY]
                         GC Branch/ Plant [MCU] -> szBusinessUnit_MCU [MCU]
               End If
          End If
          //
          // NOTE:  This must be before the Edit Line Call
          // If Multiples is on, populate the values to pass to edit line
          If GC Multiple Accounts [MACT] is equal to "1"
               GC Account Number [ANI] = VA grd_MultipleAccounts_ANI [ANI]
               GC Business Unit [OMCU] = VA grd_MultipleAccounts_OMCU [OMCU]
               GC Obj Acct [OBJ] = VA grd_MultipleAccounts_OBJ [OBJ]
               GC Sub  [SUB] = VA grd_MultipleAccounts_SUB [SUB]
               GC Sub Type [SBLT] = VA grd_MultipleAccounts_SBLT [SBLT]
               GC Subledger [SBL] = VA grd_MultipleAccounts_SBL [SBL]
          End If
          //
          // SAR 8362284 Begin
          // We need to pass GC values to get back the error to grid form Edit line.
          // Save the contents of GC values after the call Edit Line we will re assign
          // them back to GC
          // Begin BUG# 11654720
          ! VA evt_TempWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
          ! VA evt_TempVolume_ITVL [ITVL] = GC Extended Volume [ITVL]
          // End BUG# 11654720
          GC Extended Weight [ITWT] = VA grd_TempExtendedWeight_ITWT [ITWT]
          GC Extended Volume [ITVL] = VA grd_TempExtendedVolume_ITVL [ITVL]
          //
          // SAR 7954528 - When copying an order and processing a Kit, use Original Line
          // # to populate Line # which is then passed to F4311 Edit Line
          //
          If SV Form_ Mode is equal to CO COPY_MODE
               If GC Related Item No [RLIT] is not equal to <NULL>
               And GC Related Item No [RLIT] is not equal to <Blank>
                    VA evt_cKitComponentYorN_EV01 [EV01] = "Y"
               Else
                    VA evt_cKitComponentYorN_EV01 [EV01] = "N"
               End If
               If VA grd_StockingType_STKT [STKT] is equal to "K"
               Or VA evt_cKitComponentYorN_EV01 [EV01] is equal to "Y"
                    GC Line Number [LNID] = [GC Original Line No [OGNO]]
               End If
          End If
          // End SAR 7954528
          // =============================================================
          // *****************************************************************************
          // SAR# 8607384 - Passed GC Origsfx Instead of GC OriginalSFXO to the Editline
          // call, so that the change order on blanket order will be reopened when the
          // purchase order from which it was generated is cancelled.
          // SAR 8943589 Begin
          If VA frm_OriginalOrderNo [OORN] is equal to <Blank>
          Or VA frm_OriginalOrderNo [OORN] is equal to <NULL>
               VA evt_OrderSuffix_SFXO [SFXO] = GC Orig Sfx [OSFX]
          Else
               VA evt_OrderSuffix_SFXO [SFXO] = GC Original SFXO (wf) [SFX]
          End If
          // SAR 8943589 End
          //
          //
          // SAR 8953260 Begin
          If GC Ln Ty [LNTY] is equal to "0"
          Or GC Ln Ty [LNTY] is equal to <Blank>
          Or GC Ln Ty [LNTY] is equal to <NULL>
               // Bug 12627535 Begin
               VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
                    GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
                    VA evt_ShortItemNumber_ITEMNUM [ITEMNUM] <- mnShortItemNumber [ITM]
               // Bug 12627535 End
               // SAR 8958632 Begin
               ! F4102.Select  [Index 1: Branch, Item]
               !      VA evt_ShortItemNumber_ITEMNUM [ITEMNUM] = TK Item Number - Short [ITM]
               !      GC Branch/ Plant [MCU] = TK Business Unit [MCU]
               ! F4102.FetchNext  [Index 1: Branch, Item]
               !      GC Ln Ty [LNTY] <- TK Line Type [LNTY]
               F4102.FetchSingle  [Index 1: Branch, Item]
                    VA evt_ShortItemNumber_ITEMNUM [ITEMNUM] = TK Item Number - Short [ITM]
                    GC Branch/ Plant [MCU] = TK Business Unit [MCU]
                    GC Ln Ty [LNTY] <- TK Line Type [LNTY]
               If GC Ln Ty [LNTY] is equal to "0"
               Or GC Ln Ty [LNTY] is equal to <Blank>
               Or GC Ln Ty [LNTY] is equal to <NULL>
               Or SV File_IO_Status is equal to CO ERROR
                    F4101.FetchSingle  [Index 1: Item Master]
                         VA evt_ShortItemNumber_ITEMNUM [ITEMNUM] = TK Item Number - Short [ITM]
                         GC Ln Ty [LNTY] <- TK Line Type [LNTY]
                    If GC Ln Ty [LNTY] is equal to "0"
                    Or GC Ln Ty [LNTY] is equal to <Blank>
                    Or GC Ln Ty [LNTY] is equal to <NULL>
                    Or SV File_IO_Status is equal to CO ERROR
                         GetDataDictionaryDefinition(B9800420.GetDataDictionaryDefinition)
                              "LNTY" -> szDataDictionaryItem [DTAI]
                              "00" -> szSystemCode [SY]
                              "00" -> szReportingCode [RT]
                              "2.00" -> mnDataType [MATH02]
                              GC Ln Ty [LNTY] <- szDefaultValString [DVAL]
                    End If
               End If
               // SAR 8958632 End
          End If
          GetLineTypeConstants(B4000260.GetLineTypeConstants)
               GC Ln Ty [LNTY] -> szLineType [LNTY]
               VA evt_ReverseSignFlag_EV01 [EV01] <- cReverseSign [RSGN]
          // Begin SAR 8943681
          If VA evt_ReverseSignFlag_EV01 [EV01] is equal to "Y"
          And VA grd_OriginalOrderQty_UORG [UORG] is not equal to GC Quantity Ordered [UORGE1]
          And VA frm_QtyChanged_EV01 [EV01] is equal to "1"
               GC Quantity Ordered [UORGE1] = [GC Quantity Ordered [UORGE1]]*-1
               VA frm_QtyChanged_EV01 [EV01] = "0"
          End If
          // End SAR 8943681
          // SAR 8953260 End
          // SAR 8943589 Begin - Passed in value of Original Order Suffix
          // Begin SAR 11051893
          GetUDC(X0005.GetUDC)
               "38" -> szSystemCode [SY]
               "AP" -> szRecordTypeCode [RT]
               "AP" -> szUserDefinedCode [KY]
               "10.00" -> mnKeyFieldLength [AS]
               "1" -> cSuppressErrorMessage [EV01]
          If VA frm_AgreementModuleCalled [EV01] is equal to "1"
          And SV Error_Status is not equal to CO SUCCESS
          And SV Form_ Mode is equal to CO UPDATE_MODE
               VA grd_PS09StatusFlag_PROV [PROV] = <NULL>
          Else
               VA grd_PS09StatusFlag_PROV [PROV] = GC PROV:Price Override - (wf) [PROV]
          End If
          // -----------------------------------------------------------------------------
          // End SAR 11051893
          // Bug 11052302 passed configurator flag
          // BUG# 11904731 - PMPN Enhancements - Pass PMPN fields
          F4311EditLine(XT4311Z1.F4311EditLine)
               VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               GC Line Number [LNID] <> mnOrderLineNumber [LNID]
               GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
               "1" <> cProcessEdits [EV01]
               VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
               GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
               SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
               SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               GC Change Order [SFXO] <> szOrderSuffix [SFXO]
               GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
               GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
               GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
               GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
               GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
               VA evt_CompanyKeyRelated [RKCO] -> szRelatedOrderCompany [RKCO]
               VA evt_RelatedPoSoNumber [RORN] -> szRelatedOrderNumber [RORN]
               VA evt_RelatedOrderType [RCTO] -> szRelatedOrderType [RCTO]
               VA evt_RelatedPoSoLineNo [RLLN] -> mnRelatedOrderLine [RLLN]
               FC Address Number [AN8] <> mnSupplierNumber [AN8]
               GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
               GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
               VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] <> jdTransactionDate [TRDJ]
               GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
               GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
               GC G/L Date [DGL] <> jdGLDate [DGL]
               GC Item Number [UITM] <> szUnformattedItemNumber [UITM]
               GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
               GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
               VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
               GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
               GC Ln Ty [LNTY] <> szLineType [LNTY]
               GC Description 1 [DSC1] <> szDescription1 [DSC1]
               GC Description 2 [DSC2] <> szDescription2 [DSC2]
               VA evt_szAssetItemNumber_ASID [ASID] <> szAssetID [ASID]
               GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
               GC Location [LOCNE1] <> szLocation [LOCN]
               GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
               VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
               GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
               GC Last Status [LTTR] <> szLastStatus [LTTR]
               GC Next Status [NXTR] <> szNextStatus [NXTR]
               GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
               GC Subledger [SBL] <> szSubledger [SBL]
               GC Sub Type [SBLT] <> cSubledgerType [SBLT]
               GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
               GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
               GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
               GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
               GC Print Message [INMG] <> szPrintMessage [INMG]
               GC Tax Y/N [TX] <> cTaxable [TX]
               GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
               GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
               GC G/L Offset [GLC] <> szGLClassCode [GLPT]
               GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
               GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
               GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
               GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
               GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
               GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
               GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
               GC Extended Weight [ITWT] <> mnWeight [ITWT]
               VA grd_TempWeightUOM_WTUM [WTUM] <> szWeightUoM [WTUM]
               GC Extended Volume [ITVL] <> mnVolume [ITVL]
               VA grd_TempVolumeUOM_VLUM [VLUM] <> szVolumeUoM [VLUM]
               GC Projeto Rubrica [VR01] <> szReference1 [VR01]
               GC Centro de Respons. [VR02] <> szReference2 [VR02]
               GC S M [CRMD] <> cSendMethod [CRMD]
               GC F C [UNCD] <> cFreezeCode [UNCD]
               GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
               VA grd_cInventoryInterface_IVI [IVI] <> cInventoryInterface [IVI]
               FC Foreign [CRRM] <> cCurrencyMode [CRRM]
               FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
               FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
               FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
               GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
               VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
               "0" <> cSourceRequestingPOGeneration [POGS]
               "EP4310" <> szProgramID [PID]
               VA frm_USR0_UserID [USR0] <> szUserID [USER]
               GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
               GC Unique Key ID [UKID] -> mnUniqueKey [UKID]
               GC Pymt Terms [PTC] <> szPaymentTerms [PTC]
               GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
               GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
               GC Agreements Found [AFND] <> mnContractsFound [AFND]
               GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
               GC Product Source [PSR] <> szProductSource [PSR]
               GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
               GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
               GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
               GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
               GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
               GC Sub  [SUB] <> szSubsidiary [SUB]
               VA evt_OrderSuffix_SFXO [SFXO] <> szOriginalOrderSuffix [SFX0]
               VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
               VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
               GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
               VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
               VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
               VA grd_FreeGoodExists_EV01 [EV01] <> cAdvPriceCalledFlag [EV13]
               GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
               GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
               GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
               GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
               GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
               GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
               GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
               GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
               GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
               VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
               GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
               <NULL> <> mnRMADocNumber [DOC1]
               <NULL> <> szRMADocType [DCT4]
               GC Sec Quantity Ordered [SQOR] <> mnSecondaryQty [SQOR]
               GC Sec UoM [UOM2] <> szSecondaryUOM [UOM2]
               GC Planned Effective [DLEJ] <> jdLotEffectivityDate [DLEJ]
               GC Promotion ID [PMTN] <> szPromotionID [PMTN]
               GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
               GC Project Number [PRJM] -> mnProjectNumber [PRJM]
               GC Mod Trn [MOT] -> szModeOfTransport [MOT]
               FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
               FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               VA grd_cPreservePOEManualAdj_EV01 [EV01] -> cPreservePOEManualAdj [EV01]
               GC POE Trigger Reprice [EV01] -> cPOETriggerReprice [EV01]
               GC Multiple Accounts [MACT] -> cMultipleAccountsExist_MACT [MACT]
               VA grd_cManualOverride_MOADJ [MOADJ] <> cManualOverride [MOADJ]
               GC Category Code 01 [PODC01] <> szPurchaseLineCode01 [PODC01]
               GC Category Code 02 [PODC02] <> szPurchaseLineCode02 [PODC02]
               GC Category Code 03 [PODC03] <> szPurchaseLineCode03 [PODC03]
               GC Category Code 04 [PODC04] <> szPurchaseLineCode04 [PODC04]
               GC Job Typ [JBCD] <> szJobType [JBCD]
               GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
               GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
               BC Created By Configurator Flag (F4311.0) [CFGFL] -> cCreatedByConfiguratorFlag [CFGFL]
               GC Production Number [PMPN] <> szProjectMfgProductionNumb [PMPN]
               GC Production Number Short [PNS] <> mnProductionNumberShort [PNS]
          // SAR 8943589 End
          // *****************************************************************************
          //
          //
          // SAR 8617873 Begin
          // SAR 8723609-Error checking for editline should follow immediately after the
          // function call
          // Validate payment terms from F0014
          ! IsColumnInPymtTermsTable(ISCOLPT.IsColumnInPymtTermsTable)
          !      GC Pymt Terms [PTC] -> szBehaviorEditString [BHVREDTST]
          !      GC Pymt Terms [PTC] -> szDescription001 [DL01]
          // SAR 8617873 End
          // Before this code change for  VA grd_TempExtendedVolume_ITVL and
          // VA grd_TempExtendedWeight_ITWT was passed to
          //  Edit line which are used further down the line for calculation so copying
          // the return values from Edit line
          VA grd_TempExtendedWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
          VA grd_TempExtendedVolume_ITVL [ITVL] = GC Extended Volume [ITVL]
          // Restore the contents of GC variables.
          // Begin BUG# 11654720
          ! GC Extended Weight [ITWT] = VA evt_TempWeight_ITWT [ITWT]
          ! GC Extended Volume [ITVL] = VA evt_TempVolume_ITVL [ITVL]
          // End BUG# 11654720
          // SAR 8362284 End
          // -----------------------------------------------------------------------------
          // ---- ISSUE 292366 - Marília - Calcula ICMS Substituto (O6-Catálogo FABESUL)
          //
          If PO OpcaoCatalogo [EV01] is equal to "1"
          And PO TpCatalogo [EV01] is not equal to "R"
          And GC HIDDEN %ICMSF41061 [DMCS] is greater than "0"
          And GC ACTN:Action Code (wf) [ACTN] is equal to "A"
               // só considerar o %ICMS cadastrado no catálogo, se F/F na UDC 55-FI
               VA frm_AUX_FiliaFabrica_MCU [MCU] = ltrim([FC Branch/Plant1 [MCU]], <Blank>)
               VA frm_CodSY_55 [SY] = "55"
               VA frm_CodRT_FO [RT] = "FI"
               F0005.FetchSingle  [Index 1: System, Type, Code]
                    VA frm_CodSY_55 [SY] = TK Product Code [SY]
                    VA frm_CodRT_FO [RT] = TK User Defined Codes [RT]
                    VA frm_AUX_FiliaFabrica_MCU [MCU] = TK User Defined Code [KY]
               If SV File_IO_Status is equal to CO SUCCESS
                    If GC Line Number [LNID] is equal to <Blank>
                         // Se item c/% ICMS (Substit.Tributária) em linha nova - acrescentar no valor
                         GC Unit Cost [UPAX] = [GC Unit Cost [UPAX]]+(([GC Unit Cost [UPAX]]*[GC HIDDEN %ICMSF41061 [DMCS]])/100)
                         F4311EditLine(XT4311Z1.F4311EditLine)
                              VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                              VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                              GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                              GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                              "1" <> cProcessEdits [EV01]
                              VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                              GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                              SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                              SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                              FC Order Company [KCOO] <> szOrderCompany [KCOO]
                              FC Order Number [DOCO] <> mnOrderNumber [DOCO]
                              FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                              GC Change Order [SFXO] <> szOrderSuffix [SFXO]
                              GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
                              GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
                              GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
                              GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
                              GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
                              VA evt_CompanyKeyRelated [RKCO] -> szRelatedOrderCompany [RKCO]
                              VA evt_RelatedPoSoNumber [RORN] -> szRelatedOrderNumber [RORN]
                              VA evt_RelatedOrderType [RCTO] -> szRelatedOrderType [RCTO]
                              VA evt_RelatedPoSoLineNo [RLLN] -> mnRelatedOrderLine [RLLN]
                              FC Address Number [AN8] <> mnSupplierNumber [AN8]
                              GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
                              GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                              FC Order Date [TRDJ] <> jdTransactionDate [TRDJ]
                              GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
                              GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                              GC G/L Date [DGL] <> jdGLDate [DGL]
                              GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                              GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                              GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                              VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
                              GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                              GC Ln Ty [LNTY] <> szLineType [LNTY]
                              GC Description 1 [DSC1] <> szDescription1 [DSC1]
                              GC Description 2 [DSC2] <> szDescription2 [DSC2]
                              VA evt_szAssetItemNumber_ASID [ASID] <> szAssetID [ASID]
                              GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
                              GC Location [LOCNE1] <> szLocation [LOCN]
                              GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
                              VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
                              GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
                              GC Last Status [LTTR] <> szLastStatus [LTTR]
                              GC Next Status [NXTR] <> szNextStatus [NXTR]
                              GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
                              GC Subledger [SBL] <> szSubledger [SBL]
                              GC Sub Type [SBLT] <> cSubledgerType [SBLT]
                              GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
                              GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
                              GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
                              GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
                              GC Print Message [INMG] <> szPrintMessage [INMG]
                              GC Tax Y/N [TX] <> cTaxable [TX]
                              GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
                              GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
                              GC G/L Offset [GLC] <> szGLClassCode [GLPT]
                              GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
                              GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
                              GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
                              GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
                              GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
                              GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
                              GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
                              VA grd_TempExtendedWeight_ITWT [ITWT] <> mnWeight [ITWT]
                              VA grd_TempWeightUOM_WTUM [WTUM] <> szWeightUoM [WTUM]
                              GC Extended Volume [ITVL] <> mnVolume [ITVL]
                              VA grd_TempVolumeUOM_VLUM [VLUM] <> szVolumeUoM [VLUM]
                              GC Projeto Rubrica [VR01] <> szReference1 [VR01]
                              GC Centro de Respons. [VR02] <> szReference2 [VR02]
                              GC S M [CRMD] <> cSendMethod [CRMD]
                              GC F C [UNCD] <> cFreezeCode [UNCD]
                              GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
                              GC IVI:Inventory Interface (wf) [IVI] <> cInventoryInterface [IVI]
                              FC Foreign [CRRM] <> cCurrencyMode [CRRM]
                              FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
                              FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
                              FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
                              GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
                              VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                              "0" <> cSourceRequestingPOGeneration [POGS]
                              "EP4310" <> szProgramID [PID]
                              VA frm_USR0_UserID [USR0] <> szUserID [USER]
                              GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
                              FC Payment Terms [PTC] <> szPaymentTerms [PTC]
                              GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
                              GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
                              GC Agreements Found [AFND] <> mnContractsFound [AFND]
                              GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
                              GC Product Source [PSR] <> szProductSource [PSR]
                              GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
                              GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
                              GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
                              GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
                              GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
                              GC Sub  [SUB] <> szSubsidiary [SUB]
                              GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
                              VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                              VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                              GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
                              VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
                              VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
                              GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
                              GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
                              GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
                              GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
                              GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
                              GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
                              GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
                              GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
                              GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
                              VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                              VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                              GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                              GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
                    Else
                         // Preço do catálogo FABESUL deve ter acrescentado o ICMS, qdo.cadastrado lá
                         F41061.Select  [Index 1: Bus. Unit, Addr Num, +A]
                              FC Address Number [AN8] = TK Address Number [AN8]
                              GC Short Item No [ITM] = TK Item Number - Short [ITM]
                              GC CATN:Catalog Number(wf) [CATN] = TK Catalog [CATN]
                         F41061.FetchNext  [Index 1: Bus. Unit, Addr Num, +A]
                              VA frm_CustoUnitAux_PRRC [PRRC] <- TK Amount - Unit Cost [PRRC]
                         If SV File_IO_Status is equal to CO SUCCESS
                              VA frm_NovoCustoCalc_PRRC [PRRC] = [VA frm_CustoUnitAux_PRRC [PRRC]]+(([VA frm_CustoUnitAux_PRRC [PRRC]]*[GC HIDDEN %ICMSF41061 [DMCS]])/100)
                              If GC Unit Cost [UPAX] is equal to VA frm_CustoUnitAux_PRRC [PRRC]
                                   GC Unit Cost [UPAX] = [GC Unit Cost [UPAX]]+(([GC Unit Cost [UPAX]]*[GC HIDDEN %ICMSF41061 [DMCS]])/100)
                                   F4311EditLine(XT4311Z1.F4311EditLine)
                                        VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                                        VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                                        GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                                        GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                                        "1" <> cProcessEdits [EV01]
                                        VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                                        GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                                        SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                                        SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                                        FC Order Company [KCOO] <> szOrderCompany [KCOO]
                                        FC Order Number [DOCO] <> mnOrderNumber [DOCO]
                                        FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                                        GC Change Order [SFXO] <> szOrderSuffix [SFXO]
                                        GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
                                        GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
                                        GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
                                        GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
                                        GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
                                        VA evt_CompanyKeyRelated [RKCO] -> szRelatedOrderCompany [RKCO]
                                        VA evt_RelatedPoSoNumber [RORN] -> szRelatedOrderNumber [RORN]
                                        VA evt_RelatedOrderType [RCTO] -> szRelatedOrderType [RCTO]
                                        VA evt_RelatedPoSoLineNo [RLLN] -> mnRelatedOrderLine [RLLN]
                                        FC Address Number [AN8] <> mnSupplierNumber [AN8]
                                        GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
                                        GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                                        FC Order Date [TRDJ] <> jdTransactionDate [TRDJ]
                                        GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
                                        GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                                        GC G/L Date [DGL] <> jdGLDate [DGL]
                                        GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                                        GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                                        GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                                        VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
                                        GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                                        GC Ln Ty [LNTY] <> szLineType [LNTY]
                                        GC Description 1 [DSC1] <> szDescription1 [DSC1]
                                        GC Description 2 [DSC2] <> szDescription2 [DSC2]
                                        VA evt_szAssetItemNumber_ASID [ASID] <> szAssetID [ASID]
                                        GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
                                        GC Location [LOCNE1] <> szLocation [LOCN]
                                        GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
                                        VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
                                        GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
                                        GC Last Status [LTTR] <> szLastStatus [LTTR]
                                        GC Next Status [NXTR] <> szNextStatus [NXTR]
                                        GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
                                        GC Subledger [SBL] <> szSubledger [SBL]
                                        GC Sub Type [SBLT] <> cSubledgerType [SBLT]
                                        GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
                                        GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
                                        GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
                                        GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
                                        GC Print Message [INMG] <> szPrintMessage [INMG]
                                        GC Tax Y/N [TX] <> cTaxable [TX]
                                        GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
                                        GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
                                        GC G/L Offset [GLC] <> szGLClassCode [GLPT]
                                        GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
                                        GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
                                        GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
                                        GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
                                        GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
                                        GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
                                        GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
                                        VA grd_TempExtendedWeight_ITWT [ITWT] <> mnWeight [ITWT]
                                        VA grd_TempWeightUOM_WTUM [WTUM] <> szWeightUoM [WTUM]
                                        GC Extended Volume [ITVL] <> mnVolume [ITVL]
                                        VA grd_TempVolumeUOM_VLUM [VLUM] <> szVolumeUoM [VLUM]
                                        GC Projeto Rubrica [VR01] <> szReference1 [VR01]
                                        GC Centro de Respons. [VR02] <> szReference2 [VR02]
                                        GC S M [CRMD] <> cSendMethod [CRMD]
                                        GC F C [UNCD] <> cFreezeCode [UNCD]
                                        GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
                                        GC IVI:Inventory Interface (wf) [IVI] <> cInventoryInterface [IVI]
                                        FC Foreign [CRRM] <> cCurrencyMode [CRRM]
                                        FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
                                        FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
                                        FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
                                        GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
                                        VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                                        "0" <> cSourceRequestingPOGeneration [POGS]
                                        "EP4310" <> szProgramID [PID]
                                        VA frm_USR0_UserID [USR0] <> szUserID [USER]
                                        GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
                                        FC Payment Terms [PTC] <> szPaymentTerms [PTC]
                                        GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
                                        GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
                                        GC Agreements Found [AFND] <> mnContractsFound [AFND]
                                        GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
                                        GC Product Source [PSR] <> szProductSource [PSR]
                                        GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
                                        GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
                                        GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
                                        GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
                                        GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
                                        GC Sub  [SUB] <> szSubsidiary [SUB]
                                        GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
                                        VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                                        VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                                        GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
                                        VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
                                        VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
                                        GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
                                        GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
                                        GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
                                        GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
                                        GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
                                        GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
                                        GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
                                        GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
                                        GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
                                        VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                                        VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                                        GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                                        GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
                              Else
                                   If GC Unit Cost [UPAX] is equal to VA frm_NovoCustoCalc_PRRC [PRRC]
                                        F4311EditLine(XT4311Z1.F4311EditLine)
                                             VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                                             VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                                             GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                                             GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                                             "1" <> cProcessEdits [EV01]
                                             VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                                             GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                                             SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                                             SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                                             FC Order Company [KCOO] <> szOrderCompany [KCOO]
                                             FC Order Number [DOCO] <> mnOrderNumber [DOCO]
                                             FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                                             GC Change Order [SFXO] <> szOrderSuffix [SFXO]
                                             GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
                                             GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
                                             GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
                                             GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
                                             GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
                                             VA evt_CompanyKeyRelated [RKCO] -> szRelatedOrderCompany [RKCO]
                                             VA evt_RelatedPoSoNumber [RORN] -> szRelatedOrderNumber [RORN]
                                             VA evt_RelatedOrderType [RCTO] -> szRelatedOrderType [RCTO]
                                             VA evt_RelatedPoSoLineNo [RLLN] -> mnRelatedOrderLine [RLLN]
                                             FC Address Number [AN8] <> mnSupplierNumber [AN8]
                                             GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
                                             GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                                             FC Order Date [TRDJ] <> jdTransactionDate [TRDJ]
                                             GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
                                             GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                                             GC G/L Date [DGL] <> jdGLDate [DGL]
                                             GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                                             GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                                             GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                                             VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
                                             GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                                             GC Ln Ty [LNTY] <> szLineType [LNTY]
                                             GC Description 1 [DSC1] <> szDescription1 [DSC1]
                                             GC Description 2 [DSC2] <> szDescription2 [DSC2]
                                             VA evt_szAssetItemNumber_ASID [ASID] <> szAssetID [ASID]
                                             GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
                                             GC Location [LOCNE1] <> szLocation [LOCN]
                                             GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
                                             VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
                                             GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
                                             GC Last Status [LTTR] <> szLastStatus [LTTR]
                                             GC Next Status [NXTR] <> szNextStatus [NXTR]
                                             GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
                                             GC Subledger [SBL] <> szSubledger [SBL]
                                             GC Sub Type [SBLT] <> cSubledgerType [SBLT]
                                             GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
                                             GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
                                             GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
                                             GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
                                             GC Print Message [INMG] <> szPrintMessage [INMG]
                                             GC Tax Y/N [TX] <> cTaxable [TX]
                                             GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
                                             GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
                                             GC G/L Offset [GLC] <> szGLClassCode [GLPT]
                                             GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
                                             GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
                                             GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
                                             GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
                                             GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
                                             GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
                                             GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
                                             VA grd_TempExtendedWeight_ITWT [ITWT] <> mnWeight [ITWT]
                                             VA grd_TempWeightUOM_WTUM [WTUM] <> szWeightUoM [WTUM]
                                             GC Extended Volume [ITVL] <> mnVolume [ITVL]
                                             VA grd_TempVolumeUOM_VLUM [VLUM] <> szVolumeUoM [VLUM]
                                             GC Projeto Rubrica [VR01] <> szReference1 [VR01]
                                             GC Centro de Respons. [VR02] <> szReference2 [VR02]
                                             GC S M [CRMD] <> cSendMethod [CRMD]
                                             GC F C [UNCD] <> cFreezeCode [UNCD]
                                             GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
                                             GC IVI:Inventory Interface (wf) [IVI] <> cInventoryInterface [IVI]
                                             FC Foreign [CRRM] <> cCurrencyMode [CRRM]
                                             FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
                                             FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
                                             FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
                                             GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
                                             VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                                             "0" <> cSourceRequestingPOGeneration [POGS]
                                             "EP4310" <> szProgramID [PID]
                                             VA frm_USR0_UserID [USR0] <> szUserID [USER]
                                             GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
                                             FC Payment Terms [PTC] <> szPaymentTerms [PTC]
                                             GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
                                             GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
                                             GC Agreements Found [AFND] <> mnContractsFound [AFND]
                                             GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
                                             GC Product Source [PSR] <> szProductSource [PSR]
                                             GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
                                             GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
                                             GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
                                             GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
                                             GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
                                             GC Sub  [SUB] <> szSubsidiary [SUB]
                                             GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
                                             VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                                             VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                                             GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
                                             VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
                                             VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
                                             GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
                                             GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
                                             GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
                                             GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
                                             GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
                                             GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
                                             GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
                                             GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
                                             GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
                                             VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                                             VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                                             GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                                             GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
                                   Else
                                        GC Unit Cost [UPAX] = VA frm_NovoCustoCalc_PRRC [PRRC]
                                        F4311EditLine(XT4311Z1.F4311EditLine)
                                             VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                                             VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                                             GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                                             GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                                             "1" <> cProcessEdits [EV01]
                                             VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                                             GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                                             SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                                             SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                                             FC Order Company [KCOO] <> szOrderCompany [KCOO]
                                             FC Order Number [DOCO] <> mnOrderNumber [DOCO]
                                             FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
                                             GC Change Order [SFXO] <> szOrderSuffix [SFXO]
                                             GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
                                             GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
                                             GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
                                             GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
                                             GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
                                             VA evt_CompanyKeyRelated [RKCO] -> szRelatedOrderCompany [RKCO]
                                             VA evt_RelatedPoSoNumber [RORN] -> szRelatedOrderNumber [RORN]
                                             VA evt_RelatedOrderType [RCTO] -> szRelatedOrderType [RCTO]
                                             VA evt_RelatedPoSoLineNo [RLLN] -> mnRelatedOrderLine [RLLN]
                                             FC Address Number [AN8] <> mnSupplierNumber [AN8]
                                             GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
                                             GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
                                             FC Order Date [TRDJ] <> jdTransactionDate [TRDJ]
                                             GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
                                             GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
                                             GC G/L Date [DGL] <> jdGLDate [DGL]
                                             GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                                             GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                                             GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                                             VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
                                             GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                                             GC Ln Ty [LNTY] <> szLineType [LNTY]
                                             GC Description 1 [DSC1] <> szDescription1 [DSC1]
                                             GC Description 2 [DSC2] <> szDescription2 [DSC2]
                                             VA evt_szAssetItemNumber_ASID [ASID] <> szAssetID [ASID]
                                             GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
                                             GC Location [LOCNE1] <> szLocation [LOCN]
                                             GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
                                             VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
                                             GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
                                             GC Last Status [LTTR] <> szLastStatus [LTTR]
                                             GC Next Status [NXTR] <> szNextStatus [NXTR]
                                             GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
                                             GC Subledger [SBL] <> szSubledger [SBL]
                                             GC Sub Type [SBLT] <> cSubledgerType [SBLT]
                                             GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
                                             GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
                                             GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
                                             GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
                                             GC Print Message [INMG] <> szPrintMessage [INMG]
                                             GC Tax Y/N [TX] <> cTaxable [TX]
                                             GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
                                             GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
                                             GC G/L Offset [GLC] <> szGLClassCode [GLPT]
                                             GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
                                             GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
                                             GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
                                             GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
                                             GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
                                             GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
                                             GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
                                             VA grd_TempExtendedWeight_ITWT [ITWT] <> mnWeight [ITWT]
                                             VA grd_TempWeightUOM_WTUM [WTUM] <> szWeightUoM [WTUM]
                                             GC Extended Volume [ITVL] <> mnVolume [ITVL]
                                             VA grd_TempVolumeUOM_VLUM [VLUM] <> szVolumeUoM [VLUM]
                                             GC Projeto Rubrica [VR01] <> szReference1 [VR01]
                                             GC Centro de Respons. [VR02] <> szReference2 [VR02]
                                             GC S M [CRMD] <> cSendMethod [CRMD]
                                             GC F C [UNCD] <> cFreezeCode [UNCD]
                                             GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
                                             GC IVI:Inventory Interface (wf) [IVI] <> cInventoryInterface [IVI]
                                             FC Foreign [CRRM] <> cCurrencyMode [CRRM]
                                             FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
                                             FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
                                             FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
                                             GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
                                             VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                                             "0" <> cSourceRequestingPOGeneration [POGS]
                                             "EP4310" <> szProgramID [PID]
                                             VA frm_USR0_UserID [USR0] <> szUserID [USER]
                                             GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
                                             FC Payment Terms [PTC] <> szPaymentTerms [PTC]
                                             GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
                                             GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
                                             GC Agreements Found [AFND] <> mnContractsFound [AFND]
                                             GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
                                             GC Product Source [PSR] <> szProductSource [PSR]
                                             GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
                                             GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
                                             GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
                                             GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
                                             GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
                                             GC Sub  [SUB] <> szSubsidiary [SUB]
                                             GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
                                             VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                                             VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                                             GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
                                             VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
                                             VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
                                             GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
                                             GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
                                             GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
                                             GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
                                             GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
                                             GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
                                             GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
                                             GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
                                             GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
                                             VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                                             VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                                             GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
                                             GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
                                   End If
                              End If
                         End If
                    End If
               End If
          End If
          // ---------------------------------------------------------------------------
          // **SV_ErrorStatus checking should ALWAYS FOLLOW RIGHT AFTER EditLine**
          // ---------------------------------------------------------------------------
          //
          // ISSUE 9249 - VALKIRIA - RBS
          If PO OpcaoViagens [EV01] is equal to "1"
               F0901.FetchSingle  [Index 2: Business Unit, Object, +]
                    VA frm_AccountId [AID] <- TK Account ID [AID]
                    GC Business Unit [OMCU] = TK Business Unit [MCU]
                    GC Obj Acct [OBJ] = TK Object Account [OBJ]
                    GC Sub  [SUB] = TK Subsidiary [SUB]
               ValidatePostEditCode(B0000098.ValidatePostEditCode)
                    VA frm_AccountId [AID] -> szAccountID [AID]
                    GC Quantity Ordered [UORGE1] -> mnUnits [U]
                    GC Subledger [SBL] -> szSubledger [SBL]
          End If
          // END ISSUE 9249
          If SV Error_Status is equal to CO SUCCESS
               Disable Grid(FC Grid,  <Current Row>, GC LineNo.)
               //
               // SAR 5579904 - Begin
               // Assgining GCAssetId with the retuned value from F4311EditLine, once it has ru
               // successfully
               //
               // SAR 8180793  Pt.2
               // Positive conditional checking works much better than negative.
               // We are going to use the original GC Asset ID value if the
               // VA_szAssetItemNumber_ASID comes back from Edit Line as a blank.
               //
               ! If VA evt_szAssetItemNumber_ASID [ASID] is not equal to <Blank>
               ! OrVA evt_szAssetItemNumber_ASID [ASID] is not equal to <NULL>
               ! OrVA evt_szAssetItemNumber_ASID [ASID] is not equal to "0"
                    ! GC Asset ID [ASII] = VA evt_szAssetItemNumber_ASID [ASID]
               ! End If
               //
               If VA evt_szAssetItemNumber_ASID [ASID] is equal to <Blank>
               Or VA evt_szAssetItemNumber_ASID [ASID] is equal to <NULL>
               Or VA evt_szAssetItemNumber_ASID [ASID] is equal to "0"
                    GC Asset ID [ASII] = VA evt_szAssetItemNumberHold_ASID [ASID]
               Else
                    GC Asset ID [ASII] = VA evt_szAssetItemNumber_ASID [ASID]
               End If
               //
               // End SAR 8180793 Pt.2
               //
               // SAR 5579904 - End
               //
               // Begin SAR 8691601- Moved code from before the error check to  after so that
               // error checking for f4311EditLine will happen  correctly .
               // SAR 8938306 - Passed GC Pymt Terms to szPaymenttermscode01
               ! IsColumnInPymtTermsTable(ISCOLPT.IsColumnInPymtTermsTable)
               !      GC Pymt Terms [PTC] -> szBehaviorEditString [BHVREDTST]
               !      GC Pymt Terms [PTC] -> szDescription001 [DL01]
               IsColumnInPymtTermsTable(ISCOLPT.IsColumnInPymtTermsTable)
                    GC Pymt Terms [PTC] -> szBehaviorEditString [BHVREDTST]
                    <NULL> <> szDescription001 [DL01]
                    GC Pymt Terms [PTC] -> szPaymenttermscode01 [PTC]
               //
               // ---------------------------------------------------------------------------
               // Client wanted ability to change item on non-stock item, like World
               // ---------------------------------------------------------------------------
               //
               // ---------------------------------------------------------------------------
               // Disable Item Number Field for all non "N" Inventory Interfaces
               // ---------------------------------------------------------------------------
               //
               // SAR 4991075 Begins
               If VA grd_cInventoryInterface_IVI [IVI] is not equal to "N"
                    Disable Grid(FC Grid,  <Current Row>, GC ItemNumber)
               End If
               // SAR 4991075 Ends
               //
               // SAR 7552861 BEGIN
               GC Previous Account Number [ANI] = GC Account Number [ANI]
               GC Previous Cost Center [OMCU] = GC Business Unit [OMCU]
               GC Previous Obj Acct [OBJ] = GC Obj Acct [OBJ]
               GC Previous Sub [SUB] = GC Sub  [SUB]
               // SAR 7552861 END
               // ---------------------------------------------------------------------------
               // Need to disable the line type cell to prevent changing a text line to a
               // non-text line.
               // ---------------------------------------------------------------------------
               //
               Disable Grid(FC Grid, <Current Row>, GC LnTy)
               //
               // Added for SAR 3034450
               VA frm_EditLineSucessful_EV01 [EV01] = "1"
               //
               // SAR 4792308
               // Disable SAR 42525678 changes
               VA grd_cLineError_EV01 [EV01] = "0"
               //
               // SAR 7221113
               VA grd_F4311EditLineCalled_EV01 [EV01] = "1"
               // Issue 8084 - Valkiria - RBS - 09/06/05
               //
               If PO OpcaoSuprimentos [EV01] is equal to "1"
               Or PO OpcaoCatalogo [EV01] is equal to "1"
               Or PO OpcaoViagens [EV01] is equal to "1"
                    If GC Account Number [ANI] is greater than <Blank>
                         VA frm_EXR [EXR] = GC Explanation -Remark- [EXR]
                    Else
                         VA frm_EXR [EXR] = <NULL>
                    End If
                    GetAuditInfo(B9800100.GetAuditInfo)
                         VA frm_DTE [DTE] <- jdDate [DTE]
                         VA frm_TME0 [TME0] <- mnTime [TME0]
                    VA frm_PID [PID] = "P4310"
                    F5543ICO.Insert  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                         FC Order Company [KCOO] -> TK Order Company (Order Number) [KCOO]
                         FC Order Number [DOCO] -> TK Document (Order No, Invoice, etc.) [DOCO]
                         FC F4301:Order Type [DCTO] -> TK Order Type [DCTO]
                         GC Change Order [SFXO] -> TK Order Suffix [SFXO]
                         GC Line Number [LNID] -> TK Line Number [LNID]
                         FC LocalEntrega [ADD1] -> TK Address Line 1 [ADD1]
                         GC Requisitante [ADD2] -> TK Address Line 2 [ADD2]
                         FC Local Cobrança [SHAN] -> TK Address Number - Ship To [SHAN]
                         GC Descrição 3 [MDSC] -> TK User Based Pricing Message Description [MDSC]
                         GC Descrição 4 [DSCPED] -> TK Descrição  de Pedido [DSCPED]
                         VA frm_USR0_UserID [USR0] -> TK Transaction Originator [TORG]
                         GC Destinatário 1 [AN8] -> TK Address Number [AN8]
                         GC Destinatário 2 [AN8] -> TK Address Number - 1st [AN81]
                         VA frm_EXR [EXR] -> TK Name - Remark Explanation [EXR]
                         GC Número Alocação [N001] -> TK Next Number Range 1 [N001]
                         VA frm_USR0_UserID [USR0] -> TK User ID [USER]
                         VA frm_PID [PID] -> TK Program ID [PID]
                         VA frm_CTID_ComputerID [CTID] -> TK Work Station ID [JOBN]
                         VA frm_DTE [DTE] -> TK Date - Updated [UPMJ]
                         VA frm_TME0 [TME0] -> TK Time of Day [TDAY]
                         FC Enviar E-Mail [EV01] -> TK J.D. EnterpriseOne Event Point 01 [EV01]
                         FC email [EMAL] -> TK Electronic Address [EMAL]
                    If SV File_IO_Status is equal to CO SUCCESS
                    Else
                         F5543ICO.Update  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                              FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                              FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                              FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                              GC Change Order [SFXO] = TK Order Suffix [SFXO]
                              GC Line Number [LNID] = TK Line Number [LNID]
                              GC Requisitante [ADD2] -> TK Address Line 2 [ADD2]
                              GC Descrição 3 [MDSC] -> TK User Based Pricing Message Description [MDSC]
                              GC Descrição 4 [DSCPED] -> TK Descrição  de Pedido [DSCPED]
                              GC Destinatário 1 [AN8] -> TK Address Number [AN8]
                              GC Destinatário 2 [AN8] -> TK Address Number - 1st [AN81]
                              VA frm_EXR [EXR] -> TK Name - Remark Explanation [EXR]
                              GC Número Alocação [N001] -> TK Next Number Range 1 [N001]
                              VA frm_USR0_UserID [USR0] -> TK User ID [USER]
                              VA frm_PID [PID] -> TK Program ID [PID]
                              VA frm_CTID_ComputerID [CTID] -> TK Work Station ID [JOBN]
                              VA frm_DTE [DTE] -> TK Date - Updated [UPMJ]
                              VA frm_TME0 [TME0] -> TK Time of Day [TDAY]
                              FC Enviar E-Mail [EV01] -> TK J.D. EnterpriseOne Event Point 01 [EV01]
                              FC email [EMAL] -> TK Electronic Address [EMAL]
                    End If
               End If
               // End Issue 8084
          Else
               //
               // ---------------------------------------------------------------------------
               // If EditLine failed, do not save off Default Line Type in the grid.
               // Allow error to be resolve and let EditLine re-assign Line Type then
               // SAR 6465589  - Condition The blanking out of the line type to only happen
               // on Add mode and if the processing option is blank and only if EditLine
               // returns and error
               // ---------------------------------------------------------------------------
               //
               // SAR 6421594 Begins
               // SAR 6891879 Begin - Only blank out the line type if the item number field
               // is not blank.
               //
               If PO szLineType [LNTY] is equal to <Blank>
               And SV Form_ Mode is equal to CO ADD_MODE
               And GC Item Number [UITM] is not equal to <Blank>
                    GC Ln Ty [LNTY] = <NULL>
               End If
               //
               // SAR 6891879 End
               // SAR 6421594 Ends
               //
               If VA evt_cLineNumberExists_EV01 [EV01] is not equal to "1"
                    GC Line Number [LNID] = "0"
               End If
               //
               // SAR 4792308
               VA grd_cLineError_EV01 [EV01] = "1"
               //
               // ---------------------------------------------------------------------------
               // Added stop processing if editline fails -SAR  5031826
               // Kit processing should not occur if parent line fails in edit line
               // ---------------------------------------------------------------------------
               //
               Stop Processing
          End If
          //
          // Restore display values if Multiple accounts is on
          If GC Multiple Accounts [MACT] is equal to "1"
               GC Account Number [ANI] = TV *** ACCOUNT DISTRIBUTION ***
               GC Business Unit [OMCU] = <Blank>
               GC Obj Acct [OBJ] = <Blank>
               GC Sub  [SUB] = <Blank>
               GC Sub Type [SBLT] = <Blank>
               GC Subledger [SBL] = <Blank>
          End If
          //
     End If
     //
     //    //
     // **********************************************************************
     // SAR 8692806 - If the line is an OTM qualified line, and the user has
     // entered
     // carrier number, mode of transport or shipment number, blank the fields and
     // warn the user.
     // ***********************************************************************
     If VA frm_cOTMInstalled_EV01 [EV01] is equal to "1"
          If GC Item Number [UITM] is not equal to <NULL>
          And GC Quantity Ordered [UORGE1] is not equal to "0"
          And GC Item Number [UITM] is not equal to "0"
               VA frm_szConcatLnty_DTAI [DTAI] = concat([FC F4301:Order Type [DCTO]], [GC Ln Ty [LNTY]])
               GetUDC(X0005.GetUDC)
                    "49" -> szSystemCode [SY]
                    "TP" -> szRecordTypeCode [RT]
                    VA frm_szConcatLnty_DTAI [DTAI] -> szUserDefinedCode [KY]
                    "1" -> cSuppressErrorMessage [EV01]
                    VA frm_szOTMErrorMsg_DTAI [DTAI] <- szErrorMessageId [DTAI]
               If VA frm_szOTMErrorMsg_DTAI [DTAI] is equal to <Blank>
                    If VA frm_cTextYN_TXYN [TXYN] is not equal to "Y"
                         If BC Item Number - Related (Kit) (F4311.0) [RLIT] is equal to or empty <Blank>
                              If GC Carrier Number [ANCR] is not equal to <Blank>
                              Or GC Mod Trn [MOT] is not equal to <Blank>
                              Or GC Shipment Number [SHPN] is not equal to <Blank>
                                   GC Carrier Number [ANCR] = <Blank>
                                   GC Mod Trn [MOT] = <Blank>
                                   GC Shipment Number [SHPN] = <Blank>
                                   Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC ShipmentNumber, "49T50")
                                   Set Grid Color(FC Grid,  <Currently Selected Row>, GC ModTrn, <Yellow>)
                                   Set Grid Color(FC Grid, <Currently Selected Row>, GC ShipmentNumber, <Yellow>)
                              End If
                              Disable Grid(FC Grid,  <Currently Selected Row>, GC CarrierNumber)
                              Disable Grid(FC Grid,  <Currently Selected Row>, GC ShipmentNumber)
                              Disable Grid(FC Grid, <Currently Selected Row>, GC ModTrn)
                         End If
                    End If
               End If
          End If
     End If
     //
     // SAR  8927324 - Begins
     // Commented 8737168 fix , so that updated Shipto will be retained
     ! // SAR 8737168 - Added Code to stop edit line from defaulting old shipto
     
     ! // nformation when it has been changed in the header .
     ! If SV Form_ Mode is equal to CO UPDATE_MODE
          ! If FC Ship To [SHAN] is not equal to GC Ship To Number [SHAN]
               ! GC Ship To Number [SHAN] = FC Ship To [SHAN]
          ! End If
     ! End If
     // SAR  8927324 - Ends
     // ---------------------------------------------------------------------------
     //      Initialize the POE trigger flag for next use.
     // ---------------------------------------------------------------------------
     //
     GC POE Trigger Reprice [EV01] = <Blank>
     //
     // SAR 4356400 Begins
     If GC Extended Weight [ITWT] is equal to <Blank>
     Or GC Extended Weight [ITWT] is equal to "0"
          GC Extended Weight [ITWT] = VA grd_TempExtendedWeight_ITWT [ITWT]
     Else
          If GC Extended Weight [ITWT] is not equal to VA grd_TempExtendedWeight_ITWT [ITWT]
          And VA frm_TempUOMChangeFlag_EV01 [EV01] is not equal to "1"
               VA grd_TempExtendedWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
          Else
               GC Extended Weight [ITWT] = VA grd_TempExtendedWeight_ITWT [ITWT]
          End If
     End If
     VA frm_TempUOMChangeFlag_EV01 [EV01] = "0"
     VA grd_TempQtyOrdered_UORGE1 [UORGE1] = GC Quantity Ordered [UORGE1]
     GC Vol  UoM [VLUM] = VA grd_TempVolumeUOM_VLUM [VLUM]
     GC Wt UoM [WTUM] = VA grd_TempWeightUOM_WTUM [WTUM]
     GC Tr. UoM [UOM] = VA grd_TempTransactionUOM_TRUM [TRUM]
     // SAR 4356400 Ends
     //
     //
     GetUDCDescription(N0800031.GetUDCDescription)
          "IFLA" -> szDataDictionaryItem [DTAI]
          UNDEFINED <> szSystemCode [SY]
          UNDEFINED <> szUserDefinedCodes [RT]
          UNDEFINED <> cUserDefinedCode [EV01]
          GC It Mg [IFLA] -> szUserDefinedCode [KY]
          GC Item Flash Message [DL01] <- szDescription01 [DL01]
          UNDEFINED <> szDescription02 [DL02]
          UNDEFINED <> cErrorCode [ERRC]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
     //
     If FC Ship To [SHAN] is equal to "0"
          FC Ship To [SHAN] = GC Ship To Number [SHAN]
     End If
     //
     // BEGIN SAR 7274047
     If VA frm_PrevSuppNumber_AN8 [AN8] is not equal to FC Address Number [AN8]
     Or VA frm_PrevShipToNumber_SHAN [SHAN] is not equal to FC Ship To [SHAN]
          PopulateAddressNumber(B4303010.PopulateAddressNumber)
               VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
               FC Address Number [AN8] -> mnSupplierNumber [AN8]
               FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
               FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
               FC Ship To [SHAN] -> mnShipToNumber [SHAN]
               FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
               FC SHIP TO [DL01] <- szShipToDescription [DL01]
     End If
     VA frm_PrevShipToNumber_SHAN [SHAN] = FC Ship To [SHAN]
     VA frm_PrevSuppNumber_AN8 [AN8] = FC Address Number [AN8]
     // END SAR 7274047
     //
End If
//
// ========================================================
// Criticar a conta informada em função do Branch/Plant
//
// Recuperar a Cia do projeto para poder  criticar a conta informada
// ========================================================
//
VA frm_OBJW [OBJ] = GC Obj Acct [OBJ]
VA frm_SUBW [SUB] = GC Sub  [SUB]
If GC Account Number [ANI] is not equal to <Blank>
And GC Account Number [ANI] is not equal to <NULL>
     F0006.FetchSingle  [Index 1: Cost Center]
          FC Branch/Plant1 [MCU] = TK Business Unit [MCU]
          VA frm_CompanyMCU [CO] <- TK Company [CO]
          VA frm_CostCenterSubsequent [MCUS] <- TK Business Unit - Subsequent [MCUS]
     If SV File_IO_Status is equal to CO ERROR
          VA frm_CompanyMCU [CO] = "          "
     End If
     //
     VA frm_AcctNoInputModeAux [ANI] = GC Account Number [ANI]
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_AcctNoInputModeAux [ANI] -> szAccountNumber [ANI]
          VA frm_CostCenterConta [MCU] <- szDatabaseBusinessUnit [MCU]
          VA frm_OBJW [OBJ] <- szDatabaseObject [OBJ]
          VA frm_SUBW [SUB] <- szDatabaseSubsidiary [SUB]
          "7" -> cBasedOnFormat [EV01]
          <Blank> <> cFormatAccountNumberAs [EV02]
          VA frm_CompanyConta [CO] <- szAccountCompany [CO]
     //
     // -----------------------------------------------------------------------------
     //  7065 -   Marilia - ajuste IF p/não dar erro lin canc/recebida
     If VA frm_CompanyConta [CO] is not equal to VA frm_CompanyMCU [CO]
     And VA frm_CompanyConta [CO] is not equal to <Blank>
     And VA frm_CompanyConta [CO] is not equal to <NULL>
     And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
     And GC Next Status [NXTR] is not equal to "999"
          // -----------------------------------------------------------------------------
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Account Number, "E5543001")
     End If
End If
// ========================================================
// =====================================================
//    KIT PROCESSING
//
// -----------------------------------------------------------------------
//    SAR 6069973 - All the kit related code has been consolidated below
// -----------------------------------------------------------------------
//    Do not call Kit Processing if the POE_EditLine has not been executed for
//    parent item line.
// ---------------------------------------------------------------------------
//
If GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
     VA frm_EV11_KitsProcessed [EV11] = "1"
Else
     VA frm_EV11_KitsProcessed [EV11] = "0"
End If
//
If GC EV01:Record in Detail W.File (wf) [EV01] is equal to "1"
And VA grd_StockingType_STKT [STKT] is equal to "K"
     VA frm_KitRecordInDetail_EV01 [EV01] = "1"
Else
     VA frm_KitRecordInDetail_EV01 [EV01] = "0"
End If
//
// SAR 8482198- Add OR condition -  When the promised delivery date for kit
// Parent has changed then also the  kit window has to be called again by
// setting the kit processed flag as not processed.
If VA grd_OriginalOrderQty_UORG [UORG] is not equal to GC Quantity Ordered [UORGE1]
Or GC Original Promised Date [OPDJ] is not equal to GC Promised Delivery [PDDJ]
     VA frm_EV11_KitsProcessed [EV11] = "0"
     // SAR 6787060 Begin - Add else to prevent kit window except when quantity is
     // changed.
Else
     VA frm_EV11_KitsProcessed [EV11] = "1"
     // SAR 6787060 End
End If
//
// SAR 6464957
If VA grd_StockingType_STKT [STKT] is equal to "K"
And VA frm_EV11_KitsProcessed [EV11] is not equal to "1"
And GC EV04:Skip Line/Cancelled (wf) [EV04] is not equal to "1"
     //
     // --------------------------------------------------------------------
     //    Restrict user from going more than once to Kit Selection window from
     //    Edit Line in the same session.
     // --------------------------------------------------------------------
     //
     // SAR 6660835 - Begin - Remove condition for Kit Selection Window.
     ! If VA grd_cKitProcessed_EV01 [EV01] is not equal to "1"
          Press Button(FC Kit Processing)
          ! VA grd_cKitProcessed_EV01 [EV01] = "1"
     ! End If
     // SAR 6660835 - End
     //
End If
//
// SAR 6787060 Begin - adjustment to prevent kit window except when quantity
// is changed.
VA grd_OriginalOrderQty_UORG [UORG] = GC Quantity Ordered [UORGE1]
// SAR 6787060 End
// ========================================================
// ISSUE 3233 - RBS - VALKIRIA
// ========================================================
// ISSUE 5876 - RBS - VALKIRIA
// ========================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     If FC Carrier Number [ANCR] is equal to "0"
          FC Carrier Number [ANCR] = GC Carrier Number [ANCR]
     End If
     If FC Freight Handling Code [FRTH] is equal to <Blank>
          FC Freight Handling Code [FRTH] = GC F H [FRTH]
     End If
     If FC LocalEntrega [ADD1] is equal to <Blank>
          FC LocalEntrega [ADD1] = GC Local Entrega [ADD1]
     End If
End If
// ===============================================================
//
// ---------------------------------------------------------------------------
// If the processing option is blank, no agreement assignment, issue error
// message if an agreement number is entered.  SAR 2026159 6/98
// ---------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
// 7065 -   Marilia - ajuste IF p/não consistir linhas canceladas/ recebidas
If PO cAgreementSearchMethod [SCH1] is equal to <Blank>
And GC Objeto de Custo 1 [DMCT] is not equal to <Blank>
And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
     ! If PO cAgreementSearchMethod [SCH1] is equal to <Blank>
     ! And GC Objeto de Custo 1 [DMCT] is not equal to <Blank>
          // -----------------------------------------------------------------------------
          Set Grid Cell Error(FC Grid, <Current Row>, GC AgreementNumber, "095Q")
     ! End If
End If
//
// ==============================================================
// ---------------------------------------------------------------------------
// Check for agreements
// ---------------------------------------------------------------------------
//
If PO cAgreementSearchMethod [SCH1] is equal to "1"
     // Begin SAR 11051893
     If GC Agreements Found [AFND] is greater than or equal to "1"
          // End SAR 11051893
          Set Grid Row Bitmap(FC Grid, <Current Row>, <Check Mark>)
          // SAR 5939957
          Set Grid Font(FC Grid,  <Currently Selected Row>, GC AgreementExists, <,Bold,12,Black>)
          GC Agreement Exists [AGRE] = "X"
          // Begin SAR 11051893
          // Added warning to notify the user that agreement exists for the entered
          // values
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AgreementExists, "4310A")
          // End SAR 11051893
     End If
End If
If PO cAgreementSearchMethod [SCH1] is equal to "2"
     If GC Agreements Found [AFND] is greater than or equal to "1"
          Set Grid Row Bitmap(FC Grid, <Current Row>, <Check Mark>)
          // SAR 5939957
          Set Grid Font(FC Grid,  <Currently Selected Row>, GC AgreementExists, <,Bold,12,Black>)
          GC Agreement Exists [AGRE] = "X"
          // Begin SAR 11051893
          // Added warning to notify the user that agreement exists for the entered
          // values
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AgreementExists, "4310A")
          // End SAR 11051893
     Else
          Set Grid Row Bitmap(FC Grid,  <Currently Selected Row>,  <Blank/Clear>)
          GC Agreement Exists [AGRE] = <Blank>
     End If
End If
// Begin SAR 11051893
If PO cAgreementSearchMethod [SCH1] is equal to "3"
     If GC Agreements Found [AFND] is greater than or equal to "1"
          Set Grid Row Bitmap(FC Grid,  <Currently Selected Row>,  <Check Mark>)
          Set Grid Font(FC Grid,  <Currently Selected Row>, GC AgreementExists, <,Bold,12,Black>)
          GC Agreement Exists [AGRE] = "X"
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC AgreementExists, "4310A")
     End If
End If
// End SAR 11051893
//
//  ==============================================================
//
// ---------------------------------------------------------------------------
//     Perform blanket order release.
// ---------------------------------------------------------------------------
//
VA frm_RelieveBlanketOrder [EV06] = "0"
If GC EV07..BlanketOrdersFound(wf) [EV07] is equal to "2"
     Set Grid Row Bitmap(FC Grid, <Current Row>, <Check Mark>)
     // SAR 5939957
     Set Grid Font(FC Grid,  <Currently Selected Row>, GC BlanketsExist, <,Bold,12,Black>)
     GC Blankets Exist [BLKT] = "X"
Else
     If GC EV07..BlanketOrdersFound(wf) [EV07] is equal to "1"
          Disable Grid(FC Grid,  <Current Row>, GC UnitCost)
          // Begin SAR 4690221
          Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedCost)
          // End SAR 4690221
     End If
     // SAR 5908350 Begin
     If GC EV07..BlanketOrdersFound(wf) [EV07] is equal to "3"
          Disable Grid(FC Grid,  <Current Row>, GC UnitCost)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ExtendedCost)
          Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
          VA frm_cBlanketsCalled_EV01 [EV01] = "1"
          Press Button(FC PROCESS: Load Grid From Cache)
          VA frm_cBlanketsCalled_EV01 [EV01] = <NULL>
     End If
     // SAR 5908350 End
End If
//
// ==========================================================
// ---------------------------------------------------------------------------
// Check for substitutes  by calling N4302000
// ---------------------------------------------------------------------------
//
// ---------------------------------------------------------------------------
// Only process lines that have not been cancelled
// ---------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
// 7065 -   Marilia - ajuste IF p/não consistir linhas canceladas/ recebidas
If GC Last Status [LTTR] is less than or equal to "980"
And GC Item Number [UITM] is not equal to <Blank>
And GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
     ! If GC Last Status [LTTR] is less than or equal to "980"
          // -----------------------------------------------------------------------------
          // ---------------------------------------------------------------------------
          //
          // Check stock type, O for Obsolete or U for Obsolete - Used up = replacement
          // else substitution.
          // ---------------------------------------------------------------------------
          //
          // SA 6464957
          If VA grd_StockingType_STKT [STKT] is equal to "O"
          Or VA grd_StockingType_STKT [STKT] is equal to "U"
               VA frm_XRT_XRefType [XRT] = PO szTypeCrossReferenceT [XRT2]
               VA frm_EV01_SubItemsOK [EV01] = "1"
          Else
               VA frm_XRT_XRefType [XRT] = PO szCrossReferenceType [XRT]
               VA frm_EV01_SubItemsOK [EV01] = "1"
          End If
          //
          If VA frm_XRT_XRefType [XRT] is not equal to <Blank>
               //
               // SAR 4806335 Begins
               // SAR 7274186 Begins
               ! F4104GetCrossReferenceItems(N4302000.F4104GetCrossReferenceItems)
               !      GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
               !      FC Address Number [AN8] -> mnAddressNumber [AN8]
               !      BC Date - Order/Transaction (F4301.0) [TRDJ] -> jdDateTransactionJulian [TRDJ]
               !      VA frm_XRT_XRefType [XRT] -> szCrossReferType [XRT]
               !      VA evt_ERRC_ErrorFlag [ERRC] <- cErrorCode [ERRC]
               !      GC Item Number [UITM] -> szItemNoUnknownFormat [UITM]
               GetXREFItem(B4302000.GetXREFItem)
                    GC Branch/ Plant [MCU] -> szCostCenter [MCU]
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                    BC Date - Order/Transaction (F4301.0) [TRDJ] -> jdOrderDate [TRDJ]
                    VA frm_XRT_XRefType [XRT] -> szCrossReferType [XRT]
                    VA evt_ERRC_ErrorFlag [ERRC] <- cErrorCode [ERRC]
               //
               // ---------------------------------------------------------------------------
               // If XRef details found, indicate that this grid row needs further inspection b
               // setting the row header bitmap.
               // ---------------------------------------------------------------------------
               //
               // ---------------------------------------------------------------------------
               // SAR 5242658 - Only check substitutes for ITEMS
               // ---------------------------------------------------------------------------
               //
               If GC Last Status [LTTR] is less than or equal to "980"
               And GC Item Number [UITM] is not equal to <Blank>
                    If VA evt_ERRC_ErrorFlag [ERRC] is equal to "0"
                         // SAR 4806335 Ends
                         //
                         Set Grid Row Bitmap(FC Grid, <Current Row>, <Check Mark>)
                         // SAR 5939957
                         Set Grid Font(FC Grid,  <Currently Selected Row>, GC SubstitutionExists, <,Bold,12,Black>)
                         GC Substitution Exists [SBST] = "X"
                         //
                         Set Grid Cell Error(FC Grid,  <Current Row>, GC SubstitutionExists, "093S")
                    End If
               End If
               // SAR 5242658 End
               //
          End If
     ! End If
End If
//
// ---------------------------------------------------------------------------
//    Protect the currency fields once a line has been entered successfully
// ---------------------------------------------------------------------------
//
If GC EV01:Record in Detail W.File (wf) [EV01] is equal to "1"
     //
     If SL CurrencyProcessing is not equal to "N"
          //
          //
          // ---------------------------------------------------------------------------
          //     If currency is on, then set the decimals of the extended amount field
          //    and the Order Total field
          // ---------------------------------------------------------------------------
          //
          If FC Foreign [CRRM] is equal to "F"
               DecimalTriggerGetByCurrency(B1100006.DecimalTriggerGetByCurrency)
                    FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
                    GC Extended Cost [AEXPE1] <> mnDomOrFornAmount01 [AN01]
                    GC TOT1:Previous Line Total(wf) [TOT1] <> mnDomOrFornAmount02 [AN02]
          Else
               DecimalTriggerGetByCurrency(B1100006.DecimalTriggerGetByCurrency)
                    FC To Currency Code [CRDC] <> szCurrencyCode [CRCD]
                    GC Extended Cost [AEXPE1] <> mnDomOrFornAmount01 [AN01]
                    GC TOT1:Previous Line Total(wf) [TOT1] <> mnDomOrFornAmount02 [AN02]
          End If
     End If
     //
     If VA frm_EV01_ProtectCurrFields [EV01] is not equal to "1"
          Disable Control(FC Currency Code [CRCD])
          //
          // ---------------------------------------------------------------------------
          // If it's domestic, then turn off foreign checkbox
          // ---------------------------------------------------------------------------
          //
          If FC Currency Code [CRCD] is equal to FC To Currency Code [CRDC]
               FC Foreign [CRRM] = "D"
          End If
          Disable Control(FC Foreign [CRRM])
          Disable Control(FC ExchangeRate_CRR [CRR])
          Disable Control(FC Branch/Plant1 [MCU])
          Disable Control(FC Address Number [AN8])
          Disable Control(FC Long Address Number_ALKY [ALKY])
          Disable Control(FC Order Date [TRDJ])
          Disable Control(FC Ship To [SHAN])
          Disable Control(FC Long Ship To_ALKY [ALKY])
          Disable Control(FC HOLD Code [HOLD])
          Disable Control(FC Payment Terms [PTC])
          // ======================================================
          // ISSUE 3233 - RBS - VALKIRIA
          // ======================================================
          // ISSUE 5876 - RBS - VALKIRIA
          // ======================================================
          If PO OpcaoCatalogo [EV01] is equal to "1"
          And PO OpcaoSuprimentos [EV01] is equal to "1"
               Disable Control(FC Carrier Number [ANCR])
               Disable Control(FC Freight Handling Code [FRTH])
               Disable Control(FC Local Cobrança [SHAN])
               Disable Control(FC LocalEntrega [ADD1])
          End If
          //
          // SAR 8164296
          Press Button(FC Disable Additonal Properties)
          Press Button(FC Disable Category Code)
          VA frm_EV01_ProtectCurrFields [EV01] = "1"
     End If
     //
End If
//
// ===============================================================
//
// ---------------------------------------------------------------------------
//     Save the value of the price returned for price override flag logic
//     See ER attached to the Unit Price 'Column is exited' event.
// ---------------------------------------------------------------------------
//
GC PRRCE1:Old Unit Price (wf) [PRRCE1] = GC Unit Cost [UPAX]
//
//
// ---------------------------------------------------------------------------
//     Calculate the new order total by subtracting the original line total
//    and adding the new extended amount into the total.
// ---------------------------------------------------------------------------
//
GC TOT1:Previous Line Total(wf) [TOT1] = GC Extended Cost [AEXPE1]
//
If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
Or GC Next Status [NXTR] is equal to "999"
     //      7065 -   Marilia -     não consiste as linhas canceladas, nem recebidas
Else
     //
     // *****************************************************************************
     //
     // SERGIO BENCKE - ISSUE 2992 - CONSISTE CENTRO DE RESP NO CAMPO VR02
     //
     // SERGIO BENCKE - INICIALIZA BF PARA VERIFICAR SE CONTA É AQUISIÇÃO
     //
     If VA frm_OBJW [OBJ] is less than or equal to <Blank>
     And VA frm_SUBW [SUB] is less than or equal to <Blank>
     Else
          VA frm_CTA13 [AA02] = substr(ltrim([VA frm_OBJW [OBJ]], <Blank>), "0", "2")
          F0012GetAAIRangeOfAccounts(B0000115.F0012GetAAIRangeOfAccounts)
               VA frm_CompanyMCU [CO] -> szCompany [CO]
               "FC" -> szItemAAI [ITEM]
               VA frm_ErrorGetRange [EV01] <- cWithInRangeFlag [EV01]
          If VA frm_ErrorGetRange [EV01] is equal to "1"
               VA frm_Primeira_Chamada [EV01] = "N"
          End If
          F0901.FetchSingle  [Index 2: Business Unit, Object, +]
               GC Business Unit [OMCU] = TK Business Unit [MCU]
               GC Obj Acct [OBJ] = TK Object Account [OBJ]
               GC Sub  [SUB] = TK Subsidiary [SUB]
               VA frm_CCODE20 [R020] <- TK Category Code - G/L20 [R020]
          If VA frm_CCODE20 [R020] is not equal to "D"
               AAIRangeOfAccountsCompare(B0000115.AAIRangeOfAccountsCompare)
                    VA frm_CompanyMCU [CO] -> szCompany [CO]
                    "FC" -> szItemAAI [ITEM]
                    VA frm_OBJW [OBJ] -> szObject [OBJ]
                    VA frm_SUBW [SUB] -> szSubsidiary [SUB]
                    VA frm_Conta_Esta_No_Interv [EV01] <- cWithInRangeFlag [EV01]
               If VA frm_Conta_Esta_No_Interv [EV01] is equal to "1"
               Or VA frm_CTA13 [AA02] is equal to "13"
                    VA frm_MCUW [MCU] = ltrim([GC Centro de Respons. [VR02]], <Blank>)
                    VA frm_AA18 [AA18] = substr(ltrim([GC Centro de Respons. [VR02]], <Blank>), "7", "18")
                    VA frm_COW [CO] = lpad(substr([VA frm_MCUW [MCU]], "0", "3"), "0", "5")
                    VA frm_MCUW [MCU] = concat("     ", substr([VA frm_MCUW [MCU]], "0", "7"))
                    F0006.FetchSingle  [Index 1: Cost Center]
                         VA frm_MCUW [MCU] = TK Business Unit [MCU]
                    If SV File_IO_Status is equal to CO SUCCESS
                    And VA frm_AA18 [AA18] is less than or equal to <Blank>
                         If VA frm_COW [CO] is not equal to VA frm_CompanyMCU [CO]
                              Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Centro deRespons., "55106")
                         Else
                         End If
                    Else
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Centro deRespons., "55105")
                    End If
               End If
          End If
          //
          // Issue 10278 - Luiz Gindri - 01/07/2008
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 1)
          Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 2)
          If VA frm_CCODE20 [R020] is equal to ("D","R","S")
               //  Issue 6711 - Fernando Herrera - Início - 28/01/2004
               //  Issue 6711 - Consistência dos campos Detinatários Obrigatórios
               If GC Destinatário 1 [AN8] is not equal to "0"
                    If GC Destinatário 2 [AN8] is not equal to "0"
                    Else
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 2, "5516C")
                    End If
               Else
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Destinatário 1, "5516C")
               End If
               //  Issue 6711 - Fernando Herrera - Final
          End If
          // Fim Issue 10278
          // SERGIO BENCKE - ISSUE 2906 - CONSISTE PROJETO/RUBRICA NO CAMPO VR01
          //
     End If
     //
     // Se estiver ativado o objeto de custo não permite brancos
     //
     If VA frm_CMS_Flag [EV01] is equal to "1"
          If GC Obj Acct [OBJ] is greater than or equal to "3"
          And GC Obj Acct [OBJ] is less than or equal to "499999"
               If GC Objeto de Custo 1 [DMCT] is equal to <Blank>
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Objeto deCusto 1, "071J")
               End If
               If GC Objeto de Custo 2 [PDP2] is equal to <Blank>
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Objeto deCusto 2, "071J")
               End If
               If GC Objeto de Custo 3 [PDP3] is equal to <Blank>
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Objeto deCusto 3, "071J")
               End If
               If GC Objeto de Custo 4 [PDP4] is equal to <Blank>
                    Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Objeto deCusto 4, "071J")
               End If
          End If
     End If
     //
End If
// ++++++++++++++++++++++++++++++++
// -----------------------------------------------------------------------------
// INICIO - ISSUE 7065 - Marília - Consistência do CHIS x Descr. Histórico
// -----------------------------------------------------------------------------
//
// =====
If GC ACTN:Action Code (wf) [ACTN] is equal to "D"
Or GC Next Status [NXTR] is equal to "999"
     //      7065 -   Marilia -     não consiste as linhas canceladas, nem recebidas
Else
     //
     VA frm_ErroHistorico [AA01] = "N"
     VA frm_ERRORBS [EV01] = <NULL>
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Explanation-Remark-)
     VA frm_Cod_Historico [CHIS] = GC CHIS [CHIS]
     VA frm_HistoricoGCAA03 [AA03] = lpad([VA frm_Cod_Historico [CHIS]], "0", "3")
     VA frm__AchouCerto [AA01] = "N"
     //
     //
     If GC Account Number [ANI] is not equal to <Blank>
     And GC Account Number [ANI] is not equal to <NULL>
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Account Number [ANI] -> szAccountNumber [ANI]
               VA frm_CostCenterConta [MCU] <- szDatabaseBusinessUnit [MCU]
               VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
               VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
               "7" -> cBasedOnFormat [EV01]
               VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
          F5509HIS.Select  [Index 1: Índice]
               VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
          F5509HIS.FetchNext  [Index 1: Índice]
               VA frm_CompanyHIS [CO] <- TK Company [CO]
               VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
               VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
               VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          While SV File_IO_Status is equal to CO SUCCESS
               If VA frm_ExigeAA01 [AA01] is equal to "S"
                    If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                    Or VA frm_CompanyHIS [CO] is equal to "*"
                         If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
                         Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                              If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                              Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                                   VA frm_ErroHistorico [AA01] = "N"
                                   VA frm__AchouCerto [AA01] = "S"
                                   Consiste_hist_padrao(N5509HIS.Consiste_hist_padrao)
                                        GC Explanation -Remark- [EXR] -> HISTORICO [RMK]
                                        VA frm_ERRORBS [EV01] <- ERRO_V1 [EV01]
                                        VA frm_COD_ERRO [AA05] <- COD_ERRO [AA05]
                                   If VA frm_ERRORBS [EV01] is equal to "1"
                                        Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Explanation-Remark-, VA frm_COD_ERRO)
                                   End If
                                   // ---------------------------------------------------------
                                   If VA frm_ERRORBS [EV01] is not equal to "1"
                                        VA frm_RBSCod_HistoricoAux_CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                        If GC CHIS [CHIS] is less than or equal to "0"
                                             VA frm_HIST4POS [EV01] = substr([GC Explanation -Remark- [EXR]], "3", "1")
                                             VA frm_RBS3PosRemark_AA03 [AA03] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                             VA frm_SY [SY] = "55"
                                             VA frm__RT [RT] = "HI"
                                             VA frm__KY [KY] = concat("       ", lpad([VA frm_RBS3PosRemark_AA03 [AA03]], "0", "3"))
                                             F0005.FetchSingle  [Index 1: System, Type, Code]
                                                  VA frm_SY [SY] = TK Product Code [SY]
                                                  VA frm__RT [RT] = TK User Defined Codes [RT]
                                                  VA frm__KY [KY] = TK User Defined Code [KY]
                                                  VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
                                             If SV File_IO_Status is equal to CO SUCCESS
                                                  GC CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                                             Else
                                                  Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                             End If
                                        Else
                                             If GC CHIS [CHIS] is not equal to VA frm_RBSCod_HistoricoAux_CHIS [CHIS]
                                                  Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Explanation-Remark-, "55200")
                                             End If
                                        End If
                                   End If
                                   // ---------------------------------------------------------
                              Else
                                   If VA frm__AchouCerto [AA01] is equal to "S"
                                   Else
                                        VA frm_ErroHistorico [AA01] = "S"
                                   End If
                              End If
                         End If
                    End If
               End If
               F5509HIS.FetchNext  [Index 1: Índice]
                    VA frm_CompanyHIS [CO] <- TK Company [CO]
                    VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
                    VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
                    VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
          End While
     End If
     //
     If VA frm__AchouCerto [AA01] is not equal to "S"
     And GC CHIS [CHIS] is not equal to "0"
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554101")
     Else
          If VA frm_ErroHistorico [AA01] is equal to "S"
          And GC CHIS [CHIS] is equal to "0"
               // - erro Exige Histórico
               Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC CHIS, "554102")
          Else
               If VA frm_ERRORBS [EV01] is not equal to "1"
                    If GC Explanation -Remark- [EXR] is not equal to <Blank>
                    And GC Explanation -Remark- [EXR] is not equal to <NULL>
                    And GC CHIS [CHIS] is equal to "0"
                         GC Explanation -Remark- [EXR] = <NULL>
                         Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
                         Disable Grid(FC Grid, <Currently Selected Row>, GC Explanation-Remark-)
                    End If
               End If
          End If
     End If
End If
// -----------------------------------------------------------------------------
// FIM  - ISSUE 7065 - Marília - Consistência do CHIS x Descr. Histórico
// -----------------------------------------------------------------------------
// ++++++++++++++++++++++++++++++++++++++++++++++++
//
// ISSUE 7707 - Valkiria Schulte - Conta Contábil x F5543DOC
//
If GC ACTN:Action Code (wf) [ACTN] is not equal to "D"
And GC Next Status [NXTR] is not equal to "999"
And GC Item Number [UITM] is greater than <Blank>
And GC Account Number [ANI] is greater than <Blank>
     // Issue 7954 - Valkiria - Não limpar erros anteriores da conta
     // End Issue 7954
     ContaContabilxTipoDocumento(N5543DOC.ContaContabilxTipoDocumento)
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA frm_DTAI_F5543DOC [DTAI] <- szDataItem [DTAI]
          GC Account Number [ANI] -> szAcctNoInputMode [ANI]
     If VA frm_DTAI_F5543DOC [DTAI] is greater than <Blank>
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Account Number, VA frm_DTAI_F5543DOC)
     End If
End If
// END ISSUE 7707
// ---------------------------------------------------------------------------
// SAR 5228354 Product Variance Enhancement
// ---------------------------------------------------------------------------
If VA grd_cMatrixControlled_MIC [MIC] is equal to "1"
And PO cInventoryParent [SEGB] is not equal to "1"
     Press Button(FC Matrix Order Entry)
End If
// Begin SAR 5133689
If VA grd_StockingType_STKT [STKT] is equal to "C"
     If GC Short Item No [ITM] is equal to "0"
     Or GC Short Item No [ITM] is equal to <Blank>
     Or GC Short Item No [ITM] is equal to <NULL>
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
               GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
               GC Short Item No [ITM] <- mnShortItemNumber [ITM]
               FC Address Number [AN8] -> mnAddressnumber [AN8]
     End If
     // If Configurator is not already going to be called
     If VA frm_P32942ConfigItemCall [EV01] is not equal to "0"
          F3290ConfiguratorCache(B3202100.F3290ConfiguratorCache)
               "1" -> cCacheActionCode [EV01]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageID [DTAI]
               "1" -> nIndexNumber [INT01]
               "2" -> nNumberOfKeys [INT01]
               VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
               GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
               VA evt_cPOBasedOnDate_POBD [POBD] <- cPOBasedOnDate [POBD]
     End If
     // SAR 87839191 Begin
     // If PO based on date is Requested Date and if Requested Date has
     // changed, then call configurator
     If VA evt_cPOBasedOnDate_POBD [POBD] is less than or equal to "0"
     And VA frm_cRequestedDateChgd_EV01 [EV01] is equal to "1"
          VA frm_P32942ConfigItemCall [EV01] = "0"
     End If
     // SAR 87839191 End
     // If PO based on date is promised delivery date and if promised del date has
     // changed, then call configurator
     If VA evt_cPOBasedOnDate_POBD [POBD] is equal to "2"
     And VA frm_cPromisedDelDateChgd_EV01 [EV01] is equal to "1"
          VA frm_P32942ConfigItemCall [EV01] = "0"
     End If
     // If PO based on date is price effectivity date and if price eff date has
     // changed, then call configurator
     If VA evt_cPOBasedOnDate_POBD [POBD] is equal to "4"
     And VA frm_cPriceEffDateChgd_EV01 [EV01] is equal to "1"
          VA frm_P32942ConfigItemCall [EV01] = "0"
     End If
     // If PO based on date is system date then always call config
     If VA evt_cPOBasedOnDate_POBD [POBD] is equal to "5"
          VA frm_P32942ConfigItemCall [EV01] = "0"
     End If
     If VA frm_P32942ConfigItemCall [EV01] is equal to "0"
          Press Button(FC Config Item)
          VA frm_P32942ConfigItemCall [EV01] = "1"
     End If
End If
VA frm_cRequestedDateChgd_EV01 [EV01] = "0"
VA frm_cPromisedDelDateChgd_EV01 [EV01] = "0"
VA frm_cPriceEffDateChgd_EV01 [EV01] = "0"
// End SAR 5133689
//
// ---------------------------------------------------------------------------
// SAR 5133291 Begins Free Goods Catalog Enhancement
// ---------------------------------------------------------------------------
//
If VA grd_FreeGoodExists_EV01 [EV01] is equal to "1"
     While VA frm_FreeGoodExitEnabled_EV01 [EV01] is not equal to "1"
     And VA evt_szFGErrorMessageID [DTAI] is equal to or empty <Blank>
          F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
               "2" -> cFile [EV01]
               "5" -> cAction [EV02]
               VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
               VA frm_JOBS_JobNumber [JOBS] -> mnJobNo [JOBS]
               FC Order Number [DOCO] -> mnOrderNo [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCo [KCOO]
               GC Line Number [LNID] -> mnParentLineNo [OGNO]
               "1" -> cSuppressErrorMsg [EV03]
               VA evt_szFGErrorMessageID [DTAI] <- szErrorMsgId [DTAI]
               VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
               GC Line Number [LNID] -> mnParentWFLineNo [RLLN]
               "3" -> cNumKeys [EV04]
               VA grd_FreeGoodCatalogName_CATLG [CATLG] <- szFreeGoodCatalogName [CATLG]
          If VA grd_FreeGoodCatalogName_CATLG [CATLG] is not equal to <Blank>
          And VA grd_FreeGoodCatalogName_CATLG [CATLG] is not equal to <NULL>
          And VA grd_FreeGoodCatalogName_CATLG [CATLG] is not equal to "0"
               Enable Control(HC Free G&oods)
               VA frm_FreeGoodExitEnabled_EV01 [EV01] = "1"
               //
          End If
          // ---------------------------------------------------------------------------
          // close the free good cache cursor
          // ---------------------------------------------------------------------------
          //
          F4573GetNextFreeGood(B4500200.F4573GetNextFreeGood)
               "2" -> cFile [EV01]
               "6" -> cAction [EV02]
               VA evt_idFreeGoodCacheCursor [GENLNG] <> idhCursor [GENLNG]
          //
     End While
End If
// SAR 5133291 Ends
//
// SAR 5908350 Begin SAR 6624818  Backout Changes by 5908350
! VA grd_OriginalOrderQty_UORG [UORG] = GC Quantity Ordered [UORGE1]
// SAR 5908350 End
// BEGIN SAR
Disable Grid(FC Grid,  <All Rows>, GC SM)
// END SAR
// SAR 6858420
If GC Next Status [NXTR] is greater than or equal to PO szChangeOrderStatus [A2TR]
And PO cAllowChangeOrderText [EV04] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
And PO szChangeOrderProcessingOn [VL13] is equal to ("1","2")
     VA frm_cTextAllowed_EV01 [EV01] = "1"
End If
//
//    SAR 7381707 - Assign OrigSuffix
// SAR# 8607384 - Reverted the partial fix of SAR 7381707, so that
//  the change order on blanket order will be reopened when the
// purchase order from which it was generated is cancelled.
! GC Orig Sfx [OSFX] = GC Original SFXO (wf) [SFX]
// SAR 8858511 Begin
VA grd_PlannedEffectivityDate [DLEJ] = GC Planned Effective [DLEJ]
// SAR 8858511 End
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     If PO cValidateItemsWithCollection [EV01] is equal to ("1","2")
          If GC Short Item No [ITM] is greater than <Blank>
          And GC Next Status [NXTR] is not equal to "999"
               FCW07.FetchSingle  [Index 1: Collection Detail]
                    FC Collection [C9COLL] = TK Collection [C9COLL]
                    FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
                    GC Short Item No [ITM] = TK Short Item Number [C9ITM]
               If SV File_IO_Status is not equal to CO SUCCESS
                    If PO cValidateItemsWithCollection [EV01] is equal to "1"
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E41F03")
                    Else
                         Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC ItemNumber, "E41F04")
                    End If
               End If
          End If
     End If
End If
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 09/10/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szCodigoXMLOC [Z5576B22] is equal to "SERVICOS"
     GC Ln Ty [LNTY] = VA evt_szXML_LNTY [LNTY]
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 09/10/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Requested
Event: Control is Entered
Event GUID: b6b46900-565f-11d3-976d-00003910070e
=============================================
// Focus was on non displayed field when in add mode and header was first
Set Current Tab Page(FC Tab Control 673, TP Line Defaults)
Set Control Focus(FC Requested [DRQJ])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Subsidiary
Event: Visual Assist Button Clicked
Event GUID: 9a119e29-0685-4a82-a471-d25866d70ede
=============================================
// Sar 6941469 Begin
// Load from Line Defaults if GC values are blank.
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GC Business Unit [OMCU] = FC Project Cost Center [OMCU]
End If
If GC Sub  [SUB] is equal to or empty <Blank>
     GC Sub  [SUB] = FC Subsidiary [SUB]
End If
If GC Obj Acct [OBJ] is equal to or empty <Blank>
     GC Obj Acct [OBJ] = FC Object Account [OBJ]
End If
// SAR 7542890
// Pass back iCostTypeCacheRecNo to P430901, so cache only gets loaded once.
// BUG 13092595 -  Modal Search and Select Clean Up
Suppress Default Visual Assist Form
Call App:P430901 Form:W430901A Version:Undefined
     FC Project Cost Center [OMCU] <> szBusiness_F0901_Unit_MCU [MCU]
     FC Object Account [OBJ] <> szObject_F0901_Account_OBJ [OBJ]
     FC Subsidiary [SUB] <> sz0901BC_Subsidiary_SUB [SUB]
     FC Branch/Plant1 [MCU] -> szF4301MCU_MCU [MCU]
     FC F4301:Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo_KCOO [KCOO]
     PO cDescriptionDefaults [EV01] -> cPOAccountDescription_EV01 [EV01]
     PO cFinancialAAIs [EV01] -> cPOFinancialAAIs_EV01 [EV01]
     PO cSingleJob [EV01] -> cPOSingleJob_EV01 [EV01]
     PO cJobProject [EV01] -> cPOJobProject_EV01 [EV01]
     "E" -> cCallType_EV01 [EV01]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     VA frm_iCostTypeCacheRecNo_INT01 [INT01] <> iCostTypeCacheRecordNo_INT01 [INT01]
     VA frm_cCostCodeCacheLoaded_EV01 [EV01] <> cCostTypeCacheLoaded_EV01 [EV01]
Press Button(FC LoadAccountCache)
// Sar 6941469 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Object Account
Event: Visual Assist Button Clicked
Event GUID: 0ad238e7-ccef-49c7-a48b-3f1128ee7cab
=============================================
// Sar 6941469 Begin
// Load from Line Defaults if GC values are blank.
If GC Business Unit [OMCU] is equal to or empty <Blank>
     GC Business Unit [OMCU] = FC Project Cost Center [OMCU]
End If
If GC Sub  [SUB] is equal to or empty <Blank>
     GC Sub  [SUB] = FC Subsidiary [SUB]
End If
If GC Obj Acct [OBJ] is equal to or empty <Blank>
     GC Obj Acct [OBJ] = FC Object Account [OBJ]
End If
// SAR 7542890
// Pass back iCostTypeCacheRecNo to P430901, so cache only gets loaded once.
// BUG 13092595 -  Modal Search and Select Clean Up
Suppress Default Visual Assist Form
Call App:P430901 Form:W430901A Version:Undefined
     FC Project Cost Center [OMCU] <> szBusiness_F0901_Unit_MCU [MCU]
     FC Object Account [OBJ] <> szObject_F0901_Account_OBJ [OBJ]
     FC Subsidiary [SUB] <> sz0901BC_Subsidiary_SUB [SUB]
     FC Branch/Plant1 [MCU] -> szF4301MCU_MCU [MCU]
     FC F4301:Order Type [DCTO] -> szOrderType_DCTO [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo_KCOO [KCOO]
     PO cDescriptionDefaults [EV01] -> cPOAccountDescription_EV01 [EV01]
     PO cFinancialAAIs [EV01] -> cPOFinancialAAIs_EV01 [EV01]
     PO cSingleJob [EV01] -> cPOSingleJob_EV01 [EV01]
     PO cJobProject [EV01] -> cPOJobProject_EV01 [EV01]
     "E" -> cCallType_EV01 [EV01]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     VA frm_iCostTypeCacheRecNo_INT01 [INT01] <> iCostTypeCacheRecordNo_INT01 [INT01]
     VA frm_cCostCodeCacheLoaded_EV01 [EV01] <> cCostTypeCacheLoaded_EV01 [EV01]
Press Button(FC LoadAccountCache)
// Sar 6941469 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Subledger Type
Event: Control Exited/Changed-Inline
Event GUID: 9cfd4fdf-c676-4ded-9f35-13513b70e2cb
=============================================
// ***************************************************************************
// SAR 6805803 - If subledger type has a search and select form, override
// visual assist to dummy search and select to dispaly visual assist
// flashlight on subledger field.  If subledger type does not have a search
// and select form, disable visual assist on subledger field.
// ***************************************************************************
If FC Subledger Type [SBLT] is equal to ("A","C","E","F","G","I","L","W")
     Set Data Dictionary Overrides(FC Subledger,  <Data Dictionary Overrides>)
Else
     Set Data Dictionary Overrides(FC Subledger,  <Data Dictionary Overrides>)
End If
// ***************************************************************************


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Subledger
Event: Visual Assist Button Clicked
Event GUID: 50011749-5192-40b5-a1d6-f8d023ecfa6a
=============================================
// ***************************************************************************
// SAR 6805803 - Suppress dummy visual assist search and select form assigned
// in subledger type event rules.
// ***************************************************************************
Suppress Default Visual Assist Form
// ***************************************************************************
// SAR 6805803 - Call the search and select form that corresponds to subledger
// type.
// ***************************************************************************
GetSubledgerValue(N0900010.GetSubledgerValue)
     FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
     FC Subledger [SBL] <> szSubledger [SBL]
// ***************************************************************************


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Cat Code 1
Event: Control Exited/Changed-Inline
Event GUID: e5776e50-136f-11d3-9746-00003910070e
=============================================
// 
// ---------------------------------------------------------------------------
// Had to disable tool UDC edit and control it through ER, because
// form control was set in error when blank was not a allowed value.
// Even though blank is a valid value in these form control, because this only
// controls defaults into grid.
// ---------------------------------------------------------------------------
// 
If FC Cat Code 1 [PDP1] is not equal to <Blank>
And FC Cat Code 1 [PDP1] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          "PDP1" -> szDataDictionaryItem [DTAI]
          "41" -> szSystemCode [SY]
          "P1" -> szRecordTypeCode [RT]
          FC Cat Code 1 [PDP1] -> szUserDefinedCode [KY]
          "3.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC Cat Code 1, "0027")
     End If
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Cat Code 2
Event: Control Exited/Changed-Inline
Event GUID: e5776e51-136f-11d3-9746-00003910070e
=============================================
// 
// ---------------------------------------------------------------------------
// SAR #3113721 - Had to disable tool UDC edit and control it through ER, becaus
// form control was set in error when blank was not a allowed value.
// Even though blank is a valid value in these form control, because this only
// controls defaults into grid.
// ---------------------------------------------------------------------------
// 
If FC Cat Code 2 [PDP2] is not equal to <Blank>
And FC Cat Code 2 [PDP2] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          "PDP2" -> szDataDictionaryItem [DTAI]
          "41" -> szSystemCode [SY]
          "P2" -> szRecordTypeCode [RT]
          FC Cat Code 2 [PDP2] -> szUserDefinedCode [KY]
          "3.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC Cat Code 2, "0027")
     End If
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Cat Code 3
Event: Control Exited/Changed-Inline
Event GUID: 6843d5d1-1434-11d3-9746-00003910070e
=============================================
// 
// ---------------------------------------------------------------------------
// Had to disable tool UDC edit and control it through ER, because
// form control was set in error when blank was not a allowed value.
// Even though blank is a valid value in these form control, because this only
// controls defaults into grid.
// ---------------------------------------------------------------------------
// 
If FC Cat Code 3 [PDP3] is not equal to <Blank>
And FC Cat Code 3 [PDP3] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          "PDP3" -> szDataDictionaryItem [DTAI]
          "41" -> szSystemCode [SY]
          "P3" -> szRecordTypeCode [RT]
          FC Cat Code 3 [PDP3] -> szUserDefinedCode [KY]
          "3.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC Cat Code 3, "0027")
     End If
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Cat Code 4
Event: Control Exited/Changed-Inline
Event GUID: 6843d5d2-1434-11d3-9746-00003910070e
=============================================
// 
// ---------------------------------------------------------------------------
//  Had to disable tool UDC edit and control it through ER, because
// form control was set in error when blank was not a allowed value.
// Even though blank is a valid value in these form control, because this only
// controls defaults into grid.
// ---------------------------------------------------------------------------
// 
If FC Cat Code 4 [PDP4] is not equal to <Blank>
And FC Cat Code 4 [PDP4] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          "PDP4" -> szDataDictionaryItem [DTAI]
          "41" -> szSystemCode [SY]
          "P4" -> szRecordTypeCode [RT]
          FC Cat Code 4 [PDP4] -> szUserDefinedCode [KY]
          "3.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC Cat Code 4, "0027")
     End If
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Long Address AB01
Event: Control Exited/Changed-Inline
Event GUID: e54fe263-d9b7-4c37-ae76-20550fc77c77
=============================================
If FC Long Address AB01 [ALKY] is not equal to <Blank>
And FC Long Address AB01 [ALKY] is not equal to "*"
And FC Long Address AB01 [ALKY] is not equal to "0"
And FC Long Address AB01 [ALKY] is not equal to <NULL>
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address AB01 [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Book 01 [POHAB01] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Purchase Order Address Book 01 [DL01] <- szNameAlpha [ALPH]
Else
     FC Address Book 01 [POHAB01] = 0
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Long Address AB02
Event: Control Exited/Changed-Inline
Event GUID: 76ec04e0-6d32-4b2f-9b55-c68a405ded05
=============================================
If FC Long Address AB02 [ALKY] is not equal to <Blank>
And FC Long Address AB02 [ALKY] is not equal to "*"
And FC Long Address AB02 [ALKY] is not equal to "0"
And FC Long Address AB02 [ALKY] is not equal to <NULL>
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address AB02 [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Book 02 [POHAB02] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Purchase Order Address Book 02 [DL01] <- szNameAlpha [ALPH]
Else
     FC Address Book 02 [POHAB02] = 0
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Collection
Event: Control Exited/Changed-Asynch
Event GUID: 254e1081-eaed-4d93-8c44-17c67bbe436d
=============================================
// SAR 8956903 - Apparel Management
If FC Collection [C9COLL] is not equal to VA frm_szPrevCollection_C9COLL [C9COLL]
     Clear Control Error(FC Collection [C9COLL])
     Clear Control Error(FC SeasonCode [C9SEAC])
     Clear Control Error(FC Season Year [C9SEAY])
     VA frm_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
End If
If VA frm_cCollChangedInVA_EV01 [EV01] is equal to "1"
     VA frm_cCollChangedInVA_EV01 [EV01] = <Blank>
Else
     FC COLLECTION [DL01] = <NULL>
End If

=============================================
Form: Order Detail - W4310A
Object: FC Collection
Event: Visual Assist Button Clicked
Event GUID: ab9c0dd0-8380-47d7-aa07-0edddabf7b70
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szPrevCollection_C9COLL [C9COLL]
----------------------------------------
// SAR 8956903 - Apparel Management
VA evt_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
Suppress Default Visual Assist Form
Call App:PCW15 Form:WCW15A Version:Undefined
     FC Collection [C9COLL] <> szC9COLL-Collection [C9COLL]
     FC SeasonCode [C9SEAC] <> szC9SEAC-SeasonCode [C9SEAC]
     FC Season Year [C9SEAY] <> szC9SEAY-SeasonYear [C9SEAY]
     FC Collection Price Effective Date [C9PRDJ] <> jdDatePriceReferenceJulian [C9PRDJ]
     FC COLLECTION [DL01] <> szCollectionDescription [C9DSC1]
If VA evt_szPrevCollection_C9COLL [C9COLL] is not equal to FC Collection [C9COLL]
     VA frm_cCollChangedInVA_EV01 [EV01] = "1"
End If
If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Order Date [TRDJ]
Else
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Collection Price Effective Date [C9PRDJ]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC SeasonCode
Event: Control Exited/Changed-Asynch
Event GUID: 3985d0df-325b-4f8a-946e-f48df205d9ae
=============================================
// SAR 8956903 - Apparel Management
If FC SeasonCode [C9SEAC] is not equal to VA frm_szPrevSeasonCode_C9SEAC [C9SEAC]
     Clear Control Error(FC Collection [C9COLL])
     Clear Control Error(FC SeasonCode [C9SEAC])
     Clear Control Error(FC Season Year [C9SEAY])
     VA frm_szPrevSeasonCode_C9SEAC [C9SEAC] = FC SeasonCode [C9SEAC]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Season Year
Event: Control Exited/Changed-Asynch
Event GUID: 5905e23d-bdef-4b07-91d2-aa79d61592dd
=============================================
// SAR 8956903 - Apparel Management
If FC Season Year [C9SEAY] is not equal to VA frm_szPrevSeasonYear_C9SEAY [C9SEAY]
     Clear Control Error(FC Collection [C9COLL])
     Clear Control Error(FC SeasonCode [C9SEAC])
     Clear Control Error(FC Season Year [C9SEAY])
     VA frm_szPrevSeasonYear_C9SEAY [C9SEAY] = FC Season Year [C9SEAY]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Collection Price Effective Date
Event: Control Exited/Changed-Inline
Event GUID: 29e3d34a-38bb-4630-a96d-67c69e40cf76
=============================================
// SAR 8956903 - Apparel Management
If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Order Date [TRDJ]
Else
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Collection Price Effective Date [C9PRDJ]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC PROCESS: Load Grid From Cache
Event: Button Clicked
Event GUID: 90932197-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnOriginalOrderNo_DOCO [DOCO]
----------------------------------------
//
// ---------------------------------------------------------------------------
//     Retrieve the current grid row, and insert grid rows below the current row
// ---------------------------------------------------------------------------
//
Get Max Grid Rows(FC Grid, VA frm_MATH01_GridRowCounter)
Clear Grid Buffer(FC Grid)
//
VA frm_EV01_LastCacheRecord [EV01] = "0"
VA frm_LNID_CacheLineNumber [LNID] = "0"
VA frm_GENLNG_CacheCursor [GENLNG] = "0"
VA frm_MATH01_GridRowCounter [MATH01] = "1"
//
// ---------------------------------------------------------------------------
//     While there are more records in the cache, insert grid rows.
// ---------------------------------------------------------------------------
//
While VA frm_EV01_LastCacheRecord [EV01] is not equal to "1"
     //
     // ---------------------------------------------------------------------------
     // Blanket quantity was not getting reduced because the original
     // line number was passed back into the incorrect field
     // ------ ISSUE 292366 - Marília - busca %ICMS variável LOTP
     // ---------------------------------------------------------------------------
     //
     ! UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
     !      GB Item Number [UITM] <- szItemNumber [UITM]
     !      GB Branch/ Plant [MCU] <- szBranchPlant [MCU]
     !      GB Location [LOCNE1] <- szLocation [LOCN]
     !      GB Lot/Serial [LOTN] <- szLotNumber [LOTN]
     !      GB CATN:Catalog Number(wf) [CATN] <- szCatalogNumber [CATN]
     !      UNDEFINED <> mnSupplierNumber [VEND]
     !      VA evt_mnOriginalOrderNo_DOCO [DOCO] <- mnOrderNumber [DOCO]
     !      GB Orig Co [OKCO] <- szKeyCompany [KCOO]
     !      GB Original SFXO (wf) [SFX] <- szSuffixNumber [SFXO]
     !      GB Original Line No [OGNO] <- mnOrderLineNumber [LNID]
     !      VA frm_EV01_LastCacheRecord [EV01] <> cLastRecordReadFlag [EV01]
     !      GB Orig Type [OCTO] <- szDocumentType [DCTO]
     !      GB Quantity Ordered [UORGE1] <- mnQuantity [UORG]
     !      GB Tr. UoM [UOM] <- szUnitOfMeasure [UOM]
     !      UNDEFINED <> cSuppressTerminateCache [EV02]
     !      GB Unit Cost [UPAX] <- mnUnitCost [PRRC]
     !      UNDEFINED <> nSequenceNumber [INT01]
     !      UNDEFINED <> szMemoLot1 [LOT1]
     !      UNDEFINED <> szMemoLot2 [LOT2]
     !      UNDEFINED <> szMemoLot3 [LOT3]
     !      VA frm_GENLNG_CacheCursor [GENLNG] <> idCacheCursor [GENLNG]
     !      UNDEFINED <> szVendorLotNumber [RLOT]
     !      UNDEFINED <> jdDateLayerExpiration [MMEJ]
     !      UNDEFINED <> cLotStatusCode [LOTS]
     !      UNDEFINED <> mnIdentifierShortItem [ITM]
     !      UNDEFINED <> mnQtyOnHandPrimaryUn [PQOH]
     !      UNDEFINED <> mnLotPotency [LOTP]
     !      UNDEFINED <> szLotGrade [LOTG]
     !      UNDEFINED <> szDescriptionLine1 [DSC1]
     !      UNDEFINED <> cStockingType [STKT]
     !      UNDEFINED <> mnQuantityAvailable [QAVAL]
     !      UNDEFINED <> mnDualQuantity [DQTY]
     !      UNDEFINED <> szUnitOfMeasureSecondary [UOM2]
     !      UNDEFINED <> jdBasedOnDate [BODJ]
     !      UNDEFINED <> jdLotEffectivityDate [DLEJ]
     !      UNDEFINED <> jdOnHandDate [OHDJ]
     !      UNDEFINED <> jdSellByDate [SBDJ]
     !      UNDEFINED <> jdBestBeforeDate [BBDJ]
     !      UNDEFINED <> jdUserLotDate1 [U1DJ]
     !      UNDEFINED <> jdUserLotDate2 [U2DJ]
     !      UNDEFINED <> jdUserLotDate3 [U3DJ]
     !      UNDEFINED <> jdUserLotDate4 [U4DJ]
     !      UNDEFINED <> jdUserLotDate5 [U5DJ]
     !      UNDEFINED <> cBasePriceIndicator [BPIND]
     !      UNDEFINED <> cAdjustmentIndicator [ADIND]
     !      UNDEFINED <> mnAdjustmentRevisionLevel [AREV]
     !      UNDEFINED <> cPriceOverrideCode [PROV]
     UnLoadMultipleReturn(B4100380.UnLoadMultipleReturn)
          GB Item Number [UITM] <- szItemNumber [UITM]
          GB Branch/ Plant [MCU] <- szBranchPlant [MCU]
          GB Location [LOCNE1] <- szLocation [LOCN]
          GB Lot/Serial [LOTN] <- szLotNumber [LOTN]
          GB CATN:Catalog Number(wf) [CATN] <- szCatalogNumber [CATN]
          VA evt_mnOriginalOrderNo_DOCO [DOCO] <- mnOrderNumber [DOCO]
          GB Orig Co [OKCO] <- szKeyCompany [KCOO]
          GB Original SFXO (wf) [SFX] <- szSuffixNumber [SFXO]
          GB Original Line No [OGNO] <- mnOrderLineNumber [LNID]
          VA frm_EV01_LastCacheRecord [EV01] <> cLastRecordReadFlag [EV01]
          GB Orig Type [OCTO] <- szDocumentType [DCTO]
          GB Quantity Ordered [UORGE1] <- mnQuantity [UORG]
          GB Tr. UoM [UOM] <- szUnitOfMeasure [UOM]
          GB Unit Cost [UPAX] <- mnUnitCost [PRRC]
          VA frm_ContractNumberDistributi [DMCT] <- szMemoLot1 [LOT1]
          VA frm_GENLNG_CacheCursor [GENLNG] <> idCacheCursor [GENLNG]
          GB HIDDEN %ICMSF41061 [DMCS] <- mnLotPotency [LOTP]
     //
     // ISSUE 9485 - VALKIRIA - RBS
     If VA frm_ContractNumberDistributi [DMCT] is greater than <Blank>
          // ------ ISSUE 292366 - Marília - verifica flag p/liberar qualquer rubrica
          VA frm_PrimPosRubricaLiberadaS [AA01] = substr([VA frm_ContractNumberDistributi [DMCT]], "0", "1")
          If VA frm_PrimPosRubricaLiberadaS [AA01] is equal to "S"
               GB Account Number [ANI] = concat("0000000.", ltrim([VA frm_ContractNumberDistributi [DMCT]], "S"))
          Else
               // ------
               GB Account Number [ANI] = concat("0000000.", [VA frm_ContractNumberDistributi [DMCT]])
          End If
     End If
     // END ISUE 9485
     // Bug# 11904731 - PMPN Enhancements
     // Populate PMPN from original line
     GB Production Number [PMPN] = GC Production Number [PMPN]
     GB Production Number Short [PNS] = GC Production Number Short [PNS]
     //
     If VA frm_cBlanketsCalled_EV01 [EV01] is equal to "1"
          If VA evt_mnOriginalOrderNo_DOCO [DOCO] is not equal to <Blank>
          And VA evt_mnOriginalOrderNo_DOCO [DOCO] is not equal to <NULL>
          And VA evt_mnOriginalOrderNo_DOCO [DOCO] is not equal to "0"
               ConvertNumericToString(B0000045.ConvertNumericToString)
                    VA evt_mnOriginalOrderNo_DOCO [DOCO] -> mnMathNumeric01 [MATH01]
                    GB Original Order No [OORN] <- szVideoConstant30A [VC30A]
               GB Get Blanket [EV09] = VA frm_RelieveBlanketOrder [EV06]
          Else
               GB Get Blanket [EV09] = "4"
          End If
     End If
     If GB Unit Cost [UPAX] is not equal to "0"
          GB PROV:Price Override - (wf) [PROV] = "1"
     End If
     If VA frm_EV01_LastCacheRecord [EV01] is not equal to "1"
          GB Ln Ty [LNTY] = PO szLineType [LNTY]
          //
          // SAR 8956903 - Apparel Management
          If VA frm_cLoadGridFromPCW10_EV01 [EV01] is equal to "1"
               GB G/L Date [DGL] = VA frm_jdStyleGLDate_DGL [DGL]
               GB Request Date [DRQJ] = VA frm_jdStyleRequestedDate_DRQJ [DRQJ]
               GB Promised Delivery [PDDJ] = VA frm_jdPromDeliveryDate_PDDJ [PDDJ]
               GB Cancel Date [CNDJ] = VA frm_jdStyleCancelDate_CNDJ [CNDJ]
          End If
          // =======================================================
          //  ISSUE 3233 - Mostra ou não os campos de ADDR e Requisitante
          // =======================================================
          If PO OpcaoSuprimentos [EV01] is equal to "1"
          Or PO OpcaoCatalogo [EV01] is equal to "1"
               // ============================================================
               // Acessa tabela F5543ICO para ADDR e Requisitante
               // ============================================================
               F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
                    FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                    FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
                    FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
                    GC Change Order [SFXO] = TK Order Suffix [SFXO]
                    GC Line Number [LNID] = TK Line Number [LNID]
                    GB Local Entrega [ADD1] <- TK Address Line 1 [ADD1]
                    GB Requisitante [ADD2] <- TK Address Line 2 [ADD2]
          End If
          // ============================================================
          //
          Insert Grid Buffer Row(FC Grid, VA frm_MATH01_GridRowCounter, <Yes>, <No>, <Yes>, <Yes>, <Yes>)
          VA frm_MATH01_GridRowCounter [MATH01] = [VA frm_MATH01_GridRowCounter [MATH01]]+1
     End If
End While
//
// ---------------------------------------------------------------------------
//     Update the line number in the last grid row to the next sequential number
// ---------------------------------------------------------------------------
//
// SAR 8956903 - Apparel Management
VA frm_cLoadGridFromPCW10_EV01 [EV01] = <NULL>


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC BeginDoc
Event: Button Clicked
Event GUID: 5ef15c4d-e064-11d1-9ac9-00600832fe19
=============================================
//
If SV Form_ Mode is equal to CO ADD_MODE
And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
     //
     //  SAR  6585679  - Add FC Retainage % to Begin Doc
     // SAR 7537839 - Passed requested date as well as promised delivery date
     // SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
          VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
          "A" -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNumber [SHAN]
          FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
          FC Payment Terms [PTC] <> szPaymentTerms [PTC]
          FC HOLD Code [HOLD] <> szHoldCode [HOLD]
          VA frm_c_ERSFlag [EV01] <> cEvaluatedReceiptsFlag [AVCH]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
          VA frm_USR0_UserID [USR0] <> szOrderedPlacedBy [ORBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_USR0_UserID [USR0] -> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
     //
     If SV Error_Status is equal to CO SUCCESS
          VA frm_EV02_BegDocExecuted [EV02] = "1"
     End If
     //
     // ---------------------------------------------------------------------------
     // Populate the long address numbers that are visible on form
     // ---------------------------------------------------------------------------
     //
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Ship To [SHAN] -> mnMathNumeric01 [MATH01]
          FC Long Ship To_ALKY [ALKY] <- szVideoConstant30A [VC30A]
End If
//
If SV Form_ Mode is equal to CO COPY_MODE
And VA frm_EV02_BegDocExecuted [EV02] is not equal to "1"
     //
     // ---------------------------------------------------------------------------
     // Pass in the variable AVCH_EvalReceipt instead of BC value into BeginDoc.
     //
     // In copy mode, do not pass in dates to begin doc.
     // If in copy mode, and no header values have changed Call next numbers to get a
     // order number.
     // ---------------------------------------------------------------------------
     //
     If FC Order Number [DOCO] is equal to "0"
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
     End If
     //
     //  SAR  6585679  - Add FC Retainage % to Begin Doc
     //  SAR  8164309  - Pass FC Retainage Indicator to Begin Doc
     //
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
          VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
          "A" -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          VA frm_RecordInHeaderWkFile [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
          GC Orig Co [OKCO] -> szOriginalOrderCompany [OKCO]
          GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
          GC Orig Type [OCTO] -> szOriginalOrderType [OCTO]
          BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
          BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
          BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To [SHAN] <> mnShipToNumber [SHAN]
          FC Order Date [TRDJ] -> jdOrderDate [TRDJ]
          BC Reference (F4301.0) [VR01] -> szReference01 [VR01]
          BC Reference 2 (F4301.0) [VR02] -> szReference02 [VR02]
          BC Delivery Instructions Line 1 (F4301.0) [DEL1] -> szDeliveryInstructions01 [DEL1]
          BC Delivery Instructions Line 2 (F4301.0) [DEL2] -> szDeliveryInstructions02 [DEL2]
          BC Print Message (F4301.0) [INMG] -> szPrintMessage [INMG]
          BC Pricing Group (F4301.0) [PRGP] -> szSupplierPriceGroup [PRGP]
          BC Payment Terms Code (F4301.0) [PTC] -> szPaymentTerms [PTC]
          BC Tax Expl Code 1 (F4301.0) [EXR1] -> szTaxExplanationCode [EXR1]
          BC Tax Rate/Area (F4301.0) [TXA1] -> szTaxRateArea [TXA1]
          BC Certificate, Tax Exemption (F4301.0) [TXCT] -> szTaxCertificate [TXCT]
          BC Associated Text (F4301.0) [ATXT] -> cAssociatedText [ATXT]
          FC HOLD Code [HOLD] <> szHoldCode [HOLD]
          BC Freight Handling Code (F4301.0) [FRTH] -> szFreightHandlingCode [FRTH]
          BC Buyer Number (F4301.0) [ANBY] -> mnBuyerNumber [ANBY]
          BC Carrier Number (F4311.0) [ANCR] -> mnCarrierNumber [ANCR]
          BC Code - Evaluated Receipt Settlement (F4311.0) [AVCH] -> cEvaluatedReceiptsFlag [AVCH]
          BC Send Method (F4301.0) [CRMD] -> cSendMethod [CRMD]
          BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCostRule [PRP5]
          BC Code - Approval Routing (F4301.0) [ARTG] -> szApprovalRouteCode [ARTG]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
          VA frm_USR0_UserID [USR0] <> szOrderedPlacedBy [ORBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_USR0_UserID [USR0] -> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          BC Description (F4301.0) [DESC] -> szDescription [DESC]
          BC Name - Remark (F4301.0) [RMK] -> szRemark [RMK]
          VA grd_ASN_AdjSchedule [ASN] <> szPriceAdjustmentScheduleN [ASN]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
     //
     // ---------------------------------------------------------------------------
     //   populate the long address numbers that are visible on form
     // ---------------------------------------------------------------------------
     //
     // SAR 3046750
     If SV Error_Status is equal to CO SUCCESS
          VA frm_EV02_BegDocExecuted [EV02] = "1"
     End If
     //
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Ship To [SHAN] -> mnMathNumeric01 [MATH01]
          FC Long Ship To_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     //
End If
//
If SV Error_Status is equal to CO SUCCESS
     SaveOffProcurementOrderValue(B4303030.SaveOffProcurementOrderValue)
          FC Ship To [SHAN] -> mnSHANToSave [SHAN]
          VA frm_TempSHAN [SHAN] <- mnSHANSaved1 [SHAN]
          FC HOLD Code [HOLD] -> szHOLDToSave [HOLD]
          VA frm_TempHOLD [HOLD] <- szHOLDSaved [HOLD]
          FC Currency Code [CRCD] -> szCRCDToSave [CRCD]
          VA frm_TempCRCD [CRCD] <- szCRCDSaved [CRCD]
          FC ExchangeRate_CRR [CRR] -> szCRRToSave [CRR]
          VA frm_TempCRR [CRR] <- szCRRSaved [CRR]
Else
     Set Control Focus(FC Long Address Number_ALKY [ALKY])
End If
//


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Kit Processing
Event: Button Clicked
Event GUID: 54136f61-ff0c-11d1-8dd3-0000f6782893
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_MATH01_mnCurrentGridRow [MATH01]
evt_mnAmtForeignExtPrice_FEA [FEA]
evt_mnAmtExtendedPrice_AEXP [AEXP]
evt_cParentQuantityChngd_EV01 [EV01]
----------------------------------------
//
// ---------------------------------------------------------------------------
// Code Deleted under SAR 6464957
// Determined code was dead
// ---------------------------------------------------------------------------
//
If VA frm_PMTH_MethodofPriceCalc [PMTH] is equal to "3"
     //
     // -----------------------------------------------------------------------
     //    A PMTH of 3 is not valid for Purchasing.  Stop Processing.
     // -----------------------------------------------------------------------
     //
     Stop Processing
     //
Else
     //
     If SV Form_ Mode is not equal to CO COPY_MODE
          //
          // SAR 6464957
          If VA frm_EV11_KitsProcessed [EV11] is not equal to "1"
          And VA grd_StockingType_STKT [STKT] is equal to "K"
               //
               //
               If SV Form_ Mode is equal to CO ADD_MODE
                    VA frm_EV10_cAddOrMaintenanceMode [EV10] = "A"
               End If
               //
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    VA frm_EV10_cAddOrMaintenanceMode [EV10] = "M"
                    VA frm_KitRecordInDetail_EV01 [EV01] = "1"
               End If
               //
               //
               // -----------------------------------------------------------------------
               // Call P41351 - Kit Selection
               // -----------------------------------------------------------------------
               //
               // --------------------------------------------------------------------
               //    Add condition to prevent the kit selection window to be displayed twice.
               //    - If the POE_EditLine has not been executed already for the Kit Parent
               //      line then variable EV11_KitsProcessed is '1' - do not process Kits
               // --------------------------------------------------------------------
               //
               // SAR 6464957
               If VA frm_EV11_KitsProcessed [EV11] is not equal to "1"
               And GC EV04:Skip Line/Cancelled (wf) [EV04] is not equal to "1"
                    // SAR 8352676 - passed in GC branch plant so that the correct primary item
                    // number set in P41001 (Branch plant constants) is fetched back
                    //
                    If GC Item Number [UITM] is not equal to <Blank>
                    And GC Ln Ty [LNTY] is not equal to "T"
                         GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
                              GC Short Item No [ITM] <- mnShortItemNumber [ITM]
                              GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
                              GC 2nd Item Number [LITM] -> szSecondItemNumber [LITM]
                              GC 3rd Item Number [AITM] -> szThirdItemNumber [AITM]
                              GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
                    End If
                    //
                    // ---------------------------------------------------------------------------
                    //    Replace BC AEXP and FEA with VA AEXP and FEA
                    //    Pass in ParentQty Changed flag
                    // ---------------------------------------------------------------------------
                    //
                    // SAR 6474338
                    If VA grd_OriginalOrderQty_UORG [UORG] is not equal to GC Quantity Ordered [UORGE1]
                         VA evt_cParentQuantityChngd_EV01 [EV01] = "1"
                    Else
                         VA evt_cParentQuantityChngd_EV01 [EV01] = "0"
                    End If
                    //
                    // #########################################
                    Call App:P41351 Form:W41351A Version:
                         GC Short Item No [ITM] -> ItemNumberShortKit [KIT]
                         GC Branch/ Plant [MCU] -> CostCenterAlt [MMCU]
                         "M" -> TypeBill [TBM]
                         UNDEFINED <> ComponentNumber [CPNT]
                         FC Order Number [DOCO] -> DocumentNumber [DOCO]
                         FC F4301:Order Type [DCTO] -> OrderType [DCTO]
                         FC Order Company [KCOO] -> DocumentCompany [KCOO]
                         GC Tr. UoM [UOM] -> TransactionUOM [UOM]
                         GC Line Number [LNID] -> LineNumber [LNID]
                         GC Ln Ty [LNTY] -> LineType [LNTY]
                         GC Last Status [LTTR] -> LastStatusCode [LTTR]
                         GC Next Status [NXTR] -> NextStatusCode [NXTR]
                         GC Pu. UoM [UOM3] -> PricingUOM [UOM4]
                         GC Request Date [DRQJ] -> RequestedDate [DRQJ]
                         FC Order Date [TRDJ] -> TransactionDate [TRDJ]
                         UNDEFINED <> QtyShipped [SOQS]
                         UNDEFINED <> QtyBackOrdered [SOBK]
                         UNDEFINED <> QtyCanceled [SOCN]
                         FC To Currency Code [CRDC] -> BaseCompanyCurrency [CRCD]
                         UNDEFINED <> CheckAvailabilty [CKAV]
                         UNDEFINED <> BackordersAllowedYN [BACK]
                         UNDEFINED <> AllowPartialShipmentsYN [APTS]
                         GC Original Promised Date [OPDJ] -> PromisedDeliveryDate [PDDJ]
                         FC Branch/Plant [MCU] -> HeaderBranchPlant [EMCU]
                         FC Address Number [AN8] -> SoldToAddrNum [AN8]
                         <NULL> -> WriteKitCompToF4211YN [EV05]
                         VA frm_EV10_cAddOrMaintenanceMode [EV10] -> AddOrMaintain [MODE]
                         GC Quantity Ordered [UORGE1] -> TransactionQty [UORG]
                         FC Currency Code [CRCD] -> CustomerCurrency [CRDC]
                         VA evt_mnAmtExtendedPrice_AEXP [AEXP] <- DomesticExtPrice [AEXP]
                         VA evt_mnAmtForeignExtPrice_FEA [FEA] <- ForeignExtPrice [FEA]
                         UNDEFINED <> DomesticExtCost [ECST]
                         UNDEFINED <> ForeignExtCost [FEC]
                         UNDEFINED <> PODefaultReasonCode [VC03A]
                         GC G/L Date [DGL] -> OrderCommitmentDate [DATE01]
                         "N" -> ConvByBranch [BUMC]
                         UNDEFINED <> SalesPriceRetrievalUOM [UMB1]
                         "1" -> PriceEffectiveBasedOnDate [CP01]
                         "N" -> AdvancedPricing [ADVP]
                         VA frm_LNIX_LastLineNoAssigned [LNIX] <> LastLineNumberAssign [LNIX]
                         VA frm_PMTH_MethodofPriceCalc [PMTH] <> PricingMethod [PMTH]
                         VA frm_JOBS_JobNumber [JOBS] -> JobNumber [JOBS]
                         SL CurrencyProcessing -> CurrencyConversion [CRYR]
                         VA frm_ERRC_Error [ERRC] <- OKorCancel [EV01]
                         GC Item Number [UITM] -> PrimaryItemNumber [UITM]
                         SL VersionName -> SOEVersionID [VERS]
                         GC Tax Y/N [TX] -> TaxableYN [TAX1]
                         VA frm_EV01_UsesWorkFields [EV01] -> UseCacheOrWF [EV02]
                         VA frm_LINN_FromLineNo [LINN] <> mnFromLineNumber [LINN]
                         VA frm_LIN_ThroughLineNo [LIN] <> mnThruLineNumber [LIN]
                         UNDEFINED <> cBatchMode [EV03]
                         GC Original Promised Date [OPDJ] -> jdDatePromisedShipment [DPRJ]
                         "P" -> cCallingApplication [CALL]
                         UNDEFINED <> cPOStoreAndForwardMode [SO15]
                         UNDEFINED <> mnF42UI11WFParentLineNumber [LNIX]
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         GC Change Order [SFXO] -> szOrderSuffix [SFXO]
                         VA frm_KitRecordInDetail_EV01 [EV01] -> cRecordInDetailExist [EV01]
                         VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         UNDEFINED <> szTransferToBranchPlantKitCpn [MCU2]
                         UNDEFINED <> mnPOExchangeRateKitCpn [CRRD]
                         UNDEFINED <> szPOTransCurrencyKitCpn [CRDC]
                         UNDEFINED <> mnShipToAddressNum [SHAN]
                         UNDEFINED <> jdDatePromisedShipDate [PPDJ]
                         VA evt_cParentQuantityChngd_EV01 [EV01] -> cQtyChangedOnKitParent [ERRC]
                    // #########################################
                    //
                    //
               End If
               //
               // SAR 6464957
               // --------------------------------------------------------------------
               //    If the user presses the OK button form the Kit window and the
               //    price of the Kit  parent is based on the roll up total of the
               //    call F4311EditLine to components, update the kit parent's unit price.
               // --------------------------------------------------------------------
               // If the rollup price will override if a price was manually entered by the
               // user.  If the price needs to be overridden, do so after returning from the
               // kit selection window.
               // --------------------------------------------------------------------
               //
               If VA frm_PMTH_MethodofPriceCalc [PMTH] is equal to "1"
               Or VA frm_PMTH_MethodofPriceCalc [PMTH] is equal to "4"
                    //
                    // SAR 6466830 Begin
                    //
                    If SL CurrencyProcessing is equal to "N"
                    Or FC Foreign [CRRM] is equal to "D"
                         GC Extended Cost [AEXPE1] = VA evt_mnAmtExtendedPrice_AEXP [AEXP]
                    Else
                         GC Extended Cost [AEXPE1] = VA evt_mnAmtForeignExtPrice_FEA [FEA]
                    End If
                    GC Unit Cost [UPAX] = "0"
                    GC PROV:Price Override - (wf) [PROV] = "1"
                    // SAR 6466830 End
                    //
               End If
               //
               //
               // SAR 8482198 - Passed in the GC promised delivery date instead of original
               // promised delivery date so that changed date is updated. Also passed cancel
               // date correctly, previously promised delivery date was passed to cancel
               // date.
               // #########################################
               ! F4311EditLine(XT4311Z1.F4311EditLine)
               !      VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
               !      VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
               !      GC Line Number [LNID] <> mnOrderLineNumber [LNID]
               !      GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
               !      "1" -> cProcessEdits [EV01]
               !      VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
               !      GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
               !      SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
               !      SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
               !      FC Order Company [KCOO] -> szOrderCompany [KCOO]
               !      FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               !      FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               !      GC Change Order [SFXO] -> szOrderSuffix [SFXO]
               !      FC Branch/Plant1 [MCU] -> szBranchPlant [MCU]
               !      GC Orig Co [OKCO] -> szOriginalOrderCompany [OKCO]
               !      GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
               !      GC Orig Type [OCTO] -> szOriginalOrderType [OCTO]
               !      GC Original Line No [OGNO] -> mnOriginalLineNumber [OGNO]
               !      FC Address Number [AN8] -> mnSupplierNumber [AN8]
               !      GC Ship To Number [SHAN] -> mnShipToNumber [SHAN]
               !      GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
               !      VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdTransactionDate [TRDJ]
               !      GC Promised Delivery [PDDJ] -> jdPromisedDate [PDDJ]
               !      GC Cancel Date [CNDJ] -> jdCancelDate [CNDJ]
               !      GC G/L Date [DGL] -> jdGLDate [DGL]
               !      GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
               !      GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
               !      GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
               !      GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideFlag [PROV]
               !      GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
               !      GC Ln Ty [LNTY] -> szLineType [LNTY]
               !      GC Description 1 [DSC1] -> szDescription1 [DSC1]
               !      GC Description 2 [DSC2] -> szDescription2 [DSC2]
               !      GC Asset ID [ASII] -> szAssetID [ASID]
               !      GC Branch/ Plant [MCU] -> szDetailLineBranchPlant [MCU]
               !      GC Location [LOCNE1] -> szLocation [LOCN]
               !      GC Lot/Serial [LOTN] -> szLotNumber [LOTN]
               !      GC Tr. UoM [UOM] -> szTransactionUoM [UOM]
               !      GC Pu. UoM [UOM3] -> szPurchasingUoM [UOM3]
               !      GC Last Status [LTTR] -> szLastStatus [LTTR]
               !      GC Next Status [NXTR] -> szNextStatus [NXTR]
               !      GC Account Number [ANI] -> szUnformattedAccountNumber [ANI]
               !      GC Subledger [SBL] -> szSubledger [SBL]
               !      GC Sub Type [SBLT] -> cSubledgerType [SBLT]
               !      GC Discount Factor [DSPR] -> mnDiscountFactor [DSPR]
               !      GC CATN:Catalog Number(wf) [CATN] -> szCatalogNumber [CATN]
               !      GC Item Price Group [PRGR] -> szInventoryPriceRule [PRGR]
               !      GC Price Cat Level [CLVL] -> szPriceLevel [CLVL]
               !      GC Print Message [INMG] -> szPrintMessage [INMG]
               !      GC Tax Y/N [TX] -> cTaxable [TX]
               !      GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
               !      GC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
               !      GC G/L Offset [GLC] -> szGLClassCode [GLPT]
               !      GC Buyer Number [ANBY] -> mnBuyerNumber [ANBY]
               !      GC Carrier Number [ANCR] -> mnCarrierNumber [ANCR]
               !      GC Report Code 1 [PDP1] -> szPurchasingCategoryCode1 [PDP1]
               !      GC Objeto de Custo 2 [PDP2] -> szPurchasingCategoryCode2 [PDP2]
               !      GC Objeto de Custo 3 [PDP3] -> szPurchasingCategoryCode3 [PDP3]
               !      GC Objeto de Custo 4 [PDP4] -> szPurchasingCategoryCode4 [PDP4]
               !      GC Cost Rule [PDP5] -> szLandedCostRule [PRP5]
               !      GC Extended Weight [ITWT] -> mnWeight [ITWT]
               !      GC Wt UoM [WTUM] -> szWeightUoM [WTUM]
               !      GC Extended Volume [ITVL] -> mnVolume [ITVL]
               !      GC Vol  UoM [VLUM] -> szVolumeUoM [VLUM]
               !      GC Reference  [VR01] -> szReference1 [VR01]
               !      GC Centro de Respons. [VR02] -> szReference2 [VR02]
               !      GC S M [CRMD] -> cSendMethod [CRMD]
               !      GC F C [UNCD] -> cFreezeCode [UNCD]
               !      VA frm_AVCH_EvalReceipt [AVCH] -> cEvaluatedReceipts [AVCH]
               !      VA grd_cInventoryInterface_IVI [IVI] -> cInventoryInterface [IVI]
               !      FC Foreign [CRRM] -> cCurrencyMode [CRRM]
               !      FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
               !      FC ExchangeRate_CRR [CRR] -> mnCurrencyExchangeRate [CRR]
               !      FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
               !      GC Get Blanket [EV09] -> cRelievePOBlanketOrder [EV01]
               !      VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
               !      "0" -> cSourceRequestingPOGeneration [POGS]
               !      "EP4310" -> szProgramID [PID]
               !      VA frm_USR0_UserID [USR0] -> szUserID [USER]
               !      GC EV07..BlanketOrdersFound(wf) [EV07] -> cMultipleBlanketProcessing [EV02]
               !      GC Objeto de Custo 1 [DMCT] -> szAgreementNumber [DMCT]
               !      GC Agreement Supplement [DMCS] -> mnAgreementSupplement [DMCS]
               !      GC Agreements Found [AFND] -> mnContractsFound [AFND]
               !      GC Disply Seq [SEQ] -> mnSequenceNumber1 [SEQ]
               !      GC Product Source [PSR] -> szProductSource [PSR]
               !      GC Sr Ty [PSRY] -> szProductSourceType [PSRY]
               !      GC Effective Date [PEFJ] -> jdEffectiveDate [PEFJ]
               !      GC Actual Ship Date [ADDJ] -> jdPhysicalCompletionDate [ADDJ]
               !      GC Business Unit [OMCU] -> szPurchasingCostCenter [OMCU]
               !      GC Obj Acct [OBJ] -> szObjectAccount [OBJ]
               !      GC Sub  [SUB] -> szSubsidiary [SUB]
               !      GC Original SFXO (wf) [SFX] -> szOriginalOrderSuffix [SFX0]
               !      VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
               !      VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
               !      VA grd_AREV_AdjRevisionLevel [AREV] -> mnAdjustmentRevisionLevel [AREV]
               !      VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
               !      VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
               !      GC Project Number [PRJM] -> mnProjectNumber [PRJM]
               !      FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
               !      FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
               !      GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
               !      GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
               !      GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
               !      GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
               !      GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
               !      GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
               F4311EditLine(XT4311Z1.F4311EditLine)
                    VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                    VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                    GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                    GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                    "1" -> cProcessEdits [EV01]
                    VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                    GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                    SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                    SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                    FC Order Company [KCOO] -> szOrderCompany [KCOO]
                    FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    GC Change Order [SFXO] -> szOrderSuffix [SFXO]
                    FC Branch/Plant1 [MCU] -> szBranchPlant [MCU]
                    GC Orig Co [OKCO] -> szOriginalOrderCompany [OKCO]
                    GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
                    GC Orig Type [OCTO] -> szOriginalOrderType [OCTO]
                    GC Original Line No [OGNO] -> mnOriginalLineNumber [OGNO]
                    FC Address Number [AN8] -> mnSupplierNumber [AN8]
                    GC Ship To Number [SHAN] -> mnShipToNumber [SHAN]
                    GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                    VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdTransactionDate [TRDJ]
                    GC Promised Delivery [PDDJ] -> jdPromisedDate [PDDJ]
                    GC Cancel Date [CNDJ] -> jdCancelDate [CNDJ]
                    GC G/L Date [DGL] -> jdGLDate [DGL]
                    GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                    GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                    GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                    GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideFlag [PROV]
                    GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                    GC Ln Ty [LNTY] -> szLineType [LNTY]
                    GC Description 1 [DSC1] -> szDescription1 [DSC1]
                    GC Description 2 [DSC2] -> szDescription2 [DSC2]
                    GC Asset ID [ASII] -> szAssetID [ASID]
                    GC Branch/ Plant [MCU] -> szDetailLineBranchPlant [MCU]
                    GC Location [LOCNE1] -> szLocation [LOCN]
                    GC Lot/Serial [LOTN] -> szLotNumber [LOTN]
                    GC Tr. UoM [UOM] -> szTransactionUoM [UOM]
                    GC Pu. UoM [UOM3] -> szPurchasingUoM [UOM3]
                    GC Last Status [LTTR] -> szLastStatus [LTTR]
                    GC Next Status [NXTR] -> szNextStatus [NXTR]
                    GC Account Number [ANI] -> szUnformattedAccountNumber [ANI]
                    GC Subledger [SBL] -> szSubledger [SBL]
                    GC Sub Type [SBLT] -> cSubledgerType [SBLT]
                    GC Discount Factor [DSPR] -> mnDiscountFactor [DSPR]
                    GC CATN:Catalog Number(wf) [CATN] -> szCatalogNumber [CATN]
                    GC Item Price Group [PRGR] -> szInventoryPriceRule [PRGR]
                    GC Price Cat Level [CLVL] -> szPriceLevel [CLVL]
                    GC Print Message [INMG] -> szPrintMessage [INMG]
                    GC Tax Y/N [TX] -> cTaxable [TX]
                    GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    GC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
                    GC G/L Offset [GLC] -> szGLClassCode [GLPT]
                    GC Buyer Number [ANBY] -> mnBuyerNumber [ANBY]
                    GC Carrier Number [ANCR] -> mnCarrierNumber [ANCR]
                    GC Report Code 1 [PDP1] -> szPurchasingCategoryCode1 [PDP1]
                    GC Objeto de Custo 2 [PDP2] -> szPurchasingCategoryCode2 [PDP2]
                    GC Objeto de Custo 3 [PDP3] -> szPurchasingCategoryCode3 [PDP3]
                    GC Objeto de Custo 4 [PDP4] -> szPurchasingCategoryCode4 [PDP4]
                    GC Cost Rule [PDP5] -> szLandedCostRule [PRP5]
                    GC Extended Weight [ITWT] -> mnWeight [ITWT]
                    GC Wt UoM [WTUM] -> szWeightUoM [WTUM]
                    GC Extended Volume [ITVL] -> mnVolume [ITVL]
                    GC Vol  UoM [VLUM] -> szVolumeUoM [VLUM]
                    GC Projeto Rubrica [VR01] -> szReference1 [VR01]
                    GC Centro de Respons. [VR02] -> szReference2 [VR02]
                    GC S M [CRMD] -> cSendMethod [CRMD]
                    GC F C [UNCD] -> cFreezeCode [UNCD]
                    VA frm_AVCH_EvalReceipt [AVCH] -> cEvaluatedReceipts [AVCH]
                    VA grd_cInventoryInterface_IVI [IVI] -> cInventoryInterface [IVI]
                    FC Foreign [CRRM] -> cCurrencyMode [CRRM]
                    FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                    FC ExchangeRate_CRR [CRR] -> mnCurrencyExchangeRate [CRR]
                    FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                    GC Get Blanket [EV09] -> cRelievePOBlanketOrder [EV01]
                    VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                    "0" -> cSourceRequestingPOGeneration [POGS]
                    "EP4310" -> szProgramID [PID]
                    VA frm_USR0_UserID [USR0] -> szUserID [USER]
                    GC EV07..BlanketOrdersFound(wf) [EV07] -> cMultipleBlanketProcessing [EV02]
                    GC Objeto de Custo 1 [DMCT] -> szAgreementNumber [DMCT]
                    GC Agreement Supplement [DMCS] -> mnAgreementSupplement [DMCS]
                    GC Agreements Found [AFND] -> mnContractsFound [AFND]
                    GC Disply Seq [SEQ] -> mnSequenceNumber1 [SEQ]
                    GC Product Source [PSR] -> szProductSource [PSR]
                    GC Sr Ty [PSRY] -> szProductSourceType [PSRY]
                    GC Effective Date [PEFJ] -> jdEffectiveDate [PEFJ]
                    GC Actual Ship Date [ADDJ] -> jdPhysicalCompletionDate [ADDJ]
                    GC Business Unit [OMCU] -> szPurchasingCostCenter [OMCU]
                    GC Obj Acct [OBJ] -> szObjectAccount [OBJ]
                    GC Sub  [SUB] -> szSubsidiary [SUB]
                    GC Original SFXO (wf) [SFX] -> szOriginalOrderSuffix [SFX0]
                    VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                    VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                    VA grd_AREV_AdjRevisionLevel [AREV] -> mnAdjustmentRevisionLevel [AREV]
                    VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                    VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                    GC Project Number [PRJM] -> mnProjectNumber [PRJM]
                    FI mnTaskOrderNumber [DOCO] -> mnTaskOrderNumber [DOCO]
                    FI szTaskOrderType [DCTO] -> szTaskOrderType [DCTO]
                    GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
                    GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
                    GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
                    GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
                    GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
                    GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
               // #########################################
               //
          Else
               //
               // --------------------------------------------------------------------
               //    If the user press the cancel button in the kit window and is in add
               //    mode, cancel the parent record from the work file.
               // --------------------------------------------------------------------
               //
               If VA frm_EV10_cAddOrMaintenanceMode [EV10] is equal to "A"
                    // #########################################
                    ! F4311EditLine(XT4311Z1.F4311EditLine)
                    !      VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                    !      VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                    !      GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                    !      GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                    !      "1" -> cProcessEdits [EV01]
                    !      VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                    !      GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                    !      SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                    !      SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                    !      FC Order Company [KCOO] -> szOrderCompany [KCOO]
                    !      FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    !      FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    !      GC Change Order [SFXO] -> szOrderSuffix [SFXO]
                    !      FC Branch/Plant1 [MCU] -> szBranchPlant [MCU]
                    !      GC Orig Co [OKCO] -> szOriginalOrderCompany [OKCO]
                    !      GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
                    !      GC Orig Type [OCTO] -> szOriginalOrderType [OCTO]
                    !      GC Original Line No [OGNO] -> mnOriginalLineNumber [OGNO]
                    !      FC Address Number [AN8] -> mnSupplierNumber [AN8]
                    !      GC Ship To Number [SHAN] -> mnShipToNumber [SHAN]
                    !      GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                    !      VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdTransactionDate [TRDJ]
                    !      GC Original Promised Date [OPDJ] -> jdPromisedDate [PDDJ]
                    !      GC Promised Delivery [PDDJ] -> jdCancelDate [CNDJ]
                    !      GC G/L Date [DGL] -> jdGLDate [DGL]
                    !      GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                    !      GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                    !      GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                    !      GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideFlag [PROV]
                    !      GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                    !      GC Ln Ty [LNTY] -> szLineType [LNTY]
                    !      GC Description 1 [DSC1] -> szDescription1 [DSC1]
                    !      GC Description 2 [DSC2] -> szDescription2 [DSC2]
                    !      GC Asset ID [ASII] -> szAssetID [ASID]
                    !      GC Branch/ Plant [MCU] -> szDetailLineBranchPlant [MCU]
                    !      GC Location [LOCNE1] -> szLocation [LOCN]
                    !      GC Lot/Serial [LOTN] -> szLotNumber [LOTN]
                    !      GC Tr. UoM [UOM] -> szTransactionUoM [UOM]
                    !      GC Pu. UoM [UOM3] -> szPurchasingUoM [UOM3]
                    !      GC Last Status [LTTR] -> szLastStatus [LTTR]
                    !      GC Next Status [NXTR] -> szNextStatus [NXTR]
                    !      GC Account Number [ANI] -> szUnformattedAccountNumber [ANI]
                    !      GC Subledger [SBL] -> szSubledger [SBL]
                    !      GC Sub Type [SBLT] -> cSubledgerType [SBLT]
                    !      GC Discount Factor [DSPR] -> mnDiscountFactor [DSPR]
                    !      GC CATN:Catalog Number(wf) [CATN] -> szCatalogNumber [CATN]
                    !      GC Item Price Group [PRGR] -> szInventoryPriceRule [PRGR]
                    !      GC Price Cat Level [CLVL] -> szPriceLevel [CLVL]
                    !      GC Print Message [INMG] -> szPrintMessage [INMG]
                    !      GC Tax Y/N [TX] -> cTaxable [TX]
                    !      GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    !      GC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
                    !      GC G/L Offset [GLC] -> szGLClassCode [GLPT]
                    !      GC Buyer Number [ANBY] -> mnBuyerNumber [ANBY]
                    !      GC Carrier Number [ANCR] -> mnCarrierNumber [ANCR]
                    !      GC Report Code 1 [PDP1] -> szPurchasingCategoryCode1 [PDP1]
                    !      GC Objeto de Custo 2 [PDP2] -> szPurchasingCategoryCode2 [PDP2]
                    !      GC Objeto de Custo 3 [PDP3] -> szPurchasingCategoryCode3 [PDP3]
                    !      GC Objeto de Custo 4 [PDP4] -> szPurchasingCategoryCode4 [PDP4]
                    !      GC Cost Rule [PDP5] -> szLandedCostRule [PRP5]
                    !      GC Extended Weight [ITWT] -> mnWeight [ITWT]
                    !      GC Wt UoM [WTUM] -> szWeightUoM [WTUM]
                    !      GC Extended Volume [ITVL] -> mnVolume [ITVL]
                    !      GC Vol  UoM [VLUM] -> szVolumeUoM [VLUM]
                    !      GC Reference  [VR01] -> szReference1 [VR01]
                    !      GC Centro de Respons. [VR02] -> szReference2 [VR02]
                    !      GC S M [CRMD] -> cSendMethod [CRMD]
                    !      GC F C [UNCD] -> cFreezeCode [UNCD]
                    !      VA frm_AVCH_EvalReceipt [AVCH] -> cEvaluatedReceipts [AVCH]
                    !      VA grd_cInventoryInterface_IVI [IVI] -> cInventoryInterface [IVI]
                    !      FC Foreign [CRRM] -> cCurrencyMode [CRRM]
                    !      FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                    !      FC ExchangeRate_CRR [CRR] -> mnCurrencyExchangeRate [CRR]
                    !      FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                    !      GC Get Blanket [EV09] -> cRelievePOBlanketOrder [EV01]
                    !      VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                    !      "0" -> cSourceRequestingPOGeneration [POGS]
                    !      "EP4310" -> szProgramID [PID]
                    !      VA frm_USR0_UserID [USR0] -> szUserID [USER]
                    !      GC EV07..BlanketOrdersFound(wf) [EV07] -> cMultipleBlanketProcessing [EV02]
                    !      GC Objeto de Custo 1 [DMCT] -> szAgreementNumber [DMCT]
                    !      GC Agreement Supplement [DMCS] -> mnAgreementSupplement [DMCS]
                    !      GC Agreements Found [AFND] -> mnContractsFound [AFND]
                    !      GC Disply Seq [SEQ] -> mnSequenceNumber1 [SEQ]
                    !      GC Product Source [PSR] -> szProductSource [PSR]
                    !      GC Sr Ty [PSRY] -> szProductSourceType [PSRY]
                    !      GC Effective Date [PEFJ] -> jdEffectiveDate [PEFJ]
                    !      GC Actual Ship Date [ADDJ] -> jdPhysicalCompletionDate [ADDJ]
                    !      GC Business Unit [OMCU] -> szPurchasingCostCenter [OMCU]
                    !      GC Obj Acct [OBJ] -> szObjectAccount [OBJ]
                    !      GC Sub  [SUB] -> szSubsidiary [SUB]
                    !      GC Original SFXO (wf) [SFX] -> szOriginalOrderSuffix [SFX0]
                    !      VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                    !      VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                    !      VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                    !      VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                    !      FI mnTaskOrderNumber [DOCO] <> mnTaskOrderNumber [DOCO]
                    !      FI szTaskOrderType [DCTO] <> szTaskOrderType [DCTO]
                    !      GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
                    !      GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
                    !      GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
                    !      GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
                    !      GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
                    !      GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
                    F4311EditLine(XT4311Z1.F4311EditLine)
                         VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
                         VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
                         GC Line Number [LNID] <> mnOrderLineNumber [LNID]
                         GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
                         "1" -> cProcessEdits [EV01]
                         VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
                         GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
                         SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
                         SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
                         FC Order Company [KCOO] -> szOrderCompany [KCOO]
                         FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                         FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                         GC Change Order [SFXO] -> szOrderSuffix [SFXO]
                         FC Branch/Plant1 [MCU] -> szBranchPlant [MCU]
                         GC Orig Co [OKCO] -> szOriginalOrderCompany [OKCO]
                         GC Original Order No [OORN] -> szOriginalOrderNumber [OORN]
                         GC Orig Type [OCTO] -> szOriginalOrderType [OCTO]
                         GC Original Line No [OGNO] -> mnOriginalLineNumber [OGNO]
                         FC Address Number [AN8] -> mnSupplierNumber [AN8]
                         GC Ship To Number [SHAN] -> mnShipToNumber [SHAN]
                         GC Request Date [DRQJ] -> jdRequestedDate [DRQJ]
                         VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdTransactionDate [TRDJ]
                         GC Original Promised Date [OPDJ] -> jdPromisedDate [PDDJ]
                         GC Promised Delivery [PDDJ] -> jdCancelDate [CNDJ]
                         GC G/L Date [DGL] -> jdGLDate [DGL]
                         GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
                         GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
                         GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
                         GC PROV:Price Override - (wf) [PROV] -> cPriceOverrideFlag [PROV]
                         GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
                         GC Ln Ty [LNTY] -> szLineType [LNTY]
                         GC Description 1 [DSC1] -> szDescription1 [DSC1]
                         GC Description 2 [DSC2] -> szDescription2 [DSC2]
                         GC Asset ID [ASII] -> szAssetID [ASID]
                         GC Branch/ Plant [MCU] -> szDetailLineBranchPlant [MCU]
                         GC Location [LOCNE1] -> szLocation [LOCN]
                         GC Lot/Serial [LOTN] -> szLotNumber [LOTN]
                         GC Tr. UoM [UOM] -> szTransactionUoM [UOM]
                         GC Pu. UoM [UOM3] -> szPurchasingUoM [UOM3]
                         GC Last Status [LTTR] -> szLastStatus [LTTR]
                         GC Next Status [NXTR] -> szNextStatus [NXTR]
                         GC Account Number [ANI] -> szUnformattedAccountNumber [ANI]
                         GC Subledger [SBL] -> szSubledger [SBL]
                         GC Sub Type [SBLT] -> cSubledgerType [SBLT]
                         GC Discount Factor [DSPR] -> mnDiscountFactor [DSPR]
                         GC CATN:Catalog Number(wf) [CATN] -> szCatalogNumber [CATN]
                         GC Item Price Group [PRGR] -> szInventoryPriceRule [PRGR]
                         GC Price Cat Level [CLVL] -> szPriceLevel [CLVL]
                         GC Print Message [INMG] -> szPrintMessage [INMG]
                         GC Tax Y/N [TX] -> cTaxable [TX]
                         GC Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                         GC Tax Rate/Area [TXA1] -> szTaxRateArea [TXA1]
                         GC G/L Offset [GLC] -> szGLClassCode [GLPT]
                         GC Buyer Number [ANBY] -> mnBuyerNumber [ANBY]
                         GC Carrier Number [ANCR] -> mnCarrierNumber [ANCR]
                         GC Report Code 1 [PDP1] -> szPurchasingCategoryCode1 [PDP1]
                         GC Objeto de Custo 2 [PDP2] -> szPurchasingCategoryCode2 [PDP2]
                         GC Objeto de Custo 3 [PDP3] -> szPurchasingCategoryCode3 [PDP3]
                         GC Objeto de Custo 4 [PDP4] -> szPurchasingCategoryCode4 [PDP4]
                         GC Cost Rule [PDP5] -> szLandedCostRule [PRP5]
                         GC Extended Weight [ITWT] -> mnWeight [ITWT]
                         GC Wt UoM [WTUM] -> szWeightUoM [WTUM]
                         GC Extended Volume [ITVL] -> mnVolume [ITVL]
                         GC Vol  UoM [VLUM] -> szVolumeUoM [VLUM]
                         GC Projeto Rubrica [VR01] -> szReference1 [VR01]
                         GC Centro de Respons. [VR02] -> szReference2 [VR02]
                         GC S M [CRMD] -> cSendMethod [CRMD]
                         GC F C [UNCD] -> cFreezeCode [UNCD]
                         VA frm_AVCH_EvalReceipt [AVCH] -> cEvaluatedReceipts [AVCH]
                         VA grd_cInventoryInterface_IVI [IVI] -> cInventoryInterface [IVI]
                         FC Foreign [CRRM] -> cCurrencyMode [CRRM]
                         FC Currency Code [CRCD] -> szTransactionCurrencyCode [CRCD]
                         FC ExchangeRate_CRR [CRR] -> mnCurrencyExchangeRate [CRR]
                         FC To Currency Code [CRDC] -> szBaseCurrencyCode [CRDC]
                         GC Get Blanket [EV09] -> cRelievePOBlanketOrder [EV01]
                         VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
                         "0" -> cSourceRequestingPOGeneration [POGS]
                         "EP4310" -> szProgramID [PID]
                         VA frm_USR0_UserID [USR0] -> szUserID [USER]
                         GC EV07..BlanketOrdersFound(wf) [EV07] -> cMultipleBlanketProcessing [EV02]
                         GC Objeto de Custo 1 [DMCT] -> szAgreementNumber [DMCT]
                         GC Agreement Supplement [DMCS] -> mnAgreementSupplement [DMCS]
                         GC Agreements Found [AFND] -> mnContractsFound [AFND]
                         GC Disply Seq [SEQ] -> mnSequenceNumber1 [SEQ]
                         GC Product Source [PSR] -> szProductSource [PSR]
                         GC Sr Ty [PSRY] -> szProductSourceType [PSRY]
                         GC Effective Date [PEFJ] -> jdEffectiveDate [PEFJ]
                         GC Actual Ship Date [ADDJ] -> jdPhysicalCompletionDate [ADDJ]
                         GC Business Unit [OMCU] -> szPurchasingCostCenter [OMCU]
                         GC Obj Acct [OBJ] -> szObjectAccount [OBJ]
                         GC Sub  [SUB] -> szSubsidiary [SUB]
                         GC Original SFXO (wf) [SFX] -> szOriginalOrderSuffix [SFX0]
                         VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
                         VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
                         VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
                         FI mnTaskOrderNumber [DOCO] <> mnTaskOrderNumber [DOCO]
                         FI szTaskOrderType [DCTO] <> szTaskOrderType [DCTO]
                         GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
                         GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
                         GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
                         GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
                         GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
                         GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
                    // #########################################
               End If
               //
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Order Detail
Event: Tab Page is Selected
Event GUID: dc91c438-d8a1-4807-9772-9b12b0b74da9
=============================================
// Sar 7232365 Begin
VA frm_cTabPage [EV01] = "1"
// Sar 7315460 Begin
If FI SourceOfFormCall [EV01] is not equal to "1"
     Set Control Focus(FC Long Address Number_ALKY [ALKY])
End If
// Sar 7315460 End
// Sar 7232365 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Line Defaults
Event: Tab Page is Selected
Event GUID: b1fe7e0e-5d5f-4879-a72d-10a5a8613388
=============================================
// Sar 7232365 Begin
VA frm_cTabPage [EV01] = "2"
// Sar 7232365 End


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Additional Properties
Event: Tab Page is Selected
Event GUID: 1d6afb49-8fe4-4ff3-bfd2-e4b754299082
=============================================
// SAR 8164296
FC Long Address AB01 [ALKY] = [FC Address Book 01 [POHAB01]]
FC Long Address AB02 [ALKY] = [FC Address Book 02 [POHAB02]]


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Matrix Order Entry
Event: Button Clicked
Event GUID: 6a663ba1-cbfe-4017-90f5-b04b33d41361
=============================================
// 
VA frm_szMatrixCacheCursor_GENLNG [GENLNG] = "0"
// 
If GC Line Number [LNID] is greater than or equal to "1.000"
     // Add/Update
     VA frm_cAddOrUpdateMatrix_EV01 [EV01] = "4"
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          GC Short Item No [ITM] <> mnShortItemNumber [ITM]
          GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
          UNDEFINED <> szSecondItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescriptionLine2 [DSC2]
          UNDEFINED <> szItemFlashMessage [IFLA]
          UNDEFINED <> szPrimaryUOM [UOM1]
          UNDEFINED <> szSecondaryUOM [UOM2]
          UNDEFINED <> szPurchasingUOM [UOM3]
          UNDEFINED <> szPricingUOM [UOM4]
          UNDEFINED <> szShippingUOM [UOM6]
          UNDEFINED <> szWeightUOM [UWUM]
          UNDEFINED <> szVolumeUOM [UVM1]
          "1" -> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
          UNDEFINED <> cBackOrdersAllowedYN [BACK]
          UNDEFINED <> cStockingType [STKT]
          UNDEFINED <> cBulkPackedFlag [BPFG]
          UNDEFINED <> cInventoryCostLevel [CLEV]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> cLotProcessType [SRCE]
          UNDEFINED <> mnShelfLifeDays [SLD]
          UNDEFINED <> szGLClassCode [GLPT]
          UNDEFINED <> cContractItem [CONT]
          UNDEFINED <> szProductionUOM [UOM8]
          UNDEFINED <> szFromGrade [FRGD]
          UNDEFINED <> szThruGrade [THGD]
          UNDEFINED <> mnFromPotency [FRMP]
          UNDEFINED <> mnThruPotency [THRP]
          UNDEFINED <> cPriceLevel [PLEV]
          UNDEFINED <> cGradePotencyPricing [PRPO]
          UNDEFINED <> cRoundToWholeNumber [SNS]
          UNDEFINED <> cKitPricingMethod [PMTH]
          UNDEFINED <> szComponentUOM [UOM9]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> szPrintMessage [INMG]
          UNDEFINED <> cCommitmentMethod [CMGL]
          UNDEFINED <> cCheckAvailability [CKAV]
          UNDEFINED <> cSerialNumberReqsted [SRNR]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cPurchasePriceLevel [PPLV]
          VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
          VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
          UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
          UNDEFINED <> cDualPickingProcessOption [DPPO]
          UNDEFINED <> mnDualTolerance [DLTL]
     VA frm_szMatrixTemplate_TMPL [TMPL] = VA grd_szMatrixTemplate_TMPL [TMPL]
     VA frm_szMatrixSegment_SEG1 [SEG1] = VA grd_szMatrixSegment_SEG1 [SEG1]
Else
     // Add Only
     VA frm_cAddOrUpdateMatrix_EV01 [EV01] = "2"
End If
// 
If GC Branch/ Plant [MCU] is equal to or empty <Blank>
     VA grd_szMatrixBranchPlant_MCU [MCU] = FC Branch/Plant [MCU]
Else
     VA grd_szMatrixBranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
End If
// 
Call App:P41902 Form:W41902A Version:ZJDE0001
     VA frm_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
     UNDEFINED <> mnMatrixRowNumber [MRNO]
     UNDEFINED <> mnMatrixColumnNumber [MCNO]
     VA frm_szMatrixTemplate_TMPL [TMPL] -> szTemplate_F41008 [TMPL]
     VA frm_cAddOrUpdateMatrix_EV01 [EV01] -> cMode [EV01]
     VA grd_szMatrixBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
     VA frm_mnMatrixQuantity_QTY [QTY] -> mnControlQuantity [TRQT]
     GC Tr. UoM [UOM] -> szUnitOfMeasureAsInput [UOM]
     FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKey [KCOO]
     VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
     GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
     VA frm_cMatrixUpdateType_EV01 [EV01] <- cCancelPressed [EV01]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     VA frm_JOBS_JobNumber [JOBS] -> mnJobnumber [JOBS]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_szMatrixCacheJobNum_JOBS [JOBS] <> mnMOEJobNumber [JOBS]
     VA frm_szMatrixComputerID_CTID [CTID] <> szMOEComputerID [CTID]
     UNDEFINED <> cSOECacheOrWfFlag [EV01]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
// 
If VA frm_cMatrixUpdateType_EV01 [EV01] is not equal to <Blank>
And VA frm_cMatrixUpdateType_EV01 [EV01] is not equal to <NULL>
     If VA frm_cMatrixUpdateType_EV01 [EV01] is equal to "1"
          // 
          VA frm_szMatrixErrorMessage_DTA1 [DTA1] = "  "
          VA frm_mnGridRowCounter_MATH01 [MATH01] = "1"
          While VA frm_szMatrixErrorMessage_DTA1 [DTA1] is equal to or empty <Blank>
               MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                    "6" -> szCacheActionCode [CACTN]
                    "7" -> mnNumberKeys [NKEYS]
                    "1" -> cSuppressErrorMessage [SUPPS]
                    VA frm_szMatrixErrorMessage_DTA1 [DTA1] <- szErrorMessageID [DTAI]
                    VA frm_szMatrixCacheCursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                    VA frm_szMatrixCacheJobNum_JOBS [JOBS] -> mnJobnumber [JOBS]
                    VA frm_szMatrixComputerID_CTID [CTID] -> szComputerID [CTID]
                    VA frm_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
                    UNDEFINED <> mnLineNumber [LNID]
                    UNDEFINED <> mnMatrixRowNumber [MRNO]
                    UNDEFINED <> mnMatrixColumnNumber [MCNO]
                    VA frm_mnIdentifierShortItem_itm [ITM] <- mnIdentifierShortItem [ITM]
                    GB Matrix Line Number [MCLN] <- mnMatrixControlLine [MCLN]
                    GB Quantity Ordered [UORGE1] <- mnQuantityTransaction [TRQT]
                    GB Tr. UoM [UOM] <- szUnitOfMeasureAsInput [UOM]
                    UNDEFINED <> cQuantityChanged [EV01]
                    "2" -> cIndex [EV01]
                    GB Pu. UoM [UOM3] <- szUnitOfMeasurePrimary [UOM1]
               If VA frm_szMatrixErrorMessage_DTA1 [DTA1] is equal to or empty <Blank>
                    GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
                         VA frm_mnIdentifierShortItem_itm [ITM] -> mnShortItemNumber [ITM]
                         GB Item Number [UITM] <- szPrimaryItemNumber [UITM]
                         UNDEFINED <> szSecondItemNumber [LITM]
                         UNDEFINED <> szThirdItemNumber [AITM]
                         UNDEFINED <> szDescription [DSC1]
                         UNDEFINED <> szDescriptionLine2 [DSC2]
                         UNDEFINED <> szItemFlashMessage [IFLA]
                         UNDEFINED <> szPrimaryUOM [UOM1]
                         UNDEFINED <> szSecondaryUOM [UOM2]
                         UNDEFINED <> szPurchasingUOM [UOM3]
                         UNDEFINED <> szPricingUOM [UOM4]
                         UNDEFINED <> szShippingUOM [UOM6]
                         UNDEFINED <> szWeightUOM [UWUM]
                         UNDEFINED <> szVolumeUOM [UVM1]
                         UNDEFINED <> cSuppressErrorMessage [EV01]
                         UNDEFINED <> szErrorMessageID [DTAI]
                         VA grd_szMatrixBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
                         UNDEFINED <> cBackOrdersAllowedYN [BACK]
                         UNDEFINED <> cStockingType [STKT]
                         UNDEFINED <> cBulkPackedFlag [BPFG]
                         UNDEFINED <> cInventoryCostLevel [CLEV]
                         UNDEFINED <> szLineType [LNTY]
                         UNDEFINED <> cLotProcessType [SRCE]
                         UNDEFINED <> mnShelfLifeDays [SLD]
                         UNDEFINED <> szGLClassCode [GLPT]
                         UNDEFINED <> cContractItem [CONT]
                         UNDEFINED <> szProductionUOM [UOM8]
                         UNDEFINED <> szFromGrade [FRGD]
                         UNDEFINED <> szThruGrade [THGD]
                         UNDEFINED <> mnFromPotency [FRMP]
                         UNDEFINED <> mnThruPotency [THRP]
                         UNDEFINED <> cPriceLevel [PLEV]
                         UNDEFINED <> cGradePotencyPricing [PRPO]
                         UNDEFINED <> cRoundToWholeNumber [SNS]
                         UNDEFINED <> cKitPricingMethod [PMTH]
                         UNDEFINED <> szComponentUOM [UOM9]
                         UNDEFINED <> szStandardUOMConversion [TFLA]
                         UNDEFINED <> mnBuyer [BUYR]
                         UNDEFINED <> mnPlannerNumber [ANPL]
                         UNDEFINED <> szPrintMessage [INMG]
                         UNDEFINED <> cCommitmentMethod [CMGL]
                         UNDEFINED <> cCheckAvailability [CKAV]
                         UNDEFINED <> cSerialNumberReqsted [SRNR]
                         UNDEFINED <> cLotStatusCode [LOTS]
                         UNDEFINED <> cPurchasePriceLevel [PPLV]
                         VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                         VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
                         UNDEFINED <> szSegment2 [SEG2]
                         UNDEFINED <> szSegment3 [SEG3]
                         UNDEFINED <> szSegment4 [SEG4]
                         UNDEFINED <> szSegment5 [SEG5]
                         UNDEFINED <> szSegment6 [SEG6]
                         UNDEFINED <> szSegment7 [SEG7]
                         UNDEFINED <> szSegment8 [SEG8]
                         UNDEFINED <> szSegment9 [SEG9]
                         UNDEFINED <> szSegment10 [SEG0]
                         UNDEFINED <> cMatrixControlled [MIC]
                         UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
                         UNDEFINED <> cDualPickingProcessOption [DPPO]
                         UNDEFINED <> mnDualTolerance [DLTL]
                    Insert Grid Buffer Row(FC Grid, VA frm_mnGridRowCounter_MATH01,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
                    If GC ACTN:Action Code (wf) [ACTN] is equal to or empty <Blank>
                         GC ACTN:Action Code (wf) [ACTN] = "A"
                    End If
                    // 
                    // 
                    VA frm_mnGridRowCounter_MATH01 [MATH01] = [VA frm_mnGridRowCounter_MATH01 [MATH01]]+1
                    // 
                    // 
               End If
          End While
          // 
          // SAR 6445457 Begin
          // Clear Matrix Cache after adding line to the POE grid
          MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
               "8" -> szCacheActionCode [CACTN]
               "2" -> mnNumberKeys [NKEYS]
               "1" -> cSuppressErrorMessage [SUPPS]
               VA frm_szMatrixErrorMessage_DTA1 [DTA1] <- szErrorMessageID [DTAI]
               VA frm_szMatrixCacheCursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
               VA frm_szMatrixCacheJobNum_JOBS [JOBS] -> mnJobnumber [JOBS]
               VA frm_szMatrixComputerID_CTID [CTID] -> szComputerID [CTID]
               VA frm_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               GB Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
               "2" -> cIndex [EV01]
          // SAR 6445457 End
          // 
          VA frm_szMatrixErrorMessage_DTA1 [DTA1] = <Blank>
          // 
     Else
          If VA frm_cMatrixUpdateType_EV01 [EV01] is equal to "2"
               // 
               VA frm_mnGridRowCounter_MATH01 [MATH01] = "1"
               Get Max Grid Rows(FC Grid, VA frm_mnNoOfGridLines_MATH01)
               // 
               While VA frm_mnGridRowCounter_MATH01 [MATH01] is less than VA frm_mnNoOfGridLines_MATH01 [MATH01]
                    Get Grid Row(FC Grid, VA frm_mnGridRowCounter_MATH01)
                    // 
                    If GC Matrix Line Number [MCLN] is greater than "0"
                         MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                              "1" -> szCacheActionCode [CACTN]
                              "7" -> mnNumberKeys [NKEYS]
                              "1" -> cSuppressErrorMessage [SUPPS]
                              VA frm_szMatrixErrorMessage_DTA1 [DTA1] <- szErrorMessageID [DTAI]
                              UNDEFINED <> idCacheCursor [GENLNG]
                              VA frm_szMatrixCacheJobNum_JOBS [JOBS] -> mnJobnumber [JOBS]
                              VA frm_szMatrixComputerID_CTID [CTID] -> szComputerID [CTID]
                              VA grd_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
                              FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                              FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                              FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                              VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
                              GC Line Number [LNID] -> mnLineNumber [LNID]
                              UNDEFINED <> mnMatrixRowNumber [MRNO]
                              UNDEFINED <> mnMatrixColumnNumber [MCNO]
                              VA frm_mnIdentifierShortItem_itm [ITM] <- mnIdentifierShortItem [ITM]
                              VA frm_mnCacheMatrixLine_MCLN [MCLN] <- mnMatrixControlLine [MCLN]
                              VA frm_mnMatrixQtyOrdered_UORG [UORG] <- mnQuantityTransaction [TRQT]
                              VA frm_szMatrixUoM_UOM [UOM] <- szUnitOfMeasureAsInput [UOM]
                              VA frm_cMatrixQtyChanged_EV01 [EV01] <- cQuantityChanged [EV01]
                              "2" -> cIndex [EV01]
                              UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                         // 
                         If GC Short Item No [ITM] is equal to VA frm_mnIdentifierShortItem_itm [ITM]
                         And GC Matrix Line Number [MCLN] is equal to VA frm_mnCacheMatrixLine_MCLN [MCLN]
                              // 
                              If VA frm_szMatrixErrorMessage_DTA1 [DTA1] is equal to or empty <Blank>
                                   If VA frm_cMatrixQtyChanged_EV01 [EV01] is equal to "2"
                                        If VA frm_mnMatrixQtyOrdered_UORG [UORG] is equal to <Blank>
                                        Or VA frm_mnMatrixQtyOrdered_UORG [UORG] is equal to "0"
                                             Press Button(HC Cancel &Line)
                                        Else
                                             GC Quantity Ordered [UORGE1] = VA frm_mnMatrixQtyOrdered_UORG [UORG]
                                             GC Extended Cost [AEXPE1] = [GC Quantity Ordered [UORGE1]]*[GC Unit Cost [UPAX]]
                                             GC Tr. UoM [UOM] = VA frm_szMatrixUoM_UOM [UOM]
                                        End If
                                        MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                                             "4" -> szCacheActionCode [CACTN]
                                             "8" -> mnNumberKeys [NKEYS]
                                             "1" -> cSuppressErrorMessage [SUPPS]
                                             UNDEFINED <> szErrorMessageID [DTAI]
                                             UNDEFINED <> idCacheCursor [GENLNG]
                                             VA frm_szMatrixCacheJobNum_JOBS [JOBS] -> mnJobnumber [JOBS]
                                             VA frm_szMatrixComputerID_CTID [CTID] -> szComputerID [CTID]
                                             VA grd_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
                                             FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                                             FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                                             FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                                             VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
                                             GC Line Number [LNID] -> mnLineNumber [LNID]
                                             UNDEFINED <> mnMatrixRowNumber [MRNO]
                                             UNDEFINED <> mnMatrixColumnNumber [MCNO]
                                             UNDEFINED <> mnIdentifierShortItem [ITM]
                                             GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
                                             UNDEFINED <> mnQuantityTransaction [TRQT]
                                             UNDEFINED <> szUnitOfMeasureAsInput [UOM]
                                             UNDEFINED <> cQuantityChanged [EV01]
                                             "2" -> cIndex [EV01]
                                             UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
                                   End If
                              End If
                         End If
                    End If
                    VA frm_mnGridRowCounter_MATH01 [MATH01] = [VA frm_mnGridRowCounter_MATH01 [MATH01]]+1
               End While
               // 
               If VA frm_szMatrixErrorMessage_DTA1 [DTA1] is equal to or empty <Blank>
                    MatrixOrderEntryCache(B4101530.MatrixOrderEntryCache)
                         "6" -> szCacheActionCode [CACTN]
                         "7" -> mnNumberKeys [NKEYS]
                         "1" -> cSuppressErrorMessage [SUPPS]
                         VA frm_szMatrixErrorMessage_DTA1 [DTA1] <- szErrorMessageID [DTAI]
                         VA frm_szMatrixCacheCursor_GENLNG [GENLNG] <> idCacheCursor [GENLNG]
                         VA frm_szMatrixCacheJobNum_JOBS [JOBS] -> mnJobnumber [JOBS]
                         VA frm_szMatrixComputerID_CTID [CTID] -> szComputerID [CTID]
                         VA frm_szMatrixSegment_SEG1 [SEG1] -> szSegment1 [SEG1]
                         FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                         FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                         FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                         VA frm_TempSFX0 [SFXO] -> szOrderSuffix [SFXO]
                         GC Line Number [LNID] -> mnLineNumber [LNID]
                         UNDEFINED <> mnMatrixRowNumber [MRNO]
                         UNDEFINED <> mnMatrixColumnNumber [MCNO]
                         VA frm_mnIdentifierShortItem_itm [ITM] <- mnIdentifierShortItem [ITM]
                         VA frm_mnCacheMatrixLine_MCLN [MCLN] <- mnMatrixControlLine [MCLN]
                         VA frm_mnMatrixQtyOrdered_UORG [UORG] <- mnQuantityTransaction [TRQT]
                         VA frm_szMatrixUoM_UOM [UOM] <- szUnitOfMeasureAsInput [UOM]
                         VA frm_cMatrixQtyChanged_EV01 [EV01] <- cQuantityChanged [EV01]
                         "2" -> cIndex [EV01]
                         UNDEFINED <> szUnitOfMeasurePrimary [UOM1]
               End If
               If VA frm_szMatrixErrorMessage_DTA1 [DTA1] is equal to or empty <Blank>
                    GetOrderDetailCache(B4301370.GetOrderDetailCache)
                         FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                         FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                         FC Order Company [KCOO] -> szOrderCompany [KCOO]
                         UNDEFINED <> mnLineNumber [LNID]
                         UNDEFINED <> jdTransactionDate [TRDJ]
                         VA frm_mnIdentifierShortItem_itm [ITM] -> mnShortItemNumber [ITM]
                         UNDEFINED <> szIdentifier2ndItem [LITM]
                         UNDEFINED <> szIdentifier3rdItem [AITM]
                         UNDEFINED <> szDescriptionLine1 [DSC1]
                         UNDEFINED <> szDescriptionLine2 [DSC2]
                         UNDEFINED <> szLineType [LNTY]
                         UNDEFINED <> mnTransactionQuantity [UORG]
                         UNDEFINED <> mnExtendedPrice [AEXP]
                         UNDEFINED <> cTaxable [TX]
                         UNDEFINED <> szTaxExplanationCode [EXR1]
                         UNDEFINED <> szTaxRateArea [TXA1]
                         UNDEFINED <> szAccountId [AID]
                         UNDEFINED <> cSubledgerType [SBLT]
                         UNDEFINED <> szSubledger [SBL]
                         UNDEFINED <> szCurrencyCodeFrom [CRCD]
                         VA frm_szMatrixUoM_UOM [UOM] -> szTransactionUOM [UOM]
                         UNDEFINED <> szPurchaseUOM [UOM3]
                         UNDEFINED <> mnSupplierNumber [AN8]
                         UNDEFINED <> szBranchPlant [MCU]
                         UNDEFINED <> mnUnitCost [PRRC]
                         UNDEFINED <> jdPromiseDate [PDDJ]
                         UNDEFINED <> szReportCode1Purchasing [PDP1]
                         UNDEFINED <> szReportCode2Purchasing [PDP2]
                         UNDEFINED <> szReportCode5Purchasing [PDP5]
                         UNDEFINED <> szReportCode3Purchasing [PDP3]
                         UNDEFINED <> szReportCode4Purchasing [PDP4]
                         UNDEFINED <> mnBuyerNumber [ANBY]
                         UNDEFINED <> szPrintMessage1 [INMG]
                         UNDEFINED <> cSendMethod [CRMD]
                         UNDEFINED <> szGlClass [GLC]
                         UNDEFINED <> szPaymentTerms [PTC]
                         UNDEFINED <> cLastRecordRead [EV01]
                         VA frm_cMatrixNotInCache_EV01 [EV01] <- cRecordDoesNotExist [EV01]
                         VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
                         VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
                         UNDEFINED <> idCacheCursor [GENLNG]
                         UNDEFINED <> jdGLDate [DGL]
                         UNDEFINED <> jdDateRequested [DRQJ]
                         UNDEFINED <> szOrderSuffix [SFX0]
                         UNDEFINED <> mnUniqueKey [UKID]
                         UNDEFINED <> cMessageCode [MSGT]
                         UNDEFINED <> szOriginalOrderNumber [OORN]
                         UNDEFINED <> szOriginalOrderType [OCTO]
                         UNDEFINED <> szOriginalCompany [OKCO]
                         UNDEFINED <> mnOriginalLineNumber [OGNO]
                         UNDEFINED <> szOriginalSuffix [SFX]
                         UNDEFINED <> cSourceRequestingGeneration [POGS]
                         VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
                         VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
                         UNDEFINED <> szCompanyKeyRelated [RKCO]
                         UNDEFINED <> szRelatedPoSoNumber [RORN]
                         UNDEFINED <> szRelatedOrderType [RCTO]
                         UNDEFINED <> mnRelatedPoSoLineNo [RLLN]
                         UNDEFINED <> mnMatrixControlLine [MCLN]
                         UNDEFINED <> mnIndex [IDEX]
                         UNDEFINED <> szCurrencyCodeTo [CRDC]
                         UNDEFINED <> mnExchangeRate [CRR]
                         UNDEFINED <> szStatusCodeNext [NXTR]
                         UNDEFINED <> szStatusCodeLast [LTTR]
                         UNDEFINED <> szLot [LOTN]
                    If VA frm_cMatrixNotInCache_EV01 [EV01] is equal to "1"
                         GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
                              VA frm_mnIdentifierShortItem_itm [ITM] -> mnShortItemNumber [ITM]
                              GB Item Number [UITM] <- szPrimaryItemNumber [UITM]
                              UNDEFINED <> szSecondItemNumber [LITM]
                              UNDEFINED <> szThirdItemNumber [AITM]
                              UNDEFINED <> szDescription [DSC1]
                              UNDEFINED <> szDescriptionLine2 [DSC2]
                              UNDEFINED <> szItemFlashMessage [IFLA]
                              UNDEFINED <> szPrimaryUOM [UOM1]
                              UNDEFINED <> szSecondaryUOM [UOM2]
                              UNDEFINED <> szPurchasingUOM [UOM3]
                              UNDEFINED <> szPricingUOM [UOM4]
                              UNDEFINED <> szShippingUOM [UOM6]
                              UNDEFINED <> szWeightUOM [UWUM]
                              UNDEFINED <> szVolumeUOM [UVM1]
                              UNDEFINED <> cSuppressErrorMessage [EV01]
                              UNDEFINED <> szErrorMessageID [DTAI]
                              VA grd_szMatrixBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
                              UNDEFINED <> cBackOrdersAllowedYN [BACK]
                              UNDEFINED <> cStockingType [STKT]
                              UNDEFINED <> cBulkPackedFlag [BPFG]
                              UNDEFINED <> cInventoryCostLevel [CLEV]
                              UNDEFINED <> szLineType [LNTY]
                              UNDEFINED <> cLotProcessType [SRCE]
                              UNDEFINED <> mnShelfLifeDays [SLD]
                              UNDEFINED <> szGLClassCode [GLPT]
                              UNDEFINED <> cContractItem [CONT]
                              UNDEFINED <> szProductionUOM [UOM8]
                              UNDEFINED <> szFromGrade [FRGD]
                              UNDEFINED <> szThruGrade [THGD]
                              UNDEFINED <> mnFromPotency [FRMP]
                              UNDEFINED <> mnThruPotency [THRP]
                              UNDEFINED <> cPriceLevel [PLEV]
                              UNDEFINED <> cGradePotencyPricing [PRPO]
                              UNDEFINED <> cRoundToWholeNumber [SNS]
                              UNDEFINED <> cKitPricingMethod [PMTH]
                              UNDEFINED <> szComponentUOM [UOM9]
                              UNDEFINED <> szStandardUOMConversion [TFLA]
                              UNDEFINED <> mnBuyer [BUYR]
                              UNDEFINED <> mnPlannerNumber [ANPL]
                              UNDEFINED <> szPrintMessage [INMG]
                              UNDEFINED <> cCommitmentMethod [CMGL]
                              UNDEFINED <> cCheckAvailability [CKAV]
                              UNDEFINED <> cSerialNumberReqsted [SRNR]
                              UNDEFINED <> cLotStatusCode [LOTS]
                              UNDEFINED <> cPurchasePriceLevel [PPLV]
                              VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                              VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
                              UNDEFINED <> szSegment2 [SEG2]
                              UNDEFINED <> szSegment3 [SEG3]
                              UNDEFINED <> szSegment4 [SEG4]
                              UNDEFINED <> szSegment5 [SEG5]
                              UNDEFINED <> szSegment6 [SEG6]
                              UNDEFINED <> szSegment7 [SEG7]
                              UNDEFINED <> szSegment8 [SEG8]
                              UNDEFINED <> szSegment9 [SEG9]
                              UNDEFINED <> szSegment10 [SEG0]
                              UNDEFINED <> cMatrixControlled [MIC]
                              UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
                              UNDEFINED <> cDualPickingProcessOption [DPPO]
                              UNDEFINED <> mnDualTolerance [DLTL]
                         GB Tr. UoM [UOM] = VA frm_szMatrixUoM_UOM [UOM]
                         GB Matrix Line Number [MCLN] = VA frm_mnCacheMatrixLine_MCLN [MCLN]
                         GB Quantity Ordered [UORGE1] = VA frm_mnMatrixQtyOrdered_UORG [UORG]
                         Insert Grid Buffer Row(FC Grid, VA frm_mnGridRowCounter_MATH01,  <Yes>,  <No>,  <Yes>,  <No>,  <Yes>)
                         VA frm_mnGridRowCounter_MATH01 [MATH01] = [VA frm_mnGridRowCounter_MATH01 [MATH01]]+1
                    End If
               End If
          End If
     End If
End If
// 
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Config Item
Event: Button Clicked
Event GUID: b0d5a941-7db9-4f35-aad0-0cc9c1a65607
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_AmountForeignUnitCost_FUC [FUC]
evt_mnConfigExtendedPrice_AEXP [AEXP]
evt_cDomesticOrForeign_EV01 [EV01]
----------------------------------------
//
If GC Short Item No [ITM] is equal to "0"
Or GC Short Item No [ITM] is equal to <Blank>
Or GC Short Item No [ITM] is equal to <NULL>
     VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
          GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
          GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescription2 [DSC2]
          UNDEFINED <> cSymbolidentifier [SYMID]
          UNDEFINED <> idF4101LongRowPtr [GENLNG]
          GC Short Item No [ITM] <- mnShortItemNumber [ITM]
          UNDEFINED <> cErrorcode [ERRC]
          UNDEFINED <> szLanguagepreference [LNGP]
          FC Address Number [AN8] -> mnAddressnumber [AN8]
          UNDEFINED <> szSystemcode [SY]
          UNDEFINED <> szLongItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szItemFlashMsg [IFLA]
          UNDEFINED <> cReturnPtr [EV01]
          UNDEFINED <> cSuppressErrorMsg [EV02]
          UNDEFINED <> szErrorMsgID [DTAI]
          UNDEFINED <> cCallType [EV01]
          UNDEFINED <> idPtrToF41001Record [GENLNG]
          UNDEFINED <> szBaseLngDesc1 [DSC1]
          UNDEFINED <> szBaseLngDesc2 [DSC2]
          UNDEFINED <> cCrossRefMode [MODE]
          UNDEFINED <> cLngPrefType [EV01]
          UNDEFINED <> jdExpirationDate [EXDJ]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
End If
//
// SAR 6297255 Begin
If GC EV01:Record in Detail W.File (wf) [EV01] is not equal to "1"
     ! F4311EditLine(XT4311Z1.F4311EditLine)
     !      VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
     !      VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
     !      GC Line Number [LNID] <> mnOrderLineNumber [LNID]
     !      GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
     !      "1" <> cProcessEdits [EV01]
     !      VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
     !      GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
     !      SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
     !      SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
     !      FC Order Company [KCOO] <> szOrderCompany [KCOO]
     !      FC Order Number [DOCO] <> mnOrderNumber [DOCO]
     !      FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
     !      GC Change Order [SFXO] <> szOrderSuffix [SFXO]
     !      GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
     !      GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
     !      GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
     !      GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
     !      GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
     !      BC Company - Key (Related Order) (F4311.0) [RKCO] -> szRelatedOrderCompany [RKCO]
     !      VA grd_szRelatedOrderNumber_RORN [RORN] -> szRelatedOrderNumber [RORN]
     !      VA grd_szRelatedOrderType_RCTO [RCTO] -> szRelatedOrderType [RCTO]
     !      VA grd_mnRelatedLineNo_RLLN [RLLN] -> mnRelatedOrderLine [RLLN]
     !      FC Address Number [AN8] <> mnSupplierNumber [AN8]
     !      GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
     !      GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
     !      VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] <> jdTransactionDate [TRDJ]
     !      GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
     !      GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
     !      GC G/L Date [DGL] <> jdGLDate [DGL]
     !      GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
     !      GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
     !      GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
     !      VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
     !      GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
     !      GC Ln Ty [LNTY] <> szLineType [LNTY]
     !      GC Description 1 [DSC1] <> szDescription1 [DSC1]
     !      GC Description 2 [DSC2] <> szDescription2 [DSC2]
     !      GC Asset ID [ASII] <> szAssetID [ASID]
     !      GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
     !      GC Location [LOCNE1] <> szLocation [LOCN]
     !      GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
     !      VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
     !      GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
     !      GC Last Status [LTTR] <> szLastStatus [LTTR]
     !      GC Next Status [NXTR] <> szNextStatus [NXTR]
     !      GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
     !      GC Subledger [SBL] <> szSubledger [SBL]
     !      GC Sub Type [SBLT] <> cSubledgerType [SBLT]
     !      GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
     !      GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
     !      GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
     !      GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
     !      GC Print Message [INMG] <> szPrintMessage [INMG]
     !      GC Tax Y/N [TX] <> cTaxable [TX]
     !      GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
     !      GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
     !      GC G/L Offset [GLC] <> szGLClassCode [GLPT]
     !      GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
     !      GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
     !      GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
     !      GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
     !      GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
     !      GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
     !      GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
     !      GC Extended Weight [ITWT] <> mnWeight [ITWT]
     !      GC Wt UoM [WTUM] <> szWeightUoM [WTUM]
     !      GC Extended Volume [ITVL] <> mnVolume [ITVL]
     !      GC Vol  UoM [VLUM] <> szVolumeUoM [VLUM]
     !      GC Reference  [VR01] <> szReference1 [VR01]
     !      GC Centro de Respons. [VR02] <> szReference2 [VR02]
     !      GC S M [CRMD] <> cSendMethod [CRMD]
     !      GC F C [UNCD] <> cFreezeCode [UNCD]
     !      GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
     !      VA grd_cInventoryInterface_IVI [IVI] <> cInventoryInterface [IVI]
     !      FC Foreign [CRRM] <> cCurrencyMode [CRRM]
     !      FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
     !      FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
     !      FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
     !      GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
     !      VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
     !      "0" <> cSourceRequestingPOGeneration [POGS]
     !      "EP4310" <> szProgramID [PID]
     !      VA frm_USR0_UserID [USR0] <> szUserID [USER]
     !      GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
     !      GC Unique Key ID [UKID] -> mnUniqueKey [UKID]
     !      GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
     !      GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
     !      GC Agreements Found [AFND] <> mnContractsFound [AFND]
     !      GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
     !      GC Product Source [PSR] <> szProductSource [PSR]
     !      GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
     !      GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
     !      GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
     !      GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
     !      GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
     !      GC Sub  [SUB] <> szSubsidiary [SUB]
     !      GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
     !      VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
     !      VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
     !      GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
     !      VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
     !      VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
     !      VA grd_FreeGoodExists_EV01 [EV01] <- cAdvPriceCalledFlag [EV13]
     !      GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
     !      GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
     !      GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
     !      GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
     !      GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
     !      GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
     !      GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
     !      GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
     !      GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
     !      VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
     !      VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
     !      GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
     !      GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
     !      GC Sec Quantity Ordered [SQOR] <> mnSecondaryQty [SQOR]
     !      GC Sec UoM [UOM2] <> szSecondaryUOM [UOM2]
     !      GC Planned Effective [DLEJ] <> jdLotEffectivityDate [DLEJ]
     !      GC Promotion ID [PMTN] <> szPromotionID [PMTN]
     !      GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
     !      GC Project Number [PRJM] -> mnProjectNumber [PRJM]
     !      GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
     !      GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
     !      GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
     !      GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
     !      GC Job Typ [JBCD] -> szJobType [JBCD]
     !      GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
     !      GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
     F4311EditLine(XT4311Z1.F4311EditLine)
          VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
          VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
          GC Line Number [LNID] <> mnOrderLineNumber [LNID]
          GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
          GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
          SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
          FC Order Company [KCOO] <> szOrderCompany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          GC Change Order [SFXO] <> szOrderSuffix [SFXO]
          GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
          GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
          GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
          GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
          GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
          BC Company - Key (Related Order) (F4311.0) [RKCO] -> szRelatedOrderCompany [RKCO]
          VA grd_szRelatedOrderNumber_RORN [RORN] -> szRelatedOrderNumber [RORN]
          VA grd_szRelatedOrderType_RCTO [RCTO] -> szRelatedOrderType [RCTO]
          VA grd_mnRelatedLineNo_RLLN [RLLN] -> mnRelatedOrderLine [RLLN]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
          GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
          VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] <> jdTransactionDate [TRDJ]
          GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
          GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          GC G/L Date [DGL] <> jdGLDate [DGL]
          GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
          GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
          GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
          VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
          GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
          GC Ln Ty [LNTY] <> szLineType [LNTY]
          GC Description 1 [DSC1] <> szDescription1 [DSC1]
          GC Description 2 [DSC2] <> szDescription2 [DSC2]
          GC Asset ID [ASII] <> szAssetID [ASID]
          GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
          GC Location [LOCNE1] <> szLocation [LOCN]
          GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
          VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
          GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
          GC Last Status [LTTR] <> szLastStatus [LTTR]
          GC Next Status [NXTR] <> szNextStatus [NXTR]
          GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
          GC Subledger [SBL] <> szSubledger [SBL]
          GC Sub Type [SBLT] <> cSubledgerType [SBLT]
          GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
          GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
          GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
          GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
          GC Print Message [INMG] <> szPrintMessage [INMG]
          GC Tax Y/N [TX] <> cTaxable [TX]
          GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          GC G/L Offset [GLC] <> szGLClassCode [GLPT]
          GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
          GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
          GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
          GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
          GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
          GC Extended Weight [ITWT] <> mnWeight [ITWT]
          GC Wt UoM [WTUM] <> szWeightUoM [WTUM]
          GC Extended Volume [ITVL] <> mnVolume [ITVL]
          GC Vol  UoM [VLUM] <> szVolumeUoM [VLUM]
          GC Projeto Rubrica [VR01] <> szReference1 [VR01]
          GC Centro de Respons. [VR02] <> szReference2 [VR02]
          GC S M [CRMD] <> cSendMethod [CRMD]
          GC F C [UNCD] <> cFreezeCode [UNCD]
          GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
          VA grd_cInventoryInterface_IVI [IVI] <> cInventoryInterface [IVI]
          FC Foreign [CRRM] <> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
          VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
          "0" <> cSourceRequestingPOGeneration [POGS]
          "EP4310" <> szProgramID [PID]
          VA frm_USR0_UserID [USR0] <> szUserID [USER]
          GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
          GC Unique Key ID [UKID] -> mnUniqueKey [UKID]
          GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
          GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
          GC Agreements Found [AFND] <> mnContractsFound [AFND]
          GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
          GC Product Source [PSR] <> szProductSource [PSR]
          GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
          GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
          GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
          GC Sub  [SUB] <> szSubsidiary [SUB]
          GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
          VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
          VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
          GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
          VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
          VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
          VA grd_FreeGoodExists_EV01 [EV01] <- cAdvPriceCalledFlag [EV13]
          GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
          GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
          GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
          GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
          GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
          GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
          GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
          GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
          GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
          GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
          GC Sec Quantity Ordered [SQOR] <> mnSecondaryQty [SQOR]
          GC Sec UoM [UOM2] <> szSecondaryUOM [UOM2]
          GC Planned Effective [DLEJ] <> jdLotEffectivityDate [DLEJ]
          GC Promotion ID [PMTN] <> szPromotionID [PMTN]
          GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
          GC Project Number [PRJM] -> mnProjectNumber [PRJM]
          GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
          GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
          GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
          GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
          GC Job Typ [JBCD] -> szJobType [JBCD]
          GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
          GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
End If
// SAR 8331761 IF it is  a Non currency environment then begin doc and
// editline will return currency flag as 'F'  we need to change it to domestic
// before calling app P32942 since currency off means it is Domestic
// transaction
// SAR 6297255 END
If SL CurrencyProcessing is equal to "N"
     VA evt_cDomesticOrForeign_EV01 [EV01] = "D"
End If
Call App:P3210 Form:W3210B Version:ZJDE0001
     GC Short Item No [ITM] -> mnItemNumberShortKit [KIT]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC ACTN:Action Code (wf) [ACTN] -> cAddorChangeMode [EV01]
     GC Quantity Ordered [UORGE1] -> mnUnitsTransactionQty [UORG]
     GC Tr. UoM [UOM] -> szUnitOfMeasureAsInput [UOM]
     GC Extended Weight [ITWT] <- mnAmountUnitWeight [ITWT]
     GC Wt UoM [WTUM] -> szWeightUnitOfMeasure [WTUM]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     VA frm_cCancelledOut [EV01] <- cCacncelledOut [EV01]
     GC Ln Ty [LNTY] <> szLineType [LNTY]
     SL CurrencyProcessing -> cCurrencyConverYNAR [CRYR]
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Promised Delivery [PDDJ] -> jdPromisedDeliveryDate [PDDJ]
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] -> jdDatePriceEffectiveDate [PEFJ]
     VA frm_PMTH_MethodofPriceCalc [PMTH] -> cMethodOfPriceCalcula [PMTH]
     GC Extended Cost [AEXPE1] <- mnAmountExtendedCost [ECST]
     GC Actual Ship Date [ADDJ] -> jdDateReleaseJulian [RSDJ]
     GC Extended Cost [AEXPE1] -> mnAmountOrderGross [OTOT]
     GC Location [LOCNE1] <> szLocation [LOCN]
     GC Lot/Serial [LOTN] <> szLot [LOTN]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_JOBS_JobNumber [JOBS] <> mnJobnumberA [JOBS]
     VA evt_cDomesticOrForeign_EV01 [EV01] -> cForeignOrDomestic [EV01]
     PO szConfiguratorVersion [VERS] -> szVersionOfConfigurator [VERS]
     "1" -> cCMProcessEdits [EV01]
     FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRCD]
     FC Branch/Plant1 [MCU] -> szRevenueBusinessUnit [EMCU]
     "43" -> szProductCode [SY]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     FC Order Company [KCOO] -> szCompany [CO]
     FC Branch/Plant1 [MCU] -> szHeaderCostCenter [EMCU]
     GC Ship To Number [SHAN] -> mnAddressNumberShipTo [SHAN]
     FC ExchangeRate_CRR [CRR] -> mnCurrencyConverRate [CRR]
     GC Vol  UoM [VLUM] <> szVolumeUnitOfMeasure [VLUM]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     <Blank> -> cMethodOfCostCalcula [CMETH]
     <Blank> -> cTransactionType [EV01]
     GC Request Date [DRQJ] -> jdDateRequestedJulian [DRQJ]
If VA frm_cCancelledOut [EV01] is not equal to "1"
     // SAR 6974261 Begin
     // SAR 7307371 remove retrieving unitcost back from B3202020
     // SAR 8331761 consider it as Foreign order only when it is a Currency
     // environment
     GetConfigPricingFields(B3202020.GetConfigPricingFields)
          "1" -> cSuppressErrorMessage [SUPPS]
          "43" -> szSystemCode [SY]
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          VA evt_mnConfigExtendedPrice_AEXP [AEXP] <- mnAmountExtendedCost [ECST]
          VA frm_AmountForeignExtCost [FEC] <- mnAmountForeignExtCost [FEC]
          VA evt_AmountForeignUnitCost_FUC [FUC] <- mnForeignUnitCost [FUC]
          VA frm_JOBS_JobNumber [JOBS] -> mnJobNumber [JOBS]
          GC ACTN:Action Code (wf) [ACTN] -> cCMLineActionCode [ACTN]
          VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
     If FC Foreign [CRRM] is equal to "F"
     And SL CurrencyProcessing is not equal to "N"
          VA evt_mnConfigExtendedPrice_AEXP [AEXP] = VA frm_AmountForeignExtCost [FEC]
          ! GC Unit Cost [UPAX] = VA evt_AmountForeignUnitCost_FUC [FUC]
          // SAR 7307371 remove unitcost assignment
     End If
     // SAR 6974261 End
     // =============================================================
     // SAR# 7397266 - Use Config price only when the cost is not overridden. Zero
     // out the unitcost if using config price so the unitcost will be recalculated
     // =============================================================
     If VA grd_PS09StatusFlag_PROV [PROV] is not equal to "1"
          GC Extended Cost [AEXPE1] = VA evt_mnConfigExtendedPrice_AEXP [AEXP]
          GC Unit Cost [UPAX] = "0"
     End If
     ! F4311EditLine(XT4311Z1.F4311EditLine)
     !      VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
     !      VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
     !      GC Line Number [LNID] <> mnOrderLineNumber [LNID]
     !      GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
     !      "1" <> cProcessEdits [EV01]
     !      VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
     !      GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
     !      SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
     !      SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
     !      FC Order Company [KCOO] <> szOrderCompany [KCOO]
     !      FC Order Number [DOCO] <> mnOrderNumber [DOCO]
     !      FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
     !      GC Change Order [SFXO] <> szOrderSuffix [SFXO]
     !      GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
     !      GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
     !      GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
     !      GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
     !      GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
     !      BC Company - Key (Related Order) (F4311.0) [RKCO] -> szRelatedOrderCompany [RKCO]
     !      VA grd_szRelatedOrderNumber_RORN [RORN] -> szRelatedOrderNumber [RORN]
     !      VA grd_szRelatedOrderType_RCTO [RCTO] -> szRelatedOrderType [RCTO]
     !      VA grd_mnRelatedLineNo_RLLN [RLLN] -> mnRelatedOrderLine [RLLN]
     !      FC Address Number [AN8] <> mnSupplierNumber [AN8]
     !      GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
     !      GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
     !      VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] <> jdTransactionDate [TRDJ]
     !      GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
     !      GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
     !      GC G/L Date [DGL] <> jdGLDate [DGL]
     !      GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
     !      GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
     !      GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
     !      VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
     !      GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
     !      GC Ln Ty [LNTY] <> szLineType [LNTY]
     !      GC Description 1 [DSC1] <> szDescription1 [DSC1]
     !      GC Description 2 [DSC2] <> szDescription2 [DSC2]
     !      GC Asset ID [ASII] <> szAssetID [ASID]
     !      GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
     !      GC Location [LOCNE1] <> szLocation [LOCN]
     !      GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
     !      VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
     !      GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
     !      GC Last Status [LTTR] <> szLastStatus [LTTR]
     !      GC Next Status [NXTR] <> szNextStatus [NXTR]
     !      GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
     !      GC Subledger [SBL] <> szSubledger [SBL]
     !      GC Sub Type [SBLT] <> cSubledgerType [SBLT]
     !      GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
     !      GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
     !      GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
     !      GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
     !      GC Print Message [INMG] <> szPrintMessage [INMG]
     !      GC Tax Y/N [TX] <> cTaxable [TX]
     !      GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
     !      GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
     !      GC G/L Offset [GLC] <> szGLClassCode [GLPT]
     !      GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
     !      GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
     !      GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
     !      GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
     !      GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
     !      GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
     !      GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
     !      GC Extended Weight [ITWT] <> mnWeight [ITWT]
     !      GC Wt UoM [WTUM] <> szWeightUoM [WTUM]
     !      GC Extended Volume [ITVL] <> mnVolume [ITVL]
     !      GC Vol  UoM [VLUM] <> szVolumeUoM [VLUM]
     !      GC Reference  [VR01] <> szReference1 [VR01]
     !      GC Centro de Respons. [VR02] <> szReference2 [VR02]
     !      GC S M [CRMD] <> cSendMethod [CRMD]
     !      GC F C [UNCD] <> cFreezeCode [UNCD]
     !      GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
     !      VA grd_cInventoryInterface_IVI [IVI] <> cInventoryInterface [IVI]
     !      FC Foreign [CRRM] <> cCurrencyMode [CRRM]
     !      FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
     !      FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
     !      FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
     !      GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
     !      VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
     !      "0" <> cSourceRequestingPOGeneration [POGS]
     !      "EP4310" <> szProgramID [PID]
     !      VA frm_USR0_UserID [USR0] <> szUserID [USER]
     !      GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
     !      GC Unique Key ID [UKID] -> mnUniqueKey [UKID]
     !      GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
     !      GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
     !      GC Agreements Found [AFND] <> mnContractsFound [AFND]
     !      GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
     !      GC Product Source [PSR] <> szProductSource [PSR]
     !      GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
     !      GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
     !      GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
     !      GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
     !      GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
     !      GC Sub  [SUB] <> szSubsidiary [SUB]
     !      GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
     !      VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
     !      VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
     !      GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
     !      VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
     !      VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
     !      VA grd_FreeGoodExists_EV01 [EV01] <- cAdvPriceCalledFlag [EV13]
     !      GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
     !      GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
     !      GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
     !      GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
     !      GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
     !      GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
     !      GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
     !      GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
     !      GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
     !      VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
     !      VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
     !      GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
     !      GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
     !      GC Sec Quantity Ordered [SQOR] <> mnSecondaryQty [SQOR]
     !      GC Sec UoM [UOM2] <> szSecondaryUOM [UOM2]
     !      GC Planned Effective [DLEJ] <> jdLotEffectivityDate [DLEJ]
     !      GC Promotion ID [PMTN] <> szPromotionID [PMTN]
     !      GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
     !      GC Project Number [PRJM] -> mnProjectNumber [PRJM]
     !      GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
     !      GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
     !      GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
     !      GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
     !      GC Job Typ [JBCD] -> szJobType [JBCD]
     !      GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
     !      GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
     F4311EditLine(XT4311Z1.F4311EditLine)
          VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
          VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
          GC Line Number [LNID] <> mnOrderLineNumber [LNID]
          GC ACTN:Action Code (wf) [ACTN] -> cDetailActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          VA frm_EV01_UsesWorkFields [EV01] <> cUpdateOrWriteWorkFile [EV01]
          GC EV01:Record in Detail W.File (wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          SL CurrencyProcessing -> cCurrencyProcessingFlag [CRYR]
          SL VersionName -> szPurchaseOrderPrOptVersion [VL01]
          FC Order Company [KCOO] <> szOrderCompany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
          GC Change Order [SFXO] <> szOrderSuffix [SFXO]
          GC Branch/ Plant [MCU] <> szBranchPlant [MCU]
          GC Orig Co [OKCO] <> szOriginalOrderCompany [OKCO]
          GC Original Order No [OORN] <> szOriginalOrderNumber [OORN]
          GC Orig Type [OCTO] <> szOriginalOrderType [OCTO]
          GC Original Line No [OGNO] <> mnOriginalLineNumber [OGNO]
          BC Company - Key (Related Order) (F4311.0) [RKCO] -> szRelatedOrderCompany [RKCO]
          VA grd_szRelatedOrderNumber_RORN [RORN] -> szRelatedOrderNumber [RORN]
          VA grd_szRelatedOrderType_RCTO [RCTO] -> szRelatedOrderType [RCTO]
          VA grd_mnRelatedLineNo_RLLN [RLLN] -> mnRelatedOrderLine [RLLN]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          GC Ship To Number [SHAN] <> mnShipToNumber [SHAN]
          GC Request Date [DRQJ] <> jdRequestedDate [DRQJ]
          VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] <> jdTransactionDate [TRDJ]
          GC Promised Delivery [PDDJ] <> jdPromisedDate [PDDJ]
          GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          GC G/L Date [DGL] <> jdGLDate [DGL]
          GC Item Number [UITM] -> szUnformattedItemNumber [UITM]
          GC Quantity Ordered [UORGE1] <> mnQuantityOrdered [UORG]
          GC Unit Cost [UPAX] <> mnUnitPrice [PRRC]
          VA grd_PS09StatusFlag_PROV [PROV] <> cPriceOverrideFlag [PROV]
          GC Extended Cost [AEXPE1] <> mnExtendedPrice [AEXP]
          GC Ln Ty [LNTY] <> szLineType [LNTY]
          GC Description 1 [DSC1] <> szDescription1 [DSC1]
          GC Description 2 [DSC2] <> szDescription2 [DSC2]
          GC Asset ID [ASII] <> szAssetID [ASID]
          GC Branch/ Plant [MCU] <> szDetailLineBranchPlant [MCU]
          GC Location [LOCNE1] <> szLocation [LOCN]
          GC Lot/Serial [LOTN] <> szLotNumber [LOTN]
          VA grd_TempTransactionUOM_TRUM [TRUM] <> szTransactionUoM [UOM]
          GC Pu. UoM [UOM3] <> szPurchasingUoM [UOM3]
          GC Last Status [LTTR] <> szLastStatus [LTTR]
          GC Next Status [NXTR] <> szNextStatus [NXTR]
          GC Account Number [ANI] <> szUnformattedAccountNumber [ANI]
          GC Subledger [SBL] <> szSubledger [SBL]
          GC Sub Type [SBLT] <> cSubledgerType [SBLT]
          GC Discount Factor [DSPR] <> mnDiscountFactor [DSPR]
          GC CATN:Catalog Number(wf) [CATN] <> szCatalogNumber [CATN]
          GC Item Price Group [PRGR] <> szInventoryPriceRule [PRGR]
          GC Price Cat Level [CLVL] <> szPriceLevel [CLVL]
          GC Print Message [INMG] <> szPrintMessage [INMG]
          GC Tax Y/N [TX] <> cTaxable [TX]
          GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          GC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          GC G/L Offset [GLC] <> szGLClassCode [GLPT]
          GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          GC Report Code 1 [PDP1] <> szPurchasingCategoryCode1 [PDP1]
          GC Objeto de Custo 2 [PDP2] <> szPurchasingCategoryCode2 [PDP2]
          GC Objeto de Custo 3 [PDP3] <> szPurchasingCategoryCode3 [PDP3]
          GC Objeto de Custo 4 [PDP4] <> szPurchasingCategoryCode4 [PDP4]
          GC Cost Rule [PDP5] <> szLandedCostRule [PRP5]
          GC Extended Weight [ITWT] <> mnWeight [ITWT]
          GC Wt UoM [WTUM] <> szWeightUoM [WTUM]
          GC Extended Volume [ITVL] <> mnVolume [ITVL]
          GC Vol  UoM [VLUM] <> szVolumeUoM [VLUM]
          GC Projeto Rubrica [VR01] <> szReference1 [VR01]
          GC Centro de Respons. [VR02] <> szReference2 [VR02]
          GC S M [CRMD] <> cSendMethod [CRMD]
          GC F C [UNCD] <> cFreezeCode [UNCD]
          GC E R [AVCH] <> cEvaluatedReceipts [AVCH]
          VA grd_cInventoryInterface_IVI [IVI] <> cInventoryInterface [IVI]
          FC Foreign [CRRM] <> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC ExchangeRate_CRR [CRR] <> mnCurrencyExchangeRate [CRR]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          GC Get Blanket [EV09] <> cRelievePOBlanketOrder [EV01]
          VA frm_EV01_AddNewToExistingOrder [EV01] <> cAddNewLineToExistingOrder [EV01]
          "0" <> cSourceRequestingPOGeneration [POGS]
          "EP4310" <> szProgramID [PID]
          VA frm_USR0_UserID [USR0] <> szUserID [USER]
          GC EV07..BlanketOrdersFound(wf) [EV07] <- cMultipleBlanketProcessing [EV02]
          GC Unique Key ID [UKID] -> mnUniqueKey [UKID]
          GC Objeto de Custo 1 [DMCT] <> szAgreementNumber [DMCT]
          GC Agreement Supplement [DMCS] <> mnAgreementSupplement [DMCS]
          GC Agreements Found [AFND] <> mnContractsFound [AFND]
          GC Disply Seq [SEQ] <> mnSequenceNumber1 [SEQ]
          GC Product Source [PSR] <> szProductSource [PSR]
          GC Sr Ty [PSRY] <> szProductSourceType [PSRY]
          GC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          GC Actual Ship Date [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          GC Business Unit [OMCU] <> szPurchasingCostCenter [OMCU]
          GC Obj Acct [OBJ] <> szObjectAccount [OBJ]
          GC Sub  [SUB] <> szSubsidiary [SUB]
          GC Original SFXO (wf) [SFX] <> szOriginalOrderSuffix [SFX0]
          VA grd_StockingType_STKT [STKT] <> cStockingType [STKT]
          VA frm_PMTH_MethodofPriceCalc [PMTH] <> cKitsMethodofPriceCalculation [PMTH]
          GC Related Item No [RLIT] -> szItemNumberRelatedKit [RLIT]
          VA grd_ASN_AdjSchedule [ASN] <> szAdjustmentSchedule [ASN]
          VA grd_AREV_AdjRevisionLevel [AREV] <> mnAdjustmentRevisionLevel [AREV]
          VA grd_FreeGoodExists_EV01 [EV01] <- cAdvPriceCalledFlag [EV13]
          GC Cost Object Type 1 [ABT1] <> cManagerialAnalysisType1 [ABT1]
          GC Cost Object 1 [ABR1] <> szManagerialAnalysisCode1 [ABR1]
          GC Cost Object Type 2 [ABT2] <> cManagerialAnalysisType2 [ABT2]
          GC Cost Object 2 [ABR2] <> szManagerialAnalysisCode2 [ABR2]
          GC Cost Object Type 3 [ABT3] <> cManagerialAnalysisType3 [ABT3]
          GC Cost Object 3 [ABR3] <> szManagerialAnalysisCode3 [ABR3]
          GC Cost Object Type 4 [ABT4] <> cManagerialAnalysisType4 [ABT4]
          GC Cost Object 4 [ABR4] <> szManagerialAnalysisCode4 [ABR4]
          GC Shipment Number [SHPN] <> mnShipmentNumber [SHPN]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          GC It Mg [IFLA] <- szItemFlashMessage [IFLA]
          GC Short Item No [ITM] <> mnIdentifierShortItem [ITM]
          GC Sec Quantity Ordered [SQOR] <> mnSecondaryQty [SQOR]
          GC Sec UoM [UOM2] <> szSecondaryUOM [UOM2]
          GC Planned Effective [DLEJ] <> jdLotEffectivityDate [DLEJ]
          GC Promotion ID [PMTN] <> szPromotionID [PMTN]
          GC Matrix Line Number [MCLN] -> mnMatrixControlLine [MCLN]
          GC Project Number [PRJM] -> mnProjectNumber [PRJM]
          GC Category Code 01 [PODC01] -> szPurchaseLineCode01 [PODC01]
          GC Category Code 02 [PODC02] -> szPurchaseLineCode02 [PODC02]
          GC Category Code 03 [PODC03] -> szPurchaseLineCode03 [PODC03]
          GC Category Code 04 [PODC04] -> szPurchaseLineCode04 [PODC04]
          GC Job Typ [JBCD] -> szJobType [JBCD]
          GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
          GC Service UoM [SRUOM] <> szUnitOfMeasureService [SRUOM]
     VA frm_P32942ConfigItemCall [EV01] = "1"
Else
     F4311ClearWorkFiles(XT4311Z1.F4311ClearWorkFiles)
          VA frm_CTID_ComputerID [CTID] <> szComputerID [CTID]
          VA frm_JOBS_JobNumber [JOBS] <> mnJobNumber [JOBS]
          "0" <> cClearHeaderFile [EV01]
          "1" <> cClearDetailFile [EV02]
          UNDEFINED <> cErrorInClear [ERR]
          GC Line Number [LNID] <> mnLineNumber [LNID]
          VA frm_EV01_UsesWorkFields [EV01] <> cUseWorkFiles [EV01]
          GC Change Order [SFXO] -> szOrderSuffix [SFX0]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC LoadAccountCache
Event: Button Clicked
Event GUID: acca80a4-c29c-45f8-a2f7-b13af2ad0bc7
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_idAccCacheCursor_GENLNG [GENLNG]
evt_szErrorMessageID_DTAI [DTAI]
evt_mnSelectedRowNumber_LNID [LNID]
----------------------------------------
// 
// =====================================================================
// This button is used to unload the cache records which were added in P430901
// - Search and Select Cost Code Application. In P430901 first record selected
// was not added to cache. Only additional records selected were added. First
// row values are directly passed thro Form Interconnect FI values
// ---------------------------------------------------------------------------
// Initialize all Event Variables
// ---------------------------------------------------------------------------
// 
VA evt_szErrorMessageID_DTAI [DTAI] = "0"
VA evt_idAccCacheCursor_GENLNG [GENLNG] = "0"
VA evt_mnSelectedRowNumber_LNID [LNID] = "0"
// ---------------------------------------------------------------------------
// 
Clear Grid Buffer(FC Grid)
// 
// ---------------------------------------------------------------------------
// Get the Number of Selected Grid Row and Insert Additonal rows after this
// row
// ---------------------------------------------------------------------------
Get Selected Grid Row Number(FC Grid, VA evt_mnSelectedRowNumber_LNID)
VA evt_mnSelectedRowNumber_LNID [LNID] = [VA evt_mnSelectedRowNumber_LNID [LNID]]+1
// 
// ---------------------------------------------------------------------------
// Call B4302180 (D4302180J) AccountCache to get - GET_NEXT the cache records
// ---------------------------------------------------------------------------
CacheProcessAccountCache(B4302180.CacheProcessAccountCache)
     "6" -> szCacheActionCode_CACTN [CACTN]
     "1" -> idIndexNumber_INID [INID]
     "3" -> mnNumberKeys_NKEYS [NKEYS]
     "1" -> cSuppressErrorMessages_EV01 [EV01]
     VA evt_idAccCacheCursor_GENLNG [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
     VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
     GB Business Unit [OMCU] <- szPurchasingCostCenter_OMCU [OMCU]
     GB Sub  [SUB] <- szSubsidiary_SUB [SUB]
     GB Obj Acct [OBJ] <- szObjectAccount_OBJ [OBJ]
     VA evt_szErrorMessageID_DTAI [DTAI] <> szErrorMessageID_DTAI [DTAI]
// ---------------------------------------------------------------------------
If VA evt_idAccCacheCursor_GENLNG [GENLNG] is not equal to "0"
And VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
     // ---------------------------------------------------------------------------
     // Insert Grid Buffer
     Insert Grid Buffer Row(FC Grid, VA evt_mnSelectedRowNumber_LNID, <Yes>, <No>, <Yes>, <Yes>, <Yes>)
     VA evt_mnSelectedRowNumber_LNID [LNID] = [VA evt_mnSelectedRowNumber_LNID [LNID]]+1
     // ---------------------------------------------------------------------------
     // While Loop
     While VA evt_idAccCacheCursor_GENLNG [GENLNG] is not equal to "0"
     And VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
          // ---------------------------------------------------------------------------
          CacheProcessAccountCache(B4302180.CacheProcessAccountCache)
               "6" -> szCacheActionCode_CACTN [CACTN]
               "1" -> idIndexNumber_INID [INID]
               "3" -> mnNumberKeys_NKEYS [NKEYS]
               "1" -> cSuppressErrorMessages_EV01 [EV01]
               VA evt_idAccCacheCursor_GENLNG [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
               VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
               GB Business Unit [OMCU] <- szPurchasingCostCenter_OMCU [OMCU]
               GB Sub  [SUB] <- szSubsidiary_SUB [SUB]
               GB Obj Acct [OBJ] <- szObjectAccount_OBJ [OBJ]
               VA evt_szErrorMessageID_DTAI [DTAI] <> szErrorMessageID_DTAI [DTAI]
          // ---------------------------------------------------------------------------
          If VA evt_idAccCacheCursor_GENLNG [GENLNG] is not equal to "0"
          And VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
               // Insert Grid Buffer
               Insert Grid Buffer Row(FC Grid, VA evt_mnSelectedRowNumber_LNID, <Yes>, <No>, <Yes>, <Yes>, <Yes>)
               VA evt_mnSelectedRowNumber_LNID [LNID] = [VA evt_mnSelectedRowNumber_LNID [LNID]]+1
          Else
               // ---------------------------------------------------------------------------
               // If all records are read from the cache Delete all records from Cache
               // Action code = 5 (DELETE_ALL)
               // ---------------------------------------------------------------------------
               CacheProcessAccountCache(B4302180.CacheProcessAccountCache)
                    "5" -> szCacheActionCode_CACTN [CACTN]
                    "1" -> idIndexNumber_INID [INID]
                    "3" -> mnNumberKeys_NKEYS [NKEYS]
                    "1" -> cSuppressErrorMessages_EV01 [EV01]
                    VA evt_idAccCacheCursor_GENLNG [GENLNG] <> idCacheCursor_GENLNG [GENLNG]
                    VA frm_CTID_ComputerID [CTID] -> szComputerID_CTID [CTID]
                    VA frm_mnProcessID_PEID [PEID] -> mnProcessID_PEID [PEID]
                    VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID_TCID [TCID]
                    VA evt_szErrorMessageID_DTAI [DTAI] <> szErrorMessageID_DTAI [DTAI]
               // ---------------------------------------------------------------------------
          End If
     End While
End If
// =====================================================================
// 


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Order Attachment
Event: Text Clicked
Event GUID: 009015d6-7f4f-4592-bc34-0a9cbb5bbbf5
=============================================
//   
// ---------------------------------------------------------------------------
// If order company is still blank use branch plant to retrieve 
// ---------------------------------------------------------------------------
//  
If FC Branch/Plant1 [MCU] is equal to <Blank>
     Set Control Error(FC Branch/Plant1, "0003")
Else
     //  
     // ---------------------------------------------------------------------------
     // If order number is still 0 assign next number 
     // ---------------------------------------------------------------------------
     //  
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC F4301:Order Type [DCTO] <> szOrderType [DCTO]
               FC Branch/Plant1 [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               VA frm_ManualOrderEntry [EV01] <> cManualOrderEntry [EV01]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC F4301:Order Type [DCTO])
     End If
     //  
     Media Object Structures(GT4301,  <Default Media Object>,  <Edit>,  <First Text Item>, FC EV02-Header Generic Text (wf), FC Order Number, FC F4301:Order Type, FC Order Company, VA frm_SFX0_ZeroSuffix)
     If FC EV02-Header Generic Text (wf) [EV02] is equal to "1"
          Show Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = "Y"
          Disable Control(FC Branch/Plant1 [MCU])
     Else
          Hide Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = <Blank>
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Disable Additonal Properties
Event: Button Clicked
Event GUID: d0aeebb2-a204-4fef-a735-91ff01efcd27
=============================================
// SAR 8164296
Disable Control(FC Property 01 [POHP01])
Disable Control(FC Property 02 [POHP02])
Disable Control(FC Property 03 [POHP03])
Disable Control(FC Property 04 [POHP04])
Disable Control(FC Property 05 [POHP05])
Disable Control(FC Property 06 [POHP06])
Disable Control(FC Property 07 [POHP07])
Disable Control(FC Property 08 [POHP08])
Disable Control(FC Property 09 [POHP09])
Disable Control(FC Property 10 [POHP10])
Disable Control(FC Property 11 [POHP11])
Disable Control(FC Property 12 [POHP12])
Disable Control(FC Property 13 [POHP13])
// 
Disable Control(FC Date 01 [POHD01])
Disable Control(FC Date 02 [POHD02])
// 
Disable Control(FC Long Address AB01 [ALKY])
Disable Control(FC Long Address AB02 [ALKY])
// 
Disable Control(FC Date and Time 01 [POHU01])
Disable Control(FC Date and Time 02 [POHU02])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Disable Category Code
Event: Button Clicked
Event GUID: 27a6b48c-3dc6-4897-8eaf-19997ea8f1d6
=============================================
// SAR 8164296
Disable Control(FC Category Code 01 [POHC01])
Disable Control(FC Category Code 02 [POHC02])
Disable Control(FC Category Code 03 [POHC03])
Disable Control(FC Category Code 04 [POHC04])
Disable Control(FC Category Code 05 [POHC05])
Disable Control(FC Category Code 06 [POHC06])
Disable Control(FC Category Code 07 [POHC07])
Disable Control(FC Category Code 08 [POHC08])
Disable Control(FC Category Code 09 [POHC09])
Disable Control(FC Category Code 10 [POHC10])
Disable Control(FC Category Code 11 [POHC11])
Disable Control(FC Category Code 12 [POHC12])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Enable Additonal Properties
Event: Button Clicked
Event GUID: 2e5bbf2d-b9d0-4e86-a3a3-188ee6c0040b
=============================================
// SAR 8164296
Enable Control(FC Property 01 [POHP01])
Enable Control(FC Property 02 [POHP02])
Enable Control(FC Property 03 [POHP03])
Enable Control(FC Property 04 [POHP04])
Enable Control(FC Property 05 [POHP05])
Enable Control(FC Property 06 [POHP06])
Enable Control(FC Property 07 [POHP07])
Enable Control(FC Property 08 [POHP08])
Enable Control(FC Property 09 [POHP09])
Enable Control(FC Property 10 [POHP10])
Enable Control(FC Property 11 [POHP11])
Enable Control(FC Property 12 [POHP12])
Enable Control(FC Property 13 [POHP13])
// 
Enable Control(FC Date 01 [POHD01])
Enable Control(FC Date 02 [POHD02])
// 
Enable Control(FC Long Address AB01 [ALKY])
Enable Control(FC Long Address AB02 [ALKY])
// 
Enable Control(FC Date and Time 01 [POHU01])
Enable Control(FC Date and Time 02 [POHU02])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Enable Category Code
Event: Button Clicked
Event GUID: 350c4431-4017-423e-a5dd-9ca270bccfed
=============================================
// SAR 8164296
Enable Control(FC Category Code 01 [POHC01])
Enable Control(FC Category Code 02 [POHC02])
Enable Control(FC Category Code 03 [POHC03])
Enable Control(FC Category Code 04 [POHC04])
Enable Control(FC Category Code 05 [POHC05])
Enable Control(FC Category Code 06 [POHC06])
Enable Control(FC Category Code 07 [POHC07])
Enable Control(FC Category Code 08 [POHC08])
Enable Control(FC Category Code 09 [POHC09])
Enable Control(FC Category Code 10 [POHC10])
Enable Control(FC Category Code 11 [POHC11])
Enable Control(FC Category Code 12 [POHC12])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Disable Style Fields
Event: Button Clicked
Event GUID: 995fd9ec-eab0-4b3d-bef2-848625b4d3de
=============================================
// SAR 8956903 - Apparel Management
Disable Control(FC Collection [C9COLL])
Disable Control(FC SeasonCode [C9SEAC])
Disable Control(FC Season Year [C9SEAY])
Disable Control(FC Collection Price Effective Date [C9PRDJ])


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Invoke Style Item Matrix Entry
Event: Button Clicked
Event GUID: a7e1949f-bd7c-4ea5-9e6d-20c39303901d
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnJobNumber_JOBS [JOBS]
evt_szBranchPlant_MCU [MCU]
evt_mnAddressNumForPCW10_AN8 [AN8]
evt_mnShortItemNo_ITM [ITM]
evt_cRootItem_EV01 [EV01]
evt_cLastLevelMatrixYN_C9MXLN [C9MXLN]
evt_mnStructLastLevelNo_C9LVNO [C9LVNO]
evt_szItemStructure_C9STR [C9STRC]
evt_szItemLevelName_C9LVNM [C9LVNM]
----------------------------------------
// SAR 8956903 - Apparel Management
// Mode 1 - Style Item entered in grid
// Mode 2 - Template entered in grid
// Mode 3 - Template form exit
//
If PO cAddressNumberforPCW10 [EV02] is greater than <Blank>
     VA evt_mnAddressNumForPCW10_AN8 [AN8] = FC Address Number [AN8]
Else
     VA evt_mnAddressNumForPCW10_AN8 [AN8] = FC Ship To [SHAN]
End If
If VA frm_cPCW10Mode [EV01] is equal to ("1","2")
     If GC Branch/ Plant [MCU] is greater than <Blank>
          VA evt_szBranchPlant_MCU [MCU] = GC Branch/ Plant [MCU]
     Else
          VA evt_szBranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
     End If
     //
     // Use grid dates if not blank, otherwise, populate from line defaults.
     If GC Request Date [DRQJ] is not equal to Null Date
          VA frm_jdStyleRequestedDate_DRQJ [DRQJ] = GC Request Date [DRQJ]
     Else
          VA frm_jdStyleRequestedDate_DRQJ [DRQJ] = FC Requested [DRQJ]
     End If
     //
     If GC Promised Delivery [PDDJ] is not equal to Null Date
          VA frm_jdPromDeliveryDate_PDDJ [PDDJ] = GC Promised Delivery [PDDJ]
     Else
          VA frm_jdPromDeliveryDate_PDDJ [PDDJ] = FC Scheduled Pick [PDDJ]
     End If
     //
     If GC G/L Date [DGL] is not equal to Null Date
          VA frm_jdStyleGLDate_DGL [DGL] = GC G/L Date [DGL]
     Else
          VA frm_jdStyleGLDate_DGL [DGL] = FC G/L Date [DGL]
     End If
     //
     If GC Cancel Date [CNDJ] is not equal to Null Date
          VA frm_jdStyleCancelDate_CNDJ [CNDJ] = GC Cancel Date [CNDJ]
     Else
          VA frm_jdStyleCancelDate_CNDJ [CNDJ] = FC Cancel Date [CNDJ]
     End If
Else
     VA evt_szBranchPlant_MCU [MCU] = FC Branch/Plant1 [MCU]
     VA frm_jdStyleRequestedDate_DRQJ [DRQJ] = FC Requested [DRQJ]
     VA frm_jdPromDeliveryDate_PDDJ [PDDJ] = FC Scheduled Pick [PDDJ]
     VA frm_jdStyleGLDate_DGL [DGL] = FC G/L Date [DGL]
     VA frm_jdStyleCancelDate_CNDJ [CNDJ] = FC Cancel Date [CNDJ]
End If
//
// Call PCW10 for template
If VA frm_cPCW10Mode [EV01] is equal to ("2","3")
     VA evt_mnJobNumber_JOBS [JOBS] = "1"
     FCW55.FetchSingle  [Index 1: Fcw55]
          VA frm_szStyleTemplate_C9MOSA [C9MOSA] = TK Collection Model [C9MOSA]
     If SV File_IO_Status is equal to CO SUCCESS
          MatrixWithLevel0(BCW30.MatrixWithLevel0)
               VA frm_szStyleTemplate_C9MOSA [C9MOSA] -> szC9LVL0-Level 0 [C9LVL0]
               VA evt_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
          Call App:PCW10 Form:WCW10B Version:PO szStyleMatrixEntryVersion
               VA evt_mnJobNumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
               SL UserID -> szUserId [USER]
               "6" -> MatrixType [EV01]
               FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
               FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               "0" -> QtyControle [UORG]
               VA evt_szBranchPlant_MCU [MCU] -> szCostCenter [MCU]
               VA frm_jdStyleRequestedDate_DRQJ [DRQJ] <> jdDateRequestedJulian [DRQJ]
               VA frm_jdPromDeliveryDate_PDDJ [PDDJ] <> jdDateReleaseJulian [RSDJ]
               VA frm_jdStyleCancelDate_CNDJ [CNDJ] <> jdCancelDate [CNDJ]
               FC Collection Price Effective Date [C9PRDJ] -> jdDatePriceEffectiveDate [PEFJ]
               VA frm_jdStyleGLDate_DGL [DGL] <> jdDtForGLAndVouch1 [DGL]
               "F4311" -> szC9FILE_File [C9FILE]
               VA evt_mnAddressNumForPCW10_AN8 [AN8] -> mnAddressNumber [AN8]
               "EP4310" -> szCallingAPPLProgramId [PID]
               FC Address Number [AN8] -> mnSoldTo [AN8]
               FC Ship To [SHAN] -> mnShipTo [AN8]
               FC Order Date [TRDJ] -> jdOrderDate [JDATE]
          FCW20.Delete  [Index 1: Primary]
               VA evt_mnJobNumber_JOBS [JOBS] = TK Job Number [JOBS]
          // Only delete the grid row when template was entered in the grid
          If VA frm_cPCW10Mode [EV01] is equal to "2"
               Delete Grid Row(FC Grid,  <Currently Selected Row>)
          End If
          VA frm_cLoadGridFromPCW10_EV01 [EV01] = "1"
          Press Button(FC PROCESS: Load Grid From Cache)
          // Blank out the template when finished processing
          VA frm_szStyleTemplate_C9MOSA [C9MOSA] = <NULL>
     End If
Else
     //
     // Call PCW10 for Style Item
     VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
          GC Item Number [UITM] -> szPrimaryItemNumber [UITM]
          VA evt_mnShortItemNo_ITM [ITM] <- mnShortItemNumber [ITM]
     If VA evt_mnShortItemNo_ITM [ITM] is greater than "0"
          CheckApparelMatrixItem(B41F0040.CheckApparelMatrixItem)
               VA evt_mnShortItemNo_ITM [ITM] -> mnItemNumberShort_Apparel [C9ITM]
               VA evt_szItemLevelName_C9LVNM [C9LVNM] <- szLevelName [C9LVNM]
               VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] <- cMatrixLineYN [C9MXLN]
               VA evt_szItemStructure_C9STR [C9STRC] <- szStructure [C9STRC]
               VA evt_cRootItem_EV01 [EV01] <- cRootItem [EV01]
               VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] <- mnLastLevelNo [C9LVNO]
          If VA evt_cRootItem_EV01 [EV01] is equal to "1"
               MatrixWithLevel0(BCW30.MatrixWithLevel0)
                    VA evt_szItemLevelName_C9LVNM [C9LVNM] -> szC9LVL0-Level 0 [C9LVL0]
                    VA evt_szItemStructure_C9STR [C9STRC] -> szC9STRC-Structure [C9STRC]
                    VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] -> mnC9LVNO-Level No [C9LVNO]
                    VA evt_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
                    VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] -> cC9MXLN-Matrix Line (Y/N) [C9MXLN]
               Call App:PCW10 Form:WCW10B Version:PO szStyleMatrixEntryVersion
                    VA evt_mnJobNumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
                    SL UserID -> szUserId [USER]
                    VA evt_szItemLevelName_C9LVNM [C9LVNM] -> szC9LVL0-Level 0 [C9LVL0]
                    "1" -> MatrixType [EV01]
                    VA evt_szItemStructure_C9STR [C9STRC] -> szC9STRC-Structure [C9STRC]
                    VA evt_mnStructLastLevelNo_C9LVNO [C9LVNO] -> mnC9LVNO-Level No [C9LVNO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                    VA evt_cLastLevelMatrixYN_C9MXLN [C9MXLN] -> cC9MXLN_MatrixLine_YN [C9MXLN]
                    GC Quantity Ordered [UORGE1] -> QtyControle [UORG]
                    VA evt_szBranchPlant_MCU [MCU] -> szCostCenter [MCU]
                    VA frm_jdStyleRequestedDate_DRQJ [DRQJ] <> jdDateRequestedJulian [DRQJ]
                    VA frm_jdPromDeliveryDate_PDDJ [PDDJ] <> jdDateReleaseJulian [RSDJ]
                    VA frm_jdStyleCancelDate_CNDJ [CNDJ] <> jdCancelDate [CNDJ]
                    FC Collection Price Effective Date [C9PRDJ] -> jdDatePriceEffectiveDate [PEFJ]
                    VA frm_jdStyleGLDate_DGL [DGL] <> jdDtForGLAndVouch1 [DGL]
                    "F4311" -> szC9FILE_File [C9FILE]
                    VA evt_mnAddressNumForPCW10_AN8 [AN8] -> mnAddressNumber [AN8]
                    "EP4310" -> szCallingAPPLProgramId [PID]
                    FC Address Number [AN8] -> mnSoldTo [AN8]
                    FC Ship To [SHAN] -> mnShipTo [AN8]
                    FC Order Date [TRDJ] -> jdOrderDate [JDATE]
                    GC Tr. UoM [UOM] -> szTransactionUOM [UOM]
               FCW20.Delete  [Index 1: Primary]
                    VA evt_mnJobNumber_JOBS [JOBS] = TK Job Number [JOBS]
               Delete Grid Row(FC Grid,  <Currently Selected Row>)
               VA frm_cLoadGridFromPCW10_EV01 [EV01] = "1"
               Press Button(FC PROCESS: Load Grid From Cache)
          End If
     End If
End If
VA frm_cPCW10Mode [EV01] = "0"


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Validate Items Against Collection
Event: Button Clicked
Event GUID: 77b43003-f78c-45b6-9715-bfccdaada505
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_nNumOfGridRows_INT01 [INT01]
evt_nGridRowCounter_INT01 [INT01]
----------------------------------------
// SAR 8956903 - Apparel Management
Get Max Grid Rows(FC Grid, VA evt_nNumOfGridRows_INT01)
VA evt_nGridRowCounter_INT01 [INT01] = "1"
While VA evt_nGridRowCounter_INT01 [INT01] is less than or equal to VA evt_nNumOfGridRows_INT01 [INT01]
     Get Grid Row(FC Grid, VA evt_nGridRowCounter_INT01)
     If GC Next Status [NXTR] is not equal to "999"
     And GC Short Item No [ITM] is greater than "0"
          FCW07.FetchSingle  [Index 1: Collection Detail]
               FC Collection [C9COLL] = TK Collection [C9COLL]
               FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
               FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
               GC Short Item No [ITM] = TK Short Item Number [C9ITM]
          If SV File_IO_Status is not equal to CO SUCCESS
               If PO cValidateItemsWithCollection [EV01] is equal to "1"
                    Set Grid Cell Error(FC Grid, VA evt_nGridRowCounter_INT01, GC ItemNumber, "E41F03")
               Else
                    Set Grid Cell Error(FC Grid, VA evt_nGridRowCounter_INT01, GC ItemNumber, "E41F04")
               End If
          End If
     End If
     VA evt_nGridRowCounter_INT01 [INT01] = [VA evt_nGridRowCounter_INT01 [INT01]]+1
End While


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Enviar E-Mail
Event: Selection Changed
Event GUID: 2918b7e4-617c-4d51-a6d4-f787804dd0f1
=============================================
If FC Enviar E-Mail [EV01] is equal to "S"
     Enable Control(FC email [EMAL])
Else
     Disable Control(FC email [EMAL])
End If


=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Object: FC Verifica Linhas
Event: Button Clicked
Event GUID: 72b0aa7d-4805-4092-a249-526b3365e125
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szAN8_ADDS [ADDS]
evt_szSHAN_ADDS [ADDS]
----------------------------------------
If GC Ln Ty [LNTY] is not equal to "J"
     F0116.FetchSingle  [Index 1: Address #, Date Eff]
          FC Address Number [AN8] = TK Address Number [AN8]
          VA evt_szAN8_ADDS [ADDS] <- TK State [ADDS]
     F0116.FetchSingle  [Index 1: Address #, Date Eff]
          FC Ship To [SHAN] = TK Address Number [AN8]
          VA evt_szSHAN_ADDS [ADDS] <- TK State [ADDS]
     If VA evt_szAN8_ADDS [ADDS] is not equal to VA evt_szSHAN_ADDS [ADDS]
          VA frm_cAvisoDIFAL_EV01 [EV01] = "S"
     End If
End If

=============================================
Form: Order Detail - W4310A
Object: FC Verifica Linhas
Event: Post Button Clicked
Event GUID: 3a4c7077-1253-4c1c-ba6d-8a75c00c7b6a
=============================================
If VA frm_cAvisoDIFAL_EV01 [EV01] is equal to "S"
     Call App:P5543101 Form:W5543101H Version:Undefined
End If
VA frm_cAvisoDIFAL_EV01 [EV01] = "N"



=============================================
EVENTS
=============================================
Form: Order Detail - W4310A
Event: Dialog is Initialized
Event GUID: f57df3f1-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cDualUOMExists [MEOW]
evt_szErrorMessageID_DTAI [DTAI]
evt_cAdvancedLotProcOn_MEOW [MEOW]
----------------------------------------
// -----------------------------------------------------------------------------
// ISSUE 5463 - Marília - Incluído um campo novo na PO p/consist e gravação
//                             Opção VIAGENS, nas Customizações RBS
//             -  Incluído o campo DS40 (F5543ICO) no GRID
// ISSUE 6868 (25/02/04) - Marília - Ajuste no evento POST do botão OK
// ISSUE 7065 - Marília - Consistência Histórico da conta
//                                 Incluídos CHIS/EXR no GRID e EXR no F5543ICO
// ISSUE 7385 - Marília - Incluir Descrição 4 no GRID (F5543ICO-DSCPED)
// ISSUE 7831- Marília  - ajuste consistência ALKY -se bloqueado para pgto. (1,Y
// ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
//                                          na F5543ICO e GRID
// ISSUE 8667- Marília  - ajuste consistência ALKY - qdo.não existe F0401
// ISSUE 10591 - Marília - Incluir teste "Requisitante" para gravar (F5543ICO)
// ISSUE 10700 - Marília - Permitir cancelamento OC c/data futura
// ISSUE 288865 - Marília - Ajustes ISSUES 274337 + 274344
// ISSUE 251190 - Marília - Recarga Cartuchos 1001 (O6)
// ISSUE 309691 - Marília - Ajustes solicitados
// Dionatan Irigaray - Chamado 388355 - Inclusão campo valor 1º cotação
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// ISSUE 469511 - Dionatan Irigaray -Consitência na VI0006 rubrica 302.06
// ISSUE 292366 - Marília - Substituição Tributária - ICMS Subst. O6-FABESUL
// -----------------------------------------------------------------------------
VA frm_FlagSoConsulta_EV01 [EV01] = "S"
// -----------------------------------------------------------------------------
//
// ISSUE 6711 - Fernando Herrera  - Incluído um campo novo no Grid
//                          Destinatário 1 e 2 e nomes
//
// ISSUE 7405 - Fernando Herrera  - Incluído um campo novo no Grid - Numero do
// Investimento - alteração da PO - T43101
//
// ISSUE 7511 - Herrera - Incluir Número Investimento  no GRID (F5543ICO)
// ===========================================================
// 03/25/2004  IC8823626   Zero Cost grayed out
// 04/14/2004  IC8823731  7099904   Plan eff date = chg to prom date
// 05/20/2004  IC8823731  7141594   Planned eff dates err on revision
// 05/24/2004  IC8823731  7147216   UOM field flashlight not work
// 05/26/2004  IC8823731  6858420   Order Revision Error
// 06/07/2004  IC8823731  6809767  P4310 and recap and foreign
// 06/18/2004  IC8812290  7071418  Cancel order with protection
// 07/07/2004  IC8823731  7189184  Edit PO line after partial pay
// 07/09/2004  IC8863409  7218951  P00095 record disappears
// 08/20/2004  IC8823626  7289329  Remove Suppress Grid Lines
// 09/02/2004  IC8823626  7224584  P4310 Win vs Web
// 11/25/2004  IC8812290  7384879  Date invalid error on P4310
// 12/13/2004  IC8872911  7448043 - Next Status is corrupted on De
// 02/01/2005  IC8872866  7507947 - Change Supp Adj Sch Not Update
// 02/03/2005  IC8872866  7515824 - E1 ERP 8.0 P4310 Changing Line
// 12/07/2005  IC8996050  7878810 - Record Reservation Problems
// 02/22/2007  ML8776305  8180798 - MCLN blank no matrx qty display
// 02/22/2007  ML8776305  8180763 - Asset Id blanks out
// 02/23/2007  GB946955    8110781 - Change AVCH in Add Mode
// 04/17/2007 RV9051912  8429821  India Localization changes
// 04/25/2007  IC9017731  8260982  P32983 display scrambled
// 04/25/2007  IC9017731  8124024  P4310 Copy PO should create ne
// 04/26/2007  AB9050717   8250469  Cancel blank out OCTO Orig Typ
// 05/03/2007  ML8776305 - OKCO, OORN and OCTO are cleared
// 05/04/07  ML8776305  8352393 - AVCH Changes on Inquiry
// 05/22/2007  JS5499306  8472766 - Copy Dom Dist Amts when currency off
// 06/15/2007  GB946955    7969404 - E1 *.10 Cancel Order Issue B43
// 06/15/2007  GB946955    8247189 - P4310 Displays ZJDE001 Version
// 06/26/2007  IC8867872   8331761 - No COnfig PO Cost in detail
// 06/28/2007  IC8867872   8482075 -P4310/W4310J same version as P4310
// 06/28/2007  IC8867872   8482147 - Planned Effective date changes
// 06/28/2007  IC8867872   8352705 - cannot override volume in PO
// 06/28/2007  IC8867872   8362284 - P4310 No Missing UOM Conversion Error
// 06/29/2007   IC8872938 8352676  - E1 8.11 SP1 P4310 Error on kit
// 07/30/2007    IC8872938  8482198 Unable to change Promised Date
// 08/29/2007    IC8892200  8424027 Asynchronous BSFN Error
// 03/10/2007    IC8892200  8500165  P4310 : Blanket Release Proces
// 10/23/2007  AB9050717  8617873  -  Payment terms code invalid upd
// 12/18/2007   EV7162993 8692806 - OTM 9.0 Forward Fit
// 05/29/2008   IC9017765  8785906 - Record Reservation
// 08/25/2008  AB9050717   8858511 Eff Date (DLEJ) Not Updated
// 12/04/2008  MM9056140  8914771- Base Orde Protect Cannot Add>1
// 04/15/2009   IC9017765  8906579 - Can Not Change ASN Field
// 04/15/2009   IC9017765  8924507 - PDDJ should auto-populating fr
// 04/26/2009  SP9055657 - 8924964- LOCM - UK PEAK P4310 P&P S1
// 09/30/2009  IC9025511 - 8926501 - Open Amt Incorrect
// 10/29/2009  IC9025511 - 8945155 - Invalid Event Rules
// 10/29/2009  IC9025511 - 8926760 - F4330 SFXO updated as blank
// 10/30/2009  AA9056748 - 8938306 Payment terms code invalid
// 12/14/2009 NB9064959 - 8916318 Subcontract Entry Transaction
// 12/30/09 AA9056748 8943156  - F4301 - DOC1 & DCT4 cleared wh
// 12/31/09 AA9056748 8927324 Change ShipTo No Update Detail
// 01/05/09 IC9025511 8942640 DLEJ not updated on change
// 02/25/10 IC9006767 8942498 Related Order Actuals
// 03/31/10 AA9056748 8892664  - Change OBJ in P4310 not accept
// 28/09/10 NB9064959 8943681 - Credit LIne Changes to Positiv
// 12/06/10 AA9056748 8972483 - Invalid Send Method When Copy
// 22/02/11 NH9067771 11051893 - Agreement Removed From PO
// 05/26/11 RV9056609  11904731 - PMPN Enhancements
// 05/18/2011 NH9067771 11064006 - P4310 Not Popul Landed Cost
// 07/13/2011 NH9067771 11880301 - CORDCHLN Update Logic Is Not
// 10/2014 - chamado 1812809 - Incuir marca envio email O2 e O3
//
// ISSUE 798527- Marília - Ajuste p/ "erro correto" qdo. não alteram TpLin da PO
//                         Não consistir Vlr Alocado Insuficiente em alteração
// ISSUE 819872 - Marília - Mensagem Data Solicitação para Viagens
// -----------------------------------------------------------------------------
//
// ===========================================================
// SAR 5503061
Disable Control(HC Lo&g Details)
//
// Camila - Chamado 1812809 - Incuir marca envio email O2 e O3
If PO szOrderType [DCT] is equal to ("O2","O3")
Or FI OrderType [DCTO] is equal to ("O2","O3")
     Show Control(FC Enviar E-Mail [EV01])
     Show Control(FC email [EMAL])
Else
     Hide Control(FC Enviar E-Mail [EV01])
     Hide Control(FC email [EMAL])
End If
//
// Dionatan Irigaray - Chamado 388355 - Inclusão campo valor 1º cotação
// Camila - Chamado 1352052 - Inclusão campo valor Orçamento
If PO cCampo_Primeira_CotacaoEV01 [EV01] is equal to "S"
     Show Grid Column(FC Grid, GC Valor 1º.Cotação)
     Show Grid Column(FC Grid, GC Orçamento)
Else
     Hide Grid Column(FC Grid, GC Valor 1º.Cotação)
     Hide Grid Column(FC Grid, GC Orçamento)
End If
// # Fim Dionatan Irigaray - Chamado 388355 - Inclusão campo valor 1º cotação
// #Fim Camila - Chamado 1352052 - Inclusão campo valor Orçamento
//
InitializeOrderDetailVariables(B4302920.InitializeOrderDetailVariables)
     FI JobNumber [JOBS] -> mnFIJobNumber [JOBS]
     FI mnProcessID [PEID] -> mnFIProcessID [PEID]
     FI mnTransactionID [TSID] -> mnFITransactionID [TCID]
     VA frm_Add000DetailLine_EV01 [EV01] <> cAdd000DetailLine [EV01]
     VA frm_EV02_BegDocExecuted [EV02] <- cBegDocExecuted [EV02]
     VA frm_CTID_ComputerID [CTID] <- szComputerID [CTID]
     VA frm_EditLineSucessful_EV01 [EV01] <- cEditLineSucessful [EV01]
     VA frm_EndOfFile [EV01] <> cEndOfFile [EV01]
     GC PRRCE1:Old Unit Price (wf) [PRRCE1] <- mnOldUnitPrice [PRRCE1]
     VA frm_HeaderValuesChanged [EV01] <> cHeaderValuesChanged [EV01]
     VA grd_cKitProcessed_EV01 [EV01] <- cKitsProcessed [EV11]
     VA frm_ManualOrderEntry [EV01] <- cManualOrderEntry [EV01]
     VA frm_OKButtonClicked_EV01 [EV01] <- cOKButtonClicked [EV01]
     VA frm_EV01_ProtectCurrFields [EV01] <- cProtectCurrFields [EV01]
     VA frm_RecordInHeaderWkFile [EV01] <- cRecordInHeaderWkFile [EV01]
     VA frm_RelieveBlanketOrder [EV06] <- cRelieveBlanketOrder [EV06]
     FI SourceOfFormCall [EV01] <> cSourceOfFormCall [EV01]
     VA frm_USR0_UserID [USR0] <- szUserID [USR0]
     VA frm_EV01_UsesWorkFields [EV01] <- cUsesWorkFields [EV01]
     VA frm_JOBS_JobNumber [JOBS] <- mnVAJobNumber [JOBS]
     VA frm_mnProcessID_PEID [PEID] <- mnVAProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] <- mnVATransactionID [TCID]
     VA frm_SFX0_ZeroSuffix [SFX0] <- szZeroSuffix [SFXO]
     VA frm_cLogsAtLevelsOn_EV01 [EV01] <- cLogsAtLevelsOn [EV01]
//
//  SAR  6814831  Begin
//  If the Order Header is called before the Order Detail (SourceOfFormCall ==
// 1 or 2), use the FI value.
// In server environments, the Order Header will fire begin doc and write the
// cache with the local machine name.  Above in Initialize Order Detail
// Variables, the matchine name that is fetched is the server machine name.
// Therefore, we need to override the fetched machine name  with the FI value,
// so that it can be used to fetch the cache.
If FI SourceOfFormCall [EV01] is equal to ("1","2")
     If VA frm_CTID_ComputerID [CTID] is not equal to FI ComputerID [CTID]
     And FI ComputerID [CTID] is greater than <Blank>
          VA frm_CTID_ComputerID [CTID] = FI ComputerID [CTID]
     End If
End If
//  SAR  6814831  End
//
If SV Form_ Mode is equal to CO COPY_MODE
     Disable Control(FC Order Attachment)
End If
//
// Begin SAR 8943681
VA frm_QtyChanged_EV01 [EV01] = "0"
// End SAR 8943681
// ==========================================================================
//
GetAddressBookConstant(B4303010.GetAddressBookConstant)
     VA frm_cAddressBookConstant_EV01 [EV01] <- cAddressBookConstant [EV01]
//
If PO szProtectOrderType [VL11] is equal to "1"
     Disable Control(FC F4301:Order Type [DCTO])
End If
//
If PO szChangeOrderProcessingOn [VL13] is equal to or empty <Blank>
Or PO szChangeOrderProcessingOn [VL13] is equal to or empty <NULL>
     Hide Control(FC Modification No. [CORD])
     Hide Grid Column(FC Grid, GC RevisionNumber)
     Hide Grid Column(FC Grid, GC Chg OrdLine No)
End If
//
If PO szProtectPriceFlag [VL09] is equal to "2"
     Hide Grid Column(FC Grid, GC UnitPrice, )
     Hide Grid Column(FC Grid, GC ExtendedPrice, )
End If
//
// AP1182 por Gindri em 10/11/99 e 26/11/99
// Objetiva proteger os campos descrição 1 e 2
// da tela W4310A - Detalhes do Pedido
//
Disable Grid(FC Grid,  <All Rows>, GC Description 1)
If PO szLineType [LNTY] is equal to "S"
Or PO szLineType [LNTY] is equal to "B"
     Disable Grid(FC Grid,  <All Rows>, GC LnTy)
     Disable Grid(FC Grid, <All Rows>, GC Description 2)
End If
//
// Fim AP1182
//
Hide Control(FC POPULATE HEADER TO DETAIL)
//
If PO cJobProject [EV01] is equal to "1"
     Show Control(FC Job)
     Hide Control(FC Project)
     Hide Control(FC Business Unit)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "2"
     Show Control(FC Project)
     Hide Control(FC Business Unit)
     Hide Control(FC Branch/Plant [MCU])
     Hide Control(FC Job)
End If
//
If PO cJobProject [EV01] is equal to "3"
     Show Control(FC Business Unit)
     Hide Control(FC Branch/Plant [MCU])
     Hide Control(FC Job)
     Hide Control(FC Project)
     Hide Grid Column(FC Grid, GC PhysicalComp.)
     Hide Grid Column(FC Grid, GC EffectiveDate)
End If
//
If PO cJobProject [EV01] is equal to or empty <Blank>
     Show Control(FC Branch/Plant [MCU])
     Hide Control(FC Job)
     Hide Control(FC Project)
     Hide Control(FC Business Unit)
     Hide Grid Column(FC Grid, GC PhysicalComp.)
End If
//
//
// ---------------------------------------------------------------------------
//     If in changes mode, protect the header fields.
// ------ Migração JDE 9.0  - Marília - agosto/2011
// =======================================================
//  ISSUE 3233 - Mostra ou não os campos de Local Cobr., Frete, Carrier
// =======================================================
//  ISSUE 5876 - Mostra ou não o campo de Local da Entrega
// =======================================================
If PO OpcaoSuprimentos [EV01] is equal to "1"
Or PO OpcaoCatalogo [EV01] is equal to "1"
     Show Control(FC Carrier Number [ANCR])
     Show Control(FC Freight Handling Code [FRTH])
     Show Control(FC Local Cobrança [SHAN])
     Show Control(FC LocalEntrega [ADD1])
     // =====
     If SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Control(FC Local Cobrança [SHAN])
          Disable Control(FC Carrier Number [ANCR])
          Disable Control(FC Freight Handling Code [FRTH])
          Disable Control(FC LocalEntrega [ADD1])
     Else
          Enable Control(FC Carrier Number [ANCR])
          Enable Control(FC Freight Handling Code [FRTH])
          Enable Control(FC Local Cobrança [SHAN])
          Enable Control(FC LocalEntrega [ADD1])
     End If
Else
     Hide Control(FC Carrier Number [ANCR])
     Hide Control(FC Freight Handling Code [FRTH])
     Hide Control(FC Local Cobrança [SHAN])
     Hide Control(FC LocalEntrega [ADD1])
End If
//
// Moved the code that disables Header fields if UPDATE_MODE to the PostDialog i
// initialized event. Reason: In some cases, when PO Entry Detail form is called
// directly from other applications, the MODE is UPDATE in this event whereas it
// changes to ADD in PostDialog event. RR6042543 - 09/27/2001
// ---------------------------------------------------------------------------
//     Load form interconnect fields for fetch.
// ---------------------------------------------------------------------------
//
OrderDetailLoadFCValues(B4302990.OrderDetailLoadFCValues)
     SV Form_ Mode -> idFormMode [GENLNG]
     FC Order Number [DOCO] <- mnFCOrderNumber [DOCO]
     FC F4301:Order Type [DCTO] <- szFCOrderType [DCTO]
     FC Order Company [KCOO] <- szFCOrderCompany [KCOO]
     FC Previous Order Number [LDOC] <- mnFCPreviousOrderNumber [LDOC]
     FC To Currency Code [CRDC] <- szFCToCurrencyCode [CRCD]
     FC Branch/Plant1 [MCU] <- szFCBranchPlant1 [MCU]
     FC Requested [DRQJ] <> jdFCRequested [DRQJ]
     FC Scheduled Pick [PDDJ] <> jdFCScheduledPick [PDDJ]
     FC G/L Date [DGL] <> jdFCGLDate [DGL]
     FI OrderNumber [DOCO] -> mnFIOrderNumber [DOCO]
     FI OrderType [DCTO] -> szFIOrderType [DCTO]
     FI OrderCompany [KCOO] -> szFIOrderCompany [KCOO]
     FI CompanyCurrencyCode [CRDC] -> szFICompanyCurrencyCode [CRCD]
     FI PreviousOrderNumber [LDOC] -> mnFIPreviousOrderNumber [LDOC]
     FI BranchPlant [MCU] -> szFIBranchPlant [MCU]
     FC Modification No. [CORD] <> mnFCModificationNo [CORD]
     VA frm_BranchAtEntry [MCU] <> szBranchPlantAtEntry [MCU]
     VA frm_CompanyAtEntry [CO] <> szCompanyAtEntry [KCOO]
     VA frm_CompanyCurrAtEntry [CRCD] <> szCompanyCurrAtEntry [CRCD]
     SL CurrencyProcessing -> cCurrencyProcessing [EV01]
     VA frm_OriginalOrderNo [OORN] <> szOriginalOrderNo [OORN]
//
// SAR 8164309 begin
FC Retainage % [PCRT] = FI mnPercent__F4301_Retainage [PCRT]
FC Retainage Indicator [RETI] = FI cRetainage_F4301_Indicator [RETI]
// SAR 8164309 end
//
// ---------------------------------------------------------------------------
// The Change order grid column is hidden initially,  it will be shown in
// post-dialog is initialized if change order processing is on
// ---------------------------------------------------------------------------
//
Hide Control(FC Change Order [SFXO])
//
// =======================================================
// ---------------------------------------------------------------------------
// SAR 6436631
// Moved the code that disables the change order
// Reason: In some cases, when PO Entry Detail form is called
// directly from other applications, the MODE is UPDATE in this event whereas
// changes to ADD in PostDialog event. HK6871878, 02/05/03
// ---------------------------------------------------------------------------
//
SetP4310DefaultProcessingOption(B4302910.SetP4310DefaultProcessingOption)
     PO szSupplyDemandInquiry [VL20] <> szSupplyDemandInquiryVersion [VL20]
     PO szSupplierAnalysisVersion [VL21] <> szSupplierAnalysisVersion [VL21]
     PO szSupplierMasterVersion [VL22] <> szSupplierMasterVersion [VL22]
     PO szPOPrintOnDemandVersion [VL23] <> szPOPrintOnDemandVersion [VL23]
     PO szFinancialStatusInquiry [VERS] <> szFinancialStatusInqVersion [VERS]
     PO szInboundTransportationVersion [VERS] <> szInboundTransportationVersion [VERS]
     PO szBlanketReleaseVersion [VERS] <> szBlanketReleaseVersion [VERS]
     PO szLogsEntryVersion [VERS] <> szLogsEntryVersion [VERS]
//
// SAR 7801302- Get Pricing on override constant
DetermineEnabledProcesses(B4302930.DetermineEnabledProcesses)
     VA frm_CO01_CostMgmtFlag [CO01] <- cCostObjectsActive [CO01]
     VA frm_cVertexActive [VVTX] <- cVertexActive [VVTX]
     VA frm_szVertexCanadaCountryCode [VVCN] <- szVertexCanadaCountryCode [VVCN]
     VA frm_cTransportationInstalled [EV01] <- cTransportationExist [MEOW]
     VA frm_cProductVarianceFlag_MEOW [MEOW] <- cProductVarianceExist [MEOW]
     VA frm_PromotionsSystemFlag_PRSF [PRSF] <- cPromotionsActive [PRSF]
     VA frm_cPricingOnOverridePrice [CP29] <- cProcPricingOnOverridePrice [CP29]
//
If VA frm_CO01_CostMgmtFlag [CO01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Cost ObjectType 1)
     Hide Grid Column(FC Grid, GC CostObject 1)
     Hide Grid Column(FC Grid, GC Cost ObjectType 2)
     Hide Grid Column(FC Grid, GC CostObject 2)
     Hide Grid Column(FC Grid, GC Cost ObjectType 3)
     Hide Grid Column(FC Grid, GC CostObject 3)
     Hide Grid Column(FC Grid, GC Cost ObjectType 4)
     Hide Grid Column(FC Grid, GC CostObject 4)
End If
//
//
Hide Grid Column(FC Grid, GC EffectiveDate)
//
//
If PO cJobProject [EV01] is equal to "1"
Or PO cJobProject [EV01] is equal to "2"
     Hide Control(FC Requested [DRQJ])
     Hide Control(FC Scheduled Pick [PDDJ])
End If
//
If PO cJobProject [EV01] is equal to "3"
Or PO cJobProject [EV01] is equal to or empty <Blank>
     Show Control(FC Requested [DRQJ])
     Show Control(FC Scheduled Pick [PDDJ])
     Hide Control(FC Phyiscal Comp. [ADDJ])
End If
//
//
Hide Control(FC Effective Date [PEFJ])
//
//
If VA frm_cTransportationInstalled [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC ShipmentNumber)
     Disable Control(HC &Routing Options)
     Disable Control(HC Frei&ght Info)
End If
//
// SAR 4924817 begin
VerticalFeature(B4002670.VerticalFeature)
     "01" -> szVerticalEnhancement [CACTN]
     VA evt_cDualUOMExists [MEOW] <- cEnhancementExistance [MEOW]
If VA evt_cDualUOMExists [MEOW] is equal to "1"
     Show Grid Column(FC Grid, GC Sec QuantityOrdered)
     Show Grid Column(FC Grid, GC SecUoM)
Else
     Hide Grid Column(FC Grid, GC Sec QuantityOrdered)
     Hide Grid Column(FC Grid, GC SecUoM)
End If
// SAR 4924817 end
//
//
// ---------------------------------------------------------------------------
// Check if product variance is 'ON'
// ---------------------------------------------------------------------------
//
// SAR 5228354 Product Variance Enhancement
If VA frm_cProductVarianceFlag_MEOW [MEOW] is equal to "1"
     Show Grid Column(FC Grid, GC Matrix LineNumber)
Else
     Hide Grid Column(FC Grid, GC Matrix LineNumber)
     Disable Control(HC Matrix Orders)
End If
// SAR 5228354 End
//
// Begin SAR 5133689
If FI SourceOfFormCall [EV01] is equal to "3"
     //  SAR 7310431 - Add if condition
     If FI mnItemNumber [ITM] is not equal to "0"
     And FI mnItemNumber [ITM] is not equal to <NULL>
          GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
               FI mnItemNumber [ITM] -> mnShortItemNumber [ITM]
               VA frm_ItemNoUnknownFormat [UITM] <- szPrimaryItemNumber [UITM]
          GC Item Number [UITM] = VA frm_ItemNoUnknownFormat [UITM]
     End If
     GC Quantity Ordered [UORGE1] = FI mnQuantity [UORG]
     GC Tr. UoM [UOM] = FI szUnitOfMeasure [UOM]
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ItemNumber)
     Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Tr.UoM)
     Suppress Add
End If
// End SAR 5133689
//
If FI SourceOfFormCall [EV01] is equal to "4"
     Suppress Add
     Disable Grid(FC Grid,  <Currently Selected Row>, GC ItemNumber)
     Disable Grid(FC Grid, <Currently Selected Row>, GC QuantityOrdered)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Tr.UoM)
End If
//
// SERGIO BENCKE - INICIALIZA VARIAVEL
VA frm_Primeira_Chamada [EV01] = "S"
//
// Verifica se está ativados os objetos de custo
VA frm_CMS_UniqueKey [UKID] = "0"
VA frm_CMS_Flag [EV01] = "0"
F1609.FetchSingle  [Index 1: Primary]
     VA frm_CMS_UniqueKey [UKID] = TK Unique Key ID (Internal) [UKID]
     VA frm_CMS_Flag [EV01] <- TK Activate Cost Objects [CO01]
//
// ======================================================
// ---------------------------------------------------------------------------
// 4955681 - Advanced Lot Processing
// ---------------------------------------------------------------------------
//
VerticalFeature(B4002670.VerticalFeature)
     "03" -> szVerticalEnhancement [CACTN]
     VA evt_cAdvancedLotProcOn_MEOW [MEOW] <- cEnhancementExistance [MEOW]
If VA evt_cAdvancedLotProcOn_MEOW [MEOW] is not equal to "1"
     Hide Grid Column(FC Grid, GC PlannedEffective)
End If
//
// ---------------------------------------------------------------------------
// 6585679 - Subcontract Logs at Hierarchial Levels Functionality
// ---------------------------------------------------------------------------
// Check to see whether Logs Module exists in UDC 40/VF
GetUDC(X0005.GetUDC)
     "40" -> szSystemCode [SY]
     "VF" -> szRecordTypeCode [RT]
     "04" -> szUserDefinedCode [KY]
     "2.00" -> mnKeyFieldLength [AS]
     "1" -> cSuppressErrorMessage [EV01]
     VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
If VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
     VA frm_cLogsAtLevelsOn_EV01 [EV01] = "1"
End If
//
// ---------------------------------------------------------------------------
//
// Promotion ID Enhancement SAR 5183643
// to be enabled at a later point
// ---------------------------------------------------------------------------
//
If VA frm_PromotionsSystemFlag_PRSF [PRSF] is equal to ("1","2")
     Show Grid Column(FC Grid, GC PromotionID)
Else
     Hide Grid Column(FC Grid, GC PromotionID)
End If
//
// ---------------------------------------------------------------------------
// SAR 5565764 Property Management - UK Localization
// ---------------------------------------------------------------------------
//
If SL CountryCode is equal to "UK"
     Show Grid Column(FC Grid, GC PropertyUnit Number)
     Disable Grid(FC Grid,  <All Rows>, GC Reference)
End If
//
// SAR 6585679 Begin
// Subcontracts display if JobProject is 1 or 2
If PO cJobProject [EV01] is equal to ("1","2")
     Set Control Text(FC Address Number, TV Subcontractor)
     Set Control Text(FC Previous Order Number, TV Previous Contract)
     Set Form Title(TV Contract Detail)
End If
// SAR 6585679 End
//
// SAR 8462998 Changed to form variable
PORetrieveF48091Data(B4303490.PORetrieveF48091Data)
     <Blank> -> cSuppressErrorMessage [SUPPS]
     VA frm_USGovernmentContractingUse [GCUSED] <- cUSGovernmentContractingUs [GCUSED]
//
If VA frm_USGovernmentContractingUse [GCUSED] is equal to "1"
     Show Grid Column(FC Grid, GC JobTyp)
Else
     Hide Grid Column(FC Grid, GC JobTyp)
End If
//
// SAR 8180798  Pt1
// MCLN blank = no matrx qty display
If GC Matrix Line Number [MCLN] is less than or equal to "0"
     Disable Control(HC Matrix Orders)
End If
// End SAR 8180798 Pt1
//
// Begin SAR 11064006
FC Landed Cost Rule [LANC] = FI LandedCostRule [PRP5]
// End SAR 11064006
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelEnabled_EV01 [EV01] <- cModuleExistance [MEOW]
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is not equal to "1"
     Hide Tab Page(FC Tab Control 673, TP Style)
     Disable Control(HC Style Templates)
Else
     If PO cDisplayPCW10 [EV01] is equal to or empty <Blank>
          Disable Control(HC Style Templates)
     End If
End If
If PO szStyleMatrixEntryVersion [VERS] is equal to or empty <Blank>
     PO szStyleMatrixEntryVersion [VERS] = "ZJDE0003"
End If
//    BUG# 11904731 - PMPN Enhancements - Begin
//    Hide PMPN if PMPN Module Existance is turned off
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY31MP" -> szDataItem [DTAI]
     VA frm_cPMPNInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cPMPNInstalled_EV01 [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Project MfgProduction Number)
Else
     VA frm_szProductionNoFromWB_PMPN [PMPN] = FI szProductionNumber [PMPN]
End If
//    BUG# 11904731 - PMPN Enhancements - End
// ISSUE 7405 - Fernando Herrera  - Início 30/09/2004
//
If PO cInvest [AA01] is equal to "S"
     Show Grid Column(FC Grid, GC NúmeroAlocação)
     Show Grid Column(FC Grid, GC ProjetoRubrica)
Else
     Hide Grid Column(FC Grid, GC NúmeroAlocação)
     Hide Grid Column(FC Grid, GC ProjetoRubrica)
End If
// ISSUE 7405 - Fernando Herrera  - Final
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Inicio
// Itens de serviço
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
! If PO szCodigoXMLOC [Z5576B22] is not equal to "SERVICOS"
     ! Hide Grid Column(FC Grid, GC Centro de Custop/ CTB)
! End If
If PO cRequisitantes_EV01 [EV01] is equal to <Blank>
Or PO cRequisitantes_EV01 [EV01] is equal to <NULL>
Or PO cRequisitantes_EV01 [EV01] is equal to "0"
     PO cRequisitantes_EV01 [EV01] = "N"
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 12/03/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Inicio
// Verifica regras da requisição
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If PO szVersaoR554308A [VL01] is not equal to <Blank>
And PO szVersaoR554308A [VL01] is not equal to <NULL>
And PO szVersaoR554308A [VL01] is not equal to "0"
     If PO szCodigoRegra [SDB] is equal to <Blank>
     Or PO szCodigoRegra [SDB] is equal to <NULL>
     Or PO szCodigoRegra [SDB] is equal to "0"
          PO szCodigoRegra [SDB] = "REQ"
     End If
     If PO szTipoRegra [TYDT] is equal to <Blank>
     Or PO szTipoRegra [TYDT] is equal to <NULL>
     Or PO szTipoRegra [TYDT] is equal to "0"
          PO szTipoRegra [TYDT] = "OM"
     End If
     OrganizaRegra(N554308.OrganizaRegra)
          PO szCodigoRegra [SDB] -> szSupplementalDatabaseCode [SDB]
          PO szTipoRegra [TYDT] -> szTypeofData [TYDT]
          SL DateToday -> jdData [UPMJ]
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/11/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Event: Clear Screen Before Add
Event GUID: 909329da-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     FC COLLECTION [DL01] = <NULL>
     FC SEASONCODE [DL01] = <NULL>
     FC SEASON YEAR [DL01] = <NULL>
End If

=============================================
Form: Order Detail - W4310A
Event: Post Dialog is Initialized
Event GUID: f57df3f2-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnClauseProcessID [PEID]
evt_mnClauseTransactionID [TCID]
----------------------------------------
VA frm_szAccountDistributionText [ANI] = TV *** ACCOUNT DISTRIBUTION ***
//
// SAR 8692806 - Check if OTM is installed.
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY49T" -> szDataItem [DTAI]
     VA frm_cOTMInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cOTMInstalled_EV01 [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC FRSent)
Else
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO COPY_MODE
          Hide Grid Column(FC Grid, GC FRSent)
     End If
End If
//
// SAR 6436631 Begin Moved From Dialog Event
If SV Form_ Mode is equal to CO UPDATE_MODE
     If FI cAddChangeOrder [EV03] is equal to "2"
     Or FI cAddChangeOrder [EV03] is equal to "3"
          // This branch is designed to execute on a &Select from Work With Details
          If FI cAddChangeOrder [EV03] is not equal to "3"
               Disable Control(FC Change Order [SFXO])
          End If
          FC Change Order [SFXO] = FI szDetailSuffix [SFX]
     End If
End If
// SAR 6436631 End
//
// SAR 8164296
If PO cClauseApplication [EV01] is not equal to "1"
     Disable Control(HC Cla&uses)
End If
If PO cAdditionalProperties [EV01] is not equal to "1"
     Press Button(FC Disable Additonal Properties)
End If
If PO cCategoryCodes [EV01] is not equal to "1"
     Press Button(FC Disable Category Code)
     Hide Grid Column(FC Grid, GC Purchase LineCode 01)
     Hide Grid Column(FC Grid, GC Purchase LineCode 02)
     Hide Grid Column(FC Grid, GC Purchase LineCode 03)
     Hide Grid Column(FC Grid, GC Purchase LineCode 04)
End If
//
// SAR 8164309
If PO cDisplayRetainageIndicator [EV01] is not equal to "1"
     Hide Control(FC Retainage Indicator [RETI])
End If
//
// Camila - Chamado 117783 - Inclusão campo Familia Compras OM\OF
If PO szOrderType [DCT] is equal to ("OF","OM")
     Show Grid Column(FC Grid, GC DescriçãoFamília Compras)
Else
     Hide Grid Column(FC Grid, GC DescriçãoFamília Compras)
End If
// #Fim Camila - Chamado 117783 - Inclusão campo Familia Compras OM\OF
// ---------------------------------------------------------------------------
// SAR 5683445 Focus on grid when comming from the header detail form when in
// update, copy or add mode.  Source of form will be set to 1.
// ---------------------------------------------------------------------------
//
// =====
// Dionatan Irigaray - Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// Se for Cartões de Visitas - Recebe os Valores e Trava os Campos
If PO CartoesVisita [EV01] is equal to "S"
     FC Long Address Number_ALKY [ALKY] = [PO mnFornecedorCartaoVisita_AN8 [AN8]]
End If
// # FIM Cham.428425 - Trava de Dados - Ord. Comp. Cartões Visitas
// =====
If SV Form_ Mode is equal to CO UPDATE_MODE
Or FI SourceOfFormCall [EV01] is equal to "1"
     //
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC F4301:Order Type [DCTO])
     Disable Control(FC Order Company [KCOO])
     Disable Control(FC Branch/Plant1 [MCU])
     Disable Control(FC Address Number [AN8])
     Disable Control(FC Long Address Number_ALKY [ALKY])
     Disable Control(FC Ship To [SHAN])
     Disable Control(FC Long Ship To_ALKY [ALKY])
     Disable Control(FC Order Date [TRDJ])
     Disable Control(FC Currency Code [CRCD])
     Disable Control(FC ExchangeRate_CRR [CRR])
     Disable Control(FC Foreign [CRRM])
     Disable Control(FC HOLD Code [HOLD])
     Disable Control(FC Branch/Plant [MCU])
     Disable Control(FC Business Unit)
     Disable Control(FC Job)
     Disable Control(FC Project)
     //
     //  SAR  6585679  Disable FC Retainage%
     Disable Control(FC Retainage % [PCRT])
     // SAR 8164309 Disable FC Retainage Indicator field
     Disable Control(FC Retainage Indicator [RETI])
     //
     // SAR 8164296
     Press Button(FC Disable Additonal Properties)
     Press Button(FC Disable Category Code)
     // ---------------------------------------------------------------------------
     // If in update mode of existing order
     // ---------------------------------------------------------------------------
     //
     If SV Form_ Mode is equal to CO UPDATE_MODE
          VA frm_EV01_AddNewToExistingOrder [EV01] = "1"
     End If
     //
     ! ReservedByUsage(B4303020.ReservedByUsage)
     !      SV Form_ Mode -> idFormMode [GENLNG]
     !      "F4311" -> szObjectName [OBNM]
     !      SL UserID -> szUserId [USER]
     !      "P4310" -> szApplicationID [PID]
     !      FI OrderNumber [DOCO] -> mnOrderNumber [DOCO]
     !      FI OrderType [DCTO] -> szOrderType [DCTO]
     !      FI OrderCompany [KCOO] -> szOrderCompany [KCOO]
     // SAR 7218951 Begin
     ! ConvertNumericToString(B0000045.ConvertNumericToString)
     !      FI OrderNumber [DOCO] -> mnMathNumeric01 [MATH01]
     !      VA frm_szConvertResOrderNo_DOC8 [DOC8] <- szVideoConstant30A [VC30A]
     ! VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szConvertResOrderNo_DOC8 [DOC8]], [FI OrderType [DCTO]])
     ! VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szGenericKey_GENKEY [GENKEY]], [FI OrderCompany [KCOO]])
     // SAR 7218951 End
     // SAR 8785906 - Record Reservation
     If SV Form_ Mode is equal to CO UPDATE_MODE
     And FI SourceOfFormCall [EV01] is not equal to "1"
     And FI SourceOfFormCall [EV01] is not equal to "2"
          If VA frm_cValidateApplication_EV01 [EV01] is not equal to "2"
               ValidateApplicationId(N0000604.ValidateApplicationId)
                    "P4310" -> szApplicationID_PID [PID]
                    VA frm_cValidateApplication_EV01 [EV01] <- cValidateApplication_ERR1 [ERR1]
               If VA frm_cValidateApplication_EV01 [EV01] is not equal to "0"
                    VA frm_cValidateApplication_EV01 [EV01] = "2"
               End If
               If VA frm_cValidateApplication_EV01 [EV01] is equal to "0"
                    GetNextUniqueKeyID(X00022.GetNextUniqueKeyID)
                         "RRESERVE" -> szObjectName [OBNM]
                         VA frm_mnUniqueKeyID_UKID [UKID] <- mnUniqueKeyID [UKID]
                    ConvertNumericToString(B0000045.ConvertNumericToString)
                         VA frm_mnUniqueKeyID_UKID [UKID] -> mnMathNumeric01 [MATH01]
                         VA frm_szUniqueKeyID_PID [PID] <- szVideoConstant30A [VC30A]
                    ConvertNumericToString(B0000045.ConvertNumericToString)
                         FI OrderNumber [DOCO] -> mnMathNumeric01 [MATH01]
                         VA frm_szConvertResOrderNo_DOC8 [DOC8] <- szVideoConstant30A [VC30A]
                    VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szConvertResOrderNo_DOC8 [DOC8]], [FI OrderType [DCTO]])
                    VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szGenericKey_GENKEY [GENKEY]], [FI OrderCompany [KCOO]])
                    F00095ReserveObject(N0000602.F00095ReserveObject)
                         "F4311" -> szNameObject [OBNM]
                         SL UserID -> szUserId [USER]
                         VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                         VA frm_szUniqueKeyID_PID [PID] -> szApplication [PID]
               End If
          End If
     End If
     // SAR 8785906 - Record Reservation
     //
End If
//
VA frm_cSetFocusToGridFlag_EV01 [EV01] = "0"
//
//
// BEGIN SAR 7297265
If FC Address Number [AN8] is not equal to <Blank>
And FC Address Number [AN8] is not equal to <NULL>
And FC Address Number [AN8] is not equal to "0"
Or FC Ship To [SHAN] is not equal to <Blank>
And FC Ship To [SHAN] is not equal to <NULL>
And FC Ship To [SHAN] is not equal to "0"
     PopulateAddressNumber(B4303010.PopulateAddressNumber)
          VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
          FC Address Number [AN8] -> mnSupplierNumber [AN8]
          FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
          FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
          FC Ship To [SHAN] -> mnShipToNumber [SHAN]
          FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
          FC SHIP TO [DL01] <- szShipToDescription [DL01]
End If
//
// ---------------------------------------------------------------------------
// Template code moved from 'Dialog'.  Grid Row counter must be
// reinitialized so currency fields are not protected later.
// ---------------------------------------------------------------------------
//
VA frm_TemplatesExecuted [EV01] = "0"
VA frm_MATH01_GridRowCounter [MATH01] = "0"
//
// ---------------------------------------------------------------------------
// Moved from Dialog is Initialized, ER was not executing there.   SAR 1887766
//     Processing Options - hide/show & protect settings
// ---------------------------------------------------------------------------
//
If PO szProtectOrderType [VL11] is equal to "1"
     Disable Control(FC F4301:Order Type [DCTO])
End If
//
// =======================================================
// Move Local de Cobrança para Header = ISSUE 3233
// =======================================================
// Move Local de Entrega para Header = ISSUE 5876
// =======================================================
If PO OpcaoSuprimentos [EV01] is equal to "1"
Or PO OpcaoCatalogo [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          // Dionatan Irigaray - Chamado 388355 - Inclusão campo valor 1º cotação
          // Camila - Chamado 1352052 - Inclusão campo valor Orçamento + Descri Familia
          // Camila - Chamado 1812809 - Inclusão campos enviar email \email
          F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
               FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
               FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
               FC F4301:Order Type [DCTO] = TK Order Type [DCTO]
               FC LocalEntrega [ADD1] <- TK Address Line 1 [ADD1]
               FC Local Cobrança [SHAN] <- TK Address Number - Ship To [SHAN]
               GC Valor 1º. Cotação [FRRC] <- TK Amount - Foreign Unit Price [FRRC]
               GC Orçamento [PRRC] <- TK Amount - Unit Cost [PRRC]
               GC Descrição Família Compras [DSE2] <- TK Description [DSE2]
               FC Enviar E-Mail [EV01] <- TK J.D. EnterpriseOne Event Point 01 [EV01]
               FC email [EMAL] <- TK Electronic Address [EMAL]
     End If
End If
//
// ---------------------------------------------------------------------------
//     If this form has been called from the PO Header entry then
//     load all of the header level information into this form
// ---------------------------------------------------------------------------
//
If FI SourceOfFormCall [EV01] is equal to "1"
     //
     VA frm_RecordInHeaderWkFile [EV01] = "1"
     //
     If SV Form_ Mode is equal to CO ADD_MODE
          FC Order Number [DOCO] = FI OrderNumber [DOCO]
          FC F4301:Order Type [DCTO] = FI OrderType [DCTO]
          FC Order Company [KCOO] = FI OrderCompany [KCOO]
          FC Change Order [SFXO] = FI OrderSuffix [SFXO]
          FC Branch/Plant1 [MCU] = FI BranchPlant [MCU]
          //
          // SAR 6269449 Begin
          VA frm_OriginalBP [MCU] = FI BranchPlant [MCU]
          // SAR 6269449 End
          //
          FC Address Number [AN8] = FI SupplierNumber [AN8]
          FC Ship To [SHAN] = FI ShipToNumber [SHAN]
          FC Order Date [TRDJ] = FI OrderDate [TRDJ]
          //
          PopulateAddressNumber(B4303010.PopulateAddressNumber)
               VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
               FC Address Number [AN8] -> mnSupplierNumber [AN8]
               FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
               FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
               FC Ship To [SHAN] -> mnShipToNumber [SHAN]
               FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
               FC SHIP TO [DL01] <- szShipToDescription [DL01]
          //
          // SAR 5219407 - Begin
          If FI szHoldOrdersCode [HOLD] is not equal to <NULL>
               FC HOLD Code [HOLD] = FI szHoldOrdersCode [HOLD]
          End If
          // SAR 5219407 - End
          //
          //
          FC Requested [DRQJ] = FI RequestedDate [DRQJ]
          FC Scheduled Pick [PDDJ] = FI PromisedDeliveryDate [PDDJ]
          FC Cancel Date [CNDJ] = FI CancelDate [CNDJ]
          //
          // ---------------------------------------------------------------------------
          // Manually entered date not overridden
          // ---------------------------------------------------------------------------
          //
          If FI ActualDeliveryDate [ADDJ] is not equal to Null Date
               FC Phyiscal Comp. [ADDJ] = FI ActualDeliveryDate [ADDJ]
          End If
          //
          FC Currency Code [CRCD] = FI TransactionCurrencyCode [CRCD]
          FC ExchangeRate_CRR [CRR] = FI CurrencyConversionRate [CRR]
          FC To Currency Code [CRDC] = FI CompanyCurrencyCode [CRDC]
          FC Foreign [CRRM] = FI CurrencyMode [CRRM]
          FC Previous Order Type [DCTO] = FI szPrevOrderType [OCTO]
          //
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               VA frm_cItemRestrictions_EDF2 [EDF2] <- cItemRestrictions [EDF2]
               VA frm_szOrderTemplate_ORTP [ORTP] <- szOrderTemplate [ORTP]
               VA frm_cSendMethod_CRMD [CRMD] <- cCorrespondenceMethod [CRMD]
               VA frm_c_ERSFlag [EV01] <- cEvaluatedReceipts [AVCH]
          //
          //
          VA frm_EV02_BegDocExecuted [EV02] = "1"
          Set Control Focus(FC Grid)
          //
          // ---------------------------------------------------------------------------
          // We are coming from header in update, load * in FC change order so that ALL
          // lines will show whenever we come from the header.
          // ---------------------------------------------------------------------------
          //
          // SAR 8164296 Get UDF information
          RetrieveUserDefinedFields(B4300100.RetrieveUserDefinedFields)
               FC Property 01 [POHP01] <- cPurchaseOrderProperty01 [POHP01]
               FC Property 02 [POHP02] <- cPurchaseOrderProperty02 [POHP02]
               FC Property 03 [POHP03] <- cPurchaseOrderProperty03 [POHP03]
               FC Property 04 [POHP04] <- cPurchaseOrderProperty04 [POHP04]
               FC Property 05 [POHP05] <- cPurchaseOrderProperty05 [POHP05]
               FC Property 06 [POHP06] <- cPurchaseOrderProperty06 [POHP06]
               FC Property 07 [POHP07] <- cPurchaseOrderProperty07 [POHP07]
               FC Property 08 [POHP08] <- cPurchaseOrderProperty08 [POHP08]
               FC Property 09 [POHP09] <- cPurchaseOrderProperty09 [POHP09]
               FC Property 10 [POHP10] <- cPurchaseOrderProperty10 [POHP10]
               FC Property 11 [POHP11] <- cPurchaseOrderProperty11 [POHP11]
               FC Property 12 [POHP12] <- cPurchaseOrderProperty12 [POHP12]
               FC Property 13 [POHP13] <- szPurchaseOrderProperty13 [POHP13]
               FC Date 01 [POHD01] <- jdPurchaseOrderDate01 [POHD01]
               FC Date 02 [POHD02] <- jdPurchaseOrderDate02 [POHD02]
               FC Date and Time 01 [POHU01] <- POUniversalDate01 [POHU01]
               FC Date and Time 02 [POHU02] <- POUniversalDate02 [POHU02]
               FC Category Code 01 [POHC01] <- szPurchaseOrderCode01 [POHC01]
               FC Category Code 02 [POHC02] <- szPurchaseOrderCode02 [POHC02]
               FC Category Code 03 [POHC03] <- szPurchaseOrderCode03 [POHC03]
               FC Category Code 04 [POHC04] <- szPurchaseOrderCode04 [POHC04]
               FC Category Code 05 [POHC05] <- szPurchaseOrderCode05 [POHC05]
               FC Category Code 06 [POHC06] <- szPurchaseOrderCode06 [POHC06]
               FC Category Code 07 [POHC07] <- szPurchaseOrderCode07 [POHC07]
               FC Category Code 08 [POHC08] <- szPurchaseOrderCode08 [POHC08]
               FC Category Code 09 [POHC09] <- szPurchaseOrderCode09 [POHC09]
               FC Category Code 10 [POHC10] <- szPurchaseOrderCode10 [POHC10]
               FC Category Code 11 [POHC11] <- szPurchaseOrderCode11 [POHC11]
               FC Category Code 12 [POHC12] <- szPurchaseOrderCode12 [POHC12]
               VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
               VA frm_JOBS_JobNumber [JOBS] -> mnJobnumberA [JOBS]
               "000" -> szOrderSuffix [SFXO]
               FC Address Book 01 [POHAB01] <- mnPOAddressBook01 [POHAB01]
               FC Address Book 02 [POHAB02] <- mnPOAddressBook02 [POHAB02]
               FC Clause ID [CUKID] <- mnClause_ID [CUKID]
          // SAR 8164309 begin
          FC Retainage % [PCRT] = FI mnPercent__F4301_Retainage [PCRT]
          FC Retainage Indicator [RETI] = FI cRetainage_F4301_Indicator [RETI]
          // SAR 8164309 end
     End If
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC F4301:Order Type [DCTO])
Else
     //
     // ---------------------------------------------------------------------------
     //    ELSE : The form has not been called from the header - gone to detail
     //     directly
     // ---------------------------------------------------------------------------
     //
     //
     FC Previous Order Type [DCTO] = FC F4301:Order Type [DCTO]
     //
     // ---------------------------------------------------------------------------
     // Move clearing dates for copy above setting FC Order Date to today.
     // If in copy mode, the order date needs to be reset
     // ---------------------------------------------------------------------------
     //
     //  SAR  5882938  Begin
     If SV Form_ Mode is equal to CO COPY_MODE
          //
          // SAR 8164296 Copy clause from source to target.
          CopyProcurementClauses(B4300080.CopyProcurementClauses)
               VA evt_mnClauseProcessID [PEID] <> mnProcessID [PEID]
               VA evt_mnClauseTransactionID [TCID] <> mnTransactionID [TCID]
               FC Clause ID [CUKID] -> mnFromClause_ID [CUKID]
               FC Clause ID [CUKID] <- mnToClause_ID [CUKID]
          CommitProcurementClauses(B4300080.CommitProcurementClauses)
               VA evt_mnClauseProcessID [PEID] -> mnProcessID [PEID]
               VA evt_mnClauseTransactionID [TCID] -> mnTransactionID [TCID]
          FreeResourcesProcurementClauses(B4300080.FreeResourcesProcurementClauses)
               "1" -> cSuppressErrorMessage [SUPPS]
               VA evt_mnClauseProcessID [PEID] -> mnProcessID [PEID]
               VA evt_mnClauseTransactionID [TCID] -> mnTransactionID [TCID]
          // Begin SAR 4632646
          FC Order Date [TRDJ] = <NULL>
          FC G/L Date [DGL] = <NULL>
          FC Scheduled Pick [PDDJ] = <NULL>
          FC Requested [DRQJ] = <NULL>
          // End SAR 4632646
          //
          // Begin SAR 4678687
          FC Cancel Date [CNDJ] = <NULL>
          // End SAR 4678687
          //
          //  SAR  6209198  Begin
          FC HOLD Code [HOLD] = <NULL>
          FC HOLD ORDERS CODE [DL01] = <NULL>
          //  SAR  6209198  End
          //
     End If
     //  SAR  5882938  End
     //
     //
     // ---------------------------------------------------------------------------
     //     If the Order Date is blank then assign today's date
     // ---------------------------------------------------------------------------
     //
     If FC Order Date [TRDJ] is equal to Null Date
          FC Order Date [TRDJ] = date_today()
     End If
     //
     // SAR 7868785 - Moved this to later in the event, otherwise focus gets lost
     // and an error is issued.
     // Sar 7232365 Begin
     ! If VA frm_cTabPage [EV01] is not equal to "2"
          ! Set Control Focus(FC Long Address Number_ALKY [ALKY])
     ! End If
     // Sar 7232365 End
     //
End If
//
//
// ==========================================================================
//
// Retrieve Base Currency
//
// SAR#8667889 - Begin
// The Base currency code was resetting to blank when
// this form is called from Header, added an ANDcondition so that the Base
// currency is not made blank
If SV Form_ Mode is equal to CO ADD_MODE
And FI SourceOfFormCall [EV01] is not equal to "1"
     // SAR#8667889 - End
     FC Branch/Plant1 [MCU] = VA frm_BranchAtEntry [MCU]
     FC Order Company [KCOO] = VA frm_CompanyAtEntry [CO]
     FC To Currency Code [CRDC] = VA frm_CompanyCurrAtEntry [CRCD]
End If
//
// =======================================================
//
// ---------------------------------------------------------------------------
//     The DetailFormCancelled flag is used by the calling form (Browse)
//     to call this header/detail form in a loop until the user cancelles the
//     form.  This is valid for ADDs only so that the user stays in the
//     headerless detail.  In change mode this is not the case and
//     the form is not called again.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO ADD_MODE
     FI DetailFormCancelled [EV02] = "0"
Else
     FI DetailFormCancelled [EV02] = "1"
End If
//
// SAR 76969404 Begin
If SV Form_ Mode is equal to CO ADD_MODE
Or SV Form_ Mode is equal to CO COPY_MODE
     Disable Control(HC Ca&ncel Order)
Else
     Enable Control(HC Ca&ncel Order)
End If
// SAR 76969404 End
//
// ---------------------------------------------------------------------------
//     If the previous order number is not blank then display it
// ---------------------------------------------------------------------------
//
If FC Previous Order Number [LDOC] is not equal to "0"
     Show Control(FC Previous Order Number [LDOC])
     Show Control(FC Previous Order Type [DCTO])
     Disable Control(FC Previous Order Number [LDOC])
     Disable Control(FC Previous Order Type [DCTO])
Else
     Hide Control(FC Previous Order Number [LDOC])
     Hide Control(FC Previous Order Type [DCTO])
End If
//
// ==========================================================================
//
If FC F4301:Order Type [DCTO] is equal to or empty <Blank>
Or FC F4301:Order Type [DCTO] is equal to "*"
     FC F4301:Order Type [DCTO] = PO szOrderType [DCT]
End If
//
// ==========================================================================
//
// ---------------------------------------------------------------------------
// Check for header associated text.
// ---------------------------------------------------------------------------
//
// Don't perform for add.  Performance MA 7/21/97
If SV Form_ Mode is equal to CO ADD_MODE
     Hide Control(FC Attachments)
Else
     //
     // ---------------------------------------------------------------------------
     // Passed in BC values instead of FC values to fix Order Attachement display on
     // the header level.
     // ---------------------------------------------------------------------------
     //
     Media Object Structures(GT4301, <Default Media Object>, <Exist>, FC EV02-Header Generic Text (wf), BC Document (Order #, Invoice, (F4301) etc.), BC Order (F4301) Type, ...)
     If FC EV02-Header Generic Text (wf) [EV02] is equal to "1"
          Show Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = "Y"
     Else
          Hide Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = <Blank>
     End If
End If
//
If SV Form_ Mode is equal to CO COPY_MODE
Or SV Form_ Mode is equal to CO ADD_MODE
     Disable Control(HC &Print Order Cotação)
End If
//
//
RetrieveCreditMessage(B4303050.RetrieveCreditMessage)
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     SV Form_ Mode -> idFormMode [GENLNG]
     FC ADDRESS NUMBER [DL01] <> szAddressDescription [DL01]
     FC CREDIT MESSAGE [DL01] <> szCreditDescription [DL01]
     VA frm_TSTA_Credit_Msg [TSTA] <- szCreditMessage [TSTA]
//
If VA frm_TSTA_Credit_Msg [TSTA] is equal to <Blank>
     Hide Control(FC CREDIT MESSAGE [DL01])
End If
//
If FC Ship To [SHAN] is not equal to "0"
And SV Form_ Mode is equal to CO ADD_MODE
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          FC Ship To [SHAN] -> mnAddressNumber [AN8]
          FC SHIP TO [DL01] <- szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          "1" -> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If
//
// ==========================================================================
//
//
If SV Form_ Mode is equal to CO ADD_MODE
     //
     // ---------------------------------------------------------------------------
     // A pure ADD is always a base order
     // ---------------------------------------------------------------------------
     //
     Hide Control(FC Change Order [SFXO])
     FC Change Order [SFXO] = "000"
End If
//  SAR 8926760 - Begin
If SV Form_ Mode is equal to CO COPY_MODE
     If FI OrderSuffix [SFXO] is not equal to <Blank>
     And FI OrderSuffix [SFXO] is not equal to <NULL>
          FC Change Order [SFXO] = FI OrderSuffix [SFXO]
     Else
          FC Change Order [SFXO] = "000"
     End If
End If
//  SAR 8926760 - End
If SV Form_ Mode is equal to CO UPDATE_MODE
And FI szDetailSuffix [SFX] is equal to or empty <Blank>
     //
     // ---------------------------------------------------------------------------
     // This branch is designed to execute when View All or Add Change is taken from
     // the Work With Details form
     // ---------------------------------------------------------------------------
     //
     If FI cAddChangeOrder [EV03] is equal to "1"
     Or FI cAddChangeOrder [EV03] is equal to "2"
     Or FI cAddChangeOrder [EV03] is equal to "3"
          If FI cAddChangeOrder [EV03] is equal to "1"
               FC Change Order [SFXO] = "   "
          End If
          If FI cAddChangeOrder [EV03] is equal to "2"
          Or FI cAddChangeOrder [EV03] is equal to "3"
               Hide Control(FC Change Order [SFXO])
               Enable Grid(FC Grid,  <All Rows>, GC ChangeOrder)
               FC Change Order [SFXO] = "*"
          End If
     Else
          FC Change Order [SFXO] = "000"
     End If
End If
//
// ---------------------------------------------------------------------------
// Use the AddChangeOrder field as a flag to indicate that the form is being
// called with change order processing turned on
// Show the appropriate fields. They were previously hidden.
// ---------------------------------------------------------------------------
//
If FI cAddChangeOrder [EV03] is equal to "1"
Or FI cAddChangeOrder [EV03] is equal to "2"
Or FI cAddChangeOrder [EV03] is equal to "3"
     If SV Form_ Mode is not equal to CO ADD_MODE
          If FC Change Order [SFXO] is not equal to "*"
          And SV Form_ Mode is not equal to CO COPY_MODE
               Show Control(FC Change Order [SFXO])
          End If
     End If
End If
//
// ---------------------------------------------------------------------------
// Initialize variables that will track whether or not a form control has been
// changed.
SaveOffProcurementOrderValue(B4303030.SaveOffProcurementOrderValue)
     FC Long Ship To_ALKY [ALKY] -> szALKYToSave [ALKY]
     VA frm_Old_LongShipTo [ALKY] <- szALKYSaved [ALKY]
     FC Ship To [SHAN] -> mnSHANToSave [SHAN]
     VA frm_TempSHAN [SHAN] <- mnSHANSaved1 [SHAN]
     VA frm_Old_ShipTo [SHAN] <- mnSHANSaved2 [SHAN]
     VA frm_Old_ShipToCopy [SHAN] <- mnSHANSaved3 [SHAN]
     FC Branch/Plant1 [MCU] -> szMCUToSave [MCU]
     VA frm_OriginalBP [MCU] <- szMCUSaved1 [MCU]
     VA frm_TempMCU [MCU] <- szMCUSaved2 [MCU]
     FC Address Number [AN8] -> mnAN8ToSave [AN8]
     VA frm_TempAN8 [AN8] <- mnAN8Saved [AN8]
     "0" -> mnDOCOToSave [DOCO]
     VA frm_TempDOCO [DOCO] <- mnDOCOSaved [DOCO]
     FC F4301:Order Type [DCTO] -> szDCTOToSave [DCTO]
     VA frm_TempDCTO [DCTO] <- szDCTOSaved [DCTO]
     FC Change Order [SFXO] -> szSFXOToSave [SFXO]
     VA frm_TempSFX0 [SFXO] <- szSFXOSaved [SFXO]
     FC Order Date [TRDJ] -> jdTRDJToSave [TRDJ]
     VA frm_TempTRDJ [TRDJ] <- jdTRDJSaved [TRDJ]
     FC HOLD Code [HOLD] -> szHOLDToSave [HOLD]
     VA frm_TempHOLD [HOLD] <- szHOLDSaved [HOLD]
     FC Currency Code [CRCD] -> szCRCDToSave [CRCD]
     VA frm_TempCRCD [CRCD] <- szCRCDSaved [CRCD]
     FC To Currency Code [CRDC] -> szCRDCToSave [CRDC]
     VA frm_TempCRDC [CRDC] <- szCRDCSaved [CRDC]
     FC ExchangeRate_CRR [CRR] -> szCRRToSave [CRR]
     VA frm_TempCRR [CRR] <- szCRRSaved [CRR]
     FC Foreign [CRRM] -> cCRRMToSave [CRRM]
     VA frm_TempCRRM [CRRM] <- cCRRMSaved [CRRM]
// =================================================================
// ISSUE 3233 - RBS - Valkiria
// =================================================================
// ISSUE 5876 - RBS - Valkiria
// =================================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     VA frm_FRTH [FRTH] = FC Freight Handling Code [FRTH]
     VA frm_COBR [SHAN] = FC Local Cobrança [SHAN]
     VA frm_ANCR [ANCR] = FC Carrier Number [ANCR]
     VA frm_LocalEntrega [ADD1] = FC LocalEntrega [ADD1]
End If
// =================================================================
// ---------------------------------------------------------------------------
//
//
// SAR 4387003 Begin
If FC Address Number [AN8] is not equal to <Blank>
And SV Form_ Mode is equal to CO UPDATE_MODE
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          FC ADDRESS NUMBER [DL01] <- szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          "1" -> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If
// SAR 4387003 End
//
// SAR    5560411    Begin
If FC Ship To [SHAN] is not equal to <Blank>
And SV Form_ Mode is equal to CO UPDATE_MODE
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          FC Ship To [SHAN] -> mnAddressNumber [AN8]
          FC SHIP TO [DL01] <- szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          "1" -> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If
// SAR    5560411     End
//
// Issue 3707 - Herrera
//
//
VA frm_AcumulaITWTF4311 [ITWT] = 0
If FC Previous Order Number [LDOC] is greater than "0"
And FC Previous Order Type [DCTO] is not equal to <Blank>
     F4311.Select  [Index 1: Doc No, Order Type, + 1]
          FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
          FC Previous Order Number [LDOC] = TK Document (Order No, Invoice, etc.) [DOCO]
          FC Previous Order Type [DCTO] = TK Order Type [DCTO]
     F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
          VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
          VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
     While SV File_IO_Status is equal to CO SUCCESS
          VA frm_AcumulaITWTF4311 [ITWT] = [VA frm_AcumulaITWTF4311 [ITWT]]+[VA frm_ITWTF4311 [ITWT]]
          F4942.Select  [Index 1: ShipmentNumber]
               FC Previous Order Number [LDOC] = TK Document (Order No, Invoice, etc.) [DOCO]
               FC Previous Order Type [DCTO] = TK Order Type [DCTO]
               FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
               VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
          F4942.FetchNext  [Index 1: ShipmentNumber]
               VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
               VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
          If SV File_IO_Status is equal to CO SUCCESS
               F4942.Update  [Index 1: ShipmentNumber]
                    VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
                    VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
                    FC Previous Order Number [LDOC] = TK Document (Order No, Invoice, etc.) [DOCO]
                    FC Previous Order Type [DCTO] = TK Order Type [DCTO]
                    FC Order Company [KCOO] = TK Order Company (Order Number) [KCOO]
                    VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
                    VA frm_ITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
          End If
          F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
               VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
               VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
     End While
End If
F4215.Update  [Index 1: ShipmentNumber]
     VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
     VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
F4941.Select  [Index 1: Shipment Number,Routing Step #]
     VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
F4941.FetchNext  [Index 1: Shipment Number,Routing Step #]
     VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
If SV File_IO_Status is equal to CO SUCCESS
     F4941.Update  [Index 1: Shipment Number,Routing Step #]
          VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
          VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
          VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
End If
// ----------------------------------------------------------------------------
//    SAR 5408970 Begin
//    SAR 3083534 Moved this code from Dialog Is Initialized to Set Focus On
//    Grid.  Unlike the windows, in the web environment the Set Focus On Grid
//    event will not be executed in the Update Mode.  Therefore the code now
//    has been moved to Post Dialog is Initialized event.
// -----------------------------------------------------------------------------
//
If PO szProtectStatusCode [VL10] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC LastStatus, )
     Disable Grid(FC Grid,  <All Rows>, GC NextStatus, )
End If
//
If PO szProtectPriceFlag [VL09] is equal to "1"
     Disable Grid(FC Grid,  <All Rows>, GC UnitPrice, )
     Disable Grid(FC Grid,  <All Rows>, GC ExtendedPrice, )
End If
//
//    Disable Original and Related Order Info
//
Disable Grid(FC Grid,  <All Rows>, GC OriginalLine No)
Disable Grid(FC Grid,  <All Rows>, GC OrigCo)
Disable Grid(FC Grid,  <All Rows>, GC OrigType)
Disable Grid(FC Grid,  <All Rows>, GC OriginalOrder No)
//    SAR 5408970 End
//
//
// -----------------------------------------------------------------------------
// SAR 5509391
// When PO Entry is called from other applications (P31P204 - RelatedOrders
// or P31113 PartsList), if a PRojectNumber is passed in, store the
// Project Number in FC value. Disable, the user entry for OMCU and SUB
// -----------------------------------------------------------------------------
//
If FI mnProjectNumber [PRJM] is not equal to "0"
     FC Project Number [PRJM] = FI mnProjectNumber [PRJM]
End If
// ---------------------------------------------------------------------------
// SAR 6585679 Hide Columns if Subcontract Interface is Active
// ---------------------------------------------------------------------------
// --
If PO cJobProject [EV01] is equal to ("1","2")
     Hide Grid Column(FC Grid, GC Ship ToNumber)
     Hide Grid Column(FC Grid, GC BuyerNumber)
     Hide Grid Column(FC Grid, GC ModTrn)
     Hide Grid Column(FC Grid, GC CarrierNumber)
     Hide Grid Column(FC Grid, GC PlannedEffective)
     Hide Grid Column(FC Grid, GC PromisedDelivery)
     Hide Grid Column(FC Grid, GC Price CatLevel)
     Hide Grid Column(FC Grid, GC DiscountFactor)
     Hide Grid Column(FC Grid, GC Item PriceGroup)
     // SAR 8164296 Enable location and lot if Processing option set to 1
     If PO cDisplayLocationLot [EV01] is not equal to "1"
          Hide Grid Column(FC Grid, GC Location)
          Hide Grid Column(FC Grid, GC Lot/Serial)
     End If
     Hide Grid Column(FC Grid, GC CostRule)
     Hide Grid Column(FC Grid, GC ExtendedVolume)
     Hide Grid Column(FC Grid, GC Vol UoM)
     Hide Grid Column(FC Grid, GC WtUoM)
     Hide Grid Column(FC Grid, GC ExtendedWeight)
     Hide Grid Column(FC Grid, GC Supplier SO)
     Hide Grid Column(FC Grid, GC ER)
     Hide Grid Column(FC Grid, GC SM)
     Hide Grid Column(FC Grid, GC FC)
     Hide Grid Column(FC Grid, GC ProjectNumber)
     Hide Grid Column(FC Grid, GC AgreementExists)
     Hide Grid Column(FC Grid, GC AgreementSupplement)
     Hide Grid Column(FC Grid, GC AgreementNumber)
     Hide Grid Column(FC Grid, GC SubstitutionExists)
     Hide Grid Column(FC Grid, GC ShipmentNumber)
     Hide Grid Column(FC Grid, GC Item FlashMessage)
     //
     // Change tab display to Contract Detail if Subcontract Interface is active.
     Set Tab Page Text(FC Tab Control 673, TP Order Detail, TV Contract Detail)
End If
// ---------------------------------------------------------------------------
// SAR 6585679 End
//
// SAR 8164317 Service units enhancement
// Grid may be customized for versions and the field may not be part of the
// version. To show the field if processing option is set to display.
If PO cDisplayServiceUnits [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC ServiceQuantity)
     Hide Grid Column(FC Grid, GC ServiceUoM)
Else
     Show Grid Column(FC Grid, GC ServiceQuantity)
     Show Grid Column(FC Grid, GC ServiceUoM)
End If
// SAR 6776109 Begin
VA frm_cCostCodeCacheLoaded_EV01 [EV01] = "0"
VA frm_iCostTypeCacheRecNo_INT01 [INT01] = "0"
// SAR 6776109 End
//
// SAR 7012856 Begin - In in HTML and the doing an update to the grid, need to
// set focus to the tab control so that "Set Focus to Grid" event will be run.
// SAR 7048488
If SV Form_ Mode is equal to CO UPDATE_MODE
     Set Control Focus(FC Tab Control 673)
End If
// SAR 7012856 End
//
//
Disable Grid(FC Grid,  <All Rows>, GC SM)
//  SAR 7289329 Begin
Clear Selection(FC Grid)
Set Selection Append Flag(FC Grid,  <Yes>)
If SV Form_ Mode is not equal to CO COPY_MODE
     If FC Change Order [SFXO] is not equal to <Blank>
     And FC Change Order [SFXO] is not equal to <NULL>
     And FC Change Order [SFXO] is not equal to "*"
          Set Selection(FC Grid, "F4311", "SFXO",  <Equal To>, FC Change Order,  <And>)
     End If
     If PO szSuppressClosedLines [VL08] is equal to "1"
          Set Selection(FC Grid, F4311, "NXTR",  <Not Equal To>, "999", <And>)
     End If
Else
     If FI cAddChangeOrder [EV03] is equal to "2"
          Set Selection(FC Grid, F4311, SFXO, <Equal To>, "000", <And>)
     End If
End If
//  SAR 7289329 End
//
// SAR 7868785 - Move the code for setting focus to later in the event so that
// it is not lost during processing, causing an error issue.
If FI SourceOfFormCall [EV01] is equal to "1"
     If VA frm_cTabPage [EV01] is not equal to "2"
          Set Control Focus(FC Long Address Number_ALKY [ALKY])
     End If
End If
//
// SAR# 8352393
// Get the AVCH value from the Supplier Master table for comparison
GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
     FI SupplierNumber [AN8] -> mnAddressNumber [AN8]
     VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
// End SAR# 8352393
// SAR 8500165  Begin
If SV Form_ Mode is equal to CO UPDATE_MODE
     Disable Control(HC &Blanket Release)
End If
// SAR 8500165  End
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelEnabled_EV01 [EV01] is equal to "1"
     // If order info comes from header form, use it and disable to style fields
     If FI OrderNumber [DOCO] is greater than "0"
     And SV Form_ Mode is not equal to CO COPY_MODE
          FC Collection [C9COLL] = FI szCollection [C9COLL]
          FC SeasonCode [C9SEAC] = FI szSeasonCode [C9SEAC]
          FC Season Year [C9SEAY] = FI szSeasonYear [C9SEAY]
          FC Collection Price Effective Date [C9PRDJ] = FI jdCollectionPriceEffDate [C9PRDJ]
          FC COLLECTION [DL01] = FI szCollectionDescription [C9DSC1]
          Press Button(FC Disable Style Fields)
     Else
          If SV Form_ Mode is equal to CO ADD_MODE
               If PO szCollection [C9COLL] is greater than <Blank>
               Or PO szSeasonCode [C9SEAC] is greater than <Blank>
               Or PO szSeasonYear [C9SEAY] is greater than <Blank>
                    FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                         PO szCollection [C9COLL] = TK Collection [C9COLL]
                         PO szSeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                         PO szSeasonYear [C9SEAY] = TK Season Year [C9SEAY]
                         FC COLLECTION [DL01] <- TK Description Line 1 [C9DSC1]
                         FC Collection Price Effective Date [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
                    If SV File_IO_Status is equal to CO SUCCESS
                         FC Collection [C9COLL] = PO szCollection [C9COLL]
                         FC SeasonCode [C9SEAC] = PO szSeasonCode [C9SEAC]
                         FC Season Year [C9SEAY] = PO szSeasonYear [C9SEAY]
                         If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                              FC Collection Price Effective Date [C9PRDJ] = date_today()
                         End If
                    End If
               End If
          Else
               If SV Form_ Mode is equal to CO UPDATE_MODE
                    // Fetch tag table
                    ApparelProcessF41F301T(B41F0060.ApparelProcessF41F301T)
                         FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                         FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
                         FC Order Company [KCOO] -> szCompany [KCOO]
                         FC Collection [C9COLL] <- szCollection [C9COLL]
                         FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
                         FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
                         "2" -> cActionCode [EV01]
                         FC COLLECTION [DL01] <- szCollectionDescription [C9DSC1]
                         "000" -> szOrderSuffix [SFXO]
                         FC Collection Price Effective Date [C9PRDJ] <- jdPriceEffectiveDate [C9PRDJ]
                    Press Button(FC Disable Style Fields)
               Else
                    If SV Form_ Mode is equal to CO COPY_MODE
                         // Fetch tag table with original order
                         ApparelProcessF41F301T(B41F0060.ApparelProcessF41F301T)
                              FI OrderNumber [DOCO] -> mnOrderNumber [DOCO]
                              FI OrderType [DCTO] -> szOrderType [DCTO]
                              FI OrderCompany [KCOO] -> szCompany [KCOO]
                              FC Collection [C9COLL] <- szCollection [C9COLL]
                              FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
                              FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
                              "2" -> cActionCode [EV01]
                              FC COLLECTION [DL01] <- szCollectionDescription [C9DSC1]
                              FI OrderSuffix [SFXO] -> szOrderSuffix [SFXO]
                              FC Collection Price Effective Date [C9PRDJ] <- jdPriceEffectiveDate [C9PRDJ]
                    End If
               End If
          End If
     End If
     VA frm_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
     VA frm_szPrevSeasonCode_C9SEAC [C9SEAC] = FC SeasonCode [C9SEAC]
     VA frm_szPrevSeasonYear_C9SEAY [C9SEAY] = FC Season Year [C9SEAY]
End If
If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Order Date [TRDJ]
Else
     VA frm_jdPriceEffectiveDate_PEFJ [PEFJ] = FC Collection Price Effective Date [C9PRDJ]
End If
// ====================================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 19/11/19 - Inicio
// Preenche originador
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If SV Form_ Mode is equal to CO COPY_MODE
And FI OrderType [DCTO] is equal to "OM"
     VA frm_TAM_GRID [MATH08] = 0
     Get Max Grid Rows(FC Grid, VA frm_TAM_GRID)
     While VA frm_TAM_GRID [MATH08] is greater than "0"
          Clear Grid Buffer(FC Grid)
          Get Grid Row(FC Grid, VA frm_TAM_GRID)
          If GC Ln Ty [LNTY] is not equal to <Blank>
          And GC Ln Ty [LNTY] is not equal to <NULL>
               Copy Grid Row To Grid Buffer(FC Grid, VA frm_TAM_GRID)
               GB Orig Co [OKCO] = FI OrderCompany [KCOO]
               GB Original Order No [OORN] = [FI OrderNumber [DOCO]]
               GB Orig Sfx [OSFX] = FI OrderSuffix [SFXO]
               GB Orig Type [OCTO] = FI OrderType [DCTO]
               GB Original Line No [OGNO] = GC Line Number [LNID]
               GB Last Status [LTTR] = PO szDuplicationLastStatus [A3TR]
               GB Next Status [NXTR] = PO szDuplicationNextStatus [A4TR]
               Delete Grid Row(FC Grid, VA frm_TAM_GRID)
               Insert Grid Buffer Row(FC Grid, VA frm_TAM_GRID, <Yes>, <No>, <Yes>, <Yes>, <Yes>)
          End If
          VA frm_TAM_GRID [MATH08] = [VA frm_TAM_GRID [MATH08]]-1
     End While
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 19/11/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: Order Detail - W4310A
Event: Grid Record is Fetched
Event GUID: f57df3f3-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cLumpsumLine_EV01 [EV01]
----------------------------------------
// ---------------------------------------------------------------------------
// 10/26/2007   TB9051701   8584311- Do not allow to change account
// 02/22/2011   MM9056140  8974177-REPORT CODE NOT COPIED
// distributiion after partial or full reciept .
// 02/01/2008  TB9051701  8668654-Row Exit should not be disabled when there
// is account distribution
// Added functionality:  Change Orders
// In certain cases the Change Order form control acts as a filter on the grid
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is not equal to CO COPY_MODE
     If FC Change Order [SFXO] is equal to or empty <Blank>
          Suppress Grid Line(FC Grid)
          Stop Processing
     End If
End If
//
// ---------------------------------------------------------------------------
// Check for detail associated text
// ---------------------------------------------------------------------------
//
Media Object Structures(GT4311, <Default Media Object>, <Exist>, FC EV03-Detail Generic Text (wf), BC Document (Order No, Invoice, (F4311) etc.), BC Order Company (Order (F4311) Number), ...)
If FC EV03-Detail Generic Text (wf) [EV03] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
End If
//
// ---------------------------------------------------------------------------
//     If defined in processing options then suppress records that are at status
//     999.  Else strike through the extended amount field.
//    --> This only applies if this form is NOT called in copy mode.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is not equal to CO COPY_MODE
     If BC Status Code - Next (F4311.0) [NXTR] is equal to "999"
          // SAR 7289329
          If PO szSuppressClosedLines [VL08] is not equal to "1"
               // SAR 5280443 - Strikeout entire row
               Set Grid Font(FC Grid, <Currently Selected Row>,  <All Columns>, <,Regular,10,Black>)
          End If
     End If
End If
//
//
// ---------------------------------------------------------------------------
//     Display the item number in the primary format & get flash message.
// ---------------------------------------------------------------------------
//
// SAR 6145665 - Always retrieve IVI when GC IVI is blank on update Mode
If BC Line Type (F4311.0) [LNTY] is not equal to VA frm_LNTY_PreviousLineType [LNTY]
Or VA grd_cInventoryInterface_IVI [IVI] is equal to or empty <Blank>
     GetLineTypeConstants(B4000260.GetLineTypeConstants)
          BC Line Type (F4311.0) [LNTY] -> szLineType [LNTY]
          UNDEFINED <> szLineTypeDesc [LNDS]
          UNDEFINED <> szLineTypeDesc2 [LND2]
          UNDEFINED <> cGLInterface [GLI]
          VA grd_cInventoryInterface_IVI [IVI] <- cInventoryInterface [IVI]
          UNDEFINED <> cARInterface [ARI]
          UNDEFINED <> cAPInterface [API]
          UNDEFINED <> cReverseSign [RSGN]
          UNDEFINED <> cTextLine [TXYN]
          UNDEFINED <> cIncludeSalesCOGS [PRFT]
          UNDEFINED <> cIncludeCashDiscount [CDSC]
          UNDEFINED <> cIncludeTax1 [TX01]
          UNDEFINED <> cIncludeTax2 [TX02]
          UNDEFINED <> szGLOffset [GLC]
          UNDEFINED <> cPrintDocument1 [PDC1]
          UNDEFINED <> cPrintDocument2 [PDC2]
          UNDEFINED <> cPrintDocument3 [PDC3]
          UNDEFINED <> cRecordVariance [PDC4]
          UNDEFINED <> cIncludeTotalDocument1 [IDC1]
          UNDEFINED <> cIncludeTotalDocument2 [IDC2]
          UNDEFINED <> cIncludeTotalDocument3 [IDC3]
          UNDEFINED <> cIncludeTotaldocument4 [IDC4]
          UNDEFINED <> cIncludeColumnSalesJournal [CSJ]
          UNDEFINED <> szOrderType [DCTO]
          UNDEFINED <> cApplyRetainage [ART]
          UNDEFINED <> cApplyFreight [AFT]
          UNDEFINED <> cGenerateWorkOrder [GWO]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> cErrorCode [ERR]
          UNDEFINED <> cCallMaterialsIssue [CMI]
     VA frm_LNTY_PreviousLineType [LNTY] = BC Line Type (F4311.0) [LNTY]
End If
//
// ---------------------------------------------------------------------------
//  Check the processing option to validate F0006 (blank) or F41001 ('1').
// ---------------------------------------------------------------------------
//
// ===================================================================
// ISSUE 3233 - Acessa F5543ICO para mostrar no GRID
// ===================================================================
// ISSUE5463 - Acessa F5543ICO para mostrar no GRID - DS40 (Viagens)
// =======================================================
// ISSUE 7065 - Marília - Acessa F5543ICO p/ mostrar EXR no GRID
// =======================================================
// ISSUE 7385 - Acessa F5543ICO p/mostrar no GRID - Descrição 4 (DSCPED)
// =======================================================
// ISSUE 7511 - Herrera - Acessa F5543ICO p/mostrar no GRID - Número Investiment
// =======================================================
// ISSUE 7931- Marília  - troca campo DS40(40)  por  MDSC(55),
//                                          na F5543ICO e GRID
// =======================================================
// ISSUE 251190 - Marília - campos novos = Recarga-BPRC + CartRBS-ACFL
// =======================================================
F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
     BC Order Company (Order Number) (F4301.0) [KCOO] = TK Order Company (Order Number) [KCOO]
     BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     BC Order Type (F4301.0) [DCTO] = TK Order Type [DCTO]
     BC Order Suffix (F4301.0) [SFXO] = TK Order Suffix [SFXO]
     BC Line Number (F4311.0) [LNID] = TK Line Number [LNID]
     GC Local Entrega [ADD1] <- TK Address Line 1 [ADD1]
     GC Requisitante [ADD2] <- TK Address Line 2 [ADD2]
     GC Descrição 3 [MDSC] <- TK User Based Pricing Message Description [MDSC]
     GC Descrição 4 [DSCPED] <- TK Descrição  de Pedido [DSCPED]
     GC Destinatário 1 [AN8] <- TK Address Number [AN8]
     GC Destinatário 2 [AN8] <- TK Address Number - 1st [AN81]
     GC Explanation -Remark- [EXR] <- TK Name - Remark Explanation [EXR]
     GC Número Alocação [N001] <- TK Next Number Range 1 [N001]
     GC Valor 1º. Cotação [FRRC] <- TK Amount - Foreign Unit Price [FRRC]
     GC Orçamento [PRRC] <- TK Amount - Unit Cost [PRRC]
     GC Descrição Família Compras [DSE2] <- TK Description [DSE2]
     FC Enviar E-Mail [EV01] <- TK J.D. EnterpriseOne Event Point 01 [EV01]
     FC email [EMAL] <- TK Electronic Address [EMAL]
If SV File_IO_Status is equal to CO ERROR
     GC Destinatário 1 [AN8] = <Blank>
     GC Destinatário 2 [AN8] = <Blank>
     GC Local Entrega [ADD1] = <Blank>
     GC Descrição 3 [MDSC] = <Blank>
     GC Requisitante [ADD2] = <Blank>
     GC Nome Destinatário 2 [ALPH] = <Blank>
     GC Nome Destinatário 1 [ALPH] = <Blank>
     GC Explanation -Remark- [EXR] = <NULL>
     GC CHIS [CHIS] = <NULL>
     GC Descrição 4 [DSCPED] = <NULL>
     GC Número Alocação [N001] = <NULL>
     GC Descrição Família Compras [DSE2] = <Blank>
     GC Orçamento [PRRC] = <Blank>
Else
     F0101.FetchSingle  [Index 1: Address #]
          GC Destinatário 1 [AN8] = TK Address Number [AN8]
          GC Nome Destinatário 1 [ALPH] <- TK Name - Alpha [ALPH]
     F0101.FetchSingle  [Index 1: Address #]
          GC Destinatário 2 [AN8] = TK Address Number [AN8]
          GC Nome Destinatário 2 [ALPH] <- TK Name - Alpha [ALPH]
End If
// ===================================================================
// ISSUE 3233 - Verifica se item tem PART NUMBER cadastrado para Fornecedor
// ===================================================================
If PO OpcaoCatalogo [EV01] is equal to "1"
Or PO OpcaoSuprimentos [EV01] is equal to "1"
     GetCrossReferenceFields(B4001050.GetCrossReferenceFields)
          FC Branch/Plant [MCU] -> szBranchPlant [MCU]
          VA frm_XRT2 [XRT2] <- szCrossRefTypeSupplier [XRT2]
     GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
          BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
          VA frm_XRT2 [XRT2] <> szCrossReferenceType [XRT]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          FC Order Date [TRDJ] <> jdOrderDate [EXDJ]
          GC Customer/Supplier Item Number [CITM] <> szItemNumber [UITM]
          "1" <> cSuppressErrorMesg [EV01]
End If
//  SAR 7310431 Begin
VA evt_cLumpsumLine_EV01 [EV01] = "0"
If BC Item Number - Short (F4311.0) [ITM] is equal to "0"
Or BC Item Number - Short (F4311.0) [ITM] is equal to <NULL>
     If BC 2nd Item Number (F4311.0) [LITM] is equal to or empty <Blank>
     And BC 3rd Item Number (F4311.0) [AITM] is equal to or empty <Blank>
          VA evt_cLumpsumLine_EV01 [EV01] = "1"
     End If
End If
//  SAR 7310431 End
//  SAR 7310431 Add if conditions
If VA evt_cLumpsumLine_EV01 [EV01] is equal to "0"
     //  SAR    5674961    Begin
     If PO cBranchPlantValidation [EV01] is equal to "1"
          ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
               BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
               BC 2nd Item Number (F4311.0) [LITM] <> sz2ndItemNumber [LITM]
               BC 3rd Item Number (F4311.0) [AITM] <> sz3rdItemNumber [AITM]
               UNDEFINED <> cSymbolShortItem [SYM1]
               UNDEFINED <> cSymbol2ndItem [SYM2]
               UNDEFINED <> cSymbol3rdItem [SYM3]
               BC Business Unit (F4311.0) [MCU] <> szBranchPlant [MCU]
               GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> cErrorCode [ERRC]
               UNDEFINED <> cSuppressErrorMsg [EV01]
               UNDEFINED <> szErrorMsgID [DTAI]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
               VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
               UNDEFINED <> cSymToIdentSegItem [SYM6]
               UNDEFINED <> cSegmentSeparator [SEPS]
     Else
          //
          // SAR 6464957 Begin
          GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
               BC Item Number - Short (F4311.0) [ITM] -> mnShortItemNumber [ITM]
               VA grd_StockingType_STKT [STKT] <- cStockingType [STKT]
          If VA grd_StockingType_STKT [STKT] is equal to "N"
               // SAR 6464957 End
               //
               GC Branch/ Plant [MCU] = BC Business Unit (F4311.0) [MCU]
               VA frm_szBPErrorMsgID_DTAI [DTAI] = <Blank>
               GetBranchConstants(B4000150.GetBranchConstants)
                    GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
                    VA frm_F41001Ptr_GENLNG [GENLNG] <- idF41001LongRowPtr [GENLNG]
                    "1" -> cSuppressErrorMsg [EV01]
                    VA frm_szBPErrorMsgID_DTAI [DTAI] <- szErrorMsgID [DTAI]
               //
               // ---------------------------------------------------------------------------
               //  If the business unit does not have a F41001 record, i.e., is not a
               // branch/plant, szErrorMsgID will be populated.
               // ---------------------------------------------------------------------------
               //
               If VA frm_szBPErrorMsgID_DTAI [DTAI] is not equal to <Blank>
                    //
                    // ---------------------------------------------------------------------------
                    //  Exception: if business unit does is validated with F0006 (not F41001), and
                    // the business unit does not have a F41001 record, and the stocking type is
                    // 'N', the primary item number should be fetched based on the item number
                    // identifiers for branch/plant ALL.
                    // ---------------------------------------------------------------------------
                    //
                    ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                         BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
                         BC 2nd Item Number (F4311.0) [LITM] <> sz2ndItemNumber [LITM]
                         BC 3rd Item Number (F4311.0) [AITM] <> sz3rdItemNumber [AITM]
                         UNDEFINED <> cSymbolShortItem [SYM1]
                         UNDEFINED <> cSymbol2ndItem [SYM2]
                         UNDEFINED <> cSymbol3rdItem [SYM3]
                         "         ALL" -> szBranchPlant [MCU]
                         GC Item Number [UITM] <- szPrimaryItemNumber [UITM]
                         UNDEFINED <> cSymbolidentifier [SYMID]
                         UNDEFINED <> cErrorCode [ERRC]
                         UNDEFINED <> cSuppressErrorMsg [EV01]
                         UNDEFINED <> szErrorMsgID [DTAI]
                         UNDEFINED <> idPtrToF41001Record [GENLNG]
                         VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                         VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
                         UNDEFINED <> szSegment2 [SEG2]
                         UNDEFINED <> szSegment3 [SEG3]
                         UNDEFINED <> szSegment4 [SEG4]
                         UNDEFINED <> szSegment5 [SEG5]
                         UNDEFINED <> szSegment6 [SEG6]
                         UNDEFINED <> szSegment7 [SEG7]
                         UNDEFINED <> szSegment8 [SEG8]
                         UNDEFINED <> szSegment9 [SEG9]
                         UNDEFINED <> szSegment10 [SEG0]
                         VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
                         UNDEFINED <> cSymToIdentSegItem [SYM6]
                         UNDEFINED <> cSegmentSeparator [SEPS]
               Else
                    ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                         BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
                         BC 2nd Item Number (F4311.0) [LITM] <> sz2ndItemNumber [LITM]
                         BC 3rd Item Number (F4311.0) [AITM] <> sz3rdItemNumber [AITM]
                         UNDEFINED <> cSymbolShortItem [SYM1]
                         UNDEFINED <> cSymbol2ndItem [SYM2]
                         UNDEFINED <> cSymbol3rdItem [SYM3]
                         BC Business Unit (F4311.0) [MCU] <> szBranchPlant [MCU]
                         GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
                         UNDEFINED <> cSymbolidentifier [SYMID]
                         UNDEFINED <> cErrorCode [ERRC]
                         UNDEFINED <> cSuppressErrorMsg [EV01]
                         UNDEFINED <> szErrorMsgID [DTAI]
                         UNDEFINED <> idPtrToF41001Record [GENLNG]
                         VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                         VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
                         UNDEFINED <> szSegment2 [SEG2]
                         UNDEFINED <> szSegment3 [SEG3]
                         UNDEFINED <> szSegment4 [SEG4]
                         UNDEFINED <> szSegment5 [SEG5]
                         UNDEFINED <> szSegment6 [SEG6]
                         UNDEFINED <> szSegment7 [SEG7]
                         UNDEFINED <> szSegment8 [SEG8]
                         UNDEFINED <> szSegment9 [SEG9]
                         UNDEFINED <> szSegment10 [SEG0]
                         VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
                         UNDEFINED <> cSymToIdentSegItem [SYM6]
                         UNDEFINED <> cSegmentSeparator [SEPS]
               End If
               FreePtrToDataStructure(B4000460.FreePtrToDataStructure)
                    VA frm_F41001Ptr_GENLNG [GENLNG] -> idGenericLong [GENLNG]
          Else
               ReturnPrimaryItemNumber(X4101.ReturnPrimaryItemNumber)
                    BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
                    BC 2nd Item Number (F4311.0) [LITM] <> sz2ndItemNumber [LITM]
                    BC 3rd Item Number (F4311.0) [AITM] <> sz3rdItemNumber [AITM]
                    UNDEFINED <> cSymbolShortItem [SYM1]
                    UNDEFINED <> cSymbol2ndItem [SYM2]
                    UNDEFINED <> cSymbol3rdItem [SYM3]
                    BC Business Unit (F4311.0) [MCU] <> szBranchPlant [MCU]
                    GC Item Number [UITM] <> szPrimaryItemNumber [UITM]
                    UNDEFINED <> cSymbolidentifier [SYMID]
                    UNDEFINED <> cErrorCode [ERRC]
                    UNDEFINED <> cSuppressErrorMsg [EV01]
                    UNDEFINED <> szErrorMsgID [DTAI]
                    UNDEFINED <> idPtrToF41001Record [GENLNG]
                    VA grd_szMatrixTemplate_TMPL [TMPL] <- szTemplate [TMPL]
                    VA grd_szMatrixSegment_SEG1 [SEG1] <- szSegment1 [SEG1]
                    UNDEFINED <> szSegment2 [SEG2]
                    UNDEFINED <> szSegment3 [SEG3]
                    UNDEFINED <> szSegment4 [SEG4]
                    UNDEFINED <> szSegment5 [SEG5]
                    UNDEFINED <> szSegment6 [SEG6]
                    UNDEFINED <> szSegment7 [SEG7]
                    UNDEFINED <> szSegment8 [SEG8]
                    UNDEFINED <> szSegment9 [SEG9]
                    UNDEFINED <> szSegment10 [SEG0]
                    VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
                    UNDEFINED <> cSymToIdentSegItem [SYM6]
                    UNDEFINED <> cSegmentSeparator [SEPS]
          End If
     End If
End If
//  SAR    5674961    End
//
// =======================================================
//
// ---------------------------------------------------------------------------
//     Load the transaction work fields with the foreign price and
//     extended price or the domestic price, depending on the mode.
// ---------------------------------------------------------------------------
//
If FC Foreign [CRRM] is equal to "F"
And SL CurrencyProcessing is not equal to "N"
     GC Unit Cost [UPAX] = BC Amount - Foreign Unit Price (F4311.0) [FRRC]
     GC Extended Cost [AEXPE1] = [BC Amount - Foreign Extended Price (F4311.0) [FEA]]+[BC Amount - Foreign Changed Amount (F4311.0) [FCHG]]
Else
     GC Unit Cost [UPAX] = BC Amount - Unit Cost (F4311.0) [PRRC]
     GC Extended Cost [AEXPE1] = [BC Amount - Extended Price (F4311.0) [AEXP]]+[BC Amount - On Hold (F4311.0) [ACHG]]
End If
//
// SAR 7189184
VA grd_OldExtendedCost [AEXPE1] = GC Extended Cost [AEXPE1]
GC PRRCE1:Old Unit Price (wf) [PRRCE1] = GC Unit Cost [UPAX]
GC Quantity Ordered [UORGE1] = [BC Units - Order/Transaction Quantity (F4311.0) [UORG]]+[BC Units - On Hold (F4311.0) [UCHG]]
//
// ==========================================================================
//
// ---------------------------------------------------------------------------
//    The extended amount of a line is added to the total amount only if that
//    line has NOT been closed (i.e at a status of 999) and the processing
//    options to suppress closed lines has NOT been set to a '1'. OR, this order
//    is in copy mode, in which case the first two conditions are ignored (i.e.
//    all the lines are totalled when in copy mode.
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// SAR 5952246 Uncomment code for Preserved Manual Adjustments
// ---------------------------------------------------------------------------
//
If BC Status Code - Next (F4311.0) [NXTR] is not equal to "999"
And PO szSuppressClosedLines [VL08] is not equal to "1"
Or SV Form_ Mode is equal to CO COPY_MODE
     GC TOT1:Previous Line Total(wf) [TOT1] = GC Extended Cost [AEXPE1]
End If
//
// =========================================================================
//
// ---------------------------------------------------------------------------
//     Take the GL date from the first detail line as default when in
//     change mode.  In add mode the default date is TODAY's date.
// ---------------------------------------------------------------------------
//
If VA frm_DGL_GLDate [DGL] is equal to or empty Null Date
     VA frm_DGL_GLDate [DGL] = BC Date - For G/L (and Voucher) (F4311.0) [DGL]
End If
//
// ---------------------------------------------------------------------------
// If the form is in Copy Mode, Default G/L Date to Today's Date
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_DGL_GLDate [DGL] = date_today()
End If
//
// ---------------------------------------------------------------------------
//     Do not allow modification of the line type
//     when the order is being changed.  The user must cancel the
//     existing line and add a new line.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     Disable Grid(FC Grid, <Current Row>, GC LnTy, )
     Disable Grid(FC Grid,  <Current Row>, GC LineNumber)
End If
//
// ---------------------------------------------------------------------------
// Do not allow modification of the SFX0- Change Order either
// ---------------------------------------------------------------------------
//
If FI cAddChangeOrder [EV03] is not equal to "3"
     Disable Grid(FC Grid, <Current Row>, GC ChangeOrder)
End If
//
// ---------------------------------------------------------------------------
//     This is an existing line being loaded - therefore set the default
//     line action code to be 'C' for change.  This is used in EditLine.
// ---------------------------------------------------------------------------
// Change Order processing.  If the row exit copy change order has been taken,
// then  the form is in update mode, but this flag needs to be set to 'I'.
// ---------------------------------------------------------------------------
//
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     If FI cAddChangeOrder [EV03] is equal to "3"
     Else
          GC ACTN:Action Code (wf) [ACTN] = "C"
     End If
End If
//
// ==========================================================================
//
// ---------------------------------------------------------------------------
//     Disable grid rows at or beyond the status code in the processing options.
//    ---> only if not in copy mode.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is not equal to CO COPY_MODE
     If BC Status Code - Next (F4311.0) [NXTR] is greater than or equal to PO szLastStatusAllowingChange [A1TR]
     And PO szLastStatusAllowingChange [A1TR] is not equal to <Blank>
          GC EV03-ProtectedLine(1/0) [EV03] = "1"
          Disable Grid(FC Grid, <Current Row>, <All Columns>, )
     Else
          GC EV03-ProtectedLine(1/0) [EV03] = "0"
     End If
End If
// ===============================================================
//
// SAR    5169139    Begin
//
VA frm_AssetErrorNumber_DTAI [DTAI] = <Blank>
If BC Serial Number (F4311.0) [ASID] is not equal to <Blank>
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          BC Serial Number (F4311.0) [ASID] <> szPrimaryAssetNumber [ASII]
          <Blank> -> cSymbolIdentifier [SYMID]
          "1" -> cSuppressErrorMessages [EV02]
          VA frm_AssetErrorNumber_DTAI [DTAI] <- szErrorMessageID [DTAI]
     GC Asset ID [ASII] = BC Serial Number (F4311.0) [ASID]
End If
//
//  SAR    5169139    End
//
//
// ---------------------------------------------------------------------------
// Advanced Pricing B733 7/98
// ---------------------------------------------------------------------------
//
// SAR 7507947 - Conditioned the value of VA grd_ASN_AdjSchedule like if the
// form is in Update mode , this variable has to get value of changed
// Supplier.
If SV Form_ Mode is equal to CO UPDATE_MODE
And PO cHeaderFirstCode [EV03] is equal to "1"
     GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          VA grd_ASN_AdjSchedule [ASN] <- szPriceAdjustmentSchedule [ASN]
Else
     VA grd_ASN_AdjSchedule [ASN] = BC Price and Adjustment Schedule (F4311.0) [ASN]
End If
VA grd_AREV_AdjRevisionLevel [AREV] = "0"
VA grd_PS08_cFreeGoodIndicator [PS08] = BC Purchase Order Status 08 (F4311.0) [PS08]
//
// =======================================================
// Call N4301610 to retrieve the cost objects and types.
//
//
If VA frm_CO01_CostMgmtFlag [CO01] is equal to "1"
Or VA frm_cTransportationInstalled [EV01] is equal to "1"
     F4311TGetPODetailTagRecord(N4301610.F4311TGetPODetailTagRecord)
          BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompanyKeyOrderNo [KCOO]
          BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          BC Order Type (F4301.0) [DCTO] -> szOrderType [DCTO]
          BC Order Suffix (F4311.0) [SFXO] -> szOrderSuffix [SFXO]
          BC Line Number (F4311.0) [LNID] -> mnLineNumber [LNID]
          UNDEFINED <- mnAmountRetained [RETA]
          UNDEFINED <- mnAmountDeferredTaxOnRetainage [RETT]
          UNDEFINED <- mnAmountForeignRetained [REFA]
          UNDEFINED <- mnAmountForeignDeferredTaxOnRe [REFT]
          UNDEFINED <- szCurrencyCodeFrom [CRCD]
          UNDEFINED <- szCurrencyCodeTo [CRDC]
          GC Cost Object Type 1 [ABT1] <- cManagerialAnalysisType1 [ABT1]
          GC Cost Object 1 [ABR1] <- szManagerialAnalysisCode1 [ABR1]
          GC Cost Object Type 2 [ABT2] <- cManagerialAnalysisType2 [ABT2]
          GC Cost Object 2 [ABR2] <- szManagerialAnalysisCode2 [ABR2]
          GC Cost Object Type 3 [ABT3] <- cManagerialAnalysisType3 [ABT3]
          GC Cost Object 3 [ABR3] <- szManagerialAnalysisCode3 [ABR3]
          GC Cost Object Type 4 [ABT4] <- cManagerialAnalysisType4 [ABT4]
          GC Cost Object 4 [ABR4] <- szManagerialAnalysisCode4 [ABR4]
End If
// SAR 8584311- Do not allow the user to change account distribution once he s
// done a partial or full reciept.
//
// SAR 8668654-Row Exit should not be disabled when there is a line that
// contains Multiple Account Distribution.
! If BC Amount - Received (F4311.0) [AREC] is greater than "0"
! OrBC Amount - Received Foreign (F4311.0) [FREC] is greater than "0"
! OrBC Units - Received (F4311.0) [UREC] is greater than "0"
     ! Disable Control(HC Account Distribution)
! End If
// ---------------------------------------------------------------------------
// SAR 5565764 Property Management - UK Localization
// ---------------------------------------------------------------------------
//
GC Property Unit Number [UNIT] = BC Reference 2 (F4311.0) [VR02]
//
// SAR 7139241 Begin - Added the Plan and Elevation to the grid and they
// should be disabled.
Disable Grid(FC Grid,  <All Rows>, GC Plan)
Disable Grid(FC Grid, <All Rows>, GC Elevation)
// SAR 7139241 End
//
// SAR# 8352393
//
// Update Mode
// Get the AVCH value from the Supplier Master table for comparison
//
GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
     FI SupplierNumber [AN8] -> mnAddressNumber [AN8]
     VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
//
// If the selected supplier has an evaluated receipt value of "N" we will
// never allow that value to be over-ridden
//
If VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] is equal to "N"
     Disable Grid(FC Grid,  <All Rows>, GC ER)
Else
     Enable Grid(FC Grid,  <All Rows>, GC ER)
End If
//
// End SAR# 8352393
// SAR 8974177 Begin
If SV Form_ Mode is equal to CO COPY_MODE
     VA frm_Prev_ItemNumber [UITM] = GC Item Number [UITM]
End If
// SAR 8974177 End

=============================================
Form: Order Detail - W4310A
Event: Write Grid Line-Before
Event GUID: 909329db-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnPurchasingEffectDay_PEFD [PEFD]
evt_SavedPromisedDeliveryDate [DATE1]
evt_szOTMState_OTSTATE2 [OTSTATE2]
----------------------------------------
//
// //
// **********************************************************************
// 8692806 - On inquiry, if the line is an OTM qualified line, disable
// transportation related fields. If a freight request has already been
// staged, mark the grid line to indicate that
// ***********************************************************************
GC FR Sent [OTFRSENT] = "0"
If GC ACTN:Action Code (wf) [ACTN] is not equal to "1"
And GC ACTN:Action Code (wf) [ACTN] is not equal to "A"
     If VA frm_cOTMInstalled_EV01 [EV01] is equal to "1"
          ProcessF49T311Data(B49T0720.ProcessF49T311Data)
               "1" -> cSuppressErrorMessage [SUPPS]
               "I" -> cActionCode [ACTI]
               "5" -> mnNumberKeys [NKEYS]
               "1" -> cIndexNumber [EV01]
               BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               BC Order Type (F4311.0) [DCTO] -> szOrderType [DCTO]
               BC Order Company (Order Number) (F4311.0) [KCOO] -> szCompanyKeyOrderNo [KCOO]
               BC Order Suffix (F4311.0) [SFXO] -> szOrderSuffix [SFXO]
               BC Line Number (F4311.0) [LNID] -> mnLineNumber [LNID]
               VA evt_szOTMState_OTSTATE2 [OTSTATE2] <- szOTMState2 [OTSTATE2]
          If SV Error_Status is not equal to CO ERROR
               Disable Grid(FC Grid,  <Currently Selected Row>, GC CarrierNumber)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ModTrn)
               Disable Grid(FC Grid, <Currently Selected Row>, GC ShipmentNumber)
               If VA evt_szOTMState_OTSTATE2 [OTSTATE2] is not equal to <Blank>
               And VA evt_szOTMState_OTSTATE2 [OTSTATE2] is not equal to <NULL>
                    Set Grid Font(FC Grid,  <Currently Selected Row>, GC FRSent, <,Bold,12,Black>)
                    GC FR Sent [OTFRSENT] = "1"
               End If
          End If
     End If
End If
// ---------------------------------------------------------------------------
// Protect entire form, if prohibit chages to Base Order Processing Option is
// activated.
// ---------------------------------------------------------------------------
//  Do not disable header fields in copy mode.
// ---------------------------------------------------------------------------
//
//  SAR  5882938  Begin
If PO cProhibitChanges [EV01] is equal to "1"
And BC Order Suffix (F4311.0) [SFXO] is equal to "000"
And SV Form_ Mode is not equal to CO COPY_MODE
     //  SAR  5882938  End
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC F4301:Order Type [DCTO])
     Disable Control(FC Order Company [KCOO])
     Disable Control(FC Branch/Plant1 [MCU])
     Disable Control(FC Address Number [AN8])
     Disable Control(FC Long Address Number_ALKY [ALKY])
     Disable Control(FC Ship To [SHAN])
     Disable Control(FC Long Ship To_ALKY [ALKY])
     Disable Control(FC Order Date [TRDJ])
     Disable Control(FC Currency Code [CRCD])
     Disable Control(FC ExchangeRate_CRR [CRR])
     Disable Control(FC Foreign [CRRM])
     Disable Control(FC HOLD Code [HOLD])
     Disable Control(FC Change Order [SFXO])
     // =======================================================
     //  ISSUE 3233 - Desabilita os campos de Local Cobr., Frete, Carrier
     // =======================================================
     If PO OpcaoSuprimentos [EV01] is equal to "1"
     Or PO OpcaoCatalogo [EV01] is equal to "1"
          Show Control(FC Carrier Number [ANCR])
          Show Control(FC Freight Handling Code [FRTH])
          Show Control(FC Local Cobrança [SHAN])
          Disable Control(FC Local Cobrança [SHAN])
          Disable Control(FC Carrier Number [ANCR])
          Disable Control(FC Freight Handling Code [FRTH])
          Disable Control(FC LocalEntrega [ADD1])
     Else
          Hide Control(FC Carrier Number [ANCR])
          Hide Control(FC Freight Handling Code [FRTH])
          Hide Control(FC Local Cobrança [SHAN])
          Hide Control(FC LocalEntrega [ADD1])
     End If
     //    SAR 5660446 - Disable just the currently selected row, not all rows
     // SAR 7732167 - Begin
     // SAR 8758836 - Grid should not be disabled because user should be able to
     // take row exit to account distribution. Hence reverted SAR 7732167
     Disable Grid(FC Grid,  <Currently Selected Row>, <All Columns>)
     ! Disable Control(FC Grid)
     // SAR 7732167 - End
     //
     // SAR 8164296
     Press Button(FC Disable Additonal Properties)
     Press Button(FC Disable Category Code)
End If
//
//
// SAR 7448043 Begin
LoadGCValuesByMode(B4302940.LoadGCValuesByMode)
     BC Address Number - Ship To (F4311.0) [SHAN] -> mnAddressNumberShipTo [SHAN]
     BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] -> mnDocumentNumber [DOCO]
     BC Line Number (F4311.0) [LNID] -> mnBCLineNumber [LNID]
     BC Location (F4311.0) [LOCN] -> szBCLocation [LOCN]
     BC Order Company (Order Number) (F4301.0) [KCOO] -> szOrderCompany [KCOO]
     BC Order Suffix (F4311.0) [SFXO] -> szOrderSuffix [SFXO]
     BC Order Type (F4301.0) [DCTO] -> szBCOrderType [DCTO]
     FI cAddChangeOrder [EV03] -> cAddChangeOrder [EV01]
     FI szDetailSuffix [SFX] -> szDetailSuffix [SFXO]
     PO szDuplicationLastStatus [A3TR] -> szDuplicationLastStatus [A3TR]
     PO szDuplicationNextStatus [A4TR] -> szDuplicationNextStatus [A4TR]
     FC Modification No. [CORD] <> mnModificationNo [CORD]
     FC Transfer/Direct Ship Flag [PS01] <> cFCTransferDirectShip [PS01]
     GC Actual Ship Date [ADDJ] <> jdActualShipDate [ADDJ]
     GC Branch/ Plant [MCU] -> szBranchPlant [MCU]
     GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
     GC Change Order [SFXO] <> szChangeOrder [SFXO]
     GC G/L Date [DGL] <> jdGLDate [DGL]
     GC It Mg [IFLA] <- szItMg [IFLA]
     GC Item Flash Message [DL01] <- szItemFlashMessage [DL01]
     GC Last Status [LTTR] <> szLastStatus [LTTR]
     GC Line Number [LNID] <> mnGCLineNumber [LNID]
     GC Next Status [NXTR] <> szNextStatus [NXTR]
     GC Line Revision Number [CHLN] <> mnOrderRevisionLineNo [CHLN]
     GC Orig Co [OKCO] <> szOrigCo [OKCO]
     GC Original Line No [OGNO] <> mnOriginalLineNo [OGNO]
     GC Original Order No [OORN] <> szGCOriginalOrderNo [OORN]
     GC Original SFXO (wf) [SFX] <> szOriginalSFXO [SFXO]
     GC Orig Type [OCTO] <> szOrigType [OCTO]
     GC Planned Effective [DLEJ] <> jdPlannedEffective [DLEJ]
     GC Effective Date [PEFJ] <> jdPriceEffective [PEFJ]
     GC Project Number [PRJM] <> mnProjectNumber [PRJM]
     GC Promised Delivery [PDDJ] <> jdPromisedDelivery [PDDJ]
     GC Request Date [DRQJ] <> jdRequestDate [DRQJ]
     GC Order Revision Number [CORD] <> mnRevisionNumber [CORD]
     GC Ship To Number [SHAN] -> mnShipToNumber [SHAN]
     GC Short Item No [ITM] -> mnShortItemNo [ITM]
     GC Transfer/ Direct Ship Flag [PS01] -> cGCTransferDirectShip [PS01]
     GC Unique Key ID [UKID] <> mnUniqueKeyID [UKID]
     VA frm_ConfigPrevValSet [EV01] <> cConfigPrevValSet [EV01]
     VA frm_EV11_KitsProcessed [EV11] <> cKitsProcessed [EV11]
     VA frm_OriginalOrderCompany_OKCO [OKCO] <> szOriginalOrderCompany [OKCO]
     VA frm_OriginalOrderNo [OORN] <> szVAOriginalOrderNo [OORN]
     VA frm_OriginalOrderType_OCTO [OCTO] <> szOriginalOrderType [OCTO]
     VA frm_P32942ConfigItemCall [EV01] <> cConfigItemCall [EV01]
     VA frm_TempStockingType_STKT [STKT] <- cTempStockingType [STKT]
     VA grd_cMatrixControlled_MIC [MIC] <- cMatrixControlled [MIC]
     VA grd_StockingType_STKT [STKT] -> cStockingType [STKT]
     VA grd_szMatrixSegment_SEG1 [SEG1] <- szMatrixSegment [SEG1]
     VA grd_szMatrixTemplate_TMPL [TMPL] <- szMatrixTemplate [TMPL]
     SV Form_ Mode -> idFormMode [GENLNG]
     GC Location [LOCNE1] <> szGCLocation [LOCN]
// SAR 7448043 End
//
// ---------------------------------------------------------------------------
//     If any header value has changed, populate the header values to each grid
//     row.
// ---------------------------------------------------------------------------
//
If VA frm_HeaderValuesChanged [EV01] is equal to "1"
     //
     // ---------------------------------------------------------------------------
     // Load changed header values to grid when Processing Option is blank
     // ---------------------------------------------------------------------------
     //
     // SAR 4475855, 5377085, 5745976, 558795 Begins
     If BC Status Code - Next (F4311.0) [NXTR] is less than PO szLastStatusAllowingChange [A1TR]
     Or PO szLastStatusAllowingChange [A1TR] is equal to or empty <Blank>
          // SAR 7099904
          ! If GC Promised Delivery [PDDJ] is not equal to BC Date - Scheduled Pick (F4301.0) [PDDJ]
               ! FetchF4102ItemBranchRecordByBU(N4901670.FetchF4102ItemBranchRecordByBU)
               !      GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
               !      GC Branch/ Plant [MCU] -> szCostCenter [MCU]
               !      VA evt_mnPurchasingEffectDay_PEFD [PEFD] <- mnPurchasingEffectiveDays [PEFD]
               ! // SAR 7141594 - Condition checking the non zero purchasing effective days was
               ! //  removed.
               ! GC Planned Effective [DLEJ] = add_days([BC Date - Scheduled Pick (F4301.0) [PDDJ]], [VA evt_mnPurchasingEffectDay_PEFD [PEFD]])
          ! End If
          // SAR 7099904
          // SAR 8482147 - Save the Promised delivery date before loading PO
          // Headervalues
          VA evt_SavedPromisedDeliveryDate [DATE1] = GC Promised Delivery [PDDJ]
          LoadChangedPOHeaderValues(N4301390.LoadChangedPOHeaderValues)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompanyKey [KCOO]
               FC Address Number [AN8] <> mnSupplier [AN8]
               GC Ship To Number [SHAN] <> mnShipTo [SHAN]
               GC Projeto Rubrica [VR01] <> szSupplierSO [VR01]
               GC Centro de Respons. [VR02] <> szReference2 [VR02]
               GC Print Message [INMG] <> szPrintMessage [INMG]
               GC Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
               GC Tax Rate/Area [TXA1] <> szTaxArea [TXA1]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
               GC Request Date [DRQJ] <> jdDateRequested [DRQJ]
               GC Promised Delivery [PDDJ] <> jdPromisedDeliveryDate [PDDJ]
               GC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
               GC Pymt Terms [PTC] <> szPaymentTerms [PTC]
               GC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
               GC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
               GC E R [AVCH] <> cEvaluatedReceipt [AVCH]
               GC Cost Rule [PDP5] <> szLandedCost [PRP5]
               GC S M [CRMD] <> cCorrespondenceMethod [CRMD]
          // SAR 8617873 Begin
          // Validate payment terms from F0014
          // SAR 8938306 - Passed GC Pymt Terms to szPaymenttermscode01
          ! IsColumnInPymtTermsTable(ISCOLPT.IsColumnInPymtTermsTable)
          !      GC Pymt Terms [PTC] -> szBehaviorEditString [BHVREDTST]
          !      GC Pymt Terms [PTC] -> szDescription001 [DL01]
          IsColumnInPymtTermsTable(ISCOLPT.IsColumnInPymtTermsTable)
               GC Pymt Terms [PTC] -> szBehaviorEditString [BHVREDTST]
               <NULL> <> szDescription001 [DL01]
               GC Pymt Terms [PTC] -> szPaymenttermscode01 [PTC]
          //
          // SAR 8482147 - Change Planned Effective date only when promised delivery
          // date is changed in header. Moved the code which was above load changed PO
          // header values to here and added the if condition.
          If VA evt_SavedPromisedDeliveryDate [DATE1] is not equal to GC Promised Delivery [PDDJ]
               // SAR 942640 Begin commented the below if GC PromisedDelivery is not equal
               
               // to BC Date - Scheduled (F4301) Pick
               ! If GC Promised Delivery [PDDJ] is not equal to BC Date - Scheduled Pick (F4301.0) [PDDJ]
                    FetchF4102ItemBranchRecordByBU(N4901670.FetchF4102ItemBranchRecordByBU)
                         GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
                         GC Branch/ Plant [MCU] -> szCostCenter [MCU]
                         VA evt_mnPurchasingEffectDay_PEFD [PEFD] <- mnPurchasingEffectiveDays [PEFD]
                    // SAR 7141594 - Condition checking the non zero purchasing effective days was
                    // removed
                    GC Planned Effective [DLEJ] = add_days([BC Date - Scheduled Pick (F4301.0) [PDDJ]], [VA evt_mnPurchasingEffectDay_PEFD [PEFD]])
               ! End If
          End If
          GC Actual Ship Date [ADDJ] = FI ActualDeliveryDate [ADDJ]
     End If
     // SAR 4475855, 5377085, 5745976, 558795 Ends
     //
     PopulateAddressNumber(B4303010.PopulateAddressNumber)
          VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
          FC Address Number [AN8] -> mnSupplierNumber [AN8]
          FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
          FC ADDRESS NUMBER [DL01] <- szSupplierDescription [DL01]
          FC Ship To [SHAN] -> mnShipToNumber [SHAN]
          FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
          FC SHIP TO [DL01] <- szShipToDescription [DL01]
     //
     Show Control(FC POPULATE HEADER TO DETAIL)
     //
     Disable Control(HC Cancel/Close)
End If
//
//
//  SAR  6585679  Begin
// When the ProtectAccountNumber processing option is activated, account
// number grid fields should be disabled if the line has been partially or
// fully received/vouchered.
If PO cProtectAccountNumber [EV01] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
     If BC Amount - Received (F4311.0) [AREC] is not equal to "0"
     Or BC Amount - Received Foreign (F4311.0) [FREC] is not equal to "0"
     Or BC Units - Received (F4311.0) [UREC] is not equal to "0"
          Disable Grid(FC Grid,  <Currently Selected Row>, GC Account Number)
          Disable Grid(FC Grid, <Currently Selected Row>, GC CostCenter)
          Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
          Disable Grid(FC Grid, <Currently Selected Row>, GC Subledger)
          Disable Grid(FC Grid, <Currently Selected Row>, GC SubType)
     End If
End If
//  SAR  6585679  End
//
// SAR 7119830 Begin
// Populate the display and work variables in order to have  Multiple Accounts
// notification display correctly and populate the Edit Line call correctly.
If GC Multiple Accounts [MACT] is equal to "1"
     VA grd_MultipleAccounts_ANI [ANI] = GC Account Number [ANI]
     VA grd_MultipleAccounts_OMCU [OMCU] = GC Business Unit [OMCU]
     VA grd_MultipleAccounts_OBJ [OBJ] = GC Obj Acct [OBJ]
     VA grd_MultipleAccounts_SUB [SUB] = GC Sub  [SUB]
     VA grd_MultipleAccounts_SBLT [SBLT] = GC Sub Type [SBLT]
     VA grd_MultipleAccounts_SBL [SBL] = GC Subledger [SBL]
     //
     // populate the display columns
     GC Account Number [ANI] = TV *** ACCOUNT DISTRIBUTION ***
     GC Business Unit [OMCU] = <Blank>
     GC Obj Acct [OBJ] = <Blank>
     GC Sub  [SUB] = <Blank>
     GC Sub Type [SBLT] = <Blank>
     GC Subledger [SBL] = <Blank>
End If
// SAR 7119830 End
//
// 13426728 Begin
GC Previous Cost Center [OMCU] = GC Business Unit [OMCU]
GC Previous Account Number [ANI] = GC Account Number [ANI]
GC Previous Obj Acct [OBJ] = GC Obj Acct [OBJ]
GC Previous Sub [SUB] = GC Sub  [SUB]
//
// 13426728 Ends
//
// SAR #7875934 begin - changed IF condition below
// When PO is generated from Requisition Self Service or has a associated
// Harvest (F40G03) disable UOM from being changed.
If BC Purchase Order Status 02 (F4311.0) [PS02] is equal to ("2","3")
Or BC Vessel ID (F4311.0) [WVID] is greater than "0"
     Disable Grid(FC Grid,  <Currently Selected Row>, GC Tr.UoM)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Pu.UoM)
     Disable Grid(FC Grid, <Currently Selected Row>, GC SecUoM)
End If
//
// SAR #8352393
// If the selected supplier has an evaluated receipt value of "N" we will
// ever allow that value to be over-ridden
If VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] is equal to "N"
     Disable Grid(FC Grid,  <All Rows>, GC ER)
Else
     Enable Grid(FC Grid,  <All Rows>, GC ER)
End If
// End SAR #8352393
//
// SAR #8692806
// On an update of an OTM order carrier/shipment number and MOT are disabled.
If VA frm_cOTMInstalled_EV01 [EV01] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
     If GC Item Number [UITM] is not equal to <NULL>
     And GC Quantity Ordered [UORGE1] is not equal to "0"
     And GC Item Number [UITM] is not equal to "0"
          VA frm_szConcatLnty_DTAI [DTAI] = concat([FC F4301:Order Type [DCTO]], [GC Ln Ty [LNTY]])
          GetUDC(X0005.GetUDC)
               "49" -> szSystemCode [SY]
               "TP" -> szRecordTypeCode [RT]
               VA frm_szConcatLnty_DTAI [DTAI] -> szUserDefinedCode [KY]
               "1" -> cSuppressErrorMessage [EV01]
               VA frm_szOTMErrorMsg_DTAI [DTAI] <- szErrorMessageId [DTAI]
          If VA frm_szOTMErrorMsg_DTAI [DTAI] is equal to <Blank>
               If BC Item Number - Related (Kit) (F4311.0) [RLIT] is equal to <Blank>
                    GC Carrier Number [ANCR] = <Blank>
                    GC Mod Trn [MOT] = <Blank>
                    GC Shipment Number [SHPN] = <Blank>
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC CarrierNumber)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC ShipmentNumber)
                    Disable Grid(FC Grid,  <Currently Selected Row>, GC ModTrn)
               End If
          End If
     End If
End If
// End SAR #8692806
//
// SAR  8872735 Begins
// Blank out  GC catalog Number if supplier value is changed
// so that edit line can fetch the catalog number for the new supplier
If FI szUniquePID_PID [PID] is equal to "EP4310"
And FI mnOldSupplier_AN8 [AN8] is not equal to FC Address Number [AN8]
And SV Form_ Mode is equal to CO UPDATE_MODE
     If GC CATN:Catalog Number(wf) [CATN] is not equal to <Blank>
     And GC CATN:Catalog Number(wf) [CATN] is not equal to <NULL>
          GC CATN:Catalog Number(wf) [CATN] = <NULL>
     End If
End If
// -----------------------------------------------------------------------------
// SAR  8872735 Ends
// INICIO - ISSUE 7065 - Marília - move Cód. Histórico p/GRID
// -----------------------------------------------------------------------------
If GC Account Number [ANI] is not equal to <NULL>
And GC Account Number [ANI] is not equal to <Blank>
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          GC Account Number [ANI] -> szAccountNumber [ANI]
          VA frm_AUXObjectAccount_OBJ [OBJ] <- szDatabaseObject [OBJ]
          VA frm_AUXSubsidiary_SUB [SUB] <- szDatabaseSubsidiary [SUB]
          "7" -> cBasedOnFormat [EV01]
          VA frm_AUXCompany_CO [CO] <- szAccountCompany [CO]
     VA frm_HistoricoGCAA03 [AA03] = substr([GC Explanation -Remark- [EXR]], "0", "3")
     F5509HIS.Select  [Index 1: Índice]
          VA frm_AUXObjectAccount_OBJ [OBJ] = TK Object Account [OBJ]
     F5509HIS.FetchNext  [Index 1: Índice]
          VA frm_CompanyHIS [CO] <- TK Company [CO]
          VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
          VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
          VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
     While SV File_IO_Status is equal to CO SUCCESS
          If VA frm_ExigeAA01 [AA01] is equal to "S"
               If VA frm_SubsidiaryHIS [SUB] is equal to VA frm_AUXSubsidiary_SUB [SUB]
               Or VA frm_SubsidiaryHIS [SUB] is equal to "*"
                    If VA frm_CompanyHIS [CO] is equal to VA frm_AUXCompany_CO [CO]
                    Or VA frm_CompanyHIS [CO] is equal to "*"
                         If VA frm_HistoricoAA03 [AA03] is equal to VA frm_HistoricoGCAA03 [AA03]
                         Or VA frm_HistoricoAA03 [AA03] is equal to "*"
                              VA frm_HIST4POS [EV01] = substr([GC Explanation -Remark- [EXR]], "3", "1")
                              VA frm__SY [SY] = "55"
                              VA frm__RT [RT] = "HI"
                              VA frm__KY [KY] = concat("       ", lpad([VA frm_HistoricoGCAA03 [AA03]], "0", "3"))
                              F0005.FetchSingle  [Index 1: System, Type, Code]
                                   VA frm__SY [SY] = TK Product Code [SY]
                                   VA frm__RT [RT] = TK User Defined Codes [RT]
                                   VA frm__KY [KY] = TK User Defined Code [KY]
                                   VA frm__UDC_HIST_PADRAO [DL02] <- TK Description 02 [DL02]
                              If SV File_IO_Status is equal to CO SUCCESS
                                   GC CHIS [CHIS] = substr([GC Explanation -Remark- [EXR]], "0", "3")
                              End If
                         End If
                    End If
               End If
          End If
          F5509HIS.FetchNext  [Index 1: Índice]
               VA frm_CompanyHIS [CO] <- TK Company [CO]
               VA frm_SubsidiaryHIS [SUB] <- TK Subsidiary [SUB]
               VA frm_ExigeAA01 [AA01] <- TK Alpha Spec. Data 01 [AA01]
               VA frm_HistoricoAA03 [AA03] <- TK Alpha Spec. Data 03 [AA03]
     End While
End If
// -----------------------------------------------------------------------------
// FIM  - ISSUE 7065 - Marília
// -----------------------------------------------------------------------------

=============================================
Form: Order Detail - W4310A
Event: Last Grid Record Has Been Read
Event GUID: f57df3f4-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 5503061
Enable Control(HC Lo&g Details)
//
// ---------------------------------------------------------------------------
//     If this is an order duplication, then take the order type from the
//     duplication processing options
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO COPY_MODE
     If PO szDuplicationOrderType [DCTO] is not equal to <Blank>
     And PO szDuplicationOrderType [DCTO] is not equal to <NULL>
          FC F4301:Order Type [DCTO] = PO szDuplicationOrderType [DCTO]
     End If
End If
//
//
// ---------------------------------------------------------------------------
//     If header changes were populated to all detail lines, force the change.
// ---------------------------------------------------------------------------
//
VA frm_EndOfFile [EV01] = "1"
If SV Form_ Mode is equal to CO UPDATE_MODE
And VA frm_HeaderValuesChanged [EV01] is equal to "1"
     Get Max Grid Rows(FC Grid, VA frm_MaxGridRows)
     VA frm_MATH01_GridRowCounter [MATH01] = "1"
     While VA frm_MATH01_GridRowCounter [MATH01] is less than or equal to VA frm_MaxGridRows [MATH01]
          Get Grid Row(FC Grid, VA frm_MATH01_GridRowCounter)
          Copy Grid Row To Grid Buffer(FC Grid, VA frm_MATH01_GridRowCounter)
          Update Grid Buffer Row(FC Grid, VA frm_MATH01_GridRowCounter, <Yes>, <No>, <Yes>, <No>, <Yes>)
          VA frm_MATH01_GridRowCounter [MATH01] = [VA frm_MATH01_GridRowCounter [MATH01]]+1
     End While
End If
//
//
// ---------------------------------------------------------------------------
// The following code is never executed.
// Last Grid Rec Has Been Read does not execute on ADD.  ADD is a condition.
// ---------------------------------------------------------------------------
//
If FI SourceOfFormCall [EV01] is equal to "1"
And SV Form_ Mode is equal to CO ADD_MODE
And VA frm_TemplatesExecuted [EV01] is equal to "0"
And PO szOrderTemplates [VL15] is equal to "1"
     //
     If VA frm_szOrderTemplate_ORTP [ORTP] is equal to or empty <Blank>
          Call App:P4015 Form:W4015A Version:ZJDE0002
               FC Address Number [AN8] -> AddressNumber [AN8]
               "3" -> ProcessingMode [EV01]
               "1" -> ProtectAddressNumber [EV02]
               "1" -> CalledFromPODetail [EV03]
               FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
     Else
          Call App:P40215 Form:W40215A Version:ZJDE0001
               VA frm_szOrderTemplate_ORTP [ORTP] -> OrderTemplate [ORTP]
               FC Address Number [AN8] -> AddressNumber [AN8]
               "3" -> ProcessingMode [EV01]
               FC Order Date [TRDJ] -> TransactionDate [TRDJ]
               UNDEFINED <> OpenOrdersVersion [VERS]
               UNDEFINED <> OrderType [DCTO]
               UNDEFINED <> CacheHandle [GENLNG]
               UNDEFINED <> szTemplateBusinessUnit [MCU]
     End If
     Press Button(FC PROCESS: Load Grid From Cache)
     VA frm_TemplatesExecuted [EV01] = "1"
     //
End If
//
// SAR 5228354 Product Variance Enhancement
If VA frm_cProductVarianceFlag_MEOW [MEOW] is equal to "1"
And SV Form_ Mode is equal to CO UPDATE_MODE
     LargestMatrixControlLineNumber(B4302250.LargestMatrixControlLineNumber)
          FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompany [KCOO]
          GC Original SFXO (wf) [SFX] -> szOrderSuffix [SFXO]
          VA frm_mnLagestMatrixLineNum_MCLN [MCLN] <- mnMatrixControlLine [MCLN]
          VA frm_szMatrixLineErr_ERR [ERR] <- cErrorCode [ERR]
     If VA frm_szMatrixLineErr_ERR [ERR] is equal to "1"
          VA frm_mnLagestMatrixLineNum_MCLN [MCLN] = "0"
     End If
End If
//

=============================================
Form: Order Detail - W4310A
Event: End Dialog
Event GUID: 8e832192-9601-11d2-973d-000039ae070e
=============================================
If VA frm_cVertexActive [VVTX] is equal to "1"
     ValidateGeoCode(B7300002.ValidateGeoCode)
          <Blank> -> szTaxExplanationCode [EXR1]
          <Blank> -> szTaxRateArea [TXA1]
          UNDEFINED <- cGeoCodeValid [EV01]
          "1" -> cDeleteGeoCodeCache [EV01]
End If
//
// SAR 8785906 - Record Reservation
ConvertNumericToString(B0000045.ConvertNumericToString)
     VA frm_mnUniqueKeyID_UKID [UKID] -> mnMathNumeric01 [MATH01]
     VA frm_szUniqueKeyID_PID [PID] <- szVideoConstant30A [VC30A]
If SV Form_ Mode is equal to CO UPDATE_MODE
     // SAR 7218951 passed generic key
     // SAR 7878810 Removed generic key
     F00095RemoveReservation(N0000602.F00095RemoveReservation)
          SL UserID -> szUserId [USER]
          "F4311" -> szNameObject [OBNM]
          <Blank> -> szGenericKey [GENKEY]
          VA frm_szUniqueKeyID_PID [PID] -> szApplication [PID]
End If
//
// SAR 8164296 Should Delete the Clause table records if the Clause records
// exist and the user is timed out before F4301 records were even created.
// Pass the Order header key information to check the table recrods.
//
If FC Clause ID [CUKID] is not equal to "0"
And FC Clause ID [CUKID] is not equal to <NULL>
     DeleteClausesTableRecords(B4300080.DeleteClausesTableRecords)
          "000" -> szOrderSuffix [SFXO]
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC F4301:Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
End If

=============================================
Form: Order Detail - W4310A
Event: Write Grid Line-After
Event GUID: 5ef15c59-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_BPError_ERRC [ERRC]
----------------------------------------
//
If FI cAddChangeOrder [EV03] is equal to "3"
     GC ACTN:Action Code (wf) [ACTN] = "A"
End If
// SAR 8858511 Begin
VA grd_PlannedEffectivityDate [DLEJ] = GC Planned Effective [DLEJ]
// SAR 8858511 End
//
// ---------------------------------------------------------------------------
// No item modification if IVI is equal to N SAR 5769089
// ---------------------------------------------------------------------------
// SAR 7033737 - Don't disable Item Number if in COPY_MODE
//
If VA grd_cInventoryInterface_IVI [IVI] is not equal to "N"
And SV Form_ Mode is not equal to CO COPY_MODE
     Disable Grid(FC Grid, <Current Row>, GC ItemNumber)
End If
//
// ---------------------------------------------------------------------------
// Disable line type on existing detail lines
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     //
     // ---------------------------------------------------------------------------
     // Evaluate processing option to hide/show kit components
     // ---------------------------------------------------------------------------
     //
     If BC Item Number - Related (Kit) (F4311.0) [RLIT] is not equal to <Blank>
     And BC Item Number - Related (Kit) (F4311.0) [RLIT] is not equal to <NULL>
     And PO cDisplayKitComponentLines [EV02] is not equal to "1"
          Hide Grid Row(FC Grid,  <Currently Selected Row>)
     End If
     Disable Grid(FC Grid,  <Current Row>, GC LnTy)
     //
     VA evt_BPError_ERRC [ERRC] = "0"
     //
     // SAR 6464957
     //  SAR 7310431 - Add if condition
     If GC Short Item No [ITM] is not equal to "0"
     And GC Short Item No [ITM] is not equal to <NULL>
          GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
               GC Branch/ Plant [MCU] -> szBranch [MCU]
               GC Short Item No [ITM] -> mnShortItemNumber [ITM]
               VA grd_StockingType_STKT [STKT] <- cStockingType [STKT]
               VA evt_BPError_ERRC [ERRC] <- cErrorIndicator [ERRC]
               "1" -> cSuppressErrorMessage [EV01]
          //
          If VA evt_BPError_ERRC [ERRC] is equal to "1"
               //
               // ---------------------------------------------------------------------------
               // To Enhance Performance, dont call BSFN again, just use earlier temp
               // Variable
               // ---------------------------------------------------------------------------
               //
               // SAR 4917844, 6464957
               VA grd_StockingType_STKT [STKT] = VA frm_TempStockingType_STKT [STKT]
               //
          End If
          //
          // SAR 6464957, 5347556 Begin
          If VA grd_StockingType_STKT [STKT] is equal to "K"
               Disable Grid(FC Grid,  <Currently Selected Row>,  <All Columns>)
               Enable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
               // SAR 8482198 - Enable the promised delivery date field for the kit parent
               Enable Grid(FC Grid, <Currently Selected Row>, GC PromisedDelivery)
          End If
          // SAR 6464957, 5347556 End
     End If
     //
End If
//
// SAR 4356400, 4431967 Begins
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA grd_TempWeightUOM_WTUM [WTUM] = GC Wt UoM [WTUM]
     VA grd_TempTransactionUOM_TRUM [TRUM] = GC Tr. UoM [UOM]
     VA grd_TempVolumeUOM_VLUM [VLUM] = GC Vol  UoM [VLUM]
     VA grd_TempExtendedWeight_ITWT [ITWT] = GC Extended Weight [ITWT]
     // SAR 8352705 Begin
     VA grd_TempExtendedVolume_ITVL [ITVL] = GC Extended Volume [ITVL]
     // SAR 8352705 End
     VA grd_TempQtyOrdered_UORGE1 [UORGE1] = GC Quantity Ordered [UORGE1]
End If
// SAR 4356400, 4431967 Ends
//
//  SAR    5169139    Begin
If VA frm_AssetErrorNumber_DTAI [DTAI] is not equal to <Blank>
And VA frm_AssetErrorNumber_DTAI [DTAI] is not equal to <NULL>
     Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC AssetID, VA frm_AssetErrorNumber_DTAI)
End If
//  SAR    5169139    End
//
// SAR 5347556 Begin
If GC Related Item No [RLIT] is not equal to <Blank>
     Disable Grid(FC Grid,  <Currently Selected Row>, GC QuantityOrdered)
End If
// Begin SAR # 8956436
If SV Form_ Mode is not equal to CO COPY_MODE
     VA grd_OriginalOrderQty_UORG [UORG] = GC Quantity Ordered [UORGE1]
End If
// End SAR # 8956436
// SAR 5347556 End
//
//
// ***************************************************************************
// Populate the display and work variables in order to have Multiple Accounts
// notification display correctly and populate the Edit Line call correctly.
If GC Multiple Accounts [MACT] is equal to "1"
     //
     // SAR 7119830 Begin
     // Move the following logic to Write Grid Line-Before to provent the Row Exit
     // & Changed Asynch event being trigged.
     ! VA grd_MultipleAccounts_ANI [ANI] = GC Account Number [ANI]
     ! VA grd_MultipleAccounts_OMCU [OMCU] = GC Business Unit [OMCU]
     ! VA grd_MultipleAccounts_OBJ [OBJ] = GC Obj Acct [OBJ]
     ! VA grd_MultipleAccounts_SUB [SUB] = GC Sub  [SUB]
     ! VA grd_MultipleAccounts_SBLT [SBLT] = GC Sub Type [SBLT]
     ! VA grd_MultipleAccounts_SBL [SBL] = GC Subledger [SBL]
     //
     ! // populate the display columns
     ! GC Account Number [ANI] = TV *** ACCOUNT DISTRIBUTION ***
     ! GC Business Unit [OMCU] = <Blank>
     ! GC Obj Acct [OBJ] = <Blank>
     ! GC Sub  [SUB] = <Blank>
     ! GC Sub Type [SBLT] = <Blank>
     ! GC Subledger [SBL] = <Blank>
     // SAR 7119830 End
     //
     // Disable the GC fields to prevent entry
     Disable Grid(FC Grid,  <Currently Selected Row>, GC Account Number)
     Disable Grid(FC Grid, <Currently Selected Row>, GC CostCenter)
     Disable Grid(FC Grid, <Currently Selected Row>, GC ObjAcct)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Sub)
     Disable Grid(FC Grid, <Currently Selected Row>, GC SubType)
     Disable Grid(FC Grid, <Currently Selected Row>, GC Subledger)
     // SAR 8462998 Job Type enhancement
     If VA frm_USGovernmentContractingUse [GCUSED] is equal to "1"
          Disable Grid(FC Grid, <Currently Selected Row>, GC JobTyp)
     End If
End If

=============================================
Form: Order Detail - W4310A
Event: Clear Screen After Add
Event GUID: 5137c266-630a-11d4-a5dc-000629ae6f6f
=============================================
// SAR 4404803 Begins
If FI SourceOfFormCall [EV01] is equal to "1"
     FI DetailFormCancelled [EV02] = "2"
     Press Button(HC Cancel/Close)
End If
// SAR 4404803 Ends

=============================================
Form: Order Detail - W4310A
Event: Post Commit
Event GUID: 9f48731f-83b1-4d98-99c4-12c9279f69cf
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_EventID_GENLNG [GENLNG]
evt_idRTPOOUT2EventID_GENLNG [GENLNG]
----------------------------------------
//
// SAR 5965311 - Retrofit XPI with Transaction Processing
//
If SV TP_Commit_Status is equal to CO TP_ACTION_SUCCESS
     //
     // ---------------------------------------------------------------------------
     // If Order was committed and TP passed, retrieve the Event ID and Call
     // Finalize Event to creat XML Document
     // ---------------------------------------------------------------------------
     //
     // 12580420 - GLN -B Call modified to retrieve RTPOOUT2EventID
     // Bug 17239195 Error message has been retrieved
     RealtimeEventCacheProcess(B4302180.RealtimeEventCacheProcess)
          "6" -> szCacheActionCode [CACTN]
          "3" -> mnNumberKeys [NKEYS]
          VA frm_szErrorMessage_DTAI [DTAI] <- szErrorMessageID [DTAI]
          VA frm_GENLNG_CacheCursor [GENLNG] <> idCacheCursor [GENLNG]
          VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
          VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
          VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
          VA evt_EventID_GENLNG [GENLNG] <- idEventID [GENLNG]
          "1" -> cSuppressErrorMessage [EV01]
          VA evt_idRTPOOUT2EventID_GENLNG [GENLNG] <- idRTPOOUT2EventID [GENLNG]
     //
     // SAR 6278281 - Replaced While loop with If Condition
     // Bug 17239195 Begins
     While VA frm_szErrorMessage_DTAI [DTAI] is equal to <Blank>
     Or VA frm_szErrorMessage_DTAI [DTAI] is equal to <NULL>
          // Bug 17239195 Ends
          If VA frm_GENLNG_CacheCursor [GENLNG] is not equal to "0"
               //
               PurchaseOrderRealTimeWrapper(B4302150.PurchaseOrderRealTimeWrapper)
                    "F" -> cEventAction [EV01]
                    VA evt_EventID_GENLNG [GENLNG] <> idEventID [GENLNG]
                    <Blank> -> cHeaderDetailFlag [EV01]
                    "0" -> mnOrderNumber [DOCO]
                    <Blank> -> szOrderType [DCTO]
                    <Blank> -> szOrderCompany [KCOO]
                    <Blank> -> szOrderSuffix [SFXO]
                    "0" -> mnOrderLineNumber [LNID]
                    <Blank> -> cOrderAction [ACTN]
                    <Blank> -> szEventName [VC10A]
                    <Blank> -> szEventScope [VC30A]
                    "P4310-PurchaseOrders" -> szCallingFunctionName [VC30A]
               If VA evt_idRTPOOUT2EventID_GENLNG [GENLNG] is not equal to "0"
                    PurchaseOrderRealTimeWrapper6(B4302157.PurchaseOrderRealTimeWrapper6)
                         "F" -> cEventAction [EV01]
                         VA evt_idRTPOOUT2EventID_GENLNG [GENLNG] <> idEventID [GENLNG]
                         <Blank> -> cHeaderDetailFlag [EV01]
                         "0" -> mnOrderNumber [DOCO]
                         <Blank> -> szOrderType [DCTO]
                         <Blank> -> szOrderCompany [KCOO]
                         <Blank> -> szOrderSuffix [SFXO]
                         "0" -> mnOrderLineNumber [LNID]
                         <Blank> -> cOrderAction [ACTN]
                         <Blank> -> szEventName [VC10A]
                         <Blank> -> szEventScope [VC30A]
                         "P4310-PurchaseOrders" -> szCallingFunctionName [VC30A]
               End If
               //
          End If
          // Bug 17239195 Begins
          RealtimeEventCacheProcess(B4302180.RealtimeEventCacheProcess)
               "6" -> szCacheActionCode [CACTN]
               "3" -> mnNumberKeys [NKEYS]
               VA frm_szErrorMessage_DTAI [DTAI] <- szErrorMessageID [DTAI]
               VA frm_GENLNG_CacheCursor [GENLNG] <> idCacheCursor [GENLNG]
               VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
               VA evt_EventID_GENLNG [GENLNG] <- idEventID [GENLNG]
               "1" -> cSuppressErrorMessage [EV01]
               VA evt_idRTPOOUT2EventID_GENLNG [GENLNG] <- idRTPOOUT2EventID [GENLNG]
     End While
     // Bug 17239195 Ends
     //
End If
//
// SAR 6278281 - Always Clear EventID Cache
RealtimeEventCacheProcess(B4302180.RealtimeEventCacheProcess)
     "5" -> szCacheActionCode [CACTN]
     "0" -> mnNumberKeys [NKEYS]
     UNDEFINED <> szErrorMessageID [DTAI]
     UNDEFINED <> idCacheCursor [GENLNG]
     VA frm_CTID_ComputerID [CTID] -> szComputerID [CTID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     UNDEFINED <> idEventID [GENLNG]
     "1" -> cSuppressErrorMessage [EV01]




=============================================
Form: Order Header - W4310B
Event: Form Variables
Event GUID: c78581b0-a240-11d0-a204-0000f6728a56
=============================================
frm_OnDemandHeaderToDetail [EV01]
frm_Old_Supplier [AN8]
frm_Old_ShipTo [SHAN]
frm_Old_Buyer [ANBY]
frm_Old_Carrier [ANCR]
frm_Old_OrderDate [TRDJ]
frm_Old_TaxArea [TXA1]
frm_Old_TaxExplanationCode [EXR1]
frm_Old_EvaluatedReceipt [AVCH]
frm_HeaderValuesChanged [EV01]
frm_SourceOfFormCall [EV01]
frm_Old_RequestedDate [DRQJ]
frm_Old_PromisedDate [PDDJ]
frm_Old_CancelDate [CNDJ]
frm_Old_PrintMessage [INMG]
frm_Old_FreightHandlingCode [FRTH]
frm_Old_PaymentTerms [PTC]
frm_Old_SupplierSO [VR01]
frm_Old_Reference2 [VR02]
frm_Old_LandedCostRule [PRP5]
frm_Old_UserCode [URCD]
frm_Old_UserDate [URDT]
frm_Old_UserAmount [URAT]
frm_Old_UserAddressNumber [URAB]
frm_Old_UserReference [URRF]
frm_TSTA_Credit_Msg [TSTA]
frm_AddChangeOrder [EV01]
frm_OrderSuffixForDetail [SFX0]
frm_Old_SendMethod [CRMD]
frm_AVCH_EvalReceipt [AVCH]
frm_CRCM_SendMethod [CRCM]
frm_FUF1_AIAFlag [FUF1]
frm_mnOrderYear_MATH01 [MATH01]
frm_mnOrderCentury_MATH01 [MATH01]
frm_szCenturyYear_GS1A [GS1A]
frm_StringIsNumeric [SVAL]
frm_AN8_LongAddressNumeric [AN8]
frm_cUDCError_EV01 [EV01]
frm_cVertexActiveFlag_VVTX [VVTX]
frm_szVertexCanCountryCo_VVCN [VVCN]
frm_szSaveLongAddressNo_ALKY [ALKY]
frm_szSaveCurrencyCdeFrom_CRCD [CRCD]
frm_szSaveHoldCode_HOLD [HOLD]
frm_mnProcessID_PEID [PEID]
frm_mnTransactionID_TCID [TCID]
frm_szHoldCodeType_CTYP [CTYP]
frm_cHoldCodeEntered_EV01 [EV01]
frm_cAddressBookConstant_EV01 [EV01]
frm_iErrorCount_INT01 [INT01]
frm_iWarningCount_INT01 [INT01]
frm_szUDCErrorMessageID_DTAI [DTAI]
frm_cEvalReceiptNewSupp_AVCH [AVCH]
frm_cSendMethodOld_CRMD [CRMD]
frm_cValidateApplication_EV01 [EV01]
frm_szConvertResOrderNo_DOC8 [DOC8]
frm_szGenericKey_GENKEY [GENKEY]
frm_szRecordReserveErrMsg_DTAI [DTAI]
frm_szReserveNameAlpha_ALPH [ALPH]
frm_szReserveAppID_PID [PID]
frm_BuyerAddressNumber_AN8 [AN8]
frm_F0411Purchase_PO [PO]
frm_mnOriginalAddressNumber [MATH01]
frm_szFreightHandlingCode_FRTH [FRTH]
frm_szSupplierPaymentTerms_PTC [PTC]
frm_cLogsAtLevelsOn_EV01 [EV01]
frm_cTriggerSupplierAdd [EV01]
frm_szPriceAdjustmentScheduleN [ASN]
frm_mnClause_ID [CUKID]
frm_mnChangedSupplierNumbr_AN8 [AN8]
frm_szChangedSuplrCurrCde_CRCD [CRCD]
frm_mnConversionMult_MATH01 [MATH01]
frm_mnConversionDiv_MATH01 [MATH01]
frm_mnConversionDefault_MATH01 [MATH01]
frm_mnPrevAddressNumber_AN8 [AN8]
frm_szUserId_USER [USER]
frm_mnUniqueKeyID_UKID [UKID]
frm_szUniqueKeyID_PID [PID]
frm_CurrentShipto_SHAN [SHAN]
frm_cApparelInstalled_EV01 [EV01]
frm_szPrevCollection_C9COLL [C9COLL]
frm_szPrevSeasonCode_C9SEAC [C9SEAC]
frm_szPrevSeasonYear_C9SEAY [C9SEAY]
frm_cCollChangedInVA_EV01 [EV01]
frm_szTaxExplanationCode_EXR1 [EXR1]
frm_szTaxRateArea_TXA1 [TXA1]
frm_LineNumber_LNID [LNID]
frm_StatusCodeNext_NXTR [NXTR]
frm_StatusCodeLast_LTTR [LTTR]

=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df3e1-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cSupplierExistsFlag [EV01]
evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
----------------------------------------
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If FC Collection [C9COLL] is greater than <Blank>
     Or FC SeasonCode [C9SEAC] is greater than <Blank>
     Or FC Season Year [C9SEAY] is greater than <Blank>
          FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
               FC Collection [C9COLL] = TK Collection [C9COLL]
               FC SeasonCode [C9SEAC] = TK Season Code [C9SEAC]
               FC Season Year [C9SEAY] = TK Season Year [C9SEAY]
               FC COLLECTION [DL01] <- TK Description Line 1 [C9DSC1]
               VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
          If SV File_IO_Status is equal to CO SUCCESS
               If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                    If VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ] is equal to or empty Null Date
                         FC Collection Price Effective Date [C9PRDJ] = date_today()
                    Else
                         FC Collection Price Effective Date [C9PRDJ] = VA evt_jdCollPriceEffDate_C9PRDJ [C9PRDJ]
                    End If
               End If
          Else
               Set Control Error(FC Collection, "E41F02")
               Set Control Error(FC SeasonCode, "E41F02")
               Set Control Error(FC Season Year, "E41F02")
               Stop Processing
          End If
     Else
          If PO cValidateItemsWithCollection [EV01] is equal to ("1","2")
               Set Control Error(FC Collection, "E41F01")
               Set Control Error(FC SeasonCode, "E41F01")
               Set Control Error(FC Season Year, "E41F01")
               Stop Processing
          End If
     End If
End If
// ---------------------------------------------------------------------------
// SAR 6255303  If Ship to Form is blank also blank out the Ship To Hidden
// value
// ---------------------------------------------------------------------------
//
If FC Long Ship To_ALKY [ALKY] is equal to <Blank>
And FC Ship To SHAN [SHAN] is not equal to <Blank>
     FC Ship To SHAN [SHAN] = <NULL>
End If
//
// ---------------------------------------------------------------------------
// If order number is still zero assign next number and send into BeginDoc
// ---------------------------------------------------------------------------
// SAR 4874119. If the currency is OFF then FC Foreign should be blank.
// ---------------------------------------------------------------------------
//
If SL CurrencyProcessing is equal to or empty <Blank>
Or SL CurrencyProcessing is equal to "0"
Or SL CurrencyProcessing is equal to "N"
     If SV Form_ Mode is equal to CO UPDATE_MODE
          // SAR 6911163 Change from blank to 'D'
          FC Foreign [CRRM] = "D"
     End If
End If
//
If FC Order Number [DOCO] is equal to "0"
     GetNextOrderNumber(B4302960.GetNextOrderNumber)
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Company [KCOO] <> szOrderCompany [KCOO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          FC Business Unit [MCU] <> szBranchPlant [MCU]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
End If
//
// ---------------------------------------------------------------------------
// Pass in VA AVCH_EvalReceipts into begin doc instead of the BC value.
// ---------------------------------------------------------------------------
// SAR 6047248 - Changed the paramaters passed
//  SAR  6585679  - Add FC Print Message (INMG) and FC AIA Flag (FUF1) to
// Begin Doc
//
// ---------------------------------------------------------------------------
// SAR 7507947 replaced BC Adjustment Schedule with VA
// frm_szPriceAdjustmentScheduleN
// SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
//
// SAR# 8352393
// va frm_EvalReceipts_AVCH  for ADD
//
If SV Form_ Mode is equal to CO ADD_MODE
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          FC JOBS:Job Number(wf) [JOBS] <> mnJobNumber [JOBS]
          FC CTID:Computer ID (wf) [CTID] <> szComputerID [CTID]
          FC ACTN:ActionCode (wf) [ACTN] -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          FC EV01..UsesWorkFiles(wf) [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          FC EV01:WrittenToWorkFile(wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Business Unit [MCU] <> szBranchPlant [MCU]
          BC Document Company (Original Order) (F4301.0) [OKCO] <> szOriginalOrderCompany [OKCO]
          BC Original Order Number (F4301.0) [OORN] <> szOriginalOrderNumber [OORN]
          BC Original Order Type (F4301.0) [OCTO] <> szOriginalOrderType [OCTO]
          BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
          BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
          BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To SHAN [SHAN] <> mnShipToNumber [SHAN]
          FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
          FC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          BC Reference (F4301.0) [VR01] <> szReference01 [VR01]
          BC Reference 2 (F4301.0) [VR02] <> szReference02 [VR02]
          BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions01 [DEL1]
          BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions02 [DEL2]
          FC Print Message [INMG] <> szPrintMessage [INMG]
          BC Pricing Group (F4301.0) [PRGP] <> szSupplierPriceGroup [PRGP]
          FC Payment Terms [PTC] <> szPaymentTerms [PTC]
          FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          FC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          FC Certificate [TXCT] <> szTaxCertificate [TXCT]
          BC Associated Text (F4301.0) [ATXT] <> cAssociatedText [ATXT]
          FC Hold Orders Code [HOLD] <> szHoldCode [HOLD]
          VA frm_szFreightHandlingCode_FRTH [FRTH] <> szFreightHandlingCode [FRTH]
          FC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          FC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          VA frm_AVCH_EvalReceipt [AVCH] <> cEvaluatedReceiptsFlag [AVCH]
          VA frm_CRCM_SendMethod [CRCM] <> cSendMethod [CRMD]
          BC Purchasing Category Code 5 (F4301.0) [PRP5] <> szLandedCostRule [PRP5]
          FC Approval Route Code [ARTG] <> szApprovalRouteCode [ARTG]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnCurrencyExchangeRate [CRR]
          FC Ordered By [ORBY] <> szOrderedPlacedBy [ORBY]
          FC Order Taken By [TKBY] <> szOrderTakenBy [TKBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_szUserId_USER [USER] <> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          FC Description [DESC] <> szDescription [DESC]
          FC Remark [RMK] <> szRemark [RMK]
          FC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          FC Physical Comp. [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          VA frm_szPriceAdjustmentScheduleN [ASN] <> szPriceAdjustmentScheduleN [ASN]
          FC AIA Document [FUF1] <> cAIADocument [FUF1]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
Else
     // update mode, pass in F4301AVCH
     // 8482593- orderby was getting passed to userid
     //  SAR 8943156 -  Passed BC values of  RMA Number and RMA Type
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          FC JOBS:Job Number(wf) [JOBS] <> mnJobNumber [JOBS]
          FC CTID:Computer ID (wf) [CTID] <> szComputerID [CTID]
          FC ACTN:ActionCode (wf) [ACTN] -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          FC EV01..UsesWorkFiles(wf) [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          FC EV01:WrittenToWorkFile(wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Business Unit [MCU] <> szBranchPlant [MCU]
          BC Document Company (Original Order) (F4301.0) [OKCO] <> szOriginalOrderCompany [OKCO]
          BC Original Order Number (F4301.0) [OORN] <> szOriginalOrderNumber [OORN]
          BC Original Order Type (F4301.0) [OCTO] <> szOriginalOrderType [OCTO]
          BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
          BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
          BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To SHAN [SHAN] <> mnShipToNumber [SHAN]
          FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
          FC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          BC Reference (F4301.0) [VR01] <> szReference01 [VR01]
          BC Reference 2 (F4301.0) [VR02] <> szReference02 [VR02]
          BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions01 [DEL1]
          BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions02 [DEL2]
          FC Print Message [INMG] <> szPrintMessage [INMG]
          BC Pricing Group (F4301.0) [PRGP] <> szSupplierPriceGroup [PRGP]
          FC Payment Terms [PTC] <> szPaymentTerms [PTC]
          FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          FC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          FC Certificate [TXCT] <> szTaxCertificate [TXCT]
          BC Associated Text (F4301.0) [ATXT] <> cAssociatedText [ATXT]
          FC Hold Orders Code [HOLD] <> szHoldCode [HOLD]
          VA frm_szFreightHandlingCode_FRTH [FRTH] <> szFreightHandlingCode [FRTH]
          FC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          FC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] <> cEvaluatedReceiptsFlag [AVCH]
          VA frm_CRCM_SendMethod [CRCM] <> cSendMethod [CRMD]
          BC Purchasing Category Code 5 (F4301.0) [PRP5] <> szLandedCostRule [PRP5]
          FC Approval Route Code [ARTG] <> szApprovalRouteCode [ARTG]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnCurrencyExchangeRate [CRR]
          FC Ordered By [ORBY] <> szOrderedPlacedBy [ORBY]
          FC Order Taken By [TKBY] <> szOrderTakenBy [TKBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_szUserId_USER [USER] <> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          FC Description [DESC] <> szDescription [DESC]
          FC Remark [RMK] <> szRemark [RMK]
          FC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          FC Physical Comp. [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          VA frm_szPriceAdjustmentScheduleN [ASN] <> szPriceAdjustmentScheduleN [ASN]
          FC AIA Document [FUF1] <> cAIADocument [FUF1]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          BC Document (Order #, Invoice, etc.) (F4301.0) [DOC1] <> mnRMADocNumber [DOC1]
          BC Document Type (F4301.0) [DCT4] <> szRMADocType [DCT4]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
End If
//
// End SAR# 8352393
// ---------------------------------------------------------------------------
//      Moved the code from below.  This code needs to appear right
//      after the BeginDoc( ), so please do not remove it from here.
// ---------------------------------------------------------------------------
//
GetErrorCount(B9800250.GetErrorCount)
     VA frm_iErrorCount_INT01 [INT01] <- nNumberOfErrors [INT01]
     VA frm_iWarningCount_INT01 [INT01] <- nNumberOfWarnings [INT01]
//
// ---------------------------------------------------------------------------
//      If there are no errors or warnings in BeginDoc( ) then write/update
//      F4209.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     If VA frm_iErrorCount_INT01 [INT01] is equal to "0"
     And VA frm_iWarningCount_INT01 [INT01] is equal to "0"
          If VA frm_cHoldCodeEntered_EV01 [EV01] is equal to "1"
               WriteHoldCode(B4001100.WriteHoldCode)
                    FC Business Unit [MCU] -> szBranchPlant [MCU]
                    FC Hold Orders Code [HOLD] -> szHoldCode [HOLD]
                    FC Address Number [AN8] -> mnSupplierNumber [AN8]
                    BC Date - Order/Transaction (F4301.0) [TRDJ] -> jdTransactionDate [TRDJ]
                    BC Date - Requested (F4301.0) [DRQJ] -> jdRequestedDate [DRQJ]
                    BC Date - Promised Shipment (F4301.0) [PPDJ] -> jdPromisedDate [PDDJ]
                    FC SFXO:Order Suffix(wf) [SFXO] -> szOrderSuffix [SFXO]
                    FC Order Type [DCTO] -> szDocumentType [DCTO]
                    FC Order Number [DOCO] -> mnDocumentNumber [DOCO]
                    FC Order Company [KCOO] -> szKeyCompany [KCOO]
                    "0" -> mnOrderLineNumber [LNID]
                    UNDEFINED <> mnShortItemNumber [ITM]
                    UNDEFINED <> szLongItemNumber [LITM]
                    UNDEFINED <> szThirdItemNumber [AITM]
                    VA frm_szHoldCodeType_CTYP [CTYP] -> szHoldCodeType [CTYP]
                    UNDEFINED <> mnResponsiblePerson [RPER]
               //
               // ---------------------------------------------------------------------------
               // If this is an OTM eligible line, write hold code for extraction Eligibility
               // is decided by the existense of a record in f49T311  SAR#  8597577 - OTM
               // enhancement.
               // -------------------------------------------------------------------
               //
               // SAR 8925560 - corrected the direction
               ProcessOTMRecords(B49T0700.ProcessOTMRecords)
                    "1" -> cSuppressErrorMessage [SUPPS]
                    "M" -> cActionCode [ACTI]
                    FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
                    FC SFXO:Order Suffix(wf) [SFXO] -> szOrderSuffix [SFXO]
                    "0" -> mnLineNumber [LNID]
                    SL UserID -> szUserId [USER]
                    "EP4310" -> szProgramId [PID]
                    "H" -> cOTMHoldCode [EV01]
          End If
     End If
     //
     // ---------------------------------------------------------------------------
     // SAR 5299793, SAR 6278927
     // Include the company number in the fetch from the F0411
     // so that error is not issued on orders that have the same DOCO and DCTO, but
     // a different company.
     // ---------------------------------------------------------------------------
     //
     If VA frm_mnOriginalAddressNumber [MATH01] is not equal to FC Address Number [AN8]
          MathNumericToStringZeroPad(B0000083.MathNumericToStringZeroPad)
               VA frm_F0411Purchase_PO [PO] <- szString [DL01]
               BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnMathNumeric [MATH01]
               "9" -> nSizeOfString [INT01]
          // SAR 7224584 Begin
          F0411VerifySupplierExists(B4305250.F0411VerifySupplierExists)
               VA frm_mnOriginalAddressNumber [MATH01] -> mnAddressNumber [AN8]
               VA frm_F0411Purchase_PO [PO] -> szPurchaseOrder [PO]
               BC Order Type (F4301.0) [DCTO] -> szDocumentTypePurchase [PDCT]
               BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompanyKeyPurchase [PKCO]
               VA evt_cSupplierExistsFlag [EV01] <- cSupplierExists [EV01]
          If VA evt_cSupplierExistsFlag [EV01] is equal to "1"
               Set Control Error(FC Long Address Number_ALKY, "411C")
          End If
          // SAR 7224584 End
     End If
     //
End If
//
//
PopulateAddressNumber(B4303010.PopulateAddressNumber)
     VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
     FC Address Number [AN8] -> mnSupplierNumber [AN8]
     FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
     FC Long Address Number_ALKY [DL01] <- szSupplierDescription [DL01]
     FC Ship To SHAN [SHAN] -> mnShipToNumber [SHAN]
     FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
     FC Long Ship To_ALKY [DL01] <- szShipToDescription [DL01]

=============================================
Form: Order Header - W4310B
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df3e2-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cCollectionChanged_EV01 [EV01]
----------------------------------------
//
// ---------------------------------------------------------------------------
//     If in "update" mode and the option is set to populate header changes to
//     the detail file, then determine if any header fields have been changed.
// ---------------------------------------------------------------------------
//
VA frm_SourceOfFormCall [EV01] = "1"
If SV Form_ Mode is equal to CO UPDATE_MODE
     If PO szHeaderChangesToDetail [VL03] is equal to "1"
     Or VA frm_OnDemandHeaderToDetail [EV01] is equal to "1"
     Or VA frm_Old_Supplier [AN8] is not equal to FC Address Number [AN8]
          VA frm_OnDemandHeaderToDetail [EV01] = "0"
          // SAR 6047248 - Changed the paramaters passed
          //
          // SAR# 8352393
          // BC code for Eval receipts
          //
          ! DetermineChangedPOHeaderValues(N4301390.DetermineChangedPOHeaderValues)
          !      FC Order Number [DOCO] -> mnOrderNumber [DOCO]
          !      FC Order Type [DCTO] -> szOrderType [DCTO]
          !      FC Order Company [KCOO] -> szOrderCompanyKey [KCOO]
          !      VA frm_Old_Supplier [AN8] -> mnSupplier_Old [AN8]
          !      FC Address Number [AN8] -> mnSupplier_New [AN8]
          !      VA frm_Old_ShipTo [SHAN] -> mnShipTo_Old [SHAN]
          !      FC Ship To SHAN [SHAN] -> mnShipTo_New [SHAN]
          !      VA frm_Old_SupplierSO [VR01] -> szSupplier_PO_Old [VR01]
          !      BC Reference (F4301.0) [VR01] -> szSupplier_PO_New [VR01]
          !      VA frm_Old_Reference2 [VR02] -> szReference2_Old [VR02]
          !      BC Reference 2 (F4301.0) [VR02] -> szReference2_New [VR02]
          !      VA frm_Old_PrintMessage [INMG] -> szPrintMessage_Old [INMG]
          !      BC Print Message (F4301.0) [INMG] -> szPrintMessage_New [INMG]
          !      VA frm_Old_TaxExplanationCode [EXR1] -> szTaxExplanationCode_Old [EXR1]
          !      FC Tax Expl Code [EXR1] -> szTaxExplanationCode1_New [EXR1]
          !      VA frm_Old_TaxArea [TXA1] -> szTaxArea_Old [TXA1]
          !      FC Tax Rate/Area [TXA1] -> szTaxArea_New [TXA1]
          !      VA frm_Old_OrderDate [TRDJ] -> jdOrderDate_Old [TRDJ]
          !      FC Order Date [TRDJ] -> jdOrderDate_New [TRDJ]
          !      VA frm_Old_RequestedDate [DRQJ] -> jdDateRequested_Old [DRQJ]
          !      FC Requested [DRQJ] -> jdDateRequested_New [DRQJ]
          !      VA frm_Old_PromisedDate [PDDJ] -> jdPromisedDeliveryDate_Old [PDDJ]
          !      FC Scheduled Pick [PDDJ] -> jdPromisedDeliveryDate_New [PDDJ]
          !      VA frm_Old_CancelDate [CNDJ] -> jdCancelDate_Old [CNDJ]
          !      FC Cancel Date [CNDJ] -> jdCancelDate_New [CNDJ]
          !      VA frm_Old_PaymentTerms [PTC] -> szPaymentTerms_Old [PTC]
          !      VA frm_szSupplierPaymentTerms_PTC [PTC] -> szPaymentTerms_New [PTC]
          !      VA frm_Old_Buyer [ANBY] -> mnBuyerNumber_Old [ANBY]
          !      FC Buyer Number [ANBY] -> mnBuyerNumber_New [ANBY]
          !      VA frm_Old_Carrier [ANCR] -> mnCarrierNumber_Old [ANCR]
          !      FC Carrier Number [ANCR] -> mnCarrierNumber_New [ANCR]
          !      VA frm_Old_FreightHandlingCode [FRTH] -> szFreightHandlingCode_Old [FRTH]
          !      VA frm_szFreightHandlingCode_FRTH [FRTH] -> szFreightHandlingCode_New [FRTH]
          !      VA frm_Old_EvaluatedReceipt [AVCH] -> cEvaluatedReceipt_Old [AVCH]
          !      VA frm_AVCH_EvalReceipt [AVCH] -> cEvaluatedReceipt_New [AVCH]
          !      VA frm_Old_LandedCostRule [PRP5] -> szLandedCost_Old [PRP5]
          !      BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCost_New [PRP5]
          !      VA frm_HeaderValuesChanged [EV01] <- cHeaderValueChanged_YN [EV01]
          !      VA frm_Old_UserCode [URCD] -> szUserReservedCode_Old [URCD]
          !      BC User Reserved Code (F4301.0) [URCD] -> szUserReservedCode_New [URCD]
          !      VA frm_Old_UserDate [URDT] -> jdUserReservedDate_Old [URDT]
          !      BC User Reserved Date (F4301.0) [URDT] -> jdUserReservedDate_New [URDT]
          !      VA frm_Old_UserAmount [URAT] -> mnUserReservedAmount_Old [URAT]
          !      BC User Reserved Amount (F4301.0) [URAT] -> mnUserReservedAmount_New [URAT]
          !      VA frm_Old_UserAddressNumber [URAB] -> mnUserReservedNumber_Old [URAB]
          !      BC User Reserved Number (F4301.0) [URAB] -> mnUserReservedNumber_New [URAB]
          !      VA frm_Old_UserReference [URRF] -> szUserReservedReference_Old [URRF]
          !      BC User Reserved Reference (F4301.0) [URRF] -> szUserReservedReference_New [URRF]
          !      VA frm_CRCM_SendMethod [CRCM] -> cCorrespondenceMethod [CRMD]
          !      VA frm_cSendMethodOld_CRMD [CRMD] -> cCorrespondenceMethod_Old [CRMD]
          DetermineChangedPOHeaderValues(N4301390.DetermineChangedPOHeaderValues)
               FC Order Number [DOCO] -> mnOrderNumber [DOCO]
               FC Order Type [DCTO] -> szOrderType [DCTO]
               FC Order Company [KCOO] -> szOrderCompanyKey [KCOO]
               VA frm_Old_Supplier [AN8] -> mnSupplier_Old [AN8]
               FC Address Number [AN8] -> mnSupplier_New [AN8]
               VA frm_Old_ShipTo [SHAN] -> mnShipTo_Old [SHAN]
               FC Ship To SHAN [SHAN] -> mnShipTo_New [SHAN]
               VA frm_Old_SupplierSO [VR01] -> szSupplier_PO_Old [VR01]
               BC Reference (F4301.0) [VR01] -> szSupplier_PO_New [VR01]
               VA frm_Old_Reference2 [VR02] -> szReference2_Old [VR02]
               BC Reference 2 (F4301.0) [VR02] -> szReference2_New [VR02]
               VA frm_Old_PrintMessage [INMG] -> szPrintMessage_Old [INMG]
               BC Print Message (F4301.0) [INMG] -> szPrintMessage_New [INMG]
               VA frm_Old_TaxExplanationCode [EXR1] -> szTaxExplanationCode_Old [EXR1]
               FC Tax Expl Code [EXR1] -> szTaxExplanationCode1_New [EXR1]
               VA frm_Old_TaxArea [TXA1] -> szTaxArea_Old [TXA1]
               FC Tax Rate/Area [TXA1] -> szTaxArea_New [TXA1]
               VA frm_Old_OrderDate [TRDJ] -> jdOrderDate_Old [TRDJ]
               FC Order Date [TRDJ] -> jdOrderDate_New [TRDJ]
               VA frm_Old_RequestedDate [DRQJ] -> jdDateRequested_Old [DRQJ]
               FC Requested [DRQJ] -> jdDateRequested_New [DRQJ]
               VA frm_Old_PromisedDate [PDDJ] -> jdPromisedDeliveryDate_Old [PDDJ]
               FC Scheduled Pick [PDDJ] -> jdPromisedDeliveryDate_New [PDDJ]
               VA frm_Old_CancelDate [CNDJ] -> jdCancelDate_Old [CNDJ]
               FC Cancel Date [CNDJ] -> jdCancelDate_New [CNDJ]
               VA frm_Old_PaymentTerms [PTC] -> szPaymentTerms_Old [PTC]
               VA frm_szSupplierPaymentTerms_PTC [PTC] -> szPaymentTerms_New [PTC]
               VA frm_Old_Buyer [ANBY] -> mnBuyerNumber_Old [ANBY]
               FC Buyer Number [ANBY] -> mnBuyerNumber_New [ANBY]
               VA frm_Old_Carrier [ANCR] -> mnCarrierNumber_Old [ANCR]
               FC Carrier Number [ANCR] -> mnCarrierNumber_New [ANCR]
               VA frm_Old_FreightHandlingCode [FRTH] -> szFreightHandlingCode_Old [FRTH]
               VA frm_szFreightHandlingCode_FRTH [FRTH] -> szFreightHandlingCode_New [FRTH]
               VA frm_Old_EvaluatedReceipt [AVCH] -> cEvaluatedReceipt_Old [AVCH]
               BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] -> cEvaluatedReceipt_New [AVCH]
               VA frm_Old_LandedCostRule [PRP5] -> szLandedCost_Old [PRP5]
               BC Purchasing Category Code 5 (F4301.0) [PRP5] -> szLandedCost_New [PRP5]
               VA frm_HeaderValuesChanged [EV01] <- cHeaderValueChanged_YN [EV01]
               VA frm_Old_UserCode [URCD] -> szUserReservedCode_Old [URCD]
               BC User Reserved Code (F4301.0) [URCD] -> szUserReservedCode_New [URCD]
               VA frm_Old_UserDate [URDT] -> jdUserReservedDate_Old [URDT]
               BC User Reserved Date (F4301.0) [URDT] -> jdUserReservedDate_New [URDT]
               VA frm_Old_UserAmount [URAT] -> mnUserReservedAmount_Old [URAT]
               BC User Reserved Amount (F4301.0) [URAT] -> mnUserReservedAmount_New [URAT]
               VA frm_Old_UserAddressNumber [URAB] -> mnUserReservedNumber_Old [URAB]
               BC User Reserved Number (F4301.0) [URAB] -> mnUserReservedNumber_New [URAB]
               VA frm_Old_UserReference [URRF] -> szUserReservedReference_Old [URRF]
               BC User Reserved Reference (F4301.0) [URRF] -> szUserReservedReference_New [URRF]
               VA frm_CRCM_SendMethod [CRCM] -> cCorrespondenceMethod [CRMD]
               VA frm_cSendMethodOld_CRMD [CRMD] -> cCorrespondenceMethod_Old [CRMD]
          //
          // End SAR#8352393
          //
          // ---------------------------------------------------------------------------
          //     If any header value has changed, set the SourceOfFormCall to '2' instead
          //     of a '1'.
          // ---------------------------------------------------------------------------
          //
          If VA frm_HeaderValuesChanged [EV01] is equal to "1"
               VA frm_SourceOfFormCall [EV01] = "2"
               //
               //
               // ---------------------------------------------------------------------------
               // If populate header to detail, then display ALL detail lines so
               // that the update to the detail works correctly when a change order has been
               // selected.
               // ---------------------------------------------------------------------------
               //
               VA frm_AddChangeOrder [EV01] = "2"
               VA frm_OrderSuffixForDetail [SFX0] = <Blank>
          End If
     End If
     //
     // SAR 8956903 - Apparel Management
     // SAR 8972582
     If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
          If VA frm_szPrevCollection_C9COLL [C9COLL] is not equal to FC Collection [C9COLL]
          Or VA frm_szPrevSeasonCode_C9SEAC [C9SEAC] is not equal to FC SeasonCode [C9SEAC]
          Or VA frm_szPrevSeasonYear_C9SEAY [C9SEAY] is not equal to FC Season Year [C9SEAY]
               VA evt_cCollectionChanged_EV01 [EV01] = "1"
          End If
     End If
End If
//
// ---------------------------------------------------------------------------
//     Process the detail line items.
// ---------------------------------------------------------------------------
//
// SAR 4273153- Removed Transaction Processing on Call
// SAR 8164309 - Pass FC Retainage Indicator and Retainage %
// SAR 8872735 Passed Program ID and Old Supplier
// Begin SAR 11064006
Call App:P4310 Form:W4310A Version:SL VersionName
     FC Order Number [DOCO] <> OrderNumber [DOCO]
     FC Order Type [DCTO] <> OrderType [DCTO]
     FC Order Company [KCOO] <> OrderCompany [KCOO]
     FC SFXO:Order Suffix(wf) [SFXO] <> OrderSuffix [SFXO]
     FC Business Unit [MCU] <> BranchPlant [MCU]
     FC Address Number [AN8] <> SupplierNumber [AN8]
     FC Ship To SHAN [SHAN] <> ShipToNumber [SHAN]
     FC Requested [DRQJ] <> RequestedDate [DRQJ]
     FC Order Date [TRDJ] <> OrderDate [TRDJ]
     FC Scheduled Pick [PDDJ] <> PromisedDeliveryDate [PDDJ]
     FC Cancel Date [CNDJ] <> CancelDate [CNDJ]
     BC Purchasing Category Code 5 (F4301.0) [PRP5] <> LandedCostRule [PRP5]
     FC Foreign [CRRM] <> CurrencyMode [CRRM]
     FC Currency Code [CRCD] <> TransactionCurrencyCode [CRCD]
     FC Exchange Rate [CRR] <> CurrencyConversionRate [CRR]
     FC To Currency Code [CRDC] <> CompanyCurrencyCode [CRDC]
     VA frm_SourceOfFormCall [EV01] <> SourceOfFormCall [EV01]
     FC JOBS:Job Number(wf) [JOBS] <> JobNumber [JOBS]
     FC CTID:Computer ID (wf) [CTID] <> ComputerID [CTID]
     FC Previous Order Number [LDOC] <> PreviousOrderNumber [LDOC]
     FC Previous Order Type [DCTO] <> szPrevOrderType [OCTO]
     FC Hold Orders Code [HOLD] <> szHoldOrdersCode [HOLD]
     VA frm_OrderSuffixForDetail [SFX0] -> szDetailSuffix [SFX]
     VA frm_AddChangeOrder [EV01] -> cAddChangeOrder [EV03]
     FC Physical Comp. [ADDJ] -> ActualDeliveryDate [ADDJ]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TSID]
     VA frm_AVCH_EvalReceipt [AVCH] -> cCodeAutomaticVoucher [AVCH]
     FC Retainage % [PCRT] -> mnPercent__F4301_Retainage [PCRT]
     FC Retainage Indicator [RETI] -> cRetainage_F4301_Indicator [RETI]
     VA frm_Old_Supplier [AN8] -> mnOldSupplier_AN8 [AN8]
     "EP4310" -> szUniquePID_PID [PID]
     FC Collection [C9COLL] -> szCollection [C9COLL]
     FC SeasonCode [C9SEAC] -> szSeasonCode [C9SEAC]
     FC Season Year [C9SEAY] -> szSeasonYear [C9SEAY]
     FC COLLECTION [DL01] -> szCollectionDescription [C9DSC1]
     FC Collection Price Effective Date [C9PRDJ] -> jdCollectionPriceEffDate [C9PRDJ]
     VA evt_cCollectionChanged_EV01 [EV01] -> cCollectionValuesChanged [EV01]
// End SAR 11064006
// SAR 8941364 - set the Order Header tab as current tab page.
Set Current Tab Page(FC Tab Control 274, TP Order Header)
//
FC EV01:WrittenToWorkFile(wf) [EV01] = "0"
//
//
VA frm_AVCH_EvalReceipt [AVCH] = "  "
//
// SAR 6047248, 6415012
VA frm_szSupplierPaymentTerms_PTC [PTC] = <NULL>
VA frm_szFreightHandlingCode_FRTH [FRTH] = <NULL>
//
VA frm_CRCM_SendMethod [CRCM] = <NULL>
FC Approval Route Code [ARTG] = <NULL>
//


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Cancel/Close
Event: Button Clicked
Event GUID: 3371698a-511e-435b-865f-a08538f0bb5c
=============================================
// SAR 8164296 Should Delete the Clause table records if the Clause records
// exist and the user has hit cancel before F4301 records were even created.
// Pass the Order header key information to check the table recrods.
DeleteClausesTableRecords(B4300080.DeleteClausesTableRecords)
     "000" -> szOrderSuffix [SFXO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] -> mnClause_ID [CUKID]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Quote Supplier Entry - Order Level
Event: Button Clicked
Event GUID: 90932e2c-a23d-11d0-a204-0000f6728a56
=============================================
If FC Business Unit [MCU] is equal to <Blank>
     Set Edit Control Error(FC Business Unit, "0003")
Else
     // 
     If FC Order Number [DOCO] is equal to "0"
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC Order Type [DCTO])
     End If
     //    
     Call App:P4330 Form:W4330A Version:Undefined
          FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          FC Order Type [DCTO] -> szOrderType [DCTO]
          FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          "0" -> mnLineNumber [LNID]
          "0" -> mnIdentifierShortItem [ITM]
          UNDEFINED <> szItemNoUnknownFormat [UITM]
          UNDEFINED <> szIdentifier3rdItem [AITM]
          UNDEFINED <> szCostCenter [MCU]
          FC Ship To SHAN [SHAN] -> mnAddressNumberShipTo [SHAN]
          UNDEFINED <> szSerialTagNumber [ASID]
          UNDEFINED <> szAcctNoInputMode [ANI]
          FC SFXO:Order Suffix(wf) [SFXO] -> szOrderSuffix [SFXO]
     Disable Control(FC Business Unit [MCU])
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Order Recap
Event: Button Clicked
Event GUID: 5ef15c48-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4310 Form:W4310C Version: 
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     UNDEFINED <> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC Business Unit [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Financial Status Inquiry
Event: Button Clicked
Event GUID: 5ef15c4a-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P44200 Form:W44200A Version:PO szFinancialStatusInquiry
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     UNDEFINED <> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     FC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szDescription [DESC]
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC Business Unit [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Order Address Information
Event: Button Clicked
Event GUID: f57df3ed-a23a-11d0-a204-0000f6728a56
=============================================
//    
// 7/27/2007 TB9051701 8482593- orderby was getting passed to userid 
// ---------------------------------------------------------------------------
//     If the address window is called and the order number has not
//     yet been assigned (in ADD mode) then assign a new item next
//     number.
// ---------------------------------------------------------------------------
// 
// ---------------------------------------------------------------------------
// Don't execute PO MBF if no supplier or MCU  
// ---------------------------------------------------------------------------
// 
// 
If FC Address Number [AN8] is equal to <Blank>
Or FC Address Number [AN8] is equal to "0"
     Stop Processing
End If
If FC Business Unit [MCU] is equal to <Blank>
     Set Edit Control Error(FC Business Unit, "0003")
Else
     // 
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC Order Type [DCTO])
     End If
     //    
     // SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
     // 8482593- orderby was getting passed to userid
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          FC JOBS:Job Number(wf) [JOBS] <> mnJobNumber [JOBS]
          FC CTID:Computer ID (wf) [CTID] <> szComputerID [CTID]
          FC ACTN:ActionCode (wf) [ACTN] -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          FC EV01..UsesWorkFiles(wf) [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          FC EV01:WrittenToWorkFile(wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Business Unit [MCU] <> szBranchPlant [MCU]
          BC Document Company (Original Order) (F4301.0) [OKCO] <> szOriginalOrderCompany [OKCO]
          BC Original Order Number (F4301.0) [OORN] <> szOriginalOrderNumber [OORN]
          BC Original Order Type (F4301.0) [OCTO] <> szOriginalOrderType [OCTO]
          BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
          BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
          BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To SHAN [SHAN] <> mnShipToNumber [SHAN]
          FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
          FC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          BC Reference (F4301.0) [VR01] <> szReference01 [VR01]
          BC Reference 2 (F4301.0) [VR02] <> szReference02 [VR02]
          BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions01 [DEL1]
          BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions02 [DEL2]
          BC Print Message (F4301.0) [INMG] <> szPrintMessage [INMG]
          BC Pricing Group (F4301.0) [PRGP] <> szSupplierPriceGroup [PRGP]
          BC Payment Terms Code (F4301.0) [PTC] <> szPaymentTerms [PTC]
          FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          FC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          FC Certificate [TXCT] <> szTaxCertificate [TXCT]
          BC Associated Text (F4301.0) [ATXT] <> cAssociatedText [ATXT]
          FC Hold Orders Code [HOLD] <> szHoldCode [HOLD]
          BC Freight Handling Code (F4301.0) [FRTH] <> szFreightHandlingCode [FRTH]
          FC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          FC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          BC Send Method (F4301.0) [CRMD] <> cSendMethod [CRMD]
          BC Purchasing Category Code 5 (F4301.0) [PRP5] <> szLandedCostRule [PRP5]
          FC Approval Route Code [ARTG] <> szApprovalRouteCode [ARTG]
          FC Foreign [CRRM] -> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnCurrencyExchangeRate [CRR]
          FC Ordered By [ORBY] <> szOrderedPlacedBy [ORBY]
          FC Order Taken By [TKBY] <> szOrderTakenBy [TKBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_szUserId_USER [USER] <> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          FC Description [DESC] <> szDescription [DESC]
          FC Remark [RMK] <> szRemark [RMK]
          FC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          FC Physical Comp. [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
     // 
     PopulateAddressNumber(B4303010.PopulateAddressNumber)
          VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
          FC Address Number [AN8] -> mnSupplierNumber [AN8]
          FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
          FC Long Address Number_ALKY [DL01] <- szSupplierDescription [DL01]
          FC Ship To SHAN [SHAN] -> mnShipToNumber [SHAN]
          FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
          FC Long Ship To_ALKY [DL01] <- szShipToDescription [DL01]
     // 
     If FC EV01:WrittenToWorkFile(wf) [EV01] is equal to "1"
          Call App:P4006 Form:W4006B Version: 
               FC Address Number [AN8] -> AddressNumber [AN8]
               FC Ship To SHAN [SHAN] -> ShipToNumber [SHAN]
               FC Order Number [DOCO] -> OrderNumber [DOCO]
               FC Order Type [DCTO] -> OrderType [DCTO]
               FC Order Company [KCOO] -> OrderCompany [KCOO]
               "P" -> CalledFromSales_S_OrPurch_P [EV01]
               UNDEFINED <> InquiryMode [EV02]
               UNDEFINED <> BatchOrderAddress [EV03]
               UNDEFINED <> EDIOrderAddress [EV04]
               UNDEFINED <> FileName [FILE]
               UNDEFINED <> EdiDocumentNumber [EDOC]
               UNDEFINED <> EdiDocumentType [EDCT]
               UNDEFINED <> CompanyKeyEdiOrder [EKCO]
               UNDEFINED <> EdiLineNumber [EDLN]
               UNDEFINED <> cShoppingCartMode [CART]
               FC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]
               UNDEFINED <> mnDeliverToNumber [DVAN]
               UNDEFINED <> mnForwardedToNumber [FTAN]
               UNDEFINED <> mnInvoiceToNumber [ITAN]
          Disable Control(FC Business Unit [MCU])
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Print Order
Event: Button Clicked
Event GUID: 72b5d901-ee60-11d1-8dcc-0000f6782893
=============================================
// SAR 4801999
Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
     FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     FC Order Type [DCTO] -> Ordertype [DCTO]
     FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Ordersuffix [SFXO]
     "1" -> Modeprocessing [MODE]
     UNDEFINED <> Numberchangeorder [CORD]
//
//
// Issue 8063 - Valkiria - RBS - 24/05/05
//
If PO cImprimeR5543501S [EV01] is equal to "1"
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "RBS43001"
     End If
     Call UBE:R5543501S Version:PO szPOPrintOnDemandVersion
          FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          FC Order Type [DCTO] -> Ordertype [DCTO]
          FC Order Company [KCOO] -> Companykeyorderno [KCOO]
          FC SFXO:Order Suffix(wf) [SFXO] -> Ordersuffix [SFXO]
          UNDEFINED <> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
Else
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "XJDE0003"
     End If
     ! Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
     !      FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     !      FC Order Type [DCTO] -> Ordertype [DCTO]
     !      FC Order Company [KCOO] -> Companykeyorderno [KCOO]
     !      FC SFXO:Order Suffix(wf) [SFXO] -> Ordersuffix [SFXO]
     !      "1" -> Modeprocessing [MODE]
     !      UNDEFINED <> Numberchangeorder [CORD]
     // SAR 4801999
     Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
          FC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          FC Order Type [DCTO] -> Ordertype [DCTO]
          FC Order Company [KCOO] -> Companykeyorderno [KCOO]
          UNDEFINED <> Ordersuffix [SFXO]
          "1" -> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
End If
// 
// End Issue 8063


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Supplier Master Information
Event: Button Clicked
Event GUID: f57e0b51-a23a-11d0-a204-0000f6728a56
=============================================
If FC Address Number [AN8] is not equal to "0"
And FC Address Number [AN8] is not equal to <Blank>
     Call App:P04012 Form:W04012D Version:PO szSupplierMasterVersion
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          UNDEFINED <> szCountryForPayroll [CCPR]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Work With Addresses
Event: Button Clicked
Event GUID: f57df3f0-a23a-11d0-a204-0000f6728a56
=============================================
// 
If PO szNewSupplierAdd [VL12] is equal to "1"
     // 
     Call App:P01012 Form:W01012B Version:ZJDE0001
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          "V" -> szAddressType1 [AT1]
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FC Address Number [AN8] -> mnMathNumeric01 [MATH01]
          FC Long Address Number_ALKY [ALKY] <- szVideoConstant30A [VC30A]
     // 
Else
     Call App:P0101S Form:W0101SA Version: 
          UNDEFINED <> AddressNumber [AN8]
End If
// 


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Attachments
Event: Button Clicked
Event GUID: f57df3ef-a23a-11d0-a204-0000f6728a56
=============================================
//    
// ---------------------------------------------------------------------------
//     If the Order Number is zero, then assign one here.
//     Generic text needs to have the order number to be keyed properly.
// ---------------------------------------------------------------------------
// 
// ---------------------------------------------------------------------------
// There must be a BP to get a company
// ---------------------------------------------------------------------------
// 
If FC Business Unit [MCU] is equal to <Blank>
     Set Edit Control Error(FC Business Unit, "0003")
Else
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC Order Type [DCTO])
     End If
     //    
     Media Object Structures(GT4301, <Default Media Object>, <Edit>, <First Text Item>, FC Generic Text exists (wf), FC Order Number, FC Order Type, FC Order Company, FC SFXO:Order Suffix(wf))
     If FC Generic Text exists (wf) [EV01] is equal to "1"
          Show Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = "Y"
          Disable Control(FC Business Unit [MCU])
     Else
          Hide Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = <Blank>
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Log Details
Event: Button Clicked
Event GUID: 5ef15c4b-e064-11d1-9ac9-00600832fe19
=============================================
// 
If FC Business Unit [MCU] is equal to <Blank>
     Set Edit Control Error(FC Business Unit, "0003")
Else
     // 
     If FC Order Number [DOCO] is equal to "0"
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          // 
          Disable Control(FC Order Number [DOCO])
          Disable Control(FC Order Type [DCTO])
     End If
     //    
     // ---------------------------------------------------------------------------
     // SAR 6585679 Begin: Call P4305 if Logs On in UDC 40/VF
     If VA frm_cLogsAtLevelsOn_EV01 [EV01] is equal to "1"
          Call App:P4305 Form:W4305A Version:PO szLogsEntryVersion
               FC Order Number [DOCO] -> mnDocument_Order_No_DOCO [DOCO]
               FC Order Type [DCTO] -> szOrder_F4305_Type_DCTO [DCTO]
               FC Order Company [KCOO] -> szOrder_Company_Order_KCOO [KCOO]
               "000" -> szOrder_F4305_Suffix_OSFX [SFXO]
               "01" -> szLogHierarchyLevel_LOGH [LOGH]
               "E" -> cCallType_EV01 [EV01]
               PO cJobProject [EV01] -> cP4310PO_JobProject_EV01 [EV01]
               "2" -> cCallMode_EV01 [EV01]
     Else
          // SAR 6585679 End
          // ---------------------------------------------------------------------------
          Call App:P4303 Form:W4303A Version: 
               BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               BC Order Type (F4301.0) [DCTO] -> szOrderType [DCTO]
               BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompanyKeyOrderNo [KCOO]
               UNDEFINED <> cCommitmentLogType [LGTY]
               UNDEFINED <> mnLogSequenceNumber [LGNO]
               <Blank> -> cCallType [EV01]
     End If
     Disable Control(FC Business Unit [MCU])
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Order Header - Additional Information
Event: Button Clicked
Event GUID: f57df3ee-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cW4310HFormMode_EV01 [EV01]
----------------------------------------
// ---------------------------------------------------------------------------
// 7/27/2007 TB9051701 8482593- orderby was getting passed to userid 
//     If the address window is called and the order number has not
//     yet been assigned (in ADD mode) then assign a new item next
//     number.
// 
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// Don't execute PO MBF if no supplier or MCU  MA 12.12.97
// ---------------------------------------------------------------------------
// 
// SAR 6344349 Begin
VA frm_iErrorCount_INT01 [INT01] = "0"
GetErrorCount(B9800250.GetErrorCount)
     VA frm_iErrorCount_INT01 [INT01] <- nNumberOfErrors [INT01]
     UNDEFINED <> nNumberOfWarnings [INT01]
If VA frm_iErrorCount_INT01 [INT01] is greater than "0"
     Stop Processing
End If
// 
If FC Address Number [AN8] is equal to <Blank>
Or FC Address Number [AN8] is equal to "0"
     Stop Processing
End If
If FC Business Unit [MCU] is equal to <Blank>
     Set Edit Control Error(FC Business Unit, "0003")
Else
     If SV Form_ Mode is equal to CO ADD_MODE
          // 
          GetNextOrderNumber(B4302960.GetNextOrderNumber)
               FC Order Number [DOCO] <> mnOrderNumber [DOCO]
               FC Order Company [KCOO] <> szOrderCompany [KCOO]
               FC Order Type [DCTO] <> szOrderType [DCTO]
               FC Business Unit [MCU] <> szBranchPlant [MCU]
               FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          // 
     End If
     // 
     // ---------------------------------------------------------------------------
     // Pass in the variable AVCH_EvalReceipts instead of BC value into beginDoc. 
     // ---------------------------------------------------------------------------
     // ---------------------------------------------------------------------------
     // Change the direction arrow for FC Foreign both ways.
     // ---------------------------------------------------------------------------
     // ---------------------------------------------------------------------------
     // SAR 6047248  - Changed the paramaters passed Passed PTC and FRTH
     // varibles instead of BC values
     //  SAR  6585679  - Add FC Print Message (INMG), FC AIA Document (FUF1) to 
     // Begin Doc
     // 
     // ---------------------------------------------------------------------------
     // 
     // SAR 7441790 - Change from BC to VA for Adjustment Schedule
     // SAR 8164309 - Pass FC Retainage Indicator to Begin Doc
     //  8482593- orderby was getting passed to userid 
     F4311FSBeginDoc(XT4311Z1.F4311FSBeginDoc)
          FC JOBS:Job Number(wf) [JOBS] <> mnJobNumber [JOBS]
          FC CTID:Computer ID (wf) [CTID] <> szComputerID [CTID]
          FC ACTN:ActionCode (wf) [ACTN] -> cHeaderActionCode [ACTN]
          "1" <> cProcessEdits [EV01]
          FC EV01..UsesWorkFiles(wf) [EV01] <> cUpdateOrWriteToWorkFile [EV01]
          FC EV01:WrittenToWorkFile(wf) [EV01] <> cRecordWrittenToWorkFile [EV01]
          FC Order Company [KCOO] <> szOrderCOmpany [KCOO]
          FC Order Number [DOCO] <> mnOrderNumber [DOCO]
          FC Order Type [DCTO] <> szOrderType [DCTO]
          "000" -> szOrderSuffix [SFXO]
          FC Business Unit [MCU] <> szBranchPlant [MCU]
          BC Document Company (Original Order) (F4301.0) [OKCO] <> szOriginalOrderCompany [OKCO]
          BC Original Order Number (F4301.0) [OORN] <> szOriginalOrderNumber [OORN]
          BC Original Order Type (F4301.0) [OCTO] <> szOriginalOrderType [OCTO]
          BC Company - Key (Related Order) (F4301.0) [RKCO] <> szRelatedOrderCompany [RKCO]
          BC Related PO/SO/WO Number (F4301.0) [RORN] <> szRelatedOrderNumber [RORN]
          BC Related PO/SO/WO Order Type (F4301.0) [RCTO] <> szRelatedOrderType [RCTO]
          FC Address Number [AN8] <> mnSupplierNumber [AN8]
          FC Ship To SHAN [SHAN] <> mnShipToNumber [SHAN]
          FC Requested [DRQJ] <> jdRequestedDate [DRQJ]
          FC Order Date [TRDJ] <> jdOrderDate [TRDJ]
          FC Scheduled Pick [PDDJ] <> jdPromisedDate [PDDJ]
          FC Cancel Date [CNDJ] <> jdCancelDate [CNDJ]
          BC Reference (F4301.0) [VR01] <> szReference01 [VR01]
          BC Reference 2 (F4301.0) [VR02] <> szReference02 [VR02]
          BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions01 [DEL1]
          BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions02 [DEL2]
          FC Print Message [INMG] <> szPrintMessage [INMG]
          BC Pricing Group (F4301.0) [PRGP] <> szSupplierPriceGroup [PRGP]
          VA frm_szSupplierPaymentTerms_PTC [PTC] <> szPaymentTerms [PTC]
          FC Tax Expl Code [EXR1] <> szTaxExplanationCode [EXR1]
          FC Tax Rate/Area [TXA1] <> szTaxRateArea [TXA1]
          FC Certificate [TXCT] <> szTaxCertificate [TXCT]
          BC Associated Text (F4301.0) [ATXT] <> cAssociatedText [ATXT]
          FC Hold Orders Code [HOLD] <> szHoldCode [HOLD]
          VA frm_szFreightHandlingCode_FRTH [FRTH] <> szFreightHandlingCode [FRTH]
          FC Buyer Number [ANBY] <> mnBuyerNumber [ANBY]
          FC Carrier Number [ANCR] <> mnCarrierNumber [ANCR]
          VA frm_AVCH_EvalReceipt [AVCH] <> cEvaluatedReceiptsFlag [AVCH]
          VA frm_CRCM_SendMethod [CRCM] <> cSendMethod [CRMD]
          BC Purchasing Category Code 5 (F4301.0) [PRP5] <> szLandedCostRule [PRP5]
          FC Approval Route Code [ARTG] <> szApprovalRouteCode [ARTG]
          FC Foreign [CRRM] <> cCurrencyMode [CRRM]
          FC Currency Code [CRCD] <> szTransactionCurrencyCode [CRCD]
          FC Exchange Rate [CRR] <> mnCurrencyExchangeRate [CRR]
          FC Ordered By [ORBY] <> szOrderedPlacedBy [ORBY]
          FC Order Taken By [TKBY] <> szOrderTakenBy [TKBY]
          "EP4310" -> szProgramID [PID]
          SL VersionName -> szPurchaseOrderPrOptVersion [VERS]
          FC To Currency Code [CRDC] <> szBaseCurrencyCode [CRDC]
          VA frm_szUserId_USER [USER] <> szUserID [USER]
          FC Retainage % [PCRT] <> mnRetainage [PCRT]
          FC Description [DESC] <> szDescription [DESC]
          FC Remark [RMK] <> szRemark [RMK]
          FC Effective Date [PEFJ] <> jdEffectiveDate [PEFJ]
          FC Physical Comp. [ADDJ] <> jdPhysicalCompletionDate [ADDJ]
          VA frm_szPriceAdjustmentScheduleN [ASN] <> szPriceAdjustmentScheduleN [ASN]
          FC AIA Document [FUF1] <> cAIADocument [FUF1]
          VA frm_mnProcessID_PEID [PEID] <> mnProcessID [PEID]
          VA frm_mnTransactionID_TCID [TCID] <> mnTransactionID [TCID]
          FC Property 01 [POHP01] -> cPurchaseOrderProperty01 [POHP01]
          FC Property 02 [POHP02] -> cPurchaseOrderProperty02 [POHP02]
          FC Property 03 [POHP03] -> cPurchaseOrderProperty03 [POHP03]
          FC Property 04 [POHP04] -> cPurchaseOrderProperty04 [POHP04]
          FC Property 05 [POHP05] -> cPurchaseOrderProperty05 [POHP05]
          FC Property 06 [POHP06] -> cPurchaseOrderProperty06 [POHP06]
          FC Property 07 [POHP07] -> cPurchaseOrderProperty07 [POHP07]
          FC Property 08 [POHP08] -> cPurchaseOrderProperty08 [POHP08]
          FC Property 09 [POHP09] -> cPurchaseOrderProperty09 [POHP09]
          FC Property 10 [POHP10] -> cPurchaseOrderProperty10 [POHP10]
          FC Property 11 [POHP11] -> cPurchaseOrderProperty11 [POHP11]
          FC Property 12 [POHP12] -> cPurchaseOrderProperty12 [POHP12]
          FC Date 01 [POHD01] -> jdPurchaseOrderDate01 [POHD01]
          FC Date 02 [POHD02] -> jdPurchaseOrderDate02 [POHD02]
          FC Address Book 01 [POHAB01] -> mnPOAddressBook01 [POHAB01]
          FC Address Book 02 [POHAB02] -> mnPOAddressBook02 [POHAB02]
          FC Category Code 01 [POHC01] -> szPurchaseOrderCode01 [POHC01]
          FC Category Code 02 [POHC02] -> szPurchaseOrderCode02 [POHC02]
          FC Category Code 03 [POHC03] -> szPurchaseOrderCode03 [POHC03]
          FC Category Code 04 [POHC04] -> szPurchaseOrderCode04 [POHC04]
          FC Category Code 05 [POHC05] -> szPurchaseOrderCode05 [POHC05]
          FC Category Code 06 [POHC06] -> szPurchaseOrderCode06 [POHC06]
          FC Category Code 07 [POHC07] -> szPurchaseOrderCode07 [POHC07]
          FC Category Code 08 [POHC08] -> szPurchaseOrderCode08 [POHC08]
          FC Category Code 09 [POHC09] -> szPurchaseOrderCode09 [POHC09]
          FC Category Code 10 [POHC10] -> szPurchaseOrderCode10 [POHC10]
          FC Category Code 11 [POHC11] -> szPurchaseOrderCode11 [POHC11]
          FC Category Code 12 [POHC12] -> szPurchaseOrderCode12 [POHC12]
          FC Property 13 [POHP13] -> szPurchaseOrderProperty13 [POHP13]
          FC Date and Time 01 [POHU01] -> POUniversalDate01 [POHU01]
          FC Date and Time 02 [POHU02] -> POUniversalDate02 [POHU02]
          FC Clause ID [CUKID] -> mnClause_ID [CUKID]
          FC Long Address AB01 [ALKY] -> szAlternateAddress1 [ALKY]
          FC Long Address AB02 [ALKY] -> szAlternateAddress2 [ALKY]
          FC Retainage Indicator [RETI] -> cRetainageIndicator [RETI]
     // 
     // ---------------------------------------------------------------------------
     // Pass in the variable AVCH_EvalReceipts instead of BC value. 
     // ---------------------------------------------------------------------------
     // ---------------------------------------------------------------
     //    SAR 5102858 - Need to pass in the Form Mode for W4310H.  Sytem value
     //    Form_Mode is always UPDATE, even in ADD.
     // ---------------------------------------------------------------
     // 
     If SV Form_ Mode is equal to CO ADD_MODE
          VA evt_cW4310HFormMode_EV01 [EV01] = "1"
     Else
          VA evt_cW4310HFormMode_EV01 [EV01] = "2"
     End If
     // 
     // SAR 6047248
     // SAR 7441790  - Pass VA not BC for Adjustment Schedule
     // SAR 8164261 Pass Cache key fields to the form to retrieve the
     // Classification code.
     // 
     // SAR 8352393
     // If ADD MODE pass in F0401 AVCH
     If SV Form_ Mode is equal to CO ADD_MODE
          Call App:P4310 Form:W4310H Version:Undefined
               FC Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] <> OrderType [DCTO]
               FC Order Company [KCOO] <> CompanyKeyOrderNo [KCOO]
               FC SFXO:Order Suffix(wf) [SFXO] <> OrderSuffix [SFXO]
               BC Print Message (F4301.0) [INMG] <> PrintMessage1 [INMG]
               BC Pricing Group (F4301.0) [PRGP] <> PricingGroup [PRGP]
               VA frm_szFreightHandlingCode_FRTH [FRTH] <> FreightHandlingCode [FRTH]
               BC Purchasing Category Code 5 (F4301.0) [PRP5] <> LandedCostRule [PRP5]
               VA frm_CRCM_SendMethod [CRCM] <> SendMethod [CRMD]
               VA frm_AVCH_EvalReceipt [AVCH] <> EvaluatedReceipts [AVCH]
               VA frm_szSupplierPaymentTerms_PTC [PTC] <> Paymenttermscode [PTC]
               BC Reference (F4301.0) [VR01] <> Reference1 [VR01]
               BC Reference 2 (F4301.0) [VR02] <> Reference2 [VR02]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> Deliveryinstructline1 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> Deliveryinstructline2 [DEL2]
               VA frm_szPriceAdjustmentScheduleN [ASN] <> szPriceAdjustmentScheduleN [ASN]
               BC AIA Document Flag (F4301.0) [FUF1] <> cAIADocumentFlag [FUF1]
               VA evt_cW4310HFormMode_EV01 [EV01] <> cIncomingFormMode [EV01]
               FC Address Number [AN8] <> mnSupplier_AN8 [AN8]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
               FC CTID:Computer ID (wf) [CTID] -> szComputerID [CTID]
               FC JOBS:Job Number(wf) [JOBS] -> mnJobnumberA [JOBS]
     Else
          // update mode, pass in F4301AVCH
          Call App:P4310 Form:W4310H Version:Undefined
               FC Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
               FC Order Type [DCTO] <> OrderType [DCTO]
               FC Order Company [KCOO] <> CompanyKeyOrderNo [KCOO]
               FC SFXO:Order Suffix(wf) [SFXO] <> OrderSuffix [SFXO]
               BC Print Message (F4301.0) [INMG] <> PrintMessage1 [INMG]
               BC Pricing Group (F4301.0) [PRGP] <> PricingGroup [PRGP]
               VA frm_szFreightHandlingCode_FRTH [FRTH] <> FreightHandlingCode [FRTH]
               BC Purchasing Category Code 5 (F4301.0) [PRP5] <> LandedCostRule [PRP5]
               VA frm_CRCM_SendMethod [CRCM] <> SendMethod [CRMD]
               BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] <> EvaluatedReceipts [AVCH]
               VA frm_szSupplierPaymentTerms_PTC [PTC] <> Paymenttermscode [PTC]
               BC Reference (F4301.0) [VR01] <> Reference1 [VR01]
               BC Reference 2 (F4301.0) [VR02] <> Reference2 [VR02]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> Deliveryinstructline1 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> Deliveryinstructline2 [DEL2]
               VA frm_szPriceAdjustmentScheduleN [ASN] <> szPriceAdjustmentScheduleN [ASN]
               BC AIA Document Flag (F4301.0) [FUF1] <> cAIADocumentFlag [FUF1]
               VA evt_cW4310HFormMode_EV01 [EV01] <> cIncomingFormMode [EV01]
               FC Address Number [AN8] <> mnSupplier_AN8 [AN8]
               VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
               VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
               FC CTID:Computer ID (wf) [CTID] -> szComputerID [CTID]
               FC JOBS:Job Number(wf) [JOBS] -> mnJobnumberA [JOBS]
     End If
     // 
     // Now obsolete
     // 
     ! If SV Form_ Mode is equal to CO UPDATE_MODE
          ! If VA frm_AVCH_EvalReceipt [AVCH] is equal to VA frm_cEvalReceiptNewSupp_AVCH [AVCH]
               ! Clear Control Error(FC Long Address Number_ALKY [ALKY])
          ! End If
     ! End If
     // end obsolete
     // End SAR 8352393
     // 
     PopulateAddressNumber(B4303010.PopulateAddressNumber)
          VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
          FC Address Number [AN8] -> mnSupplierNumber [AN8]
          FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
          FC Long Address Number_ALKY [DL01] <- szSupplierDescription [DL01]
          FC Ship To SHAN [SHAN] -> mnShipToNumber [SHAN]
          FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
          FC Long Ship To_ALKY [DL01] <- szShipToDescription [DL01]
     // 
End If

=============================================
Form: Order Header - W4310B
Object: HC Order Header - Additional Information
Event: Post Button Clicked
Event GUID: 394961d6-af05-423f-82ff-8b00e3f4f058
=============================================
// SAR 7441790 - Load new BC from VA reguardless of user change to Adjustment
// Schedule
BC Price and Adjustment Schedule (F4301.0) [ASN] = VA frm_szPriceAdjustmentScheduleN [ASN]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Clauses using Print Message
Event: Button Clicked
Event GUID: c242128f-9ccf-4260-8605-c277014b5891
=============================================
// SAR 8164296
Call App:P4310 Form:W4310K Version:Undefined
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] <> mnClause_ID [CUKID]
// Update the POE Cache record with the new clause ID. Pass the cache related
// to update the cache and Order information to update the order.
// information.
UpdatePOEWithClauseID(B4300080.UpdatePOEWithClauseID)
     FC CTID:Computer ID (wf) [CTID] -> szComputerID [CTID]
     VA frm_mnProcessID_PEID [PEID] -> mnProcessID [PEID]
     VA frm_mnTransactionID_TCID [TCID] -> mnTransactionID [TCID]
     FC JOBS:Job Number(wf) [JOBS] -> mnJobnumberA [JOBS]
     "000" -> szOrderSuffix [SFXO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] -> mnClause_ID [CUKID]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Define the columns to populate to the Detail table
Event: Button Clicked
Event GUID: c78581b1-a240-11d0-a204-0000f6728a56
=============================================
Call App:P40HDR Form:W40HDRA Version: 
     "43" -> szSystemCode [SY]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: HC Populate the changed header values to the detail lines
Event: Button Clicked
Event GUID: c78581b2-a240-11d0-a204-0000f6728a56
=============================================
VA frm_OnDemandHeaderToDetail [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Order Type
Event: Control Exited/Changed-Inline
Event GUID: 667dbd51-2da2-11d3-a27b-00105a1c04c1
=============================================
// 
If FC Order Type [DCTO] is not equal to <Blank>
And FC Order Type [DCTO] is not equal to <NULL>
     // 
     GetUDC(X0005.GetUDC)
          UNDEFINED <> szDataDictionaryItem [DTAI]
          "00" -> szSystemCode [SY]
          "DT" -> szRecordTypeCode [RT]
          FC Order Type [DCTO] -> szUserDefinedCode [KY]
          "2.00" -> mnKeyFieldLength [AS]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          "1" -> cSuppressErrorMessage [EV01]
          VA frm_szUDCErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
     If VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <Blank>
     And VA frm_szUDCErrorMessageID_DTAI [DTAI] is not equal to <NULL>
          Set Control Error(FC F4301:Order Type, "2362")
     End If
     // 
     // 
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Business Unit
Event: Control Exited/Changed-Asynch
Event GUID: f57df3e9-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szChangedCompany_KCOO [KCOO]
evt_szChangedToCurrency_CRCD [CRCD]
----------------------------------------
// 
If FC Business Unit [MCU] is equal to <Blank>
     Set Control Error(FC Business Unit, "0003")
Else
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] <> szCostCenter [MCU0]
               FC Order Company [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
          If FC Order Company [KCOO] is not equal to <Blank>
          And SL CurrencyProcessing is not equal to "N"
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    FC Order Company [KCOO] -> szCompany [CO]
                    FC To Currency Code [CRDC] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
          End If
          SetForeignFlag(B4302980.SetForeignFlag)
               FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
               FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
               FC Foreign [CRRM] <> cCurrencyMode [CRRM]
               SL CurrencyProcessing -> cCurrencyProcessing [EV01]
     Else
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] <> szCostCenter [MCU0]
               VA evt_szChangedCompany_KCOO [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
          If VA evt_szChangedCompany_KCOO [KCOO] is not equal to <Blank>
          And SL CurrencyProcessing is not equal to "N"
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    VA evt_szChangedCompany_KCOO [KCOO] -> szCompany [CO]
                    VA evt_szChangedToCurrency_CRCD [CRCD] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
               If VA evt_szChangedToCurrency_CRCD [CRCD] is not equal to FC To Currency Code [CRDC]
                    Set Control Error(FC Business Unit, "128I")
               End If
          End If
          // 
          // ---------------------------------------------------------------------------
          //      If the user updates the Branch Plant (B/P) in the inquire mode
          //      and if the hold cold exists in the order  then the B/P should be updated
          //      in F4209 also.
          // ---------------------------------------------------------------------------
          // 
          If FC Hold Orders Code [HOLD] is not equal to <Blank>
          And FC Hold Orders Code [HOLD] is not equal to <NULL>
               VA frm_cHoldCodeEntered_EV01 [EV01] = "1"
          End If
          // 
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Currency Code
Event: Control Exited/Changed-Asynch
Event GUID: 909324f8-a23d-11d0-a204-0000f6728a56
=============================================
SetForeignFlag(B4302980.SetForeignFlag)
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
     FC Foreign [CRRM] <> cCurrencyMode [CRRM]
     SL CurrencyProcessing -> cCurrencyProcessing [EV01]
// 


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Long Address Number_ALKY
Event: Control is Entered
Event GUID: 9b33b5c4-5fc0-11d3-a2a5-00105a1c04c1
=============================================
VA frm_szSaveLongAddressNo_ALKY [ALKY] = FC Long Address Number_ALKY [ALKY]

=============================================
Form: Order Header - W4310B
Object: FC Long Address Number_ALKY
Event: Control is Exited
Event GUID: 2d215111-93bf-11d3-a1f7-00105a1c0012
=============================================
//
If FC Order Date [TRDJ] is equal to Null Date
     FC Order Date [TRDJ] = date_today()
End If
//
// SAR# 8352393
// This needs to be saved for comparison
//
VA frm_szSaveLongAddressNo_ALKY [ALKY] = FC Long Address Number_ALKY [ALKY]
//
// End SAR# 8352393

=============================================
Form: Order Header - W4310B
Object: FC Long Address Number_ALKY
Event: Control Exited/Changed-Inline
Event GUID: c00b8ec9-b170-11d2-a1b6-00104bc6f551
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szSupplierError_DTAI [DTAI]
evt_szCertificateNumber_TXCT [TXCT]
evt_szTaxArea_TXA1 [TXA1]
evt_szSavedTaxExplanation_EXR1 [EXR1]
evt_cSupplierExistsFlag [EV01]
evt_PayRevisionError_DTAI [DTAI]
evt_szSupplierPaymentTerm_PTC [PTC]
----------------------------------------
// ======================================================
//    Date       Programmer     SAR#                    Description
// 11/15/06  AB9050717   7996980   Delivery Instructions not defa
// 07/27/2007 tb9051701 8499942 Supplier details overwritten on enquiry.
// 01/02/200  IC9024703   8667889   Supplier currency not immediat
// 09/30/2009  GG9050709  8909649   Delivery Line 2 Disappears in
// 09/16/10  AT6068874   8958114   Send Method is not updated
// ======================================================
If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
And FC Long Address Number_ALKY [ALKY] is not equal to "*"
And FC Long Address Number_ALKY [ALKY] is not equal to <NULL>
And FC Long Address Number_ALKY [ALKY] is not equal to "0"
     //
     // ---------------------------------------------------------------------------
     // The ALKY field is used for entry only.  The following business function uses
     // the value entered into ALKY and finds the appropriate address book number,
     // then populates the AN8 field - the field used for all the business function
     // calls.    This way, a string or number may be entered and the app will
     // function as usual.
     // ---------------------------------------------------------------------------
     //
     // SAR 7503014 Begin - Remove N4303040 from event
     ! AddandEditSupplier(N4303040.AddandEditSupplier)
     !      SV Form_ Mode -> idFormMode [GENLNG]
     !      FC Long Address Number_ALKY [ALKY] <> szLongAddressNumber [ALKY]
     !      FC Long Address Number_ALKY [DL01] <> szAddressNumberDescription [DL01]
     !      FC Address Number [AN8] <> mnAddressNumber [AN8]
     !      PO szNewSupplierAdd [VL12] -> szNewSupplierAdd [VL12]
     !      VA evt_szCertificateNumber_TXCT [TXCT] <> szTaxCertificate [TXCT]
     !      FC Tax ID [TAX] <> szTaxId [TAX]
     !      FC Person/Corp. ID [TAXC] <> cPersonCorporationID [TAXC]
     !      VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [TSTA]
     !      FC CREDIT MESSAGE [DL01] <> szCreditDescription [DL01]
     !      VA frm_cTriggerSupplierAdd [EV01] <- cTriggerSupplierAdd [EV01]
     ! //
     ! // SAR 7048496 Begin
     ! If VA frm_cTriggerSupplierAdd [EV01] is equal to "Y"
          ! Call App:P01012 Form:W01012B Version:ZJDE0001
          !      FC Address Number [AN8] <> mnAddressNumber [AN8]
          !      "V" -> szAddressType1 [AT1]
     ! End If
     ! ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
     !      FC Long Address Number_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
     !      FC Address Number [AN8] <- mnAddressNumber [AN8]
     !      "5" -> cInputSelection [EV01]
     ! // SAR 7048496 End
     CheckStringIsNumeric(B7600580.CheckStringIsNumeric)
          FC Long Address Number_ALKY [ALKY] -> szString [VR01]
          VA frm_StringIsNumeric [SVAL] <- cStringIsNumericYN [EV01]
     ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
          FC Long Address Number_ALKY [ALKY] -> szGenericString [DSC1]
          VA frm_AN8_LongAddressNumeric [AN8] <- mnNumericValue [ITM]
     FC Address Number [AN8] = VA frm_AN8_LongAddressNumeric [AN8]
     VA evt_szSupplierError_DTAI [DTAI] = <Blank>
     // SAR 8909649 Begin
     // SAR 7996980 Begin
     ! If BC Delivery Instructions Line 1 (F4301.0) [DEL1] is equal to <Blank>
          ! GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
          !      FC Address Number [AN8] -> mnAddressNumber [AN8]
          !      BC Delivery Instructions Line 1 (F4301.0) [DEL1] <- szDeliveryInstructions1 [DEL1]
          !      BC Delivery Instructions Line 2 (F4301.0) [DEL2] <- szDeliveryInstructions2 [DEL2]
     ! End If
     // SAR 7996980 End
     // SAR 8909649 End
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          RetrieveCreditMessage(B4303050.RetrieveCreditMessage)
               FC Address Number [AN8] <> mnAddressNumber [AN8]
               SV Form_ Mode -> idFormMode [GENLNG]
               FC Long Address Number_ALKY [DL01] <> szAddressDescription [DL01]
               FC Tax ID [TAX] <> szTaxId [TAX]
               FC Person/Corp. ID [TAXC] <> cPersonCorporationCode [TAXC]
               FC CREDIT MESSAGE [DL01] <> szCreditMessage [TSTA]
               VA evt_szCertificateNumber_TXCT [TXCT] <> szCertificateTaxExempt [TXCT]
               VA evt_szSupplierError_DTAI [DTAI] <> szSupplierErrorMessage [DTAI]
     Else
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               FC Long Address Number_ALKY [DL01] <- szAlphaName [ALPH]
               VA evt_szSupplierError_DTAI [DTAI] <- szErrorMessage [DTAI]
               "1" -> cSuppressError [ERR]
     End If
     If VA frm_StringIsNumeric [SVAL] is equal to "Y"
          If PO szNewSupplierAdd [VL12] is equal to "1"
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to <Blank>
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to <NULL>
          And VA evt_szSupplierError_DTAI [DTAI] is not equal to "0"
               Call App:P01012 Form:W01012B Version:ZJDE0001
                    "V" -> szAddressType1 [AT1]
          End If
     End If
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <> mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Long Address Number_ALKY [DL01] <- szNameAlpha [ALPH]
     // SAR 7503014 End - Remove N4303040 from event
     //
     If SV Form_ Mode is not equal to CO UPDATE_MODE
          If VA evt_szCertificateNumber_TXCT [TXCT] is not equal to <Blank>
          And VA evt_szCertificateNumber_TXCT [TXCT] is not equal to <NULL>
               FC Certificate [TXCT] = VA evt_szCertificateNumber_TXCT [TXCT]
          End If
     Else
          //
          // ---------------------------------------------------------------------------
          // SAR 6278927 Begin - Include the company number in the fetch from the F0411
          // so that error is not issued on orders that have the same DOCO  and DCTO,
          // but a different company.
          // ---------------------------------------------------------------------------
          //
          If VA frm_mnOriginalAddressNumber [MATH01] is not equal to FC Address Number [AN8]
               MathNumericToStringZeroPad(B0000083.MathNumericToStringZeroPad)
                    VA frm_F0411Purchase_PO [PO] <- szString [DL01]
                    BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnMathNumeric [MATH01]
                    "9" -> nSizeOfString [INT01]
               // SAR 7224584 Begin
               F0411VerifySupplierExists(B4305250.F0411VerifySupplierExists)
                    VA frm_mnOriginalAddressNumber [MATH01] -> mnAddressNumber [AN8]
                    VA frm_F0411Purchase_PO [PO] -> szPurchaseOrder [PO]
                    BC Order Type (F4301.0) [DCTO] -> szDocumentTypePurchase [PDCT]
                    BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompanyKeyPurchase [PKCO]
                    VA evt_cSupplierExistsFlag [EV01] <- cSupplierExists [EV01]
               If VA evt_cSupplierExistsFlag [EV01] is equal to "1"
                    Set Control Error(FC Long Address Number_ALKY, "411C")
               End If
               // SAR 7224584 End
          End If
          //
     End If
Else
     Set Control Error(FC Long Address Number_ALKY, "0037")
     Stop Processing
End If
// ===============================================================
//
// ---------------------------------------------------------------------------
// fetch to credit message
// ---------------------------------------------------------------------------
//
If VA frm_TSTA_Credit_Msg [TSTA] is not equal to <Blank>
     Show Control(FC CREDIT MESSAGE [DL01])
Else
     Hide Control(FC CREDIT MESSAGE [DL01])
End If
//
// SAR 8499942- If the supplier number has actually changed then do the

// rocessing
If VA frm_mnPrevAddressNumber_AN8 [AN8] is not equal to FC Address Number [AN8]
     VA frm_mnPrevAddressNumber_AN8 [AN8] = FC Address Number [AN8]
     If FC Address Number [AN8] is not equal to "0"
     And SV Form_ Mode is not equal to CO UPDATE_MODE
          // SAR 6344349 Begin
          //
          // SAR 7441790 - Load Adjustment Schedule from Purchasing Instructions.This
          // SAR 8909649 Begin - Passed delivery line instructions 1 and 2
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions1 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions2 [DEL2]
               VA frm_szSaveHoldCode_HOLD [HOLD] <- szOrderHoldCode [HOLD]
               VA frm_szSaveCurrencyCdeFrom_CRCD [CRCD] <- szSupplierCurrencyCode [CRRP]
               VA evt_szTaxArea_TXA1 [TXA1] <- szTaxRateArea [TXA2]
               VA evt_szSavedTaxExplanation_EXR1 [EXR1] <- szTaxExplCode [EXR2]
               VA frm_CRCM_SendMethod [CRCM] <> cCorrespondenceMethod [CRMD]
               VA frm_cEvalReceiptNewSupp_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
               VA frm_szPriceAdjustmentScheduleN [ASN] <- szPriceAdjustmentSchedule [ASN]
          // SAR 8909649 End
          // will be used in the event a user takes the Exit to 'Additional information
          // '.Begin Doc is called on the form Exit  and on the OK button.
          // SAR# - 7382380 Getting the payment term for the supplier
          DisplayPurchasingInstructions(B4302980.DisplayPurchasingInstructions)
               SV Form_ Mode -> idFormMode [GENLNG]
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               VA frm_szSaveHoldCode_HOLD [HOLD] <> szHoldOrdersCode [HOLD]
               FC Currency Code [CRCD] <> szCurrencyCode [CRCD]
               VA evt_szTaxArea_TXA1 [TXA1] <> szTaxArea [TXA1]
               VA evt_szSavedTaxExplanation_EXR1 [EXR1] <> szSavedTaxExplanationCode [EXR1]
               VA frm_CRCM_SendMethod [CRCM] <> cSendMethod [CRCM]
               VA frm_cEvalReceiptNewSupp_AVCH [AVCH] <> cEvalReceiptNewSupp [AVCH]
               VA frm_szSaveLongAddressNo_ALKY [ALKY] <> szSaveLongAddressNo [ALKY]
               SL CurrencyProcessing -> cCurrencyProcessing [EV01]
               FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
               VA frm_cHoldCodeEntered_EV01 [EV01] <> cHoldCodeEntered [EV01]
               FC Long Address Number_ALKY [ALKY] -> szLongAddressNo [ALKY]
               VA evt_szSupplierPaymentTerm_PTC [PTC] <- szPaymentTerms [PTC]
          //
          // ---------------------------------------------------------------------------
          // Currency code field will not be overwritten if it is manually
          // entered by the user.
          // ---------------------------------------------------------------------------
          //
          // SAR# 8352393
          // New logic makes this obsolete
          //
          ! If VA frm_Old_EvaluatedReceipt [AVCH] is equal to "Y"
          ! And VA frm_cEvalReceiptNewSupp_AVCH [AVCH] is equal to "N"
               ! Set Control Error(FC Long Address Number_ALKY, "4198")
          ! Else
               ! VA frm_AVCH_EvalReceipt [AVCH] = VA frm_cEvalReceiptNewSupp_AVCH [AVCH]
          ! End If
          //
          // End SAR# 8352393
          //
          // SAR 6344349 End
          //
          // ---------------------------------------------------------------------------
          // SAR # - 7954430 begin --- Default Payment Terms when supplier is entered
          // ---------------------------------------------------------------------------
          FC Payment Terms [PTC] = VA evt_szSupplierPaymentTerm_PTC [PTC]
          ! // SAR# - 7382380 Assign the supplier's payment term to the payment term field
          ! // when blank is not a valid value in payment revisions
          ! GetPaymentTermsInfo(N48S0350.GetPaymentTermsInfo)
          !      <Blank> -> szPaymentTermsCode01 [PTC]
          !      VA evt_PayRevisionError_DTAI [DTAI] <- szErrorMessageID [DTAI]
          ! If VA evt_PayRevisionError_DTAI [DTAI] is equal to "0130"
               ! FC Payment Terms [PTC] = VA evt_szSupplierPaymentTerm_PTC [PTC]
          ! End If
          // SAR # - 7954430 end --- Default Payment Terms when supplier is entered
          //
     Else
          //
          // ---------------------------------------------------------------------------
          // SAR 6047248 Begin - Getting PTC and FRTH paramaters
          // ---------------------------------------------------------------------------
          //
          // SAR 7507947 modified function to get value of Adjustment Schedule, since
          // this function will get called when the form is in UPDATE mode.
          // SAR 8909649 Begin - Passed delivery line instructions 1 and 2
          //     Begin SAR 8958114 - Retrieve Send Method on an Update.
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               FC Address Number [AN8] -> mnAddressNumber [AN8]
               BC Delivery Instructions Line 1 (F4301.0) [DEL1] <> szDeliveryInstructions1 [DEL1]
               BC Delivery Instructions Line 2 (F4301.0) [DEL2] <> szDeliveryInstructions2 [DEL2]
               VA frm_szFreightHandlingCode_FRTH [FRTH] <- szFreightHandlingCode [FRTH]
               VA frm_szSupplierPaymentTerms_PTC [PTC] <- szPaymentTerms [TRAP]
               VA evt_szTaxArea_TXA1 [TXA1] <- szTaxRateArea [TXA2]
               VA evt_szSavedTaxExplanation_EXR1 [EXR1] <- szTaxExplCode [EXR2]
               VA frm_CRCM_SendMethod [CRCM] <- cCorrespondenceMethod [CRMD]
               VA frm_cEvalReceiptNewSupp_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
               VA frm_szPriceAdjustmentScheduleN [ASN] <- szPriceAdjustmentSchedule [ASN]
          //     End SAR 8958114
          // SAR 8909649 End
          //
          // SAR 6344349 Begin
          If VA frm_Old_EvaluatedReceipt [AVCH] is equal to "Y"
          And VA frm_cEvalReceiptNewSupp_AVCH [AVCH] is equal to "N"
               Set Control Error(FC Long Address Number_ALKY, "4198")
          Else
               VA frm_AVCH_EvalReceipt [AVCH] = VA frm_cEvalReceiptNewSupp_AVCH [AVCH]
          End If
          // SAR 6344349 End
          //
          If VA frm_mnOriginalAddressNumber [MATH01] is equal to FC Address Number [AN8]
               VA frm_szSupplierPaymentTerms_PTC [PTC] = BC Payment Terms Code (F4301.0) [PTC]
               VA frm_szFreightHandlingCode_FRTH [FRTH] = BC Freight Handling Code (F4301.0) [FRTH]
          End If
          // SAR 6047248 End
          //
          // ---------------------------------------------------------------------------
          // Eval Receipt Checking moved to Additional Info Form
          // ---------------------------------------------------------------------------
          //
     End If
     //
     // SAR #8430566
     // In update mode (Header Revision) the user can change supplier.
     // Therefore, the Supplier currency and Supplier currency exchange rate need
     // to be populated in their respective fields
     //
     // SAR#8667889 - Begin
     // Inserted an OR condition for ADD mode, the currency
     // code should populate in ADD mode too.
     If SV Form_ Mode is equal to CO UPDATE_MODE
     Or SV Form_ Mode is equal to CO ADD_MODE
          // SAR#8667889 - End
          //
          ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
               FC Long Address Number_ALKY [ALKY] -> szGenericString [DSC1]
               VA frm_mnChangedSupplierNumbr_AN8 [AN8] <- mnNumericValue [ITM]
          GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
               VA frm_mnChangedSupplierNumbr_AN8 [AN8] -> mnAddressNumber [AN8]
               VA frm_szChangedSuplrCurrCde_CRCD [CRCD] <- szSupplierCurrencyCode [CRRP]
          // SAR  8535131 Begin
          // We should also check supplier's currency it should not be blank
          // If it is Blank we should copy company's currency to FC To
          // Currency Code
          If VA frm_szChangedSuplrCurrCde_CRCD [CRCD] is not equal to <Blank>
          And VA frm_szChangedSuplrCurrCde_CRCD [CRCD] is not equal to <NULL>
               FC Currency Code [CRCD] = VA frm_szChangedSuplrCurrCde_CRCD [CRCD]
               //
               // SAR#8667889 - Begin
               // The Exchange rate should populate when the To Currency Code is not BLANK
               // and not NULL, inserted and AND condition for not BLANK and not NULL.
               If FC Currency Code [CRCD] is not equal to FC To Currency Code [CRDC]
               And FC To Currency Code [CRDC] is not equal to <NULL>
               And FC To Currency Code [CRDC] is not equal to <Blank>
                    // SAR#8667889 - End
                    //
                    GetExchRate(B0000033.GetExchRate)
                         FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
                         FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
                         VA frm_mnChangedSupplierNumbr_AN8 [AN8] -> mnAddressNumber [AN8]
                         FC Order Date [TRDJ] -> jdTransactionDate [DGJ]
                         VA frm_mnConversionMult_MATH01 [MATH01] <- mnCurrConvRateMult [CRR]
                         VA frm_mnConversionDiv_MATH01 [MATH01] <- mnCurrConvRateDiv [CRRD]
                         VA frm_mnConversionDefault_MATH01 [MATH01] <- mnDefaultRate [CRR]
                    FC Exchange Rate [CRR] = VA frm_mnConversionDefault_MATH01 [MATH01]
               Else
                    If FC Currency Code [CRCD] is equal to FC To Currency Code [CRDC]
                         FC Exchange Rate [CRR] = <NULL>
                    End If
               End If
          Else
               FC Currency Code [CRCD] = FC To Currency Code [CRDC]
               FC Exchange Rate [CRR] = <NULL>
          End If
          // SAR  8535131 End
     End If
     // End SAR #8430566
     //
     // Sar 5791307 Begin
     // SAR # 8863564
     If PO szTaxRateAreaSelection [VL01] is not equal to "1"
     And SV Form_ Mode is equal to CO ADD_MODE
          // SAR 7954456
          If FC Tax Expl Code [EXR1] is equal to or empty <Blank>
          Or FC Tax Expl Code [EXR1] is not equal to VA evt_szSavedTaxExplanation_EXR1 [EXR1]
               FC Tax Expl Code [EXR1] = VA evt_szSavedTaxExplanation_EXR1 [EXR1]
          End If
          If FC Tax Rate/Area [TXA1] is equal to or empty <Blank>
          Or FC Tax Rate/Area [TXA1] is not equal to VA evt_szTaxArea_TXA1 [TXA1]
               FC Tax Rate/Area [TXA1] = VA evt_szTaxArea_TXA1 [TXA1]
          End If
     End If
     // Sar 5791307 END
     //
End If
// 8499942-adds endif here
SetForeignFlag(B4302980.SetForeignFlag)
     FC Currency Code [CRCD] -> szCurrencyCodeFrom [CRCD]
     FC To Currency Code [CRDC] -> szCurrencyCodeTo [CRDC]
     FC Foreign [CRRM] <> cCurrencyMode [CRRM]
     SL CurrencyProcessing -> cCurrencyProcessing [EV01]
//
// Begin SAR # 8863564
VA frm_szTaxExplanationCode_EXR1 [EXR1] = VA evt_szSavedTaxExplanation_EXR1 [EXR1]
VA frm_szTaxRateArea_TXA1 [TXA1] = VA evt_szTaxArea_TXA1 [TXA1]
// End SAR # 8863564


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Long Ship To_ALKY
Event: Control Exited/Changed-Inline
Event GUID: c00b8ec8-b170-11d2-a1b6-00104bc6f551
=============================================
//
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
//
// SAR 4186578 Begins
// This allows the Ship To address to be updated and saved on Header and Detail
If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
And FC Long Ship To_ALKY [ALKY] is not equal to "*"
And FC Long Ship To_ALKY [ALKY] is not equal to "0"
And FC Long Ship To_ALKY [ALKY] is not equal to <NULL>
     ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
          FC Long Ship To_ALKY [ALKY] -> szGenericString [DSC1]
          VA frm_AN8_LongAddressNumeric [AN8] <- mnNumericValue [ITM]
          UNDEFINED <> cErrorCode [ERRC]
     //
     // SAR 6559112
     //
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Ship To_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Ship To SHAN [SHAN] <> mnAddressNumber [AN8]
          UNDEFINED <> szTaxid [TAX]
          "5" -> cInputSelection [EV01]
          UNDEFINED <> cSuccessFlag [EV02]
          FC Long Ship To_ALKY [DL01] <- szNameAlpha [ALPH]
          UNDEFINED <> szLongAddressKey [MLNM]
End If
// SAR 4186578 Ends
//
// SAR 8927324 - Begins
// Updated Shipto value in header is not updated in detail line when Populate
// header to detail processing option is turned on. Issue due to 874316 fix
//
// This SAR reverts the fix of SAR 874316 and updates the new fix
// For Populating Tax Rate/Area and Tax Expl Code when Ship To Value is
// changed and  Processing option Tax Rate/Area set from Ship To
//
// The Fix also preserves manually keyed in tax rate area and tax expl code
//
! // 8734316- Default tax rate/area and expl code when shipto is changed in
! // update mode .
! If SV Form_ Mode is equal to CO UPDATE_MODE
! And PO szTaxRateAreaSelection [VL01] is equal to "1"
! And VA frm_Old_ShipTo [SHAN] is not equal to FC Ship To SHAN [SHAN]
     ! VA frm_Old_ShipTo [SHAN] = FC Ship To SHAN [SHAN]
     ! GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
     !      FC Ship To SHAN [SHAN] -> mnAddressNumber [AN8]
     !      FC Tax Rate/Area [TXA1] <- szTaxRateArea [TXA2]
     !      FC Tax Expl Code [EXR1] <- szTaxExplCode [EXR2]
! End If
//
If PO szTaxRateAreaSelection [VL01] is equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
     Or SV Form_ Mode is equal to CO UPDATE_MODE
          If FC Long Ship To_ALKY [ALKY] is not equal to <Blank>
          And FC Long Ship To_ALKY [ALKY] is not equal to <NULL>
          And FC Long Ship To_ALKY [ALKY] is not equal to "0"
          And FC Long Ship To_ALKY [ALKY] is not equal to "*"
               If VA frm_CurrentShipto_SHAN [SHAN] is not equal to FC Ship To SHAN [SHAN]
                    GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
                         FC Ship To SHAN [SHAN] -> mnAddressNumber [AN8]
                         FC Tax Rate/Area [TXA1] <- szTaxRateArea [TXA2]
                         FC Tax Expl Code [EXR1] <- szTaxExplCode [EXR2]
                    VA frm_CurrentShipto_SHAN [SHAN] = FC Ship To SHAN [SHAN]
               End If
          Else
               FC Long Ship To_ALKY [DL01] = <NULL>
               FC Long Ship To_ALKY [ALKY] = <NULL>
               FC Tax Expl Code [EXR1] = <NULL>
               FC Tax Rate/Area [TXA1] = <NULL>
               VA frm_CurrentShipto_SHAN [SHAN] = <NULL>
          End If
     End If
End If
// SAR  8927324- Ends


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Long Buyer Address Number
Event: Control Exited/Changed-Inline
Event GUID: 7414ee57-d338-48b0-a779-0f77469ff29e
=============================================
// SAR 5047529 Begins 
// Use ALKY to allow input of Long Address Number with symbol
If FC Long Buyer Address Number [ALKY] is not equal to <Blank>
And FC Long Buyer Address Number [ALKY] is not equal to <NULL>
     ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
          FC Long Buyer Address Number [ALKY] -> szGenericString [DSC1]
          VA frm_BuyerAddressNumber_AN8 [AN8] <- mnNumericValue [ITM]
     // 
     // SAR 6559112 
     // 
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Buyer Address Number [ALKY] <> szAlternateAddressKey [ALKY]
          FC Buyer Number [ANBY] <> mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC BUYER DESCRIPTION [DL01] <- szNameAlpha [ALPH]
     // 
     // SAR 6489994 Begin
Else
     FC Buyer Number [ANBY] = <NULL>
     FC BUYER DESCRIPTION [DL01] = <NULL>
     VA frm_BuyerAddressNumber_AN8 [AN8] = <NULL>
     // SAR 6489994 End
     // 
End If
// SAR 5047529 End


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Order Date
Event: Control Exited/Changed-Asynch
Event GUID: f57df3e3-a23a-11d0-a204-0000f6728a56
=============================================
If FC Order Date [TRDJ] is equal to ""
     FC Order Date [TRDJ] = date_today()
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Effective Date
Event: Control Exited/Changed-Asynch
Event GUID: 5ef15c49-e064-11d1-9ac9-00600832fe19
=============================================
If FC Effective Date [PEFJ] is equal to ""
     If PO cJobProject [EV01] is equal to "1"
     Or PO cJobProject [EV01] is equal to "2"
          FC Effective Date [PEFJ] = date_today()
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Tax Expl Code
Event: Control Exited/Changed-Inline
Event GUID: 27c70bd1-0073-4f01-aa84-eb67eebc098f
=============================================
// Begin SAR# 8863564
If PO szTaxRateAreaSelection [VL01] is not equal to "1"
     If FC Tax Expl Code [EXR1] is equal to <Blank>
     Or FC Tax Expl Code [EXR1] is equal to <NULL>
          If VA frm_mnOriginalAddressNumber [MATH01] is not equal to FC Address Number [AN8]
               FC Tax Expl Code [EXR1] = VA frm_szTaxExplanationCode_EXR1 [EXR1]
          End If
     End If
End If
// End SAR# 8863564


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Hold Orders Code
Event: Control Exited/Changed-Inline
Event GUID: 96463da3-c2c4-4020-8cf4-9da4e200c35e
=============================================
// SAR 7143397  Begin
If FC Hold Orders Code [HOLD] is not equal to <Blank>
And FC Hold Orders Code [HOLD] is not equal to <NULL>
     GetHoldCodeInformation(B4001110.GetHoldCodeInformation)
          FC Business Unit [MCU] -> szBranchPlant [MCU]
          FC Hold Orders Code [HOLD] -> szHoldCode [HCOD]
          VA frm_szHoldCodeType_CTYP [CTYP] <- szCodeType [CTYP]
     If VA frm_szHoldCodeType_CTYP [CTYP] is equal to "L"
          Set Control Error(FC Hold Orders Code, "146T")
          Stop Processing
     Else
          VA frm_cHoldCodeEntered_EV01 [EV01] = "1"
     End If
Else
     VA frm_cHoldCodeEntered_EV01 [EV01] = "0"
End If
// SAR 7143397  End


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Tax Rate/Area
Event: Control Exited/Changed-Inline
Event GUID: 667dbd52-2da2-11d3-a27b-00105a1c04c1
=============================================
// Begin SAR # 8863564
If PO szTaxRateAreaSelection [VL01] is not equal to "1"
     If FC Tax Rate/Area [TXA1] is equal to <Blank>
     Or FC Tax Rate/Area [TXA1] is equal to <NULL>
          If VA frm_mnOriginalAddressNumber [MATH01] is not equal to FC Address Number [AN8]
               FC Tax Rate/Area [TXA1] = VA frm_szTaxRateArea_TXA1 [TXA1]
          End If
     End If
End If
// End SAR # 8863564
//
If FC Tax Rate/Area [TXA1] is not equal to <Blank>
And FC Tax Rate/Area [TXA1] is not equal to <NULL>
     ValidateGeoCodeTaxRateArea(N7300011.ValidateGeoCodeTaxRateArea)
          VA frm_cVertexActiveFlag_VVTX [VVTX] -> cVertexActivate [VVTX]
          FC Tax Rate/Area [TXA1] -> szGeoCode [TXA1]
          FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
          UNDEFINED <- cGeoCodeValid [EV01]
          UNDEFINED <- szTaxRateAreaDescription [DL01]
End If

=============================================
Form: Order Header - W4310B
Object: FC Tax Rate/Area
Event: Visual Assist Button Clicked
Event GUID: 36b7f271-43a5-11d3-9763-00003910070e
=============================================
// SAR 6115167 Begin
If FC Tax Expl Code [EXR1] is equal to ("E","S","U")
     // SAR #3261151 - Search select should bring up Vertex when on
     If VA frm_cVertexActiveFlag_VVTX [VVTX] is equal to "1"
          Suppress Default Visual Assist Form
          If PO szTaxRateAreaSelection [VL01] is equal to "1"
               SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
                    FC Ship To SHAN [SHAN] -> mnAddressNumber [AN8]
                    FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    FC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
                    UNDEFINED <- cGeoCodeValid [EV01]
                    UNDEFINED <> szSearchType [AT1]
                    VA frm_szVertexCanCountryCo_VVCN [VVCN] -> szVertrexCanadaCountryCode [VVCN]
                    UNDEFINED <- cCloseFlag [EV02]
                    "0" -> cMasterFile [EV03]
                    VA frm_cVertexActiveFlag_VVTX [VVTX] -> cVertexActive [EV04]
          Else
               SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
                    FC Address Number [AN8] -> mnAddressNumber [AN8]
                    FC Tax Expl Code [EXR1] -> szTaxExplanationCode [EXR1]
                    FC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
                    UNDEFINED <- cGeoCodeValid [EV01]
                    UNDEFINED <> szSearchType [AT1]
                    VA frm_szVertexCanCountryCo_VVCN [VVCN] -> szVertrexCanadaCountryCode [VVCN]
                    UNDEFINED <- cCloseFlag [EV02]
                    "0" -> cMasterFile [EV03]
                    VA frm_cVertexActiveFlag_VVTX [VVTX] -> cVertexActive [EV04]
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Payment Terms
Event: Control Exited/Changed-Asynch
Event GUID: f09fe8c3-6d50-4e6b-8f2e-d3bf4bcd8f29
=============================================
//  SAR  6585679  Begin 
If FC Payment Terms [PTC] is not equal to VA frm_szSupplierPaymentTerms_PTC [PTC]
     VA frm_szSupplierPaymentTerms_PTC [PTC] = FC Payment Terms [PTC]
End If
//  SAR  6585679  End


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Long Address AB01
Event: Control Exited/Changed-Inline
Event GUID: 3db6d5b1-0a88-4441-a166-63a759e03714
=============================================
If FC Long Address AB01 [ALKY] is not equal to <Blank>
And FC Long Address AB01 [ALKY] is not equal to "*"
And FC Long Address AB01 [ALKY] is not equal to "0"
And FC Long Address AB01 [ALKY] is not equal to <NULL>
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address AB01 [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Book 01 [POHAB01] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Purchase Order Address Book 01 [DL01] <- szNameAlpha [ALPH]
Else
     FC Address Book 01 [POHAB01] = 0
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Long Address AB02
Event: Control Exited/Changed-Inline
Event GUID: 9d343493-de14-4a12-8d89-f612148054b8
=============================================
If FC Long Address AB02 [ALKY] is not equal to <Blank>
And FC Long Address AB02 [ALKY] is not equal to "*"
And FC Long Address AB02 [ALKY] is not equal to "0"
And FC Long Address AB02 [ALKY] is not equal to <NULL>
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address AB02 [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Book 02 [POHAB02] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC Purchase Order Address Book 02 [DL01] <- szNameAlpha [ALPH]
Else
     FC Address Book 02 [POHAB02] = 0
End If


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Additional Properties
Event: Tab Page is Selected
Event GUID: 6786d29a-8868-4336-a15e-eeb388d25070
=============================================
// SAR 8164296
FC Long Address AB01 [ALKY] = [FC Address Book 01 [POHAB01]]
FC Long Address AB02 [ALKY] = [FC Address Book 02 [POHAB02]]


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Disable UDF Properties
Event: Button Clicked
Event GUID: 84864a44-e441-420c-b894-0258bb909853
=============================================
// SAR 8164296
Disable Control(FC Property 01 [POHP01])
Disable Control(FC Property 02 [POHP02])
Disable Control(FC Property 03 [POHP03])
Disable Control(FC Property 04 [POHP04])
Disable Control(FC Property 05 [POHP05])
Disable Control(FC Property 06 [POHP06])
Disable Control(FC Property 07 [POHP07])
Disable Control(FC Property 08 [POHP08])
Disable Control(FC Property 09 [POHP09])
Disable Control(FC Property 10 [POHP10])
Disable Control(FC Property 11 [POHP11])
Disable Control(FC Property 12 [POHP12])
Disable Control(FC Property 13 [POHP13])
// 
Disable Control(FC Date 01 [POHD01])
Disable Control(FC Date 02 [POHD02])
// 
Disable Control(FC Date and Time 01 [POHU01])
Disable Control(FC Date and Time 02 [POHU02])
// 
Disable Control(FC Long Address AB01 [ALKY])
Disable Control(FC Long Address AB02 [ALKY])
// 


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Disable Category Codes
Event: Button Clicked
Event GUID: f5645844-9ec3-4b42-b7e0-4ee96c896075
=============================================
// SAR 8164296
Disable Control(FC Category Code 01 [POHC01])
Disable Control(FC Category Code 02 [POHC02])
Disable Control(FC Category Code 03 [POHC03])
Disable Control(FC Category Code 04 [POHC04])
Disable Control(FC Category Code 05 [POHC05])
Disable Control(FC Category Code 06 [POHC06])
Disable Control(FC Category Code 07 [POHC07])
Disable Control(FC Category Code 08 [POHC08])
Disable Control(FC Category Code 09 [POHC09])
Disable Control(FC Category Code 10 [POHC10])
Disable Control(FC Category Code 11 [POHC11])
Disable Control(FC Category Code 12 [POHC12])


=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Object: FC Collection
Event: Control Exited/Changed-Asynch
Event GUID: 7df66f2a-054c-4142-86f1-c8742e16b40e
=============================================
// SAR 8956903 - Apparel Management
If VA frm_cCollChangedInVA_EV01 [EV01] is equal to "1"
     VA frm_cCollChangedInVA_EV01 [EV01] = <NULL>
Else
     FC COLLECTION [DL01] = <NULL>
End If

=============================================
Form: Order Header - W4310B
Object: FC Collection
Event: Visual Assist Button Clicked
Event GUID: 4de22cd4-33fb-471f-a1af-3347ab803128
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szPrevCollection_C9COLL [C9COLL]
----------------------------------------
// SAR 8956903 - Apparel Management
VA evt_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
Suppress Default Visual Assist Form
Call App:PCW15 Form:WCW15A Version:Undefined
     FC Collection [C9COLL] <> szC9COLL-Collection [C9COLL]
     FC SeasonCode [C9SEAC] <> szC9SEAC-SeasonCode [C9SEAC]
     FC Season Year [C9SEAY] <> szC9SEAY-SeasonYear [C9SEAY]
     FC Collection Price Effective Date [C9PRDJ] <> jdDatePriceReferenceJulian [C9PRDJ]
     FC COLLECTION [DL01] <> szCollectionDescription [C9DSC1]
If VA evt_szPrevCollection_C9COLL [C9COLL] is not equal to FC Collection [C9COLL]
     VA frm_cCollChangedInVA_EV01 [EV01] = "1"
End If



=============================================
EVENTS
=============================================
Form: Order Header - W4310B
Event: Dialog is Initialized
Event GUID: f57df3de-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szErrorMessageID_DTAI [DTAI]
----------------------------------------
// 31/12/09 AA9056748 8943156  - F4301 - DOC1 & DCT4 cleared wh
// ======================================================
//   Date       Programmer     SAR#                    Description
// 05/21/04  IC8823626     7143397       PO on hold not added to F4209
// 09/02/04  IC8823626     7224584       P4310 Win Vs Web
// 11/24/04  IC8812290     7382380       Payment terms information from
// 02/23/07  GB946955    8110781 - Change AVCH in Add Mode
// 05/04/07  ML8776305  8430566 - Change Supplr in update mode
// 05/04/07  ML8776305  8352393 - AVCH Changes on Inquiry
// 06/29/07  IC8892200  8482278- Approval route code changed in
// 07/27/2007  TB9051701 8482593 Orderby passed instead of userid
// 08/29/2007  AB9050717 8535131 - P4310 Currency Exchange Rate N
// 01/31/2008  IC9032279 8683811  R43500 XJDE0005 Bumps Status
// 09/30/2009  IC9025511  8941364    Tab Order Incorrect
// 12/30/09 AA9056748 8943156  - F4301 - DOC1 & DCT4 cleared wh
// 12/31/09 AA9056748 8927324 Change ShipTo No Update Detail
// 06/20/2010 IC9017554 8863564 - Blank Tax code not remained
// 01/24/2011 IC9017765 8972582 - Apparel Management
// ======================================================
// SAR 6585679 Begin Initialize Variable to 0
VA frm_cLogsAtLevelsOn_EV01 [EV01] = "0"
// SAR 6585679 End
//
// SAR 5503061
If SV Form_ Mode is equal to CO ADD_MODE
     Disable Control(HC Lo&g Details)
Else
     Enable Control(HC Lo&g Details)
End If
//
// SAR 8683811 Begin
If SV Form_ Mode is equal to CO ADD_MODE
     Disable Control(HC &Print Order)
Else
     Enable Control(HC &Print Order)
End If
// SAR 8683811 End
// SAR 8164296
If PO cAdditionalProperties [EV01] is not equal to "1"
     Press Button(FC Disable UDF Properties)
End If
If PO cCategoryCodes [EV01] is not equal to "1"
     Press Button(FC Disable Category Codes)
End If
If PO cClauseApplication [EV01] is not equal to "1"
     Disable Control(HC Cla&uses)
End If
//
// SAR 8164309
If PO cDisplayRetainageIndicator [EV01] is not equal to "1"
     Hide Control(FC Retainage Indicator [RETI])
End If
// SAR - 7441790
VA frm_szPriceAdjustmentScheduleN [ASN] = BC Price and Adjustment Schedule (F4301.0) [ASN]
// ---------------------------------------------------------------------------
// SAR 6436631 Begin
// Moved the code that do the record reservation to Post Dialog Event
// Reason: In some cases, when PO Entry Header form is called
// directly from other applications, the MODE is UPDATE in this event whereas
// changes to ADD in PostDialog event. HK6871878, 02/05/03
// SAR 6436631End
// ---------------------------------------------------------------------------
//
GetAddressBookConstant(B4303010.GetAddressBookConstant)
     VA frm_cAddressBookConstant_EV01 [EV01] <- cAddressBookConstant [EV01]
//
VA frm_OrderSuffixForDetail [SFX0] = <Blank>
VA frm_AddChangeOrder [EV01] = <Blank>
If FI OrderSuffix [SFXO] is not equal to "000"
     VA frm_OrderSuffixForDetail [SFX0] = FI OrderSuffix [SFXO]
     FC SFXO:Order Suffix(wf) [SFXO] = "000"
     FI OrderSuffix [SFXO] = "000"
     VA frm_AddChangeOrder [EV01] = "2"
End If
//
//  Begin SAR# 8482593- orderby was getting passed to the f4311 begindoc

// instead of userid.
VA frm_szUserId_USER [USER] = SL UserID
//
// ---------------------------------------------------------------------------
//   Assign a a value of '2' to replace the workfiles with memory arrays
//    otherwise assign a value of '1'
// ---------------------------------------------------------------------------
//
FC EV01..UsesWorkFiles(wf) [EV01] = "2"
//
// ---------------------------------------------------------------------------
//     Retrieve the ComputerID and User to be used in the Edit Object.
// ---------------------------------------------------------------------------
//
GetLocalComputerId(B9800181.GetLocalComputerId)
     FC CTID:Computer ID (wf) [CTID] <> szMachineKey [MKEY]
GetAuditInfo(B9800100.GetAuditInfo)
     FC Ordered By [ORBY] <> szUserName [USER]
     UNDEFINED <> jdDate [DTE]
     UNDEFINED <> mnTime [TME0]
     UNDEFINED <> szWorkstation_UserId [JOBN]
     UNDEFINED <> szMachineKey [MKEY]
FC EV01:WrittenToWorkFile(wf) [EV01] = "0"
FC EV01:FirstCycleFlag(wf) [EV01] = "0"
//
// ---------------------------------------------------------------------------
//     If the Processing Option is on the protect changes in the default
//     Order Type then protect the control from input/update.
// ---------------------------------------------------------------------------
//
If PO szProtectOrderType [VL11] is equal to "1"
     Disable Control(FC Order Type [DCTO])
End If
//
// ---------------------------------------------------------------------------
// Hide and show fields base on PO cJob/Project selection made.
// ---------------------------------------------------------------------------
//
If PO cJobProject [EV01] is equal to "1"
     Show Control(FC Job)
     Hide Control(FC Business Unit)
     Hide Control(FC Project)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "2"
     Show Control(FC Project)
     Hide Control(FC Business Unit)
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "3"
     Show Control(FC Business Unit)
     Hide Control(FC Physical Comp. [ADDJ])
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
     Hide Control(FC Project)
End If
//
If PO cJobProject [EV01] is equal to <Blank>
     Show Control(FC Branch/Plant [MCU])
     Hide Control(FC Physical Comp. [ADDJ])
     Hide Control(FC Job)
     Hide Control(FC Project)
     Hide Control(FC Business Unit)
End If
//
// ---------------------------------------------------------------------------
//    Hide the Currency selection button if system wide currency is off
// ---------------------------------------------------------------------------
//
If SL CurrencyProcessing is equal to "N"
     Hide Control(FC Foreign [CRRM])
End If
//
//
Hide Control(FC Attachments)
Hide Control(FC Order On Hold)
//
// ---------------------------------------------------------------------------
// SAR 6436631 Begin
// Moved the code that assigns Branch plant  to Post Dialog Event
// Reason: In some cases, when PO Entry Header form is called
// directly from other applications, the MODE is UPDATE in this event whereas
// changes to ADD in PostDialog event. HK6871878, 02/05/03
// SAR 6436631End
// ---------------------------------------------------------------------------
//
//
// ---------------------------------------------------------------------------
// If Processing option is blank, pass in ZJDE0001
// ---------------------------------------------------------------------------
//
SetP4310DefaultProcessingOption(B4302910.SetP4310DefaultProcessingOption)
     PO szSupplierMasterVersion [VL22] <> szSupplierMasterVersion [VL22]
     PO szPOPrintOnDemandVersion [VL23] <> szPOPrintOnDemandVersion [VL23]
     PO szFinancialStatusInquiry [VERS] <> szFinancialStatusInqVersion [VERS]
//
// SAR  6585679  Begin
If PO szLogsEntryVersion [VERS] is equal to <Blank>
     PO szLogsEntryVersion [VERS] = "ZJDE0001"
End If
// SAR  6585679  End
//
//
Hide Control(FC Effective Date [PEFJ])
//
// ---------------------------------------------------------------------------
// Get Vertex flag to correctly validate Tax Rate Area
// ---------------------------------------------------------------------------
//
DetermineIfVertexIsActive(N7300001.DetermineIfVertexIsActive)
     <Blank> -> szSystemCode [SY]
     VA frm_cVertexActiveFlag_VVTX [VVTX] <- cUseVertexFlag [VVTX]
     UNDEFINED <- szUSCountryCode [VVUS]
     VA frm_szVertexCanCountryCo_VVCN [VVCN] <- szCanCountryCode [VVCN]
     UNDEFINED <- szDivisionCodeSales [VVAB]
     UNDEFINED <- szItemBalanceCategory [VVIT]
     UNDEFINED <- szDivisionCodeUse [VUAB]
     UNDEFINED <- szItemBalanceCategoryUseTax [VUIT]
     UNDEFINED <- szGlOffset [GL01]
     UNDEFINED <- cFlagMultiCountyAddress [VVMC]
     UNDEFINED <- cPrintLinkParm [VPRT]
     UNDEFINED <- szCustomerClassCodeSales [VCCS]
     UNDEFINED <- szCustomerClassCodeUse [VCCU]
     UNDEFINED <- szQuantumDebugLog [QDLG]
//
VA frm_iErrorCount_INT01 [INT01] = "0"
VA frm_iWarningCount_INT01 [INT01] = "0"
//
// ---------------------------------------------------------------------------
// SAR 6436631 Begin
// Moved the code that diables the fields to Post Dialog Event
// Reason: In some cases, when PO Entry Header form is called
// directly from other applications, the MODE is UPDATE in this event whereas
// changes to ADD in PostDialog event. HK6871878, 02/05/03
// SAR 6436631End
// ---------------------------------------------------------------------------
//
//
// SAR # 6344058 begin
// ---------------------------------------------------------------------------
// Disable the FC Foreign Checkbox.  The system will determine if the checkbox
// should be checked or not depending on the currency entered.  The user will
// longer be able to toggle this option.
// ---------------------------------------------------------------------------
Disable Control(FC Foreign [CRRM])
// SAR # 6344058 end
// ---------------------------------------------------------------------------
// SAR 6585679 Begin. Check 40/VF UDC to see Subcontracts Logs are ON
GetUDC(X0005.GetUDC)
     "40" -> szSystemCode [SY]
     "VF" -> szRecordTypeCode [RT]
     "04" -> szUserDefinedCode [KY]
     "2.00" -> mnKeyFieldLength [AS]
     "1" -> cSuppressErrorMessage [EV01]
     VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
If VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
     VA frm_cLogsAtLevelsOn_EV01 [EV01] = "1"
End If
// ---------------------------------------------------------------------------
//
// ---------------------------------------------------------------------------
// Subcontracts display if JobProject is 1 or 2
If PO cJobProject [EV01] is equal to ("1","2")
     Set Control Text(FC Address Number, TV Subcontractor)
     Set Control Text(FC Previous Order Number, TV Previous Contract)
     Set Form Title(TV Contract Header)
     Hide Control(FC BUYER DESCRIPTION [DL01])
     Hide Control(FC Long Buyer Address Number [ALKY])
     Hide Control(FC Buyer Number [ANBY])
     Hide Control(FC Buyer [ALKY])
     Hide Control(FC CARRIER DESCRIPTION [DL01])
     Hide Control(FC Carrier Number [ANCR])
     Hide Control(FC Physical Comp. [ADDJ])
End If
//
// SAR 6585679 End
//
// SAR 8956903 - Apparel Management
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA frm_cApparelInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cApparelInstalled_EV01 [EV01] is not equal to "1"
     Hide Tab Page(FC Tab Control 274, TP Style)
End If
// issue 9188 - Valkiria - RBS - 29/01/07
F4311.Select  [Index 1: Doc No, Order Type, + 1]
     FI CompanyKeyOrderNo [KCOO] = TK Order Company (Order Number) [KCOO]
     FI DocumentOrderInvoiceE [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     FI OrderType [DCTO] = TK Order Type [DCTO]
     FI OrderSuffix [SFXO] = TK Order Suffix [SFXO]
F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
     VA frm_LineNumber_LNID [LNID] <- TK Line Number [LNID]
     VA frm_StatusCodeNext_NXTR [NXTR] <- TK Status Code - Next [NXTR]
     VA frm_StatusCodeLast_LTTR [LTTR] <- TK Status Code - Last [LTTR]
While SV File_IO_Status is equal to CO SUCCESS
     If VA frm_StatusCodeNext_NXTR [NXTR] is equal to PO ProtectNXTRCabec [NXTR]
     And VA frm_StatusCodeLast_LTTR [LTTR] is not equal to "980"
          Disable Control(FC Business Unit [MCU])
          Disable Control(FC Long Address Number_ALKY [ALKY])
          Disable Control(FC Long Ship To_ALKY [ALKY])
          Disable Control(FC Carrier Number [ANCR])
          Disable Control(FC Long Buyer Address Number [ALKY])
          Disable Control(FC Remark [RMK])
          Disable Control(FC Description [DESC])
          Disable Control(FC Effective Date [PEFJ])
          Disable Control(FC Cancel Date [CNDJ])
          Disable Control(FC Order Date [TRDJ])
          Disable Control(FC Requested [DRQJ])
          Disable Control(FC Scheduled Pick [PDDJ])
          Disable Control(FC Physical Comp. [ADDJ])
          Disable Control(FC Tax Expl Code [EXR1])
          Disable Control(FC Tax Rate/Area [TXA1])
          Disable Control(FC Certificate [TXCT])
          Disable Control(FC Retainage % [PCRT])
          Disable Control(FC Order Taken By [TKBY])
     End If
     F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
          VA frm_LineNumber_LNID [LNID] <- TK Line Number [LNID]
          VA frm_StatusCodeNext_NXTR [NXTR] <- TK Status Code - Next [NXTR]
          VA frm_StatusCodeLast_LTTR [LTTR] <- TK Status Code - Last [LTTR]
End While

=============================================
Form: Order Header - W4310B
Event: Clear Screen Before Add
Event GUID: 06550356-8d17-468b-860d-6ae875cc03d7
=============================================
Enable Control(FC Business Unit [MCU])
Enable Control(FC Order Number [DOCO])
If PO szProtectOrderType [VL11] is not equal to "1"
     Enable Control(FC Order Type [DCTO])
End If
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     FC COLLECTION [DL01] = <NULL>
     FC SEASONCODE [DL01] = <NULL>
     FC SEASON YEAR [DL01] = <NULL>
End If

=============================================
Form: Order Header - W4310B
Event: Post Dialog is Initialized
Event GUID: f57df3df-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szReserveOrderCompany_KCOO [KCOO]
evt_szApprovalRoute_ARTG [ARTG]
----------------------------------------
! ReservedByUsage(B4303020.ReservedByUsage)
!      SV Form_ Mode -> idFormMode [GENLNG]
!      "F4311" -> szObjectName [OBNM]
!      SL UserID -> szUserId [USER]
!      "P4310" -> szApplicationID [PID]
!      FC Order Number [DOCO] -> mnOrderNumber [DOCO]
!      FC Order Type [DCTO] -> szOrderType [DCTO]
!      FC Order Company [KCOO] -> szOrderCompany [KCOO]
// SAR 8785906 - Record Reservation
If SV Form_ Mode is equal to CO UPDATE_MODE
     If VA frm_cValidateApplication_EV01 [EV01] is not equal to "2"
          ValidateApplicationId(N0000604.ValidateApplicationId)
               "P4310" -> szApplicationID_PID [PID]
               VA frm_cValidateApplication_EV01 [EV01] <- cValidateApplication_ERR1 [ERR1]
          If VA frm_cValidateApplication_EV01 [EV01] is not equal to "0"
               VA frm_cValidateApplication_EV01 [EV01] = "2"
          End If
          If VA frm_cValidateApplication_EV01 [EV01] is equal to "0"
               GetNextUniqueKeyID(X00022.GetNextUniqueKeyID)
                    "RRESERVE" -> szObjectName [OBNM]
                    VA frm_mnUniqueKeyID_UKID [UKID] <- mnUniqueKeyID [UKID]
               ConvertNumericToString(B0000045.ConvertNumericToString)
                    VA frm_mnUniqueKeyID_UKID [UKID] -> mnMathNumeric01 [MATH01]
                    VA frm_szUniqueKeyID_PID [PID] <- szVideoConstant30A [VC30A]
               ConvertNumericToString(B0000045.ConvertNumericToString)
                    FI DocumentOrderInvoiceE [DOCO] -> mnMathNumeric01 [MATH01]
                    VA frm_szConvertResOrderNo_DOC8 [DOC8] <- szVideoConstant30A [VC30A]
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szConvertResOrderNo_DOC8 [DOC8]], [FI OrderType [DCTO]])
               VA frm_szGenericKey_GENKEY [GENKEY] = concat([VA frm_szGenericKey_GENKEY [GENKEY]], [FI CompanyKeyOrderNo [KCOO]])
               F00095ReserveObject(N0000602.F00095ReserveObject)
                    "F4311" -> szNameObject [OBNM]
                    SL UserID -> szUserId [USER]
                    VA frm_szGenericKey_GENKEY [GENKEY] -> szGenericKey [GENKEY]
                    VA frm_szUniqueKeyID_PID [PID] -> szApplication [PID]
          End If
     End If
End If
// SAR 8785906 - Record Reservation
// =======================================================
//
// 7/27/2007- TB9051701 8499942 -suppliar details should not be fetched
// without changing the supplier number
// =======================================================
// SAR 6436631 Begin Moved the code from Dialog Event
If SV Form_ Mode is equal to CO ADD_MODE
     // Begin SAR#8283359-ARTG field blank when route code entered in defaults &
     // Printers deleted the if condition and added the variable parameter to
     // F40095 Get Default Branch
     ! If FI BranchPlant [MCU] is equal to or empty <Blank>
          GetDefaultBranch(B4000370.GetDefaultBranch)
               FC Business Unit [MCU] <> szBranch [MCU]
               VA evt_szApprovalRoute_ARTG [ARTG] <> szApprovalRouteCode [ARTG]
     ! Else
          If FI BranchPlant [MCU] is not equal to "           *"
               FC Business Unit [MCU] = FI BranchPlant [MCU]
          End If
     ! End If
     // END SAR 8283359
End If
// SAR 6436631 End
// =======================================================
//
// ----------------------------------------------------------
// SAR 6436631 Begin Moved the code from Dialog Event
// ----------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
And PO cHeaderProtection_EV01 [EV01] is equal to "1"
     Disable Control(FC Business Unit [MCU])
     Disable Control(FC Scheduled Pick [PDDJ])
     Disable Control(FC Requested [DRQJ])
     Disable Control(FC Effective Date [PEFJ])
     Disable Control(FC Cancel Date [CNDJ])
     Disable Control(FC Order Date [TRDJ])
     Disable Control(FC Physical Comp. [ADDJ])
     Disable Control(FC Long Address Number_ALKY [ALKY])
     Disable Control(FC Long Ship To_ALKY [ALKY])
     Disable Control(FC Long Buyer Address Number [ALKY])
     Disable Control(FC Carrier Number [ANCR])
     Disable Control(FC Remark [RMK])
     Disable Control(FC Description [DESC])
     Disable Control(FC Tax Expl Code [EXR1])
     Disable Control(FC Tax Rate/Area [TXA1])
     Disable Control(FC Certificate [TXCT])
     Disable Control(FC Tax ID [TAX])
     Disable Control(FC Person/Corp. ID [TAXC])
     Disable Control(FC Hold Orders Code [HOLD])
     Disable Control(FC Retainage % [PCRT])
     Disable Control(FC Ordered By [ORBY])
     Disable Control(FC Order Taken By [TKBY])
     //
     // SAR 8164309 Disable FC Retainage Indicator field
     Disable Control(FC Retainage Indicator [RETI])
     //
     //  SAR  6585679  Begin
     Disable Control(FC Payment Terms [PTC])
     Disable Control(FC Print Message [INMG])
     Disable Control(FC AIA Document [FUF1])
     Disable Control(FC HOLD ORDERS CODE [DL01])
     Disable Control(FC Order Number [DOCO])
     Disable Control(FC Ship To [SHAN])
     Disable Control(FC Address Number [AN8])
     Disable Control(FC Ship To SHAN [SHAN])
     Disable Control(FC Project)
     Disable Control(FC Job)
     Disable Control(FC Branch/Plant [MCU])
     Disable Control(FC Business Unit [MCU])
     Press Button(FC Disable Category Codes)
     Press Button(FC Disable UDF Properties)
     //  SAR  6585679  End
End If
// SAR 6436631End
//
// ---------------------------------------------------------------------------
//     Code moved to Post Dialog Ini. from Dialog Ini.
//     and added a statement to blank the FC Approval Route Code
// ---------------------------------------------------------------------------
//     If no approval route code has been entered in the Processing
//     Options then do not display Approval Control.  If the approval route
//     code is any value other than 1..4 then display the value on the form
// ---------------------------------------------------------------------------
//
If PO szApprovalRouteCodeSelection [VL16] is equal to or empty <Blank>
     Hide Control(FC Approval Route Code [ARTG])
Else
     // Begin SAR #8283359 -Approval route code taken from F40095 when route is
     // defined to be taken from default location
     If PO szApprovalRouteCodeSelection [VL16] is equal to "4"
          // SAR # 8482278- Get approval route code if it doesn't exist for the order
          If FC Approval Route Code [ARTG] is equal to <Blank>
          Or FC Approval Route Code [ARTG] is equal to <NULL>
               GetDefaultBranch(B4000370.GetDefaultBranch)
                    FC Business Unit [MCU] <> szBranch [MCU]
                    VA evt_szApprovalRoute_ARTG [ARTG] <> szApprovalRouteCode [ARTG]
               FC Approval Route Code [ARTG] = VA evt_szApprovalRoute_ARTG [ARTG]
          End If
     Else
          If PO szApprovalRouteCodeSelection [VL16] is not equal to("1","2","3","4")
               //      SAR 4147843 Begin
               //      Do not allow a new Approval Route if one already exists for the order.
               If FC Approval Route Code [ARTG] is equal to or empty <Blank>
                    FC Approval Route Code [ARTG] = PO szApprovalRouteCodeSelection [VL16]
               End If
               //      SAR 4147843 End
          End If
     End If
     // END SAR 8283359
End If
//
// SAR #3067956 - Can't Change Send Method to blank
VA frm_CRCM_SendMethod [CRCM] = BC Send Method (F4301.0) [CRMD]
// SAR#4480161 - Not defaulting Send Method from purchasing instructions
VA frm_cSendMethodOld_CRMD [CRMD] = BC Send Method (F4301.0) [CRMD]
//
PopulateAddressNumber(B4303010.PopulateAddressNumber)
     VA frm_cAddressBookConstant_EV01 [EV01] -> cAddressBookConstant [EV01]
     FC Address Number [AN8] -> mnSupplierNumber [AN8]
     FC Long Address Number_ALKY [ALKY] <- szLongSupplierNumber [ALKY]
     FC Long Address Number_ALKY [DL01] <- szSupplierDescription [DL01]
     FC Ship To SHAN [SHAN] -> mnShipToNumber [SHAN]
     FC Long Ship To_ALKY [ALKY] <- szLongShipToNumber [ALKY]
     FC Long Ship To_ALKY [DL01] <- szShipToDescription [DL01]
     FC Buyer Number [ANBY] -> mnBuyerNumber [ANBY]
     FC Long Buyer Address Number [ALKY] <- szLongBuyerNumber [ALKY]
     FC BUYER DESCRIPTION [DL01] <- szBuyerDescription [DL01]
//
// ---------------------------------------------------------------------------
//     If the Order hold code is not blank on the record fetched then
//     protect the hold code from input by the user.
// ---------------------------------------------------------------------------
//    SAR 5102858 - If the proc. option to disable header fields is ON then
//    do not enable Hold Orders Code
// ---------------------------------------------------------------------------
//
If FC Hold Orders Code [HOLD] is not equal to <Blank>
And FC Hold Orders Code [HOLD] is not equal to <NULL>
And FC Hold Orders Code [HOLD] is not equal to "0"
     Disable Control(FC Hold Orders Code [HOLD])
     Show Control(FC Order On Hold)
Else
     //
     If PO cHeaderProtection_EV01 [EV01] is equal to "1"
     And SV Form_ Mode is equal to CO UPDATE_MODE
          Disable Control(FC Hold Orders Code [HOLD])
     Else
          Enable Control(FC Hold Orders Code [HOLD])
     End If
     //
     Hide Control(FC Order On Hold)
End If
//
//
// ---------------------------------------------------------------------------
//     If the previous order number is not blank then display it.
// ---------------------------------------------------------------------------
//
If FC Previous Order Number [LDOC] is not equal to "0"
     Show Control(FC Previous Order Number [LDOC])
     Show Control(FC Previous Order Type [DCTO])
     Disable Control(FC Previous Order Number [LDOC])
     Disable Control(FC Previous Order Type [DCTO])
Else
     Hide Control(FC Previous Order Number [LDOC])
     Hide Control(FC Previous Order Type [DCTO])
End If
//
//
If SV Form_ Mode is equal to CO ADD_MODE
     FC ACTN:ActionCode (wf) [ACTN] = "A"
     If FC Order Type [DCTO] is equal to or empty <Blank>
          FC Order Type [DCTO] = PO szOrderType [DCT]
     End If
     //
     FC SFXO:Order Suffix(wf) [SFXO] = "000"
     //
     FC Foreign [CRRM] = "F"
     //
     If FC Business Unit [MCU] is not equal to <Blank>
     And FC Business Unit [MCU] is not equal to "*"
     And FC Business Unit [MCU] is not equal to <NULL>
          RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
               FC Business Unit [MCU] -> szCostCenter [MCU0]
               FC Order Company [KCOO] <- szCompany [CO]
               UNDEFINED <> szCostCenterDescription [DL01]
     End If
     //
End If
//
// Retrieve Base Currency
//
If SL CurrencyProcessing is not equal to <Blank>
And SL CurrencyProcessing is not equal to <NULL>
And SL CurrencyProcessing is not equal to "N"
     If FC Order Company [KCOO] is not equal to <Blank>
     And FC Order Company [KCOO] is not equal to <NULL>
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               FC Order Company [KCOO] <> szCompany [CO]
               FC To Currency Code [CRDC] <> szCurrencyCode [CRCD]
               UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
               UNDEFINED <> cPostByCurrency [ABIN]
     End If
End If
//
//
// ---------------------------------------------------------------------------
//    Logic for Order Changes
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     //
     FC ACTN:ActionCode (wf) [ACTN] = "C"
     //
     Disable Control(FC Currency Code [CRCD])
     Disable Control(FC Foreign [CRRM])
     Disable Control(FC Exchange Rate [CRR])
     //
     //
     // ---------------------------------------------------------------------------
     // Supplier Desc not defaulting because editing is off
     // Also, retrieve credit message at this point
     // ---------------------------------------------------------------------------
     //
     RetrieveCreditMessage(B4303050.RetrieveCreditMessage)
          FC Address Number [AN8] -> mnAddressNumber [AN8]
          "55" -> idFormMode [GENLNG]
          FC Long Address Number_ALKY [DL01] <> szAddressDescription [DL01]
          FC CREDIT MESSAGE [DL01] <> szCreditDescription [DL01]
          FC Tax ID [TAX] <> szTaxId [TAX]
          FC Person/Corp. ID [TAXC] <> cPersonCorporationCode [TAXC]
          VA frm_TSTA_Credit_Msg [TSTA] <> szCreditMessage [TSTA]
     //
End If
//
//
// ---------------------------------------------------------------------------
//     This assignment is needed here to the Previous Order Number
//     to avoid data dictionary UDC edit errors when OK is pushed.
//    The same is true for ORNN - if blank it triggers invalid UDC value
// ---------------------------------------------------------------------------
//
If FC Previous Order Type [DCTO] is equal to or empty <Blank>
     FC Previous Order Type [DCTO] = FC Order Type [DCTO]
End If
FC ORNN:Order Nxt Nbr (wf) [ORNN] = "01"
//
// ---------------------------------------------------------------------------
//     Check for accociated text for this order header and display ATTACHMENTS
//     static if generic text exists.  Also update the F4301 text flag(ATXT)
// ---------------------------------------------------------------------------
//     Don't execute this if in add for performance sake
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is not equal to CO ADD_MODE
     Media Object Structures(GT4301, <Default Media Object>, <Exist>, FC Generic Text exists (wf), FC Order Number, FC Order Type, FC Order Company, FC SFXO:Order Suffix(wf))
     If FC Generic Text exists (wf) [EV01] is equal to "1"
          Show Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = "Y"
     Else
          Hide Control(FC Attachments)
          BC Associated Text (F4301.0) [ATXT] = <Blank>
     End If
End If
//
//
// ---------------------------------------------------------------------------
//     Save the current values of all header fields that exist in the detail
//     table.
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO UPDATE_MODE
     VA frm_Old_SendMethod [CRMD] = BC Send Method (F4301.0) [CRMD]
     VA frm_Old_Supplier [AN8] = BC Address Number (F4301.0) [AN8]
     VA frm_Old_ShipTo [SHAN] = BC Address Number - Ship To (F4301.0) [SHAN]
     VA frm_Old_Buyer [ANBY] = BC Buyer Number (F4301.0) [ANBY]
     VA frm_Old_Carrier [ANCR] = BC Carrier Number (F4301.0) [ANCR]
     VA frm_Old_OrderDate [TRDJ] = BC Date - Order/Transaction (F4301.0) [TRDJ]
     VA frm_Old_RequestedDate [DRQJ] = BC Date - Requested (F4301.0) [DRQJ]
     VA frm_Old_PromisedDate [PDDJ] = BC Date - Scheduled Pick (F4301.0) [PDDJ]
     VA frm_Old_CancelDate [CNDJ] = BC Date - Cancel (F4301.0) [CNDJ]
     VA frm_Old_TaxArea [TXA1] = BC Tax Rate/Area (F4301.0) [TXA1]
     VA frm_Old_TaxExplanationCode [EXR1] = BC Tax Expl Code 1 (F4301.0) [EXR1]
     VA frm_Old_PrintMessage [INMG] = BC Print Message (F4301.0) [INMG]
     VA frm_Old_FreightHandlingCode [FRTH] = BC Freight Handling Code (F4301.0) [FRTH]
     VA frm_Old_PaymentTerms [PTC] = BC Payment Terms Code (F4301.0) [PTC]
     VA frm_Old_SupplierSO [VR01] = BC Reference (F4301.0) [VR01]
     VA frm_Old_Reference2 [VR02] = BC Reference 2 (F4301.0) [VR02]
     VA frm_Old_EvaluatedReceipt [AVCH] = BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH]
     VA frm_Old_LandedCostRule [PRP5] = BC Purchasing Category Code 5 (F4301.0) [PRP5]
     VA frm_Old_UserCode [URCD] = BC User Reserved Code (F4301.0) [URCD]
     VA frm_Old_UserDate [URDT] = BC User Reserved Date (F4301.0) [URDT]
     VA frm_Old_UserAmount [URAT] = BC User Reserved Amount (F4301.0) [URAT]
     VA frm_Old_UserAddressNumber [URAB] = BC User Reserved Number (F4301.0) [URAB]
     VA frm_Old_UserReference [URRF] = BC User Reserved Reference (F4301.0) [URRF]
End If
//
// ---------------------------------------------------------------------------
// If ADD mode unconditionally hide the attachments text so it goes away after a
// ADD
// ---------------------------------------------------------------------------
//
If SV Form_ Mode is equal to CO ADD_MODE
     Hide Control(FC Attachments)
     // SAR 5210998 Hide Credit Message Text on Add Mode
     Hide Control(FC CREDIT MESSAGE [DL01])
End If
//
//
If SV Form_ Mode is equal to CO UPDATE_MODE
And FC Exchange Rate [CRR] is not equal to <Blank>
     Disable Control(FC Order Date [TRDJ])
End If
//
// BEGIN SAR 5299793
VA frm_mnOriginalAddressNumber [MATH01] = BC Address Number (F4301.0) [AN8]
// END SAR 5299793
//
//  SAR 8499942-Previous supplier number has been stored here, not the
// original supplier number
VA frm_mnPrevAddressNumber_AN8 [AN8] = BC Address Number (F4301.0) [AN8]
// SAR  6047248, 6415012 - Initialize FRTH and PTC to null instead of blank
VA frm_szFreightHandlingCode_FRTH [FRTH] = <NULL>
VA frm_szSupplierPaymentTerms_PTC [PTC] = <NULL>
// SAR 6047248 End
//
// SAR 8927324 - Begins
VA frm_CurrentShipto_SHAN [SHAN] = FC Ship To SHAN [SHAN]
// SAR 8927324 - Ends
//
// SAR 8956903 - Apparel Management
If VA frm_cApparelInstalled_EV01 [EV01] is equal to "1"
     If SV Form_ Mode is equal to CO ADD_MODE
          If PO szCollection [C9COLL] is greater than <Blank>
          Or PO szSeasonCode [C9SEAC] is greater than <Blank>
          Or PO szSeasonYear [C9SEAY] is greater than <Blank>
               FCW06.FetchSingle  [Index 1: C9COLL/C9SEAC/C9SEAY]
                    PO szCollection [C9COLL] = TK Collection [C9COLL]
                    PO szSeasonCode [C9SEAC] = TK Season Code [C9SEAC]
                    PO szSeasonYear [C9SEAY] = TK Season Year [C9SEAY]
                    FC COLLECTION [DL01] <- TK Description Line 1 [C9DSC1]
                    FC Collection Price Effective Date [C9PRDJ] <- TK Date - Price Reference [C9PRDJ]
               If SV File_IO_Status is equal to CO SUCCESS
                    FC Collection [C9COLL] = PO szCollection [C9COLL]
                    FC SeasonCode [C9SEAC] = PO szSeasonCode [C9SEAC]
                    FC Season Year [C9SEAY] = PO szSeasonYear [C9SEAY]
                    If FC Collection Price Effective Date [C9PRDJ] is equal to or empty Null Date
                         FC Collection Price Effective Date [C9PRDJ] = date_today()
                    End If
               End If
          End If
     Else
          If SV Form_ Mode is equal to CO UPDATE_MODE
               // Fetch tag table
               ApparelProcessF41F301T(B41F0060.ApparelProcessF41F301T)
                    FC Order Number [DOCO] -> mnOrderNumber [DOCO]
                    FC Order Type [DCTO] -> szOrderType [DCTO]
                    FC Order Company [KCOO] -> szCompany [KCOO]
                    FC Collection [C9COLL] <- szCollection [C9COLL]
                    FC SeasonCode [C9SEAC] <- szSeasonCode [C9SEAC]
                    FC Season Year [C9SEAY] <- szSeasonYear [C9SEAY]
                    "2" -> cActionCode [EV01]
                    FC COLLECTION [DL01] <- szCollectionDescription [C9DSC1]
                    "000" -> szOrderSuffix [SFXO]
                    FC Collection Price Effective Date [C9PRDJ] <- jdPriceEffectiveDate [C9PRDJ]
               If FC Collection [C9COLL] is greater than <Blank>
               Or FC SeasonCode [C9SEAC] is greater than <Blank>
               Or FC Season Year [C9SEAY] is greater than <Blank>
                    Disable Control(FC Collection [C9COLL])
                    Disable Control(FC SeasonCode [C9SEAC])
                    Disable Control(FC Season Year [C9SEAY])
                    Disable Control(FC Collection Price Effective Date [C9PRDJ])
                    // Set previous variables so all lines can be validated on a change
                    VA frm_szPrevCollection_C9COLL [C9COLL] = FC Collection [C9COLL]
                    VA frm_szPrevSeasonCode_C9SEAC [C9SEAC] = FC SeasonCode [C9SEAC]
                    VA frm_szPrevSeasonYear_C9SEAY [C9SEAY] = FC Season Year [C9SEAY]
               End If
          End If
     End If
End If

=============================================
Form: Order Header - W4310B
Event: Add Record to DB - Before
Event GUID: f57df3e0-a23a-11d0-a204-0000f6728a56
=============================================
Suppress Add

=============================================
Form: Order Header - W4310B
Event: Update Record to DB - Before
Event GUID: 5da81c31-1901-11d3-9746-00003910070e
=============================================
//
BC Send Method (F4301.0) [CRMD] = VA frm_CRCM_SendMethod [CRCM]
// SAR# 8352393
// This line was preventing the F4301 from getting updated with the new value

// assed in from the Additional Info form
! BC Code - Evaluated Receipt Settlement (F4301.0) [AVCH] = VA frm_AVCH_EvalReceipt [AVCH]
// End SAR# 8352393
//
// ---------------------------------------------------------------------------
//  Assign the values back to BC variables
// ---------------------------------------------------------------------------
//
// SAR 6047248 Begin -
BC Freight Handling Code (F4301.0) [FRTH] = VA frm_szFreightHandlingCode_FRTH [FRTH]
//  SAR  6585679  Remove Payment Terms Assignment
! BC Payment Terms Code (F4301.0) [PTC] = VA frm_szSupplierPaymentTerms_PTC [PTC]
// SAR 6047248 End
//
// ---------------------------------------------------------------------------
// Update audit fields
// ---------------------------------------------------------------------------
//
//  SAR     5254641    Begin
// SAR 8420106 Values updated here will be overridden by the values passed
// from end doc, commented this function to avoid duplicate updation.
! GetAuditInfo(B9800100.GetAuditInfo)
!      BC User ID (F4301.0) [USER] <- szUserName [USER]
!      BC Date - Updated (F4301.0) [UPMJ] <- jdDate [DTE]
!      BC Time of Day (F4301.0) [TDAY] <- mnTime [TME0]
!      BC Work Station ID (F4301.0) [JOBN] <- szWorkstation_UserId [JOBN]
!      UNDEFINED <> szMachineKey [MKEY]
BC Program ID (F4301.0) [PID] = "EP4310"
//  SAR    5254641    End
//
// SAR 6501324
BC Processing Mode (F4301.0) [PROM] = <Blank>
//

=============================================
Form: Order Header - W4310B
Event: End Dialog
Event GUID: 446e3b7c-f895-11d4-93cf-000629335ad6
=============================================
// SAR 8785906 - Record Reservation
ConvertNumericToString(B0000045.ConvertNumericToString)
     VA frm_mnUniqueKeyID_UKID [UKID] -> mnMathNumeric01 [MATH01]
     VA frm_szUniqueKeyID_PID [PID] <- szVideoConstant30A [VC30A]
If SV Form_ Mode is equal to CO UPDATE_MODE
     F00095RemoveReservation(N0000602.F00095RemoveReservation)
          SL UserID -> szUserId [USER]
          "F4311" -> szNameObject [OBNM]
          <Blank> -> szGenericKey [GENKEY]
          VA frm_szUniqueKeyID_PID [PID] -> szApplication [PID]
End If
// SAR 8164296 Should Delete the Clause table records if the Clause records
// exist and the user is timed out before F4301 records were even created.
// Pass the Order header key information to check the table recrods.
DeleteClausesTableRecords(B4300080.DeleteClausesTableRecords)
     "000" -> szOrderSuffix [SFXO]
     FC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> szOrderType [DCTO]
     FC Order Company [KCOO] -> szCompanyKeyOrderNo [KCOO]
     FC Clause ID [CUKID] -> mnClause_ID [CUKID]




=============================================
Form: Order Recap - W4310C
Event: Form Variables
Event GUID: 5ef15c7d-e064-11d1-9ac9-00600832fe19
=============================================
frm_TOT01_TotalOrder [TOT1]
frm_TotalAmtLessRetained [TOT1]
frm_OriginalOrderAmt [AEXP]
frm_ChgOrderAmt [AEXP]
frm_CurrentChgOrderAmt [AEXP]
frm_OriginalOrderAmtForeign [FEA]
frm_ChgOrderAmtForeign [FEA]
frm_CurrChgOrderAmtForeign [FEA]
frm_OriginalOrderQTY [UORG]
frm_ChgOrderQTY [UORG]
frm_TotalOrderQTY [UORG]
frm_CurrChgOrderQTY [UORG]
frm_TotalVoucheredRETA [RETA]
frm_TotalRetainedRETA [RETA]
frm_TotalVoucheredREFA [REFA]
frm_TotalRetainedREFA [REFA]
frm_TotalVoucheredAREC [AREC]
frm_TotalVoucheredUREC [UREC]
frm_AEXP [AEXP]
frm_FEA [FEA]
frm_RETA [RETA]
frm_REFA [REFA]
frm_UORG [UORG]
frm_AREC [AREC]
frm_UREC [UREC]
frm_SFXO [SFXO]
frm_ACHG [ACHG]
frm_UCHG [UCHG]
frm_FCHG [FCHG]
frm_FREC [FREC]
frm_TotalVoucheredFREC [FREC]
frm_TotalVouchered [AREC]
frm_MATC_MatchType [MATC]
frm_AOPN_AmountOpen [AOPN]
frm_FOPN_ForAmtOpen [FOPN]
frm_AOPN [AOPN]
frm_FOPN [FOPN]
frm_UOPN [UOPN]
frm_UOPN_UnitsOpen [UOPN]
frm_LastStatus [LTTR]
frm_ItemNumberRelatedKit_RLIT [RLIT]
frm_RoutingProcessYN [RTGC]
frm_mnUnitsOpenQtyF4311_UOPN [UOPN]
frm_mnAmountOpenF4311_AOPN [AOPN]


=============================================
EVENTS
=============================================
Form: Order Recap - W4310C
Event: Dialog is Initialized
Event GUID: 76e81c46-331a-11d4-9811-0000393c050e
=============================================
// ***************************************************************************
//                                                 Revision Log
// ***************************************************************************
// Date               AB#                     SAR            Description
// 11/03/05        I_8851678        7842737    Show Base Order, Total Order if
// 12/23/10        NB9064959        8969464    Purchase Order Recap Incorrect
// remaining partial receipt is cancelled with option '9'
// ***************************************************************************
VA frm_OriginalOrderAmtForeign [FEA] = "0"
VA frm_OriginalOrderAmt [AEXP] = "0"
VA frm_ChgOrderAmtForeign [FEA] = "0"
VA frm_ChgOrderAmt [AEXP] = "0"
//
// Begin SAR   5213566
VA frm_mnUnitsOpenQtyF4311_UOPN [UOPN] = "0"
VA frm_mnAmountOpenF4311_AOPN [AOPN] = "0"
// End SAR   5213566

=============================================
Form: Order Recap - W4310C
Event: Post Dialog is Initialized
Event GUID: 5ef15c7c-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szF4311UOM_UOM [UOM]
evt_szPrevUOM_UOM [UOM]
evt_cHideQFlag_EV01 [EV01]
evt_CancelledStatus_LTTR [LTTR]
----------------------------------------
VA frm_TOT01_TotalOrder [TOT1] = "  "
//
FC OrderCompany [KCOO] = FI szCompanyKeyOrderNo [KCOO]
FC OrderType [DCTO] = FI szOrderType [DCTO]
FC Order Number [DOCO] = FI mnDocumentOrderInvoiceE [DOCO]
FC ChangeOrderSFXO [SFXO] = FI szOrderSuffix [SFXO]
FC Line Number [LNID] = FI mnLineNumber [LNID]
FC Currency Code [CRCD] = FI szCurrencyCodeFrom [CRCD]
FC BusinessUnit [MCU] = FI szCostCenter [MCU]
//
//
// Begin SAR 8969464
// Modified select statement to exclude cancelled lines from being used to
// calculate values by modifying LTTR
VA evt_CancelledStatus_LTTR [LTTR] = "900"
! V4311TA.Select
!      FC OrderCompany [KCOO] = TK Order Company (Order Number) [KCOO][F4311.0]
!      FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO][F4311.0]
!      FC OrderType [DCTO] = TK Order Type [DCTO][F4311.0]
V4311TA.Select
     FC OrderCompany [KCOO] = TK Order Company (Order Number) [KCOO][F4311.0]
     FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO][F4311.0]
     FC OrderType [DCTO] = TK Order Type [DCTO][F4311.0]
     VA evt_CancelledStatus_LTTR [LTTR] > TK Status Code - Last [LTTR][F4311.0]
// End SAR 8969464
V4311TA.FetchNext
     VA frm_SFXO [SFXO] <- TK Order Suffix [SFXO][F4311.0]
     VA frm_RETA [RETA] <- TK Amount - Retained [RETA][F4311T.0]
     VA frm_REFA [REFA] <- TK Amount - Foreign Retained [REFA][F4311T.0]
     VA frm_UORG [UORG] <- TK Units - Order/Transaction Quantity [UORG][F4311.0]
     VA frm_AEXP [AEXP] <- TK Amount - Extended Price [AEXP][F4311.0]
     VA frm_AREC [AREC] <- TK Amount - Received [AREC][F4311.0]
     VA frm_FEA [FEA] <- TK Amount - Foreign Extended Price [FEA][F4311.0]
     VA frm_UREC [UREC] <- TK Units - Received [UREC][F4311.0]
     VA frm_UCHG [UCHG] <- TK Units - On Hold [UCHG][F4311.0]
     VA frm_ACHG [ACHG] <- TK Amount - On Hold [ACHG][F4311.0]
     VA frm_FCHG [FCHG] <- TK Amount - Foreign Changed Amount [FCHG][F4311.0]
     VA frm_FREC [FREC] <- TK Amount - Received Foreign [FREC][F4311.0]
     VA frm_LastStatus [LTTR] <- TK Status Code - Last [LTTR][F4311.0]
     VA evt_szF4311UOM_UOM [UOM] <- TK Unit of Measure as Input [UOM][F4311.0]
     VA frm_ItemNumberRelatedKit_RLIT [RLIT] <- TK Item Number - Related (Kit) [RLIT][F4311.0]
     VA frm_mnUnitsOpenQtyF4311_UOPN [UOPN] <- TK Units - Open [UOPN][F4311.0]
     VA frm_mnAmountOpenF4311_AOPN [AOPN] <- TK Amount - Open [AOPN][F4311.0]
While SV File_IO_Status is equal to CO SUCCESS
And BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] is equal to FC Order Number [DOCO]
     //
     // ---------------------------------------------------------------------------
     // Check for cancelled line.
     // ---------------------------------------------------------------------------
     //
     // SAR 7842737 - Calculate Order Qty, Vouchered Qty even the remaining partial
     // receipt is cancelled with option '9'
     ! VA frm_OriginalOrderQTY [UORG] = ([VA frm_OriginalOrderQTY [UORG]]+[VA frm_UORG [UORG]])+[VA frm_UCHG [UCHG]]
     ! VA frm_TotalVoucheredUREC [UREC] = [VA frm_TotalVoucheredUREC [UREC]]+[VA frm_UREC [UREC]]
     // End of SAR 7842737
     //
     // SAR 8468732 - The form did not manipulate Order Quantity, Vouchered
     
     // uantity, Balance Quantity, if the Order Status is closed i.e. 980. So the
     
     // rder Recap form was not at all displaying Order Quantity, Total Quantity,
     //  ADD Vouchered Quantity and Balance to complete quantity when doing
     // partial
     receipt and partial voucher and if the remaining is canceled with
     // an option
     // 9. Hence removing the check for the last status
     If VA frm_SFXO [SFXO] is equal to "000"
          If VA frm_ItemNumberRelatedKit_RLIT [RLIT] is equal to "0"
          Or VA frm_ItemNumberRelatedKit_RLIT [RLIT] is equal to <Blank>
          Or VA frm_ItemNumberRelatedKit_RLIT [RLIT] is equal to <NULL>
               VA frm_OriginalOrderAmt [AEXP] = ([VA frm_OriginalOrderAmt [AEXP]]+[VA frm_AEXP [AEXP]])+[VA frm_ACHG [ACHG]]
               VA frm_OriginalOrderAmtForeign [FEA] = ([VA frm_OriginalOrderAmtForeign [FEA]]+[VA frm_FEA [FEA]])+[VA frm_FCHG [FCHG]]
          End If
          // SAR 7842737 - Moved the Ordered Qty calculation above.
          VA frm_OriginalOrderQTY [UORG] = ([VA frm_OriginalOrderQTY [UORG]]+[VA frm_UORG [UORG]])+[VA frm_UCHG [UCHG]]
          VA frm_TotalVoucheredAREC [AREC] = [VA frm_TotalVoucheredAREC [AREC]]+[VA frm_AREC [AREC]]
          VA frm_TotalVoucheredFREC [FREC] = [VA frm_TotalVoucheredFREC [FREC]]+[VA frm_FREC [FREC]]
          // SAR 7842737 - Moved the Vouchered Qty calculation above.
          VA frm_TotalVoucheredUREC [UREC] = [VA frm_TotalVoucheredUREC [UREC]]+[VA frm_UREC [UREC]]
          VA frm_TotalRetainedRETA [RETA] = [VA frm_TotalRetainedRETA [RETA]]+[VA frm_RETA [RETA]]
          VA frm_TotalRetainedREFA [REFA] = [VA frm_TotalRetainedREFA [REFA]]+[VA frm_REFA [REFA]]
     Else
          VA frm_ChgOrderAmt [AEXP] = ([VA frm_ChgOrderAmt [AEXP]]+[VA frm_AEXP [AEXP]])+[VA frm_ACHG [ACHG]]
          VA frm_ChgOrderAmtForeign [FEA] = ([VA frm_FCHG [FCHG]]+[VA frm_ChgOrderAmtForeign [FEA]])+[VA frm_FEA [FEA]]
          VA frm_ChgOrderQTY [UORG] = ([VA frm_ChgOrderQTY [UORG]]+[VA frm_UORG [UORG]])+[VA frm_UCHG [UCHG]]
          VA frm_TotalVoucheredAREC [AREC] = [VA frm_TotalVoucheredAREC [AREC]]+[VA frm_AREC [AREC]]
          VA frm_TotalVoucheredUREC [UREC] = [VA frm_TotalVoucheredUREC [UREC]]+[VA frm_UREC [UREC]]
          VA frm_TotalVoucheredFREC [FREC] = [VA frm_TotalVoucheredFREC [FREC]]+[VA frm_FREC [FREC]]
          VA frm_TotalRetainedRETA [RETA] = [VA frm_TotalRetainedRETA [RETA]]+[VA frm_RETA [RETA]]
          VA frm_TotalRetainedREFA [REFA] = [VA frm_TotalRetainedREFA [REFA]]+[VA frm_REFA [REFA]]
          If VA frm_SFXO [SFXO] is equal to FC ChangeOrderSFXO [SFXO]
               VA frm_CurrentChgOrderAmt [AEXP] = [VA frm_AEXP [AEXP]]+[VA frm_ACHG [ACHG]]
               VA frm_CurrChgOrderAmtForeign [FEA] = [VA frm_FEA [FEA]]+[VA frm_FCHG [FCHG]]
               VA frm_CurrChgOrderQTY [UORG] = [VA frm_UORG [UORG]]+[VA frm_UCHG [UCHG]]
               VA frm_TotalVoucheredAREC [AREC] = [VA frm_AREC [AREC]]
               VA frm_TotalVoucheredFREC [FREC] = VA frm_FREC [FREC]
               VA frm_TotalVoucheredUREC [UREC] = [VA frm_UREC [UREC]]
               VA frm_TotalRetainedRETA [RETA] = [VA frm_RETA [RETA]]
               VA frm_TotalRetainedREFA [REFA] = [VA frm_REFA [REFA]]
          End If
     End If
     //
     If VA evt_szPrevUOM_UOM [UOM] is not equal to <Blank>
     And VA evt_szPrevUOM_UOM [UOM] is not equal to <NULL>
          If VA evt_szPrevUOM_UOM [UOM] is not equal to VA evt_szF4311UOM_UOM [UOM]
               VA evt_cHideQFlag_EV01 [EV01] = "1"
               VA evt_szPrevUOM_UOM [UOM] = VA evt_szF4311UOM_UOM [UOM]
          Else
               VA evt_szPrevUOM_UOM [UOM] = VA evt_szF4311UOM_UOM [UOM]
          End If
     Else
          VA evt_szPrevUOM_UOM [UOM] = VA evt_szF4311UOM_UOM [UOM]
     End If
     //
     //
     // Begin SAR 5213566
     FC BalanceToComplete [TOT1] = [FC BalanceToComplete [TOT1]]+[VA frm_mnAmountOpenF4311_AOPN [AOPN]]
     FC BalanceToCompleteQTY [UORG] = [FC BalanceToCompleteQTY [UORG]]+[VA frm_mnUnitsOpenQtyF4311_UOPN [UOPN]]
     // End SAR   5213566
     //
     V4311TA.FetchNext
          VA frm_SFXO [SFXO] <- TK Order Suffix [SFXO][F4311.0]
          VA frm_RETA [RETA] <- TK Amount - Retained [RETA][F4311T.0]
          VA frm_REFA [REFA] <- TK Amount - Foreign Retained [REFA][F4311T.0]
          VA frm_UORG [UORG] <- TK Units - Order/Transaction Quantity [UORG][F4311.0]
          VA frm_AEXP [AEXP] <- TK Amount - Extended Price [AEXP][F4311.0]
          VA frm_AREC [AREC] <- TK Amount - Received [AREC][F4311.0]
          VA frm_FEA [FEA] <- TK Amount - Foreign Extended Price [FEA][F4311.0]
          VA frm_UREC [UREC] <- TK Units - Received [UREC][F4311.0]
          VA frm_UCHG [UCHG] <- TK Units - On Hold [UCHG][F4311.0]
          VA frm_ACHG [ACHG] <- TK Amount - On Hold [ACHG][F4311.0]
          VA frm_FCHG [FCHG] <- TK Amount - Foreign Changed Amount [FCHG][F4311.0]
          VA frm_FREC [FREC] <- TK Amount - Received Foreign [FREC][F4311.0]
          VA frm_LastStatus [LTTR] <- TK Status Code - Last [LTTR][F4311.0]
          VA evt_szF4311UOM_UOM [UOM] <- TK Unit of Measure as Input [UOM][F4311.0]
          VA frm_ItemNumberRelatedKit_RLIT [RLIT] <- TK Item Number - Related (Kit) [RLIT][F4311.0]
          VA frm_mnUnitsOpenQtyF4311_UOPN [UOPN] <- TK Units - Open [UOPN][F4311.0]
          VA frm_mnAmountOpenF4311_AOPN [AOPN] <- TK Amount - Open [AOPN][F4311.0]
End While
//
F43121.Select  [Index 1: Order Number, Order Type, +]
     FC OrderCompany [KCOO] = TK Order Company (Order Number) [KCOO]
     FC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     FC OrderType [DCTO] = TK Order Type [DCTO]
F43121.FetchNext  [Index 1: Order Number, Order Type, +]
     VA frm_MATC_MatchType [MATC] <- TK Type - Match Record Type [MATC]
     VA frm_RoutingProcessYN [RTGC] <- TK Routing Process (Y/N) [RTGC]
     VA frm_UOPN_UnitsOpen [UOPN] <- TK Units - Open [UOPN]
     VA frm_AOPN_AmountOpen [AOPN] <- TK Amount - Open [AOPN]
     VA frm_FOPN_ForAmtOpen [FOPN] <- TK Amount - Foreign Open [FAP]
While SV File_IO_Status is equal to CO SUCCESS
And BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] is equal to FC Order Number [DOCO]
     // SAR 8468732 - The form did not manipulate Order Quantity, Vouchered
     
     // Quantity, Balance Quantity, if the Order Status is closed i.e. 980. So the
     // Order Recap form was not at all displaying Order Quantity, Total Quantity,
     //  ADD Vouchered Quantity and Balance to complete quantity when doing
     // partial
     receipt and partial voucher and if the remaining is canceled with
     // an option 9. Hence removing the check for the last status
     //
     If VA frm_MATC_MatchType [MATC] is equal to "1"
          // 3741980 - added the "or" to the statement
          If VA frm_RoutingProcessYN [RTGC] is equal to <Blank>
          Or VA frm_AOPN_AmountOpen [AOPN] is not equal to VA frm_TotalVoucheredAREC [AREC]
               VA frm_AOPN [AOPN] = [VA frm_AOPN_AmountOpen [AOPN]]+[VA frm_AOPN [AOPN]]
               VA frm_FOPN [FOPN] = [VA frm_FOPN_ForAmtOpen [FOPN]]+[VA frm_FOPN [FOPN]]
               VA frm_UOPN [UOPN] = [VA frm_UOPN_UnitsOpen [UOPN]]+[VA frm_UOPN [UOPN]]
          Else
               VA frm_AOPN [AOPN] = VA frm_AREC [AREC]
               VA frm_FOPN [FOPN] = VA frm_FREC [FREC]
               VA frm_UOPN [UOPN] = VA frm_UREC [UREC]
          End If
     End If
     F43121.FetchNext  [Index 1: Order Number, Order Type, +]
          VA frm_MATC_MatchType [MATC] <- TK Type - Match Record Type [MATC]
          VA frm_UOPN_UnitsOpen [UOPN] <- TK Units - Open [UOPN]
          VA frm_AOPN_AmountOpen [AOPN] <- TK Amount - Open [AOPN]
          VA frm_FOPN_ForAmtOpen [FOPN] <- TK Amount - Foreign Open [FAP]
End While
//
If FC ChangeOrderSFXO [SFXO] is equal to "000"
Or FC ChangeOrderSFXO [SFXO] is equal to or empty <Blank>
     Hide Control(FC FEA_ForCurrentChgOrder [FEA])
     Hide Control(FC CurrentChgOrderQTY [UORG])
     Hide Control(FC AEXP_CurrentChgOrder [AEXP])
     Hide Control(FC Current Change Order [AEXP])
End If
//
If SL CurrencyProcessing is equal to "N"
     Hide Control(FC Currency Code [CRCD])
     Hide Control(FC Base [CRDC])
End If
//
If FC BusinessUnit [MCU] is not equal to <Blank>
And FC BusinessUnit [MCU] is not equal to <NULL>
     RetrieveCompanyFromBusUnit(B0000130.RetrieveCompanyFromBusUnit)
          FC BusinessUnit [MCU] -> szCostCenter [MCU0]
          FC OrderCompany [KCOO] <- szCompany [CO]
          UNDEFINED <> szCostCenterDescription [DL01]
End If
//
If FC OrderCompany [KCOO] is not equal to <Blank>
And FC OrderCompany [KCOO] is not equal to <NULL>
     RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
          FC OrderCompany [KCOO] <> szCompany [CO]
          FC Base [CRDC] <> szCurrencyCode [CRCD]
          UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
          UNDEFINED <> cPostByCurrency [ABIN]
End If
//
If SL CurrencyProcessing is not equal to "N"
And FC Currency Code [CRCD] is not equal to FC Base [CRDC]
     Hide Control(FC AEXP_CurrentChgOrder [AEXP])
     Hide Control(FC Change Order [AEXP])
     Hide Control(FC OriginalOrder [AEXP])
     Hide Control(FC AREC_TotalVouchered [AREC])
     FC ForeignOriginalOrder [FEA] = VA frm_OriginalOrderAmtForeign [FEA]
     FC FREC_TotalVoucheredFor [FREC] = [VA frm_TotalVoucheredFREC [FREC]]-[VA frm_FOPN [FOPN]]
     FC TotalAmtLessRetained [AREC] = ([VA frm_TotalVoucheredFREC [FREC]]-[VA frm_TotalRetainedREFA [REFA]])-[VA frm_FOPN [FOPN]]
     FC FEA_ForCurrentChgOrder [FEA] = VA frm_CurrChgOrderAmtForeign [FEA]
     FC ForeignChgOrder [FEA] = VA frm_ChgOrderAmtForeign [FEA]
     VA frm_TOT01_TotalOrder [TOT1] = [FC ForeignChgOrder [FEA]]+[FC ForeignOriginalOrder [FEA]]
     FC TOT1_TotalRetained [TOT1] = VA frm_TotalRetainedREFA [REFA]
     // SAR 6809767
     FC BalanceToComplete [TOT1] = [VA frm_OriginalOrderAmtForeign [FEA]]-[VA frm_TotalVoucheredFREC [FREC]]
Else
     Hide Control(FC FEA_ForCurrentChgOrder [FEA])
     Hide Control(FC ForeignChgOrder [FEA])
     Hide Control(FC ForeignOriginalOrder [FEA])
     Hide Control(FC FREC_TotalVoucheredFor [FREC])
     FC OriginalOrder [AEXP] = VA frm_OriginalOrderAmt [AEXP]
     If FC OrderType [DCTO] is not equal to "OB"
          FC AREC_TotalVouchered [AREC] = [VA frm_TotalVoucheredAREC [AREC]]-[VA frm_AOPN [AOPN]]
     End If
     FC TotalAmtLessRetained [AREC] = ([VA frm_TotalVoucheredAREC [AREC]]-[VA frm_TotalRetainedRETA [RETA]])-[VA frm_AOPN [AOPN]]
     FC AEXP_CurrentChgOrder [AEXP] = VA frm_CurrentChgOrderAmt [AEXP]
     FC Change Order [AEXP] = VA frm_ChgOrderAmt [AEXP]
     VA frm_TOT01_TotalOrder [TOT1] = [FC OriginalOrder [AEXP]]+[FC Change Order [AEXP]]
     FC TOT1_TotalRetained [TOT1] = VA frm_TotalRetainedRETA [RETA]
End If
//
//
//
FC OriginalOrderQTY [UORG] = VA frm_OriginalOrderQTY [UORG]
FC ChgOrderQTY [UORG] = VA frm_ChgOrderQTY [UORG]
FC TotalOrderQTY [UORG] = [VA frm_ChgOrderQTY [UORG]]+[VA frm_OriginalOrderQTY [UORG]]
FC CurrentChgOrderQTY [UORG] = VA frm_CurrChgOrderQTY [UORG]
If FC OrderType [DCTO] is not equal to "OB"
     FC UORG_TotalVoucheredQTY [UORG] = [VA frm_TotalVoucheredUREC [UREC]]-[VA frm_UOPN [UOPN]]
End If
FC TotalAmtLessRetainedQTY [UREC] = [VA frm_TotalVoucheredUREC [UREC]]-[VA frm_UOPN [UOPN]]
FC Total Order [TOT1] = VA frm_TOT01_TotalOrder [TOT1]
//
If VA evt_cHideQFlag_EV01 [EV01] is equal to "1"
     Hide Control(FC OriginalOrderQTY [UORG])
     Hide Control(FC ChgOrderQTY [UORG])
     Hide Control(FC TotalOrderQTY [UORG])
     Hide Control(FC CurrentChgOrderQTY [UORG])
     Hide Control(FC UORG_TotalVoucheredQTY [UORG])
     Hide Control(FC TotalAmtLessRetainedQTY [UREC])
     Hide Control(FC BalanceToCompleteQTY [UORG])
     Hide Control(FC Quantity)
Else
     Show Control(FC OriginalOrderQTY [UORG])
     Show Control(FC ChgOrderQTY [UORG])
     Show Control(FC TotalOrderQTY [UORG])
     If PO cSupplierSelfService1 [SSS1] is not equal to "1"
          Show Control(FC CurrentChgOrderQTY [UORG])
     End If
     Show Control(FC UORG_TotalVoucheredQTY [UORG])
     Show Control(FC TotalAmtLessRetainedQTY [UREC])
     Show Control(FC BalanceToCompleteQTY [UORG])
     Show Control(FC Quantity)
End If




=============================================
EVENTS
=============================================
Form: Confirm Cancel Purchase Order - W4310D
Object: FC Yes
Event: Button Clicked
Event GUID: 10555e15-ca9f-4e60-b134-6806d80df3d3
=============================================
// SAR    5660411    
FI cEverestEventPoint01 [EV01] = "1"


=============================================
EVENTS
=============================================
Form: Confirm Cancel Purchase Order - W4310D
Object: FC No
Event: Button Clicked
Event GUID: 1b27caab-2260-481c-a661-1c4d6cfe6c7a
=============================================
FI cEverestEventPoint01 [EV01] = "0"





=============================================
EVENTS
=============================================
Form: Order Detail - Page II - W4310E
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df434-a23a-11d0-a204-0000f6728a56
=============================================
FI PurchaseReportingCode1 [PDP1] = FC Reporting Code 1 - Purchasing [PDP1]
FI PurchaseReportingCode2 [PDP2] = FC Reporting Code 2 - Purchasing [PDP2]
FI PurchaseReportingCode3 [PDP3] = FC Reporting Code 3 - Purchasing [PDP3]
FI PurchaseReportingCode4 [PDP4] = FC Reporting Code 4 - Purchasing [PDP4]
FI PurchaseReportingCode5 [PDP5] = FC Reporting Code 5 - Purchasing [PDP5]
// 
FI UnitWeight [ITWT] = FC Unit Weight [ITWT]
FI WeightUoM [WTUM] = FC Weight UoM (WTUM) [WTUM]
// 
FI UnitVolume [ITVL] = FC Unit Volume [ITVL]
FI VolumeUoM [VLUM] = FC Volume Unit of Measure [VLUM]
// 
FI SupplierSO [VR01] = FC Reference [VR01]
FI Reference2 [VR02] = FC Reference 2 [VR02]
FI SendMethod [CRMD] = FC Send Method [CRMD]
FI WorkOrderFreezeCode [UNCD] = FC Freeze Code [UNCD]
FI GLOffset [GLC] = FC G/L Offset [GLC]
FI EvaluatedReceiptsSettlement [AVCH] = FC Evaluated Receipt [AVCH]
// 
FI OriginalOrderNumber [OORN] = FC Original Order Number [OORN]
FI OriginalOrderType [OCTO] = FC Original Order Type [OCTO]
FI OriginalOrderCompany [OKCO] = FC Original Order Company [OKCO]
FI OriginalOrderLineNumber [OGNO] = FC Original Line Number [OGNO]
// 
// 


=============================================
EVENTS
=============================================
Form: Order Detail - Page II - W4310E
Object: HC Original Orders Inquiry
Event: Button Clicked
Event GUID: 90933467-a23d-11d0-a204-0000f6728a56
=============================================
Call App:P4332 Form:W4332A Version:Undefined
     FI Documentorderinvoicee [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FI Ordertype [DCTO] -> OrderType [DCTO]
     FI Companykeyorderno [KCOO] -> CompanyKeyOrderNo [KCOO]
     FI Linenumber [LNID] -> LineNumber [LNID]
     "1" -> ProgramOrigin [EV01]
     FI Itemnounknownformat [UITM] -> Itemnounknownformat [UITM]
     FI Unitstransactionqty [UORG] -> Unitsrequistioned [UREQ]
     FI Unitofmeasureasinput [UOM] -> Unitofmeasure [UM]



=============================================
EVENTS
=============================================
Form: Order Detail - Page II - W4310E
Event: Post Dialog is Initialized
Event GUID: f57df433-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szUNSPSCAltDesc_UNSPSCDS1 [UNSPSCDS1]
----------------------------------------
FC Reporting Code 1 - Purchasing [PDP1] = FI PurchaseReportingCode1 [PDP1]
FC Reporting Code 2 - Purchasing [PDP2] = FI PurchaseReportingCode2 [PDP2]
FC Reporting Code 3 - Purchasing [PDP3] = FI PurchaseReportingCode3 [PDP3]
FC Reporting Code 4 - Purchasing [PDP4] = FI PurchaseReportingCode4 [PDP4]
FC Reporting Code 5 - Purchasing [PDP5] = FI PurchaseReportingCode5 [PDP5]
//
FC Unit Weight [ITWT] = FI UnitWeight [ITWT]
FC Weight UoM (WTUM) [WTUM] = FI WeightUoM [WTUM]
//
FC Unit Volume [ITVL] = FI UnitVolume [ITVL]
FC Volume Unit of Measure [VLUM] = FI VolumeUoM [VLUM]
//
FC Reference [VR01] = FI SupplierSO [VR01]
FC Reference 2 [VR02] = FI Reference2 [VR02]
FC Send Method [CRMD] = FI SendMethod [CRMD]
FC Freeze Code [UNCD] = FI WorkOrderFreezeCode [UNCD]
FC G/L Offset [GLC] = FI GLOffset [GLC]
FC Evaluated Receipt [AVCH] = FI EvaluatedReceiptsSettlement [AVCH]
//
FC Original Order Number [OORN] = FI OriginalOrderNumber [OORN]
FC Original Order Type [OCTO] = FI OriginalOrderType [OCTO]
FC Original Order Company [OKCO] = FI OriginalOrderCompany [OKCO]
FC Original Line Number [OGNO] = FI OriginalOrderLineNumber [OGNO]
//
//
// SAR # 7235574 - Send method will always default from the header.  You
// cannot have different send methods on each individual line.
Disable Control(FC Send Method [CRMD])
//
// ---------------------------------------------------------------------------
//   Test whether this order line is made up of more than one original order lin
//     i.e.   were they consolidated in creating this PO line
// ---------------------------------------------------------------------------
//
If BC Original Order Number (F4311.0) [OORN] is not equal to "0"
And BC Original Order Number (F4311.0) [OORN] is not equal to <Blank>
     Enable Control(HC &Original Order)
     F4332FetchDuplicateOrderLine(B4301070.F4332FetchDuplicateOrderLine)
          FI Companykeyorderno [KCOO] -> szOrderCompany [KCOO]
          FI Documentorderinvoicee [DOCO] -> mnOrderNumber [DOCO]
          FI Ordertype [DCTO] -> szOrderType [DCTO]
          FI Linenumber [LNID] -> mnLineNumber [LNID]
          UNDEFINED <> szOriginalOrderNumber [OORN]
          UNDEFINED <> szOriginalOrderType [OCTO]
          UNDEFINED <> szOriginalOrderCompany [OKCO]
          UNDEFINED <> mnOriginalLineNumber [OGNO]
          UNDEFINED <> mnShipToNumber [SHAN]
          UNDEFINED <> mnUnitsRelieved [UREL]
          UNDEFINED <> mnUnitsRequested [UREQ]
          UNDEFINED <> mnAmountRequested [ARQU]
          UNDEFINED <> mnAmountRelieved [AREL]
          FC EV01..DuplOriginalLineExists(wf) [EV01] <- cAddOrUpdateFlag [EV01]
          UNDEFINED <> szOrderSuffix [SFXO]
     If FC EV01..DuplOriginalLineExists(wf) [EV01] is equal to "1"
          Set Edit Control Color(FC Original Order Number, <Lime>)
     End If
Else
     Disable Control(HC &Original Order)
End If
//
ValidateUNSPSCandRetrieveDesc(N4024001.ValidateUNSPSCandRetrieveDesc)
     BC UNSPSC Commodity Code (F4311.0) [UNSPSC] -> szUNSPSCCode [UNSPSC]
     FC UNSPSC Code Description [DL01] <- szUNSPSCDescription [UNSPSCDS]
     "1" -> cSuppressErrorMsg [SUPPS]
// SAR 8925180 BEGIN
If SL LanguagePreference is not equal to <Blank>
And SL LanguagePreference is not equal to <NULL>
     FetchUNSPSCAlternateDesc(N4024005.FetchUNSPSCAlternateDesc)
          BC UNSPSC Commodity Code (F4311.0) [UNSPSC] -> szUNSPSCCode [UNSPSC]
          SL LanguagePreference -> szLanguagePreference [LNGP]
          VA evt_szUNSPSCAltDesc_UNSPSCDS1 [UNSPSCDS1] <- szUNSPSCAlternateDescripti [UNSPSCDS1]
     If VA evt_szUNSPSCAltDesc_UNSPSCDS1 [UNSPSCDS1] is not equal to <Blank>
     And VA evt_szUNSPSCAltDesc_UNSPSCDS1 [UNSPSCDS1] is not equal to <NULL>
          FC UNSPSC Code Description [DL01] = VA evt_szUNSPSCAltDesc_UNSPSCDS1 [UNSPSCDS1]
     End If
End If
// SAR 8925180 END




=============================================
Form: Order Detail - Page I - W4310F
Event: Form Variables
Event GUID: a13a8ecd-a12c-4639-84f1-474435bb9ce4
=============================================
frm_PromotionsSystemFlag_PRSF [PRSF]

=============================================
EVENTS
=============================================
Form: Order Detail - Page I - W4310F
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: f57df431-a23a-11d0-a204-0000f6728a56
=============================================
FI TaxableFlag [TX] = FC Purchasing Taxable (Y/N) [TX]
FI TaxExplanationCode [EXR1] = FC Tax Expl Code [EXR1]
FI TaxRateArea [TXA1] = FI TaxRateArea [TXA1]
// 
FI DiscountFactor [DSPR] = FC Discount Factor [DSPR]
FI ItemPriceGroup [PRGR] = FC Item Price Group [PRGR]
FI PriceCategoryLevel [CLVL] = FC Pricing Category Level [CLVL]
FI PrintMessage [INMG] = FC Print Message [INMG]
// 
FI BranchPlantOnLineLevel [MCU] = FC Business Unit [MCU]
FI Lot [LOTN] = FC Lot/SN [LOTN]
// 
//  SAR     5261488     Begin
// // Assign FI Location from FC Location
FI Location [LOCN] = FC Location [LOCN]
//  SAR    5261488    End
// 
FI AssetNumber [ASID] = FC Serial Number [ASID]
// 
FI szPriceAdjustmentScheduleN [ASN] = FC ASN_AdjSchedule [ASN]
FI szPromotionID [PMTN] = FC Promotion ID [PMTN]


=============================================
EVENTS
=============================================
Form: Order Detail - Page I - W4310F
Object: FC Location E1
Event: Control Exited/Changed-Asynch
Event GUID: f57df432-a23a-11d0-a204-0000f6728a56
=============================================
// 
// SAR    5261488    Begin 
// Add If statement to check for validation of B/P in P41001. 
If PO cBranchPlantValidation [EV01] is equal to "1"
     // Pass FC Location [HIDDEN] instead of FC Location E1 
     // F4100 Format Location
     ! FormatLocation(B4000310.FormatLocation)
     !      FC Business Unit [MCU] -> szCostCenter [MCU]
     !      FC Location E1 [LOCNE1] -> szDisplayFormatLocation [WL01]
     !      FI Location [LOCN] <- szFileFormatLocation [LOCN]
     !      UNDEFINED <> cValidate [MODE]
     !      UNDEFINED <> szAisle [AISL]
     !      UNDEFINED <> szBin [BIN]
     !      UNDEFINED <> szLocation3 [LA03]
     !      UNDEFINED <> szLocation4 [LA04]
     !      UNDEFINED <> szLocation5 [LA05]
     !      UNDEFINED <> szLocation6 [LA06]
     !      UNDEFINED <> szLocation7 [LA07]
     !      UNDEFINED <> szLocation8 [LA08]
     !      UNDEFINED <> szLocation9 [LA09]
     !      UNDEFINED <> szLocation10 [LA10]
     !      "1" -> cMode [MODE]
     !      UNDEFINED <> idBranchConstantRecord [GENLNG]
     FormatLocation(B4000310.FormatLocation)
          FC Business Unit [MCU] -> szCostCenter [MCU]
          FC Location [LOCN] -> szDisplayFormatLocation [WL01]
          FI Location [LOCN] <- szFileFormatLocation [LOCN]
          UNDEFINED <> cValidate [MODE]
          UNDEFINED <> szAisle [AISL]
          UNDEFINED <> szBin [BIN]
          UNDEFINED <> szLocation3 [LA03]
          UNDEFINED <> szLocation4 [LA04]
          UNDEFINED <> szLocation5 [LA05]
          UNDEFINED <> szLocation6 [LA06]
          UNDEFINED <> szLocation7 [LA07]
          UNDEFINED <> szLocation8 [LA08]
          UNDEFINED <> szLocation9 [LA09]
          UNDEFINED <> szLocation10 [LA10]
          "1" -> cMode [MODE]
          UNDEFINED <> idBranchConstantRecord [GENLNG]
     // 
     // Assign user's change to the LOCNE1 field to the hidden field LOCN, so that
     // change will be passed back through the form interconnect. 
     FC Location [LOCN] = FC Location E1 [LOCNE1]
End If
// SAR    5261488    End
//     



=============================================
EVENTS
=============================================
Form: Order Detail - Page I - W4310F
Event: Post Dialog is Initialized
Event GUID: f57df430-a23a-11d0-a204-0000f6728a56
=============================================
// 
// ---------------------------------------------------------------------------
//     Load all the Form Interconnect values into the form controls
//     for display.   NOTE that the location is formatted to diplay format
// ---------------------------------------------------------------------------
// 
FC Purchasing Taxable (Y/N) [TX] = FI TaxableFlag [TX]
FC Tax Expl Code [EXR1] = FI TaxExplanationCode [EXR1]
FC Tax Rate/Area [TXA1] = FI TaxRateArea [TXA1]
// 
FC Discount Factor [DSPR] = FI DiscountFactor [DSPR]
FC Item Price Group [PRGR] = FI ItemPriceGroup [PRGR]
FC Pricing Category Level [CLVL] = FI PriceCategoryLevel [CLVL]
FC Print Message [INMG] = FI PrintMessage [INMG]
// 
FC Business Unit [MCU] = FI BranchPlantOnLineLevel [MCU]
FC Lot/SN [LOTN] = FI Lot [LOTN]
// 
// ---------------------------------------------------------------------------
//  SAR    5261488    Begin
//  Disable F4100FormatLocation call, since this formatting has been done in the
// grid, W4310A.  Add assignment to Form Control Location E1 from Form
// Interconnect Location.  Assign the FI Location to the newly created hidden FC
// Location.  Then, assign FC Location to FC Location E1.   
// ---------------------------------------------------------------------------
FC Location [LOCN] = FI Location [LOCN]
FC Location E1 [LOCNE1] = FC Location [LOCN]
//  SAR    5261488    End
// 
FC Serial Number [ASID] = FI AssetNumber [ASID]
// 
// ---------------------------------------------------------------------------
// Advanced Pricing B733 
// ---------------------------------------------------------------------------
// 
FC ASN_AdjSchedule [ASN] = FI szPriceAdjustmentScheduleN [ASN]
// 
// Promotion ID Enhancement
// to be enabled at a later point
If FI cPromotionsSystemFlag [PRSF] is equal to ("1","2")
     FC Promotion ID [PMTN] = FI szPromotionID [PMTN]
     Show Control(FC Promotion ID [PMTN])
Else
     Hide Control(FC Promotion ID [PMTN])
End If




=============================================
Form: Work With Order Details - W4310G
Event: Form Variables
Event GUID: 90932772-a23d-11d0-a204-0000f6728a56
=============================================
frm_NumberRowsSelected [MATH01]
frm_StatusDisplayForm [EV01]
frm_CancelFlag [EV01]
frm_TimeOfDay [TDAY]
frm_DateUpdated [UPMJ]
frm_UserId [USER]
frm_WorkStationId [JOBN]
frm_pointertoUOMTaxFrieght [GENLNG]
frm_CrossReferenceType [XRT2]
frm_NoOperationActive [EV01]
frm_VC01_CriteriaExist [VC01]
frm_TRR1_LegOne [TRR1]
frm_TRR2_LegTwo [TRR2]
frm_AsIfCurrency [DL01]
frm_DL01_Domestic [DL01]
frm_DL01_Foreign [DL01]
frm_AsIfCurrencyFor [DL02]
frm_cCurrencyConversion_CRCM [CRCM]
frm_TRR1_mnCurrConvRateMult [TRR1]
frm_TRR2_mnCurrConvRateDiv [TRR2]
frm_TRR1_mnXRate [TRR1]
frm_AOPN_DomesticOpenAmount [AOPN]
frm_szSearchType [AT1]
frm_cVertexActive [VVTX]
frm_CountryCodeforCanada [VVCN]
frm_cGeoCodeValid [EV01]
frm_szBlankSubledger_SBL [SBL]
frm_DefaultBranchPlant_MCU [MCU]
frm_AddressNumber_AN8 [AN8]
frm_SymbolSupp_SYM5 [SYM5]
frm_SupplierCrossRef_XRT2 [XRT2]
frm_ErrorMessage_DTAI [DTAI]
frm_Date_DTE [DTE]
frm_SuppCrossRefNumber_LITM [LITM]
frm_ErrorMsgJDEItemNum_DTAI [DTAI]
frm_ErrorMsgItemNum_DTAI [DTAI]
frm_cTransportationInstalled [EV01]
frm_TotalValorAReceber [AOPN]
frm_SY_55 [SY]
frm_RT_F6 [RT]
frm_KY_CodFornec [KY]
frm_FlagSupress_EV01 [EV01]
frm_DOCO [DOCO]
frm_StockingType [STKT]
frm_ConfigurationIDNumber [CFGID]
frm_ComponentIDNumber [CFGCID]
frm_ConfigErrorValue [DTAI]
frm_cLogsAtLevelsOn_EV01 [EV01]
frm_inErrorCount_Integer01 [INT01]
frm_cPMPNInstalled_EV01 [EV01]

=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: GC Order Number
Event: Grid Column Clicked
Event GUID: 7315e68d-2958-4a62-83e0-b22ba887e957
=============================================
Press Button(HC &OK/&Select)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: GC Tax Rate/Area
Event: Visual Assist Button Clicked
Event GUID: 26b51c52-a5b6-11d2-973e-000039ae070e
=============================================
If VA frm_cVertexActive [VVTX] is equal to "1"
     Suppress Default Visual Assist Form
     If PO szTaxRateAreaSelection [VL01] is equal to "1"
          SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
               GC Ship To [SHAN] -> mnAddressNumber [AN8]
               GC Tax Expl [EXR1] -> szTaxExplanationCode [EXR1]
               GC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
               VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
               VA frm_szSearchType [AT1] <> szSearchType [AT1]
               VA frm_CountryCodeforCanada [VVCN] -> szVertrexCanadaCountryCode [VVCN]
               UNDEFINED <- cCloseFlag [EV02]
               "0" -> cMasterFile [EV03]
               VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]
     Else
          SearchSelectVertexGeoCode(N7300006.SearchSelectVertexGeoCode)
               GC Address Number [AN8] -> mnAddressNumber [AN8]
               GC Tax Expl [EXR1] -> szTaxExplanationCode [EXR1]
               GC Tax Rate/Area [TXA1] <> szGeoCode [TXA1]
               VA frm_cGeoCodeValid [EV01] <- cGeoCodeValid [EV01]
               VA frm_szSearchType [AT1] <> szSearchType [AT1]
               VA frm_CountryCodeforCanada [VVCN] -> szVertrexCanadaCountryCode [VVCN]
               UNDEFINED <- cCloseFlag [EV02]
               "0" -> cMasterFile [EV03]
               VA frm_cVertexActive [VVTX] -> cVertexActive [EV04]
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df417-a23a-11d0-a204-0000f6728a56
=============================================
If PO cSupplierSelfService1 [SSS1] is not equal to "1"
     If PO cHeaderFirstCode [EV03] is equal to "1"
          Call App:P4310 Form:W4310B Version:SL VersionName                    
               GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
               GC Or Ty [DCTO] -> OrderType [DCTO]
               GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
               GC Change Order [SFXO] -> OrderSuffix [SFXO]
               GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     Else
          // 
          // SAR#3330822 - pass in needed parameters to make detail revisions work
          Call App:P4310 Form:W4310A Version:SL VersionName                    
               GC Order Number [DOCO] -> OrderNumber [DOCO]
               GC Or Ty [DCTO] -> OrderType [DCTO]
               GC Order Co [KCOO] -> OrderCompany [KCOO]
               "000" -> OrderSuffix [SFXO]
               GC Branch/ Plant [MCU] -> BranchPlant [MCU]
               GC Address Number [AN8] -> SupplierNumber [AN8]
               GC Ship To [SHAN] -> ShipToNumber [SHAN]
               GC Request Date [DRQJ] -> RequestedDate [DRQJ]
               GC Order Date [TRDJ] -> OrderDate [TRDJ]
               GC Promised Delivery Date [PDDJ] -> PromisedDeliveryDate [PDDJ]
               GC Cancel Date [CNDJ] -> CancelDate [CNDJ]
               UNDEFINED <> LandedCostRule [PRP5]
               UNDEFINED <> CurrencyMode [CRRM]
               UNDEFINED <> TransactionCurrencyCode [CRCD]
               UNDEFINED <> CurrencyConversionRate [CRR]
               UNDEFINED <> CompanyCurrencyCode [CRDC]
               FI cSourceOfFormCall [EV01] -> SourceOfFormCall [EV01]
               UNDEFINED <> JobNumber [JOBS]
               UNDEFINED <> ComputerID [CTID]
               UNDEFINED <> DetailFormCancelled [EV02]
               UNDEFINED <> PreviousOrderNumber [LDOC]
               UNDEFINED <> szPrevOrderType [OCTO]
               UNDEFINED <> szHoldOrdersCode [HOLD]
               GC Change Order [SFXO] -> szDetailSuffix [SFX]
               "2" -> cAddChangeOrder [EV03]
               UNDEFINED <> ActualDeliveryDate [ADDJ]
               UNDEFINED <> mnProcessID [PEID]
               UNDEFINED <> mnTransactionID [TSID]
               UNDEFINED <> mnItemNumber [ITM]
               UNDEFINED <> mnQuantity [UORG]
               UNDEFINED <> szUnitOfMeasure [UOM]
               UNDEFINED <> mnROSI [ROSI]
               UNDEFINED <> mnProjectNumber [PRJM]
               UNDEFINED <> szProjectGlClass [GLC]
               UNDEFINED <> mnTaskOrderNumber [DOCO]
               UNDEFINED <> szTaskOrderType [DCTO]
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Find records
Event: Button Clicked
Event GUID: f57df418-a23a-11d0-a204-0000f6728a56
=============================================
//
// ===============================================================
// If status code passed in is equal to blank or null, set FC statuses equal to
// '*' so that find button finds all status codes.
//
If FC NXTR:Next Status Filter-TO(wf) [NXTR] is equal to or empty <Blank>
     FC NXTR:Next Status Filter-TO(wf) [NXTR] = "*"
End If
If FC NXTR:Next Status Filter-FROM(wf) [NXTR] is equal to or empty <Blank>
     FC NXTR:Next Status Filter-FROM(wf) [NXTR] = "*"
End If
If FC LTTR:Last Status filter-TO(wf) [LTTR] is equal to or empty <Blank>
     FC LTTR:Last Status filter-TO(wf) [LTTR] = "*"
End If
If FC LTTR:Last Status Filter-FROM(wf) [LTTR] is equal to or empty <Blank>
     FC LTTR:Last Status Filter-FROM(wf) [LTTR] = "*"
End If
// ===============================================================
//   Ensure that the company filter field (Hidden) is blank when the
//    the Order Number is blank on a find.
//
If FC Order Number [DOCO] is equal to "0"
     FC KCOO:Company (wf) [KCOO] = <NULL>
End If
//
//   Hide or show Supplier Item Number based on check box
//
If FC Display Supplier Item [DSPSUB] is equal to "1"
     Show Grid Column(FC Grid, GC SupplierItem Number, )
Else
     Hide Grid Column(FC Grid, GC SupplierItem Number, )
End If
//
// Juliano Rach - 15/01/2014 - A cada "Find" o valor total está acumulando.
VA frm_TotalValorAReceber [AOPN] = "0"
//


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Add record
Event: Button Clicked
Event GUID: f57df41b-a23a-11d0-a204-0000f6728a56
=============================================
//  
If PO cHeaderFirstCode [EV03] is equal to "1"
     Call App:P4310 Form:W4310B Version:SL VersionName                    
          UNDEFINED <> DocumentOrderInvoiceE [DOCO]
          UNDEFINED <> OrderType [DCTO]
          UNDEFINED <> CompanyKeyOrderNo [KCOO]
          UNDEFINED <> OrderSuffix [SFXO]
          FC Business Unit1 [MCU] -> BranchPlant [MCU]
Else
     Call App:P4310 Form:W4310A Version:SL VersionName                    
          UNDEFINED <> OrderNumber [DOCO]
          FC Order Type [DCTO] <> OrderType [DCTO]
          UNDEFINED <> OrderCompany [KCOO]
          UNDEFINED <> OrderSuffix [SFXO]
          FC Business Unit1 [MCU] <> BranchPlant [MCU]
          UNDEFINED <> SupplierNumber [AN8]
          UNDEFINED <> ShipToNumber [SHAN]
          UNDEFINED <> RequestedDate [DRQJ]
          UNDEFINED <> OrderDate [TRDJ]
          UNDEFINED <> PromisedDeliveryDate [PDDJ]
          UNDEFINED <> CancelDate [CNDJ]
          UNDEFINED <> LandedCostRule [PRP5]
          UNDEFINED <> CurrencyMode [CRRM]
          UNDEFINED <> TransactionCurrencyCode [CRCD]
          UNDEFINED <> CurrencyConversionRate [CRR]
          UNDEFINED <> CompanyCurrencyCode [CRDC]
          UNDEFINED <> SourceOfFormCall [EV01]
          UNDEFINED <> JobNumber [JOBS]
          UNDEFINED <> ComputerID [CTID]
          FC EV01: Detail Form Cancelled (wf) [EV01] <> DetailFormCancelled [EV02]
          UNDEFINED <> PreviousOrderNumber [LDOC]
          UNDEFINED <> szPrevOrderType [OCTO]
          UNDEFINED <> szHoldOrdersCode [HOLD]
          UNDEFINED <> szDetailSuffix [SFX]
          "2" -> cAddChangeOrder [EV03]
          UNDEFINED <> ActualDeliveryDate [ADDJ]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TSID]
          UNDEFINED <> mnItemNumber [ITM]
          UNDEFINED <> mnQuantity [UORG]
          UNDEFINED <> szUnitOfMeasure [UOM]
          UNDEFINED <> mnROSI [ROSI]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szProjectGlClass [GLC]
          UNDEFINED <> mnTaskOrderNumber [DOCO]
          UNDEFINED <> szTaskOrderType [DCTO]
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Copy record
Event: Button Clicked
Event GUID: f57df42a-a23a-11d0-a204-0000f6728a56
=============================================
//  
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     UNDEFINED <> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     "2" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Additional Selection Criteria
Event: Button Clicked
Event GUID: f57e0896-a23a-11d0-a204-0000f6728a56
=============================================
// 
// SAR 5693344 Begins - Call the correct form
Call App:P43041 Form:W43041F Version:Undefined
     UNDEFINED <> mnUniqueKeyIDInternal [UKID]
     FC FROM Status Code(as entered) [LTT2] <> szStatusCodeLast [LTTR]
     FC THRU status Code(as entered) [NXT2] <> szStatusCodeNext [NXTR]
     FC FROM Date (as entered) [DTE] <> jdDateTransactionJulian [TRDJ]
     FC THRU Date (as entered) [DTE] <> jdDateReceived [RCDJ]
     FC EV01-StatusBasedOn [EV01] <> cBasedOnStatus [EV01]
     FC EV01-DateBasedOn [EV01] <> cBasedOnDate [EV02]
// SAR 5693344 Ends
// 
VA frm_VC01_CriteriaExist [VC01] = "0"
Press Button(FC PROCESS:Status Code filters)
Press Button(FC PROCESS:Date Range entered)
If VA frm_VC01_CriteriaExist [VC01] is equal to "1"
     Show Control(FC Additional Criteria Exists)
Else
     Hide Control(FC Additional Criteria Exists)
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Purchase Order Header Browse
Event: Button Clicked
Event GUID: f57df419-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310I Version: 
     UNDEFINED <> OrderType [DCTO]
     FC Business Unit1 [MCU] <> BranchPlant [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC OC x Cta x Mês
Event: Button Clicked
Event GUID: a0851361-fb30-46f9-bb29-4279a3a6d2b6
=============================================
Call App:P4310 Form:W4310J Version:Undefined


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC 
Event: Button Clicked
Event GUID: 19e08ee3-1957-4522-a9ab-6a3ea623cea2
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_CurrencyMode [CRRM]
evt_DomForAmountOpen [AOPN]
evt_ProcessID [PEID]
evt_TransactionID [TCID]
evt_ComputerID [CTID]
evt_Jobnumber [JOBS]
----------------------------------------
//   SAR 7124874 Begin
If GC Multiple Accounts [MACT] is equal to "1"
     If GC Curr [CRCD] is equal to GC Base Curr [CRDC]
          VA evt_CurrencyMode [CRRM] = "D"
          VA evt_DomForAmountOpen [AOPN] = GC Amount To Receive [AOPN]
     Else
          VA evt_CurrencyMode [CRRM] = "F"
          VA evt_DomForAmountOpen [AOPN] = GC Foreign Amount To Receive [FAP]
     End If
     // 
     GetMultipleAccountCacheKeys(N4316010.GetMultipleAccountCacheKeys)
          VA evt_ComputerID [CTID] <- szComputerID_CTID [CTID]
          VA evt_ProcessID [PEID] <- mnProcessID_PEID [PEID]
          VA evt_TransactionID [TCID] <- mnTransactionID_TCID [TCID]
          VA evt_Jobnumber [JOBS] <- mnJobnumber_JOBS [JOBS]
     // 
     If VA evt_DomForAmountOpen [AOPN] is not equal to "0"
          // SAR 8164317 Service Units enhancement
          Call App:P4316 Form:W4316A Version:Undefined
               GC Order Co [KCOO] -> szOrderCompany [KCOO]
               GC Order Number [DOCO] -> mnOrderNumber [DOCO]
               GC Or Ty [DCTO] -> szOrderType [DCTO]
               GC Change Order [SFXO] -> szOrderSuffix [SFXO]
               GC Line Number [LNID] -> mnLineNumber [LNID]
               VA evt_DomForAmountOpen [AOPN] -> mnExtendedPrice [AEXPE1]
               GC Quantity To Receive [UOPN] -> mnOrderQuantity [UORGE1]
               VA evt_CurrencyMode [CRRM] -> cCurrencyMode [CRRM]
               VA evt_Jobnumber [JOBS] -> mnJobnumber [JOBS]
               VA evt_ComputerID [CTID] -> szComputerID [CTID]
               VA evt_ProcessID [PEID] -> mnProcessID [PEID]
               VA evt_TransactionID [TCID] -> mnTransactionID [TCID]
               "I" -> cDetailActionMode [EV01]
               GC Curr [CRCD] -> szCurrencyCode [CRCD]
               GC Service Quantity [SRQTY] -> mnUnitsQuantityService [SRQTY]
     End If
End If
//   SAR 7124874 End


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Header Revision
Event: Button Clicked
Event GUID: f57df41a-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310B Version:SL VersionName                    
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Detail Revision
Event: Button Clicked
Event GUID: f57df42d-a23a-11d0-a204-0000f6728a56
=============================================
// 
// SAR#3330822 - pass in needed parameters to make detail revisions work
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     GC Address Number [AN8] -> SupplierNumber [AN8]
     GC Ship To [SHAN] -> ShipToNumber [SHAN]
     GC Request Date [DRQJ] -> RequestedDate [DRQJ]
     GC Order Date [TRDJ] -> OrderDate [TRDJ]
     GC Promised Delivery Date [PDDJ] -> PromisedDeliveryDate [PDDJ]
     GC Cancel Date [CNDJ] -> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     UNDEFINED <> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     GC Change Order [SFXO] -> szDetailSuffix [SFX]
     "2" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Add Change Order
Event: Button Clicked
Event GUID: 5ef15c6f-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 3515536 Begin;  pass GC BaseCurr to CompanyCurrencyCode
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     UNDEFINED <> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     GC Base Curr [CRDC] -> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     FC EV01: Detail Form Cancelled (wf) [EV01] <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     "1" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Copy Change Order
Event: Button Clicked
Event GUID: 5ef15c6c-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 4205951 Begins 
Call App:P4310 Form:W4310A Version: 
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     UNDEFINED <> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     GC Base Curr [CRDC] -> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     GC Change Order [SFXO] -> szDetailSuffix [SFX]
     "3" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]
// SAR 4205951 Ends


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC View All Change Orders
Event: Button Clicked
Event GUID: 5ef15c70-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 4204078 Begins 
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     UNDEFINED <> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     GC Base Curr [CRDC] -> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     "2" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]
// SAR 4204078 Ends


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Change Order Summary
Event: Button Clicked
Event GUID: 5ef15c73-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P430114 Form:W430114A Version: 
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> OrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cSupplierSelfService1 [SSS1]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Summary
Event: Button Clicked
Event GUID: b9ec83b0-2d70-11d3-9756-0000393c050e
=============================================
Call App:P430114 Form:W430114A Version: 
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     PO cSupplierSelfService1 [SSS1] -> cSupplierSelfService1 [SSS1]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Print Order
Event: Button Clicked
Event GUID: 683a48c2-ee5e-11d1-8dcc-0000f6782893
=============================================
// ========================================================
// SAR 2054096, add PO Print on Demand exit in more places.
//
//
// Issue 8063 - Valkiria - RBS - 20/05/05
//
If PO cImprimeR5543501S [EV01] is equal to "1"
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "RBS43001"
     End If
     Call UBE:R5543501S Version:PO szPOPrintOnDemandVersion
          GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          GC Or Ty [DCTO] -> Ordertype [DCTO]
          GC Order Co [KCOO] -> Companykeyorderno [KCOO]
          GC Change Order [SFXO] -> Ordersuffix [SFXO]
          UNDEFINED <> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
Else
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "XJDE0003"
     End If
     ! Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
     !      GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     !      GC Or Ty [DCTO] -> Ordertype [DCTO]
     !      GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     !      GC Change Order [SFXO] -> Ordersuffix [SFXO]
     !      "1" -> Modeprocessing [MODE]
     !      UNDEFINED <> Numberchangeorder [CORD]
     // SAR 4801999 
     Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
          GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          GC Or Ty [DCTO] -> Ordertype [DCTO]
          GC Order Co [KCOO] -> Companykeyorderno [KCOO]
          UNDEFINED <> Ordersuffix [SFXO]
          "1" -> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
     // SAR 4801999 
End If
//
// End Issue 8063


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Revisions Summary
Event: Button Clicked
Event GUID: f57e0b59-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4319 Form:W4319A Version:PO InqChangeOrderVersion
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     "000" -> OrderSuffix [SFXO]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> Addressnumber [AN8]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Recap
Event: Button Clicked
Event GUID: 5ef15c6e-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4310 Form:W4310C Version: 
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     GC Curr [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Financial Status Inquiry
Event: Button Clicked
Event GUID: 5ef15c6d-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P44200 Form:W44200A Version:PO szFinancialStatusInquiry
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     GC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szDescription [DESC]
     GC Curr [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Landed Cost Rules
Event: Button Clicked
Event GUID: 5ef15c74-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43291 Form:W43291A Version: 
     UNDEFINED <> SystemCode [SY]
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Ordersuffix [SFXO]
     "I" -> Modeprocessing [MODE]
     UNDEFINED <> DocumentNumber [DOC]
     UNDEFINED <> DocumentType [DCT]
     UNDEFINED <> DocKeyCompany [KCO]
     UNDEFINED <> BatchNumber [ICU]
     UNDEFINED <> BatchType [ICUT]
     UNDEFINED <> DtForGLandVouch [DGL]
     UNDEFINED <> CurrencyMode [CRRM]
     GC Curr [CRCD] -> CurrencyCode [CRCD]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> GLSummaryMode [SORD]
     UNDEFINED <> GLLineNumber [LNID]
     UNDEFINED <> ReceiptJobNo [AN8O]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Address Information
Event: Button Clicked
Event GUID: f57df42f-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4006 Form:W4006B Version:Undefined [Modeless]
     GC Address Number [AN8] <> AddressNumber [AN8]
     GC Ship To [SHAN] <> ShipToNumber [SHAN]
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> OrderCompany [KCOO]
     "P" <> CalledFromSales_S_OrPurch_P [EV01]
     GC Order Date [TRDJ] -> jdDateTransactionJulian [TRDJ]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Purchasing Ledger
Event: Button Clicked
Event GUID: f57e0b5b-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P43041 Form:W43041A Version:PO PurchasingLedgerVersion
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> OrderCompany [KCOO]
     UNDEFINED <> RelatedOrderNumber [RORN]
     UNDEFINED <> RelatedOrderType [RCTO]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> RelatedOrderCompany [RKCO]
     UNDEFINED <> Acctnoinputmode [ANI]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> Itemnounknownformat [UITM]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Supplier Analysis
Event: Button Clicked
Event GUID: 5ef15c79-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43230 Form:W43230L Version:PO szSupplierAnalysisVersion
     UNDEFINED <> 1qual2del3cost [EV01]
     GC Address Number [AN8] -> Addressnumber [AN8]
     GC Short Item No [ITM] -> Identifiershortitem [ITM]
     UNDEFINED <> Costcenter [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Supply/Demand Inquiry
Event: Button Clicked
Event GUID: 5ef15c72-e064-11d1-9ac9-00600832fe19
=============================================
// SAR#6553204 Begin
Call App:P4021 Form:W4021B Version:PO szSupplyDemandInquiry
     GC Branch/ Plant [MCU] -> InputBranch [MCU]
     GC 2nd Item Number [LITM] -> InputPrimaryItem [UITM]
// SAR#6553204 End


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Customer Service Inquiry
Event: Button Clicked
Event GUID: 5ef15c6a-e064-11d1-9ac9-00600832fe19
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnRelatedOrderNumber [DOCO]
----------------------------------------
ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
     GC Related Number [RORN] -> szGenericString [DSC1]
     VA evt_mnRelatedOrderNumber [DOCO] <- mnNumericValue [ITM]
     UNDEFINED <> cErrorCode [ERRC]
Call App:P4210 Form:W4210E Version: 
     VA evt_mnRelatedOrderNumber [DOCO] -> Documentorderinvoicee [DOCO]
     GC Related Type [RCTO] -> Ordertype [DCTO]
     GC Related Co [RKCO] -> Companykeyorderno [KCOO]
     UNDEFINED <> Reference1 [VR01]
     UNDEFINED <> Itemnounknownformat [UITM]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> mnAddressNumber [AN8]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Regional Info
Event: Button Clicked
Event GUID: 9e83b387-6034-43e4-8761-0fada60f5a2d
=============================================
// Begin SAR 8429821
If SL CountryCode is not equal to <NULL>
And SL CountryCode is not equal to <Blank>
     P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
          "P4310" -> szCallingAppl [PID]
          SL VersionName -> szCallingVers [VERS]
          "W4310G" -> szCallingForm [FID]
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
          "XIT" -> szFormAction [FATN]
End If
// End SAR 8429821


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Item Availability
Event: Button Clicked
Event GUID: 5ef15c69-e064-11d1-9ac9-00600832fe19
=============================================
If PO cSupplierSelfService1 [SSS1] is equal to "1"
     Call App:P41201 Form:W41201A Version: 
          GC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Short Item No [ITM] -> mnIdentifierShortItem [ITM]
Else
     Call App:P41202 Form:W41202A Version:PO InqItemAvailVersion
          GC Short Item No [ITM] -> Identifiershortitem [ITM]
          GC Branch/ Plant [MCU] -> Costcenter [MCU]
          UNDEFINED <> mnAddressNumber [AN8]
          UNDEFINED <> mnUnitsTransactionQty [UORG]
          UNDEFINED <> jdDateTransactionJulian [TRDJ]
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit To Purchase Receipts Inquiry
Event: Button Clicked
Event GUID: f57e0b5a-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P43214 Form:W43214A Version:PO InqOpenReceiptsVersion
     UNDEFINED <> MatchType [MATC]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> LineNumber [LNID]
     UNDEFINED <> NoOfLinesOnOrder [NLIN]
     UNDEFINED <> VoucherDocumentNumber [DOC]
     UNDEFINED <> ItemNoUnknownFormat [UITM]
     UNDEFINED <> VoucherDocumentType [DCT]
     UNDEFINED <> VoucherDocumentCompany [KCO]
     UNDEFINED <> szOrderSuffix [SFXO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Vouchered Receipts
Event: Button Clicked
Event GUID: 5ef15c77-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43214 Form:W43214A Version:PO InqOpenReceiptsVersion
     "2" -> MatchType [MATC]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> LineNumber [LNID]
     UNDEFINED <> NoOfLinesOnOrder [NLIN]
     UNDEFINED <> VoucherDocumentNumber [DOC]
     UNDEFINED <> ItemNoUnknownFormat [UITM]
     UNDEFINED <> VoucherDocumentType [DCT]
     UNDEFINED <> VoucherDocumentCompany [KCO]
     UNDEFINED <> szOrderSuffix [SFXO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Receipt Routing
Event: Button Clicked
Event GUID: 5ef15c68-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43250 Form:W43250K Version:PO InqReceiptRoutingVersion
     UNDEFINED <> MatchType [MATC]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> LineNumber [LNID]
     UNDEFINED <> NoOfLinesOnOrder [NLIN]
     UNDEFINED <> DocVoucherInvoiceE [DOC]
     UNDEFINED <> Identifiershortitem [ITM]
     UNDEFINED <> szOrderSuffix [SFXO]
     UNDEFINED <> szUnitOfMeasureAsInput [UOM]
     UNDEFINED <> mnOperationSequence [OPRS]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Quote Response Entry
Event: Button Clicked
Event GUID: 5ef15c78-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4334 Form:W4334B Version:Undefined
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     FC Order Type [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] -> OrderSuffix [SFXO]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Quote Price Breaks
Event: Button Clicked
Event GUID: 5ef15c7a-e064-11d1-9ac9-00600832fe19
=============================================
// 
//   SAR 7124874 Begin
If GC Multiple Accounts [MACT] is equal to "1"
     GC Account Number [ANI] = GC Original Account Number [ANI]
End If
//   SAR 7124874 End
// 
Call App:P4331 Form:W4331A Version:Undefined
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Line Number [LNID] -> LineNumber [LNID]
     "0" -> AddressNumber [AN8]
     GC Quantidade Pedida [UORG] -> UnitsTransactionQty [UORG]
     <Blank> -> ProgramCallFrom [EV01]
     GC Short Item No [ITM] -> ShortItemNumber [ITM]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     GC Cancel Date [CNDJ] -> CancelDate [CNDJ]
     GC Promised Delivery Date [PDDJ] -> PromisedDate [PDDJ]
     GC Account Number [ANI] -> AccountNumber [ANI]
     GC Curr [CRCD] -> CurrencyCode [CRCD]
     GC UM  [UOM] -> UnitOfMeasure [UM]
     GC 2nd Item Number [LITM] -> LongItemNumber [LITM]
     GC 3rd Item Number [AITM] -> ThirdItemNumber [AITM]
     UNDEFINED <> UnitPrice [PRRC]
     UNDEFINED <> szOrderSuffix [SFXO]
     UNDEFINED <> cShowReleaseQty [EV01]
     UNDEFINED <> cIsLineClosed [YN]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Exit to Approval Review
Event: Button Clicked
Event GUID: 5ef15c71-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P43081 Form:W43081B Version:PO InqApprovalReviewVersion
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     "000" -> OrderSuffix [SFXO]
     UNDEFINED <> LineNumber [LNID]
     UNDEFINED <> DetailChangesOnly [EV01]
     UNDEFINED <> StatusApproval [ASTS]
     UNDEFINED <> Everesteventpoint02 [EV02]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Attachments
Event: Button Clicked
Event GUID: f57e0c21-a23a-11d0-a204-0000f6728a56
=============================================
Media Object Structures(GT4301, <Default Media Object>, <Edit>, <First Text Item>, FC EV01:Generic Text Row (wf), GC OrderNumber, GC OrTy, GC OrderCo, GC ChangeOrder)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Line Attachments
Event: Button Clicked
Event GUID: f57df42e-a23a-11d0-a204-0000f6728a56
=============================================
// 
//     Generic Text exit
// 
FC EV01:Generic Text Row (wf) [EV01] = <Blank>
Media Object Structures(GT4311, <Default Media Object>, <Edit>, <First Text Item>, FC EV01:Generic Text Row (wf), GC OrderNumber, GC OrderCo, GC OrTy, GC ChangeOrder, GC LineNumber)
If FC EV01:Generic Text Row (wf) [EV01] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
Else
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <No>)
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Log Details
Event: Button Clicked
Event GUID: 5ef15c6b-e064-11d1-9ac9-00600832fe19
=============================================
// 
// ======================================================= 
// SAR 6585679 Begin. If the VF is set to use New Logs Application - P4305 and
// the processing option is set to invoke logs automatically, Call P4305
// ---------------------------------------------------------------------------
! Call App:P4303 Form:W4303A Version:Undefined
!      GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
!      GC Or Ty [DCTO] -> szOrderType [DCTO]
!      GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
!      <Blank> -> cCallType [EV01]
// 
If VA frm_cLogsAtLevelsOn_EV01 [EV01] is equal to "1"
     Call App:P4305 Form:W4305A Version:PO szLogsEntryVersion
          GC Order Number [DOCO] -> mnDocument_Order_No_DOCO [DOCO]
          GC Or Ty [DCTO] -> szOrder_F4305_Type_DCTO [DCTO]
          GC Order Co [KCOO] -> szOrder_Company_Order_KCOO [KCOO]
          "000" -> szOrder_F4305_Suffix_OSFX [SFXO]
          "01" -> szLogHierarchyLevel_LOGH [LOGH]
          "E" -> cCallType_EV01 [EV01]
          PO cJobProject [EV01] -> cP4310PO_JobProject_EV01 [EV01]
          "2" -> cCallMode_EV01 [EV01]
Else
     Call App:P4303 Form:W4303A Version:Undefined
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
          <Blank> -> cCallType [EV01]
End If
// 
// SAR 6585679 End
// ======================================================= 


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Order Detail Information
Event: Button Clicked
Event GUID: f57df428-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P430301 Form:W430301C Version:  [Modeless]
     GC Order Number [DOCO] <> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> CompanyKeyOrderNo [KCOO]
     GC Change Order [SFXO] <> OrderSuffix [SFXO]
     GC Line Number [LNID] <> LineNumber [LNID]
     UNDEFINED <> Currencymode [CRRM]
     PO szProtectPriceFlag [VL09] <> ProtectPriceFlag [VL09]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Work With Shipments
Event: Button Clicked
Event GUID: 42dc3c01-4aa9-11d3-b031-00105a1bfee6
=============================================
// 
// *****     JB5408726     SAR #3059884     08/04/99     BEGIN     *****
If GC Shipment Number [SHPN] is greater than "0"
     Call App:P4915 Form:W4915B Version:PO szInboundTransportationVersion
          GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
          UNDEFINED <> mnRoutingStepNumber [RSSN]
          UNDEFINED <> szBusiness_Unit_F4215 [MCU]
          UNDEFINED <> mnAddress_Number__Ship_To_F421 [SHAN]
          UNDEFINED <> mnAddress_Number_F4215 [AN8]
          UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
          UNDEFINED <> szOrderType [DCTO]
          UNDEFINED <> mnTransportationJobNumber [JOBS]
End If
// *****     JB5408726     SAR #3059884     08/04/99     END     *****
// 


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Configured Related Order
Event: Button Clicked
Event GUID: d3c6fa91-eaa8-4592-a621-0f2aaf1a3532
=============================================
// Begin SAR 5133689
If VA frm_StockingType [STKT] is equal to "C"
     Call App:P3201 Form:W3201A Version:Undefined
          UNDEFINED <> mnConfigurationIDNumber [CFGID]
          UNDEFINED <> mnComponentIDNumber [CFGCID]
          "43" -> szProductCode [SY]
          GC Order Co [KCOO] -> szOrder_Company_Order_Numb [KCOO]
          GC Order Number [DOCO] -> mnDocument_Order_No_Invoic [DOCO]
          GC Or Ty [DCTO] -> szOrder_Type_F3201 [DCTO]
          GC Change Order [SFXO] -> szOrder_Suffix_F3201 [SFXO]
          GC Line Number [LNID] -> mnLine_Number_F3201 [LNID]
End If
// End SAR 5133689


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Work With Configuration
Event: Button Clicked
Event GUID: 8e84e78e-c7ad-4826-b7f4-1f6a736047a8
=============================================
// SAR 8260982 - Passed correct Order number, Order type and Order Company
// values to get the Configuration ID
GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
     "43" -> szSystemCode [SY]
     GC Order Number [DOCO] -> mnOrderNumber [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKey [KCOO]
     GC Line Number [LNID] -> mnLineNumber [LNID]
     GC Change Order [SFXO] -> szOrderSuffix [SFXO]
     "1" -> cSuppressErrorMessage [SUPPS]
     VA frm_ConfigErrorValue [DTAI] <- szErrorMessageID [DTAI]
     VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
     VA frm_ComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
Call App:P32983 Form:W32983B Version:Undefined
     VA frm_ConfigurationIDNumber [CFGID] <> mnConfigurationIDNumber [CFGID]
     UNDEFINED <> mnComponentIDNumber [CFGCID]
     UNDEFINED <> mnParentSegmentNumber [PEL]
     UNDEFINED <> szSegmentValue [SGVL]
     UNDEFINED <> mnItemNumberShortKit [KIT]
     UNDEFINED <> szUniqueConfigurationID [CFGSID]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Configured Generic Text
Event: Button Clicked
Event GUID: 74f213a6-f18c-4da3-81ad-373322ae34b8
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_BlankStatus [DTAI]
----------------------------------------
// Begin SAR 5133689
If VA frm_StockingType [STKT] is equal to "C"
     GetMasterConfigurationIDNo(N3201410.GetMasterConfigurationIDNo)
          "43" -> szSystemCode [SY]
          GC Order Number [DOCO] -> mnOrderNumber [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKey [KCOO]
          GC Line Number [LNID] -> mnLineNumber [LNID]
          GC Change Order [SFXO] -> szOrderSuffix [SFXO]
          "1" -> cSuppressErrorMessage [SUPPS]
          VA frm_ConfigErrorValue [DTAI] <- szErrorMessageID [DTAI]
          VA frm_ConfigurationIDNumber [CFGID] <- mnConfigurationIDNumber [CFGID]
          VA frm_ComponentIDNumber [CFGCID] <- mnComponentIDNumber [CFGCID]
          UNDEFINED <> szProgramId [PID]
     VA evt_BlankStatus [DTAI] = <Blank>
     If VA frm_ConfigErrorValue [DTAI] is equal to <Blank>
          Media Object Structures(GT3201, <Default Media Object>, <Display>, <First Text Item>, VA evt_BlankStatus, VA frm_ConfigurationIDNumber, VA frm_ComponentIDNumber)
     End If
End If
// End SAR 5133689


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Shipment Status
Event: Button Clicked
Event GUID: a6025268-8deb-45e8-aff1-e4e1b4b605a1
=============================================
// 
// *****     JB5408726     SAR #3059884     08/04/99     BEGIN     *****
If GC Shipment Number [SHPN] is greater than "0"
     Call App:P4947 Form:W4947A Version:PO szInboundTransportationVersion
          GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
          UNDEFINED <> mnRoutingStepNumber [RSSN]
          UNDEFINED <> szBusinessUnit [MCU]
          UNDEFINED <> mnShipTo [SHAN]
          UNDEFINED <> mnSoldTo [AN8]
          UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
          UNDEFINED <> szOrderType [DCTO]
End If
// *****     JB5408726     SAR #3059884     08/04/99     END     *****
// 


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: HC Style Purchase Order Matrix Entry Revisions
Event: Button Clicked
Event GUID: 3125bd10-fdb7-47d7-8d8b-95a09d9d66b5
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szUserId_USER [USER]
evt_mnJobNumber_JOBS [JOBS]
----------------------------------------
// SAR 8956903 - Apparel Management
VA evt_szUserId_USER [USER] = SL UserID
If PO szStyleMatrixEntryVersion [VERS] is equal to or empty <Blank>
     PO szStyleMatrixEntryVersion [VERS] = "ZJDE0003"
End If
MatrixSeizureForShipmentConf(BCW31.MatrixSeizureForShipmentConf)
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]
     "0" -> mnPickSlipNumber [PSN]
     <Blank> -> szCommodityCode [CDCD]
     <Blank> -> szReference1 [VR01]
     <Blank> -> szStatusCodeNext [NXTR]
     <Blank> -> szStatusCodeLast [LTTR]
     VA evt_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] <> szUserId [USER]
     "F4311" -> szC9FILE_File [C9FILE]
Call App:PCW10 Form:WCW10B Version:PO szStyleMatrixEntryVersion
     VA evt_mnJobNumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] -> szUserId [USER]
     "3" -> MatrixType [EV01]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     "0" -> QtyControle [UORG]
     "F4311" -> szC9FILE_File [C9FILE]
     "EP4310" -> szCallingAPPLProgramId [PID]
     SL VersionName -> szPurchaseOrderPOVersion [VERS]
     GC Address Number [AN8] -> mnSoldTo [AN8]
     GC Ship To [SHAN] -> mnShipTo [AN8]
     GC Order Date [TRDJ] -> jdOrderDate [JDATE]
FCW20.Delete  [Index 1: Primary]
     VA evt_mnJobNumber_JOBS [JOBS] = TK Job Number [JOBS]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Related PO/SO/WO Number
Event: Control Exited/Changed-Inline
Event GUID: 5ef15c76-e064-11d1-9ac9-00600832fe19
=============================================
If FC Related PO/SO/WO Number [RORN] is not equal to <Blank>
And FC Related PO/SO/WO Number [RORN] is not equal to "*"
And FC Related PO/SO/WO Number [RORN] is not equal to <NULL>
     FC Related PO/SO/WO Number [RORN] = lpad([FC Related PO/SO/WO Number [RORN]], "0", "8")
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Original Order Number
Event: Control Exited/Changed-Inline
Event GUID: 5ef15c75-e064-11d1-9ac9-00600832fe19
=============================================
If FC Original Order Number [OORN] is not equal to <Blank>
And FC Original Order Number [OORN] is not equal to "*"
And FC Original Order Number [OORN] is not equal to <NULL>
     FC Original Order Number [OORN] = lpad([FC Original Order Number [OORN]], "0", "8")
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC AsIfCurrency
Event: Control Exited/Changed-Asynch
Event GUID: f9037743-36db-11d2-a128-00104bc6f551
=============================================
If FC AsIfCurrency [CRCD] is equal to or empty <Blank>
     // Begin SAR # 8925071
     ! Hide Grid Row(FC Grid, GC As IfDomestic)
     Hide Grid Column(FC Grid, GC As IfCurrency)
     // End SAR # 8925071
Else
     Show Grid Column(FC Grid, GC As IfDomestic)
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Item Number
Event: Control Exited/Changed-Inline
Event GUID: f57df171-a23a-11d0-a204-0000f6728a56
=============================================
If FC Item Number [UITM] is equal to or empty <Blank>
Or FC Item Number [UITM] is equal to "*"
     FC Item Number [UITM] = "*"
     FC ITEM NUMBER [DL01] = <Blank>
     FC ITM:Item Number-Short(wf) [ITM] = "NULL"
Else
     // ===========================================================
     // Supplier Self Service
     // ======================================================
     If PO cSupplierSelfService1 [SSS1] is equal to "1"
          VA frm_Date_DTE [DTE] = date_today()
          FC Item Number [UITM] = concat([VA frm_SymbolSupp_SYM5 [SYM5]], [FC Item Number [UITM]])
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC Item Number [UITM] -> szPrimaryItemNumber [UITM]
               UNDEFINED <> szBranchPlant [MCU]
               UNDEFINED <> szDescription [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> idF4101LongRowPtr [GENLNG]
               FC ITM:Item Number-Short(wf) [ITM] <- mnShortItemNumber [ITM]
               UNDEFINED <> cErrorcode [ERRC]
               UNDEFINED <> szLanguagepreference [LNGP]
               VA frm_AddressNumber_AN8 [AN8] -> mnAddressnumber [AN8]
               UNDEFINED <> szSystemcode [SY]
               UNDEFINED <> szLongItemNumber [LITM]
               UNDEFINED <> szThirdItemNumber [AITM]
               UNDEFINED <> szItemFlashMsg [IFLA]
               "1" -> cReturnPtr [EV01]
               "1" -> cSuppressErrorMsg [EV02]
               VA frm_ErrorMessage_DTAI [DTAI] <- szErrorMsgID [DTAI]
               "1" -> cCallType [EV01]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               UNDEFINED <> szBaseLngDesc1 [DSC1]
               UNDEFINED <> szBaseLngDesc2 [DSC2]
               "2" -> cCrossRefMode [MODE]
               UNDEFINED <> cLngPrefType [EV01]
               VA frm_Date_DTE [DTE] -> jdExpirationDate [EXDJ]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
          If VA frm_ErrorMessage_DTAI [DTAI] is not equal to <Blank>
          And VA frm_ErrorMessage_DTAI [DTAI] is not equal to <NULL>
          And VA frm_ErrorMessage_DTAI [DTAI] is not equal to "0"
               FC Item Number [UITM] = substr([FC Item Number [UITM]], "1", "26")
               VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
                    FC Item Number [UITM] -> szPrimaryItemNumber [UITM]
                    FC Business Unit1 [MCU] -> szBranchPlant [MCU]
                    FC ITEM NUMBER [DL01] <- szDescription [DSC1]
                    UNDEFINED <> szDescription2 [DSC2]
                    UNDEFINED <> cSymbolidentifier [SYMID]
                    UNDEFINED <> idF4101LongRowPtr [GENLNG]
                    FC ITM:Item Number-Short(wf) [ITM] <- mnShortItemNumber [ITM]
                    UNDEFINED <> cErrorcode [ERRC]
                    UNDEFINED <> szLanguagepreference [LNGP]
                    UNDEFINED <> mnAddressnumber [AN8]
                    UNDEFINED <> szSystemcode [SY]
                    UNDEFINED <> szLongItemNumber [LITM]
                    UNDEFINED <> szThirdItemNumber [AITM]
                    UNDEFINED <> szItemFlashMsg [IFLA]
                    "0" -> cReturnPtr [EV01]
                    UNDEFINED <> cSuppressErrorMsg [EV02]
                    VA frm_ErrorMsgItemNum_DTAI [DTAI] <- szErrorMsgID [DTAI]
                    "1" -> cCallType [EV01]
                    UNDEFINED <> idPtrToF41001Record [GENLNG]
                    UNDEFINED <> szBaseLngDesc1 [DSC1]
                    UNDEFINED <> szBaseLngDesc2 [DSC2]
                    UNDEFINED <> cCrossRefMode [MODE]
                    UNDEFINED <> cLngPrefType [EV01]
                    UNDEFINED <> jdExpirationDate [EXDJ]
                    UNDEFINED <> szStandardUOMConversion [TFLA]
                    UNDEFINED <> szTemplate [TMPL]
                    UNDEFINED <> szSegment1 [SEG1]
                    UNDEFINED <> szSegment2 [SEG2]
                    UNDEFINED <> szSegment3 [SEG3]
                    UNDEFINED <> szSegment4 [SEG4]
                    UNDEFINED <> szSegment5 [SEG5]
                    UNDEFINED <> szSegment6 [SEG6]
                    UNDEFINED <> szSegment7 [SEG7]
                    UNDEFINED <> szSegment8 [SEG8]
                    UNDEFINED <> szSegment9 [SEG9]
                    UNDEFINED <> szSegment10 [SEG0]
                    UNDEFINED <> cMatrixControlled [MIC]
               If VA frm_ErrorMsgItemNum_DTAI [DTAI] is not equal to <Blank>
               And VA frm_ErrorMsgItemNum_DTAI [DTAI] is not equal to "0"
                    Set Control Error(FC Item Number, VA frm_ErrorMessage_DTAI)
               End If
               FC Item Number [UITM] = concat([VA frm_SymbolSupp_SYM5 [SYM5]], [FC Item Number [UITM]])
          End If
          FC Item Number [UITM] = substr([FC Item Number [UITM]], "1", "26")
     Else
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC Item Number [UITM] -> szPrimaryItemNumber [UITM]
               FC Business Unit1 [MCU] -> szBranchPlant [MCU]
               FC ITEM NUMBER [DL01] <- szDescription [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> idF4101LongRowPtr [GENLNG]
               FC ITM:Item Number-Short(wf) [ITM] <- mnShortItemNumber [ITM]
               UNDEFINED <> cErrorcode [ERRC]
               UNDEFINED <> szLanguagepreference [LNGP]
               UNDEFINED <> mnAddressnumber [AN8]
               UNDEFINED <> szSystemcode [SY]
               UNDEFINED <> szLongItemNumber [LITM]
               UNDEFINED <> szThirdItemNumber [AITM]
               UNDEFINED <> szItemFlashMsg [IFLA]
               "0" -> cReturnPtr [EV01]
               UNDEFINED <> cSuppressErrorMsg [EV02]
               UNDEFINED <> szErrorMsgID [DTAI]
               "1" -> cCallType [EV01]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               UNDEFINED <> szBaseLngDesc1 [DSC1]
               UNDEFINED <> szBaseLngDesc2 [DSC2]
               UNDEFINED <> cCrossRefMode [MODE]
               UNDEFINED <> cLngPrefType [EV01]
               UNDEFINED <> jdExpirationDate [EXDJ]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Account Number
Event: Control Exited/Changed-Inline
Event GUID: b1c40811-ac60-49ae-aba9-87972d7a0d75
=============================================
If FC Account Number [ANI] is equal to <Blank>
Or FC Account Number [ANI] is equal to "*"
     FC Account Number [ANI] = "*"
     FC ACCOUNT NUMBER [DL01] = <Blank>
     FC AID:Account ID(wf) [AID] = "*"
Else
     // Changed parameters being passed into business function.  Passed a 1 into
     // format account number, and made the arrow go both ways on FC Account Number
     // fix formatting issues.  SAR 1784193
     // 
     // SAR 3794387  AW590316  03/01/00  Format account number
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          FC Account Number [ANI] <> szAccountNumber [ANI]
          FC AID:Account ID(wf) [AID] <- szAccountID [AID]
          FC ACCOUNT NUMBER [DL01] <- szAccountDescription [DL01]
          "7" -> cBasedOnFormat [EV01]
          "1" -> cFormatAccountNumberAs [EV02]
          "1" -> cIncludeAccountSymbol [EV03]
     // 
     // SAR 6782824 Begin - Checking to see if the account number entered was
     // valid.  If so, do nothing and let the search function as designed.  If no
     // account number is entered, loading the hidden AID field with a bogus value
     // so nothing is returned.
     If FC AID:Account ID(wf) [AID] is equal to <Blank>
     Or FC AID:Account ID(wf) [AID] is equal to <NULL>
          FC AID:Account ID(wf) [AID] = "1"
     End If
     // SAR 6782824 End
     // 
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Subledger Type
Event: Control is Entered
Event GUID: 2c2abb22-08ac-11d3-9744-00003910070e
=============================================
// 
// SAR#3080341 - LK 5/12/99 Subledger needed to be formatted for Find
If FC Subledger [SBL] is equal to "*"
Or FC Subledger [SBL] is equal to or empty <Blank>
     FC Subledger Type [SBLT] = <NULL>
     // 
End If

=============================================
Form: Work With Order Details - W4310G
Object: FC Subledger Type
Event: Control is Exited
Event GUID: 2c2abb23-08ac-11d3-9744-00003910070e
=============================================
// 
// SAR#3080341 - LK 5/12/99 Subledger needed to be formatted for Find
If FC Subledger Type [SBLT] is equal to or empty <Blank>
     // SAR 8832055 - FC subledger Type is set to * then the FC subledger should be
     // set to *
     Clear Control Error(FC Subledger [SBL])
     FC Subledger [SBL] = "*"
     FormatSubledger(B0000021.FormatSubledger)
          FC Subledger [SBL] <> szSubledger [SBL]
          FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
End If

=============================================
Form: Work With Order Details - W4310G
Object: FC Subledger Type
Event: Control Exited/Changed-Inline
Event GUID: 2c2abb24-08ac-11d3-9744-00003910070e
=============================================
// 
// SAR#3080341 - LK 5/12/99 Subledger needed to be formatted for Find
If FC Subledger [SBL] is equal to "*"
Or FC Subledger [SBL] is equal to or empty <Blank>
     VA frm_szBlankSubledger_SBL [SBL] = <Blank>
Else
     VA frm_szBlankSubledger_SBL [SBL] = FC Subledger [SBL]
End If
Clear Control Error(FC Subledger [SBL])
FormatSubledger(B0000021.FormatSubledger)
     VA frm_szBlankSubledger_SBL [SBL] <> szSubledger [SBL]
     FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
// SAR 8832055 - FC subledger was not included in the BSFN call for the else
// part and therefore Error was set for the whole form. Thus when the error
// was cleared the FORM error was not cleared.
FC Subledger [SBL] = VA frm_szBlankSubledger_SBL [SBL]
! If FC Subledger [SBL] is not equal to "*"
! And FC Subledger [SBL] is not equal to <NULL>
     ! FC Subledger [SBL] = VA frm_szBlankSubledger_SBL [SBL]
     ValidateSubledger(X0909.ValidateSubledger)
          FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
          FC Subledger [SBL] -> szSubledger [SBL]
          FC Business Unit1 [MCU] -> szCostCenter [MCU]
          UNDEFINED <> szDescription [DL01]
          UNDEFINED <> cInquiryFlag [EV02]
! Else
     ! ValidateSubledger(X0909.ValidateSubledger)
     !      FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
     !      VA frm_szBlankSubledger_SBL [SBL] -> szSubledger [SBL]
     !      FC Business Unit1 [MCU] -> szCostCenter [MCU]
! End If
// 
// 
// ***************************************************************************
// SAR 6805803 - If subledger type has a search and select form, override
// visual assist to dummy search and select to dispaly visual assist
// flashlight on subledger field.  If subledger type does not have a search
// and select form, disable visual assist on subledger field.
// ***************************************************************************
If FC Subledger Type [SBLT] is equal to ("A","C","E","F","G","I","L","W")
     Set Data Dictionary Overrides(FC Subledger,  <Data Dictionary Overrides>)
Else
     Set Data Dictionary Overrides(FC Subledger,  <Data Dictionary Overrides>)
End If
// ***************************************************************************


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Subledger
Event: Control Exited/Changed-Inline
Event GUID: 2c2abb21-08ac-11d3-9744-00003910070e
=============================================
//
// SAR#3080341 - LK 5/12/99 Subledger needed to be formatted for Find
If FC Subledger [SBL] is not equal to "*"
And FC Subledger [SBL] is not equal to <Blank>
And FC Subledger [SBL] is not equal to <Blank>
     If FC Subledger Type [SBLT] is not equal to <Blank>
     And FC Subledger Type [SBLT] is not equal to <NULL>
          Clear Control Error(FC Subledger [SBL])
          FormatSubledger(B0000021.FormatSubledger)
               FC Subledger [SBL] <> szSubledger [SBL]
               FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
          // Begin SAR # 8959507 – Passed value 1 to cInquiryFlag
          ValidateSubledger(X0909.ValidateSubledger)
               FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
               FC Subledger [SBL] -> szSubledger [SBL]
               FC Business Unit1 [MCU] -> szCostCenter [MCU]
               "1" -> cInquiryFlag [EV02]
          // End SAR # 8959507
     End If
Else
     FC Subledger Type [SBLT] = <Blank>
End If

=============================================
Form: Work With Order Details - W4310G
Object: FC Subledger
Event: Visual Assist Button Clicked
Event GUID: 477e7322-9cdf-4b24-b1bf-fd6aa380c1df
=============================================
// ***************************************************************************
// SAR 6805803 - Suppress dummy visual assist search and select form assigned
// in subledger type event rules.
// ***************************************************************************
Suppress Default Visual Assist Form
// ***************************************************************************
// SAR 6805803 - Call the search and select form that corresponds to subledger
// type.
// ***************************************************************************
GetSubledgerValue(N0900010.GetSubledgerValue)
     FC Subledger Type [SBLT] -> cSubledgerType [SBLT]
     FC Subledger [SBL] <> szSubledger [SBL]
// ***************************************************************************


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Commodity Code
Event: Control Exited/Changed-Inline
Event GUID: acee745d-c660-4c1a-a8be-b51cbc71fef6
=============================================
SetCommodityCodeFilterFields(B43E0241.SetCommodityCodeFilterFields)
     FC Commodity Code [CMDCDE] <> szCommodityCode_CMDCDE [CMDCDE]
     FC Commodity Code 01 [CMDCDE01] <> szCommodityCode01_CMDCDE01 [CMDCDE01]
     FC Commodity Code 02 [CMDCDE02] <> szCommodityCode02_CMDCDE02 [CMDCDE02]
     FC Commodity Code 03 [CMDCDE03] <> szCommodityCode03_CMDCDE03 [CMDCDE03]


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC Grid
Event: Double Click on Row Header
Event GUID: f57df416-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(HC &Line Attachments)

=============================================
Form: Work With Order Details - W4310G
Object: FC Grid
Event: Row is Entered
Event GUID: bb6f3b63-addb-48a4-89af-d945eba1bbc8
=============================================
//  SAR 7310431 - Add if condition
If GC Short Item No [ITM] is not equal to "0"
And GC Short Item No [ITM] is not equal to <NULL>
     GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
          GC Branch/ Plant [MCU] -> szBranch [MCU]
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          VA frm_StockingType [STKT] <- cStockingType [STKT]
          UNDEFINED <> cIssueTypeCode [ITC]
          UNDEFINED <> cPlanningCode [MPST]
          UNDEFINED <> mnPlanningFence [MTF1]
          UNDEFINED <> mnFreezeFence [MTF2]
          UNDEFINED <> mnMessageDisplayFence [MTF3]
          UNDEFINED <> mnTimeFence [MTF4]
          UNDEFINED <> cPlanningFenceRule [MPSP]
          UNDEFINED <> cFixedVariableLeadtime [MRPP]
          UNDEFINED <> mnLeadtimeLevel [LTLV]
          UNDEFINED <> mnLeadtimeMfg [LTMF]
          UNDEFINED <> mnLeadtimeCumulative [LTCM]
          UNDEFINED <> mnLeadtimePerUnit [LTPU]
          UNDEFINED <> mnMFGLeadtimeQty [MLQ]
          UNDEFINED <> mnShrinkFactor [SRNK]
          UNDEFINED <> cShrinkFactorMethod [SRKF]
          UNDEFINED <> cOrderPolicyCode [OPC]
          UNDEFINED <> mnOrderPolicyValue [OPV]
          UNDEFINED <> mnAccountingCostQuantity [ACQ]
          UNDEFINED <> cTimeBasisCode [TIMB]
          UNDEFINED <> mnMoveHours [MOVD]
          UNDEFINED <> mnQueueHours [QUED]
          UNDEFINED <> mnStandardSetupHours [SETL]
          UNDEFINED <> cErrorIndicator [ERRC]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> mnLowLevelCode [LLX]
          "1" -> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          UNDEFINED <> cNetChangeFlag [MRPC]
          UNDEFINED <> idF4102Pointer [GENLNG]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> mnSafetyStock [SAFE]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cAbcCode [ABCS]
          UNDEFINED <> cAllocateByLot [CMGL]
          UNDEFINED <> szMasterPlanning [PRP5]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> cPotencyControl [OT1Y]
          UNDEFINED <> mnStandardPotency [STDP]
          UNDEFINED <> cLotExpDateCalcMeth [LECM]
          UNDEFINED <> cActiveIngredientFlag [AING]
          UNDEFINED <> cCrossDockFlagYN [XDCK]
     If VA frm_StockingType [STKT] is equal to "C"
          Enable Control(HC Confg Generic Text)
          Enable Control(HC Confg Related Order)
          Enable Control(HC Configuration)
     Else
          Disable Control(HC Confg Generic Text)
          Disable Control(HC Confg Related Order)
          Disable Control(HC Configuration)
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC FROM Status Code(as entered)
Event: Control Exited/Changed-Asynch
Event GUID: f57df41c-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(FC PROCESS:Status Code filters)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC THRU status Code(as entered)
Event: Control Exited/Changed-Asynch
Event GUID: f57df41d-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(FC PROCESS:Status Code filters)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC FROM Date (as entered)
Event: Control Exited/Changed-Asynch
Event GUID: f57df41f-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(FC PROCESS:Date Range entered)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC THRU Date (as entered)
Event: Control Exited/Changed-Asynch
Event GUID: f57df41e-a23a-11d0-a204-0000f6728a56
=============================================
Press Button(FC PROCESS:Date Range entered)


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC PROCESS:Status Code filters
Event: Button Clicked
Event GUID: f57df429-a23a-11d0-a204-0000f6728a56
=============================================
FC NXTR:Next Status Filter-FROM(wf) [NXTR] = <NULL>
FC NXTR:Next Status Filter-TO(wf) [NXTR] = <NULL>
FC LTTR:Last Status Filter-FROM(wf) [LTTR] = <NULL>
FC LTTR:Last Status filter-TO(wf) [LTTR] = <NULL>
// 
If FC FROM Status Code(as entered) [LTT2] is not equal to <Blank>
Or FC THRU status Code(as entered) [NXT2] is not equal to <Blank>
     If FC EV01-StatusBasedOn [EV01] is equal to "0"
          FC NXTR:Next Status Filter-FROM(wf) [NXTR] = FC FROM Status Code(as entered) [LTT2]
          FC NXTR:Next Status Filter-TO(wf) [NXTR] = FC THRU status Code(as entered) [NXT2]
     End If
     If FC EV01-StatusBasedOn [EV01] is equal to "1"
          FC LTTR:Last Status Filter-FROM(wf) [LTTR] = FC FROM Status Code(as entered) [LTT2]
          FC LTTR:Last Status filter-TO(wf) [LTTR] = FC THRU status Code(as entered) [NXT2]
     End If
     VA frm_VC01_CriteriaExist [VC01] = "1"
End If


=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Object: FC PROCESS:Date Range entered
Event: Button Clicked
Event GUID: f57df42c-a23a-11d0-a204-0000f6728a56
=============================================
FC DRQJ:Requested Date FROM [DRQJ] = <Blank>
FC DRQJ:Requested Date-THRU(wf) [DRQJ] = <Blank>
FC TRDJ:Transaction Date-FROM(wf) [TRDJ] = <Blank>
FC TRDJ:Transaction Date-THRU(wf) [TRDJ] = <Blank>
FC PDDJ:Promise Date-FROM [PDDJ] = <Blank>
FC PDDJ:Promise Date-THRU(wf) [PDDJ] = <Blank>
FC OPDJ:Original Promise-FROM(wf) [OPDJ] = <Blank>
FC OPDJ:Oringial Promise-THRU(wf) [OPDJ] = <Blank>
FC CNDJ:Cancel Date-FROM(wf) [CNDJ] = <Blank>
FC CNDJ:Cancel Date-THRU(wf) [CNDJ] = <Blank>
FC DGL:GL Date-FROM(wf) [DGL] = <Blank>
FC DGL:Gl Date-THRU(wf) [DGL] = <Blank>
FC ADDJ:Receipt Date FROM [ADDJ] = <Blank>
FC ADDJ:Receipt Date THRU [ADDJ] = <Blank>
// 
If FC FROM Date (as entered) [DTE] is not equal to ""
Or FC THRU Date (as entered) [DTE] is not equal to ""
     If FC EV01-DateBasedOn [EV01] is equal to "0"
          FC DRQJ:Requested Date FROM [DRQJ] = FC FROM Date (as entered) [DTE]
          FC DRQJ:Requested Date-THRU(wf) [DRQJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "1"
          FC TRDJ:Transaction Date-FROM(wf) [TRDJ] = FC FROM Date (as entered) [DTE]
          FC TRDJ:Transaction Date-THRU(wf) [TRDJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "2"
          FC PDDJ:Promise Date-FROM [PDDJ] = FC FROM Date (as entered) [DTE]
          FC PDDJ:Promise Date-THRU(wf) [PDDJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "3"
          FC OPDJ:Original Promise-FROM(wf) [OPDJ] = FC FROM Date (as entered) [DTE]
          FC OPDJ:Oringial Promise-THRU(wf) [OPDJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "4"
          FC ADDJ:Receipt Date FROM [ADDJ] = FC FROM Date (as entered) [DTE]
          FC ADDJ:Receipt Date THRU [ADDJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "5"
          FC CNDJ:Cancel Date-FROM(wf) [CNDJ] = FC FROM Date (as entered) [DTE]
          FC CNDJ:Cancel Date-THRU(wf) [CNDJ] = FC THRU Date (as entered) [DTE]
     End If
     If FC EV01-DateBasedOn [EV01] is equal to "6"
          FC DGL:GL Date-FROM(wf) [DGL] = FC FROM Date (as entered) [DTE]
          FC DGL:Gl Date-THRU(wf) [DGL] = FC THRU Date (as entered) [DTE]
     End If
     VA frm_VC01_CriteriaExist [VC01] = "1"
End If



=============================================
EVENTS
=============================================
Form: Work With Order Details - W4310G
Event: Dialog is Initialized
Event GUID: f57df413-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szErrorMessageID_DTAI [DTAI]
evt_cApparelEnabled_EV01 [EV01]
----------------------------------------
// ISSUE 6869 - Marília - 26/02/04 - Inclusão de campos novos no GRID
// ISSUE 7065 - Marília - 13/05/04 - Consistência Histórico Padrão
// ISSUE 7385 - Marília - 19/08/04 - Inclusão "Descrição 4" no GRID
// ISSUE 251190 - Marília - Campos novos qdo. Recarga-O6
// ISSUE 543597 - Marília - Inclusão Grid e View = Valor Recebido (AREC)
// ISSUE 854444 - Marília - Inclusão Campos O4-Importação, tela W4310A
//                                PSHIP, IRPR, CCOC, FRCF no Grid
// ===============================================================
//
// ---------------------------------------------------------------------------
// Supress amounts, if Proc options are set
// ---------------------------------------------------------------------------
//
If PO szProtectPriceFlag [VL09] is equal to "2"
     Hide Grid Column(FC Grid, GC Original OrderedForeign Amount)
     Hide Grid Column(FC Grid, GC OriginalAmount)
     Hide Grid Column(FC Grid, GC ForeignAmount Open)
     Hide Grid Column(FC Grid, GC AmountOpen)
     Hide Grid Column(FC Grid, GC ForeignUnit Cost)
     Hide Grid Column(FC Grid, GC UnitCost)
End If
//
// ---------------------------------------------------------------------------
// Load status code filters from processing options
// ---------------------------------------------------------------------------
//
If SL VersionName is not equal to <Blank>
And SL VersionName is not equal to <NULL>
     If PO cInqBasedOnLastStatus [EV01] is equal to "1"
          FC EV01-StatusBasedOn [EV01] = "1"
          If PO InqFromStatusCode [LTTR] is equal to or empty <Blank>
          Else
               FC LTTR:Last Status Filter-FROM(wf) [LTTR] = PO InqFromStatusCode [LTTR]
               FC FROM Status Code(as entered) [LTT2] = PO InqFromStatusCode [LTTR]
          End If
          If PO InqThruStatusCode [NXTR] is equal to or empty <Blank>
          Else
               FC LTTR:Last Status filter-TO(wf) [LTTR] = PO InqThruStatusCode [NXTR]
               FC THRU status Code(as entered) [NXT2] = PO InqThruStatusCode [NXTR]
          End If
     Else
          FC EV01-StatusBasedOn [EV01] = "0"
          If PO InqFromStatusCode [LTTR] is equal to or empty <Blank>
          Else
               FC NXTR:Next Status Filter-FROM(wf) [NXTR] = PO InqFromStatusCode [LTTR]
               FC FROM Status Code(as entered) [LTT2] = PO InqFromStatusCode [LTTR]
          End If
          If PO InqThruStatusCode [NXTR] is equal to or empty <Blank>
          Else
               FC NXTR:Next Status Filter-TO(wf) [NXTR] = PO InqThruStatusCode [NXTR]
               FC THRU status Code(as entered) [NXT2] = PO InqThruStatusCode [NXTR]
          End If
     End If
End If
//
Hide Control(FC Additional Criteria Exists)
//
// ---------------------------------------------------------------------------
// Hide Supplier Item Number in the grid
// ---------------------------------------------------------------------------
//
Hide Grid Column(FC Grid, GC SupplierItem Number, )
//
FC EV01-DateBasedOn [EV01] = PO cInqBasedOnReqDate [EV01]
//
//
// ---------------------------------------------------------------------------
// Hide and show fields base on PO cJob/Project selection made.
// ---------------------------------------------------------------------------
If PO cJobProject [EV01] is equal to "1"
     Show Control(FC Job)
     Hide Control(FC Business Unit)
     Hide Control(FC Project)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "2"
     Show Control(FC Project)
     Hide Control(FC Business Unit)
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "3"
     Show Control(FC Business Unit)
     Hide Control(FC Project)
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to or empty <Blank>
     //
     // ---------------------------------------------------------------------------
     // SupplierSelfService
     // ---------------------------------------------------------------------------
     //
     If PO cSupplierSelfService1 [SSS1] is not equal to "1"
          Show Control(FC Branch/Plant [MCU])
     End If
     Hide Control(FC Project)
     Hide Control(FC Job)
     Hide Control(FC Business Unit)
End If
//
// ---------------------------------------------------------------------------
//     If Change Orders is set to 1 then do not allow an add.
// ---------------------------------------------------------------------------
//
If PO szChangeOrderProcessingOn [VL13] is equal to "1"
     Disable Control(HC Add)
     Disable Control(HC Copy)
End If
//
// ---------------------------------------------------------------------------
//     If Change Order is off then hide change order column
// ---------------------------------------------------------------------------
//
If PO szChangeOrderProcessingOn [VL13] is equal to or empty <Blank>
     Hide Grid Column(FC Grid, GC ChgOrd, )
End If
//
// ---------------------------------------------------------------------------
// Hide "as if" columns if no as if currency is entered in the proc. options.
// ---------------------------------------------------------------------------
//
FC AsIfCurrency [CRCD] = PO szCurrencyCodeFrom [CRCD]
//
If FC AsIfCurrency [CRCD] is equal to or empty <Blank>
     Hide Grid Column(FC Grid, GC As IfDomestic)
Else
     Show Grid Column(FC Grid, GC As IfDomestic)
End If
//
// =======================================================
// ISSUE 854444 - Marília - Inclusão Campos O4-Importação
If PO szOrderType [DCT] is equal to "O4"
     // colunas usadas somente no caso de Importações (O4)
Else
     Hide Grid Column(FC Grid, GC Internação)
     Hide Grid Column(FC Grid, GC TaxaCambial)
     Hide Grid Column(FC Grid, GC MoedaEstrang.)
     Hide Grid Column(FC Grid, GC Custo UnitárioEstrangeiro)
End If
// =======================================================
// ---------------------------------------------------------------------------
//     Load other form interconnect fields
// ---------------------------------------------------------------------------
//
If FI OrderNumber [DOCO] is not equal to "0"
And FI OrderNumber [DOCO] is not equal to <NULL>
     FC Order Number [DOCO] = FI OrderNumber [DOCO]
End If
//
If FI OrderType [DCTO] is equal to or empty <Blank>
     If PO szOrderType [DCT] is not equal to <Blank>
          FC Order Type [DCTO] = PO szOrderType [DCT]
     End If
Else
     FC Order Type [DCTO] = FI OrderType [DCTO]
End If
//
If FI Order Company [KCOO] is not equal to <Blank>
And FI Order Company [KCOO] is not equal to <NULL>
     FC KCOO:Company (wf) [KCOO] = FI Order Company [KCOO]
End If
//
If FI RelatedOrderNumber [RORN] is not equal to <Blank>
And FI RelatedOrderNumber [RORN] is not equal to <NULL>
     FC Related PO/SO/WO Number [RORN] = FI RelatedOrderNumber [RORN]
End If
If FI RelatedOrderType [RCTO] is not equal to <Blank>
And FI RelatedOrderType [RCTO] is not equal to <NULL>
     FC Related PO/SO/WO Order Type [RCTO] = FI RelatedOrderType [RCTO]
End If
If FI RelatedOrderCompany [RKCO] is not equal to <Blank>
And FI RelatedOrderCompany [RKCO] is not equal to <NULL>
     FC Related Order Key Company [RKCO] = FI RelatedOrderCompany [RKCO]
End If
//
// SAR 4058331 Begins
If FI AccountID [AID] is equal to or empty <Blank>
     FC Account Number [ANI] = "*"
Else
     FC AID:Account ID(wf) [AID] = FI AccountID [AID]
     //                                            SAR 4907890 Begin
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          FC Account Number [ANI] <- szAccountNumber [ANI]
          FC AID:Account ID(wf) [AID] -> szAccountID [AID]
          FC ACCOUNT NUMBER [DL01] <- szAccountDescription [DL01]
          "1" -> cBasedOnFormat [EV01]
          "2" -> cFormatAccountNumberAs [EV02]
          "1" -> cIncludeAccountSymbol [EV03]
          "1" -> cReturnErrorID [EV01]
     //                                            SAR 4907890 End
End If
// SAR 4058331 Ends
//
If FI Subledger [SBL] is not equal to <Blank>
And FI Subledger [SBL] is not equal to <NULL>
     FC Subledger [SBL] = FI Subledger [SBL]
     FC Subledger Type [SBLT] = FI SubledgerType [SBLT]
End If
//
// ---------------------------------------------------------------------------
//     Load the Order type from the processing options and if the
//     processing option to protect document type has been set then
//     disable the field to prohibit input
// ---------------------------------------------------------------------------
//
If FC Order Type [DCTO] is equal to or empty <Blank>
And PO szOrderType [DCT] is not equal to <Blank>
     FC Order Type [DCTO] = PO szOrderType [DCT]
End If
If PO szProtectOrderType [VL11] is equal to "1"
     Disable Control(FC Order Type [DCTO])
End If
//
//
// ---------------------------------------------------------------------------
//    If a business unit is passed into this application then use it to search o
//    the record, otherwise  get the default business unit set up in the default
//    locations and printers file. If the business unit still remains blank i.e.
//    a default branch has not been set then force the character '*' so as show
//    all business units.
// ---------------------------------------------------------------------------
//
If FI BranchPlant [MCU] is equal to or empty <Blank>
     GetDefaultBranch(B4000370.GetDefaultBranch)
          FC Business Unit1 [MCU] <- szBranch [MCU]
     If FC Business Unit1 [MCU] is equal to or empty <Blank>
          FC Business Unit1 [MCU] = "*"
     End If
Else
     FC Business Unit1 [MCU] = FI BranchPlant [MCU]
End If
//
// =======================================================
//
If FI ShortItemNumber [ITM] is equal to "0"
     FC Item Number [UITM] = "*"
     FC ITM:Item Number-Short(wf) [ITM] = "NULL"
Else
     FC ITM:Item Number-Short(wf) [ITM] = FI ShortItemNumber [ITM]
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          FI ShortItemNumber [ITM] -> mnShortItemNumber [ITM]
          FC Item Number [UITM] <- szPrimaryItemNumber [UITM]
          FC ITEM NUMBER [DL01] <- szDescription [DSC1]
          "1" <> cSuppressErrorMessage [EV01]
          FC Business Unit1 [MCU] -> szBranchPlant [MCU]
End If
//
// ---------------------------------------------------------------------------
//   If Processing option is blank, pass in ZJDE0001
// ---------------------------------------------------------------------------
//
SetP4310DefaultProcessingOption(B4302910.SetP4310DefaultProcessingOption)
     PO szSupplyDemandInquiry [VL20] <> szSupplyDemandInquiryVersion [VL20]
     PO szSupplierAnalysisVersion [VL21] <> szSupplierAnalysisVersion [VL21]
     PO szSupplierMasterVersion [VL22] <> szSupplierMasterVersion [VL22]
     PO szPOPrintOnDemandVersion [VL23] <> szPOPrintOnDemandVersion [VL23]
     PO InqItemAvailVersion [VERS] <> szItemAvailVersion [VERS]
     PO InqApprovalReviewVersion [VERS] <> szApprovalReviewVersion [VERS]
     PO InqReceiptRoutingVersion [VERS] <> szReceiptRoutingVersion [VERS]
     PO InqOpenReceiptsVersion [VERS] <> szOpenReceiptsVersion [VERS]
     PO InqChangeOrderVersion [VERS] <> szChangeOrderVersion [VERS]
     PO PurchasingLedgerVersion [VERS] <> szPurchasingLedgerVersion [VERS]
     PO szOpenOrderInquiry [VERS] <> szOpenOrderInquiryVersion [VERS]
     PO szFinancialStatusInquiry [VERS] <> szFinancialStatusInqVersion [VERS]
     PO szInboundTransportationVersion [VERS] <> szInboundTransportationVersion [VERS]
     PO szBlanketReleaseVersion [VERS] <> szBlanketReleaseVersion [VERS]
     PO jdDateTransactionJulian [TRDJ] <> jdDateTransactionJulian [TRDJ]
     PO szLogsEntryVersion [VERS] <> szLogsEntryVersion [VERS]
//
// ===============================================================
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY49" -> szDataItem [DTAI]
     VA frm_cTransportationInstalled [EV01] <- cModuleExistance [MEOW]
If VA frm_cTransportationInstalled [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC ShipmentNumber)
     Disable Control(HC Work With &Shipment)
     Disable Control(HC Shipment S&tatus)
End If
//
// ---------------------------------------------------------------------------
// Supplier Self Service
// ---------------------------------------------------------------------------
//
// SAR 6620518 Begin - Changed the hard coding of grid columns to text
// variables so that they can be properly translated.
//
If PO cSupplierSelfService1 [SSS1] is equal to "1"
     //
     VA frm_ErrorMessage_DTAI [DTAI] = <Blank>
     VA frm_ErrorMsgItemNum_DTAI [DTAI] = <Blank>
     //
     VA frm_DefaultBranchPlant_MCU [MCU] = "ALL"
     PpatGetUserIdAddressNumber(B0200098.PpatGetUserIdAddressNumber)
          UNDEFINED <> szUserId [USER]
          VA frm_AddressNumber_AN8 [AN8] <- mnAddressNumber [AN8]
          UNDEFINED <> szErrorMessageId [DTAI]
          UNDEFINED <> cSuppressErrorMessage [EV01]
     GetCrossReferenceFields(B4001050.GetCrossReferenceFields)
          VA frm_DefaultBranchPlant_MCU [MCU] -> szBranchPlant [MCU]
          VA frm_SymbolSupp_SYM5 [SYM5] <- cXrefSymbol [SYM5]
          VA frm_SupplierCrossRef_XRT2 [XRT2] <- szCrossRefTypeSupplier [XRT2]
     Set Grid Column Heading(FC Grid, GC UM,  <Blank>)
     Set Grid Column Heading(FC Grid, GC OriginalPromise, TV Original delivery date)
     Set Grid Column Heading(FC Grid, GC PromisedDelivery Date, TV Current delivery date)
     Hide Grid Column(FC Grid, GC ForeignAmount To Receive)
     Hide Grid Column(FC Grid, GC AmountTo Receive)
     Hide Grid Column(FC Grid, GC Original OrderedForeign Amount)
     Hide Grid Column(FC Grid, GC Original OrderedAmount)
     // ------ ISSUE 543597 - Marília - Inclusão Grid e View = Valor Recebido (AREC)
     Hide Grid Column(FC Grid, GC ValorRecebido)
     Hide Grid Column(FC Grid, GC ForeignUnit Cost)
     Hide Grid Column(FC Grid, GC For Agreement AmtReleased)
     Hide Grid Column(FC Grid, GC Agreement AmountReleased)
     Set Grid Column Heading(FC Grid, GC OriginalOrdered Amount1, TV Original Amount Ordered)
     Set Grid Column Heading(FC Grid, GC Agreement Amount Released1, TV Agreement Amount Released)
     Set Grid Column Heading(FC Grid, GC Amount ToReceive1, TV Amount To Receive)
     Set Grid Column Heading(FC Grid, GC ForeignUnit Cost, TV Unit Cost)
End If
If PO cSupplierSelfService1 [SSS1] is equal to "1"
And FC Order Type [DCTO] is not equal to "OB"
     Hide Grid Column(FC Grid, GC Agreement Amount Released1)
     Hide Grid Column(FC Grid, GC Agreement QuantityReleased)
End If
If PO cSupplierSelfService1 [SSS1] is equal to "1"
     If FC Order Type [DCTO] is equal to "OP"
          Set Form Title(TV Purchase Order Inquiry)
     Else
          Set Form Title(TV Purchase Agreements Inquiry)
          Set Grid Column Heading(FC Grid, GC QuantityTo Receive, TV Remaining Quantity)
          Set Grid Column Heading(FC Grid, GC Amount ToReceive1, TV Remaining Amount)
          Set Grid Column Heading(FC Grid, GC CancelDate, TV Expiration Date)
     End If
End If
//
// SAR 6620518 End
//
// ---------------------------------------------------------------------------
// SAR 6585679 Begin. Check if LogsAtLevls Module is on in Vertical Feature
// ---------------------------------------------------------------------------
//
// Check to see whether Logs Module exists in UDC 40/VF
GetUDC(X0005.GetUDC)
     "40" -> szSystemCode [SY]
     "VF" -> szRecordTypeCode [RT]
     "04" -> szUserDefinedCode [KY]
     "2.00" -> mnKeyFieldLength [AS]
     "1" -> cSuppressErrorMessage [EV01]
     VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
If VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
     VA frm_cLogsAtLevelsOn_EV01 [EV01] = "1"
End If
//
// ---------------------------------------------------------------------------
// Subcontracts display if JobProject is 1 or 2
If PO cJobProject [EV01] is equal to ("1","2")
     Set Grid Column Heading(FC Grid, GC SupplierName, TV Subcontractor Name)
     Set Control Text(FC Related PO/SO/WO Number, TV Related Contract)
     Set Control Text(FC Original Order Number, TV Original Contract)
     Set Control Text(FC Display Supplier Item, TV Display Subcontractor Item)
     Set Form Title(TV Work With Contract Detail)
End If
//
// SAR 6585679 End
// SAR 8164317 Service units enhancement
// Grid may be customized for versions and the field may not be part of the
// version. To show the field if processing option is set to display.
If PO cDisplayServiceUnits [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC ServiceQuantity)
     Hide Grid Column(FC Grid, GC ServiceUoM)
Else
     Show Grid Column(FC Grid, GC ServiceQuantity)
     Show Grid Column(FC Grid, GC ServiceUoM)
End If
//
// SAR 8956903 - Apparel Management
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA evt_cApparelEnabled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA evt_cApparelEnabled_EV01 [EV01] is not equal to "1"
     Disable Control(HC Style Matrix Entry)
End If
//
//    BUG# 11904731 - PMPN Enhancements
//    Hide PMPN if PMPN Module Existance is turned off
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY31MP" -> szDataItem [DTAI]
     VA frm_cPMPNInstalled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA frm_cPMPNInstalled_EV01 [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC Project MfgProduction Number)
End If

=============================================
Form: Work With Order Details - W4310G
Event: Post Dialog is Initialized
Event GUID: f57df414-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_InquireFlag [EV02]
----------------------------------------
//
// ---------------------------------------------------------------------------
//     Check for autofind if form interconnect parameters have been passed in.
// ---------------------------------------------------------------------------
//
VA evt_InquireFlag [EV02] = "0"
//
If FC Order Number [DOCO] is not equal to "0"
And FC Order Number [DOCO] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If FC Related PO/SO/WO Number [RORN] is not equal to <Blank>
And FC Related PO/SO/WO Number [RORN] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If FC Original Order Number [OORN] is not equal to <Blank>
And FC Original Order Number [OORN] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If FC ITM:Item Number-Short(wf) [ITM] is not equal to "0"
And FC ITM:Item Number-Short(wf) [ITM] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If FC AID:Account ID(wf) [AID] is not equal to <Blank>
And FC AID:Account ID(wf) [AID] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If FC Subledger [SBL] is not equal to <Blank>
And FC Subledger [SBL] is not equal to <NULL>
     VA evt_InquireFlag [EV02] = "1"
End If
//
If VA evt_InquireFlag [EV02] is equal to "1"
     Press Button(FC )
End If
//
// ==========================================================================
//
// ---------------------------------------------------------------------------
//    assign a blank value to initialize the supplier number workfield
// ---------------------------------------------------------------------------
//
FC AN8..Supplier(wf) [AN8] = "0"
FC ALPH..SupplierName(wf) [ALPH] = <Blank>
//
// ===============================================================
// ---------------------------------------------------------------------------
// vertex active
// ---------------------------------------------------------------------------
DetermineIfVertexIsActive(N7300001.DetermineIfVertexIsActive)
     <Blank> -> szSystemCode [SY]
     VA frm_cVertexActive [VVTX] <- cUseVertexFlag [VVTX]
     UNDEFINED <- szUSCountryCode [VVUS]
     VA frm_CountryCodeforCanada [VVCN] <- szCanCountryCode [VVCN]
     UNDEFINED <- szDivisionCodeSales [VVAB]
     UNDEFINED <- szItemBalanceCategory [VVIT]
     UNDEFINED <- szDivisionCodeUse [VUAB]
     UNDEFINED <- szItemBalanceCategoryUseTax [VUIT]
     UNDEFINED <- szGlOffset [GL01]
     UNDEFINED <- cFlagMultiCountyAddress [VVMC]
     UNDEFINED <- cPrintLinkParm [VPRT]
     UNDEFINED <- szCustomerClassCodeSales [VCCS]
     UNDEFINED <- szCustomerClassCodeUse [VCCU]
     UNDEFINED <- szQuantumDebugLog [QDLG]
//

=============================================
Form: Work With Order Details - W4310G
Event: Grid Record is Fetched
Event GUID: f57df415-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnDefaultRate_CRR [CRR]
----------------------------------------
//
// -----------------------------------------------------------------------------
// ISSUE 6869 - Marília - 26/02/04 - Campos novos do GRID
// ISSUE 7385 - Marília - 19/08/04 - Campo novo do GRID
// Issue 7980 - alteração do campo Descrição 3 - Valkiria - 20/04/05
GC Requisitante [ADD2] = <NULL>
GC Descrição 3 [MDSC] = <NULL>
GC Descrição 4 [DSCPED] = <NULL>
GC Número Alocação [N001] = <NULL>
// ----- ISSUE 854444 - Marília - Inclusão Campos O4-Importação
GC % Internação [PSHIP] = <NULL>
GC Taxa Cambial [IRPR] = <NULL>
GC Moeda Estrang. [CCOC] = <NULL>
GC Custo Unitário Estrangeiro [FRCF] = <NULL>
F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
     BC Order Company (Order Number) (F4311.0) [KCOO] = TK Order Company (Order Number) [KCOO]
     BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     BC Order Type (F4311.0) [DCTO] = TK Order Type [DCTO]
     BC Order Suffix (F4311.0) [SFXO] = TK Order Suffix [SFXO]
     BC Line Number (F4311.0) [LNID] = TK Line Number [LNID]
     GC Requisitante [ADD2] <- TK Address Line 2 [ADD2]
     GC Descrição 3 [MDSC] <- TK User Based Pricing Message Description [MDSC]
     GC Descrição 4 [DSCPED] <- TK Descrição  de Pedido [DSCPED]
     GC Número Alocação [N001] <- TK Next Number Range 1 [N001]
     GC Moeda Estrang. [CCOC] <- TK Currency Code - Originating Country [CCOC]
     GC Taxa Cambial [IRPR] <- TK Percentage - Withholding Tax [IRPR]
     GC Custo Unitário Estrangeiro [FRCF] <- TK Amount - Customer Freight Charge Foreign [FRCF]
     GC % Internação [PSHIP] <- TK Percentage of Shipping [PSHIP]
// ------
// ----- ISSUE 854444 - Marília - Inclusão Campos O4-Importação
// Se O4 - dados estão no dcto Cotação OI da F5543ICO
If PO szOrderType [DCT] is equal to "O4"
     VA frm_DOCO [DOCO] = [BC Original Order Number (F4311.0) [OORN]]
     F5543ICO.FetchSingle  [Index 1: kcoo,Doco,Dcto,Sfxo,Lnid]
          BC Document Company (Original Order) (F4311.0) [OKCO] = TK Order Company (Order Number) [KCOO]
          VA frm_DOCO [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          BC Original Order Type (F4311.0) [OCTO] = TK Order Type [DCTO]
          BC Order Suffix (F4311.0) [SFXO] = TK Order Suffix [SFXO]
          BC Original Line Number (F4311.0) [OGNO] = TK Line Number [LNID]
          GC Moeda Estrang. [CCOC] <- TK Currency Code - Originating Country [CCOC]
          GC Taxa Cambial [IRPR] <- TK Percentage - Withholding Tax [IRPR]
          GC Custo Unitário Estrangeiro [FRCF] <- TK Amount - Customer Freight Charge Foreign [FRCF]
          GC % Internação [PSHIP] <- TK Percentage of Shipping [PSHIP]
End If
// Supplier Self Service
// ---------------------------------------------------------------------------
// =============
//
If FC nroalocacao [N001] is not equal to "0"
And FC nroalocacao [N001] is not equal to GC Número Alocação [N001]
     Suppress Grid Line(FC Grid)
Else
     If PO cSupplierSelfService1 [SSS1] is equal to "1"
          If FC Item Number [UITM] is equal to "*"
               VA frm_ErrorMessage_DTAI [DTAI] = <Blank>
               If BC Address Number (F4311.0) [AN8] is not equal to VA frm_AddressNumber_AN8 [AN8]
                    Hide Grid Row(FC Grid, <Currently Selected Row>)
               End If
          End If
          If VA frm_ErrorMessage_DTAI [DTAI] is not equal to <Blank>
          And VA frm_ErrorMsgItemNum_DTAI [DTAI] is not equal to <Blank>
               Suppress Grid Line(FC Grid)
               Stop Processing
          End If
          If BC Address Number (F4311.0) [AN8] is not equal to VA frm_AddressNumber_AN8 [AN8]
               Hide Grid Row(FC Grid, <Currently Selected Row>)
          End If
     End If
     //
     // ---------------------------------------------------------------------------
     //     Generic text check for the PO Detail line
     // ---------------------------------------------------------------------------
     //
     Media Object Structures(GT4311, <Default Media Object>, <Exist>, FC EV01:Generic Text Row (wf), BC Document (Order No, Invoice, (F4311) etc.), BC Order Company (Order (F4311) Number), ...)
     If FC EV01:Generic Text Row (wf) [EV01] is equal to "1"
          Set Grid Text Indicator(FC Grid, <Currently Selected Row>, <Yes>)
     End If
     //
     // ==========================================================================
     //
     // ---------------------------------------------------------------------------
     //   Retrieve supplier description. Get the supplier name only if the supplier
     //    changes for the next line
     // ---------------------------------------------------------------------------
     //
     If BC Address Number (F4311.0) [AN8] is not equal to FC AN8..Supplier(wf) [AN8]
          ScrubAddressNumber(B0100016.ScrubAddressNumber)
               BC Address Number (F4311.0) [AN8] -> mnAddressNumber [AN8]
               "2" -> cInputSelection [EV01]
               GC Supplier Name [ALPH] <- szNameAlpha [ALPH]
          FC AN8..Supplier(wf) [AN8] = BC Address Number (F4311.0) [AN8]
          FC ALPH..SupplierName(wf) [ALPH] = GC Supplier Name [ALPH]
     Else
          GC Supplier Name [ALPH] = FC ALPH..SupplierName(wf) [ALPH]
     End If
     //
     // ---------------------------------------------------------------------------
     // Supplier Self Service
     // ---------------------------------------------------------------------------
     //
     // SAR 8945155 - Spec missing - So BC Address Number - Ship To (F4311) is
     // added back by refering to old ER in the if condition and in F0101 Edit
     // Address Number
     If BC Address Number - Ship To (F4311.0) [SHAN] is not equal to <Blank>
     And PO cSupplierSelfService1 [SSS1] is equal to "1"
          ScrubAddressNumber(B0100016.ScrubAddressNumber)
               BC Address Number - Ship To (F4311.0) [SHAN] -> mnAddressNumber [AN8]
               "2" -> cInputSelection [EV01]
               GC Ship to Name [ALPH] <- szNameAlpha [ALPH]
     End If
     // ==========================================================================
     //
     // ---------------------------------------------------------------------------
     // Retrieve Supplier Item Number
     // ---------------------------------------------------------------------------
     //
     If FC Display Supplier Item [DSPSUB] is equal to "1"
          If BC Business Unit (F4311.0) [MCU] is not equal to FC MCU-Last Business Unit (wf) [MCU]
          Or FC MCU-Last Business Unit (wf) [MCU] is equal to "            "
               GetCrossReferenceFields(B4001050.GetCrossReferenceFields)
                    BC Business Unit (F4311.0) [MCU] <> szBranchPlant [MCU]
                    VA frm_CrossReferenceType [XRT2] <> szCrossRefTypeSupplier [XRT2]
               FC MCU-Last Business Unit (wf) [MCU] = BC Business Unit (F4311.0) [MCU]
          End If
          //  SAR 7310431 - Add if condition
          If BC Item Number - Short (F4311.0) [ITM] is not equal to "0"
          And BC Item Number - Short (F4311.0) [ITM] is not equal to <NULL>
               GetCrossItemReferenceItem(B4200180.GetCrossItemReferenceItem)
                    BC Item Number - Short (F4311.0) [ITM] <> mnShortItemNumber [ITM]
                    VA frm_CrossReferenceType [XRT2] <> szCrossReferenceType [XRT]
                    BC Address Number (F4311.0) [AN8] <> mnAddressNumber [AN8]
                    BC Date - Order/Transaction (F4311.0) [TRDJ] <> jdOrderDate [EXDJ]
                    GC Supplier Item Number [CITM] <> szItemNumber [UITM]
                    "1" <> cSuppressErrorMesg [EV01]
          End If
     End If
     //
     If SL CurrencyProcessing is not equal to "N"
          RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
               BC Order Company (Order Number) (F4311.0) [KCOO] -> szCompany [CO]
               GC Base Curr [CRDC] <- szCurrencyCode [CRCD]
     End If
     //
     // ==========================================================================
     //
     // ---------------------------------------------------------------------------
     //    Strike through the Open Amount cells if the line is at a status 999.
     // ---------------------------------------------------------------------------
     //
     If GC Next Status [NXTR] is equal to "999"
          Set Grid Font(FC Grid,  <Current Row>, GC AmountOpen, <,Regular,10,Black>)
          Set Grid Font(FC Grid,  <Current Row>, GC ForeignAmount Open, <,Regular,10,Black>)
     End If
     //
     //
     // ---------------------------------------------------------------------------
     //   Bold Order Number and Order Type in the grid when an order
     // enters receipt routing.  Added Routing Process flag to business view (V4311A)
     // ---------------------------------------------------------------------------
     //
     VerifyActiveOperations(B4300890.VerifyActiveOperations)
          BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] -> mnOrderNumber [DOCO]
          BC Order Type (F4311.0) [DCTO] -> szOrderType [DCTO]
          BC Order Company (Order Number) (F4311.0) [KCOO] -> szOrderCompany [KCOO]
          BC Order Suffix (F4311.0) [SFXO] -> szOrderSuffix [SFX0]
          BC Line Number (F4311.0) [LNID] -> mnOrderLineNumber [LNID]
          VA frm_NoOperationActive [EV01] <- cNoOperationActive [EV01]
     If BC Routing Process (Y/N) (F4311.0) [RTGC] is equal to "Y"
     And VA frm_NoOperationActive [EV01] is not equal to "1"
          Set Grid Font(FC Grid,  <Current Row>, GC OrderNumber, <,Bold,10,Black>)
          Set Grid Font(FC Grid,  <Current Row>, GC OrTy, <,Bold,10,Black>)
     End If
     //
     // ---------------------------------------------------------------------------
     // Get EURO conversions if processing option is not blank or null.
     // ---------------------------------------------------------------------------
     //
     Copy Currency Information(GC As IfCurrency, GC Amount)
     //
     If FC AsIfCurrency [CRCD] is not equal to <Blank>
     And FC AsIfCurrency [CRCD] is not equal to <NULL>
          If GC Base Curr [CRDC] is not equal to FC AsIfCurrency [CRCD]
               GC As If Currency [APTD] = 0
               //
               //
               GetExchRate(B0000033.GetExchRate)
                    GC Base Curr [CRDC] -> szCurrencyCodeFrom [CRCD]
                    FC AsIfCurrency [CRCD] -> szCurrencyCodeTo [CRDC]
                    BC Address Number (F4311.0) [AN8] -> mnAddressNumber [AN8]
                    PO jdDateTransactionJulian [TRDJ] -> jdTransactionDate [DGJ]
                    VA frm_TRR1_mnCurrConvRateMult [TRR1] <- mnCurrConvRateMult [CRR]
                    VA frm_TRR2_mnCurrConvRateDiv [TRR2] <- mnCurrConvRateDiv [CRRD]
                    VA evt_mnDefaultRate_CRR [CRR] <- mnDefaultRate [CRR]
                    VA frm_TRR1_LegOne [TRR1] <- mnTriangulationRate1 [CRRD]
                    VA frm_TRR2_LegTwo [TRR2] <- mnTriangulationRate2 [CRR]
                    VA frm_cCurrencyConversion_CRCM [CRCM] <- cConversionMethod [CRCM]
               //
               //
               If VA frm_cCurrencyConversion_CRCM [CRCM] is equal to "Y"
                    VA frm_TRR1_mnXRate [TRR1] = VA frm_TRR1_mnCurrConvRateMult [TRR1]
               Else
                    If VA frm_cCurrencyConversion_CRCM [CRCM] is equal to "Z"
                         VA frm_TRR1_mnXRate [TRR1] = VA frm_TRR2_mnCurrConvRateDiv [TRR2]
                    Else
                         VA frm_TRR1_mnXRate [TRR1] = "0"
                         VA frm_cCurrencyConversion_CRCM [CRCM] = "  "
                    End If
               End If
               VA frm_AOPN_DomesticOpenAmount [AOPN] = BC Amount - Open (F4311.0) [AOPN]
               //
               // SAR 4908121  Begin
               If VA frm_AOPN_DomesticOpenAmount [AOPN] is not equal to <NULL>
                    CurrencyConvForAndDom(B0000027.CurrencyConvForAndDom)
                         VA frm_TRR1_mnXRate [TRR1] -> mnCurrencyConverRate [CRR]
                         VA frm_AOPN_DomesticOpenAmount [AOPN] -> mnForeignAmount [ACR]
                         GC As If Currency [APTD] <- mnNoRoundDomAmount [MN29D9]
                         VA frm_TRR1_LegOne [TRR1] -> mnTriangulationRate1 [CRR]
                         VA frm_TRR2_LegTwo [TRR2] -> mnTriangulationRate2 [CRR]
                         VA frm_cCurrencyConversion_CRCM [CRCM] -> cCurrencyConversionMethod [CRCM]
               End If
               // SAR 4908121 END
               //
               DecimalTriggerGetByCurrency(B1100006.DecimalTriggerGetByCurrency)
                    FC AsIfCurrency [CRCD] -> szCurrencyCode [CRCD]
                    GC As If Currency [APTD] <> mnDomOrFornAmount01 [AN01]
          End If
     End If
     //
     //
     If BC Serial Number (F4311.0) [ASID] is not equal to <Blank>
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               BC Serial Number (F4311.0) [ASID] <> szPrimaryAssetNumber [ASII]
               <Blank> -> cSymbolIdentifier [SYMID]
     End If
     //
     If PO cPrintPOViaSubsystem [EV05] is equal to "1"
          Disable Control(HC &Print Order)
     End If
     //
     F4311.FetchSingle  [Index 1: Doc No, Order Type, + 1]
          BC Order Company (Order Number) (F4311.0) [KCOO] = TK Order Company (Order Number) [KCOO]
          BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          BC Order Type (F4311.0) [DCTO] = TK Order Type [DCTO]
          BC Order Suffix (F4311.0) [SFXO] = TK Order Suffix [SFXO]
          BC Line Number (F4311.0) [LNID] = TK Line Number [LNID]
          GC Pymt Terms [PTC] <- TK Payment Terms Code [PTC]
     VA frm_TotalValorAReceber [AOPN] = [VA frm_TotalValorAReceber [AOPN]]+[BC Amount - Open (F4311.0) [AOPN]]
End If

=============================================
Form: Work With Order Details - W4310G
Event: Write Grid Line-Before
Event GUID: 7568fb70-1dea-11d3-9753-0000393c050e
=============================================
Show Grid Column(FC Grid, GC ForeignUnit Cost)
// ---------------------------------------------------------------------------
// Supplier Self Service
// ---------------------------------------------------------------------------
//
GC Agreement Quantity Released [UOPN] = [GC Quantidade Pedida [UORG]]-[GC Quantity To Receive [UOPN]]
GC Agreement Amount Released [AOPN] = [GC Original Ordered Amount [AEXP]]-[GC Amount To Receive [AOPN]]
GC For Agreement Amt Released [FAP] = [GC Original Ordered Foreign Amount [FEA]]-[GC Foreign Amount To Receive [FAP]]
If PO cSupplierSelfService1 [SSS1] is equal to "1"
     If GC Curr [CRCD] is not equal to GC Base Curr [CRDC]
          Hide Grid Column(FC Grid, GC UnitCost)
          GC Amount To Receive1 [FAP] = GC Foreign Amount To Receive [FAP]
          GC Agreement Amount  Released1 [FAP] = GC For Agreement Amt Released [FAP]
          GC Original Ordered Amount1 [FEA] = GC Original Ordered Foreign Amount [FEA]
     Else
          Hide Grid Column(FC Grid, GC ForeignUnit Cost)
          Show Grid Column(FC Grid, GC UnitCost)
          GC Amount To Receive1 [FAP] = GC Amount To Receive [AOPN]
          GC Agreement Amount  Released1 [FAP] = GC Agreement Amount Released [AOPN]
          GC Original Ordered Amount1 [FEA] = GC Original Ordered Amount [AEXP]
     End If
End If
//
// begin SAR 5133689, 5251941
// Call this BSFN only if "Short Item Number" exists.
//
If GC Short Item No [ITM] is not equal to "0"
And GC Short Item No [ITM] is not equal to <NULL>
     // SAR 7103897 Begin - Need to suppress error on Non-Stock PO's.
     GetItemBranchMfgData(B4000920.GetItemBranchMfgData)
          GC Branch/ Plant [MCU] -> szBranch [MCU]
          GC Short Item No [ITM] -> mnShortItemNumber [ITM]
          VA frm_StockingType [STKT] <- cStockingType [STKT]
          "1" -> cSuppressErrorMessage [EV01]
     // SAR 7103897 End
End If
// End SAR 5133689, 5251941
//
//   Begin SAR 7124874
If GC Multiple Accounts [MACT] is equal to "1"
     GC Original Account Number [ANI] = GC Account Number [ANI]
     GC Account Number [ANI] = TV *** Account Distribution ***
     GC Cost Center [OMCU] = <NULL>
     GC Obj Acct [OBJ] = <NULL>
     GC Sub  [SUB] = <NULL>
     GC Subledger [SBL] = <NULL>
     GC Sub Type [SBLT] = <NULL>
End If
//   End SAR 7124874

=============================================
Form: Work With Order Details - W4310G
Event: Last Grid Record Has Been Read
Event GUID: 81af0628-98e9-4710-9813-de860cd27e8f
=============================================
Clear Grid Buffer(FC Grid)
GB Amount To Receive [AOPN] = VA frm_TotalValorAReceber [AOPN]
Set Grid Font(FC Grid,  <Currently Selected Row>,  <All Columns>, <,Bold,11,Red>)
Insert Grid Buffer Row(FC Grid,  <After Last Row>,  <No>,  <No>,  <No>,  <No>,  <Yes>)

=============================================
Form: Work With Order Details - W4310G
Event: End Dialog
Event GUID: 26b51c50-a5b6-11d2-973e-000039ae070e
=============================================
If VA frm_cVertexActive [VVTX] is equal to "1"
     ValidateGeoCode(B7300002.ValidateGeoCode)
          <Blank> -> szTaxExplanationCode [EXR1]
          <Blank> -> szTaxRateArea [TXA1]
          UNDEFINED <- cGeoCodeValid [EV01]
          "1" -> cDeleteGeoCodeCache [EV01]
End If

=============================================
Form: Work With Order Details - W4310G
Event: Write Grid Line-After
Event GUID: 5daf6bf6-66e9-40b9-a970-7b57c503bf9e
=============================================
//
// SAR 6737302 Begin - Adding logic to prevent kit detail lines from being
// displayed if the processing option is set.
//
If BC Item Number - Related (Kit) (F4311.0) [RLIT] is not equal to <Blank>
And BC Item Number - Related (Kit) (F4311.0) [RLIT] is not equal to <NULL>
And PO cDisplayKitComponentLines [EV02] is not equal to "1"
     Hide Grid Row(FC Grid,  <Currently Selected Row>)
End If
//
// SAR 6737302 End




=============================================
Form: Order Header - Additional Information - W4310H
Event: Form Variables
Event GUID: abbc9424-fdfe-11d4-a5ef-000629ae6f6f
=============================================
frm_OldEvaluatedReceipts_AVCH [AVCH]
frm_cEvalReceiptsFrom0401_AVCH [AVCH]

=============================================
EVENTS
=============================================
Form: Order Header - Additional Information - W4310H
Object: HC OK/Select
Event: Button Clicked
Event GUID: 78e6b052-23f2-11d2-8dee-0000f6782893
=============================================
FI szPriceAdjustmentScheduleN [ASN] = FC ASN_AdjSchedule [ASN]
// 
// SAR #8352393
// New Logic Employed the following is now obsolete
// 
// SAR 4890901 Begins 
// Give an Error is User trys to change Eval Receipt from No to Yes
! If VA frm_OldEvaluatedReceipts_AVCH [AVCH] is not equal to FC Evaluated Receipt [AVCH]
     ! If VA frm_OldEvaluatedReceipts_AVCH [AVCH] is equal to ("0","N")
     ! And FC Evaluated Receipt [AVCH] is equal to ("1","Y")
          ! GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
          !      FI mnSupplier_AN8 [AN8] -> mnAddressNumber [AN8]
          !      UNDEFINED <> mnCarrierNumber [ANCR]
          !      UNDEFINED <> szPriceGroup [CPGP]
          !      UNDEFINED <> szDeliveryInstructions1 [DEL1]
          !      UNDEFINED <> szDeliveryInstructions2 [DEL2]
          !      UNDEFINED <> cItemRestrictions [EDF2]
          !      UNDEFINED <> szFreightHandlingCode [FRTH]
          !      UNDEFINED <> szOrderHoldCode [HOLD]
          !      UNDEFINED <> szPrintMessage [INMG]
          !      UNDEFINED <> mnOrderCopies [INVC]
          !      UNDEFINED <> mnMaximumOrderValue [MAXO]
          !      UNDEFINED <> mnMinimumOrderValue [MINO]
          !      UNDEFINED <> szOrderTemplate [ORTP]
          !      UNDEFINED <> cPricePickList [PLST]
          !      UNDEFINED <> szLandedCostRule [PRP5]
          !      UNDEFINED <> szUnitOfMeasureVolume [VUMD]
          !      UNDEFINED <> szUnitOfMeasureWeight [WUMD]
          !      UNDEFINED <> szPaymentTerms [TRAP]
          !      UNDEFINED <> szSupplierCurrencyCode [CRRP]
          !      UNDEFINED <> szTaxRateArea [TXA2]
          !      UNDEFINED <> szTaxExplCode [EXR2]
          !      UNDEFINED <> cCorrespondenceMethod [CRMD]
          !      VA frm_OldEvaluatedReceipts_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
          !      UNDEFINED <> cErrorCode [ERR]
          !      UNDEFINED <> szPriceAdjustmentSchedule [ASN]
          ! If VA frm_OldEvaluatedReceipts_AVCH [AVCH] is equal to ("0","N")
               ! Set Control Error(FC Evaluated Receipt, "4198")
          ! Else
               ! Clear Control Error(FC Evaluated Receipt [AVCH])
          ! End If
     ! End If
! End If
// SAR 4890901 Ends
// 
// End Obsolete
// End SAR# 8352393



=============================================
EVENTS
=============================================
Form: Order Header - Additional Information - W4310H
Event: Dialog is Initialized
Event GUID: 4c90f267-c725-4d40-a512-c78b9b1c667f
=============================================
//
//
// --------------------------------------------------------------
//    SAR 5102858 - Disable the fields if Header Protection is ON in Proc Opt.
//    and in UPDATE mode.  Need to use FI FormMode instead of SV
//    FI cIncomingFormMode: 1 = ADD; 2 = Not ADD
// --------------------------------------------------------------
//
If FI cIncomingFormMode [EV01] is equal to "2"
And PO cHeaderProtection_EV01 [EV01] is equal to "1"
     Disable Control(FC Pricing Group [PRGP])
     Disable Control(FC Freight Handling Code [FRTH])
     Disable Control(FC Landed Cost Rule [PRP5])
     Disable Control(FC Send Method [CRMD])
     Disable Control(FC Evaluated Receipt [AVCH])
     Disable Control(FC Reference [VR01])
     Disable Control(FC Reference 2 [VR02])
     Disable Control(FC Delivery Instructions [DEL1])
     Disable Control(FC Delivery Instructions 2 [DEL2])
     Disable Control(FC ASN_AdjSchedule [ASN])
End If
//
// SAR 8164261 Classification code Enhancement
ProcurementRetrieveVendorType(B4301530.ProcurementRetrieveVendorType)
     "1" -> cSuppressErrorMessage [SUPPS]
     FI mnProcessID [PEID] -> mnProcessID [PEID]
     FI mnTransactionID [TCID] -> mnTransactionID [TCID]
     FI szComputerID [CTID] -> szComputerID [CTID]
     FI mnJobnumberA [JOBS] -> mnJobnumberA [JOBS]
     FI OrderSuffix [SFXO] -> szOrderSuffix [SFXO]
     FC Classification Code 01 [CLASS01] <- szClassificationCode01 [CLASS01]
     FC Classification Code 02 [CLASS02] <- szClassificationCode02 [CLASS02]
     FC Classification Code 03 [CLASS03] <- szClassificationCode03 [CLASS03]
     FC Classification Code 04 [CLASS04] <- szClassificationCode04 [CLASS04]
     FC Classification Code 05 [CLASS05] <- szClassificationCode05 [CLASS05]

=============================================
Form: Order Header - Additional Information - W4310H
Event: Post Dialog is Initialized
Event GUID: 78e6b051-23f2-11d2-8dee-0000f6782893
=============================================
FC ASN_AdjSchedule [ASN] = FI szPriceAdjustmentScheduleN [ASN]
//
// SAR 4890901  Begins
VA frm_OldEvaluatedReceipts_AVCH [AVCH] = FI EvaluatedReceipts [AVCH]
// SAR 4890901 Ends
//
// SAR #8352393
// Get the AVCH value from the Supplier Master table for comparison
//
GetPurchasingInstructions(B4300060.GetPurchasingInstructions)
     FI mnSupplier_AN8 [AN8] -> mnAddressNumber [AN8]
     VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] <- cEvaluatedReceipts [AVCH]
//
// If the selected supplier has an evaluated receipt value of "N" we will
// never allow that value to be over-ridden
//
If VA frm_cEvalReceiptsFrom0401_AVCH [AVCH] is equal to "N"
     FC Evaluated Receipt [AVCH] = "N"
     Disable Control(FC Evaluated Receipt [AVCH])
Else
     Enable Control(FC Evaluated Receipt [AVCH])
End If
//
// End SAR# 8352393




=============================================
Form: Work With Order Headers - W4310I
Event: Form Variables
Event GUID: 5ef15c3f-e064-11d1-9ac9-00600832fe19
=============================================
frm_PrevCompany [CO]
frm_PrevCoCurr [CRCD]
frm_cTransportationInstalled [EV01]
frm_AcumulaITWTF4311 [ITWT]
frm_SY_55 [SY]
frm_RT_F6 [RT]
frm_KY_CodFornec [KY]
frm_FlagSupress_EV01 [EV01]
frm_PointerToF4311_GENLNG [GENLNG]
frm_cScrubABNumberResult_EV01 [EV01]
frm_cScrubABNoResult_EV01 [EV01]
frm_cLogsAtLevelsOn_EV01 [EV01]
frm_mnXPIPrevOrderNumber_DOCO [DOCO]
frm_szXPIPrevOrderType_DCTO [DCTO]
frm_szXPIPrevOrderCompany_KCOO [KCOO]
frm_szXPIPevOrderSuffix_SFXO [SFXO]
frm_cPublishWarningFlag_EV01 [EV01]
frm_LNIDF4311 [LNID]
frm_ITWTF4311 [ITWT]
frm_NumerodaCarga [SHPN]
frm_RoutingStepNumberF4942 [RSSN]
frm_NumerodaCargaANT [SHPN]

=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57df3d4-a23a-11d0-a204-0000f6728a56
=============================================
If PO cHeaderFirstCode [EV03] is equal to "1"
     Call App:P4310 Form:W4310B Version:SL VersionName                    
          GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
          GC SFXO:Order Suffix (wf) [SFXO] -> OrderSuffix [SFXO]
          GC Branch/ Plant [MCU] -> BranchPlant [MCU]
Else
     Call App:P4310 Form:W4310A Version:SL VersionName                    
          GC Order Number [DOCO] -> OrderNumber [DOCO]
          GC Or Ty [DCTO] -> OrderType [DCTO]
          GC Order Co [KCOO] -> OrderCompany [KCOO]
          GC SFXO:Order Suffix (wf) [SFXO] -> OrderSuffix [SFXO]
          GC Branch/ Plant [MCU] -> BranchPlant [MCU]
          GC Address Number [AN8] -> SupplierNumber [AN8]
          GC Ship To [SHAN] -> ShipToNumber [SHAN]
          UNDEFINED <> RequestedDate [DRQJ]
          GC Order Date [TRDJ] -> OrderDate [TRDJ]
          UNDEFINED <> PromisedDeliveryDate [PDDJ]
          UNDEFINED <> CancelDate [CNDJ]
          UNDEFINED <> LandedCostRule [PRP5]
          UNDEFINED <> CurrencyMode [CRRM]
          UNDEFINED <> TransactionCurrencyCode [CRCD]
          UNDEFINED <> CurrencyConversionRate [CRR]
          UNDEFINED <> CompanyCurrencyCode [CRDC]
          UNDEFINED <> SourceOfFormCall [EV01]
          UNDEFINED <> JobNumber [JOBS]
          UNDEFINED <> ComputerID [CTID]
          UNDEFINED <> DetailFormCancelled [EV02]
          UNDEFINED <> PreviousOrderNumber [LDOC]
          UNDEFINED <> szPrevOrderType [OCTO]
          GC Hd CD [HOLD] -> szHoldOrdersCode [HOLD]
          UNDEFINED <> szDetailSuffix [SFX]
          UNDEFINED <> cAddChangeOrder [EV03]
          UNDEFINED <> ActualDeliveryDate [ADDJ]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TSID]
          UNDEFINED <> mnItemNumber [ITM]
          UNDEFINED <> mnQuantity [UORG]
          UNDEFINED <> szUnitOfMeasure [UOM]
          UNDEFINED <> mnROSI [ROSI]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szProjectGlClass [GLC]
          UNDEFINED <> mnTaskOrderNumber [DOCO]
          UNDEFINED <> szTaskOrderType [DCTO]
End If
//
// Issue 3707 - Herrera
//
VA frm_AcumulaITWTF4311 [ITWT] = 0
//
F4311.Select  [Index 1: Doc No, Order Type, + 1]
     GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
     GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     GC Or Ty [DCTO] = TK Order Type [DCTO]
F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
     VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
     VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
While SV File_IO_Status is equal to CO SUCCESS
     F4942.Select  [Index 1: ShipmentNumber]
          GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          GC Or Ty [DCTO] = TK Order Type [DCTO]
          GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
          VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
     F4942.FetchNext  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     If SV File_IO_Status is equal to CO SUCCESS
          F4942.Update  [Index 1: ShipmentNumber]
               VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
               VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
               GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
               GC Or Ty [DCTO] = TK Order Type [DCTO]
               GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
               VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
               VA frm_ITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     End If
     F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
          VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
          VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
End While
F4942.Select  [Index 1: ShipmentNumber]
     GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     GC Or Ty [DCTO] = TK Order Type [DCTO]
     GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
F4942.FetchNext  [Index 1: ShipmentNumber]
     VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
     VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     VA frm_ITWTF4311 [ITWT] <- TK Shipment Weight [WGTS]
While SV File_IO_Status is equal to CO SUCCESS
     If VA frm_NumerodaCarga [SHPN] is equal to VA frm_NumerodaCargaANT [SHPN]
          VA frm_AcumulaITWTF4311 [ITWT] = [VA frm_AcumulaITWTF4311 [ITWT]]+[VA frm_ITWTF4311 [ITWT]]
     Else
          VA frm_AcumulaITWTF4311 [ITWT] = [VA frm_ITWTF4311 [ITWT]]
     End If
     F4215.Update  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
          VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     F4941.Select  [Index 1: Shipment Number,Routing Step #]
          VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
     F4941.FetchNext  [Index 1: Shipment Number,Routing Step #]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     If SV File_IO_Status is equal to CO SUCCESS
          F4941.Update  [Index 1: Shipment Number,Routing Step #]
               VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
               VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
               VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     End If
     VA frm_NumerodaCargaANT [SHPN] = VA frm_NumerodaCarga [SHPN]
     //
     F4942.FetchNext  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
          VA frm_ITWTF4311 [ITWT] <- TK Shipment Weight [WGTS]
End While


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Find records
Event: Button Clicked
Event GUID: 5ef15c43-e064-11d1-9ac9-00600832fe19
=============================================
VA frm_PrevCoCurr [CRCD] = <Blank>
VA frm_PrevCompany [CO] = <Blank>
// 
// ---------------------------------------------------------------------------
//      Do not perform FIND if there is any error
//    SAR 6015457 - Cannot use ErrorCount() because of HTML issue
// SAR 6047248 Begin - Change the If statement to use the new VA
// frm_cScrubABNoResult_EV01 variable
// ---------------------------------------------------------------------------
// 
If VA frm_cScrubABNoResult_EV01 [EV01] is equal to "2"
     // SAR 6047248 End
     Suppress Find
End If


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Add record
Event: Button Clicked
Event GUID: f57df3d5-a23a-11d0-a204-0000f6728a56
=============================================
If PO cHeaderFirstCode [EV03] is equal to "1"
     Call App:P4310 Form:W4310B Version:SL VersionName                    
          UNDEFINED <> DocumentOrderInvoiceE [DOCO]
          UNDEFINED <> OrderType [DCTO]
          UNDEFINED <> CompanyKeyOrderNo [KCOO]
          UNDEFINED <> OrderSuffix [SFXO]
          FC Business Unit [MCU] <> BranchPlant [MCU]
Else
     Call App:P4310 Form:W4310A Version:SL VersionName                    
          UNDEFINED <> OrderNumber [DOCO]
          UNDEFINED <> OrderType [DCTO]
          UNDEFINED <> OrderCompany [KCOO]
          UNDEFINED <> OrderSuffix [SFXO]
          FC Business Unit [MCU] <> BranchPlant [MCU]
          UNDEFINED <> SupplierNumber [AN8]
          UNDEFINED <> ShipToNumber [SHAN]
          UNDEFINED <> RequestedDate [DRQJ]
          UNDEFINED <> OrderDate [TRDJ]
          UNDEFINED <> PromisedDeliveryDate [PDDJ]
          UNDEFINED <> CancelDate [CNDJ]
          UNDEFINED <> LandedCostRule [PRP5]
          UNDEFINED <> CurrencyMode [CRRM]
          UNDEFINED <> TransactionCurrencyCode [CRCD]
          UNDEFINED <> CurrencyConversionRate [CRR]
          UNDEFINED <> CompanyCurrencyCode [CRDC]
          UNDEFINED <> SourceOfFormCall [EV01]
          UNDEFINED <> JobNumber [JOBS]
          UNDEFINED <> ComputerID [CTID]
          UNDEFINED <> DetailFormCancelled [EV02]
          UNDEFINED <> PreviousOrderNumber [LDOC]
          UNDEFINED <> szPrevOrderType [OCTO]
          UNDEFINED <> szHoldOrdersCode [HOLD]
          UNDEFINED <> szDetailSuffix [SFX]
          <Blank> <> cAddChangeOrder [EV03]
          UNDEFINED <> ActualDeliveryDate [ADDJ]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED <> mnTransactionID [TSID]
          UNDEFINED <> mnItemNumber [ITM]
          UNDEFINED <> mnQuantity [UORG]
          UNDEFINED <> szUnitOfMeasure [UOM]
          UNDEFINED <> mnROSI [ROSI]
          UNDEFINED <> mnProjectNumber [PRJM]
          UNDEFINED <> szProjectGlClass [GLC]
          UNDEFINED <> mnTaskOrderNumber [DOCO]
          UNDEFINED <> szTaskOrderType [DCTO]
End If


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Copy record
Event: Button Clicked
Event GUID: f57df3d6-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310A Version:SL VersionName
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Delete record
Event: Button Clicked
Event GUID: f57df3dc-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310G Version:PO szOpenOrderInquiry
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> Order Company [KCOO]
     GC Address Number [AN8] <> SupplierNumber [AN8]
     GC Branch/ Plant [MCU] <> BranchPlant [MCU]
     UNDEFINED <> ShortItemNumber [ITM]
     UNDEFINED <> AccountID [AID]
     UNDEFINED <> RelatedOrderNumber [RORN]
     UNDEFINED <> RelatedOrderType [RCTO]
     UNDEFINED <> RelatedOrderCompany [RKCO]
     UNDEFINED <> OriginalOrderNumber [OGNO]
     UNDEFINED <> OriginalOrderType [OCTO]
     UNDEFINED <> OriginalOrderCompany [OKCO]
     UNDEFINED <> Subledger [SBL]
     UNDEFINED <> SubledgerType [SBLT]
     UNDEFINED <> cSourceOfFormCall [EV01]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Header Revision
Event: Button Clicked
Event GUID: f57df3d9-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310B Version: 
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Detail Revisions
Event: Button Clicked
Event GUID: f57df3dd-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     GC Address Number [AN8] -> SupplierNumber [AN8]
     GC Ship To [SHAN] -> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     UNDEFINED <> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     GC Hd CD [HOLD] -> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     UNDEFINED <> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]
//
// Issue 3707 - Herrera
//
VA frm_AcumulaITWTF4311 [ITWT] = 0
//
F4311.Select  [Index 1: Doc No, Order Type, + 1]
     GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
     GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     GC Or Ty [DCTO] = TK Order Type [DCTO]
F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
     VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
     VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
While SV File_IO_Status is equal to CO SUCCESS
     F4942.Select  [Index 1: ShipmentNumber]
          GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
          GC Or Ty [DCTO] = TK Order Type [DCTO]
          GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
          VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
     F4942.FetchNext  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     If SV File_IO_Status is equal to CO SUCCESS
          F4942.Update  [Index 1: ShipmentNumber]
               VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
               VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
               GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
               GC Or Ty [DCTO] = TK Order Type [DCTO]
               GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
               VA frm_LNIDF4311 [LNID] = TK Line Number [LNID]
               VA frm_ITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     End If
     F4311.FetchNext  [Index 1: Doc No, Order Type, + 1]
          VA frm_LNIDF4311 [LNID] <- TK Line Number [LNID]
          VA frm_ITWTF4311 [ITWT] <- TK Unit Weight [ITWT]
End While
F4942.Select  [Index 1: ShipmentNumber]
     GC Order Number [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO]
     GC Or Ty [DCTO] = TK Order Type [DCTO]
     GC Order Co [KCOO] = TK Order Company (Order Number) [KCOO]
F4942.FetchNext  [Index 1: ShipmentNumber]
     VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
     VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     VA frm_ITWTF4311 [ITWT] <- TK Shipment Weight [WGTS]
While SV File_IO_Status is equal to CO SUCCESS
     If VA frm_NumerodaCarga [SHPN] is equal to VA frm_NumerodaCargaANT [SHPN]
          VA frm_AcumulaITWTF4311 [ITWT] = [VA frm_AcumulaITWTF4311 [ITWT]]+[VA frm_ITWTF4311 [ITWT]]
     Else
          VA frm_AcumulaITWTF4311 [ITWT] = [VA frm_ITWTF4311 [ITWT]]
     End If
     F4215.Update  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
          VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     F4941.Select  [Index 1: Shipment Number,Routing Step #]
          VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
     F4941.FetchNext  [Index 1: Shipment Number,Routing Step #]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
     If SV File_IO_Status is equal to CO SUCCESS
          F4941.Update  [Index 1: Shipment Number,Routing Step #]
               VA frm_NumerodaCarga [SHPN] = TK Shipment Number [SHPN]
               VA frm_RoutingStepNumberF4942 [RSSN] = TK Routing Step Number [RSSN]
               VA frm_AcumulaITWTF4311 [ITWT] -> TK Shipment Weight [WGTS]
     End If
     VA frm_NumerodaCargaANT [SHPN] = VA frm_NumerodaCarga [SHPN]
     //
     F4942.FetchNext  [Index 1: ShipmentNumber]
          VA frm_NumerodaCarga [SHPN] <- TK Shipment Number [SHPN]
          VA frm_RoutingStepNumberF4942 [RSSN] <- TK Routing Step Number [RSSN]
          VA frm_ITWTF4311 [ITWT] <- TK Shipment Weight [WGTS]
End While


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Add Change Order
Event: Button Clicked
Event GUID: 5ef15c42-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4310 Form:W4310A Version: 
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     UNDEFINED <> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     "1" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC View All Change Orders
Event: Button Clicked
Event GUID: 5ef15c44-e064-11d1-9ac9-00600832fe19
=============================================
//      Pass in the GC Branch Plant to get the base currency code for change
//      orders; SAR 3548901
Call App:P4310 Form:W4310A Version:SL VersionName                    
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> OrderCompany [KCOO]
     "000" -> OrderSuffix [SFXO]
     GC Branch/ Plant [MCU] -> BranchPlant [MCU]
     UNDEFINED <> SupplierNumber [AN8]
     UNDEFINED <> ShipToNumber [SHAN]
     UNDEFINED <> RequestedDate [DRQJ]
     UNDEFINED <> OrderDate [TRDJ]
     UNDEFINED <> PromisedDeliveryDate [PDDJ]
     UNDEFINED <> CancelDate [CNDJ]
     UNDEFINED <> LandedCostRule [PRP5]
     UNDEFINED <> CurrencyMode [CRRM]
     UNDEFINED <> TransactionCurrencyCode [CRCD]
     UNDEFINED <> CurrencyConversionRate [CRR]
     UNDEFINED <> CompanyCurrencyCode [CRDC]
     UNDEFINED <> SourceOfFormCall [EV01]
     UNDEFINED <> JobNumber [JOBS]
     UNDEFINED <> ComputerID [CTID]
     UNDEFINED <> DetailFormCancelled [EV02]
     UNDEFINED <> PreviousOrderNumber [LDOC]
     UNDEFINED <> szPrevOrderType [OCTO]
     UNDEFINED <> szHoldOrdersCode [HOLD]
     UNDEFINED <> szDetailSuffix [SFX]
     "2" -> cAddChangeOrder [EV03]
     UNDEFINED <> ActualDeliveryDate [ADDJ]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TSID]
     UNDEFINED <> mnItemNumber [ITM]
     UNDEFINED <> mnQuantity [UORG]
     UNDEFINED <> szUnitOfMeasure [UOM]
     UNDEFINED <> mnROSI [ROSI]
     UNDEFINED <> mnProjectNumber [PRJM]
     UNDEFINED <> szProjectGlClass [GLC]
     UNDEFINED <> mnTaskOrderNumber [DOCO]
     UNDEFINED <> szTaskOrderType [DCTO]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Open Order Inquiry
Event: Button Clicked
Event GUID: db193cb2-543b-434f-90e8-b2873c2dc47d
=============================================
// ======================================================
//   Date       Programmer     SAR#                    Description
// 11/14/06  AB9050717    8082776   Open Order Inquiry Pulls in wr
// ======================================================
// Begin SAR 8082776 - To pass the correct order company into the form W4310G
Call App:P4310 Form:W4310G Version:Undefined
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> Order Company [KCOO]
     GC Address Number [AN8] <> SupplierNumber [AN8]
     GC Branch/ Plant [MCU] <> BranchPlant [MCU]
// End SAR 8082776


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Summary Information
Event: Button Clicked
Event GUID: f57df3d7-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P430114 Form:W430114A Version: 
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> cSupplierSelfService1 [SSS1]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Revisions Inquiry
Event: Button Clicked
Event GUID: 909329f6-a23d-11d0-a204-0000f6728a56
=============================================
Call App:P4319 Form:W4319A Version:PO InqChangeOrderVersion
     GC Order Number [DOCO] -> DocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> OrderType [DCTO]
     GC Order Co [KCOO] -> CompanyKeyOrderNo [KCOO]
     UNDEFINED <> OrderSuffix [SFXO]
     UNDEFINED <> Costcenter [MCU]
     UNDEFINED <> Addressnumber [AN8]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Recap
Event: Button Clicked
Event GUID: 5ef15c40-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P4310 Form:W4310C Version: 
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC SFXO:Order Suffix (wf) [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     GC Curr [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Financial Status Inquiry
Event: Button Clicked
Event GUID: 5ef15c41-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P44200 Form:W44200A Version:PO szFinancialStatusInquiry
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     GC Address Number [AN8] -> mnAddressNumber [AN8]
     UNDEFINED <> szDescription [DESC]
     GC Curr [CRCD] -> szCurrencyCodeFrom [CRCD]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Print Order (Cotação)
Event: Button Clicked
Event GUID: 683a48c1-ee5e-11d1-8dcc-0000f6782893
=============================================
//
// Issue 8063 - Valkiria - RBS - 20/05/05
// 
If PO cImprimeR5543501S [EV01] is equal to "1"
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "RBS43001"
     End If
     Call UBE:R5543501S Version:PO szPOPrintOnDemandVersion
          GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          GC Or Ty [DCTO] -> Ordertype [DCTO]
          GC Order Co [KCOO] -> Companykeyorderno [KCOO]
          GC SFXO:Order Suffix (wf) [SFXO] -> Ordersuffix [SFXO]
          UNDEFINED <> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
Else
     If PO szPOPrintOnDemandVersion [VL23] is equal to or empty <Blank>
     Or PO szPOPrintOnDemandVersion [VL23] is equal to or empty <NULL>
          PO szPOPrintOnDemandVersion [VL23] = "XJDE0003"
     End If
     // SAR 4801999 
     Call UBE:R43500 Version:PO szPOPrintOnDemandVersion
          GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
          GC Or Ty [DCTO] -> Ordertype [DCTO]
          GC Order Co [KCOO] -> Companykeyorderno [KCOO]
          UNDEFINED <> Ordersuffix [SFXO]
          "1" -> Modeprocessing [MODE]
          UNDEFINED <> Numberchangeorder [CORD]
End If
// SAR 4801999 


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Impressão de Ordem de Compra
Event: Button Clicked
Event GUID: 8ebf49fb-8ff3-4d92-83ce-b5e16871a391
=============================================
// Impressão de Ordem de compra (O2, O3, O4..)
Call UBE:R5543501N Version:RBS002
     GC Order Number [DOCO] -> Documentorderinvoice [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> Ordersuffix [SFXO]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Landed Cost Rules
Event: Button Clicked
Event GUID: 5ef15c45-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 4922900 Begins - Reconnect Call
Call App:P43291 Form:W43291A Version:Undefined
     GC Order Number [DOCO] -> OrderNumber [DOCO]
     GC Or Ty [DCTO] -> Ordertype [DCTO]
     GC Order Co [KCOO] -> Companykeyorderno [KCOO]
     "I" -> Modeprocessing [MODE]
     GC Curr [CRCD] -> CurrencyCode [CRCD]
// SAR 4922900 Ends


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Address Information
Event: Button Clicked
Event GUID: f57df3d8-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P4006 Form:W4006B Version:Undefined
     GC Address Number [AN8] <> AddressNumber [AN8]
     GC Ship To [SHAN] <> ShipToNumber [SHAN]
     GC Order Number [DOCO] <> OrderNumber [DOCO]
     GC Or Ty [DCTO] <> OrderType [DCTO]
     GC Order Co [KCOO] <> OrderCompany [KCOO]
     "P" <> CalledFromSales_S_OrPurch_P [EV01]
     UNDEFINED <> InquiryMode [EV02]
     UNDEFINED <> BatchOrderAddress [EV03]
     UNDEFINED <> EDIOrderAddress [EV04]
     UNDEFINED <> FileName [FILE]
     UNDEFINED <> EdiDocumentNumber [EDOC]
     UNDEFINED <> EdiDocumentType [EDCT]
     UNDEFINED <> CompanyKeyEdiOrder [EKCO]
     UNDEFINED <> EdiLineNumber [EDLN]
     UNDEFINED <> cShoppingCartMode [CART]
     GC Order Date [TRDJ] <> jdDateTransactionJulian [TRDJ]
     UNDEFINED <> mnDeliverToNumber [DVAN]
     UNDEFINED <> mnForwardedToNumber [FTAN]
     UNDEFINED <> mnInvoiceToNumber [ITAN]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Supplier Master  Information
Event: Button Clicked
Event GUID: f57df3da-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P04012 Form:W04012D Version:PO szSupplierMasterVersion
     GC Address Number [AN8] <> mnAddressNumber [AN8]
     UNDEFINED <> szCountryForPayroll [CCPR]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Order Header Attachments
Event: Button Clicked
Event GUID: f57df3db-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 6619111 Begin
// Change Mode from Display to Edit 
Media Object Structures(GT4301, <Default Media Object>, <Edit>, <First Text Item>, FC PRT1:Generic Text Indicator (wf), GC OrderNumber, GC OrTy, GC OrderCo, GC SFXO:Order Suffix (wf))
If FC PRT1:Generic Text Indicator (wf) [PRT1] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Current Row>, <Yes>)
Else
     Set Grid Text Indicator(FC Grid, <Current Row>, <No>, )
End If


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Log Details
Event: Button Clicked
Event GUID: 5ef15c46-e064-11d1-9ac9-00600832fe19
=============================================
// SAR 6585679 Begin Call New APP P4305 when New Subcontracts Logs is ON in
// 40/VF
If VA frm_cLogsAtLevelsOn_EV01 [EV01] is equal to "1"
     Call App:P4305 Form:W4305A Version:PO szLogsEntryVersion
          GC Order Number [DOCO] -> mnDocument_Order_No_DOCO [DOCO]
          GC Or Ty [DCTO] -> szOrder_F4305_Type_DCTO [DCTO]
          GC Order Co [KCOO] -> szOrder_Company_Order_KCOO [KCOO]
          "000" -> szOrder_F4305_Suffix_OSFX [SFXO]
          "01" -> szLogHierarchyLevel_LOGH [LOGH]
          GC Address Number [AN8] -> mnSubcontractor_AN8 [AN8]
          GC Branch/ Plant [MCU] -> szProject_MCU [MCU]
          "E" -> cCallType_EV01 [EV01]
          PO cJobProject [EV01] -> cP4310PO_JobProject_EV01 [EV01]
          "2" -> cCallMode_EV01 [EV01]
Else
     // SAR 6585679 End
     Call App:P4303 Form:W4303A Version: 
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
          UNDEFINED <> cCommitmentLogType [LGTY]
          UNDEFINED <> mnLogSequenceNumber [LGNO]
          <Blank> -> cCallType [EV01]
End If


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Regional Information
Event: Button Clicked
Event GUID: c78582ef-a240-11d0-a204-0000f6728a56
=============================================
// SAR 5808527 Begin - Replace the above function with the new one
P4310_PlugAndPlay_N7001480(N7001480.P4310_PlugAndPlay_N7001480)
     UNDEFINED <> szCountry [CTR]
     UNDEFINED <> szCompany [CO]
     "P4310" -> szCallingAppl [PID]
     SL VersionName -> szCallingVers [VERS]
     UNDEFINED <> mnJobnumberA [JOBS]
     "W4310I" -> szCallingForm [FID]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> szOrderSuffix [SFXO]
     UNDEFINED <> mnLineNumber [LNID]
     UNDEFINED <> szComputerID [CTID]
     "XIT" -> szFormAction [FATN]
     UNDEFINED <> mnProcessID [PEID]
     UNDEFINED <> mnTransactionID [TCID]
     UNDEFINED <> szOriginalOrderNumber [OORN]
     UNDEFINED <> szOriginalOrderType [OCTO]
     UNDEFINED <> szCompanyKeyOriginal [OKCO]
// SAR 5808527 End


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Work With Shipments
Event: Button Clicked
Event GUID: 5c3b3661-4aae-11d3-b031-00105a1bfee6
=============================================
// 
// SAR 3059884 Begin
If GC Shipment Number [SHPN] is greater than "0"
     Call App:P4915 Form:W4915B Version:PO szInboundTransportationVersion
          UNDEFINED <> mnShipmentNumber [SHPN]
          UNDEFINED <> mnRoutingStepNumber [RSSN]
          UNDEFINED <> szBusiness_Unit_F4215 [MCU]
          GC Ship To [SHAN] -> mnAddress_Number__Ship_To_F421 [SHAN]
          UNDEFINED <> mnAddress_Number_F4215 [AN8]
          GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
          GC Or Ty [DCTO] -> szOrderType [DCTO]
          UNDEFINED <> mnTransportationJobNumber [JOBS]
End If
// SAR 3059884  End
// 


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Shipment Status
Event: Button Clicked
Event GUID: 5c3b3662-4aae-11d3-b031-00105a1bfee6
=============================================
// 
// SAR 3059884     begin
If GC Shipment Number [SHPN] is greater than "0"
     Call App:P4947 Form:W4947A Version:PO szInboundTransportationVersion
          GC Shipment Number [SHPN] -> mnShipmentNumber [SHPN]
          UNDEFINED <> mnRoutingStepNumber [RSSN]
          UNDEFINED <> szBusinessUnit [MCU]
          UNDEFINED <> mnShipTo [SHAN]
          UNDEFINED <> mnSoldTo [AN8]
          UNDEFINED <> mnDocumentOrderInvoiceE [DOCO]
          UNDEFINED <> szOrderType [DCTO]
End If
// SAR 3059884     end
// 


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Externally Publish this purchase order to the supplier
Event: Button Clicked
Event GUID: 0341974a-cd42-41eb-aea4-83df5df89f0b
=============================================
// BEGIN SAR 7123652
If GC Order Number [DOCO] is not equal to VA frm_mnXPIPrevOrderNumber_DOCO [DOCO]
Or GC Or Ty [DCTO] is not equal to VA frm_szXPIPrevOrderType_DCTO [DCTO]
Or GC Order Co [KCOO] is not equal to VA frm_szXPIPrevOrderCompany_KCOO [KCOO]
Or GC SFXO:Order Suffix (wf) [SFXO] is not equal to VA frm_szXPIPevOrderSuffix_SFXO [SFXO]
     VA frm_cPublishWarningFlag_EV01 [EV01] = "0"
End If
PurchaseOrderExternalPublish(B4302160.PurchaseOrderExternalPublish)
     GC Order Number [DOCO] -> mnOrderNumber [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szOrderCompany [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> szOrderSuffix [SFXO]
     VA frm_cPublishWarningFlag_EV01 [EV01] <> cExternalPublishWarningFlag [EV01]
// 12580420 - GLN - B
PurchaseOrderExternalPublish2(B4302160.PurchaseOrderExternalPublish2)
     GC Order Number [DOCO] -> mnOrderNumber [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szOrderCompany [KCOO]
     GC SFXO:Order Suffix (wf) [SFXO] -> szOrderSuffix [SFXO]
     VA frm_cPublishWarningFlag_EV01 [EV01] <> cExternalPublishWarningFlag [EV01]
// 12580420 - GLN - E
VA frm_mnXPIPrevOrderNumber_DOCO [DOCO] = GC Order Number [DOCO]
VA frm_szXPIPrevOrderType_DCTO [DCTO] = GC Or Ty [DCTO]
VA frm_szXPIPrevOrderCompany_KCOO [KCOO] = GC Order Co [KCOO]
VA frm_szXPIPevOrderSuffix_SFXO [SFXO] = GC SFXO:Order Suffix (wf) [SFXO]
// END SAR 7123652


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Style Purchase Order Matrix Entry Revisions
Event: Button Clicked
Event GUID: e1e500bc-6423-4342-a6d9-a8555576d8df
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szUserId_USER [USER]
evt_mnJobNumber_JOBS [JOBS]
----------------------------------------
// SAR 8956903 - Apparel Management
VA evt_szUserId_USER [USER] = SL UserID
If PO szStyleMatrixEntryVersion [VERS] is equal to or empty <Blank>
     PO szStyleMatrixEntryVersion [VERS] = "ZJDE0003"
End If
MatrixSeizureForShipmentConf(BCW31.MatrixSeizureForShipmentConf)
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Branch/ Plant [MCU] -> szCostCenter [MCU]
     "0" -> mnPickSlipNumber [PSN]
     <Blank> -> szCommodityCode [CDCD]
     <Blank> -> szReference1 [VR01]
     <Blank> -> szStatusCodeNext [NXTR]
     <Blank> -> szStatusCodeLast [LTTR]
     VA evt_mnJobNumber_JOBS [JOBS] <> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] <> szUserId [USER]
     "F4311" -> szC9FILE_File [C9FILE]
Call App:PCW10 Form:WCW10B Version:PO szStyleMatrixEntryVersion
     VA evt_mnJobNumber_JOBS [JOBS] -> mnJobnumberA [JOBS]
     VA evt_szUserId_USER [USER] -> szUserId [USER]
     "3" -> MatrixType [EV01]
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     "0" -> QtyControle [UORG]
     "F4311" -> szC9FILE_File [C9FILE]
     "EP4310" -> szCallingAPPLProgramId [PID]
     SL VersionName -> szPurchaseOrderPOVersion [VERS]
     GC Address Number [AN8] -> mnSoldTo [AN8]
     GC Ship To [SHAN] -> mnShipTo [AN8]
     GC Order Date [TRDJ] -> jdOrderDate [JDATE]
FCW20.Delete  [Index 1: Primary]
     VA evt_mnJobNumber_JOBS [JOBS] = TK Job Number [JOBS]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: HC Cartão de Visitas
Event: Button Clicked
Event GUID: 3e7e0ac7-68d0-402e-a868-f2688232f2eb
=============================================
Call App:P5504CVI Form:W5504CVIA Version:Undefined
     GC Order Co [KCOO] -> szCompanyKeyOrderNo [KCOO]
     GC Order Number [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
     GC Or Ty [DCTO] -> szOrderType [DCTO]
     "999,000" -> mnLineNumber [LNID]


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: FC Long Address Number_ALKY
Event: Control Exited/Changed-Inline
Event GUID: 644c5383-b182-11d2-a1b6-00104bc6f551
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cStringIsNumeric_EV01 [EV01]
evt_szSupplierErrorMessag_DTAI [DTAI]
----------------------------------------
// 
// ---------------------------------------------------------------------------
// The ALKY field is used for entry only.  The following business function uses
// the value entered into ALKY and finds the appropriate address book number,
// then populates the AN8 field - the field used for all the business function
// calls.    This way, a string or number may be entered and the app will
// function as usual.
// ---------------------------------------------------------------------------
// 
// SAR 7067232 Begin - Changing logic to call the N4303040 NER to find the
// supplier.  This function will return the supplier if you enter a unique
// name.  If the name entered is not unique (more than 1 exists) the N4303040
// will display all choices matching the criteria.  If nothing is found the
// N4303040 will not return an address number and then logic has been added to
// call the Address Book Search and Select form. 
// 
If FC Long Address Number_ALKY [ALKY] is not equal to <Blank>
And FC Long Address Number_ALKY [ALKY] is not equal to "*"
And FC Long Address Number_ALKY [ALKY] is not equal to <NULL>
     // 
     // SAR 7508544 Begin - Remove N4303040
     ScrubAddressNumberNER(N0100061.ScrubAddressNumberNER)
          FC Long Address Number_ALKY [ALKY] <> szAlternateAddressKey [ALKY]
          FC Address Number [AN8] <- mnAddressNumber [AN8]
          "5" -> cInputSelection [EV01]
          FC ADDRESS NUMBER [DL01] <- szNameAlpha [ALPH]
     VA frm_cScrubABNoResult_EV01 [EV01] = <NULL>
     If FC Address Number [AN8] is equal to <NULL>
          VA frm_cScrubABNoResult_EV01 [EV01] = "2"
     End If
     // =============
     ! AddandEditSupplier(N4303040.AddandEditSupplier)
     !      SV Form_ Mode -> idFormMode [GENLNG]
     !      FC Long Address Number_ALKY [ALKY] <> szLongAddressNumber [ALKY]
     !      FC ADDRESS NUMBER [DL01] <> szAddressNumberDescription [DL01]
     !      FC Address Number [AN8] <> mnAddressNumber [AN8]
     !      PO szNewSupplierAdd [VL12] -> szNewSupplierAdd [VL12]
     ! // 
     ! If FC Address Number [AN8] is equal to <Blank>
     ! OrFC Address Number [AN8] is equal to <NULL>
     ! OrFC Address Number [AN8] is equal to "0"
          ! Call App:P0101SL Form:W0101SLA Version:Undefined
          !      FC Long Address Number_ALKY [ALKY] <> Alternateaddresskey [ALKY]
          ! Clear Control Error(FC Long Address Number_ALKY [ALKY])
          ! AddandEditSupplier(N4303040.AddandEditSupplier)
          !      SV Form_ Mode -> idFormMode [GENLNG]
          !      FC Long Address Number_ALKY [ALKY] <> szLongAddressNumber [ALKY]
          !      FC ALPH..SupplierDescription(wf) [ALPH] <> szAddressNumberDescription [DL01]
          !      FC Address Number [AN8] <> mnAddressNumber [AN8]
          !      PO szNewSupplierAdd [VL12] -> szNewSupplierAdd [VL12]
     ! End If
     // SAR 7508544 End
     // 
Else
     FC Address Number [AN8] = "*"
     FC Long Address Number_ALKY [ALKY] = "*"
     FC ADDRESS NUMBER [DL01] = <Blank>
End If
// 
// SAR 7067232 End


=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Object: FC Grid
Event: Double Click on Row Header
Event GUID: f57df3d3-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 6619111 Begin
! //   Execute the Generic Text call attached to the Notes button.
! Press Button(HC Order Attach&ments)
Media Object Structures(GT4301, <Default Media Object>, <Display>, <First Text Item>, FC PRT1:Generic Text Indicator (wf), GC OrderNumber, GC OrTy, GC OrderCo, GC SFXO:Order Suffix (wf))
If FC PRT1:Generic Text Indicator (wf) [PRT1] is equal to "1"
     Set Grid Text Indicator(FC Grid, <Current Row>, <Yes>)
Else
     Set Grid Text Indicator(FC Grid, <Current Row>, <No>, )
End If



=============================================
EVENTS
=============================================
Form: Work With Order Headers - W4310I
Event: Dialog is Initialized
Event GUID: f57df3d1-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szErrorMessageID_DTAI [DTAI]
evt_cApparelEnabled_EV01 [EV01]
----------------------------------------
// ---------------------------------------------------------------------------
// Suppress amounts,  if proc options are set
// ---------------------------------------------------------------------------
//
If PO szProtectPriceFlag [VL09] is equal to "2"
     Hide Grid Column(FC Grid, GC ForeignAmount)
     Hide Grid Column(FC Grid, GC Amount)
End If
//
// ---------------------------------------------------------------------------
// Hide and show fields base on PO cJob/Project selection made.
// ---------------------------------------------------------------------------
//
If PO cJobProject [EV01] is equal to "1"
     Show Control(FC Job)
     Hide Control(FC Business Unit)
     Hide Control(FC Project)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to "2"
     Show Control(FC Project)
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
     Hide Control(FC Business Unit)
End If
//
If PO cJobProject [EV01] is equal to "3"
     Show Control(FC Business Unit)
     Hide Control(FC Project)
     Hide Control(FC Job)
     Hide Control(FC Branch/Plant [MCU])
End If
//
If PO cJobProject [EV01] is equal to or empty <Blank>
     Show Control(FC Branch/Plant [MCU])
     Hide Control(FC Project)
     Hide Control(FC Job)
     Hide Control(FC Business Unit)
End If
//
// ---------------------------------------------------------------------------
//   Assign a value '2' if you want to replace the workfiles with memory
//   arrays, otherwise use a value  '1'
// ---------------------------------------------------------------------------
//
FC EV01..UsesWorkfiles(wf) [EV01] = "2"
//
// ---------------------------------------------------------------------------
// Clear work fields for this Computer ID (in case a prior task ended abnormally
//    ---> this only happens if workfiles are used INSTEAD OF memory arrays
// ---------------------------------------------------------------------------
//
GetLocalComputerId(B9800181.GetLocalComputerId)
     FC CTID-Computer ID (wf) [CTID] <> szMachineKey [MKEY]
If FC EV01..UsesWorkfiles(wf) [EV01] is equal to "1"
     F4311ClearWorkFiles(XT4311Z1.F4311ClearWorkFiles)
          FC CTID-Computer ID (wf) [CTID] <> szComputerID [CTID]
          UNDEFINED <> mnJobNumber [JOBS]
          "1" <> cClearHeaderFile [EV01]
          "1" <> cClearDetailFile [EV02]
          UNDEFINED <> cErrorInClear [ERR]
          UNDEFINED <> mnLineNumber [LNID]
          "1" <> cUseWorkFiles [EV01]
          UNDEFINED <> szOrderSuffix [SFX0]
          UNDEFINED <> mnProcessID [PEID]
          UNDEFINED Could not find member in DSTR
End If
//
// ==========================================================================
//
// ---------------------------------------------------------------------------
//     Load the Branch/Plant filter field from the Form Interconnect
//     if available (not blank) else get the user's default branch/plant.
// ---------------------------------------------------------------------------
//
If FI BranchPlant [MCU] is equal to or empty <Blank>
     GetDefaultBranch(B4000370.GetDefaultBranch)
          FC Business Unit [MCU] <> szBranch [MCU]
          UNDEFINED <> szApprovalRouteCode [ARTG]
     If FC Business Unit [MCU] is equal to or empty <Blank>
          FC Business Unit [MCU] = "*"
     End If
Else
     FC Business Unit [MCU] = FI BranchPlant [MCU]
End If
//
// ---------------------------------------------------------------------------
//     Load Order Type filter  from Form Interconnect if available
//     else from the Processing Options.
// ---------------------------------------------------------------------------
//
If FI OrderType [DCTO] is equal to or empty <Blank>
     FC Order Type [DCTO] = PO szOrderType [DCT]
Else
     FC Order Type [DCTO] = FI OrderType [DCTO]
End If
//
// ---------------------------------------------------------------------------
// If Protect Order type proc. option is a 1, disable Order Type.
// ---------------------------------------------------------------------------
//
If PO szProtectOrderType [VL11] is equal to "1"
     Disable Control(FC Order Type [DCTO])
End If
//
// ---------------------------------------------------------------------------
//     Do not allow Purchase Order Additions if the Change Order
//     Processing Option has been set to '1'
// ---------------------------------------------------------------------------
//
If PO szChangeOrderProcessingOn [VL13] is equal to "1"
     Disable Control(FC )
     Disable Control(HC Copy)
End If
// BUG 12688937 - Commented the BSFN call, as caches XT4311Z1A and XT4311Z1B
// are no longer used anywhere
//
! F4311InitializeCaching(XT4311Z1.F4311InitializeCaching)
!      FC EV01..UsesWorkfiles(wf) [EV01] <> cUseWorkFiles [EV01]
//
VA frm_PrevCompany [CO] = <Blank>
VA frm_PrevCoCurr [CRCD] = <Blank>
//
// ---------------------------------------------------------------------------
//   If Processing option is blank, pass in ZJDE0001
// ---------------------------------------------------------------------------
//
SetP4310DefaultProcessingOption(B4302910.SetP4310DefaultProcessingOption)
     PO szSupplyDemandInquiry [VL20] <> szSupplyDemandInquiryVersion [VL20]
     PO szSupplierAnalysisVersion [VL21] <> szSupplierAnalysisVersion [VL21]
     PO szSupplierMasterVersion [VL22] <> szSupplierMasterVersion [VL22]
     PO szPOPrintOnDemandVersion [VL23] <> szPOPrintOnDemandVersion [VL23]
     PO InqItemAvailVersion [VERS] <> szItemAvailVersion [VERS]
     PO InqApprovalReviewVersion [VERS] <> szApprovalReviewVersion [VERS]
     PO InqReceiptRoutingVersion [VERS] <> szReceiptRoutingVersion [VERS]
     PO InqOpenReceiptsVersion [VERS] <> szOpenReceiptsVersion [VERS]
     PO InqChangeOrderVersion [VERS] <> szChangeOrderVersion [VERS]
     PO PurchasingLedgerVersion [VERS] <> szPurchasingLedgerVersion [VERS]
     PO szOpenOrderInquiry [VERS] <> szOpenOrderInquiryVersion [VERS]
     PO szFinancialStatusInquiry [VERS] <> szFinancialStatusInqVersion [VERS]
     PO szInboundTransportationVersion [VERS] <> szInboundTransportationVersion [VERS]
     PO szBlanketReleaseVersion [VERS] <> szBlanketReleaseVersion [VERS]
     PO jdDateTransactionJulian [TRDJ] <> jdDateTransactionJulian [TRDJ]
     PO szLogsEntryVersion [VERS] <> szLogsEntryVersion [VERS]
//
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY49" -> szDataItem [DTAI]
     VA frm_cTransportationInstalled [EV01] <- cModuleExistance [MEOW]
If VA frm_cTransportationInstalled [EV01] is not equal to "1"
     Hide Grid Column(FC Grid, GC ShipmentNumber)
     Disable Control(HC Work With &Shipment)
     Disable Control(HC Shipment S&tatus)
End If
// ---------------------------------------------------------------------------
// SAR 6585679
// Check UDC 40/VF to see If Subcontracts Logs Module is ON
// ---------------------------------------------------------------------------
GetUDC(X0005.GetUDC)
     "40" -> szSystemCode [SY]
     "VF" -> szRecordTypeCode [RT]
     "04" -> szUserDefinedCode [KY]
     "2.00" -> mnKeyFieldLength [AS]
     "1" -> cSuppressErrorMessage [EV01]
     VA evt_szErrorMessageID_DTAI [DTAI] <- szErrorMessageId [DTAI]
If VA evt_szErrorMessageID_DTAI [DTAI] is equal to or empty <Blank>
     VA frm_cLogsAtLevelsOn_EV01 [EV01] = "1"
End If
// ---------------------------------------------------------------------------
//
// SAR 6585679 Begin
// Subcontracts display if JobProject is 1 or 2
If PO cJobProject [EV01] is equal to ("1","2")
     Set Control Text(FC Address Number, TV Subcontractor)
     Set Grid Column Heading(FC Grid, GC SupplierDescription, TV Subcontractor Description)
     Set Form Title(TV Work With Contract Headers)
End If
// SAR 6585679 End
//
// SAR 8956903 - Apparel Management
GetEnvironmentValue(B9900410.GetEnvironmentValue)
     "SY41F" -> szDataItem [DTAI]
     VA evt_cApparelEnabled_EV01 [EV01] <- cModuleExistance [MEOW]
If VA evt_cApparelEnabled_EV01 [EV01] is not equal to "1"
     Disable Control(HC Style Matrix Entry)
End If

=============================================
Form: Work With Order Headers - W4310I
Event: Post Dialog is Initialized
Event GUID: 90932b47-a23d-11d0-a204-0000f6728a56
=============================================
FC AN8..Supplier(wf) [AN8] = "0"
FC ALPH..SupplierDescription(wf) [ALPH] = <Blank>
//
If PO CartoesVisita [EV01] is not equal to "S"
     Disable Control(HC Cartão de Visitas)
End If

=============================================
Form: Work With Order Headers - W4310I
Event: Grid Record is Fetched
Event GUID: f57df3d2-a23a-11d0-a204-0000f6728a56
=============================================
//
// =============
// ISSUE 251190 - Marília - Verifica Fornecedor quando opção Catálogo (O6)
VA frm_FlagSupress_EV01 [EV01] = <NULL>
If PO OpcaoCatalogo [EV01] is equal to "1"
     VA frm_SY_55 [SY] = "55"
     VA frm_RT_F6 [RT] = "F6"
     VA frm_KY_CodFornec [KY] = concat("%", concat([BC Address Number (F4301.0) [AN8]], "%"))
     F0005.FetchSingle  [Index 1: System, Type, Code]
          VA frm_SY_55 [SY] = TK Product Code [SY]
          VA frm_RT_F6 [RT] = TK User Defined Codes [RT]
          VA frm_KY_CodFornec [KY] Is Like TK User Defined Code [KY]
     ! If PO TpCatalogo [EV01] is equal to "R"
          ! // Recarga Cartucho (1001)
          ! If SV File_IO_Status is not equal to CO SUCCESS
               ! VA frm_FlagSupress_EV01 [EV01] = "S"
          ! End If
     ! Else
          // Fabesul
          If SV File_IO_Status is equal to CO SUCCESS
               VA frm_FlagSupress_EV01 [EV01] = "S"
          End If
     ! End If
End If
If VA frm_FlagSupress_EV01 [EV01] is equal to "S"
     Suppress Grid Line(FC Grid)
Else
     // =============
     Media Object Structures(GT4301, <Default Media Object>, <Exist>, FC PRT1:Generic Text Indicator (wf), BC Document (Order No, Invoice, (F4301) etc.), BC Order (F4301) Type, ...)
     If FC PRT1:Generic Text Indicator (wf) [PRT1] is equal to "1"
          Set Grid Text Indicator(FC Grid, <Current Row>, <Yes>)
     End If
     //
     If SL CurrencyProcessing is not equal to "N"
          If VA frm_PrevCompany [CO] is not equal to BC Order Company (Order Number) (F4301.0) [KCOO]
               RetrieveCompanyCurrencyCode(B0000128.RetrieveCompanyCurrencyCode)
                    BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompany [CO]
                    GC Base Curr [CRDC] <- szCurrencyCode [CRCD]
                    UNDEFINED <> cDetailedCurrencyRestatement [BKTX]
                    UNDEFINED <> cPostByCurrency [ABIN]
               VA frm_PrevCompany [CO] = BC Order Company (Order Number) (F4301.0) [KCOO]
               VA frm_PrevCoCurr [CRCD] = GC Base Curr [CRDC]
          Else
               GC Base Curr [CRDC] = VA frm_PrevCoCurr [CRCD]
          End If
     End If
     //
     If BC Address Number (F4301.0) [AN8] is not equal to FC AN8..Supplier(wf) [AN8]
          ScrubAddressNumber(B0100016.ScrubAddressNumber)
               UNDEFINED <> szAlternateAddressKey [ALKY]
               BC Address Number (F4301.0) [AN8] -> mnAddressNumber [AN8]
               UNDEFINED <> szTaxid [TAX]
               "2" -> cInputSelection [EV01]
               UNDEFINED <> cSuccessFlag [EV02]
               GC Supplier Description [ALPH] <- szNameAlpha [ALPH]
               UNDEFINED <> szLongAddressKey [MLNM]
          FC AN8..Supplier(wf) [AN8] = BC Address Number (F4301.0) [AN8]
          FC ALPH..SupplierDescription(wf) [ALPH] = GC Supplier Description [ALPH]
     Else
          GC Supplier Description [ALPH] = FC ALPH..SupplierDescription(wf) [ALPH]
     End If
     //
     //
     If VA frm_cTransportationInstalled [EV01] is equal to "1"
          //
          // ---------------------------------------------------------------------------
          // SAR 4637375 Do not get the Shipment Number form F4311T instead get from F4311
          // ---------------------------------------------------------------------------
          // SAR 6374281 Begin - Created new NER to retrieve the shipment number from
          // the F4311 table.  NER will cycle through F4311 records until line with
          // valid shipment number is found.
          // ---------------------------------------------------------------------------
          //
          GetPODetailShipmentNumber(N4302630.GetPODetailShipmentNumber)
               BC Order Company (Order Number) (F4301.0) [KCOO] -> szCompanyKeyOrderNo [KCOO]
               BC Document (Order No, Invoice, etc.) (F4301.0) [DOCO] -> mnDocumentOrderInvoiceE [DOCO]
               BC Order Type (F4301.0) [DCTO] -> szOrderType [DCTO]
               BC Order Suffix (F4301.0) [SFXO] -> szOrderSuffix [SFXO]
               GC Shipment Number [SHPN] <- mnShipmentNumber [SHPN]
          //
          //   SAR 6374281 End
          //
     End If
     //
     If PO cPrintPOViaSubsystem [EV05] is equal to "1"
          Disable Control(HC &Print Order Cotação)
     End If
End If




=============================================
EVENTS
=============================================
Form: Media Object - W4310J
Object: HC OK/Select
Event: Button Clicked
Event GUID: 15dc2a45-bf1d-4df9-8cc3-f37af862302c
=============================================
// SAR  6619550 begin move this logic to the Post Button Clicked event
! If FC UserCancel_EV01 [EV01] is not equal to "1"
     ! // SAR 6545010 - Use GT4301A instead of GT4301 for change order media obj
     ! Media Object Structures(GT4301A, <Default Media Object>, <Save>, FI cDetailGenericText_EV03, FI mnDocumentOrderInvoiceE, FI szOrderType, FI szCompanyKeyOrderNo, FI szOrderSuffix, ...)
! End If
! F4311EndDoc(XT4311Z1.F4311EndDoc) [Include in Transaction]
!      FI szComputerID [CTID] -> szComputerID [CTID]
!      FI mnJobnumberA [JOBS] -> mnJobNumber [JOBS]
!      "EP4310" -> szCallingApplicationName [PGM]
!      FI szVersionconsolidated [VER] -> szVersion [VERS]
!      FI szUser [USR0] -> szUserID [USER]
!      FI cUseWorkFiles [EV01] -> cUseWorkFiles [EV01]
!      "0" -> cConsolidateLines [EV02]
!      FI mnProcessID [PEID] <> mnProcessID [PEID]
!      FI mnTransactionID [TCID] -> mnTransactionID [TCID]
// SAR  6619550 begin move this logic to the Post Button Clicked event

=============================================
Form: Media Object - W4310J
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: b8403793-952b-4110-aa64-0955fe1f3d9e
=============================================
// SAR  6619550 begin move this logic to the Post Button Clicked event
If FC UserCancel_EV01 [EV01] is not equal to "1"
     // SAR 6545010 - Use GT4301A instead of GT4301 for change order media obj
     Media Object Structures(GT4301A, <Default Media Object>, <Save>, FI cDetailGenericText_EV03, FI mnDocumentOrderInvoiceE, FI szOrderType, FI szCompanyKeyOrderNo, FI szOrderSuffix, ...)
End If
F4311EndDoc(XT4311Z1.F4311EndDoc) [Include in Transaction]
     FI szComputerID [CTID] -> szComputerID [CTID]
     FI mnJobnumberA [JOBS] -> mnJobNumber [JOBS]
     "EP4310" -> szCallingApplicationName [PGM]
     FI szVersionconsolidated [VER] -> szVersion [VERS]
     FI szUser [USR0] -> szUserID [USER]
     FI cUseWorkFiles [EV01] -> cUseWorkFiles [EV01]
     "0" -> cConsolidateLines [EV02]
     FI mnProcessID [PEID] <> mnProcessID [PEID]
     FI mnTransactionID [TCID] -> mnTransactionID [TCID]
// SAR  6619550 begin move this logic to the Post Button Clicked event


=============================================
EVENTS
=============================================
Form: Media Object - W4310J
Object: HC User Cancel Button
Event: Button Clicked
Event GUID: a200310b-a1fd-4993-8669-a0fe734fc770
=============================================
FC UserCancel_EV01 [EV01] = "1"



=============================================
EVENTS
=============================================
Form: Media Object - W4310J
Event: Dialog is Initialized
Event GUID: 90e3cd25-b522-4e0d-8c2b-4ee73404f09b
=============================================
FC UserCancel_EV01 [EV01] = "0"

=============================================
Form: Media Object - W4310J
Event: Clear Screen Before Add
Event GUID: d8930c0d-008e-4408-b3db-0e929633af07
=============================================
Press Button(HC Can&cel)

=============================================
Form: Media Object - W4310J
Event: Post Dialog is Initialized
Event GUID: 60eb2ebb-aa07-4208-8b60-177509e7ca91
=============================================
// 
// ---------------------------------------------------------------------------
// SAR 6545010 Begin - using different media object structure so that the
// media object is attached to the order revision summary form instead of the
// work with orders form.
// ---------------------------------------------------------------------------
// 
Media Object Structures(GT4301A, <Default Media Object>, <Edit>, <First Text Item>, FI cDetailGenericText_EV03, FI mnDocumentOrderInvoiceE, FI szOrderType, FI szCompanyKeyOrderNo, FI szOrderSuffix, ...)
// 
// SAR 6545010 End
// 




=============================================
Form: Clauses - W4310K
Event: Form Variables
Event GUID: 42c2e879-4ffd-4324-88c6-1468aff6ad49
=============================================
frm_Clause_ID [CUKID]

=============================================
EVENTS
=============================================
Form: Clauses - W4310K
Object: HC OK/Select
Event: Button Clicked
Event GUID: 89ba1e64-99a0-43f4-9a88-fce963ff0069
=============================================
// This application involves only one table, so no TP needed.
Trigger Default Child Action(FC Clauses,  <Subform Save>)


=============================================
EVENTS
=============================================
Form: Clauses - W4310K
Object: HC Add/Modify Print Messages for Clauses
Event: Button Clicked
Event GUID: 9a42dc5a-47a2-42ca-a45c-b9b9ffaac95b
=============================================
Call App:P40162 Form:W40162D Version:Undefined



=============================================
EVENTS
=============================================
Form: Clauses - W4310K
Event: Dialog is Initialized
Event GUID: acca73e3-9d46-4b14-95f9-7059cafc7989
=============================================
VA frm_Clause_ID [CUKID] = FI mnClause_ID [CUKID]
FC Order Number [DOCO] = FI mnDocumentOrderInvoiceE [DOCO]
FC Order Type [DCTO] = FI szOrderType [DCTO]
FC Order Company [KCOO] = FI szCompanyKeyOrderNo [KCOO]

=============================================
Form: Clauses - W4310K
Event: Post Dialog is Initialized
Event GUID: 9b078c0b-2238-421d-b164-a4fd0cb09c79
=============================================
// Since the subform is controlled from the parent, child needs to be notified
// to pass  the form interconnect values. 
Notify Child(FC S4325A)
Call Function(FC Clauses, FC Initialize Clause)
Trigger Default Child Action(FC Clauses,  <Subform Find>)

=============================================
Form: Clauses - W4310K
Event: End Dialog
Event GUID: 77700151-250f-4242-b257-e629a5f5a81f
=============================================
FI mnClause_ID [CUKID] = VA frm_Clause_ID [CUKID]
Call Function(FC Clauses, FC Free Clause Resources)





=============================================
EVENTS
=============================================
Form: Date Revisions - W4310L
Event: Dialog is Initialized
Event GUID: 90932729-a23d-11d0-a204-0000f6728a56
=============================================
FC Order Company [KCOO] = FI CompanyKeyOrderNo [KCOO]
FC Order Suffix [SFXO] = FI OrderSuffix [SFXO]
FC Order Number [DOCO] = FI DocumentOrderInvoiceE [DOCO]
FC Line Number [LNID] = FI LineNumber [LNID]
FC Order Type [DCTO] = FI OrderType [DCTO]

=============================================
Form: Date Revisions - W4310L
Event: Update Record to DB - Before
Event GUID: 90932760-a23d-11d0-a204-0000f6728a56
=============================================
GetAuditInfo(B9800100.GetAuditInfo)
     BC User ID (F4311.0) [USER] <> szUserName [USER]
     BC Date - Updated (F4311.0) [UPMJ] <> jdDate [DTE]
     BC Time of Day (F4311.0) [TDAY] <> mnTime [TME0]
     BC Work Station ID (F4311.0) [JOBN] <> szWorkstation_UserId [JOBN]
     UNDEFINED <> szMachineKey [MKEY]
BC Program ID (F4311.0) [PID] = "EP4310"





=============================================
EVENTS
=============================================
Form: Order Header - Additional Information II - W4310M
Event: Dialog is Initialized
Event GUID: 12607f48-9621-45c7-875b-92cb420ef8e5
=============================================
// SAR 8164261 Classification code Enhancement
! ProcurementRetrieveVendorType(B4301530.ProcurementRetrieveVendorType)
!      "1" -> cSuppressErrorMessage [SUPPS]
!      Cannot resolve DS Member: 1 -> mnProcessID [PEID]
!      Cannot resolve DS Member: 2 -> mnTransactionID [TCID]
!      Cannot resolve DS Member: 3 -> szComputerID [CTID]
!      Cannot resolve DS Member: 4 -> mnJobnumberA [JOBS]
!      Cannot resolve DS Member: 5 -> szOrderSuffix [SFXO]
!      FI mnAddressNumber [AN8] -> mnAddressNumber [AN8]
!      FC Classification Code 01 [CLASS01] <- szClassificationCode01 [CLASS01]
!      FC Classification Code 02 [CLASS02] <- szClassificationCode02 [CLASS02]
!      FC Classification Code 03 [CLASS03] <- szClassificationCode03 [CLASS03]
!      FC Classification Code 04 [CLASS04] <- szClassificationCode04 [CLASS04]
!      FC Classification Code 05 [CLASS05] <- szClassificationCode05 [CLASS05]

=============================================
Form: Order Header - Additional Information II - W4310M
Event: Post Dialog is Initialized
Event GUID: d2e94d37-7414-4482-93af-f2bbd1fac26d
=============================================
// 
If FI cInteractiveMode [IMFOW] is not equal to "1"
     GetClassificationCodeForSupplier(B4301530.GetClassificationCodeForSupplier)
          <Blank> -> cSuppressErrorMessage [SUPPS]
          FI mnAddressNumber [AN8] -> mnAddressNumber [AN8]
          FC Classification Code 01 [CLASS01] <- szClassificationCode01 [CLASS01]
          FC Classification Code 02 [CLASS02] <- szClassificationCode02 [CLASS02]
          FC Classification Code 03 [CLASS03] <- szClassificationCode03 [CLASS03]
          FC Classification Code 04 [CLASS04] <- szClassificationCode04 [CLASS04]
          FC Classification Code 05 [CLASS05] <- szClassificationCode05 [CLASS05]
End If
// 











=============================================
EVENTS
=============================================
Form: ATENÇÃO - DATA DA SOLICITAÇÃO - W4310P
Event: Dialog is Initialized
Event GUID: 80a8089d-b629-4f99-b23f-8286ac37c49b
=============================================
// 819872 - Marília - Aviso Data da Solicitação deve ser Data da Viagem
// Section NOVA




=============================================
Form: Ordens de Compra x Mês x Conta Contábil - W4310Q
Event: Form Variables
Event GUID: 6fc63caf-f615-4a57-b86a-06bacac192c9
=============================================
frm_ProductCode [SY]
frm_UserDefinedCodes [RT]
frm_UserDefinedCode [KY]
frm_Description001 [DL01]
frm_OrderType01 [DCTO]
frm_OrderType02 [DCTO]
frm_OrderType03 [DCTO]
frm_OrderType04 [DCTO]
frm_OrderType05 [DCTO]
frm_OrderType06 [DCTO]
frm_OrderType07 [DCTO]
frm_OrderType08 [DCTO]
frm_OrderType09 [DCTO]
frm_OrderType10 [DCTO]
frm_FiscalYear1 [FY]
frm_PeriodNoGeneralLedge [PN]
frm_DataS10 [AA10]
frm_CostCenter [MCU]
frm_ObjectAccount [OBJ]
frm_Subsidiary [SUB]
frm_OriginalPoSoNumber [OORN]
frm_LedgerType [LT]
frm_MatchType [MATC]

=============================================
EVENTS
=============================================
Form: Ordens de Compra x Mês x Conta Contábil - W4310Q
Object: FC Account Number
Event: Control is Exited
Event GUID: 8adabacd-5bc3-42b1-a04c-78976df5e874
=============================================
ValidateAccountNumber(XX0901.ValidateAccountNumber)
     FC Account Number [ANI] -> szAccountNumber [ANI]
     FC Account ID [AID] <- szAccountID [AID]
     UNDEFINED <> szUnstructuredAccount [ANS]
     UNDEFINED <> szDatabaseBusinessUnit [MCU]
     UNDEFINED <> szDatabaseObject [OBJ]
     UNDEFINED <> szDatabaseSubsidiary [SUB]
     UNDEFINED <> szDisplayBusinessUnit [MCUR]
     UNDEFINED <> szDisplayObject [OBJA]
     UNDEFINED <> szDisplaySubsidiary [SUBA]
     UNDEFINED <> szAccountDescription [DL01]
     "7" -> cBasedOnFormat [EV01]
     UNDEFINED <> cFormatAccountNumberAs [EV02]
     UNDEFINED <> cIncludeAccountSymbol [EV03]
     UNDEFINED <> szErrorMessageID [EKEY]
     UNDEFINED <> cReturnErrorID [EV01]
     UNDEFINED <> szAccountCompany [CO]
     UNDEFINED <> szAccountCurrency [CRCD]
     UNDEFINED <> cAccountPostingEdit [PEC]
     UNDEFINED <> szAccountUnitOfMeasure [UM]
     UNDEFINED <> cModelAccountsFlag [FMOD]
     UNDEFINED <> cAccountDuplication [EV01]
F0901.FetchSingle  [Index 3: Account Id]
     FC Account ID [AID] = TK Account ID [AID]
If SV File_IO_Status is not equal to CO SUCCESS
     FC Account ID [AID] = <Blank>
End If



=============================================
EVENTS
=============================================
Form: Ordens de Compra x Mês x Conta Contábil - W4310Q
Event: Dialog is Initialized
Event GUID: a7b3be45-433b-4219-880c-ebb1ed7f9b77
=============================================
VA frm_ProductCode [SY] = "55"
VA frm_UserDefinedCodes [RT] = "VO"
VA frm_UserDefinedCode [KY] = "DOCCOMPRAS"
VA frm_Description001 [DL01] = <Blank>
F0005.FetchSingle  [Index 1: System, Type, Code]
     VA frm_ProductCode [SY] = TK Product Code [SY]
     VA frm_UserDefinedCodes [RT] = TK User Defined Codes [RT]
     VA frm_UserDefinedCode [KY] = TK User Defined Code [KY]
     VA frm_Description001 [DL01] <- TK Description [DL01]
VA frm_OrderType01 [DCTO] = substr([VA frm_Description001 [DL01]], "00", "2")
VA frm_OrderType02 [DCTO] = substr([VA frm_Description001 [DL01]], "03", "2")
VA frm_OrderType03 [DCTO] = substr([VA frm_Description001 [DL01]], "06", "2")
VA frm_OrderType04 [DCTO] = substr([VA frm_Description001 [DL01]], "09", "2")
VA frm_OrderType05 [DCTO] = substr([VA frm_Description001 [DL01]], "12", "2")
VA frm_OrderType06 [DCTO] = substr([VA frm_Description001 [DL01]], "15", "2")
VA frm_OrderType07 [DCTO] = substr([VA frm_Description001 [DL01]], "18", "2")
VA frm_OrderType08 [DCTO] = substr([VA frm_Description001 [DL01]], "21", "2")
VA frm_OrderType09 [DCTO] = substr([VA frm_Description001 [DL01]], "24", "2")
VA frm_OrderType10 [DCTO] = substr([VA frm_Description001 [DL01]], "27", "2")

=============================================
Form: Ordens de Compra x Mês x Conta Contábil - W4310Q
Event: Post Dialog is Initialized
Event GUID: f0054acd-7904-4722-9ec7-75aa5021e5a1
=============================================
FC Century [CTRY] = 20
If FI szAccountId [AID] is not equal to <NULL>
And FI szAccountId [AID] is not equal to <Blank>
     FC Account ID [AID] = FI szAccountId [AID]
     F0901.FetchSingle  [Index 3: Account Id]
          FC Account ID [AID] = TK Account ID [AID]
          VA frm_CostCenter [MCU] <- TK Business Unit [MCU]
          VA frm_ObjectAccount [OBJ] <- TK Object Account [OBJ]
          VA frm_Subsidiary [SUB] <- TK Subsidiary [SUB]
     FC Account Number [ANI] = concat(ltrim([VA frm_CostCenter [MCU]], <Blank>), concat(".", concat(rtrim([VA frm_ObjectAccount [OBJ]], <Blank>), concat(".", rtrim([VA frm_Subsidiary [SUB]], <Blank>)))))
     ConvertDateToString(B9800460.ConvertDateToString)
          FI jdDtForGLAndVouch1 [DGL] -> jdDateToConvert [DRQJ]
          VA frm_DataS10 [AA10] <- szDateConvertedToString [VC08A]
          "DMY" -> szDateformat [FRMT]
     FC G/L Period Number [PN] = substr([VA frm_DataS10 [AA10]], "3", "2")
     FC Fiscal Year [FY] = substr([VA frm_DataS10 [AA10]], "6", "2")
     Press Button(HC Find)
End If

=============================================
Form: Ordens de Compra x Mês x Conta Contábil - W4310Q
Event: Grid Record is Fetched
Event GUID: 49f6e74d-f0f9-4d28-bee5-a69c51d177ad
=============================================
GC Valor Empenhado [AN01] = 0
VA frm_OriginalPoSoNumber [OORN] = lpad([BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO]], "0", "8")
F4311.FetchSingle  [Index 6: Order Number, Order Type, +]
     BC Order Company (Order Number) (F4311.0) [KCOO] = TK Document Company (Original Order) [OKCO]
     VA frm_OriginalPoSoNumber [OORN] = TK Original Order Number [OORN]
     BC Order Type (F4311.0) [DCTO] = TK Original Order Type [OCTO]
     BC Line Number (F4311.0) [LNID] = TK Original Line Number [OGNO]
If SV File_IO_Status is not equal to CO SUCCESS
     If BC Status Code - Next (F4311.0) [NXTR] is not equal to "980"
          If BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType01 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType02 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType03 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType04 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType05 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType06 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType07 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType08 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType09 [DCTO]
          Or BC Order Type (F4311.0) [DCTO] is equal to VA frm_OrderType10 [DCTO]
               If BC Order Type (F4311.0) [DCTO] is equal to "OD"
                    VA frm_LedgerType [LT] = "AA"
                    VA frm_MatchType [MATC] = "1"
                    V5514DSP.FetchSingle
                         BC Order Company (Order Number) (F4311.0) [KCOO] = TK Order Company (Order Number) [KCOO][F4311.0]
                         BC Document (Order No, Invoice, etc.) (F4311.0) [DOCO] = TK Document (Order No, Invoice, etc.) [DOCO][F4311.0]
                         BC Order Type (F4311.0) [DCTO] = TK Order Type [DCTO][F4311.0]
                         BC Order Suffix (F4311.0) [SFXO] = TK Order Suffix [SFXO][F4311.0]
                         BC Line Number (F4311.0) [LNID] = TK Line Number [LNID][F4311.0]
                         VA frm_MatchType [MATC] <- TK Type - Match Record Type [MATC][F43121.0]
                         VA frm_LedgerType [LT] <- TK Ledger Types [LT][F0911.0]
                    If SV File_IO_Status is equal to CO SUCCESS
                         If BC Status Code - Next (F4311.0) [NXTR] is equal to "999"
                              GC Valor Empenhado [AN01] = BC Amount - Received (F4311.0) [AREC]
                         Else
                              GC Valor Empenhado [AN01] = [BC Amount - Received (F4311.0) [AREC]]+[BC Amount - Open (F4311.0) [AOPN]]
                         End If
                    Else
                         If BC Status Code - Next (F4311.0) [NXTR] is equal to "999"
                         Else
                              GC Valor Empenhado [AN01] = BC Amount - Open (F4311.0) [AOPN]
                         End If
                    End If
               Else
                    If BC Status Code - Next (F4311.0) [NXTR] is equal to "999"
                         GC Valor Empenhado [AN01] = BC Amount - Received (F4311.0) [AREC]
                    Else
                         GC Valor Empenhado [AN01] = [BC Amount - Received (F4311.0) [AREC]]+[BC Amount - Open (F4311.0) [AOPN]]
                    End If
               End If
          End If
     End If
Else
     Suppress Grid Line(FC Grid)
End If







