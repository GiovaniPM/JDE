
=============================================
Form: General Description Entry - W00092C
Event: Form Variables
Event GUID: 90933c9f-a23d-11d0-a204-0000f6728a56
=============================================
frm_1stPositionFilled [EV01]
frm_2ndPositionFilled [EV01]
frm_NERError [ERRC]
frm_ErrorMessageID [DTAI]
frm_User [USER]
frm_ProgramID [PID]
frm_JobName [JOBN]
frm_DateUpdated [UPMJ]
frm_TimeOfDay [TDAY]
frm_Remark1Verify [RMK]
frm_Remark2Verify [RMK2]
frm_VerifyDescription [DL01]
frm_RequestType [PSF1]
frm_PrimaryItemNumber [UITM]
frm_PrimaryItemNumber2 [UITM]
frm_FileName [FILE]
frm_SearchTypeVerify [AT1]
frm_SearchTypeF00091 [AT1]
frm_UDC_SystemCode [SY]
frm_UDC_CodeTable [RT]
frm_Remark1_SystemCode [SY1]
frm_Remark1_CodeTable [RT1]
frm_Remark2_SystemCode [SY2]
frm_Remark2_CodeTable [RT2]
frm_NumericKeyAlias1 [SAL3]
frm_NumericKeyAlias2 [SAL4]
frm_AlphaKeyAlias1 [SAL1]
frm_AlphaKeyAlias2 [SAL2]
frm_GenericTextIndicator [GENTXT]
frm_LastUniqueKeyUsed [UKID]
frm_NumericRelatedOrder [DOCO]
frm_DateEndingEffective [EFTE]
frm_InvalidAN8_DTAI [DTAI]
frm_MaxRow_MATH01 [MATH01]
frm_Row_MATH01 [MATH01]
frm_szUserDefinedCode [GDC1]
frm_szRemark1 [GDC3]
frm_szRemark2 [GDC4]
frm_szAmount1 [GDC2]
frm_szAmount2 [GDC7]
frm_szQuantity [GDC0]
frm_szEffectiveFrom [GDC5]
frm_szEffectiveThru [GDC6]
frm_szUserAddress [GDCD]
frm_szUserDocument [GDC8]
frm_szUserDate [GDCA]
frm_szUserDays [GDCC]
frm_BFTempDateEffective1_ABCX [ABCX]
grd_cGridRecordExist_EV01 [EV01]
frm_szUserTimeColumnTitle_GDCF [GDCF]
frm_szRemark3ColumnTitle_GDCE [GDCE]
frm_1stPositionDataItem_DTAI [DTAI]
frm_2ndPositionDataItem_DTAI [DTAI]
frm_3rdPositionDataItem_DTAI [DTAI]
frm_szColuna_RMK [RMK]
frm_szColuna_RMK2 [RMK2]
frm_szColuna_RMK3 [RMK3]
frm_mnColuna_AN8 [AN8]
frm_mnColuna_NUMB [NUMB]
frm_szCodigo_DL01 [DL01]
frm_szProductCode_SY [SY]
frm_szUserDefinedCodes_RT [RT]
frm_szAccountId_AID [AID]
frm_szNameRemark_RMK [RMK]
frm_szGenericText_TXT0 [TXT0]

=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC User Def Code
Event: Visual Assist Button Clicked
Event GUID: 6b6fbc44-1eb1-11d3-9757-0004ac9d2881
=============================================
// 
// SAR  8543878 - If no UDC is defined for this column and the user clicks on
// the visual assist button, then the warning "No UDC attached" (412A) will be
// thrown.                                 
If VA frm_UDC_SystemCode [SY] is equal to <Blank>
Or VA frm_UDC_CodeTable [RT] is equal to <Blank>
     Suppress Default Visual Assist Form
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC UserDef Code, "412A")
Else
     Suppress Default Visual Assist Form
     Call App:P0005S Form:W0005SB Version: 
          VA frm_UDC_SystemCode [SY] -> Systemcode [SY]
          VA frm_UDC_CodeTable [RT] -> Userdefinedcodes [RT]
          GC User Def Code [KY] <> Userdefinedcodevalue [KY]
          GC Description  [DL01] <> Description001 [DL01]
          UNDEFINED <> Description002 [DL02]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC Remark 
Event: Visual Assist Button Clicked
Event GUID: 410d28f7-e1eb-4b12-b8ca-a3d2a48dda28
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cPrimeiroCaracter_EV01 [EV01]
----------------------------------------
// SAR 8543878 - Attaching visual assist to the "Remark" column in the grid.
// If no visual assist is defined for this column and the user clicks on the
// visual assist button, then the warning "No UDC attached" (412A) will be
// thrown.
//
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK [RMK]], "0", "1")
If VA frm_szCodigo_DL01 [DL01] is not equal to "*"
     If VA frm_Remark1_SystemCode [SY1] is equal to <Blank>
     Or VA frm_Remark1_CodeTable [RT1] is equal to <Blank>
          Suppress Default Visual Assist Form
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Remark, "412A")
     Else
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_Remark1_SystemCode [SY1] -> Systemcode [SY]
               VA frm_Remark1_CodeTable [RT1] -> Userdefinedcodes [RT]
               GC Remark  [RMK] <> Userdefinedcodevalue [KY]
     End If
Else
     //
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/02/19 - Inicio
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK [RMK]], "0", "4")
     If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
          Suppress Default Visual Assist Form
          Call App:P40LITM Form:W40LITMA Version:Undefined
               GC Remark  [RMK] <> Identifier2nditem [LITM]
          F4101.FetchSingle  [Index 2: 2nd Item Number]
               GC Remark  [RMK] = TK 2nd Item Number [LITM]
               GC Generic Text 1 [TXT0] <- TK Description [DSC1]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
          Suppress Default Visual Assist Form
          Call App:P0101S Form:W0101SA Version:Undefined
               VA frm_mnColuna_AN8 [AN8] <> AddressNumber [AN8]
          F0101.FetchSingle  [Index 1: Address #]
               VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
               GC Generic Text 1 [TXT0] <- TK Name - Alpha [ALPH]
          GC Remark  [RMK] = [VA frm_mnColuna_AN8 [AN8]]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
          Suppress Default Visual Assist Form
          Call App:P0006S Form:W0006SA Version:Undefined
               GC Remark  [RMK] <> Business Unit [VC12A]
          F0006.FetchSingle  [Index 1: Cost Center]
               GC Remark  [RMK] = TK Business Unit [MCU]
               GC Generic Text 1 [TXT0] <- TK Description - Compressed [DC]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
          Suppress Default Visual Assist Form
          Call App:P12IS Form:W12ISB Version:Undefined
               VA frm_mnColuna_NUMB [NUMB] <> AssetItemNumber [NUMB]
          F1201.FetchSingle  [Index 1: Item Number]
               VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
               GC Generic Text 1 [TXT0] <- TK Description [DL01]
          GC Remark  [RMK] = [VA frm_mnColuna_NUMB [NUMB]]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
          Suppress Default Visual Assist Form
          Call App:P0010S Form:W0010SA Version:Undefined
               GC Remark  [RMK] <> Company [CO]
          F0010.FetchSingle  [Index 1: Company]
               GC Remark  [RMK] = TK Company [CO]
               GC Generic Text 1 [TXT0] <- TK Name [NAME]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
          VA frm_szProductCode_SY [SY] = "00"
          VA frm_szUserDefinedCodes_RT [RT] = "01"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remark  [RMK] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remark  [RMK] -> szUserDefinedCode [KY]
               GC Generic Text 1 [TXT0] <> szDescription001 [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
          Suppress Default Visual Assist Form
          Call App:P0901S Form:W0901SA Version:Undefined
               GC Remark  [RMK] <> Acctnoinputmode [ANI]
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Remark  [RMK] -> szAccountNumber [ANI]
               VA frm_szAccountId_AID [AID] <> szAccountID [AID]
               "7" -> cBasedOnFormat [EV01]
          F0901.FetchSingle  [Index 3: Account Id]
               VA frm_szAccountId_AID [AID] = TK Account ID [AID]
               GC Generic Text 1 [TXT0] <- TK Description [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
          Suppress Default Visual Assist Form
          Call App:P4203 Form:W4203A Version:Undefined
               GC Remark  [RMK] <> LineType [LNTY]
          F40205.FetchSingle  [Index 1: line type file]
               GC Remark  [RMK] = TK Line Type [LNTY]
               GC Generic Text 1 [TXT0] <- TK Description - Line Type [LNDS]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
          VA frm_szProductCode_SY [SY] = "01"
          VA frm_szUserDefinedCodes_RT [RT] = "07"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remark  [RMK] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remark  [RMK] -> szUserDefinedCode [KY]
               GC Generic Text 1 [TXT0] <> szDescription001 [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
          VA frm_szProductCode_SY [SY] = "57"
          VA frm_szUserDefinedCodes_RT [RT] = "UN"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remark  [RMK] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remark  [RMK] -> szUserDefinedCode [KY]
               GC Generic Text 1 [TXT0] <> szDescription001 [DL01]
     End If
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: General Description Entry - W00092C
Object: GC Remark 
Event: Col is Exited
Event GUID: 22235a79-3cec-4569-8c48-ef212665003e
=============================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK [RMK]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [GC Remark  [RMK]]
VA frm_mnColuna_NUMB [NUMB] = [GC Remark  [RMK]]
VA frm_szNameRemark_RMK [RMK] = [GC Remark  [RMK]]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC Remark, "E55XML04")
     End If
End If
GC Generic Text 1 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC Remarks Line 2
Event: Visual Assist Button Clicked
Event GUID: b2ce6d75-d983-4d0f-b0a4-91d205e03fb6
=============================================
// SAR 8543878 - Attaching visual assist to the "Remarks Line 2" column in the
// grid. If no visual assist is defined for this column and the user clicks
// the visual assist button, then the warning "No UDC Attached" (412A) will be
// thrown.
//
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK2 [RMK2]], "0", "1")
If VA frm_szCodigo_DL01 [DL01] is not equal to "*"
     If VA frm_Remark2_SystemCode [SY2] is equal to <Blank>
     Or VA frm_Remark2_CodeTable [RT2] is equal to <Blank>
          Suppress Default Visual Assist Form
          Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC RemarksLine 2, "412A")
     Else
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_Remark2_SystemCode [SY2] -> Systemcode [SY]
               VA frm_Remark2_CodeTable [RT2] -> Userdefinedcodes [RT]
               GC Remarks Line 2 [RMK2] <> Userdefinedcodevalue [KY]
     End If
Else
     //
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/02/19 - Inicio
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK2 [RMK2]], "0", "4")
     If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
          Suppress Default Visual Assist Form
          Call App:P40LITM Form:W40LITMA Version:Undefined
               GC Remarks Line 2 [RMK2] <> Identifier2nditem [LITM]
          F4101.FetchSingle  [Index 2: 2nd Item Number]
               GC Remarks Line 2 [RMK2] = TK 2nd Item Number [LITM]
               GC Generic Text 2 [TXT0] <- TK Description [DSC1]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
          Suppress Default Visual Assist Form
          Call App:P0101S Form:W0101SA Version:Undefined
               VA frm_mnColuna_AN8 [AN8] <> AddressNumber [AN8]
          F0101.FetchSingle  [Index 1: Address #]
               VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
               GC Generic Text 2 [TXT0] <- TK Name - Alpha [ALPH]
          GC Remarks Line 2 [RMK2] = [VA frm_mnColuna_AN8 [AN8]]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
          Suppress Default Visual Assist Form
          Call App:P0006S Form:W0006SA Version:Undefined
               GC Remarks Line 2 [RMK2] <> Business Unit [VC12A]
          F0006.FetchSingle  [Index 1: Cost Center]
               GC Remarks Line 2 [RMK2] = TK Business Unit [MCU]
               GC Generic Text 2 [TXT0] <- TK Description - Compressed [DC]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
          Suppress Default Visual Assist Form
          Call App:P12IS Form:W12ISB Version:Undefined
               VA frm_mnColuna_NUMB [NUMB] <> AssetItemNumber [NUMB]
          F1201.FetchSingle  [Index 1: Item Number]
               VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
               GC Generic Text 2 [TXT0] <- TK Description [DL01]
          GC Remarks Line 2 [RMK2] = [VA frm_mnColuna_NUMB [NUMB]]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
          Suppress Default Visual Assist Form
          Call App:P0010S Form:W0010SA Version:Undefined
               GC Remarks Line 2 [RMK2] <> Company [CO]
          F0010.FetchSingle  [Index 1: Company]
               GC Remarks Line 2 [RMK2] = TK Company [CO]
               GC Generic Text 2 [TXT0] <- TK Name [NAME]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
          VA frm_szProductCode_SY [SY] = "00"
          VA frm_szUserDefinedCodes_RT [RT] = "01"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remarks Line 2 [RMK2] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remarks Line 2 [RMK2] -> szUserDefinedCode [KY]
               GC Generic Text 2 [TXT0] <> szDescription001 [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
          Suppress Default Visual Assist Form
          Call App:P0901S Form:W0901SA Version:Undefined
               GC Remarks Line 2 [RMK2] <> Acctnoinputmode [ANI]
          ValidateAccountNumber(XX0901.ValidateAccountNumber)
               GC Remarks Line 2 [RMK2] -> szAccountNumber [ANI]
               VA frm_szAccountId_AID [AID] <> szAccountID [AID]
               "7" -> cBasedOnFormat [EV01]
          F0901.FetchSingle  [Index 3: Account Id]
               VA frm_szAccountId_AID [AID] = TK Account ID [AID]
               GC Generic Text 2 [TXT0] <- TK Description [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
          Suppress Default Visual Assist Form
          Call App:P4203 Form:W4203A Version:Undefined
               GC Remarks Line 2 [RMK2] <> LineType [LNTY]
          F40205.FetchSingle  [Index 1: line type file]
               GC Remarks Line 2 [RMK2] = TK Line Type [LNTY]
               GC Generic Text 2 [TXT0] <- TK Description - Line Type [LNDS]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
          VA frm_szProductCode_SY [SY] = "01"
          VA frm_szUserDefinedCodes_RT [RT] = "07"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remarks Line 2 [RMK2] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remarks Line 2 [RMK2] -> szUserDefinedCode [KY]
               GC Generic Text 2 [TXT0] <> szDescription001 [DL01]
     End If
     If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
          VA frm_szProductCode_SY [SY] = "57"
          VA frm_szUserDefinedCodes_RT [RT] = "UN"
          Suppress Default Visual Assist Form
          Call App:P0005S Form:W0005SB Version:Undefined
               VA frm_szProductCode_SY [SY] -> Systemcode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
               GC Remarks Line 2 [RMK2] <> Userdefinedcodevalue [KY]
          GetUDC(X0005.GetUDC)
               VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
               VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
               GC Remarks Line 2 [RMK2] -> szUserDefinedCode [KY]
               GC Generic Text 2 [TXT0] <> szDescription001 [DL01]
     End If
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     // Giovani Perotto Mesquita - 18/02/19 - Fim
     // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
End If

=============================================
Form: General Description Entry - W00092C
Object: GC Remarks Line 2
Event: Col is Exited
Event GUID: c8fe90f1-e548-4778-86f5-d7a6f3b676ea
=============================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK2 [RMK2]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [GC Remarks Line 2 [RMK2]]
VA frm_mnColuna_NUMB [NUMB] = [GC Remarks Line 2 [RMK2]]
VA frm_szNameRemark_RMK [RMK] = [GC Remarks Line 2 [RMK2]]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 2, "E55XML04")
     End If
End If
GC Generic Text 2 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC Remarks Line 3
Event: Visual Assist Button Clicked
Event GUID: 4ddf5075-95b3-47e4-beef-69cab24a2103
=============================================
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK3 [RMK3]], "0", "4")
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     Suppress Default Visual Assist Form
     Call App:P40LITM Form:W40LITMA Version:Undefined
          GC Remarks Line 3 [RMK3] <> Identifier2nditem [LITM]
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          GC Remarks Line 3 [RMK3] = TK 2nd Item Number [LITM]
          GC Generic Text 3 [TXT0] <- TK Description [DSC1]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     Suppress Default Visual Assist Form
     Call App:P0101S Form:W0101SA Version:Undefined
          VA frm_mnColuna_AN8 [AN8] <> AddressNumber [AN8]
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          GC Generic Text 3 [TXT0] <- TK Long Address Number [ALKY]
     GC Remarks Line 3 [RMK3] = [VA frm_mnColuna_AN8 [AN8]]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     Suppress Default Visual Assist Form
     Call App:P0006S Form:W0006SA Version:Undefined
          GC Remarks Line 3 [RMK3] <> Business Unit [VC12A]
     F0006.FetchSingle  [Index 1: Cost Center]
          GC Remarks Line 3 [RMK3] = TK Business Unit [MCU]
          GC Generic Text 3 [TXT0] <- TK Description - Compressed [DC]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISB Version:Undefined
          VA frm_mnColuna_NUMB [NUMB] <> AssetItemNumber [NUMB]
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          GC Generic Text 3 [TXT0] <- TK Description [DL01]
     GC Remarks Line 3 [RMK3] = [VA frm_mnColuna_NUMB [NUMB]]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     Suppress Default Visual Assist Form
     Call App:P0010S Form:W0010SA Version:Undefined
          GC Remarks Line 3 [RMK3] <> Company [CO]
     F0010.FetchSingle  [Index 1: Company]
          GC Remarks Line 3 [RMK3] = TK Company [CO]
          GC Generic Text 3 [TXT0] <- TK Name [NAME]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     Suppress Default Visual Assist Form
     Call App:P0005S Form:W0005SB Version:Undefined
          VA frm_szProductCode_SY [SY] -> Systemcode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
          GC Remarks Line 3 [RMK3] <> Userdefinedcodevalue [KY]
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          GC Remarks Line 3 [RMK3] -> szUserDefinedCode [KY]
          GC Generic Text 3 [TXT0] <> szDescription001 [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     Suppress Default Visual Assist Form
     Call App:P0901S Form:W0901SA Version:Undefined
          GC Remarks Line 3 [RMK3] <> Acctnoinputmode [ANI]
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          GC Remarks Line 3 [RMK3] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          GC Generic Text 3 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     Suppress Default Visual Assist Form
     Call App:P4203 Form:W4203A Version:Undefined
          GC Remarks Line 3 [RMK3] <> LineType [LNTY]
     F40205.FetchSingle  [Index 1: line type file]
          GC Remarks Line 3 [RMK3] = TK Line Type [LNTY]
          GC Generic Text 3 [TXT0] <- TK Description - Line Type [LNDS]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     Suppress Default Visual Assist Form
     Call App:P0005S Form:W0005SB Version:Undefined
          VA frm_szProductCode_SY [SY] -> Systemcode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
          GC Remarks Line 3 [RMK3] <> Userdefinedcodevalue [KY]
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          GC Remarks Line 3 [RMK3] -> szUserDefinedCode [KY]
          GC Generic Text 3 [TXT0] <> szDescription001 [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     Suppress Default Visual Assist Form
     Call App:P0005S Form:W0005SB Version:Undefined
          VA frm_szProductCode_SY [SY] -> Systemcode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> Userdefinedcodes [RT]
          GC Remarks Line 3 [RMK3] <> Userdefinedcodevalue [KY]
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          GC Remarks Line 3 [RMK3] -> szUserDefinedCode [KY]
          GC Generic Text 3 [TXT0] <> szDescription001 [DL01]
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: General Description Entry - W00092C
Object: GC Remarks Line 3
Event: Col is Exited
Event GUID: a8b89930-2004-435d-bd70-edcb21dea3ba
=============================================
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK3 [RMK3]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [GC Remarks Line 3 [RMK3]]
VA frm_mnColuna_NUMB [NUMB] = [GC Remarks Line 3 [RMK3]]
VA frm_szNameRemark_RMK [RMK] = [GC Remarks Line 3 [RMK3]]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
     If SV File_IO_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
     If SV Error_Status is not equal to CO SUCCESS
          Set Grid Cell Error(FC Grid, <Currently Selected Row>, GC RemarksLine 3, "E55XML04")
     End If
End If
GC Generic Text 3 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC Address Number
Event: Col Exited & Changed - Asynch
Event GUID: 5ef166f3-e064-11d1-9ac9-00600832fe19
=============================================
// 
// Retrieve Alpha Name
// 
// ----------------------------------------------------------------------------
//                            SAR # 2095912 dt 04/03/98
//            The BSFN is replaced because the existed one did not return the
//              error message and suppress error message flag.
//     If the Address Number entered is a valid one then the error is cleared.
// -----------------------------------------------------------------------------
If GC Address Number [AN8] is not equal to "0"
And GC Address Number [AN8] is not equal to <NULL>
And GC Address Number [AN8] is not equal to <Blank>
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          GC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Alpha Name [DL01] <- szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          VA frm_InvalidAN8_DTAI [DTAI] <- szErrorMessage [DTAI]
          UNDEFINED <> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
Else
     If GC Address Number [AN8] is equal to <Blank>
     Or GC Address Number [AN8] is equal to <NULL>
     Or GC Address Number [AN8] is equal to "0"
          VA frm_InvalidAN8_DTAI [DTAI] = "0"
     End If
End If
If VA frm_InvalidAN8_DTAI [DTAI] is equal to <Blank>
Or VA frm_InvalidAN8_DTAI [DTAI] is equal to <NULL>
Or VA frm_InvalidAN8_DTAI [DTAI] is equal to "0"
     Clear Grid Cell Error(FC Grid,  <Current Row>, GC AddressNumber)
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: GC Related PO/SO No
Event: Col Exited & Changed - Inline
Event GUID: 5ef166ec-e064-11d1-9ac9-00600832fe19
=============================================
ConvertStringToNumeric(B4000770.ConvertStringToNumeric)
     GC Related PO/SO No [RORN] -> szGenericString [DSC1]
     VA frm_NumericRelatedOrder [DOCO] <- mnNumericValue [ITM]
     UNDEFINED <> cErrorCode [ERRC]
MathNumericToStringZeroPad(B0000083.MathNumericToStringZeroPad)
     GC Related PO/SO No [RORN] <- szString [DL01]
     VA frm_NumericRelatedOrder [DOCO] -> mnMathNumeric [MATH01]
     "9" -> nSizeOfString [INT01]


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: HC OK/Select
Event: Button Clicked
Event GUID: f57dfbfc-a23a-11d0-a204-0000f6728a56
=============================================
VA frm_ProgramID [PID] = "P00092"
GetAuditInfo(B9800100.GetAuditInfo)
     VA frm_User [USER] <> szUserName [USER]
     VA frm_DateUpdated [UPMJ] <> jdDate [DTE]
     VA frm_TimeOfDay [TDAY] <> mnTime [TME0]
     VA frm_JobName [JOBN] <> szWorkstation_UserId [JOBN]
     UNDEFINED <> szMachineKey [MKEY]
// ===============================================================
// If form is in copy mode, verify the user entered key values before copying. 
// If values are incorrect stop processing.
// ===============================================================
If FI cCopyMode [EV01] is equal to "1"
     // SAR 6658268 Validate Sales Order Existence (DOCO,DCTO in F4201)
     If FC Supplemental Database Code [SDB] is equal to "SO"
          VerifySupplementalDBKeys(N0000158.VerifySupplementalDBKeys)
               FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
               FC Business Unit-1 [MCU] <> szBusinessUnit [MCU]
               FC Document Company-1 [KCO] <> szKeyCompany [KCO]
               FC Num. Key 1-1 [SBN1] <> mnNumericKey1 [SBN1]
               FC Num. Key 2-1 [SBN2] <> mnNumericKey2 [SBN2]
               FC Alpha Key 1-1 [SBA1] <> szAlphanumericKey1 [SBA1]
               FC Alpha Key 2-1 [SBA2] <> szAlphanumericKey2 [SBA2]
               VA frm_ErrorMessageID [DTAI] <> szErrorMessageID [DTAI]
          If VA frm_ErrorMessageID [DTAI] is not equal to <Blank>
          And VA frm_ErrorMessageID [DTAI] is not equal to <NULL>
               Stop Processing
          End If
     Else
          // End SAR 6858382
          VerifySupplementalDatabase(N4101010.VerifySupplementalDatabase)
               VA frm_AlphaKeyAlias1 [SAL1] -> szSuppDatabaseAlias1 [SAL1]
               VA frm_NumericKeyAlias1 [SAL3] -> szSuppDatabaseAlias3 [SAL3]
               FC Alpha Key 1-1 [SBA1] -> szSuppDataAlphaKey1 [SBA1]
               FC Num. Key 1-1 [SBN1] -> mnSuppDataNumericKey1 [SBN1]
               VA frm_ErrorMessageID [DTAI] <- szDataItem [DTAI]
               VA frm_NERError [ERRC] <- cErrorCode [ERRC]
               VA frm_AlphaKeyAlias2 [SAL2] -> szSuppDatabaseAlias2 [SAL2]
               VA frm_NumericKeyAlias2 [SAL4] -> szSuppDatabaseAlias4 [SAL4]
               FC Num. Key 2-1 [SBN2] -> mnSuppDataNumericKey2 [SBN2]
               FC Alpha Key 2-1 [SBA2] -> szSuppDataAlphaKey2 [SBA2]
               FC Business Unit-1 [MCU] -> szCostCenter [MCU]
               FC Document Company-1 [KCO] -> szCompanyKey [KCO]
          If VA frm_NERError [ERRC] is equal to "1"
               Set Edit Control Error(FC ErrorControl, VA frm_ErrorMessageID)
               Stop Processing
          End If
     End If
End If
// -----------------------------------------------------------------------------
//                                           SAR # 2095912 dt 04/03/98
// Address Number is validated for each grid row.
//         If  validation fails then error is set on the address number column o
//         that grid row.
// ---------------------------------------------------------------------
VA frm_Row_MATH01 [MATH01] = "1"
Get Max Grid Rows(FC Grid, VA frm_MaxRow_MATH01)
While VA frm_Row_MATH01 [MATH01] is less than VA frm_MaxRow_MATH01 [MATH01]
     Get Grid Row(FC Grid, VA frm_Row_MATH01)
     VA frm_InvalidAN8_DTAI [DTAI] = 0
     If GC Address Number [AN8] is not equal to "0"
     And GC Address Number [AN8] is not equal to <NULL>
     And GC Address Number [AN8] is not equal to <Blank>
          VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
               GC Address Number [AN8] -> mnAddressNumber [AN8]
               UNDEFINED <> szAlphaName [ALPH]
               UNDEFINED <> jdAddressEffectiveDate [EFTB]
               UNDEFINED <> szTaxCertificate [TXCT]
               UNDEFINED <> szCreditMessage [CM]
               UNDEFINED <> mnRelatedAddress1 [AN81]
               UNDEFINED <> mnRelatedAddress2 [AN82]
               UNDEFINED <> mnRelatedAddress3 [AN83]
               UNDEFINED <> mnRelatedAddress4 [AN84]
               UNDEFINED <> mnRelatedAddress5 [AN85]
               UNDEFINED <> mnRelatedAddress6 [AN86]
               UNDEFINED <> szBranchPlant [MCU]
               UNDEFINED <> szLanguagePreference [LNGP]
               VA frm_InvalidAN8_DTAI [DTAI] <- szErrorMessage [DTAI]
               "1" -> cSuppressError [ERR]
               UNDEFINED <> szTaxID [TAX]
               UNDEFINED <> cPersonCorporationCode [TAXC]
     End If
     If VA frm_InvalidAN8_DTAI [DTAI] is not equal to <Blank>
     And VA frm_InvalidAN8_DTAI [DTAI] is not equal to <NULL>
     And VA frm_InvalidAN8_DTAI [DTAI] is not equal to "0"
          Set Grid Cell Error(FC Grid,  <Current Row>, GC AddressNumber, VA frm_InvalidAN8_DTAI)
     End If
     VA frm_Row_MATH01 [MATH01] = [VA frm_Row_MATH01 [MATH01]]+1
End While
// 
// Begin SAR 5932051  JB6859887  8/2/02
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
If VA grd_cGridRecordExist_EV01 [EV01] is equal to "0"
Or VA grd_cGridRecordExist_EV01 [EV01] is equal to <NULL>
     Clear Grid Cell Error(FC Grid, <Currently Selected Row>, GC UserDef Code)
End If
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
// End SAR 5932051
// 

=============================================
Form: General Description Entry - W00092C
Object: HC OK/Select
Event: Post Button Clicked
Event GUID: 50b77640-f65d-11d1-9a5f-0000f64eb6f8
=============================================
// 
// SAR 2176739
// 
If FI szSupplementalDatabaseCode [SDB] is equal to "A"
And FI szType_Data [TYDT] is equal to "A"
     GetSupplementalDatatoUpdApplMst(N0800072.GetSupplementalDatatoUpdApplMst)
          FI mnSuppDataNumericKey1 [SBN1] -> mnAddressNumber [AN8]
          FI szSupplementalDatabaseCode [SDB] -> szSupplementalDatabaseCode [SDB]
          FI szType_Data [TYDT] -> szTypeofData [TYDT]
          BC Program ID (F00092.0) [PID] -> szProgramId [PID]
          BC User ID (F00092.0) [USER] -> szUserId [USER]
          BC Date - Updated (F00092.0) [UPMJ] -> jdDateUpdated [UPMJ]
          BC Work Station ID (F00092.0) [JOBN] -> szWorkStationId [JOBN]
End If
// 


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: HC User Defined Codes
Event: Button Clicked
Event GUID: 5ef166f0-e064-11d1-9ac9-00600832fe19
=============================================
Call App:P0005S Form:W0005SB Version: 
     VA frm_UDC_SystemCode [SY] -> Systemcode [SY]
     VA frm_UDC_CodeTable [RT] -> Userdefinedcodes [RT]
     GC User Def Code [KY] <> Userdefinedcodevalue [KY]
     GC Description  [DL01] <> Description001 [DL01]
     UNDEFINED <> Description002 [DL02]


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: HC UDC Values for Remark 1
Event: Button Clicked
Event GUID: 5ef166ef-e064-11d1-9ac9-00600832fe19
=============================================
// 
// SAR 6699781 - Passed the BC Remark value back to form if canceled
Call App:P0005S Form:W0005SB Version:Undefined
     VA frm_Remark1_SystemCode [SY1] -> Systemcode [SY]
     VA frm_Remark1_CodeTable [RT1] -> Userdefinedcodes [RT]
     GC Remark  [RMK] <> Userdefinedcodevalue [KY]
// 


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: HC UDC Values for Remark 2
Event: Button Clicked
Event GUID: 5ef166ee-e064-11d1-9ac9-00600832fe19
=============================================
// 
// SAR 6699781 - Passed the BC Remark value back to form if canceled
Call App:P0005S Form:W0005SB Version:Undefined
     VA frm_Remark2_SystemCode [SY2] -> Systemcode [SY]
     VA frm_Remark2_CodeTable [RT2] -> Userdefinedcodes [RT]
     GC Remarks Line 2 [RMK2] <> Userdefinedcodevalue [KY]
// 


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: HC Exit to Line Attachments
Event: Button Clicked
Event GUID: 5ef166f4-e064-11d1-9ac9-00600832fe19
=============================================
// Begin SAR 5932051  JB6859887 8/02/02
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
// 
If VA grd_cGridRecordExist_EV01 [EV01] is equal to "0"
Or VA grd_cGridRecordExist_EV01 [EV01] is equal to <NULL>
     Set Grid Cell Error(FC Grid,  <Currently Selected Row>, GC UserDef Code, "561J")
     Set Grid Color(FC Grid, <Currently Selected Row>, GC UserDef Code, <Yellow>)
Else
     // 
     // ~~~~~~~~~~~~~~~~~~~~~~~~~~
     // End SAR 5932051
     // 
     // 
     // Edit generic text
     // 
     Media Object Structures(GT00092A, <Edit>, VA frm_GenericTextIndicator, FC Supplemental Database Code, FC Type Data, FI szCostCenter, FI szCompanyKey, FI szSuppDataAlphaKey1, FI szSuppDataAlphaKey2, .)
     // 
     // Set grid text indicator
     // 
     If VA frm_GenericTextIndicator [GENTXT] is equal to "1"
          Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
     Else
          Set Grid Text Indicator(FC Grid, <Current Row>,  <No>)
     End If
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Add Grid Rec to DB - Before
Event GUID: f57dfd47-a23a-11d0-a204-0000f6728a56
=============================================
Suppress Add
If FI cCopyMode [EV01] is equal to "1"
     // SAR 6658268 Validate Sales Order Existence (DOCO,DCTO in F4201)
     If FC Supplemental Database Code [SDB] is equal to "SO"
          VerifySupplementalDBKeys(N0000158.VerifySupplementalDBKeys)
               FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
               FC Business Unit-1 [MCU] <> szBusinessUnit [MCU]
               FC Document Company-1 [KCO] <> szKeyCompany [KCO]
               FC Num. Key 1-1 [SBN1] <> mnNumericKey1 [SBN1]
               FC Num. Key 2-1 [SBN2] <> mnNumericKey2 [SBN2]
               FC Alpha Key 1-1 [SBA1] <> szAlphanumericKey1 [SBA1]
               FC Alpha Key 2-1 [SBA2] <> szAlphanumericKey2 [SBA2]
               VA frm_ErrorMessageID [DTAI] <> szErrorMessageID [DTAI]
          If VA frm_ErrorMessageID [DTAI] is not equal to <Blank>
          And VA frm_ErrorMessageID [DTAI] is not equal to <NULL>
               Stop Processing
          End If
     Else
          // End SAR 6858382
          VerifySupplementalDatabase(N4101010.VerifySupplementalDatabase)
               VA frm_AlphaKeyAlias1 [SAL1] -> szSuppDatabaseAlias1 [SAL1]
               VA frm_NumericKeyAlias1 [SAL3] -> szSuppDatabaseAlias3 [SAL3]
               FC Alpha Key 1-1 [SBA1] -> szSuppDataAlphaKey1 [SBA1]
               FC Num. Key 1-1 [SBN1] -> mnSuppDataNumericKey1 [SBN1]
               VA frm_ErrorMessageID [DTAI] <- szDataItem [DTAI]
               VA frm_NERError [ERRC] <- cErrorCode [ERRC]
               VA frm_AlphaKeyAlias2 [SAL2] -> szSuppDatabaseAlias2 [SAL2]
               VA frm_NumericKeyAlias2 [SAL4] -> szSuppDatabaseAlias4 [SAL4]
               FC Num. Key 2-1 [SBN2] -> mnSuppDataNumericKey2 [SBN2]
               FC Alpha Key 2-1 [SBA2] -> szSuppDataAlphaKey2 [SBA2]
               FC Business Unit-1 [MCU] -> szCostCenter [MCU]
               FC Document Company-1 [KCO] -> szCompanyKey [KCO]
          If VA frm_NERError [ERRC] is equal to "1"
               Set Edit Control Error(FC ErrorControl, VA frm_ErrorMessageID)
               Stop Processing
          End If
     End If
     //
     UpdateSupplementalData(N0000158.UpdateSupplementalData)
          FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
          "5" -> cActionCode [ACTN]
          FI szCostCenter [MCU] -> szBusinessUnit [MCU]
          FI szCompanyKey [KCO] -> szKeyCompany [KCO]
          FI mnSuppDataNumericKey1 [SBN1] -> mnNumericKey1 [SBN1]
          FI mnSuppDataNumericKey2 [SBN2] -> mnNumericKey2 [SBN2]
          FI szSuppDataAlphaKey1 [SBA1] -> szAlphaKey1 [SBA1]
          FI szSuppDataAlphaKey2 [SBA2] -> szAlphaKey2 [SBA2]
          FI szType_Data [TYDT] -> szDataType [TYDT]
          FC Business Unit-1 [MCU] -> szCopyToBusinessUnit [MCU]
          FC Document Company-1 [KCO] -> szCopyToKeyCompany [KCO]
          FC Num. Key 1-1 [SBN1] -> mnCopyToNumericKey1 [SBN1]
          FC Num. Key 2-1 [SBN2] -> mnCopyToNumericKey2 [SBN2]
          FC Alpha Key 1-1 [SBA1] -> szCopyToAlphanumericKey1 [SBA1]
          FC Alpha Key 2-1 [SBA2] -> szCopyToAlphanumericKey2 [SBA2]
          FC Type Data [TYDT] -> szCopyToDataType [TYDT]
          GC User Def Code [KY] -> szUserDefinedCodeValue [KY]
          GC Description  [DL01] -> szUDCAssociatedDescription [DL01]
          GC Effective Date [EFT] -> jdEffectiveDate [EFT]
          GC Ending Date [EFTE] -> jdEndingEffectiveDate [EFTE]
          GC User Defined Amount [AMTU] -> mnUserDefinedAmount1 [AMTU]
          GC User Defined Amount #2 [AMTV] -> mnUserDefinedAmount2 [AMTV]
          GC Remark  [RMK] -> szRemark1 [RMK]
          GC Remarks Line 2 [RMK2] -> szRemark2 [RMK2]
          GC User Def Days [DYUD] -> mnUserDefinedDays [DYUD]
          GC Address Number [AN8] -> mnUserDefinedAddressNumber [AN8]
          GC Addl Date [UPDJ] -> jdUserDefinedDate [UPDJ]
          VA frm_User [USER] -> szUserID [USER]
          VA frm_ProgramID [PID] -> szProgramID [PID]
          GC Quantity Ordered [UORG] -> mnUserDefinedQuantity [UORG]
          FC Supplemental Database Code [SDB] -> szCopyToSuppDatabaseCode [SDB]
          GC Related PO/SO No [RORN] -> szRelatedPoSoNumber [RORN]
          GC Rel Ord Type [RCTO] -> szRelatedOrderType [RCTO]
          PO EV01SuppressEndDates [EV01] -> cNoAssignedEndDate [EV01]
          GC Remarks Line 3 [RMK3] -> szRemark3 [RMK3]
          GC Time Additional [UPTM] -> mnTime [UPTM]
Else
     UpdateSupplementalData(N0000158.UpdateSupplementalData)
          FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
          "1" -> cActionCode [ACTN]
          FC Business Unit-1 [MCU] -> szBusinessUnit [MCU]
          FC Document Company-1 [KCO] -> szKeyCompany [KCO]
          FC Num. Key 1-1 [SBN1] -> mnNumericKey1 [SBN1]
          FC Num. Key 2-1 [SBN2] -> mnNumericKey2 [SBN2]
          FC Alpha Key 1-1 [SBA1] -> szAlphaKey1 [SBA1]
          FC Alpha Key 2-1 [SBA2] -> szAlphaKey2 [SBA2]
          FC Type Data [TYDT] -> szDataType [TYDT]
          GC User Def Code [KY] -> szUserDefinedCodeValue [KY]
          GC Description  [DL01] -> szUDCAssociatedDescription [DL01]
          GC Effective Date [EFT] -> jdEffectiveDate [EFT]
          GC Ending Date [EFTE] -> jdEndingEffectiveDate [EFTE]
          GC User Defined Amount [AMTU] -> mnUserDefinedAmount1 [AMTU]
          GC User Defined Amount #2 [AMTV] -> mnUserDefinedAmount2 [AMTV]
          GC Remark  [RMK] -> szRemark1 [RMK]
          GC Remarks Line 2 [RMK2] -> szRemark2 [RMK2]
          GC User Def Days [DYUD] -> mnUserDefinedDays [DYUD]
          GC Address Number [AN8] -> mnUserDefinedAddressNumber [AN8]
          GC Addl Date [UPDJ] -> jdUserDefinedDate [UPDJ]
          VA frm_User [USER] -> szUserID [USER]
          VA frm_ProgramID [PID] -> szProgramID [PID]
          GC Quantity Ordered [UORG] -> mnUserDefinedQuantity [UORG]
          GC Related PO/SO No [RORN] -> szRelatedPoSoNumber [RORN]
          GC Rel Ord Type [RCTO] -> szRelatedOrderType [RCTO]
          PO EV01SuppressEndDates [EV01] -> cNoAssignedEndDate [EV01]
          GC Remarks Line 3 [RMK3] -> szRemark3 [RMK3]
          GC Time Additional [UPTM] -> mnTime [UPTM]
     //
     //
End If

=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Update Grid Rec to DB-Before
Event GUID: 0dcb970d-6b91-42a0-b7a4-9c09a1875b33
=============================================
BC Program ID (F00092.0) [PID] = VA frm_ProgramID [PID]
BC User ID (F00092.0) [USER] = VA frm_User [USER]
BC Work Station ID (F00092.0) [JOBN] = VA frm_JobName [JOBN]
BC Date - Updated (F00092.0) [UPMJ] = VA frm_DateUpdated [UPMJ]
BC Time of Day (F00092.0) [TDAY] = VA frm_TimeOfDay [TDAY]

=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Delete Grid Rec from DB-After
Event GUID: 7979e1fe-60ad-44a1-9a03-0e27879444a1
=============================================
//
// SAR 6357377 - Moved this event from Delete-Button Clicked
// Delete the associated attachment
//
Media Object Structures(GT00092A, <Default Media Object>, <Delete>, VA frm_GenericTextIndicator, FC Supplemental Database Code, FC Type Data, FI szCostCenter, FI szCompanyKey, FI szSuppDataAlphaKey1, ...)
//

=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Add Last Entry Row to Grid
Event GUID: 5ef166ed-e064-11d1-9ac9-00600832fe19
=============================================
VA frm_LastUniqueKeyUsed [UKID] = [VA frm_LastUniqueKeyUsed [UKID]]+1
GC Unique Key ID [UKID] = VA frm_LastUniqueKeyUsed [UKID]

=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Double Click on Row Header
Event GUID: 5ef166f2-e064-11d1-9ac9-00600832fe19
=============================================
Press Button(HC &Attachments)

=============================================
Form: General Description Entry - W00092C
Object: FC Grid
Event: Row Exit & Changed - Asynch
Event GUID: f57e0438-a23a-11d0-a204-0000f6728a56
=============================================
// SAR 7484546 Begin
//
//
// SAR 8543878 - Clearing the "No UDC Attached" warning (412A).
If VA frm_UDC_SystemCode [SY] is equal to <Blank>
Or VA frm_UDC_CodeTable [RT] is equal to <Blank>
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC UserDef Code)
End If
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK [RMK]], "0", "1")
If VA frm_szCodigo_DL01 [DL01] is not equal to "*"
     If VA frm_Remark1_SystemCode [SY1] is equal to <Blank>
     Or VA frm_Remark1_CodeTable [RT1] is equal to <Blank>
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC Remark)
     End If
End If
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK2 [RMK2]], "0", "1")
If VA frm_szCodigo_DL01 [DL01] is not equal to "*"
     If VA frm_Remark2_SystemCode [SY2] is equal to <Blank>
     Or VA frm_Remark2_CodeTable [RT2] is equal to <Blank>
          Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC RemarksLine 2)
     End If
End If
// SAR 8339471 - Clear the error on the grid date field to be defaulted.
If PO EV01SuppressEndDates [EV01] is equal to ("2","3")
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC EffectiveDate)
End If
If PO EV01SuppressEndDates [EV01] is equal to (<Blank>,"2")
     Clear Grid Cell Error(FC Grid,  <Currently Selected Row>, GC EndingDate)
End If
//
// More Effective Date Processing logic to F00092 Verify Supplemental Data
// (N0000158)
//
// Pass Assign End Effective Date Processing Option #2 value
VerifySupplementalData(N0000158.VerifySupplementalData)
     FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
     FC Type Data [TYDT] -> szDataType [TYDT]
     GC User Def Code [KY] <> szUserDefinedCodeValue [KY]
     GC Description  [DL01] <> szUDCAssociatedDescription [DL01]
     GC Effective Date [EFT] <> jdEffectiveDate [EFT]
     GC Ending Date [EFTE] <> jdEndingEffectiveDate [EFTE]
     GC User Defined Amount [AMTU] <> mnUserDefinedAmount1 [AMTU]
     GC User Defined Amount #2 [AMTV] <> mnUserDefinedAmount2 [AMTV]
     GC Remark  [RMK] <> szRemark1 [RMK]
     GC Remarks Line 2 [RMK2] <> szRemark2 [RMK2]
     GC User Def Days [DYUD] <> mnUserDefinedDays [DYUD]
     GC Address Number [AN8] <> mnUserDefinedAddressNumber [AN8]
     GC Quantity Ordered [UORG] <> mnUserDefinedQuantity [UORG]
     GC Addl Date [UPDJ] <> jdUserDefinedDate [UPDJ]
     "0" <> cSuppressErrorMessage [SUPPS]
     GC Time Additional [UPTM] <> mnTime [UPTM]
     PO EV01SuppressEndDates [EV01] -> cNoEndEffDateAssignment [EV01]
//
//
// SAR 7484546 END


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC MCU
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd4c-a23a-11d0-a204-0000f6728a56
=============================================
If FC MCU [MCU] is not equal to <Blank>
     FC Business Unit-1 [MCU] = FC MCU [MCU]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC KCO
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd4d-a23a-11d0-a204-0000f6728a56
=============================================
If FC KCO [KCO] is not equal to <Blank>
     FC Document Company-1 [KCO] = FC KCO [KCO]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA1
Event: Control Exited/Changed-Asynch
Event GUID: f57e043a-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA1 [SBA1] is not equal to <Blank>
     FC Alpha Key 1-1 [SBA1] = FC SBA1 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN1
Event: Control Exited/Changed-Asynch
Event GUID: f57e043b-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN1 [SBN1] is not equal to <Blank>
     FC Num. Key 1-1 [SBN1] = FC SBN1 [SBN1]
End If
If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN1 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN1-2
Event: Control Exited/Changed-Asynch
Event GUID: f57e043c-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN1-2 [SBN1] is not equal to <Blank>
     FC Num. Key 1-1 [SBN1] = FC SBN1-2 [SBN1]
End If
If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN1-2 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN1-3
Event: Control Exited/Changed-Asynch
Event GUID: f57e043d-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN1-3 [SBN1] is not equal to <Blank>
     FC Num. Key 1-1 [SBN1] = FC SBN1-3 [SBN1]
End If
If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN1-3 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC MCU2
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd4e-a23a-11d0-a204-0000f6728a56
=============================================
If FC MCU2 [MCU] is not equal to <Blank>
     FC Business Unit-1 [MCU] = FC MCU2 [MCU]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC MCU-3
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd4f-a23a-11d0-a204-0000f6728a56
=============================================
If FC MCU-3 [MCU] is not equal to <Blank>
     FC Business Unit-1 [MCU] = FC MCU-3 [MCU]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC KCO2
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd50-a23a-11d0-a204-0000f6728a56
=============================================
If FC KCO2 [KCO] is not equal to <Blank>
     FC Document Company-1 [KCO] = FC KCO2 [KCO]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC KCO-3
Event: Control Exited/Changed-Asynch
Event GUID: f57dfd51-a23a-11d0-a204-0000f6728a56
=============================================
If FC KCO-3 [KCO] is not equal to <Blank>
     FC Document Company-1 [KCO] = FC KCO-3 [KCO]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA1-2
Event: Control Exited/Changed-Asynch
Event GUID: f57e043e-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA1-2 [SBA1] is not equal to <Blank>
     FC Alpha Key 1-1 [SBA1] = FC SBA1-2 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA1-3
Event: Control Exited/Changed-Asynch
Event GUID: f57e043f-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA1-3 [SBA1] is not equal to <Blank>
     FC Alpha Key 1-1 [SBA1] = FC SBA1-3 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN2-1
Event: Control Exited/Changed-Asynch
Event GUID: f57e0440-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN2-1 [SBN2] is not equal to <Blank>
     FC Num. Key 2-1 [SBN2] = FC SBN2-1 [SBN2]
End If
If VA frm_NumericKeyAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN2-1 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA2-1
Event: Control Exited/Changed-Asynch
Event GUID: f57e0441-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA2-1 [SBA2] is not equal to <Blank>
     FC Alpha Key 2-1 [SBA2] = FC SBA2-1 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA2-2
Event: Control Exited/Changed-Asynch
Event GUID: f57e0442-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA2-2 [SBA2] is not equal to <Blank>
     FC Alpha Key 2-1 [SBA2] = FC SBA2-2 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN2-2
Event: Control Exited/Changed-Asynch
Event GUID: f57e0443-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN2-2 [SBN2] is not equal to <Blank>
     FC Num. Key 2-1 [SBN2] = FC SBN2-2 [SBN2]
End If
If VA frm_NumericKeyAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN2-2 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBN2-3
Event: Control Exited/Changed-Asynch
Event GUID: f57e0444-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBN2-3 [SBN2] is not equal to <Blank>
     FC Num. Key 2-1 [SBN2] = FC SBN2-3 [SBN2]
End If
If VA frm_NumericKeyAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC SBN2-3 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC SBA2-3
Event: Control Exited/Changed-Asynch
Event GUID: f57e0445-a23a-11d0-a204-0000f6728a56
=============================================
If FC SBA2-3 [SBA2] is not equal to <Blank>
     FC Alpha Key 2-1 [SBA2] = FC SBA2-3 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC UITM1
Event: Control Exited/Changed-Asynch
Event GUID: 90934601-a23d-11d0-a204-0000f6728a56
=============================================
// 
//   SAR 8113894 - If this position is used for ITM then do the validation.
// 
If VA frm_1stPositionDataItem_DTAI [DTAI] is equal to "ITM"
     If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM1 [UITM] -> szPrimaryItemNumber [UITM]
               UNDEFINED <> szBranchPlant [MCU]
               UNDEFINED <> szDescription [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> idF4101LongRowPtr [GENLNG]
               FC Num. Key 1-1 [SBN1] <- mnShortItemNumber [ITM]
               UNDEFINED <> cErrorcode [ERRC]
               UNDEFINED <> szLanguagepreference [LNGP]
               UNDEFINED <> mnAddressnumber [AN8]
               UNDEFINED <> szSystemcode [SY]
               UNDEFINED <> szLongItemNumber [LITM]
               UNDEFINED <> szThirdItemNumber [AITM]
               UNDEFINED <> szItemFlashMsg [IFLA]
               "0" -> cReturnPtr [EV01]
               UNDEFINED <> cSuppressErrorMsg [EV02]
               UNDEFINED <> szErrorMsgID [DTAI]
               "1" -> cCallType [EV01]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               UNDEFINED <> szBaseLngDesc1 [DSC1]
               UNDEFINED <> szBaseLngDesc2 [DSC2]
               UNDEFINED <> cCrossRefMode [MODE]
               UNDEFINED <> cLngPrefType [EV01]
               UNDEFINED <> jdExpirationDate [EXDJ]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
     Else
          If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
               VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
                    FC UITM1 [UITM] -> szPrimaryItemNumber [UITM]
                    UNDEFINED <> szBranchPlant [MCU]
                    UNDEFINED <> szDescription [DSC1]
                    UNDEFINED <> szDescription2 [DSC2]
                    UNDEFINED <> cSymbolidentifier [SYMID]
                    UNDEFINED <> idF4101LongRowPtr [GENLNG]
                    FC Num. Key 2-1 [SBN2] <- mnShortItemNumber [ITM]
                    UNDEFINED <> cErrorcode [ERRC]
                    UNDEFINED <> szLanguagepreference [LNGP]
                    UNDEFINED <> mnAddressnumber [AN8]
                    UNDEFINED <> szSystemcode [SY]
                    UNDEFINED <> szLongItemNumber [LITM]
                    UNDEFINED <> szThirdItemNumber [AITM]
                    UNDEFINED <> szItemFlashMsg [IFLA]
                    "0" -> cReturnPtr [EV01]
                    UNDEFINED <> cSuppressErrorMsg [EV02]
                    UNDEFINED <> szErrorMsgID [DTAI]
                    "1" -> cCallType [EV01]
                    UNDEFINED <> idPtrToF41001Record [GENLNG]
                    UNDEFINED <> szBaseLngDesc1 [DSC1]
                    UNDEFINED <> szBaseLngDesc2 [DSC2]
                    UNDEFINED <> cCrossRefMode [MODE]
                    UNDEFINED <> cLngPrefType [EV01]
                    UNDEFINED <> jdExpirationDate [EXDJ]
                    UNDEFINED <> szStandardUOMConversion [TFLA]
                    UNDEFINED <> szTemplate [TMPL]
                    UNDEFINED <> szSegment1 [SEG1]
                    UNDEFINED <> szSegment2 [SEG2]
                    UNDEFINED <> szSegment3 [SEG3]
                    UNDEFINED <> szSegment4 [SEG4]
                    UNDEFINED <> szSegment5 [SEG5]
                    UNDEFINED <> szSegment6 [SEG6]
                    UNDEFINED <> szSegment7 [SEG7]
                    UNDEFINED <> szSegment8 [SEG8]
                    UNDEFINED <> szSegment9 [SEG9]
                    UNDEFINED <> szSegment10 [SEG0]
                    UNDEFINED <> cMatrixControlled [MIC]
          End If
     End If
Else
     // 
     //      SAR #2120225 
     // Validate the form control value and return primary asset number.
     // 
     //   SAR 8113894 - If this position is used for NUMB then do the validation.
     If VA frm_1stPositionDataItem_DTAI [DTAI] is equal to "NUMB"
          If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM1 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
          Else
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
                    F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                         FC UITM1 [UITM] <> szPrimaryAssetNumber [ASII]
                         UNDEFINED <- szDescription [DL01]
                         UNDEFINED <- szDescription02 [DL02]
                         UNDEFINED <- szDescription03 [DL03]
                         <Blank> <> cSymbolIdentifier [SYMID]
                         UNDEFINED <> idF1201RecordPointer [GENLNG]
                         FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
                         UNDEFINED <- szUnitNumber [APID]
                         UNDEFINED <- szSerialNumber [ASID]
                         UNDEFINED -> cReturnPointer [EV01]
                         UNDEFINED -> cSuppressErrorMessages [EV02]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         UNDEFINED <- cAssetItemNumberSymbol [SMI]
                         UNDEFINED <- cUnitNumberSymbol [SMU]
                         UNDEFINED <- cSerialNumberSymbol [SMS]
                         UNDEFINED -> cF0911ReturnFormat [EV03]
               End If
          End If
     End If
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM1
Event: Visual Assist Button Clicked
Event GUID: db2619e0-ec2b-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM1 [UITM] <- AssetNumberInput [ASII]
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM1
Event: Post Visual Assist Clicked
Event GUID: db2619e1-ec2b-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM1 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> <> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
Else
     If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               FC UITM1 [UITM] <> szPrimaryAssetNumber [ASII]
               UNDEFINED <- szDescription [DL01]
               UNDEFINED <- szDescription02 [DL02]
               UNDEFINED <- szDescription03 [DL03]
               <Blank> <> cSymbolIdentifier [SYMID]
               UNDEFINED <> idF1201RecordPointer [GENLNG]
               FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
               UNDEFINED <- szUnitNumber [APID]
               UNDEFINED <- szSerialNumber [ASID]
               UNDEFINED -> cReturnPointer [EV01]
               UNDEFINED -> cSuppressErrorMessages [EV02]
               UNDEFINED <- szErrorMessageID [DTAI]
               UNDEFINED <- cAssetItemNumberSymbol [SMI]
               UNDEFINED <- cUnitNumberSymbol [SMU]
               UNDEFINED <- cSerialNumberSymbol [SMS]
               UNDEFINED -> cF0911ReturnFormat [EV03]
     End If
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC UITM2
Event: Control Exited/Changed-Asynch
Event GUID: 90934602-a23d-11d0-a204-0000f6728a56
=============================================
// 
//   SAR 8113894 - If this position is used for ITM then do the validation.
// 
If VA frm_2ndPositionDataItem_DTAI [DTAI] is equal to "ITM"
     If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM2 [UITM] -> szPrimaryItemNumber [UITM]
               UNDEFINED <> szBranchPlant [MCU]
               UNDEFINED <> szDescription [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> idF4101LongRowPtr [GENLNG]
               FC Num. Key 1-1 [SBN1] <- mnShortItemNumber [ITM]
               UNDEFINED <> cErrorcode [ERRC]
               UNDEFINED <> szLanguagepreference [LNGP]
               UNDEFINED <> mnAddressnumber [AN8]
               UNDEFINED <> szSystemcode [SY]
               UNDEFINED <> szLongItemNumber [LITM]
               UNDEFINED <> szThirdItemNumber [AITM]
               UNDEFINED <> szItemFlashMsg [IFLA]
               "0" -> cReturnPtr [EV01]
               UNDEFINED <> cSuppressErrorMsg [EV02]
               UNDEFINED <> szErrorMsgID [DTAI]
               "1" -> cCallType [EV01]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               UNDEFINED <> szBaseLngDesc1 [DSC1]
               UNDEFINED <> szBaseLngDesc2 [DSC2]
               UNDEFINED <> cCrossRefMode [MODE]
               UNDEFINED <> cLngPrefType [EV01]
               UNDEFINED <> jdExpirationDate [EXDJ]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
     Else
          If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
               VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
                    FC UITM2 [UITM] -> szPrimaryItemNumber [UITM]
                    UNDEFINED <> szBranchPlant [MCU]
                    UNDEFINED <> szDescription [DSC1]
                    UNDEFINED <> szDescription2 [DSC2]
                    UNDEFINED <> cSymbolidentifier [SYMID]
                    UNDEFINED <> idF4101LongRowPtr [GENLNG]
                    FC Num. Key 2-1 [SBN2] <- mnShortItemNumber [ITM]
                    UNDEFINED <> cErrorcode [ERRC]
                    UNDEFINED <> szLanguagepreference [LNGP]
                    UNDEFINED <> mnAddressnumber [AN8]
                    UNDEFINED <> szSystemcode [SY]
                    UNDEFINED <> szLongItemNumber [LITM]
                    UNDEFINED <> szThirdItemNumber [AITM]
                    UNDEFINED <> szItemFlashMsg [IFLA]
                    "0" -> cReturnPtr [EV01]
                    UNDEFINED <> cSuppressErrorMsg [EV02]
                    UNDEFINED <> szErrorMsgID [DTAI]
                    "1" -> cCallType [EV01]
                    UNDEFINED <> idPtrToF41001Record [GENLNG]
                    UNDEFINED <> szBaseLngDesc1 [DSC1]
                    UNDEFINED <> szBaseLngDesc2 [DSC2]
                    UNDEFINED <> cCrossRefMode [MODE]
                    UNDEFINED <> cLngPrefType [EV01]
                    UNDEFINED <> jdExpirationDate [EXDJ]
                    UNDEFINED <> szStandardUOMConversion [TFLA]
                    UNDEFINED <> szTemplate [TMPL]
                    UNDEFINED <> szSegment1 [SEG1]
                    UNDEFINED <> szSegment2 [SEG2]
                    UNDEFINED <> szSegment3 [SEG3]
                    UNDEFINED <> szSegment4 [SEG4]
                    UNDEFINED <> szSegment5 [SEG5]
                    UNDEFINED <> szSegment6 [SEG6]
                    UNDEFINED <> szSegment7 [SEG7]
                    UNDEFINED <> szSegment8 [SEG8]
                    UNDEFINED <> szSegment9 [SEG9]
                    UNDEFINED <> szSegment10 [SEG0]
                    UNDEFINED <> cMatrixControlled [MIC]
          End If
     End If
Else
     // 
     //      SAR #2120225 
     // Validate the form control value and return primary asset number.
     // 
     //   SAR 8113894 - If this position is used for NUMB then do the validation.
     // 
     If VA frm_2ndPositionDataItem_DTAI [DTAI] is equal to "NUMB"
          If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM2 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
          Else
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
                    F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                         FC UITM2 [UITM] <> szPrimaryAssetNumber [ASII]
                         UNDEFINED <- szDescription [DL01]
                         UNDEFINED <- szDescription02 [DL02]
                         UNDEFINED <- szDescription03 [DL03]
                         <Blank> <> cSymbolIdentifier [SYMID]
                         UNDEFINED <> idF1201RecordPointer [GENLNG]
                         FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
                         UNDEFINED <- szUnitNumber [APID]
                         UNDEFINED <- szSerialNumber [ASID]
                         UNDEFINED -> cReturnPointer [EV01]
                         UNDEFINED -> cSuppressErrorMessages [EV02]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         UNDEFINED <- cAssetItemNumberSymbol [SMI]
                         UNDEFINED <- cUnitNumberSymbol [SMU]
                         UNDEFINED <- cSerialNumberSymbol [SMS]
                         UNDEFINED -> cF0911ReturnFormat [EV03]
               End If
          End If
     End If
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM2
Event: Visual Assist Button Clicked
Event GUID: e93caa30-ec39-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM2 [UITM] <- AssetNumberInput [ASII]
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM2
Event: Post Visual Assist Clicked
Event GUID: db2619e3-ec2b-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM2 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> <> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
Else
     If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               FC UITM2 [UITM] <> szPrimaryAssetNumber [ASII]
               UNDEFINED <- szDescription [DL01]
               UNDEFINED <- szDescription02 [DL02]
               UNDEFINED <- szDescription03 [DL03]
               <Blank> <> cSymbolIdentifier [SYMID]
               UNDEFINED <> idF1201RecordPointer [GENLNG]
               FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
               UNDEFINED <- szUnitNumber [APID]
               UNDEFINED <- szSerialNumber [ASID]
               UNDEFINED -> cReturnPointer [EV01]
               UNDEFINED -> cSuppressErrorMessages [EV02]
               UNDEFINED <- szErrorMessageID [DTAI]
               UNDEFINED <- cAssetItemNumberSymbol [SMI]
               UNDEFINED <- cUnitNumberSymbol [SMU]
               UNDEFINED <- cSerialNumberSymbol [SMS]
               UNDEFINED -> cF0911ReturnFormat [EV03]
     End If
End If


=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Object: FC UITM3
Event: Control Exited/Changed-Asynch
Event GUID: 90934603-a23d-11d0-a204-0000f6728a56
=============================================
// 
//   SAR 8113894 - If this position is used for ITM then do the validation.
// 
If VA frm_3rdPositionDataItem_DTAI [DTAI] is equal to "ITM"
     If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM3 [UITM] -> szPrimaryItemNumber [UITM]
               UNDEFINED <> szBranchPlant [MCU]
               UNDEFINED <> szDescription [DSC1]
               UNDEFINED <> szDescription2 [DSC2]
               UNDEFINED <> cSymbolidentifier [SYMID]
               UNDEFINED <> idF4101LongRowPtr [GENLNG]
               FC Num. Key 1-1 [SBN1] <- mnShortItemNumber [ITM]
               UNDEFINED <> cErrorcode [ERRC]
               UNDEFINED <> szLanguagepreference [LNGP]
               UNDEFINED <> mnAddressnumber [AN8]
               UNDEFINED <> szSystemcode [SY]
               UNDEFINED <> szLongItemNumber [LITM]
               UNDEFINED <> szThirdItemNumber [AITM]
               UNDEFINED <> szItemFlashMsg [IFLA]
               "0" -> cReturnPtr [EV01]
               UNDEFINED <> cSuppressErrorMsg [EV02]
               UNDEFINED <> szErrorMsgID [DTAI]
               "1" -> cCallType [EV01]
               UNDEFINED <> idPtrToF41001Record [GENLNG]
               UNDEFINED <> szBaseLngDesc1 [DSC1]
               UNDEFINED <> szBaseLngDesc2 [DSC2]
               UNDEFINED <> cCrossRefMode [MODE]
               UNDEFINED <> cLngPrefType [EV01]
               UNDEFINED <> jdExpirationDate [EXDJ]
               UNDEFINED <> szStandardUOMConversion [TFLA]
               UNDEFINED <> szTemplate [TMPL]
               UNDEFINED <> szSegment1 [SEG1]
               UNDEFINED <> szSegment2 [SEG2]
               UNDEFINED <> szSegment3 [SEG3]
               UNDEFINED <> szSegment4 [SEG4]
               UNDEFINED <> szSegment5 [SEG5]
               UNDEFINED <> szSegment6 [SEG6]
               UNDEFINED <> szSegment7 [SEG7]
               UNDEFINED <> szSegment8 [SEG8]
               UNDEFINED <> szSegment9 [SEG9]
               UNDEFINED <> szSegment10 [SEG0]
               UNDEFINED <> cMatrixControlled [MIC]
     Else
          If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
               VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
                    FC UITM3 [UITM] -> szPrimaryItemNumber [UITM]
                    UNDEFINED <> szBranchPlant [MCU]
                    UNDEFINED <> szDescription [DSC1]
                    UNDEFINED <> szDescription2 [DSC2]
                    UNDEFINED <> cSymbolidentifier [SYMID]
                    UNDEFINED <> idF4101LongRowPtr [GENLNG]
                    FC Num. Key 2-1 [SBN2] <- mnShortItemNumber [ITM]
                    UNDEFINED <> cErrorcode [ERRC]
                    UNDEFINED <> szLanguagepreference [LNGP]
                    UNDEFINED <> mnAddressnumber [AN8]
                    UNDEFINED <> szSystemcode [SY]
                    UNDEFINED <> szLongItemNumber [LITM]
                    UNDEFINED <> szThirdItemNumber [AITM]
                    UNDEFINED <> szItemFlashMsg [IFLA]
                    "0" -> cReturnPtr [EV01]
                    UNDEFINED <> cSuppressErrorMsg [EV02]
                    UNDEFINED <> szErrorMsgID [DTAI]
                    "1" -> cCallType [EV01]
                    UNDEFINED <> idPtrToF41001Record [GENLNG]
                    UNDEFINED <> szBaseLngDesc1 [DSC1]
                    UNDEFINED <> szBaseLngDesc2 [DSC2]
                    UNDEFINED <> cCrossRefMode [MODE]
                    UNDEFINED <> cLngPrefType [EV01]
                    UNDEFINED <> jdExpirationDate [EXDJ]
                    UNDEFINED <> szStandardUOMConversion [TFLA]
                    UNDEFINED <> szTemplate [TMPL]
                    UNDEFINED <> szSegment1 [SEG1]
                    UNDEFINED <> szSegment2 [SEG2]
                    UNDEFINED <> szSegment3 [SEG3]
                    UNDEFINED <> szSegment4 [SEG4]
                    UNDEFINED <> szSegment5 [SEG5]
                    UNDEFINED <> szSegment6 [SEG6]
                    UNDEFINED <> szSegment7 [SEG7]
                    UNDEFINED <> szSegment8 [SEG8]
                    UNDEFINED <> szSegment9 [SEG9]
                    UNDEFINED <> szSegment10 [SEG0]
                    UNDEFINED <> cMatrixControlled [MIC]
          End If
     End If
Else
     //      SAR #2120225 
     // Validate the form control value and return primary asset number.
     // 
     //   SAR 8113894 - If this position is used for ITM then do the validation.
     // 
     If VA frm_3rdPositionDataItem_DTAI [DTAI] is equal to "NUMB"
          If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM3 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
          Else
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
                    F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                         FC UITM3 [UITM] <> szPrimaryAssetNumber [ASII]
                         UNDEFINED <- szDescription [DL01]
                         UNDEFINED <- szDescription02 [DL02]
                         UNDEFINED <- szDescription03 [DL03]
                         <Blank> <> cSymbolIdentifier [SYMID]
                         UNDEFINED <> idF1201RecordPointer [GENLNG]
                         FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
                         UNDEFINED <- szUnitNumber [APID]
                         UNDEFINED <- szSerialNumber [ASID]
                         UNDEFINED -> cReturnPointer [EV01]
                         UNDEFINED -> cSuppressErrorMessages [EV02]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         UNDEFINED <- cAssetItemNumberSymbol [SMI]
                         UNDEFINED <- cUnitNumberSymbol [SMU]
                         UNDEFINED <- cSerialNumberSymbol [SMS]
                         UNDEFINED -> cF0911ReturnFormat [EV03]
               End If
          End If
     End If
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM3
Event: Visual Assist Button Clicked
Event GUID: db2619e5-ec2b-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM3 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> <> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          FC Num. Key 1-1 [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
Else
     If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               FC UITM3 [UITM] <> szPrimaryAssetNumber [ASII]
               UNDEFINED <- szDescription [DL01]
               UNDEFINED <- szDescription02 [DL02]
               UNDEFINED <- szDescription03 [DL03]
               <Blank> <> cSymbolIdentifier [SYMID]
               UNDEFINED <> idF1201RecordPointer [GENLNG]
               FC Num. Key 2-1 [SBN2] <- mnAssetItemNumber [NUMB]
               UNDEFINED <- szUnitNumber [APID]
               UNDEFINED <- szSerialNumber [ASID]
               UNDEFINED -> cReturnPointer [EV01]
               UNDEFINED -> cSuppressErrorMessages [EV02]
               UNDEFINED <- szErrorMessageID [DTAI]
               UNDEFINED <- cAssetItemNumberSymbol [SMI]
               UNDEFINED <- cUnitNumberSymbol [SMU]
               UNDEFINED <- cSerialNumberSymbol [SMS]
               UNDEFINED -> cF0911ReturnFormat [EV03]
     End If
End If

=============================================
Form: General Description Entry - W00092C
Object: FC UITM3
Event: Post Visual Assist Clicked
Event GUID: db2619e6-ec2b-11d2-a1a3-00104bc6f74b
=============================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM3 [UITM] <- AssetNumberInput [ASII]
End If



=============================================
EVENTS
=============================================
Form: General Description Entry - W00092C
Event: Dialog is Initialized
Event GUID: 90933c9d-a23d-11d0-a204-0000f6728a56
=============================================
//  =======================================================
//  Revision Log
// ===========================================================
//  10/14/03 IC8562981 6858382 Validate DOCO,DCTO for SDB Code = SO
// 02/08/05 IC9017597 7484546 End Effective Date Processing
// 06/16/06  JV7445740  8113894  Copy Sup Data - Error Invalid
// 08/20/07   RN9050944   8468855   NN incremented after supplemen
// 08/22/2007   RK9050936   8543878    Job Cost Supplemental Data not
// 01/22/10    GR9051146 8944840  No Job Description Displayed
// =========================================================
VA frm_2ndPositionFilled [EV01] = "0"
VA frm_1stPositionFilled [EV01] = "0"
//
VA grd_cGridRecordExist_EV01 [EV01] = "0"
//
Hide Grid Column(FC Grid, GC GenericText 1)
Hide Grid Column(FC Grid, GC GenericText 2)
Hide Grid Column(FC Grid, GC GenericText 3)

=============================================
Form: General Description Entry - W00092C
Event: Post Dialog is Initialized
Event GUID: 909344d4-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_cDemandSchedDelivered_EV01 [EV01]
evt_szUserAddNum_SAL3 [SAL3]
evt_cPrimeiroCaracter_EV01 [EV01]
----------------------------------------
//
// SAR# 8468855 - Assign value to variable.
VA evt_szUserAddNum_SAL3 [SAL3] = "USA1"
//
// ===============================================================
// Set Form Controls equal to Form Interconnect values
// ===============================================================
FC Num. Key 2-1 [SBN2] = FI mnSuppDataNumericKey2 [SBN2]
FC Num. Key 1-1 [SBN1] = FI mnSuppDataNumericKey1 [SBN1]
FC Alpha Key 2-1 [SBA2] = FI szSuppDataAlphaKey2 [SBA2]
FC Alpha Key 1-1 [SBA1] = FI szSuppDataAlphaKey1 [SBA1]
FC Document Company-1 [KCO] = FI szCompanyKey [KCO]
FC Business Unit-1 [MCU] = FI szCostCenter [MCU]
FC Supplemental Database Code [SDB] = FI szSupplementalDatabaseCode [SDB]
FC Type Data [TYDT] = FI szType_Data [TYDT]
// ==============================================================
// Hide all controls so that hiding and showing is controlled by the ER.
// ==============================================================
Hide Control(FC MCU [MCU])
Hide Control(FC MCU2 [MCU])
Hide Control(FC MCU-3 [MCU])
Hide Control(FC KCO [KCO])
Hide Control(FC KCO2 [KCO])
Hide Control(FC KCO-3 [KCO])
Hide Control(FC SBN1 [SBN1])
Hide Control(FC SBN1-2 [SBN1])
Hide Control(FC SBN1-3 [SBN1])
Hide Control(FC SBN2-1 [SBN2])
Hide Control(FC SBN2-2 [SBN2])
Hide Control(FC SBN2-3 [SBN2])
Hide Control(FC SBA1 [SBA1])
Hide Control(FC SBA1-3 [SBA1])
Hide Control(FC SBA1-2 [SBA1])
Hide Control(FC SBA2-1 [SBA2])
Hide Control(FC SBA2-2 [SBA2])
Hide Control(FC SBA2-3 [SBA2])
Hide Control(FC DSC3 DescrptionPosition3 [DSC3])
Hide Control(FC DSC2-DescriptionPosition2 [DSC2])
Hide Control(FC DSC1-DescriptionPosition1 [DSC1])
Hide Control(FC UITM1 [UITM])
Hide Control(FC UITM2 [UITM])
Hide Control(FC UITM3 [UITM])
// SAR 8950109 - Added description field for use with Job code
Hide Control(FC Alpha Key Description 1 [ALPH])
Disable Control(FC Alpha Key Description 1 [ALPH])
// ===============================================================
//     SAR # 2100507
// Added description fields for use with Address Book data types.
// ===============================================================
Hide Control(FC Address Book Description 1 [ALPH])
Hide Control(FC Address Book Description 2 [ALPH])
Hide Control(FC Address Book Description 3 [ALPH])
// ===============================================================
// Disable Descriptions
// ===============================================================
Disable Control(FC DSC3 DescrptionPosition3 [DSC3])
Disable Control(FC DSC2-DescriptionPosition2 [DSC2])
Disable Control(FC DSC1-DescriptionPosition1 [DSC1])
// ===============================================================
//     SAR # 2100507
// Added description fields for use with Address Book data types.
// ===============================================================
Disable Control(FC Address Book Description 1 [ALPH])
Disable Control(FC Address Book Description 2 [ALPH])
Disable Control(FC Address Book Description 3 [ALPH])
// ===============================================================
// Disable all FCs in Update Mode because values are later loaded into database.
// ===============================================================
If FI cCopyMode [EV01] is not equal to "1"
     Disable Control(FC SBA2-3 [SBA2])
     Disable Control(FC SBN2-3 [SBN2])
     Disable Control(FC SBN2-2 [SBN2])
     Disable Control(FC SBA2-2 [SBA2])
     Disable Control(FC SBA2-1 [SBA2])
     Disable Control(FC SBN2-1 [SBN2])
     Disable Control(FC SBA1-3 [SBA1])
     Disable Control(FC SBA1-2 [SBA1])
     Disable Control(FC KCO-3 [KCO])
     Disable Control(FC KCO2 [KCO])
     Disable Control(FC MCU-3 [MCU])
     Disable Control(FC MCU2 [MCU])
     Disable Control(FC SBN1-3 [SBN1])
     Disable Control(FC SBN1-2 [SBN1])
     Disable Control(FC SBN1 [SBN1])
     Disable Control(FC SBA1 [SBA1])
     Disable Control(FC KCO [KCO])
     Disable Control(FC MCU [MCU])
     Disable Control(FC UITM1 [UITM])
     Disable Control(FC UITM2 [UITM])
     Disable Control(FC UITM3 [UITM])
End If
// ===============================================================
// Set FC descriptions equal to the FI descriptions
// ===============================================================
FC DSC1-DescriptionPosition1 [DSC1] = FI szDescriptionLine1 [DSC1]
FC DSC2-DescriptionPosition2 [DSC2] = FI szDescriptionLine2 [DSC2]
FC DSC3 DescrptionPosition3 [DSC3] = FI szDescriptionLine3 [DSC3]
// ==============================================================
//
//     Retrieve the Supplemental Key Data
//
F00090.FetchSingle  [Index 1: SupplDB]
     BC Supplemental Database Code (F00092.0) [SDB] = TK Supplemental Database Code [SDB]
     VA frm_AlphaKeyAlias1 [SAL1] <- TK SDB Alpha Alias 1 [SAL1]
     VA frm_AlphaKeyAlias2 [SAL2] <- TK SDB Alpha Alias 2 [SAL2]
     VA frm_NumericKeyAlias1 [SAL3] <- TK SDB Numeric Alias 1 [SAL3]
     VA frm_NumericKeyAlias2 [SAL4] <- TK SDB Numeric Alias 2 [SAL4]
     VA frm_FileName [FILE] <- TK File Name [FILE]
//
// ==============================================================
// If the form interconnect Alias1 is equal to ITM then retrieve the UITM using
// the Short Item Number in Num Key 1-1, else retrieve UITM using the Short Item
// Number in Num Key 2-1.
// ===============================================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          FI mnSuppDataNumericKey1 [SBN1] -> mnShortItemNumber [ITM]
          VA frm_PrimaryItemNumber [UITM] <- szPrimaryItemNumber [UITM]
          UNDEFINED <> szSecondItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescriptionLine2 [DSC2]
          UNDEFINED <> szItemFlashMessage [IFLA]
          UNDEFINED <> szPrimaryUOM [UOM1]
          UNDEFINED <> szSecondaryUOM [UOM2]
          UNDEFINED <> szPurchasingUOM [UOM3]
          UNDEFINED <> szPricingUOM [UOM4]
          UNDEFINED <> szShippingUOM [UOM6]
          UNDEFINED <> szWeightUOM [UWUM]
          UNDEFINED <> szVolumeUOM [UVM1]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          FI szCostCenter [MCU] -> szBranchPlant [MCU]
          UNDEFINED <> cBackOrdersAllowedYN [BACK]
          UNDEFINED <> cStockingType [STKT]
          UNDEFINED <> cBulkPackedFlag [BPFG]
          UNDEFINED <> cInventoryCostLevel [CLEV]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> cLotProcessType [SRCE]
          UNDEFINED <> mnShelfLifeDays [SLD]
          UNDEFINED <> szGLClassCode [GLPT]
          UNDEFINED <> cContractItem [CONT]
          UNDEFINED <> szProductionUOM [UOM8]
          UNDEFINED <> szFromGrade [FRGD]
          UNDEFINED <> szThruGrade [THGD]
          UNDEFINED <> mnFromPotency [FRMP]
          UNDEFINED <> mnThruPotency [THRP]
          UNDEFINED <> cPriceLevel [PLEV]
          UNDEFINED <> cGradePotencyPricing [PRPO]
          UNDEFINED <> cRoundToWholeNumber [SNS]
          UNDEFINED <> cKitPricingMethod [PMTH]
          UNDEFINED <> szComponentUOM [UOM9]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> szPrintMessage [INMG]
          UNDEFINED <> cCommitmentMethod [CMGL]
          UNDEFINED <> cCheckAvailability [CKAV]
          UNDEFINED <> cSerialNumberReqsted [SRNR]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cPurchasePriceLevel [PPLV]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
          UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
          UNDEFINED <> cDualPickingProcessOption [DPPO]
          UNDEFINED <> mnDualTolerance [DLTL]
End If
If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
     GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
          FI mnSuppDataNumericKey2 [SBN2] -> mnShortItemNumber [ITM]
          VA frm_PrimaryItemNumber2 [UITM] <- szPrimaryItemNumber [UITM]
          UNDEFINED <> szSecondItemNumber [LITM]
          UNDEFINED <> szThirdItemNumber [AITM]
          UNDEFINED <> szDescription [DSC1]
          UNDEFINED <> szDescriptionLine2 [DSC2]
          UNDEFINED <> szItemFlashMessage [IFLA]
          UNDEFINED <> szPrimaryUOM [UOM1]
          UNDEFINED <> szSecondaryUOM [UOM2]
          UNDEFINED <> szPurchasingUOM [UOM3]
          UNDEFINED <> szPricingUOM [UOM4]
          UNDEFINED <> szShippingUOM [UOM6]
          UNDEFINED <> szWeightUOM [UWUM]
          UNDEFINED <> szVolumeUOM [UVM1]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          FI szCostCenter [MCU] -> szBranchPlant [MCU]
          UNDEFINED <> cBackOrdersAllowedYN [BACK]
          UNDEFINED <> cStockingType [STKT]
          UNDEFINED <> cBulkPackedFlag [BPFG]
          UNDEFINED <> cInventoryCostLevel [CLEV]
          UNDEFINED <> szLineType [LNTY]
          UNDEFINED <> cLotProcessType [SRCE]
          UNDEFINED <> mnShelfLifeDays [SLD]
          UNDEFINED <> szGLClassCode [GLPT]
          UNDEFINED <> cContractItem [CONT]
          UNDEFINED <> szProductionUOM [UOM8]
          UNDEFINED <> szFromGrade [FRGD]
          UNDEFINED <> szThruGrade [THGD]
          UNDEFINED <> mnFromPotency [FRMP]
          UNDEFINED <> mnThruPotency [THRP]
          UNDEFINED <> cPriceLevel [PLEV]
          UNDEFINED <> cGradePotencyPricing [PRPO]
          UNDEFINED <> cRoundToWholeNumber [SNS]
          UNDEFINED <> cKitPricingMethod [PMTH]
          UNDEFINED <> szComponentUOM [UOM9]
          UNDEFINED <> szStandardUOMConversion [TFLA]
          UNDEFINED <> mnBuyer [BUYR]
          UNDEFINED <> mnPlannerNumber [ANPL]
          UNDEFINED <> szPrintMessage [INMG]
          UNDEFINED <> cCommitmentMethod [CMGL]
          UNDEFINED <> cCheckAvailability [CKAV]
          UNDEFINED <> cSerialNumberReqsted [SRNR]
          UNDEFINED <> cLotStatusCode [LOTS]
          UNDEFINED <> cPurchasePriceLevel [PPLV]
          UNDEFINED <> szTemplate [TMPL]
          UNDEFINED <> szSegment1 [SEG1]
          UNDEFINED <> szSegment2 [SEG2]
          UNDEFINED <> szSegment3 [SEG3]
          UNDEFINED <> szSegment4 [SEG4]
          UNDEFINED <> szSegment5 [SEG5]
          UNDEFINED <> szSegment6 [SEG6]
          UNDEFINED <> szSegment7 [SEG7]
          UNDEFINED <> szSegment8 [SEG8]
          UNDEFINED <> szSegment9 [SEG9]
          UNDEFINED <> szSegment10 [SEG0]
          UNDEFINED <> cMatrixControlled [MIC]
          UNDEFINED <> cDualUnitOfMeasureItem [DUAL]
          UNDEFINED <> cDualPickingProcessOption [DPPO]
          UNDEFINED <> mnDualTolerance [DLTL]
End If
//
// ==============================================================
//                                SAR #2120225
// If the form interconnect Alias1 is equal to NUMB then retrieve the UITM as th
// primary asset number
// ===============================================================
If VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
     ConvertNumericToString(B0000045.ConvertNumericToString)
          FI mnSuppDataNumericKey1 [SBN1] -> mnMathNumeric01 [MATH01]
          VA frm_PrimaryItemNumber [UITM] <- szVideoConstant30A [VC30A]
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          VA frm_PrimaryItemNumber [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          "1" <> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          UNDEFINED <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
Else
     If VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
          ConvertNumericToString(B0000045.ConvertNumericToString)
               FI mnSuppDataNumericKey2 [SBN2] -> mnMathNumeric01 [MATH01]
               VA frm_PrimaryItemNumber2 [UITM] <- szVideoConstant30A [VC30A]
          F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
               VA frm_PrimaryItemNumber [UITM] <> szPrimaryAssetNumber [ASII]
               UNDEFINED <- szDescription [DL01]
               UNDEFINED <- szDescription02 [DL02]
               UNDEFINED <- szDescription03 [DL03]
               "1" <> cSymbolIdentifier [SYMID]
               UNDEFINED <> idF1201RecordPointer [GENLNG]
               UNDEFINED <- mnAssetItemNumber [NUMB]
               UNDEFINED <- szUnitNumber [APID]
               UNDEFINED <- szSerialNumber [ASID]
               UNDEFINED -> cReturnPointer [EV01]
               UNDEFINED -> cSuppressErrorMessages [EV02]
               UNDEFINED <- szErrorMessageID [DTAI]
               UNDEFINED <- cAssetItemNumberSymbol [SMI]
               UNDEFINED <- cUnitNumberSymbol [SMU]
               UNDEFINED <- cSerialNumberSymbol [SMS]
               UNDEFINED -> cF0911ReturnFormat [EV03]
     End If
End If
// ===============================================================
//  Determine which descriptions and fields to show based on whether they are
//  equal to blank or not.  Then determine which position to place them in on th
// wondow.  First position is the top, second position is the middle, and if bot
// of those are filled, show the third position, or bottom.
// ===============================================================
If FC DSC1-DescriptionPosition1 [DSC1] is greater than <Blank>
     Show Control(FC DSC1-DescriptionPosition1 [DSC1])
End If
If FC DSC2-DescriptionPosition2 [DSC2] is greater than <Blank>
     Show Control(FC DSC2-DescriptionPosition2 [DSC2])
End If
If FC DSC3 DescrptionPosition3 [DSC3] is greater than <Blank>
     Show Control(FC DSC3 DescrptionPosition3 [DSC3])
End If
If FC Business Unit-1 [MCU] is greater than <Blank>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          FC MCU [MCU] = FC Business Unit-1 [MCU]
          Show Control(FC MCU [MCU])
          VA frm_1stPositionFilled [EV01] = "1"
          //
          //   SAR 8113894 - Store the data item used in each position.
          VA frm_1stPositionDataItem_DTAI [DTAI] = "MCU"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               FC MCU2 [MCU] = FC Business Unit-1 [MCU]
               Show Control(FC MCU2 [MCU])
               VA frm_2ndPositionFilled [EV01] = "1"
               //
               //   SAR 8113894 - Store the data item used in each position.
               VA frm_2ndPositionDataItem_DTAI [DTAI] = "MCU"
          Else
               FC MCU-3 [MCU] = FC Business Unit-1 [MCU]
               Show Control(FC MCU-3 [MCU])
               //
               //   SAR 8113894 - Store the data item used in each position.
               VA frm_3rdPositionDataItem_DTAI [DTAI] = "MCU"
          End If
     End If
End If
If FC Document Company-1 [KCO] is greater than <Blank>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          FC KCO [KCO] = FC Document Company-1 [KCO]
          Show Control(FC KCO [KCO])
          VA frm_1stPositionFilled [EV01] = "1"
          //
          //   SAR 8113894 - Store the data item used in each position.
          VA frm_1stPositionDataItem_DTAI [DTAI] = "KCO"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               FC KCO2 [KCO] = FC Document Company-1 [KCO]
               Show Control(FC KCO2 [KCO])
               VA frm_2ndPositionFilled [EV01] = "1"
               //
               //   SAR 8113894 - Store the data item used in each position.
               VA frm_2ndPositionDataItem_DTAI [DTAI] = "KCO"
          Else
               FC KCO-3 [KCO] = FC Document Company-1 [KCO]
               Show Control(FC KCO-3 [KCO])
               //
               //   SAR 8113894 - Store the data item used in each position.
               VA frm_3rdPositionDataItem_DTAI [DTAI] = "KCO"
          End If
     End If
End If
If FC Num. Key 1-1 [SBN1] is not equal to "0"
And FC Num. Key 1-1 [SBN1] is not equal to <NULL>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          //
          //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
          //
          If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
          Or VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
               FC UITM1 [UITM] = VA frm_PrimaryItemNumber [UITM]
               Show Control(FC UITM1 [UITM])
               //
               //   SAR 8113894 - Store the data item used in each position.
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
                    VA frm_1stPositionDataItem_DTAI [DTAI] = "ITM"
               Else
                    VA frm_1stPositionDataItem_DTAI [DTAI] = "NUMB"
               End If
          Else
               // ===============================================================
               //     SAR # 2100507
               // Added description fields for use with Address Book data types.
               // ===============================================================
               Show Control(FC SBN1 [SBN1])
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                    // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                    // function from AN8 to USA1
                    Set Data Dictionary Item(FC SBN1, VA evt_szUserAddNum_SAL3, <default>)
                    Show Control(FC Address Book Description 1 [ALPH])
               End If
               FC SBN1 [SBN1] = FC Num. Key 1-1 [SBN1]
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                    F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                         FC Num. Key 1-1 [SBN1] -> mnAddressNumber [AN8]
                         FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
               End If
               //
               //   SAR 8113894 - Store the data item used in each position.
               // SAR# 8468855 - Stored the changed the DD Item in each position
               VA frm_1stPositionDataItem_DTAI [DTAI] = "USA1"
          End If
          VA frm_1stPositionFilled [EV01] = "1"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               //
               //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
               //
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
               Or VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
                    FC UITM2 [UITM] = VA frm_PrimaryItemNumber [UITM]
                    Show Control(FC UITM2 [UITM])
                    //
                    //   SAR 8113894 - Store the data item used in each position.
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
                         VA frm_2ndPositionDataItem_DTAI [DTAI] = "ITM"
                    Else
                         VA frm_2ndPositionDataItem_DTAI [DTAI] = "NUMB"
                    End If
               Else
                    // ===============================================================
                    //     SAR # 2100507
                    // Added description fields for use with Address Book data types.
                    // ===============================================================
                    Show Control(FC SBN1-2 [SBN1])
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                         // function from AN8 to USA1
                         Set Data Dictionary Item(FC SBN1-2, VA evt_szUserAddNum_SAL3, <default>)
                         Show Control(FC Address Book Description 2 [ALPH])
                    End If
                    FC SBN1-2 [SBN1] = FC Num. Key 1-1 [SBN1]
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Num. Key 1-1 [SBN1] -> mnAddressNumber [AN8]
                              FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    //
                    //   SAR 8113894 - Store the data item used in each position.
                    // SAR# 8468855 - Stored the changed the DD Item in each position
                    VA frm_2ndPositionDataItem_DTAI [DTAI] = "USA1"
               End If
               VA frm_2ndPositionFilled [EV01] = "1"
          Else
               //
               //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
               //
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
               Or VA frm_NumericKeyAlias1 [SAL3] is equal to "NUMB"
                    FC UITM3 [UITM] = VA frm_PrimaryItemNumber [UITM]
                    Show Control(FC UITM3 [UITM])
                    //
                    //   SAR 8113894 - Store the data item used in each position.
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "ITM"
                         VA frm_3rdPositionDataItem_DTAI [DTAI] = "ITM"
                    Else
                         VA frm_3rdPositionDataItem_DTAI [DTAI] = "NUMB"
                    End If
               Else
                    // ===============================================================
                    //     SAR # 2100507
                    // Added description fields for use with Address Book data types.
                    // ===============================================================
                    Show Control(FC SBN1-3 [SBN1])
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                         // function from AN8 to USA1
                         Set Data Dictionary Item(FC SBN1-3, VA evt_szUserAddNum_SAL3, <default>)
                         Show Control(FC Address Book Description 3 [ALPH])
                    End If
                    FC SBN1-3 [SBN1] = FC Num. Key 1-1 [SBN1]
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Num. Key 1-1 [SBN1] -> mnAddressNumber [AN8]
                              FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    //
                    //   SAR 8113894 - Store the data item used in each position.
                    // SAR# 8468855 - Stored the changed the DD Item in each position
                    VA frm_3rdPositionDataItem_DTAI [DTAI] = "USA1"
               End If
          End If
     End If
End If
If FC Num. Key 2-1 [SBN2] is not equal to "0"
And FC Num. Key 2-1 [SBN2] is not equal to <NULL>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          //
          //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
          //
          If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
          Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
               FC UITM1 [UITM] = VA frm_PrimaryItemNumber2 [UITM]
               Show Control(FC UITM1 [UITM])
               //
               //   SAR 8113894 - Store the data item used in each position.
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
                    VA frm_1stPositionDataItem_DTAI [DTAI] = "ITM"
               Else
                    VA frm_1stPositionDataItem_DTAI [DTAI] = "NUMB"
               End If
          Else
               // ===============================================================
               //     SAR # 2100507
               // Added description fields for use with Address Book data types.
               // ===============================================================
               Show Control(FC SBN2-1 [SBN2])
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                    // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                    // function from AN8 to USA1
                    Set Data Dictionary Item(FC SBN2-1, VA evt_szUserAddNum_SAL3, <default>)
                    Show Control(FC Address Book Description 1 [ALPH])
               End If
               FC SBN2-1 [SBN2] = FC Num. Key 2-1 [SBN2]
               If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                    F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                         FC Num. Key 2-1 [SBN2] -> mnAddressNumber [AN8]
                         FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
               End If
               //
               //   SAR 8113894 - Store the data item used in each position
               // SAR# 8468855 - Stored the changed the DD Item in each position
               VA frm_1stPositionDataItem_DTAI [DTAI] = "USA1"
          End If
          VA frm_1stPositionFilled [EV01] = "1"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               //
               //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
               //
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
               Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
                    FC UITM2 [UITM] = VA frm_PrimaryItemNumber2 [UITM]
                    Show Control(FC UITM2 [UITM])
                    //
                    //   SAR 8113894 - Store the data item used in each position
                    If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
                         VA frm_2ndPositionDataItem_DTAI [DTAI] = "ITM"
                    Else
                         VA frm_2ndPositionDataItem_DTAI [DTAI] = "NUMB"
                    End If
               Else
                    // ===============================================================
                    //     SAR # 2100507
                    // Added description fields for use with Address Book data types.
                    // ===============================================================
                    Show Control(FC SBN2-2 [SBN2])
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                         // function from AN8 to USA1
                         Set Data Dictionary Item(FC SBN2-2, VA evt_szUserAddNum_SAL3, <default>)
                         Show Control(FC Address Book Description 2 [ALPH])
                    End If
                    FC SBN2-2 [SBN2] = FC Num. Key 2-1 [SBN2]
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Num. Key 2-1 [SBN2] -> mnAddressNumber [AN8]
                              FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    //
                    //   SAR 8113894 - Store the data item used in each position.
                    // SAR# 8468855 - Stored the changed the DD Item in each position
                    VA frm_2ndPositionDataItem_DTAI [DTAI] = "USA1"
               End If
               VA frm_2ndPositionFilled [EV01] = "1"
          Else
               //
               //    SAR #2120225  If NumericKey Alias1 = ITM  OR  NUMB, UITM = PrimaryNumber
               //
               If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
               Or VA frm_NumericKeyAlias2 [SAL4] is equal to "NUMB"
                    FC UITM3 [UITM] = VA frm_PrimaryItemNumber2 [UITM]
                    Show Control(FC UITM3 [UITM])
                    //
                    //   SAR 8113894 - Store the data item used in each position
                    If VA frm_NumericKeyAlias2 [SAL4] is equal to "ITM"
                         VA frm_3rdPositionDataItem_DTAI [DTAI] = "ITM"
                    Else
                         VA frm_3rdPositionDataItem_DTAI [DTAI] = "NUMB"
                    End If
               Else
                    // ===============================================================
                    //     SAR # 2100507
                    // Added description fields for use with Address Book data types.
                    // ===============================================================
                    Show Control(FC SBN2-3 [SBN2])
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         // SAR# 8468855 - Changed the DD Item in Set Data Dictionary Item system
                         // function from AN8 to USA1
                         Set Data Dictionary Item(FC SBN2-3, VA evt_szUserAddNum_SAL3, <default>)
                         Show Control(FC Address Book Description 3 [ALPH])
                    End If
                    FC SBN2-3 [SBN2] = FC Num. Key 2-1 [SBN2]
                    If VA frm_NumericKeyAlias1 [SAL3] is equal to "AN8"
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Num. Key 2-1 [SBN2] -> mnAddressNumber [AN8]
                              FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    //
                    //   SAR 8113894 - Store the data item used in each position
                    // SAR# 8468855 - Stored the changed the DD Item in each position
                    VA frm_3rdPositionDataItem_DTAI [DTAI] = "USA1"
               End If
          End If
     End If
End If
If FC Alpha Key 1-1 [SBA1] is greater than <Blank>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          FC SBA1 [SBA1] = FC Alpha Key 1-1 [SBA1]
          Show Control(FC SBA1 [SBA1])
          // SAR 8950109 - Display description field when Alpha key is greater than
          // zero
          GetJobTypeDescription(B0800012.GetJobTypeDescription)
               FC Alpha Key 1-1 [SBA1] -> szBehaviorEditString [BHVREDTST]
               FC Alpha Key Description 1 [ALPH] <- szDescription001 [DL01]
          Show Control(FC Alpha Key Description 1 [ALPH])
          VA frm_1stPositionFilled [EV01] = "1"
          //
          //   SAR 8113894 - Store the data item used in each position
          VA frm_1stPositionDataItem_DTAI [DTAI] = "SBA"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               FC SBA1-2 [SBA1] = FC Alpha Key 1-1 [SBA1]
               Show Control(FC SBA1-2 [SBA1])
               VA frm_2ndPositionFilled [EV01] = "1"
               //
               //   SAR 8113894 - Store the data item used in each position
               VA frm_2ndPositionDataItem_DTAI [DTAI] = "SBA"
          Else
               FC SBA1-3 [SBA1] = FC Alpha Key 1-1 [SBA1]
               Show Control(FC SBA1-3 [SBA1])
               //
               //   SAR 8113894 - Store the data item used in each position
               VA frm_3rdPositionDataItem_DTAI [DTAI] = "SBA"
          End If
     End If
End If
If FC Alpha Key 2-1 [SBA2] is greater than <Blank>
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          FC SBA2-1 [SBA2] = FC Alpha Key 2-1 [SBA2]
          Show Control(FC SBA2-1 [SBA2])
          VA frm_1stPositionFilled [EV01] = "1"
          //
          //   SAR 8113894 - Store the data item used in each position
          VA frm_1stPositionDataItem_DTAI [DTAI] = "SBA"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               FC SBA2-2 [SBA2] = FC Alpha Key 2-1 [SBA2]
               Show Control(FC SBA2-2 [SBA2])
               VA frm_2ndPositionFilled [EV01] = "1"
               //
               //   SAR 8113894 - Store the data item used in each position
               VA frm_2ndPositionDataItem_DTAI [DTAI] = "SBA"
          Else
               FC SBA2-3 [SBA2] = FC Alpha Key 2-1 [SBA2]
               Show Control(FC SBA2-3 [SBA2])
               //
               //   SAR 8113894 - Store the data item used in each position
               VA frm_3rdPositionDataItem_DTAI [DTAI] = "SBA"
          End If
     End If
End If
//
// ==============================================================
//
//     Retrieve Supplemental Data specifications from Data Type setup table
//
F00091.FetchSingle  [Index 1: SupplDB_DataType]
     FC Supplemental Database Code [SDB] = TK Supplemental Database Code [SDB]
     FC Type Data [TYDT] = TK Type Data [TYDT]
     FC TYPE DATA [DL01] <- TK Description [DL01]
     VA frm_UDC_SystemCode [SY] <- TK Product Code [SY]
     VA frm_Remark1_SystemCode [SY1] <- TK System Code [SY1]
     VA frm_Remark2_SystemCode [SY2] <- TK System Code [SY2]
     VA frm_UDC_CodeTable [RT] <- TK User Defined Codes [RT]
     VA frm_Remark1_CodeTable [RT1] <- TK User Defined Codes [RT1]
     VA frm_Remark2_CodeTable [RT2] <- TK User Defined Codes [RT2]
     VA frm_szUserDefinedCode [GDC1] <- TK User Defined Code Title [GDC1]
     VA frm_szAmount1 [GDC2] <- TK User Defined Amount Title [GDC2]
     VA frm_szRemark1 [GDC3] <- TK Remark 1 Column Title [GDC3]
     VA frm_szRemark2 [GDC4] <- TK Remark 2 Column Title [GDC4]
     VA frm_szEffectiveFrom [GDC5] <- TK Date #1 Column Title [GDC5]
     VA frm_szEffectiveThru [GDC6] <- TK Date #2 Column Title [GDC6]
     VA frm_szAmount2 [GDC7] <- TK Amount 2 Row Title [GDC7]
     VA frm_szUserDate [GDCA] <- TK User Date Column Title [GDCA]
     VA frm_szQuantity [GDC0] <- TK User Defined Quantity Title [GDC0]
     VA frm_szUserDays [GDCC] <- TK User Days Column Title [GDCC]
     VA frm_szUserDocument [GDC8] <- TK Order Column Title [GDC8]
     VA frm_szUserAddress [GDCD] <- TK User Address Column Title [GDCD]
     VA frm_szRemark3ColumnTitle_GDCE [GDCE] <- TK Remark 3 Column Title [GDCE]
     VA frm_szUserTimeColumnTitle_GDCF [GDCF] <- TK User Time Column Title [GDCF]
//
//     If there are no UDC's defined for remark 1 or remark 2 then disable exits
//
If VA frm_Remark1_CodeTable [RT1] is equal to or empty <Blank>
Or VA frm_Remark1_SystemCode [SY1] is equal to or empty <Blank>
     Disable Control(HC Remark &1)
End If
If VA frm_Remark2_SystemCode [SY2] is equal to or empty <Blank>
Or VA frm_Remark2_CodeTable [RT2] is equal to or empty <Blank>
     Disable Control(HC Remark &2)
End If
//
//     Retrieve length of UDC Value to display for entry assistance
//
If VA frm_UDC_SystemCode [SY] is greater than <Blank>
And VA frm_UDC_CodeTable [RT] is greater than <Blank>
     F0004GetUserDefinedCodeType(B9800470.F0004GetUserDefinedCodeType)
          VA frm_UDC_SystemCode [SY] -> szSystemCode [SY]
          VA frm_UDC_CodeTable [RT] -> szRecordType [RT]
          FC SY/RTDescription [DL01] <- szDescription [DL01]
          "1" -> cCallType [EV01]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageID [DTAI]
          UNDEFINED <> mnCodeSequenceNumber [USEQ]
          UNDEFINED <> szCategoryClassCode [UCD1]
          FC Code Length [CDL] <- mnUDCCodeLength [CDL]
          UNDEFINED <> cDesiredLineYN [LN2]
          UNDEFINED <> cNumericYN [CNUM]
          UNDEFINED <> cMergeControl [MRCT]
          UNDEFINED <> szMergeType [MRTY]
          "1" -> mnIndex [CDL]
          "2" -> mnKeys [CDL]
     // ==============================================================
     //     SAR #3066922 - To disable the UDC Row Exit if the selected Data Type does
     //     not have a UDC table set up for in the Supplemental Data Setup.
     // ==============================================================
Else
     Disable Control(HC &UDC)
End If
//
// ==============================================================
//
//     Replace Columns Heading Title where User Defined Heading Titles exist
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// *01* - LITM (Numero longo do item)
// *02* - AN8 (Codigo do cadastro geral)
// *03* - MCU (Unidade de negocio)
// *04* - NUMB (Codigo do ativo)
// *05* - CO (Companhia)
// *06* - KY (Empresas contabil)
// *07* - ANI (Conta contabil)
// *08* - LNTY (Tipo de linha)
// *09* - AC07 (Tipo de serviço)
VA frm_szColuna_RMK [RMK] = VA frm_szRemark1 [GDC3]
VA frm_szColuna_RMK2 [RMK2] = VA frm_szRemark2 [GDC4]
VA frm_szColuna_RMK3 [RMK3] = VA frm_szRemark3ColumnTitle_GDCE [GDCE]
VA evt_cPrimeiroCaracter_EV01 [EV01] = substr([VA frm_szRemark1 [GDC3]], "0", "1")
If VA evt_cPrimeiroCaracter_EV01 [EV01] is equal to "*"
     VA frm_szRemark1 [GDC3] = substr([VA frm_szRemark1 [GDC3]], "4", "100")
     Show Grid Column(FC Grid, GC GenericText 1)
End If
VA evt_cPrimeiroCaracter_EV01 [EV01] = substr([VA frm_szRemark2 [GDC4]], "0", "1")
If VA evt_cPrimeiroCaracter_EV01 [EV01] is equal to "*"
     VA frm_szRemark2 [GDC4] = substr([VA frm_szRemark2 [GDC4]], "4", "100")
     Show Grid Column(FC Grid, GC GenericText 2)
End If
VA evt_cPrimeiroCaracter_EV01 [EV01] = substr([VA frm_szRemark3ColumnTitle_GDCE [GDCE]], "0", "1")
If VA evt_cPrimeiroCaracter_EV01 [EV01] is equal to "*"
     VA frm_szRemark3ColumnTitle_GDCE [GDCE] = substr([VA frm_szRemark3ColumnTitle_GDCE [GDCE]], "4", "100")
     Show Grid Column(FC Grid, GC GenericText 3)
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 18/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
VA evt_cDemandSchedDelivered_EV01 [EV01] = "0"
IsDemandSchedulingDelivered(N40R0940.IsDemandSchedulingDelivered)
     VA evt_cDemandSchedDelivered_EV01 [EV01] <- cDemandSchedulingReleased [DSRFU]
If VA evt_cDemandSchedDelivered_EV01 [EV01] is equal to "1"
     //
     If VA frm_szRemark3ColumnTitle_GDCE [GDCE] is greater than <Blank>
          Set Grid Column Heading(FC Grid, GC RemarksLine 3, VA frm_szRemark3ColumnTitle_GDCE)
          Set Grid Column Heading(FC Grid, GC GenericText 3, "Descrição")
     End If
     //
     If VA frm_szUserTimeColumnTitle_GDCF [GDCF] is greater than <Blank>
          Set Grid Column Heading(FC Grid, GC TimeAdditional, VA frm_szUserTimeColumnTitle_GDCF)
     End If
     //
Else
     Hide Grid Column(FC Grid, GC TimeAdditional)
     Hide Grid Column(FC Grid, GC RemarksLine 3)
End If
//
If VA frm_szUserDefinedCode [GDC1] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC UserDef Code, VA frm_szUserDefinedCode)
End If
//
If VA frm_szEffectiveFrom [GDC5] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC EffectiveDate, VA frm_szEffectiveFrom)
End If
//
If VA frm_szAmount1 [GDC2] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC User DefinedAmount, VA frm_szAmount1)
End If
//
If VA frm_szRemark1 [GDC3] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC Remark, VA frm_szRemark1)
     Set Grid Column Heading(FC Grid, GC GenericText 1, "Descrição")
End If
//
If VA frm_szRemark2 [GDC4] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC RemarksLine 2, VA frm_szRemark2)
     Set Grid Column Heading(FC Grid, GC GenericText 2, "Descrição")
End If
//
If VA frm_szAmount2 [GDC7] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC User DefinedAmount #2, VA frm_szAmount2)
End If
//
If VA frm_szUserDate [GDCA] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC AddlDate, VA frm_szUserDate)
End If
//
If VA frm_szEffectiveThru [GDC6] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC EndingDate, VA frm_szEffectiveThru)
End If
//
If VA frm_szQuantity [GDC0] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC QuantityOrdered, VA frm_szQuantity)
End If
//
If VA frm_szUserDays [GDCC] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC User DefDays, VA frm_szUserDays)
End If
If VA frm_szUserAddress [GDCD] is greater than <Blank>
     Set Grid Column Heading(FC Grid, GC AddressNumber, VA frm_szUserAddress)
End If
If VA frm_szUserDocument [GDC8] is greater than <Blank>
     //
     // SAR 6754743 - Replaced the GC Column description to correct column
     Set Grid Column Heading(FC Grid, GC RelatedPO/SO No, VA frm_szUserDocument)
End If
//
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 11/02/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
If VA frm_szRemark3ColumnTitle_GDCE [GDCE] is equal to "."
     Hide Grid Column(FC Grid, GC RemarksLine 3)
End If
If VA frm_szUserTimeColumnTitle_GDCF [GDCF] is equal to "."
     Hide Grid Column(FC Grid, GC TimeAdditional)
End If
If VA frm_szUserDefinedCode [GDC1] is equal to "."
     Hide Grid Column(FC Grid, GC UserDef Code)
     Hide Grid Column(FC Grid, GC Description)
End If
If VA frm_szEffectiveFrom [GDC5] is equal to "."
     Hide Grid Column(FC Grid, GC EffectiveDate)
End If
If VA frm_szAmount1 [GDC2] is equal to "."
     Hide Grid Column(FC Grid, GC User DefinedAmount)
End If
If VA frm_szRemark1 [GDC3] is equal to "."
     Hide Grid Column(FC Grid, GC Remark)
End If
If VA frm_szRemark2 [GDC4] is equal to "."
     Hide Grid Column(FC Grid, GC RemarksLine 2)
End If
If VA frm_szUserDate [GDCA] is equal to "."
     Hide Grid Column(FC Grid, GC AddlDate)
End If
If VA frm_szEffectiveThru [GDC6] is equal to "."
     Hide Grid Column(FC Grid, GC EndingDate)
End If
If VA frm_szQuantity [GDC0] is equal to "."
     Hide Grid Column(FC Grid, GC QuantityOrdered)
End If
If VA frm_szUserDays [GDCC] is equal to "."
     Hide Grid Column(FC Grid, GC User DefDays)
End If
If VA frm_szUserAddress [GDCD] is equal to "."
     Hide Grid Column(FC Grid, GC AddressNumber)
     Hide Grid Column(FC Grid, GC AlphaName)
End If
If VA frm_szUserDocument [GDC8] is equal to "."
     Hide Grid Column(FC Grid, GC RelatedPO/SO No)
     Hide Grid Column(FC Grid, GC Rel OrdType)
End If
If VA frm_szAmount2 [GDC7] is equal to "."
     Hide Grid Column(FC Grid, GC User DefinedAmount #2)
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 11/02/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: General Description Entry - W00092C
Event: Grid Record is Fetched
Event GUID: 5ef166f1-e064-11d1-9ac9-00600832fe19
=============================================
//
// Set text indicator
Media Object Structures(GT00092A,  <Exist>, VA frm_GenericTextIndicator, BC Supplemental Database Code (F00092), BC Type Data (F00092), BC Business Unit (F00092), BC Document Company (F00092), .)
If VA frm_GenericTextIndicator [GENTXT] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
Else
     Set Grid Text Indicator(FC Grid, <Current Row>,  <No>)
End If
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 22/07/19 - Inicio
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK [RMK]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [BC Name - Remark (F00092.0) [RMK]]
VA frm_mnColuna_NUMB [NUMB] = [BC Name - Remark (F00092.0) [RMK]]
VA frm_szNameRemark_RMK [RMK] = BC Name - Remark (F00092.0) [RMK]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
GC Generic Text 1 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK2 [RMK2]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [BC Name - Remark (F00092.0) [RMK2]]
VA frm_mnColuna_NUMB [NUMB] = [BC Name - Remark (F00092.0) [RMK2]]
VA frm_szNameRemark_RMK [RMK] = BC Name - Remark (F00092.0) [RMK2]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
GC Generic Text 2 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
//
VA frm_szGenericText_TXT0 [TXT0] = <Blank>
VA frm_szAccountId_AID [AID] = <Blank>
VA frm_szCodigo_DL01 [DL01] = substr([VA frm_szColuna_RMK3 [RMK3]], "0", "4")
VA frm_mnColuna_AN8 [AN8] = [BC Text Remark (F00092.0) [RMK3]]
VA frm_mnColuna_NUMB [NUMB] = [BC Text Remark (F00092.0) [RMK3]]
VA frm_szNameRemark_RMK [RMK] = BC Text Remark (F00092.0) [RMK3]
If VA frm_szCodigo_DL01 [DL01] is equal to "*01*"
     F4101.FetchSingle  [Index 2: 2nd Item Number]
          VA frm_szNameRemark_RMK [RMK] = TK 2nd Item Number [LITM]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DSC1]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*02*"
     F0101.FetchSingle  [Index 1: Address #]
          VA frm_mnColuna_AN8 [AN8] = TK Address Number [AN8]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name - Alpha [ALPH]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*03*"
     F0006.FetchSingle  [Index 1: Cost Center]
          VA frm_szNameRemark_RMK [RMK] = TK Business Unit [MCU]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Compressed [DC]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*04*"
     F1201.FetchSingle  [Index 1: Item Number]
          VA frm_mnColuna_NUMB [NUMB] = TK Asset Item Number [NUMB]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*05*"
     F0010.FetchSingle  [Index 1: Company]
          VA frm_szNameRemark_RMK [RMK] = TK Company [CO]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Name [NAME]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*06*"
     VA frm_szProductCode_SY [SY] = "00"
     VA frm_szUserDefinedCodes_RT [RT] = "01"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*07*"
     ValidateAccountNumber(XX0901.ValidateAccountNumber)
          VA frm_szNameRemark_RMK [RMK] -> szAccountNumber [ANI]
          VA frm_szAccountId_AID [AID] <> szAccountID [AID]
          "7" -> cBasedOnFormat [EV01]
     F0901.FetchSingle  [Index 3: Account Id]
          VA frm_szAccountId_AID [AID] = TK Account ID [AID]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description [DL01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*08*"
     F40205.FetchSingle  [Index 1: line type file]
          VA frm_szNameRemark_RMK [RMK] = TK Line Type [LNTY]
          VA frm_szGenericText_TXT0 [TXT0] <- TK Description - Line Type [LNDS]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*09*"
     VA frm_szProductCode_SY [SY] = "01"
     VA frm_szUserDefinedCodes_RT [RT] = "07"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
If VA frm_szCodigo_DL01 [DL01] is equal to "*10*"
     VA frm_szProductCode_SY [SY] = "57"
     VA frm_szUserDefinedCodes_RT [RT] = "UN"
     GetUDC(X0005.GetUDC)
          VA frm_szProductCode_SY [SY] -> szSystemCode [SY]
          VA frm_szUserDefinedCodes_RT [RT] -> szRecordTypeCode [RT]
          VA frm_szNameRemark_RMK [RMK] -> szUserDefinedCode [KY]
          VA frm_szGenericText_TXT0 [TXT0] <> szDescription001 [DL01]
          "1" -> cSuppressErrorMessage [EV01]
End If
GC Generic Text 3 [TXT0] = VA frm_szGenericText_TXT0 [TXT0]
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Giovani Perotto Mesquita - 22/07/19 - Fim
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

=============================================
Form: General Description Entry - W00092C
Event: Write Grid Line-Before
Event GUID: f57e0435-a23a-11d0-a204-0000f6728a56
=============================================
If FC Code Length [CDL] is greater than "0"
     GetUDC(X0005.GetUDC)
          UNDEFINED <> szDataDictionaryItem [DTAI]
          VA frm_UDC_SystemCode [SY] -> szSystemCode [SY]
          VA frm_UDC_CodeTable [RT] -> szRecordTypeCode [RT]
          GC User Def Code [KY] -> szUserDefinedCode [KY]
          FC Code Length [CDL] -> mnKeyFieldLength [AS]
          SL LanguagePreference -> szLanguagePreference [LNGP]
          GC Description  [DL01] <- szDescription001 [DL01]
          UNDEFINED <> szDescription002 [DL02]
          UNDEFINED <> szSpecialHandlingCode [SPHD]
          UNDEFINED <> cUdcOwnershipFlag [UDCO]
          UNDEFINED <> cHardCodedYn [HRDC]
          UNDEFINED <> cSuppressErrorMessage [EV01]
          UNDEFINED <> szErrorMessageId [DTAI]
          UNDEFINED <> cUDCOne [EV01]
End If
//
//     The unique key ID is the key.  Assign the highest number
//
If GC Unique Key ID [UKID] is equal to "0"
     VA frm_LastUniqueKeyUsed [UKID] = [VA frm_LastUniqueKeyUsed [UKID]]+1
     GC Unique Key ID [UKID] = VA frm_LastUniqueKeyUsed [UKID]
Else
     If GC Unique Key ID [UKID] is greater than VA frm_LastUniqueKeyUsed [UKID]
          VA frm_LastUniqueKeyUsed [UKID] = GC Unique Key ID [UKID]
     End If
End If
//
// Retrieve Alpha Name
//
// ----------------------------------------------------------------------------
//                            SAR # 2095912 dt 04/03/98
//            The BSFN is replaced because the existed one did not return the
//              error message and suppress error message flag.
// -----------------------------------------------------------------------------
If GC Address Number [AN8] is not equal to "0"
And GC Address Number [AN8] is not equal to <NULL>
And GC Address Number [AN8] is not equal to <Blank>
     VerifyAndGetF0101ForOP(B4000880.VerifyAndGetF0101ForOP)
          GC Address Number [AN8] -> mnAddressNumber [AN8]
          GC Alpha Name [DL01] <- szAlphaName [ALPH]
          UNDEFINED <> jdAddressEffectiveDate [EFTB]
          UNDEFINED <> szTaxCertificate [TXCT]
          UNDEFINED <> szCreditMessage [CM]
          UNDEFINED <> mnRelatedAddress1 [AN81]
          UNDEFINED <> mnRelatedAddress2 [AN82]
          UNDEFINED <> mnRelatedAddress3 [AN83]
          UNDEFINED <> mnRelatedAddress4 [AN84]
          UNDEFINED <> mnRelatedAddress5 [AN85]
          UNDEFINED <> mnRelatedAddress6 [AN86]
          UNDEFINED <> szBranchPlant [MCU]
          UNDEFINED <> szLanguagePreference [LNGP]
          UNDEFINED <> szErrorMessage [DTAI]
          "1" -> cSuppressError [ERR]
          UNDEFINED <> szTaxID [TAX]
          UNDEFINED <> cPersonCorporationCode [TAXC]
End If
//
// Begin SAR 5932051  JB6859887  8/2/02
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
VA grd_cGridRecordExist_EV01 [EV01] = "1"
// ~~~~~~~~~~~~~~~~~~~~~~~~~~
// End SAR 5932051

=============================================
Form: General Description Entry - W00092C
Event: Last Grid Record Has Been Read
Event GUID: f57dfd46-a23a-11d0-a204-0000f6728a56
=============================================
If FI cCopyMode [EV01] is equal to "1"
     FC Business Unit-1 [MCU] = <NULL>
     FC Document Company-1 [KCO] = <NULL>
     FC Num. Key 2-1 [SBN2] = "0"
     FC Num. Key 1-1 [SBN1] = "0"
     FC Alpha Key 2-1 [SBA2] = <NULL>
     FC Alpha Key 1-1 [SBA1] = <NULL>
End If




=============================================
Form: Work With Supplemental Data - W00092D
Event: Form Variables
Event GUID: 90934401-a23d-11d0-a204-0000f6728a56
=============================================
frm_SuppDatabaseByBranch [EV01]
frm_InventoryShortItemNumber [ITM]
frm_NumericFlag1 [SFN1]
frm_NumericFlag2 [SFN2]
frm_AlphaFlag1 [SFA1]
frm_AlphaFlag2 [SFA2]
frm_MCUFlag [FMC6]
frm_KCOFlag [FKCO]
frm_1stPositionFilled [EV01]
frm_2ndPositionFilled [EV01]
frm_3rdPositionFilled [EV01]
frm_BusinessUnitPass [MCU]
frm_CompanyPass [KCO]
frm_Alpha1Pass [SBA1]
frm_Alpha2Pass [SBA2]
frm_Numeric1Pass [SBN1]
frm_Numeric2Pass [SBN2]
frm_ShowRow1 [INT01]
frm_ShowRow2 [INT01]
frm_ShowRow3 [INT01]
frm_Error [EV01]
frm_Row1TabError [EV01]
frm_Row2TabError [EV01]
frm_Row3TabError [EV01]
frm_NERError [ERRC]
frm_ErrorMessageID [DTAI]
frm_FileName [FILE]
frm_F0101SearchType [AT1]
frm_NumericAlias1 [SAL3]
frm_NumericAlias2 [SAL4]
frm_AlphanumericAlias1 [SAL1]
frm_AlphanumericAlias2 [SAL2]
frm_USER_User_Id [USER]
frm_PID_Program_Id [PID]
frm_JOBN_Workstation_Id [JOBN]
frm_UPMJ_Date_Updated [UPMJ]
frm_TDAY_Time_Updated [TDAY]
frm_UKID_Unique_Id [UKID]
frm_PreviousPrimaryAsset [UITM]
frm_ShowAddressDescriptionRow [INT01]
frm_AddressBookDescription [ALPH]
frm_AddressBookNumber [AN8]
frm_AssetNumber_NUMB [NUMB]
frm_Item1 [EV01]
frm_Item2 [EV01]
frm_Item3 [EV01]
frm_szCateogryCodeValue_EQCC [EQCC]
frm_cCatCodeRecordsExist_EV01 [EV01]
frm_cDataTypeExists_EV01 [EV01]
frm_mnSuppDataCategory_SUPC [SUPC]
frm_mnSuppDataAssetNumber_NUMB [NUMB]
frm_szDocumentCompany_DL01 [DL01]
frm_szBusinessUnit_DL01 [DL01]
frm_szAlphaKey1_DL01 [DL01]
frm_szAlphaKey2_DL01 [DL01]
frm_szNumKey1_DL01 [DL01]
frm_szNumKey2_DL01 [DL01]
frm_nExternalServicePack_SPEXT [SPEXT]
frm_2ndItemNumber1Alias [SAL3]
frm_2ndItemNumber2Alias [SAL3]
frm_2ndItemNumber3Alias [SAL3]

=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC OK/Select
Event: Button Clicked
Event GUID: 909344ca-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_szFormInterconnect_DL [DL]
evt_cErrorCode_ERRC [ERRC]
----------------------------------------
If VA frm_Error [EV01] is not equal to "1"
     // 
     // ==============================================================
     // 
     If GC Data Mode [DSPM] is equal to "C"
          Call App:P00092 Form:W00092C Version: 
               GC Data Type [TYDT] -> szType_Data [TYDT]
               FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
               VA frm_Alpha1Pass [SBA1] -> szSuppDataAlphaKey1 [SBA1]
               VA frm_Alpha2Pass [SBA2] -> szSuppDataAlphaKey2 [SBA2]
               VA frm_Numeric1Pass [SBN1] -> mnSuppDataNumericKey1 [SBN1]
               VA frm_Numeric2Pass [SBN2] -> mnSuppDataNumericKey2 [SBN2]
               VA frm_CompanyPass [KCO] -> szCompanyKey [KCO]
               VA frm_BusinessUnitPass [MCU] -> szCostCenter [MCU]
               FC DSC1-Position1 [DSC1] -> szDescriptionLine1 [DSC1]
               FC DSC1-Position2 [DSC1] -> szDescriptionLine2 [DSC2]
               FC DSC1-Position3 [DSC1] -> szDescriptionLine3 [DSC3]
               UNDEFINED <> cCopyMode [EV01]
     End If
     // 
     // ===============================================================
     // 
     //  'N' or 'M', exit to generic text
     // 
     If GC Data Mode [DSPM] is equal to "N"
     Or GC Data Mode [DSPM] is equal to "M"
          Press Button(HC &Attachments)
     End If
     // 
     // ===============================================================
     // 
     // If the grid row's display mode is equal to 'P' call business function to run
     // the program selected by the user.
     // 
     If GC Data Mode [DSPM] is equal to "P"
          // SAR 7444843 - Only call this function is the external release is greater
          // than or equal to 5, otherwise the system function does not exist.
          If VA frm_nExternalServicePack_SPEXT [SPEXT] is greater than or equal to "5"
               FormatSuppDBFormInterconnect(B4101840.FormatSuppDBFormInterconnect)
                    FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
                    GC Data Type [TYDT] -> szDataType [TYDT]
                    VA frm_BusinessUnitPass [MCU] -> szBranchPlant [MCU]
                    VA frm_CompanyPass [KCO] -> szKeyCompany [KCO]
                    VA frm_Alpha1Pass [SBA1] -> szAlphaKey1 [SBA1]
                    VA frm_Alpha2Pass [SBA2] -> szAlphaKey2 [SBA2]
                    VA frm_Numeric1Pass [SBN1] -> mnNumericKey1 [SBN1]
                    VA frm_Numeric2Pass [SBN2] -> mnNumericKey2 [SBN2]
                    VA evt_szFormInterconnect_DL [DL] <> szFormattedFormInterconnect [DL]
                    VA evt_cErrorCode_ERRC [ERRC] <- cErrorCode [ERRC]
               If VA evt_cErrorCode_ERRC [ERRC] is not equal to "1"
                    Dynamic Form Interconnect(Web Only)(GC ApplicationID, GC ProgramName, GC Version, VA evt_szFormInterconnect_DL)
               End If
          End If
     End If
     // 
     // ==============================================================
     // 
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC Find records
Event: Button Clicked
Event GUID: 5ef166f5-e064-11d1-9ac9-00600832fe19
=============================================
// 
VA frm_Error [EV01] = <NULL>
VA frm_ErrorMessageID [DTAI] = <NULL>
VA frm_F0101SearchType [AT1] = <Blank>
// 
Press Button(HC ErrorCheck)
// 
If VA frm_Error [EV01] is not equal to "1"
     VerifySupplementalDBKeys(N0000158.VerifySupplementalDBKeys)
          FC Supplemental Database Code [SDB] -> szSupplementalDatabaseCode [SDB]
          VA frm_BusinessUnitPass [MCU] <> szBusinessUnit [MCU]
          VA frm_CompanyPass [KCO] <> szKeyCompany [KCO]
          VA frm_Numeric1Pass [SBN1] <> mnNumericKey1 [SBN1]
          VA frm_Numeric2Pass [SBN2] <> mnNumericKey2 [SBN2]
          VA frm_Alpha1Pass [SBA1] <> szAlphanumericKey1 [SBA1]
          VA frm_Alpha2Pass [SBA2] <> szAlphanumericKey2 [SBA2]
          UNDEFINED <> cSuppressErrorMessage [SUPPS]
          VA frm_ErrorMessageID [DTAI] <> szErrorMessageID [DTAI]
     If VA frm_ErrorMessageID [DTAI] is not equal to <Blank>
     And VA frm_ErrorMessageID [DTAI] is not equal to <NULL>
          VA frm_Error [EV01] = "1"
     End If
End If
// 
If VA frm_Error [EV01] is equal to "1"
     Suppress Find
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC Copy record
Event: Button Clicked
Event GUID: f57e0446-a23a-11d0-a204-0000f6728a56
=============================================
Call App:P00092 Form:W00092C Version: 
     GC Data Type [TYDT] -> szType_Data [TYDT]
     GC SDB Code [SDB] -> szSupplementalDatabaseCode [SDB]
     VA frm_Alpha1Pass [SBA1] -> szSuppDataAlphaKey1 [SBA1]
     VA frm_Alpha2Pass [SBA2] -> szSuppDataAlphaKey2 [SBA2]
     VA frm_Numeric1Pass [SBN1] -> mnSuppDataNumericKey1 [SBN1]
     VA frm_Numeric2Pass [SBN2] -> mnSuppDataNumericKey2 [SBN2]
     VA frm_CompanyPass [KCO] -> szCompanyKey [KCO]
     VA frm_BusinessUnitPass [MCU] -> szCostCenter [MCU]
     FC DSC1-Position1 [DSC1] -> szDescriptionLine1 [DSC1]
     FC DSC1-Position2 [DSC1] -> szDescriptionLine2 [DSC2]
     FC DSC1-Position3 [DSC1] -> szDescriptionLine3 [DSC3]
     "1" -> cCopyMode [EV01]


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC Error Checking
Event: Button Clicked
Event GUID: f57dfaa8-a23a-11d0-a204-0000f6728a56
=============================================
VA frm_Error [EV01] = "0"
If VA frm_ShowRow1 [INT01] is equal to "1"
     If FC Business Unit-1 [MCU] is not equal to <Blank>
          VA frm_BusinessUnitPass [MCU] = FC Business Unit-1 [MCU]
     Else
          Set Control Error(FC Business Unit-1, "0003")
          VA frm_Error [EV01] = "1"
     End If
Else
     If VA frm_ShowRow1 [INT01] is equal to "2"
          If FC Document Company-1 [KCO] is not equal to <Blank>
               VA frm_CompanyPass [KCO] = FC Document Company-1 [KCO]
          Else
               Set Control Error(FC Document Company-1, "0003")
               VA frm_Error [EV01] = "1"
          End If
     Else
          If VA frm_ShowRow1 [INT01] is equal to "3"
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If FC Address Number 1 [AN8] is not equal to <Blank>
                    And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                         VA frm_Numeric1Pass [SBN1] = FC Address Number 1 [AN8]
                    End If
               End If
               //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If VA frm_NumericAlias1 [SAL3] is not equal to "ITM"
                    And VA frm_NumericAlias1 [SAL3] is not equal to "NUMB"
                         If FC Num. Key 1-1 [SBN1] is not equal to <Blank>
                              VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-1 [SBN1]
                         Else
                              Set Control Error(FC Num. Key 1-1, "0003")
                              VA frm_Error [EV01] = "1"
                         End If
                    Else
                         If FC UITM-2ndItemNumber1 [UITM] is equal to or empty <Blank>
                              Set Control Error(FC UITM-2ndItemNumber1, "0003")
                         End If
                    End If
               End If
          Else
               If VA frm_ShowRow1 [INT01] is equal to "4"
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If FC Address Number 1 [AN8] is not equal to <Blank>
                         And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                              VA frm_Numeric2Pass [SBN2] = FC Address Number 1 [AN8]
                         End If
                    End If
                    //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If VA frm_NumericAlias2 [SAL4] is not equal to "ITM"
                         And VA frm_NumericAlias2 [SAL4] is not equal to "NUMB"
                              If FC Num. Key 2-1 [SBN2] is not equal to <Blank>
                                   VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-1 [SBN2]
                              Else
                                   Set Control Error(FC Num. Key 2-1, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         Else
                              If FC UITM-2ndItemNumber1 [UITM] is equal to or empty <Blank>
                                   Set Control Error(FC UITM-2ndItemNumber1, "0003")
                              End If
                         End If
                    End If
               Else
                    If VA frm_ShowRow1 [INT01] is equal to "5"
                         If VA frm_AlphanumericAlias1 [SAL1] is not equal to "JBST"
                              If FC Alpha Key 1-1 [SBA1] is not equal to <Blank>
                                   VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-1 [SBA1]
                              Else
                                   Set Control Error(FC Alpha Key 1-1, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         End If
                    Else
                         If VA frm_ShowRow1 [INT01] is equal to "6"
                              If VA frm_AlphanumericAlias2 [SAL2] is not equal to "JBST"
                                   If FC Alpha Key 2-1 [SBA2] is not equal to <Blank>
                                        VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-1 [SBA2]
                                   Else
                                        Set Control Error(FC Alpha Key 2-1, "0003")
                                        VA frm_Error [EV01] = "1"
                                   End If
                              End If
                         End If
                    End If
               End If
          End If
     End If
End If
If VA frm_ShowRow2 [INT01] is equal to "1"
     If FC Business Unit-2 [MCU] is not equal to <Blank>
          VA frm_BusinessUnitPass [MCU] = FC Business Unit-2 [MCU]
     Else
          Set Control Error(FC Business Unit-2, "0003")
          VA frm_Error [EV01] = "1"
     End If
Else
     If VA frm_ShowRow2 [INT01] is equal to "2"
          If FC Document Company-2 [KCO] is not equal to <Blank>
               VA frm_CompanyPass [KCO] = FC Document Company-2 [KCO]
          Else
               Set Control Error(FC Document Company-2, "0003")
               VA frm_Error [EV01] = "1"
          End If
     Else
          If VA frm_ShowRow2 [INT01] is equal to "3"
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If FC Address Number 2 [AN8] is not equal to <Blank>
                    And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                         VA frm_Numeric1Pass [SBN1] = FC Address Number 2 [AN8]
                    End If
               End If
               // 
               //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If VA frm_NumericAlias1 [SAL3] is not equal to "ITM"
                    And VA frm_NumericAlias2 [SAL4] is not equal to "NUMB"
                         If FC Num. Key 1-2 [SBN1] is not equal to <Blank>
                              VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-2 [SBN1]
                         Else
                              Set Control Error(FC Num. Key 1-2, "0003")
                              VA frm_Error [EV01] = "1"
                         End If
                    Else
                         If FC UITM-2ndItemNumber2 [UITM] is equal to or empty <Blank>
                              Set Control Error(FC UITM-2ndItemNumber2, "0003")
                         End If
                    End If
               End If
          Else
               If VA frm_ShowRow2 [INT01] is equal to "4"
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If FC Address Number 2 [AN8] is not equal to <Blank>
                         And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                              VA frm_Numeric2Pass [SBN2] = FC Address Number 2 [AN8]
                         End If
                    End If
                    //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If VA frm_NumericAlias2 [SAL4] is not equal to "ITM"
                         And VA frm_NumericAlias2 [SAL4] is not equal to "NUMB"
                              If FC Num. Key 2-2 [SBN2] is not equal to <Blank>
                                   VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-2 [SBN2]
                              Else
                                   Set Control Error(FC Num. Key 2-2, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         Else
                              If FC UITM-2ndItemNumber2 [UITM] is equal to or empty <Blank>
                                   Set Control Error(FC UITM-2ndItemNumber2, "0003")
                              End If
                         End If
                    End If
               Else
                    If VA frm_ShowRow2 [INT01] is equal to "5"
                         If VA frm_AlphanumericAlias1 [SAL1] is not equal to "JBST"
                              If FC Alpha Key 1-2 [SBA1] is not equal to <Blank>
                                   VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-2 [SBA1]
                              Else
                                   Set Control Error(FC Alpha Key 1-2, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         End If
                    Else
                         If VA frm_ShowRow2 [INT01] is equal to "6"
                              If VA frm_AlphanumericAlias2 [SAL2] is not equal to "JBST"
                                   If FC Alpha Key 2-2 [SBA2] is not equal to <Blank>
                                        VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-2 [SBA2]
                                   Else
                                        Set Control Error(FC Alpha Key 2-2, "0003")
                                        VA frm_Error [EV01] = "1"
                                   End If
                              End If
                         End If
                    End If
               End If
          End If
     End If
End If
If VA frm_ShowRow3 [INT01] is equal to "1"
     If FC Business Unit-3 [MCU] is not equal to <Blank>
          VA frm_BusinessUnitPass [MCU] = FC Business Unit-3 [MCU]
     Else
          Set Control Error(FC Business Unit-3, "0003")
          VA frm_Error [EV01] = "1"
     End If
Else
     If VA frm_ShowRow3 [INT01] is equal to "2"
          If FC Document Company-3 [KCO] is not equal to <Blank>
               VA frm_CompanyPass [KCO] = FC Document Company-3 [KCO]
          Else
               Set Control Error(FC Document Company-3, "0003")
               VA frm_Error [EV01] = "1"
          End If
     Else
          If VA frm_ShowRow3 [INT01] is equal to "3"
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If FC Address Number 3 [AN8] is not equal to <Blank>
                    And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                         VA frm_Numeric1Pass [SBN1] = FC Address Number 3 [AN8]
                    End If
               End If
               // 
               //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
               // 
               If VA frm_Numeric1Pass [SBN1] is equal to <Blank>
                    If VA frm_NumericAlias1 [SAL3] is not equal to "ITM"
                    And VA frm_NumericAlias1 [SAL3] is not equal to "NUMB"
                         // 
                         If FC Num. Key 1-3 [SBN1] is not equal to <Blank>
                              VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-3 [SBN1]
                         Else
                              Set Control Error(FC Num. Key 1-3, "0003")
                              VA frm_Error [EV01] = "1"
                         End If
                    Else
                         If FC UITM-2ndItemNumber3 [UITM] is equal to or empty <Blank>
                              Set Control Error(FC UITM-2ndItemNumber3, "0003")
                         End If
                    End If
               End If
          Else
               If VA frm_ShowRow3 [INT01] is equal to "4"
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If FC Address Number 3 [AN8] is not equal to <Blank>
                         And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                              VA frm_Numeric2Pass [SBN2] = FC Address Number 3 [AN8]
                         End If
                    End If
                    //           SAR #2120225  Must also make sure NumericAlias isn't equal to NUMB
                    // 
                    If VA frm_Numeric2Pass [SBN2] is equal to <Blank>
                         If VA frm_NumericAlias2 [SAL4] is not equal to "ITM"
                         And VA frm_NumericAlias2 [SAL4] is not equal to "NUMB"
                              If FC Num. Key 2-3 [SBN2] is not equal to <Blank>
                                   VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-3 [SBN2]
                              Else
                                   Set Control Error(FC Num. Key 2-3, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         Else
                              If FC UITM-2ndItemNumber3 [UITM] is equal to or empty <Blank>
                                   Set Control Error(FC UITM-2ndItemNumber3, "0003")
                              End If
                         End If
                    End If
               Else
                    If VA frm_ShowRow3 [INT01] is equal to "5"
                         If VA frm_AlphanumericAlias1 [SAL1] is not equal to "JBST"
                              If FC Alpha Key 1-3 [SBA1] is not equal to <Blank>
                                   VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-3 [SBA1]
                              Else
                                   Set Control Error(FC Alpha Key 1-3, "0003")
                                   VA frm_Error [EV01] = "1"
                              End If
                         End If
                    Else
                         If VA frm_ShowRow3 [INT01] is equal to "6"
                              If VA frm_AlphanumericAlias2 [SAL2] is not equal to "JBST"
                                   If FC Alpha Key 2-3 [SBA2] is not equal to <Blank>
                                        VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-3 [SBA2]
                                   Else
                                        Set Control Error(FC Alpha Key 2-3, "0003")
                                        VA frm_Error [EV01] = "1"
                                   End If
                              End If
                         End If
                    End If
               End If
          End If
     End If
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC Exit to Data Type Revisions
Event: Button Clicked
Event GUID: 909344a5-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_nGridRowNo_INT01 [INT01]
----------------------------------------
Call App:P00091 Form:W00091D Version: 
     GC Data Type [TYDT] -> szTypeofData [TYDT]
     GC SDB Code [SDB] -> szSupplementalDatabaseCode [SDB]
// SAR 7444843 - Press the find button in case the user changed the
// application, form or version. It won't be reflected in the grid until the
// find button is press again. So the select will still be using the old
// information.
Get Selected Grid Row Number(FC Grid, VA evt_nGridRowNo_INT01)
Press Button(HC Find)
Change Row Selection(FC Grid, VA evt_nGridRowNo_INT01,  <Selected (1)>)


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: HC Generic Text Attachments
Event: Button Clicked
Event GUID: f57df186-a23a-11d0-a204-0000f6728a56
=============================================
// 
// Edit generic text and set grid row indicators
// 
Media Object Structures(GT00092, <Edit>, FC GenericText, FC Supplemental Database Code, GC DataType, VA frm_BusinessUnitPass, VA frm_CompanyPass, VA frm_Numeric1Pass, VA frm_Numeric2Pass, .)
If FC GenericText [PRT1] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
     // If generic text was added and a F00092 record did not previously exist, then
     // add
     If GC Data Mode [DSPM] is equal to "N"
     And GC Record Exists [EV01] is not equal to "1"
     Or GC Data Mode [DSPM] is equal to "M"
     And GC Record Exists [EV01] is not equal to "1"
          VA frm_PID_Program_Id [PID] = "P00092"
          VA frm_UKID_Unique_Id [UKID] = "1"
          GetAuditInfo(B9800100.GetAuditInfo)
               VA frm_USER_User_Id [USER] <- szUserName [USER]
               VA frm_UPMJ_Date_Updated [UPMJ] <- jdDate [DTE]
               VA frm_TDAY_Time_Updated [TDAY] <- mnTime [TME0]
               VA frm_JOBN_Workstation_Id [JOBN] <- szWorkstation_UserId [JOBN]
               UNDEFINED <> szMachineKey [MKEY]
          F00092.Insert  [Index 3: Supp Key, Data Type +]
               FC Supplemental Database Code [SDB] -> TK Supplemental Database Code [SDB]
               GC Data Type [TYDT] -> TK Type Data [TYDT]
               VA frm_Alpha1Pass [SBA1] -> TK Supplemental Data Alpha Key 1 [SBA1]
               VA frm_CompanyPass [KCO] -> TK Document Company [KCO]
               VA frm_Alpha2Pass [SBA2] -> TK Supplemental Data Alpha Key 2 [SBA2]
               VA frm_BusinessUnitPass [MCU] -> TK Business Unit [MCU]
               VA frm_Numeric1Pass [SBN1] -> TK Supplemental Data Numeric Key 1 [SBN1]
               VA frm_Numeric2Pass [SBN2] -> TK Supplementat Data Numeric Key 2 [SBN2]
               VA frm_UKID_Unique_Id [UKID] -> TK Unique Key ID (Internal) [UKID]
               VA frm_USER_User_Id [USER] -> TK User ID [USER]
               VA frm_PID_Program_Id [PID] -> TK Program ID [PID]
               VA frm_JOBN_Workstation_Id [JOBN] -> TK Work Station ID [JOBN]
               VA frm_UPMJ_Date_Updated [UPMJ] -> TK Date - Updated [UPMJ]
               VA frm_TDAY_Time_Updated [TDAY] -> TK Time of Day [TDAY]
          GC Record Exists [EV01] = "1"
     End If
Else
     If GC Data Mode [DSPM] is equal to "N"
     And GC Record Exists [EV01] is equal to "1"
     Or GC Data Mode [DSPM] is equal to "M"
     And GC Record Exists [EV01] is equal to "1"
          VA frm_PID_Program_Id [PID] = "P00092"
          VA frm_UKID_Unique_Id [UKID] = "1"
          F00092.Delete  [Index 5: UniqueID]
               FC Supplemental Database Code [SDB] = TK Supplemental Database Code [SDB]
               GC Data Type [TYDT] = TK Type Data [TYDT]
               VA frm_Alpha1Pass [SBA1] = TK Supplemental Data Alpha Key 1 [SBA1]
               VA frm_CompanyPass [KCO] = TK Document Company [KCO]
               VA frm_Alpha2Pass [SBA2] = TK Supplemental Data Alpha Key 2 [SBA2]
               VA frm_BusinessUnitPass [MCU] = TK Business Unit [MCU]
               VA frm_Numeric1Pass [SBN1] = TK Supplemental Data Numeric Key 1 [SBN1]
               VA frm_Numeric2Pass [SBN2] = TK Supplementat Data Numeric Key 2 [SBN2]
               VA frm_UKID_Unique_Id [UKID] = TK Unique Key ID (Internal) [UKID]
               VA frm_USER_User_Id [USER] = TK User ID [USER]
               VA frm_PID_Program_Id [PID] = TK Program ID [PID]
               VA frm_JOBN_Workstation_Id [JOBN] = TK Work Station ID [JOBN]
               VA frm_UPMJ_Date_Updated [UPMJ] = TK Date - Updated [UPMJ]
               VA frm_TDAY_Time_Updated [TDAY] = TK Time of Day [TDAY]
          GC Record Exists [EV01] = "0"
     End If
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <No>)
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 1-1
Event: Control Exited/Changed-Asynch
Event GUID: f57df175-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 1-1 [SBN1] is not equal to <Blank>
     VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-1 [SBN1]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 1-1 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Grid
Event: Double Click on Row Header
Event GUID: 5ef166f6-e064-11d1-9ac9-00600832fe19
=============================================
Press Button(HC &Attachments)


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 1-2
Event: Control Exited/Changed-Asynch
Event GUID: f57df17a-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 1-2 [SBN1] is not equal to <Blank>
     VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-2 [SBN1]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 1-2 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 2-1
Event: Control Exited/Changed-Asynch
Event GUID: f57df176-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 2-1 [SBN2] is not equal to <Blank>
     VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-1 [SBN2]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 2-1 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 1-1
Event: Control Exited/Changed-Asynch
Event GUID: 909344a4-a23d-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 1-1 [SBA1] is not equal to <Blank>
     VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-1 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 2-1
Event: Control Exited/Changed-Asynch
Event GUID: f57df177-a23a-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 2-1 [SBA2] is not equal to <Blank>
     VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-1 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Business Unit-1
Event: Control Exited/Changed-Asynch
Event GUID: f57df178-a23a-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnSetFlag_MATH01 [MATH01]
----------------------------------------
If FC Business Unit-1 [MCU] is not equal to <Blank>
     VA frm_BusinessUnitPass [MCU] = FC Business Unit-1 [MCU]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Document Company-1
Event: Control Exited/Changed-Asynch
Event GUID: f57df179-a23a-11d0-a204-0000f6728a56
=============================================
If FC Document Company-1 [KCO] is not equal to <Blank>
     VA frm_CompanyPass [KCO] = FC Document Company-1 [KCO]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 1-3
Event: Control Exited/Changed-Asynch
Event GUID: f57df17b-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 1-3 [SBN1] is not equal to <Blank>
     VA frm_Numeric1Pass [SBN1] = FC Num. Key 1-3 [SBN1]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 1-3 [SBN1] -> mnAddressNumber [AN8]
          FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 2-2
Event: Control Exited/Changed-Asynch
Event GUID: f57df17c-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 2-2 [SBN2] is not equal to <Blank>
     VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-2 [SBN2]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 2-2 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Num. Key 2-3
Event: Control Exited/Changed-Asynch
Event GUID: f57df17d-a23a-11d0-a204-0000f6728a56
=============================================
If FC Num. Key 2-3 [SBN2] is not equal to <Blank>
     VA frm_Numeric2Pass [SBN2] = FC Num. Key 2-3 [SBN2]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Num. Key 2-3 [SBN2] -> mnAddressNumber [AN8]
          FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 1-2
Event: Control Exited/Changed-Asynch
Event GUID: 909344a6-a23d-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 1-2 [SBA1] is not equal to <Blank>
     VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-2 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 1-3
Event: Control Exited/Changed-Asynch
Event GUID: 909344a7-a23d-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 1-3 [SBA1] is not equal to <Blank>
     VA frm_Alpha1Pass [SBA1] = FC Alpha Key 1-3 [SBA1]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 2-2
Event: Control Exited/Changed-Asynch
Event GUID: f57df17e-a23a-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 2-2 [SBA2] is not equal to <Blank>
     VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-2 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Alpha Key 2-3
Event: Control Exited/Changed-Asynch
Event GUID: f57df180-a23a-11d0-a204-0000f6728a56
=============================================
If FC Alpha Key 2-3 [SBA2] is not equal to <Blank>
     VA frm_Alpha2Pass [SBA2] = FC Alpha Key 2-3 [SBA2]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Business Unit-2
Event: Control Exited/Changed-Asynch
Event GUID: f57df182-a23a-11d0-a204-0000f6728a56
=============================================
If FC Business Unit-2 [MCU] is not equal to <Blank>
     VA frm_BusinessUnitPass [MCU] = FC Business Unit-2 [MCU]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Business Unit-3
Event: Control Exited/Changed-Asynch
Event GUID: f57df183-a23a-11d0-a204-0000f6728a56
=============================================
If FC Business Unit-3 [MCU] is not equal to <Blank>
     VA frm_BusinessUnitPass [MCU] = FC Business Unit-3 [MCU]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Document Company-2
Event: Control Exited/Changed-Asynch
Event GUID: f57df184-a23a-11d0-a204-0000f6728a56
=============================================
If FC Document Company-2 [KCO] is not equal to <Blank>
     VA frm_CompanyPass [KCO] = FC Document Company-2 [KCO]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Document Company-3
Event: Control Exited/Changed-Asynch
Event GUID: f57df185-a23a-11d0-a204-0000f6728a56
=============================================
If FC Document Company-3 [KCO] is not equal to <Blank>
     VA frm_CompanyPass [KCO] = FC Document Company-3 [KCO]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber1
Event: Control is Exited
Event GUID: 70817226-cea2-11d3-a1f8-00104bc6f74b
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnSetFlag_MATH01 [MATH01]
----------------------------------------
If VA frm_Item1 [EV01] is equal to "1"
     If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
          If FC UITM-2ndItemNumber1 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber1 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric1Pass [SBN1] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric1Pass [SBN1] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber1 [UITM]
          End If
     Else
          // SAR 8444255 - Retreiving the Item Number description
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM-2ndItemNumber1 [UITM] -> szPrimaryItemNumber [UITM]
               FC Item Description1 [DESC] <- szDescription [DSC1]
               VA frm_Numeric1Pass [SBN1] <- mnShortItemNumber [ITM]
               "0" -> cReturnPtr [EV01]
               "1" -> cCallType [EV01]
     End If
Else
     If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
          If FC UITM-2ndItemNumber1 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber1 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric2Pass [SBN2] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric2Pass [SBN2] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber1 [UITM]
          End If
     Else
          // SAR 8444255 - Retreiving the Item Number description
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM-2ndItemNumber1 [UITM] -> szPrimaryItemNumber [UITM]
               FC Item Description1 [DESC] <- szDescription [DSC1]
               VA frm_Numeric2Pass [SBN2] <- mnShortItemNumber [ITM]
               "0" -> cReturnPtr [EV01]
               "1" -> cCallType [EV01]
     End If
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber1
Event: Visual Assist Button Clicked
Event GUID: f7829701-5d5b-11d2-a149-00104bc6f74b
=============================================
// SAR 8878678 - Displaying asset number visual assist only for NUMB.
If VA frm_2ndItemNumber1Alias [SAL3] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM-2ndItemNumber1 [UITM] <- AssetNumberInput [ASII]
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber1
Event: Post Visual Assist Clicked
Event GUID: f7829702-5d5b-11d2-a149-00104bc6f74b
=============================================
If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber1 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber1 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber2
Event: Control is Exited
Event GUID: 70817227-cea2-11d3-a1f8-00104bc6f74b
=============================================
//  
If VA frm_Item2 [EV01] is equal to "1"
     If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
          If FC UITM-2ndItemNumber2 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber2 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric1Pass [SBN1] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric1Pass [SBN1] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber2 [UITM]
          End If
     Else
          // 
          // SAR 4108617 - Begin
          VA frm_Numeric1Pass [SBN1] = <NULL>
          // SAR 8444255 - Retreiving the Item Number Description 
          GetItemMasterDescUOM(B4001040.GetItemMasterDescUOM)
               VA frm_Numeric1Pass [SBN1] <> mnShortItemNumber [ITM]
               FC UITM-2ndItemNumber2 [UITM] <> szPrimaryItemNumber [UITM]
               FC Item Description2 [DESC] <- szDescription [DSC1]
               FC Business Unit-1 [MCU] -> szBranchPlant [MCU]
          // SAR 4108617 - End
          // 
     End If
Else
     If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
          If FC UITM-2ndItemNumber2 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber2 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric2Pass [SBN2] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric2Pass [SBN2] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber2 [UITM]
          End If
     Else
          // SAR 8444255 - Retreiving the Item Number description
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM-2ndItemNumber2 [UITM] -> szPrimaryItemNumber [UITM]
               FC Item Description2 [DESC] <- szDescription [DSC1]
               VA frm_Numeric2Pass [SBN2] <- mnShortItemNumber [ITM]
               "0" -> cReturnPtr [EV01]
               "1" -> cCallType [EV01]
     End If
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber2
Event: Visual Assist Button Clicked
Event GUID: 280a1300-5e31-11d2-a14a-00104bc6f74b
=============================================
// SAR 8878678 - Displaying asset number visual assist only for NUMB.
If VA frm_2ndItemNumber2Alias [SAL3] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM-2ndItemNumber2 [UITM] <- AssetNumberInput [ASII]
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber2
Event: Post Visual Assist Clicked
Event GUID: 280a1301-5e31-11d2-a14a-00104bc6f74b
=============================================
If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber2 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber2 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber3
Event: Control is Exited
Event GUID: 70817228-cea2-11d3-a1f8-00104bc6f74b
=============================================
//  
If VA frm_Item3 [EV01] is equal to "1"
     If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
          If FC UITM-2ndItemNumber3 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber3 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric1Pass [SBN1] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric1Pass [SBN1] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber3 [UITM]
          End If
     Else
          // SAR 8444255 - Retreiving the Item Number description
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM-2ndItemNumber3 [UITM] -> szPrimaryItemNumber [UITM]
               FC Item Description3 [DESC] <- szDescription [DSC1]
               VA frm_Numeric1Pass [SBN1] <- mnShortItemNumber [ITM]
               "0" -> cReturnPtr [EV01]
               "1" -> cCallType [EV01]
     End If
Else
     If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
          If FC UITM-2ndItemNumber3 [UITM] is not equal to VA frm_PreviousPrimaryAsset [UITM]
               F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                    FC UITM-2ndItemNumber3 [UITM] <> szPrimaryAssetNumber [ASII]
                    UNDEFINED <- szDescription [DL01]
                    UNDEFINED <- szDescription02 [DL02]
                    UNDEFINED <- szDescription03 [DL03]
                    <Blank> <> cSymbolIdentifier [SYMID]
                    UNDEFINED <> idF1201RecordPointer [GENLNG]
                    VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
                    UNDEFINED <- szUnitNumber [APID]
                    UNDEFINED <- szSerialNumber [ASID]
                    UNDEFINED -> cReturnPointer [EV01]
                    UNDEFINED -> cSuppressErrorMessages [EV02]
                    UNDEFINED <- szErrorMessageID [DTAI]
                    UNDEFINED <- cAssetItemNumberSymbol [SMI]
                    UNDEFINED <- cUnitNumberSymbol [SMU]
                    UNDEFINED <- cSerialNumberSymbol [SMS]
                    UNDEFINED -> cF0911ReturnFormat [EV03]
               // SAR 1862307 Begin
               // -----------------------------------------------------------------------------
               //     Determine equipment's category code value based on
               //     Equipment Constants. Then check if category code exists in F1392.
               // -----------------------------------------------------------------------------
               If VA frm_Numeric2Pass [SBN2] is greater than "0"
               And FC Supplemental Database Code [SDB] is equal to "AM"
                    F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                         VA frm_Numeric2Pass [SBN2] -> mnAssetItemNumber [NUMB]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                    CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                         "1" -> cModeFlag_EV01 [EV01]
                         VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                         UNDEFINED -> szTypeData_TYDD [TYDD]
                         VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
               End If
               // SAR 1862307 End
               VA frm_PreviousPrimaryAsset [UITM] = FC UITM-2ndItemNumber3 [UITM]
          End If
     Else
          // SAR 8444255 - Retreiving the item number description
          VerifyAndGetItemMaster(X4101.VerifyAndGetItemMaster)
               FC UITM-2ndItemNumber3 [UITM] -> szPrimaryItemNumber [UITM]
               FC Item Description3 [DESC] <- szDescription [DSC1]
               VA frm_Numeric2Pass [SBN2] <- mnShortItemNumber [ITM]
               "0" -> cReturnPtr [EV01]
               "1" -> cCallType [EV01]
     End If
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber3
Event: Visual Assist Button Clicked
Event GUID: 280a1304-5e31-11d2-a14a-00104bc6f74b
=============================================
// SAR 8878678 - Displaying asset number visual assist only for NUMB.
If VA frm_2ndItemNumber3Alias [SAL3] is equal to "NUMB"
     Suppress Default Visual Assist Form
     Call App:P12IS Form:W12ISF Version: 
          FC UITM-2ndItemNumber3 [UITM] <- AssetNumberInput [ASII]
End If

=============================================
Form: Work With Supplemental Data - W00092D
Object: FC UITM-2ndItemNumber3
Event: Post Visual Assist Clicked
Event GUID: 280a1302-5e31-11d2-a14a-00104bc6f74b
=============================================
If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber3 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric1Pass [SBN1] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If
If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
     F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
          FC UITM-2ndItemNumber3 [UITM] <> szPrimaryAssetNumber [ASII]
          UNDEFINED <- szDescription [DL01]
          UNDEFINED <- szDescription02 [DL02]
          UNDEFINED <- szDescription03 [DL03]
          <Blank> -> cSymbolIdentifier [SYMID]
          UNDEFINED <> idF1201RecordPointer [GENLNG]
          VA frm_Numeric2Pass [SBN2] <- mnAssetItemNumber [NUMB]
          UNDEFINED <- szUnitNumber [APID]
          UNDEFINED <- szSerialNumber [ASID]
          UNDEFINED -> cReturnPointer [EV01]
          UNDEFINED -> cSuppressErrorMessages [EV02]
          UNDEFINED <- szErrorMessageID [DTAI]
          UNDEFINED <- cAssetItemNumberSymbol [SMI]
          UNDEFINED <- cUnitNumberSymbol [SMU]
          UNDEFINED <- cSerialNumberSymbol [SMS]
          UNDEFINED -> cF0911ReturnFormat [EV03]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Address Number 1
Event: Control Exited/Changed-Asynch
Event GUID: 0c0d21c3-6ecd-4f51-9cbd-ffaf8433775a
=============================================
// Bug 11054064 – the value of FC Address Number 1 should be passed to the
// corresponding frm_NumericPass according to the frm_NumericAlias being 1 or
// 2
If FC Address Number 1 [AN8] is not equal to "0"
And FC Address Number 1 [AN8] is not equal to <NULL>
And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     VA frm_Numeric1Pass [SBN1] = FC Address Number 1 [AN8]
End If
If FC Address Number 1 [AN8] is not equal to "0"
And FC Address Number 1 [AN8] is not equal to <NULL>
And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     VA frm_Numeric2Pass [SBN2] = FC Address Number 1 [AN8]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
Or VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Address Number 1 [AN8] -> mnAddressNumber [AN8]
          FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Address Number 2
Event: Control Exited/Changed-Asynch
Event GUID: e9704a9f-9ad5-4d06-a5bb-f7dd5bdb04c9
=============================================
If FC Address Number 2 [AN8] is not equal to "0"
And FC Address Number 2 [AN8] is not equal to <NULL>
And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     VA frm_Numeric1Pass [SBN1] = FC Address Number 2 [AN8]
End If
If FC Address Number 2 [AN8] is not equal to "0"
And FC Address Number 2 [AN8] is not equal to <NULL>
And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     VA frm_Numeric2Pass [SBN2] = FC Address Number 2 [AN8]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
Or VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Address Number 2 [AN8] -> mnAddressNumber [AN8]
          FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
End If


=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Object: FC Address Number 3
Event: Control Exited/Changed-Asynch
Event GUID: 27707fdc-7fda-438b-a320-4cc49ed78ce2
=============================================
If FC Address Number 3 [AN8] is not equal to "0"
And FC Address Number 3 [AN8] is not equal to <NULL>
And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
     VA frm_Numeric1Pass [SBN1] = FC Address Number 3 [AN8]
End If
If FC Address Number 3 [AN8] is not equal to "0"
And FC Address Number 3 [AN8] is not equal to <NULL>
And VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     VA frm_Numeric2Pass [SBN2] = FC Address Number 3 [AN8]
End If
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
Or VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
          FC Address Number 3 [AN8] -> mnAddressNumber [AN8]
          FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
End If



=============================================
EVENTS
=============================================
Form: Work With Supplemental Data - W00092D
Event: Dialog is Initialized
Event GUID: 909344a2-a23d-11d0-a204-0000f6728a56
=============================================
//    DATE        SAR             DEVELOPER         DESCRIPTION
// 08/01/06    8174371       JV7445740      Job Type, Job Step Visual Assist
// 04/16/07   8401280        RN9050944   Cannot Enter Supplemental Data
// 05/20/07   8444255       RK9050936      P00092 is not displaying Item
// 08/01/07   8410160        IC9017554      Job Supplemental Data Error
// 
// 
VA frm_2ndPositionFilled [EV01] = "0"
VA frm_1stPositionFilled [EV01] = "0"
// 
// SAR 7444843 - Get the release level.
GetServicePackRelease(B9600500.GetServicePackRelease)
     VA frm_nExternalServicePack_SPEXT [SPEXT] <- nExternalServicePack [SPEXT]

=============================================
Form: Work With Supplemental Data - W00092D
Event: Post Dialog is Initialized
Event GUID: 90934400-a23d-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnSetFlag_MATH01 [MATH01]
----------------------------------------
VA frm_ShowRow3 [INT01] = "0"
VA frm_ShowRow2 [INT01] = "0"
VA frm_ShowRow1 [INT01] = "0"
VA frm_Item1 [EV01] = <NULL>
VA frm_Item2 [EV01] = <NULL>
VA frm_Item3 [EV01] = <NULL>
// // Begin SAR  5637924
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
// // End SAR 5637924
// 
// =======================================================
// 
// Set the variables to be passed equal to the form interconnect values, the
// verification function  uses the VA variables.
// 
If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
     FC Supplemental Database Code [SDB] = FI szSupplementalDatabaseCode [SDB]
Else
     FC Supplemental Database Code [SDB] = PO szSupplementaldatabasecode [SDB]
End If
// 
If FI szCostCenter [MCU] is greater than <Blank>
     VA frm_BusinessUnitPass [MCU] = FI szCostCenter [MCU]
End If
// 
If FI szCompanyKey [KCO] is greater than <Blank>
     VA frm_CompanyPass [KCO] = FI szCompanyKey [KCO]
End If
// 
If FI mnSuppDataNumericKey2 [SBN2] is not equal to "0"
And FI mnSuppDataNumericKey2 [SBN2] is not equal to <NULL>
     VA frm_Numeric2Pass [SBN2] = FI mnSuppDataNumericKey2 [SBN2]
End If
// 
If FI mnSuppDataNumericKey1 [SBN1] is not equal to <NULL>
And FI mnSuppDataNumericKey1 [SBN1] is not equal to "0"
     VA frm_Numeric1Pass [SBN1] = FI mnSuppDataNumericKey1 [SBN1]
End If
// 
If FI szSuppDataAlphaKey2 [SBA2] is greater than <Blank>
     VA frm_Alpha2Pass [SBA2] = FI szSuppDataAlphaKey2 [SBA2]
End If
// 
If FI szSuppDataAlphaKey1 [SBA1] is greater than <Blank>
     VA frm_Alpha1Pass [SBA1] = FI szSuppDataAlphaKey1 [SBA1]
End If
// 
// =======================================================
// 
// Initially hide all fields
// 
Hide Control(FC Document Company-1 [KCO])
Hide Control(FC Business Unit-1 [MCU])
Hide Control(FC Alpha Key 2-1 [SBA2])
Hide Control(FC Alpha Key 1-1 [SBA1])
Hide Control(FC Num. Key 2-1 [SBN2])
Hide Control(FC Num. Key 1-1 [SBN1])
Hide Control(FC Document Company-2 [KCO])
Hide Control(FC Business Unit-2 [MCU])
Hide Control(FC Alpha Key 2-2 [SBA2])
Hide Control(FC Alpha Key 1-2 [SBA1])
Hide Control(FC Num. Key 2-2 [SBN2])
Hide Control(FC Num. Key 1-2 [SBN1])
Hide Control(FC Document Company-3 [KCO])
Hide Control(FC Business Unit-3 [MCU])
Hide Control(FC Alpha Key 2-3 [SBA2])
Hide Control(FC Alpha Key 1-3 [SBA1])
Hide Control(FC Num. Key 2-3 [SBN2])
Hide Control(FC Num. Key 1-3 [SBN1])
Hide Control(FC DSC1-Position3 [DSC1])
Hide Control(FC DSC1-Position2 [DSC1])
Hide Control(FC DSC1-Position1 [DSC1])
Hide Control(FC UITM-2ndItemNumber1 [UITM])
Hide Control(FC UITM-2ndItemNumber2 [UITM])
Hide Control(FC UITM-2ndItemNumber3 [UITM])
Hide Control(FC Address Book Description 1 [ALPH])
Hide Control(FC Address Book Description 2 [ALPH])
Hide Control(FC Address Book Description 3 [ALPH])
// Added for SAR 6546303  JB6859887
Hide Control(FC Address Number 1 [AN8])
Hide Control(FC Address Number 2 [AN8])
Hide Control(FC Address Number 3 [AN8])
// SAR 8444255 - Hide Item Number and company descriptions
Hide Control(FC Item Description1 [DESC])
Hide Control(FC Item Description2 [DESC])
Hide Control(FC Item Description3 [DESC])
Hide Control(FC Document Company Description 1 [DL01])
Hide Control(FC Document Company Description 2 [DL01])
Hide Control(FC Document Company Description 3 [DL01])
// =======================================================
// 
//     Retrieve key information/structure from SDB Code table
// 
F00090.FetchSingle  [Index 1: SupplDB]
     FC Supplemental Database Code [SDB] = TK Supplemental Database Code [SDB]
     VA frm_NumericFlag1 [SFN1] <- TK SDB Numeric Key Flag 1 [SFN1]
     VA frm_NumericFlag2 [SFN2] <- TK SDB Numeric Keu Flag 2 [SFN2]
     VA frm_AlphaFlag2 [SFA2] <- TK SDB Alpha Key Flag 2 [SFA2]
     VA frm_AlphaFlag1 [SFA1] <- TK SDB Alpha Key Flag 1 [SFA1]
     VA frm_KCOFlag [FKCO] <- TK Key Company Flag [FKCO]
     VA frm_MCUFlag [FMC6] <- TK Business Unit Flag [FMC6]
     VA frm_szDocumentCompany_DL01 [DL01] <- TK Document Company Description [DLKC]
     VA frm_szBusinessUnit_DL01 [DL01] <- TK Business Unit Description [DLMC]
     VA frm_szAlphaKey1_DL01 [DL01] <- TK Supp Data Key Description 1 [SBD1]
     VA frm_szAlphaKey2_DL01 [DL01] <- TK Supp Data Key Description 2 [SBD2]
     VA frm_szNumKey1_DL01 [DL01] <- TK Supp Data Key Description 3 [SBD3]
     VA frm_szNumKey2_DL01 [DL01] <- TK Supp Data Key Description 4 [SBD4]
     VA frm_AlphanumericAlias1 [SAL1] <- TK SDB Alpha Alias 1 [SAL1]
     VA frm_AlphanumericAlias2 [SAL2] <- TK SDB Alpha Alias 2 [SAL2]
     VA frm_NumericAlias1 [SAL3] <- TK SDB Numeric Alias 1 [SAL3]
     VA frm_NumericAlias2 [SAL4] <- TK SDB Numeric Alias 2 [SAL4]
     VA frm_FileName [FILE] <- TK File Name [FILE]
// 
//     If language preference active, retrieve from override language file
// 
If SL LanguagePreference is not equal to <Blank>
     F00090D.FetchSingle  [Index 1: Language Preference]
          FC Supplemental Database Code [SDB] = TK Supplemental Database Code [SDB]
          SL LanguagePreference = TK Language [LNGP]
          VA frm_szAlphaKey1_DL01 [DL01] <- TK Supp Data Key Description 1 [SBD1]
          VA frm_szAlphaKey2_DL01 [DL01] <- TK Supp Data Key Description 2 [SBD2]
          VA frm_szNumKey1_DL01 [DL01] <- TK Supp Data Key Description 3 [SBD3]
          VA frm_szNumKey2_DL01 [DL01] <- TK Supp Data Key Description 4 [SBD4]
          VA frm_szBusinessUnit_DL01 [DL01] <- TK Business Unit Description [DLMC]
          VA frm_szDocumentCompany_DL01 [DL01] <- TK Document Company Description [DLKC]
End If
// 
// =======================================================
// 
//     Process Business Unit as a key
// 
If VA frm_MCUFlag [FMC6] is equal to "1"
     // 
     If VA frm_szBusinessUnit_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               "MCU" -> szDataItem [DTAI]
               VA frm_szBusinessUnit_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     // 
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          Show Control(FC Business Unit-1 [MCU])
          // // Begin SAR  5637924
          If VA evt_mnSetFlag_MATH01 [MATH01] is equal to "0"
               Set Control Focus(FC Business Unit-1 [MCU])
               VA evt_mnSetFlag_MATH01 [MATH01] = "1"
          End If
          // // End SAR 5637924
          FC Business Unit-1 [MCU] = FI szCostCenter [MCU]
          FC DSC1-Position1 [DSC1] = VA frm_szBusinessUnit_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "1"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               Show Control(FC Business Unit-2 [MCU])
               FC Business Unit-2 [MCU] = FI szCostCenter [MCU]
               FC DSC1-Position2 [DSC1] = VA frm_szBusinessUnit_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "1"
          Else
               Show Control(FC Business Unit-3 [MCU])
               FC Business Unit-3 [MCU] = FI szCostCenter [MCU]
               FC DSC1-Position3 [DSC1] = VA frm_szBusinessUnit_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "1"
          End If
     End If
End If
// 
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
If VA frm_KCOFlag [FKCO] is equal to "1"
     If VA frm_szDocumentCompany_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               "KCO" -> szDataItem [DTAI]
               VA frm_szDocumentCompany_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          Show Control(FC Document Company-1 [KCO])
          FC Document Company-1 [KCO] = FI szCompanyKey [KCO]
          FC DSC1-Position1 [DSC1] = VA frm_szDocumentCompany_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "2"
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               Show Control(FC Document Company-2 [KCO])
               FC Document Company-2 [KCO] = FI szCompanyKey [KCO]
               FC DSC1-Position2 [DSC1] = VA frm_szDocumentCompany_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "2"
          Else
               Show Control(FC Document Company-3 [KCO])
               FC Document Company-3 [KCO] = FI szCompanyKey [KCO]
               FC DSC1-Position3 [DSC1] = VA frm_szDocumentCompany_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "2"
          End If
     End If
End If
// 
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
If VA frm_NumericFlag1 [SFN1] is equal to "1"
     If VA frm_szNumKey1_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               VA frm_NumericAlias1 [SAL3] -> szDataItem [DTAI]
               VA frm_szNumKey1_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          //  
          //                             SAR #2120225 
          // If a Form Interconnect value is being passed, validate it and return the
          // primary number.  Assign the primary number to the form control value and 
          // show it. 
          // 
          If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
               Show Control(FC UITM-2ndItemNumber1 [UITM])
               // SAR 8878678
               VA frm_2ndItemNumber1Alias [SAL3] = VA frm_NumericAlias1 [SAL3]
               // // Begin SAR  5637924
               Set Control Focus(FC UITM-2ndItemNumber1 [UITM])
               // // End SAR 5637924
               If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                    ConvertNumericToString(B0000045.ConvertNumericToString)
                         FI mnSuppDataNumericKey1 [SBN1] -> mnMathNumeric01 [MATH01]
                         FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                    // SAR 1862307 Begin
                    F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                         FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                         UNDEFINED <- szDescription [DL01]
                         UNDEFINED <- szDescription02 [DL02]
                         UNDEFINED <- szDescription03 [DL03]
                         "1" <> cSymbolIdentifier [SYMID]
                         UNDEFINED <> idF1201RecordPointer [GENLNG]
                         VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                         UNDEFINED <- szUnitNumber [APID]
                         UNDEFINED <- szSerialNumber [ASID]
                         UNDEFINED -> cReturnPointer [EV01]
                         UNDEFINED -> cSuppressErrorMessages [EV02]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         UNDEFINED <- cAssetItemNumberSymbol [SMI]
                         UNDEFINED <- cUnitNumberSymbol [SMU]
                         UNDEFINED <- cSerialNumberSymbol [SMS]
                         UNDEFINED -> cF0911ReturnFormat [EV03]
                    // -----------------------------------------------------------------------------
                    //     Determine equipment's category code value based on
                    //     Equipment Constants. Then check if category code exists in F1392.
                    // -----------------------------------------------------------------------------
                    If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                    And FC Supplemental Database Code [SDB] is equal to "AM"
                         F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                              VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                         CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                              "1" -> cModeFlag_EV01 [EV01]
                              VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                              UNDEFINED -> szTypeData_TYDD [TYDD]
                              VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                    End If
                    // SAR 1862307 End
                    FC UITM-2ndItemNumber1 [UITM] = FI szItemNoUnknownFormat [UITM]
                    VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
               End If
          Else
               If VA frm_NumericAlias1 [SAL3] is equal to "ITM"
                    Show Control(FC UITM-2ndItemNumber1 [UITM])
                    // // Begin SAR  5637924
                    Set Control Focus(FC UITM-2ndItemNumber1 [UITM])
                    // // End SAR 5637924
                    FC UITM-2ndItemNumber1 [UITM] = FI szItemNoUnknownFormat [UITM]
                    // SAR 8444255 - Show Item Description1 field
                    Show Control(FC Item Description1 [DESC])
               Else
                    Show Control(FC Num. Key 1-1 [SBN1])
                    // Added for SAR 6546303  JB6859887
                    If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                         Hide Control(FC Num. Key 1-1 [SBN1])
                         Show Control(FC Address Number 1 [AN8])
                         Show Control(FC Address Book Description 1 [ALPH])
                         Set Control Focus(FC Address Number 1 [AN8])
                         FC Address Number 1 [AN8] = FI mnSuppDataNumericKey1 [SBN1]
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Address Number 1 [AN8] -> mnAddressNumber [AN8]
                              FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    // 
                    // 
                    // Begin SAR 6226676
                    If FI szSupplementalDatabaseCode [SDB] is equal to "E"
                    And VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                         // Added for SAR 6546303  JB6859887
                         FC Address Number 1 [AN8] = FI mnSuppDataNumericKey1 [SBN1]
                         Disable Control(FC Address Number 1 [AN8])
                    Else
                         Enable Control(FC Address Number 1 [AN8])
                    End If
                    // End SAR 6226676
                    // 
                    FC Num. Key 1-1 [SBN1] = FI mnSuppDataNumericKey1 [SBN1]
                    // 
               End If
          End If
          //  
          FC DSC1-Position1 [DSC1] = VA frm_szNumKey1_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "3"
          VA frm_Item1 [EV01] = "1"
          // 
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               //  
               //                             SAR #2120225
               If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
                    Show Control(FC UITM-2ndItemNumber2 [UITM])
                    // SAR 8878678
                    VA frm_2ndItemNumber2Alias [SAL3] = VA frm_NumericAlias1 [SAL3]
                    If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              FI mnSuppDataNumericKey1 [SBN1] -> mnMathNumeric01 [MATH01]
                              FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                         // SAR 1862307 Begin
                         F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                              FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                              UNDEFINED <- szDescription [DL01]
                              UNDEFINED <- szDescription02 [DL02]
                              UNDEFINED <- szDescription03 [DL03]
                              "1" <> cSymbolIdentifier [SYMID]
                              UNDEFINED <> idF1201RecordPointer [GENLNG]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                              UNDEFINED <- szUnitNumber [APID]
                              UNDEFINED <- szSerialNumber [ASID]
                              UNDEFINED -> cReturnPointer [EV01]
                              UNDEFINED -> cSuppressErrorMessages [EV02]
                              UNDEFINED <- szErrorMessageID [DTAI]
                              UNDEFINED <- cAssetItemNumberSymbol [SMI]
                              UNDEFINED <- cUnitNumberSymbol [SMU]
                              UNDEFINED <- cSerialNumberSymbol [SMS]
                              UNDEFINED -> cF0911ReturnFormat [EV03]
                         // -----------------------------------------------------------------------------
                         //     Determine equipment's category code value based on
                         //     Equipment Constants. Then check if category code exists in F1392.
                         // -----------------------------------------------------------------------------
                         If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                         And FC Supplemental Database Code [SDB] is equal to "AM"
                              F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                                   VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                              CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                                   "1" -> cModeFlag_EV01 [EV01]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                                   UNDEFINED -> szTypeData_TYDD [TYDD]
                                   VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                         End If
                         // SAR 1862307 End
                         FC UITM-2ndItemNumber2 [UITM] = FI szItemNoUnknownFormat [UITM]
                         VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
                    End If
               Else
                    If VA frm_NumericAlias1 [SAL3] is equal to "ITM"
                         Show Control(FC UITM-2ndItemNumber2 [UITM])
                         FC UITM-2ndItemNumber2 [UITM] = FI szItemNoUnknownFormat [UITM]
                         // SAR 8444255 - Showing the Item Description2 field
                         Show Control(FC Item Description2 [DESC])
                    Else
                         Show Control(FC Num. Key 1-2 [SBN1])
                         // Added for SAR 6546303  JB6859887
                         If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                              Hide Control(FC Num. Key 1-2 [SBN1])
                              Show Control(FC Address Number 2 [AN8])
                              Show Control(FC Address Book Description 2 [ALPH])
                              FC Address Number 2 [AN8] = FI mnSuppDataNumericKey1 [SBN1]
                              F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                                   FC Address Number 2 [AN8] -> mnAddressNumber [AN8]
                                   FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
                         End If
                         // 
                         FC Num. Key 1-2 [SBN1] = FI mnSuppDataNumericKey1 [SBN1]
                         // 
                    End If
               End If
               // 
               FC DSC1-Position2 [DSC1] = VA frm_szNumKey1_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "3"
               VA frm_Item2 [EV01] = "1"
               // 
          Else
               //  
               //                             SAR #2120225
               If VA frm_NumericAlias1 [SAL3] is equal to "NUMB"
                    Show Control(FC UITM-2ndItemNumber3 [UITM])
                    // SAR 8878678
                    VA frm_2ndItemNumber3Alias [SAL3] = VA frm_NumericAlias1 [SAL3]
                    If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              FI mnSuppDataNumericKey1 [SBN1] -> mnMathNumeric01 [MATH01]
                              FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                         // SAR 1862307 Begin
                         F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                              FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                              UNDEFINED <- szDescription [DL01]
                              UNDEFINED <- szDescription02 [DL02]
                              UNDEFINED <- szDescription03 [DL03]
                              "1" <> cSymbolIdentifier [SYMID]
                              UNDEFINED <> idF1201RecordPointer [GENLNG]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                              UNDEFINED <- szUnitNumber [APID]
                              UNDEFINED <- szSerialNumber [ASID]
                              UNDEFINED -> cReturnPointer [EV01]
                              UNDEFINED -> cSuppressErrorMessages [EV02]
                              UNDEFINED <- szErrorMessageID [DTAI]
                              UNDEFINED <- cAssetItemNumberSymbol [SMI]
                              UNDEFINED <- cUnitNumberSymbol [SMU]
                              UNDEFINED <- cSerialNumberSymbol [SMS]
                              UNDEFINED -> cF0911ReturnFormat [EV03]
                         // -----------------------------------------------------------------------------
                         //     Determine equipment's category code value based on
                         //     Equipment Constants. Then check if category code exists in F1392.
                         // -----------------------------------------------------------------------------
                         If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                         And FC Supplemental Database Code [SDB] is equal to "AM"
                              F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                                   VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                              CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                                   "1" -> cModeFlag_EV01 [EV01]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                                   UNDEFINED -> szTypeData_TYDD [TYDD]
                                   VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                         End If
                         // SAR 1862307 End
                         FC UITM-2ndItemNumber3 [UITM] = FI szItemNoUnknownFormat [UITM]
                         VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
                    End If
               Else
                    If VA frm_NumericAlias1 [SAL3] is equal to "ITM"
                         Show Control(FC UITM-2ndItemNumber3 [UITM])
                         FC UITM-2ndItemNumber3 [UITM] = FI szItemNoUnknownFormat [UITM]
                         // SAR 8444255 - Showing the Item Description3 field
                         Show Control(FC Item Description3 [DESC])
                    Else
                         Show Control(FC Num. Key 1-3 [SBN1])
                         // Added for SAR 6546303  JB6859887
                         If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
                              Hide Control(FC Num. Key 1-3 [SBN1])
                              Show Control(FC Address Number 3 [AN8])
                              Show Control(FC Address Book Description 3 [ALPH])
                              FC Address Number 3 [AN8] = FI mnSuppDataNumericKey1 [SBN1]
                              F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                                   FC Address Number 3 [AN8] -> mnAddressNumber [AN8]
                                   FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
                         End If
                         // 
                         FC Num. Key 1-3 [SBN1] = FI mnSuppDataNumericKey1 [SBN1]
                         // 
                    End If
               End If
               //  
               FC DSC1-Position3 [DSC1] = VA frm_szNumKey1_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "3"
               VA frm_Item3 [EV01] = "1"
               // 
          End If
     End If
End If
// 
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
If VA frm_NumericFlag2 [SFN2] is equal to "1"
     If VA frm_szNumKey2_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               VA frm_NumericAlias2 [SAL4] -> szDataItem [DTAI]
               VA frm_szNumKey2_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          //  
          //                             SAR #2120225
          If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
               Show Control(FC UITM-2ndItemNumber1 [UITM])
               // SAR 8878678
               VA frm_2ndItemNumber1Alias [SAL3] = VA frm_NumericAlias2 [SAL4]
               If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                    ConvertNumericToString(B0000045.ConvertNumericToString)
                         FI mnSuppDataNumericKey2 [SBN2] -> mnMathNumeric01 [MATH01]
                         FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                    // SAR 1862307 Begin
                    F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                         FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                         UNDEFINED <- szDescription [DL01]
                         UNDEFINED <- szDescription02 [DL02]
                         UNDEFINED <- szDescription03 [DL03]
                         "1" <> cSymbolIdentifier [SYMID]
                         UNDEFINED <> idF1201RecordPointer [GENLNG]
                         VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                         UNDEFINED <- szUnitNumber [APID]
                         UNDEFINED <- szSerialNumber [ASID]
                         UNDEFINED -> cReturnPointer [EV01]
                         UNDEFINED -> cSuppressErrorMessages [EV02]
                         UNDEFINED <- szErrorMessageID [DTAI]
                         UNDEFINED <- cAssetItemNumberSymbol [SMI]
                         UNDEFINED <- cUnitNumberSymbol [SMU]
                         UNDEFINED <- cSerialNumberSymbol [SMS]
                         UNDEFINED -> cF0911ReturnFormat [EV03]
                    // -----------------------------------------------------------------------------
                    //     Determine equipment's category code value based on
                    //     Equipment Constants. Then check if category code exists in F1392.
                    // -----------------------------------------------------------------------------
                    If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                    And FC Supplemental Database Code [SDB] is equal to "AM"
                         F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                              VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                         CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                              "1" -> cModeFlag_EV01 [EV01]
                              VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                              UNDEFINED -> szTypeData_TYDD [TYDD]
                              VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                    End If
                    // SAR 1862307 End
                    FC UITM-2ndItemNumber1 [UITM] = FI szItemNoUnknownFormat [UITM]
                    VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
               End If
          Else
               // // Begin SAR  5637924
               // // End SAR 5637924
               If VA frm_NumericAlias2 [SAL4] is equal to "ITM"
                    Show Control(FC UITM-2ndItemNumber1 [UITM])
                    // // Begin SAR  5637924
                    Set Control Focus(FC UITM-2ndItemNumber1 [UITM])
                    // // End SAR 5637924
                    FC UITM-2ndItemNumber1 [UITM] = FI szItemNoUnknownFormat [UITM]
                    // SAR 8444255 - Showing the Item Description1 field
                    Show Control(FC Item Description1 [DESC])
               Else
                    Show Control(FC Num. Key 2-1 [SBN2])
                    // Added for SAR 6546303  JB6859887
                    If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                         Hide Control(FC Num. Key 2-1 [SBN2])
                         Show Control(FC Address Number 1 [AN8])
                         Show Control(FC Address Book Description 1 [ALPH])
                         Set Control Focus(FC Address Number 1 [AN8])
                         FC Address Number 1 [AN8] = FI mnSuppDataNumericKey2 [SBN2]
                         F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                              FC Address Number 1 [AN8] -> mnAddressNumber [AN8]
                              FC Address Book Description 1 [ALPH] <- szNameAlpha [ALPH]
                    End If
                    // 
                    FC Num. Key 2-1 [SBN2] = FI mnSuppDataNumericKey2 [SBN2]
                    // 
               End If
          End If
          //  
          FC DSC1-Position1 [DSC1] = VA frm_szNumKey2_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "4"
          VA frm_Item1 [EV01] = "2"
          // 
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               //  
               //                             SAR #2120225
               If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
                    Show Control(FC UITM-2ndItemNumber2 [UITM])
                    // SAR 8878678
                    VA frm_2ndItemNumber2Alias [SAL3] = VA frm_NumericAlias2 [SAL4]
                    // // Begin SAR  5637924
                    If VA evt_mnSetFlag_MATH01 [MATH01] is equal to "0"
                         Set Control Focus(FC UITM-2ndItemNumber2 [UITM])
                         VA evt_mnSetFlag_MATH01 [MATH01] = "1"
                    End If
                    // // End SAR 5637924
                    If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              FI mnSuppDataNumericKey2 [SBN2] -> mnMathNumeric01 [MATH01]
                              FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                         // SAR 1862307 Begin
                         F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                              FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                              UNDEFINED <- szDescription [DL01]
                              UNDEFINED <- szDescription02 [DL02]
                              UNDEFINED <- szDescription03 [DL03]
                              "1" <> cSymbolIdentifier [SYMID]
                              UNDEFINED <> idF1201RecordPointer [GENLNG]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                              UNDEFINED <- szUnitNumber [APID]
                              UNDEFINED <- szSerialNumber [ASID]
                              UNDEFINED -> cReturnPointer [EV01]
                              UNDEFINED -> cSuppressErrorMessages [EV02]
                              UNDEFINED <- szErrorMessageID [DTAI]
                              UNDEFINED <- cAssetItemNumberSymbol [SMI]
                              UNDEFINED <- cUnitNumberSymbol [SMU]
                              UNDEFINED <- cSerialNumberSymbol [SMS]
                              UNDEFINED -> cF0911ReturnFormat [EV03]
                         // -----------------------------------------------------------------------------
                         //     Determine equipment's category code value based on
                         //     Equipment Constants. Then check if category code exists in F1392.
                         // -----------------------------------------------------------------------------
                         If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                         And FC Supplemental Database Code [SDB] is equal to "AM"
                              F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                                   VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                              CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                                   "1" -> cModeFlag_EV01 [EV01]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                                   UNDEFINED -> szTypeData_TYDD [TYDD]
                                   VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                         End If
                         // SAR 1862307 End
                         FC UITM-2ndItemNumber2 [UITM] = FI szItemNoUnknownFormat [UITM]
                         VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
                    End If
               Else
                    If VA frm_NumericAlias2 [SAL4] is equal to "ITM"
                         Show Control(FC UITM-2ndItemNumber2 [UITM])
                         FC UITM-2ndItemNumber2 [UITM] = FI szItemNoUnknownFormat [UITM]
                         // SAR 8444255 - Showing the Item Description2 field
                         Show Control(FC Item Description2 [DESC])
                    Else
                         Show Control(FC Num. Key 2-2 [SBN2])
                         // Added for SAR 6546303  JB6859887
                         If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                              Hide Control(FC Num. Key 2-2 [SBN2])
                              Show Control(FC Address Number 2 [AN8])
                              Show Control(FC Address Book Description 2 [ALPH])
                              FC Address Number 2 [AN8] = FI mnSuppDataNumericKey2 [SBN2]
                              F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                                   FC Address Number 2 [AN8] -> mnAddressNumber [AN8]
                                   FC Address Book Description 2 [ALPH] <- szNameAlpha [ALPH]
                         End If
                         // 
                         FC Num. Key 2-2 [SBN2] = FI mnSuppDataNumericKey2 [SBN2]
                         // 
                    End If
               End If
               FC DSC1-Position2 [DSC1] = VA frm_szNumKey2_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "4"
               VA frm_Item2 [EV01] = "2"
               // 
          Else
               //  
               //                             SAR #2120225
               If VA frm_NumericAlias2 [SAL4] is equal to "NUMB"
                    Show Control(FC UITM-2ndItemNumber3 [UITM])
                    // SAR 8878678
                    VA frm_2ndItemNumber3Alias [SAL3] = VA frm_NumericAlias2 [SAL4]
                    If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
                         ConvertNumericToString(B0000045.ConvertNumericToString)
                              FI mnSuppDataNumericKey2 [SBN2] -> mnMathNumeric01 [MATH01]
                              FI szItemNoUnknownFormat [UITM] <- szVideoConstant30A [VC30A]
                         // SAR 1862307 Begin
                         F1201ValidateAssetNumber(X1202.F1201ValidateAssetNumber)
                              FI szItemNoUnknownFormat [UITM] <> szPrimaryAssetNumber [ASII]
                              UNDEFINED <- szDescription [DL01]
                              UNDEFINED <- szDescription02 [DL02]
                              UNDEFINED <- szDescription03 [DL03]
                              "1" <> cSymbolIdentifier [SYMID]
                              UNDEFINED <> idF1201RecordPointer [GENLNG]
                              VA frm_mnSuppDataAssetNumber_NUMB [NUMB] <- mnAssetItemNumber [NUMB]
                              UNDEFINED <- szUnitNumber [APID]
                              UNDEFINED <- szSerialNumber [ASID]
                              UNDEFINED -> cReturnPointer [EV01]
                              UNDEFINED -> cSuppressErrorMessages [EV02]
                              UNDEFINED <- szErrorMessageID [DTAI]
                              UNDEFINED <- cAssetItemNumberSymbol [SMI]
                              UNDEFINED <- cUnitNumberSymbol [SMU]
                              UNDEFINED <- cSerialNumberSymbol [SMS]
                              UNDEFINED -> cF0911ReturnFormat [EV03]
                         // -----------------------------------------------------------------------------
                         //     Determine equipment's category code value based on
                         //     Equipment Constants. Then check if category code exists in F1392.
                         // -----------------------------------------------------------------------------
                         If VA frm_mnSuppDataAssetNumber_NUMB [NUMB] is greater than "0"
                         And FC Supplemental Database Code [SDB] is equal to "AM"
                              F1201RetrieveSupplementalCatCode(N1200350.F1201RetrieveSupplementalCatCode) [Include in Transaction]
                                   VA frm_mnSuppDataAssetNumber_NUMB [NUMB] -> mnAssetItemNumber [NUMB]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] <- szCateogryCodeValue [EQCC]
                              CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
                                   "1" -> cModeFlag_EV01 [EV01]
                                   VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
                                   UNDEFINED -> szTypeData_TYDD [TYDD]
                                   VA frm_cCatCodeRecordsExist_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
                         End If
                         // SAR 1862307 End
                         FC UITM-2ndItemNumber3 [UITM] = FI szItemNoUnknownFormat [UITM]
                         VA frm_PreviousPrimaryAsset [UITM] = FI szItemNoUnknownFormat [UITM]
                    End If
               Else
                    If VA frm_NumericAlias2 [SAL4] is equal to "ITM"
                         Show Control(FC UITM-2ndItemNumber3 [UITM])
                         FC UITM-2ndItemNumber3 [UITM] = FI szItemNoUnknownFormat [UITM]
                         // SAR 8444255 - Showing the Item Description3 field
                         Show Control(FC Item Description3 [DESC])
                    Else
                         Show Control(FC Num. Key 2-3 [SBN2])
                         // Added for SAR 6546303  JB6859887
                         If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
                              Hide Control(FC Num. Key 2-3 [SBN2])
                              Show Control(FC Address Number 3 [AN8])
                              Show Control(FC Address Book Description 3 [ALPH])
                              FC Address Number 3 [AN8] = FI mnSuppDataNumericKey2 [SBN2]
                              F0101GetAddressBookDesc(N1200310.F0101GetAddressBookDesc)
                                   FC Address Number 3 [AN8] -> mnAddressNumber [AN8]
                                   FC Address Book Description 3 [ALPH] <- szNameAlpha [ALPH]
                         End If
                         // 
                         FC Num. Key 2-3 [SBN2] = FI mnSuppDataNumericKey2 [SBN2]
                         // 
                    End If
               End If
               //  
               FC DSC1-Position3 [DSC1] = VA frm_szNumKey2_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "4"
               VA frm_Item3 [EV01] = "2"
               // 
          End If
     End If
End If
// 
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
If VA frm_AlphaFlag1 [SFA1] is equal to "1"
     If VA frm_szAlphaKey1_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               VA frm_AlphanumericAlias1 [SAL1] -> szDataItem [DTAI]
               VA frm_szAlphaKey1_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          Show Control(FC Alpha Key 1-1 [SBA1])
          // // Begin SAR  5637924
          If VA evt_mnSetFlag_MATH01 [MATH01] is equal to "0"
               Set Control Focus(FC Alpha Key 1-1 [SBA1])
               VA evt_mnSetFlag_MATH01 [MATH01] = "1"
          End If
          // // End SAR 5637924
          // SAR# 8410160 – Moved the DD override statement before the assignment
          // statement to stop the incorrect issue of Blank Invalid Error.         
          //   SAR 8174371 - Set the Form Control Key Value to the Data Dictionary Item 
          //   VA frm_AlphanumericAlias1 so that all the properties of the DD item is  
          //   inherited along with the Visual Assist.
          Set Data Dictionary Item(FC Alpha Key 1-1, VA frm_AlphanumericAlias1, <Default>)
          FC Alpha Key 1-1 [SBA1] = FI szSuppDataAlphaKey1 [SBA1]
          FC DSC1-Position1 [DSC1] = VA frm_szAlphaKey1_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "5"
          // 
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               Show Control(FC Alpha Key 1-2 [SBA1])
               //   SAR 8174371 - Set the Data Dictionary to the Data Item
               //   VA frm_AlphanumericAlias1 so that all the properties of the DD item is  
               //   inherited along with the Visual Assist.
               Set Data Dictionary Item(FC Alpha Key 1-2, VA frm_AlphanumericAlias1, <Default>)
               FC Alpha Key 1-2 [SBA1] = FI szSuppDataAlphaKey1 [SBA1]
               FC DSC1-Position2 [DSC1] = VA frm_szAlphaKey1_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "5"
               // 
          Else
               Show Control(FC Alpha Key 1-3 [SBA1])
               // SAR# 8410160 – Moved the DD override statement before the assignment
               // statement to stop the incorrect issue of Blank Invalid Error.         
               //   SAR 8174371 - Set the Form Control Key Value to the Data Dictionary Item 
               //   VA frm_AlphanumericAlias1 so that all the properties of the DD item is  
               //   inherited along with the Visual Assist.
               Set Data Dictionary Item(FC Alpha Key 1-3, VA frm_AlphanumericAlias1, <Default>)
               FC Alpha Key 1-3 [SBA1] = FI szSuppDataAlphaKey1 [SBA1]
               FC DSC1-Position3 [DSC1] = VA frm_szAlphaKey1_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "5"
               // 
          End If
     End If
End If
// 
VA evt_mnSetFlag_MATH01 [MATH01] = "0"
If VA frm_AlphaFlag2 [SFA2] is equal to "1"
     If VA frm_szAlphaKey2_DL01 [DL01] is equal to or empty <Blank>
          GetDDAlphaDescription(B9200002.GetDDAlphaDescription)
               VA frm_AlphanumericAlias2 [SAL2] -> szDataItem [DTAI]
               VA frm_szAlphaKey2_DL01 [DL01] <- szDescriptionAlpha [DSCA]
     End If
     If VA frm_1stPositionFilled [EV01] is equal to "0"
          Show Control(FC Alpha Key 2-1 [SBA2])
          // // Begin SAR  5637924
          If VA evt_mnSetFlag_MATH01 [MATH01] is equal to "0"
               Set Control Focus(FC Alpha Key 2-1 [SBA2])
               VA evt_mnSetFlag_MATH01 [MATH01] = "1"
          End If
          // // End SAR 5637924
          // SAR# 8410160 – Moved the DD override statement before the assignment
          // statement to stop the incorrect issue of Blank Invalid Error.         
          //   SAR 8174371 - Set the Form Control Key Value to the Data Dictionary Item 
          //   VA frm_AlphanumericAlias2 so that all the properties of the DD item is  
          //   inherited along with the Visual Assist.
          Set Data Dictionary Item(FC Alpha Key 2-1, VA frm_AlphanumericAlias2, <Default>)
          FC Alpha Key 2-1 [SBA2] = FI szSuppDataAlphaKey2 [SBA2]
          FC DSC1-Position1 [DSC1] = VA frm_szAlphaKey2_DL01 [DL01]
          Show Control(FC DSC1-Position1 [DSC1])
          VA frm_1stPositionFilled [EV01] = "1"
          VA frm_ShowRow1 [INT01] = "6"
          // 
     Else
          If VA frm_2ndPositionFilled [EV01] is equal to "0"
               Show Control(FC Alpha Key 2-2 [SBA2])
               // SAR# 8410160 – Moved the DD override statement before the assignment
               // statement to stop the incorrect issue of Blank Invalid Error.         
               //   SAR 8174371 - Set the Form Control Key Value to the Data Dictionary Item 
               //   VA frm_AlphanumericAlias2 so that all the properties of the DD item is  
               //   inherited along with the Visual Assist.
               Set Data Dictionary Item(FC Alpha Key 2-2, VA frm_AlphanumericAlias2, <Default>)
               FC Alpha Key 2-2 [SBA2] = FI szSuppDataAlphaKey2 [SBA2]
               FC DSC1-Position2 [DSC1] = VA frm_szAlphaKey2_DL01 [DL01]
               Show Control(FC DSC1-Position2 [DSC1])
               VA frm_2ndPositionFilled [EV01] = "1"
               VA frm_ShowRow2 [INT01] = "6"
               // 
          Else
               Show Control(FC Alpha Key 2-3 [SBA2])
               // SAR# 8410160 – Moved the DD override statement before the assignment
               // statement to stop the incorrect issue of Blank Invalid Error.         
               //   SAR 8174371 - Set the Form Control Key Value to the Data Dictionary Item 
               //   VA frm_AlphanumericAlias2 so that all the properties of the DD item is  
               //   inherited along with the Visual Assist.
               Set Data Dictionary Item(FC Alpha Key 2-3, VA frm_AlphanumericAlias2, <default>)
               FC Alpha Key 2-3 [SBA2] = FI szSuppDataAlphaKey2 [SBA2]
               FC DSC1-Position3 [DSC1] = VA frm_szAlphaKey2_DL01 [DL01]
               Show Control(FC DSC1-Position3 [DSC1])
               VA frm_ShowRow3 [INT01] = "6"
               // 
          End If
     End If
End If
// 
// Press Find button if form is called by another application
// 
If FI szSupplementalDatabaseCode [SDB] is greater than <Blank>
     Press Button(HC Find)
End If

=============================================
Form: Work With Supplemental Data - W00092D
Event: Grid Record is Fetched
Event GUID: 909344a3-a23d-11d0-a204-0000f6728a56
=============================================
// SAR 1862307 Begin
// -----------------------------------------------------------------------------
//     Filter Records using Supplemental Data Cross Reference (P1392)
//     Used only for "AM" Supplemental Data
// -----------------------------------------------------------------------------
If FC Supplemental Database Code [SDB] is equal to "AM"
And VA frm_cCatCodeRecordsExist_EV01 [EV01] is equal to "1"
     CheckSupplementalDataCrossRef(N1300780.CheckSupplementalDataCrossRef)
          "2" -> cModeFlag_EV01 [EV01]
          VA frm_szCateogryCodeValue_EQCC [EQCC] -> szCategoryCodeValue_EQCC [EQCC]
          BC Type Data (F00091.0) [TYDT] -> szTypeData_TYDD [TYDD]
          VA frm_cDataTypeExists_EV01 [EV01] <- cSuccessFlag_EV01 [EV01]
     If VA frm_cDataTypeExists_EV01 [EV01] is not equal to "1"
          Suppress Grid Line(FC Grid)
     End If
End If
// SAR 1862307 End
// 
FC GenericText [PRT1] = "0"
Media Object Structures(GT00092,  <Default Media Object>,  <Exist>, FC GenericText, BC Supplemental Database (F00091) Code, BC Type (F00091) Data, VA frm_BusinessUnitPass, VA frm_CompanyPass, ...)
If FC GenericText [PRT1] is equal to "1"
     Set Grid Text Indicator(FC Grid,  <Current Row>,  <Yes>)
End If

=============================================
Form: Work With Supplemental Data - W00092D
Event: Write Grid Line-Before
Event GUID: c7857999-a240-11d0-a204-0000f6728a56
=============================================
----------------------------------------
Event Level Variables
----------------------------------------
evt_mnTempAssetItemNumber_NUMB [NUMB]
----------------------------------------
// 
//     Set checkmark in row header to indicate that supplemental data exists for
//     C data types
// 
If GC Data Mode [DSPM] is equal to "C"
Or GC Data Mode [DSPM] is equal to "N"
Or GC Data Mode [DSPM] is equal to "M"
     F00092.FetchSingle  [Index 3: Supp Key, Data Type +]
          FC Supplemental Database Code [SDB] = TK Supplemental Database Code [SDB]
          GC Data Type [TYDT] = TK Type Data [TYDT]
          VA frm_Alpha1Pass [SBA1] = TK Supplemental Data Alpha Key 1 [SBA1]
          VA frm_CompanyPass [KCO] = TK Document Company [KCO]
          VA frm_Alpha2Pass [SBA2] = TK Supplemental Data Alpha Key 2 [SBA2]
          VA frm_BusinessUnitPass [MCU] = TK Business Unit [MCU]
          VA frm_Numeric1Pass [SBN1] = TK Supplemental Data Numeric Key 1 [SBN1]
          VA frm_Numeric2Pass [SBN2] = TK Supplementat Data Numeric Key 2 [SBN2]
     // 
     // For text data types indicate that there is a F00092 record 
     // 
     If SV File_IO_Status is equal to CO SUCCESS
          If GC Data Mode [DSPM] is equal to "C"
               Set Grid Row Bitmap(FC Grid,  <Current Row>,  <Check Mark>)
          End If
          If GC Data Mode [DSPM] is equal to "M"
          Or GC Data Mode [DSPM] is equal to "N"
               GC Record Exists [EV01] = "1"
          End If
     Else
          If GC Data Mode [DSPM] is equal to "N"
          Or GC Data Mode [DSPM] is equal to "M"
               GC Record Exists [EV01] = "0"
          End If
     End If
End If
// 
// 
//     SAR # 4266762 Begin
//     Set checkmark in row header to indicate that specification data exists fo
//     P data types and for Specification Data only.
// 
If GC Data Mode [DSPM] is equal to "P"
     // SAR 7444843 - Make sure the external release level is greater than or equal
     // to 5.
     If VA frm_nExternalServicePack_SPEXT [SPEXT] is greater than or equal to "5"
          // SAR 4229603
          If GC Data Type [TYDT] is equal to "SP"
               VA evt_mnTempAssetItemNumber_NUMB [NUMB] = [FC UITM-2ndItemNumber1 [UITM]]
               F1216.FetchSingle  [Index 1: Item Number,Page Number]
                    VA evt_mnTempAssetItemNumber_NUMB [NUMB] = TK Asset Item Number [NUMB]
               If SV File_IO_Status is equal to CO SUCCESS
                    Set Grid Row Bitmap(FC Grid,  <Currently Selected Row>,  <Check Mark>)
               End If
          End If
     Else
          Hide Grid Row(FC Grid,  <Currently Selected Row>)
     End If
End If
//     SAR # 4266762 End
// ==============================================================
// 
//     Check address Book search type against data type search type for display
// 
//    Retrieve first time around (Will blank out this field on FIND button)
If VA frm_F0101SearchType [AT1] is equal to <Blank>
Or VA frm_F0101SearchType [AT1] is equal to <NULL>
     // 
     If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
          F0101.FetchSingle  [Index 1: Address #]
               VA frm_Numeric1Pass [SBN1] = TK Address Number [AN8]
               VA frm_F0101SearchType [AT1] <- TK Search Type [AT1]
     Else
          If VA frm_NumericAlias2 [SAL4] is equal to "AN8"
               F0101.FetchSingle  [Index 1: Address #]
                    VA frm_Numeric2Pass [SBN2] = TK Address Number [AN8]
                    VA frm_F0101SearchType [AT1] <- TK Search Type [AT1]
          End If
     End If
     // 
End If
// 
// SAR# 8401280 - Supplemental Data for search type Employee(E) and Ex
// employee (X) is stored using a single SDB code "E" (As per the Design) 
If GC Search Type [AT1] is equal to "E"
And VA frm_F0101SearchType [AT1] is equal to "X"
     VA frm_F0101SearchType [AT1] = "E"
End If
// 
If VA frm_NumericAlias1 [SAL3] is equal to "AN8"
Or VA frm_NumericAlias2 [SAL4] is equal to "AN8"
     If GC Search Type [AT1] is not equal to <Blank>
          If VA frm_F0101SearchType [AT1] is not equal to GC Search Type [AT1]
               Hide Grid Row(FC Grid,  <Current Row>)
          End If
     End If
End If
// 
// ==============================================================




