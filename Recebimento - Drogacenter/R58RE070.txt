Listing of ER for Report: Validacao NFE (R58RE070)

***********************************************************************
     GLOBALS: Global Variable
***********************************************************************
     rpt_mnF58RE76B_BBCI
     rpt_mnF58RE76A_BNNF
     rpt_szF58RE76A_BSER
     rpt_szF58RE76A_DCT
     rpt_mnF58RE76A_N001
     rpt_szOP_SY
     rpt_szOP_RT
     rpt_szF0005_KY
     rpt_szF0005_DL01
     rpt_szPID
     rpt_szFLAG_ERRO
     rpt_mnF58RE76A_BSFH
     rpt_mnF4311_LNID
     rpt_mnF76432_BNOP
     rpt_szF76432_BSOP
     rpt_szF7606B_FCO
     rpt_szF76B200_BRNOP
     rpt_szF76432_BCLF
     rpt_szF76432_BIST
     rpt_szF76432_BCFC
     rpt_chBFII
     rpt_chBFIP
     rpt_jdUPMT
     rpt_jdUPMJ
     rpt_szUSER
     rpt_szJOBN
     rpt_szF4311_LOCN
     rpt_chFlagErro
     rpt_szF4311_UOM
     rpt_chFlagProcessamento
     rpt_szGenericKey_GENKEY
     rpt_szApplication_PID
     rpt_cFlagReserved_EV01
     rpt_szNameObject_OBNM
     rpt_szMSGError_DTAI
     rpt_mnF58RE76B_BBTP
     rpt_cExisteErro_EV01
     rpt_cFunctionType_FNTY
     rpt_mnF58RE76B_ITM
     rpt_ReceiptsPercentQty_RPQT
     rpt_szF4101_PRP1
     rpt_szF58RE76A_CO
     rpt_mnQtdRecebida_UORG
     rpt_mnF4311_UOPN
     rpt_mnF58RE76B_UPRC
     rpt_mnF58RE76B_AEXP
     rpt_mnF4322_RPPR
     rpt_mnF4322_RUQT
     rpt_mnF4322_RUAT
     rpt_mnF4311_PRRC
     rpt_mnF58RE76B_UKID
     rpt_szF4311_MCU
     rpt_mnF58RE76B_SLN
     rpt_szOPStatus_AA03
     rpt_szProxStatusErro_AA03
     rpt_mnF58RE76B_DOCO
     rpt_mnF58RE76A_AN8
     rpt_mnF58RE76A_SHAN
     rpt_szOPProxStatusSucesso_AA03
     rpt_szOP_TipoCrossRef_XRT
     rpt_szF4104_DSC2
     rpt_mnQtdConvertida_UORG
     rpt_mnF58RE76B_UORG
     rpt_mnF58RE76C_UORG
     rpt_cFlagConverteUNID_EV01
     rpt_szF58RE76B_UOM
     rpt_szF58RE76B_MCU
     rpt_cOP_ToleranciaPreco_AA01
     rpt_mnF58RE76B_UOR3
     rpt_mnF58RE76B_UPR2
     rpt_mnF58RE76B_UNCS
     rpt_mnF58RE76B_PDCT
     rpt_szF58RE76B_KCOO
     rpt_szItem_LITM
     rpt_mnF58RE76B_BBIR
     rpt_szErroEmiss_KY
     rpt_szF58RE76B_CITM
     rpt_szEAN13_AA13
     rpt_szAux_CITM
     rpt_mnITM
     rpt_szOPDeParaUM_SY
     rpt_szOPDeParaUM_RT
     rpt_mnF58RE76A_GVDL
     rpt_mnF58RE76A_BVTN
     rpt_mnF58RE76A_BDES
     rpt_mnTotalItemAux_AEXP
     rpt_mnPrecoUnitAux_UPRC
     rpt_cExisteDetalhe_EV01
     rpt_szOrdemCompra_F1T
     rpt_szOrdemCompra_DL03
     rpt_szOrdemCompra_DS01
     rpt_mnOrdemCompraConvert_DOCO
     rpt_szF58RE76B_BCGF
     rpt_mnFornecedor_AN8
     rpt_mnAN8
     rpt_mnVlrTotalItens_UPRC
     rpt_mnMaiorPrecoTotalItem_AEXP
     rpt_mnIDCahceItem_GENLNG
     rpt_mnNumeroItens_UKID
     rpt_mnIDCache2_GENLNG
     rpt_cLastRecord_EV01
     rpt_mnLinhaMaiorPreco_UKID
     rpt_mnQuantMaiorPrecoItem_UOR3
     rpt_mnMaiorPrecoItem_UNCS
     rpt_mnF58RE76A_SLN
     rpt_mnOP_ToleranciaMaxUnicProd
     rpt_mnMaiorPrecoLote_AXEP
     rpt_mnMaiorPrecoLote_UKID
     rpt_mnMaiorPrecoLote_LNIX
     rpt_mnMaiorPrecoLote_UOR3
     rpt_mnUKID
     rpt_szOPExclusaoCNPJ_SY
     rpt_szOPExclusaoCNPJ_RT
     rpt_szOPStatusCancelamento_AA0
     rpt_mnTotalItensLotes_UOR3
     rpt_cEncontrouLote_EV01
     rpt_mnF4311_UORG
     rpt_mnF4311_UREC
     rpt_mnF4311_AEXP
     rpt_mnAcumQuantItemTolerancia
     rpt_mnAcumVlrTotalItemToleranc
     rpt_mnVlrTotItensSemConversao
     rpt_cFlagEncontrTodosLinhaOC
     rpt_mnTotalDescontoNF_AN01
     rpt_mnF58RE76A_BIPI
     rpt_mnExisteDesconItem
     rpt_mnF58RE76E_UKIT
     rpt_szF58RE76C_LOTN
     rpt_cFlagRegF58RE76E_EV01
     rpt_mnF58RE76E_DOCO
     rpt_mnF58RE76E_DCTO
     rpt_mnF58RE76E_KCOO
     rpt_mnF58RE76E_UORG
     rpt_mnF58RE76E_UOM
     rpt_mnF58RE76E_AEXP
     rpt_mnF58RE76E_UKID
     rpt_mnPrecoUnitAtualiza_UPRC
     rpt_mnPrecoTotalItemAtualiza
     rpt_mnF58RE76A_BBIS
     rpt_mnComposicaoPreco_AN01
     rpt_cFlagCalculaDiferenca_EV01
     rpt_szTolerancia_KCOO
     rpt_mnTolerancia_ITM
     rpt_mnTotalItem_AEXP
     rpt_mnTolerancia_UNCS
     rpt_mnF58RE76A_BVIS
     rpt_szFatorConversao_DSC2
     rpt_mnFatorConversao_UORG
     rpt_szOPCrossRefConversaoUM
     rpt_szStatusOCEncerrado_NXTR
     rpt_szOPFornecUMErrada_SY
     rpt_szOPFornecUMErrada_RT
     rpt_szFornecUnidMedida_KY
     rpt_szUnidMedFornecedorAux_UOM
     rpt_mnQuantVerificar_UORG
     rpt_cFlagConverte_EV01
     rpt_cFlagDivergenciaTotalItem
     rpt_cOPCancelarExcluiNota_EV01
     rpt_szUnidMedAnterior_UOM
     rpt_mnQuantConverAnterior_UORG
     rpt_cFlagDescEmbutidoTotalitem
     rpt_szOPRefCruzDeParaProduto
     rpt_cErroQunatLoteMaiorNF
     rpt_szF58RE76E_LITM
     rpt_cEncontrouItem_EV01
     rpt_mnNumeroDocumentoEDI_EDOC
     rpt_szTipoDocEDI_EDCT
     rpt_cFlagPedidoReservado_EV01
     rpt_mnQuantReceber_UORG
     rpt_mnAcumulaQuantItemPedido
     rpt_mnSFXE
     rpt_mnContParcelas_SFXE
     rpt_mnLoteProcessamento_UKID
     rpt_jdF58RE01A_DDJ
     rpt_mnF58RE01A_AAP
     rpt_mnNumParcelas_SFXE
     rpt_jdF58RE76A_ISSU
     rpt_cErroFatura_FLAG
     rpt_cFlagAtualizaPrazoPag_FLAG
     rpt_szPrazoAtualiza_PTC
     rpt_mnF58RE030_UKID
     rpt_szF58RE040_DS01
     rpt_szMensErroAdicional_DS01
     rpt_cAtualizaPrazo_FLAG
     rpt_szMSG1_DL01
     rpt_szMSG2_DL01
     rpt_szMSG3_DL01
     rpt_szF76411_BORI
     rpt_szF76432_SFXO
     rpt_szOrigemItem_KY
     rpt_szOrigemItem_DL01
     rpt_cOrigemItem_BORI
     rpt_szClassificacaoItem_BCLF
     rpt_mnToleranciaVlrUnit_UPRC
     rpt_cF58RE76B_BCGT
     rpt_szFilialFabrica_MCU
     rpt_mnF58RE040_SLN
     rpt_szErrosPermitidos_D200
     rpt_mnTesteConvInteiro_UORG
     rpt_szOrdemCompra_PDSC
     rpt_cF41021_PBIN
     rpt_szF41021_LOCN
     rpt_mnTesteTolerancia_UNCS
     rpt_mnF58RE76C_LNIX
     rpt_szDATAFAT_SPHD

=======================================================================
     SECTION: BSVW F58RE76A [GROUP SECTION] (S1)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 //
0002 If RI mnBNNF is greater than <Zero>
     And RI szBSER is not equal to <Blank>
     And RI szBSER is not equal to <Null>
     And RI szDCT is not equal to <Blank>
     And RI szDCT is not equal to <Null>
     And RI mnN001 is greater than <Zero>
0003    Set User Selection(BC Nota Fiscal Number (F58RE76A),  <Equal To>, RI mnBNNF,  <And>)
0004    Set User Selection(BC Document Type (F58RE76A), <Equal To>, RI szDCT,  <And>)
0005    Set User Selection(BC Nota Fiscal Series (F58RE76A), <Equal To>, RI szBSER, <And>)
0006    Set User Selection(BC Next Number Range 1 (F58RE76A), <Equal To>, RI mnN001, <And>)
0007 Else
0008    Set Selection Append Flag( <Yes>)
0009    Set User Selection(BC Alpha Spec. Data 03 (F58RE76A),  <Equal To>, VA rpt_szOPStatus_AA03, <And>)
0010    //
0011 End If
0012 //

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_jdF58RE76A_ISSU
     evt_mnAnoEmiss_FY
     evt_jdAnoAtual_FY
     evt_szStatus_AA03
     evt_szMsgErro_DS01
     evt_mnZero
     evt_IssueDate_ISSU
     evt_szChaveDeAcesso_DS01
     evt_szStatusAux_AA03
     evt_cFlagProcessa_EV01
     evt_szF0005_RT
     evt_szF0005_SPHD
     evt_szF0005_SY
0001 //
0002 VA rpt_mnF58RE76A_SLN = BC Seal Number (F58RE76A)
0003 VA rpt_mnF58RE76A_BVTN = BC Amount - Nota Fiscal Total (F58RE76A)
0004 VA rpt_mnF58RE76A_SLN = BC Seal Number (F58RE76A)
0005 VA rpt_mnF58RE76A_GVDL = BC Amount - Goods Value (F58RE76A)
0006 VA rpt_mnF58RE76A_BDES = BC Amount - Nota Fiscal Discount (F58RE76A)
0007 VA rpt_mnF58RE76A_AN8 = BC Address Number (F58RE76A)
0008 VA rpt_mnF58RE76A_SHAN = BC Address Number - Ship To (F58RE76A)
0009 VA rpt_mnF58RE76A_BNNF = BC Nota Fiscal Number (F58RE76A)
0010 VA rpt_szF58RE76A_DCT = BC Document Type (F58RE76A)
0011 VA rpt_szF58RE76A_BSER = BC Nota Fiscal Series (F58RE76A)
0012 VA rpt_szF58RE76A_DCT = BC Document Type (F58RE76A)
0013 VA rpt_mnF58RE76A_N001 = BC Next Number Range 1 (F58RE76A)
0014 VA rpt_mnF58RE76A_BSFH = BC Address Number - Ship From (F58RE76A)
0015 VA rpt_mnF58RE76A_BIPI = BC Amount - IPI Tax (F58RE76A)
0016 VA rpt_mnF58RE76A_BVIS = BC Amount - ICMS Substitute (F58RE76A)
0017 VA rpt_jdF58RE76A_ISSU = BC Date - Issue (F58RE76A)
0018 // ------------ Thales Suzuki - 06/07/2015 - Início ------------
0019 ! VA rpt_szOrdemCompra_F1T = BC Future 1 Text (F58RE76A)
0020 VA rpt_szOrdemCompra_PDSC = BC Description - Primary (F58RE76A)
0021 // ------------ Thales Suzuki - 06/07/2015 - Fim ------------
0022 VA rpt_szGenericKey_GENKEY = concat(concat([BC Nota Fiscal Number (F58RE76A)],[BC Document Type (F58RE76A)]),[BC Next Number Range 1 (F58RE76A)])
0023 VA rpt_mnF58RE76A_BBIS = BC Amount - ICMS Substitute Taxable (F58RE76A)
0024 VA rpt_szNameObject_OBNM = "F58RE76A"
0025 VA rpt_mnF58RE76B_BBTP = "0"
0026 VA rpt_mnF58RE76B_BBCI = "0"
0027 VA rpt_cExisteErro_EV01 = ""
0028 VA rpt_szF0005_KY = ""
0029 VA rpt_szErroEmiss_KY = ""
0030 VA rpt_cExisteDetalhe_EV01 = "N"
0031 VA rpt_mnMaiorPrecoLote_AXEP = ""
0032 VA rpt_mnAcumVlrTotalItemToleranc = ""
0033 VA rpt_mnAcumQuantItemTolerancia = ""
0034 VA rpt_mnExisteDesconItem = "0"
0035 VA rpt_cFlagDescEmbutidoTotalitem = ""
0036 VA evt_cFlagProcessa_EV01 = ""
0037 VA evt_szF0005_SPHD = ""
0038 VA evt_szF0005_RT = ""
0039 VA evt_szF0005_SY = ""
0040 //
0041 F00095 Reserve Object
        VA rpt_szNameObject_OBNM -> szNameObject
        VA rpt_szUSER -> szUserId
        UNDEFINED -> cSuppressErrorMessage
        UNDEFINED <- szErrorMessageID
        UNDEFINED <- szReserversNameAlpha
        VA rpt_szGenericKey_GENKEY -> szGenericKey
        VA rpt_szPID -> szApplication
        VA rpt_szMSGError_DTAI <- szReserversApplication
        UNDEFINED -> cWarningError
0042 //
0043 If VA rpt_szMSGError_DTAI is not equal to <Blank>
     And VA rpt_szMSGError_DTAI is not equal to <Null>
0044    RV MSG = "N.F. em USO"
0045    Stop Event Processing
0046 End If
0047 //
0048 //
0049 If BC Freight Handling Code (F58RE76A) is not equal to "0,1"
0050    BC Freight Handling Code (F58RE76A) = "N/A"
0051 End If
0052 //
0053 If BC Freight Handling Code (F58RE76A) is equal to "0"
0054    BC Freight Handling Code (F58RE76A) = "CIF"
0055 End If
0056 If BC Freight Handling Code (F58RE76A) is equal to "1"
0057    BC Freight Handling Code (F58RE76A) = "FOB"
0058 End If
0059 //
0060 VA evt_szF0005_SY = "58"
0061 VA evt_szF0005_RT = "CF"
0062 F0005.Fetch Single
        VA evt_szF0005_SY =  TK Product Code
        VA evt_szF0005_RT =  TK User Defined Codes
        BC CGC Tax ID - Ship To =  TK Description1
        VA evt_szF0005_SPHD <- TK Special Handling Code - User Def Codes
0063 If VA evt_szF0005_SPHD is equal to "1"
0064    VA evt_cFlagProcessa_EV01 = "1"
0065 Else
0066    VA evt_cFlagProcessa_EV01 = "0"
0067 End If
0068 F0005.Fetch Single
        VA rpt_szOPExclusaoCNPJ_SY =  TK Product Code
        VA rpt_szOPExclusaoCNPJ_RT =  TK User Defined Codes
        BC CGC Tax ID - Ship From =  TK Description1
0069 If SV File_IO_Status is equal to CO SUCCESS
0070    VA evt_cFlagProcessa_EV01 = "2"
0071 End If
0072 //
0073 If VA evt_cFlagProcessa_EV01 is equal to "1"
0074    //
0075    //
0076    F58RE76A.Select
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
           VA rpt_mnF58RE76A_N001 != TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           BC Seal Number =  TK Seal Number
           BC CGC Tax ID - Ship From =  TK CGC Tax ID - Ship From
           VA rpt_szOPStatus_AA03 <  TK Alpha Spec. Data 03
0077    F58RE76A.Fetch Next
           VA evt_szChaveDeAcesso_DS01 <- TK Description
           VA evt_szStatusAux_AA03 <- TK Alpha Spec. Data 03
0078    While SV File_IO_Status is equal to CO SUCCESS
        And VA rpt_cExisteErro_EV01 is not equal to "Y"
0079       If VA evt_szChaveDeAcesso_DS01 is equal to BC Description (F58RE76A)
           And VA evt_szStatusAux_AA03 is not equal to "980-989"
0080          VA rpt_cExisteErro_EV01 = "Y"
0081       End If
0082       F58RE76A.Fetch Next
              VA evt_szChaveDeAcesso_DS01 <- TK Description
              VA evt_szStatusAux_AA03 <- TK Alpha Spec. Data 03
0083    End While
0084    //
0085    If VA rpt_cExisteErro_EV01 is equal to "Y"
0086       VA rpt_cExisteErro_EV01 = "Y"
0087       F58RE76A.Update
              BC Nota Fiscal Number =  TK Nota Fiscal Number
              BC Nota Fiscal Series =  TK Nota Fiscal Series
              BC Next Number Range 1 =  TK Next Number Range 1
              BC Document Type =  TK Document Type
              BC Seal Number =  TK Seal Number
              VA rpt_szUSER -> TK User ID
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time of Day
              VA rpt_szOPStatusCancelamento_AA0 -> TK Alpha Spec. Data 03
0088       F58RE76B.Update
              BC Nota Fiscal Number =  TK Nota Fiscal Number
              BC Nota Fiscal Series =  TK Nota Fiscal Series
              BC Next Number Range 1 =  TK Next Number Range 1
              BC Document Type =  TK Document Type
              VA rpt_szUSER -> TK User ID
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time of Day
              VA rpt_szOPStatusCancelamento_AA0 -> TK Alpha Spec. Data 03
0089       VA evt_szMsgErro_DS01 = "N.F. Cancelada. Devido duplicidade. "
0090       VA rpt_mnUKID = "1"
0091       F58RE030.Insert
              BC Nota Fiscal Number -> TK Nota Fiscal Number
              BC Nota Fiscal Series -> TK Nota Fiscal Series
              BC Next Number Range 1 -> TK Next Number Range 1
              BC Document Type -> TK Document Type
              BC Seal Number -> TK Seal Number
              VA rpt_mnUKID -> TK Unique Key ID (Internal)
              VA rpt_szOPStatus_AA03 -> TK Alpha Spec. Data 03
              VA evt_szMsgErro_DS01 -> TK Description
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_szUSER -> TK User ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time - Last Updated
0092       RV chErro = "C"
0093    Else
0094       //
0095 !       F58RE76A.Select
     !          VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
     !          VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
     !          VA rpt_mnF58RE76A_N001 != TK Next Number Range 1
     !          VA rpt_szF58RE76A_DCT =  TK Document Type
     !          BC Seal Number =  TK Seal Number
     !          BC CGC Tax ID - Ship From =  TK CGC Tax ID - Ship From
0096 !       F58RE76A.Fetch Next
     !          VA evt_jdF58RE76A_ISSU <- TK Date - Issue
     !          VA evt_szStatus_AA03 <- TK Alpha Spec. Data 03
0097 !       While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cExisteErro_EV01 is not equal to "Y"
0098 !          If VA evt_szStatus_AA03 is not equal to "980-989"
0099 !             If VA evt_jdF58RE76A_ISSU is equal to BC Date - Issue (F58RE76A)
0100 !                VA rpt_szErroEmiss_KY = "147"
0101 !                VA rpt_cExisteErro_EV01 = "Y"
0102 !             Else
0103 !                VA evt_mnAnoEmiss_FY = date_year([VA evt_jdF58RE76A_ISSU])
0104 !                VA evt_jdAnoAtual_FY = date_year([SL DateToday                      ])
0105 !                If VA evt_jdAnoAtual_FY is equal to VA evt_mnAnoEmiss_FY
0106 !                   VA rpt_szErroEmiss_KY = "139"
0107 !                   VA rpt_cExisteErro_EV01 = "Y"
0108 !                End If
0109 !             End If
0110 !          End If
0111 !          F58RE76A.Fetch Next
     !             VA evt_jdF58RE76A_ISSU <- TK Date - Issue
     !             VA evt_szStatus_AA03 <- TK Alpha Spec. Data 03
0112 !       End While
0113       //
0114       If VA rpt_cExisteErro_EV01 is not equal to "Y"
0115          F7601B.Select
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_mnF58RE76A_AN8 =  TK Address Number - Supplier
0116          F7601B.Fetch Next
                 VA evt_IssueDate_ISSU <- TK Date - Issue
0117          If SV File_IO_Status is equal to CO SUCCESS
0118             VA evt_mnAnoEmiss_FY = date_year([VA evt_IssueDate_ISSU])
0119             VA evt_jdAnoAtual_FY = date_year([SL DateToday                      ])
0120             If VA evt_jdAnoAtual_FY is equal to VA evt_mnAnoEmiss_FY
0121                VA rpt_szErroEmiss_KY = "139"
0122                VA rpt_cExisteErro_EV01 = "Y"
0123             End If
0124          End If
0125       End If
0126       //
0127       //
0128       // selecao para verificar se existe desconto em algum item.
0129       F58RE76B.Select
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
              VA rpt_mnExisteDesconItem <  TK Amount - Nota Fiscal Discount
0130       F58RE76B.Fetch Next
              VA rpt_mnExisteDesconItem <- TK Amount - Nota Fiscal Discount
0131       //
0132       If BC Amount - Goods Value (F58RE76A) is equal to BC Amount - Nota Fiscal Total (F58RE76A)
           And BC Amount - Nota Fiscal Discount (F58RE76A) is greater than <Zero>
0133          VA rpt_cFlagDescEmbutidoTotalitem = "Y"
0134       Else
0135       End If
0136       //
0137       //
0138       Do Custom Section(RS BSVW F58RE76B)
0139       If VA rpt_cExisteDetalhe_EV01 is equal to "N"
0140          VA rpt_szF0005_KY = "149"
0141          Do Custom Section(RS LogErro)
0142          VA rpt_cExisteErro_EV01 = "Y"
0143       Else
0144          //
0145          If VA rpt_mnNumeroDocumentoEDI_EDOC is greater than <Zero>
0146             F47071.Delete
                    VA rpt_mnNumeroDocumentoEDI_EDOC =  TK EDI - Document Number
                    VA rpt_szTipoDocEDI_EDCT =  TK EDI - Document Type
0147             F47072.Delete
                    VA rpt_mnNumeroDocumentoEDI_EDOC =  TK EDI - Document Number
                    VA rpt_szTipoDocEDI_EDCT =  TK EDI - Document Type
0148          End If
0149          //
0150          //
0151       End If
0152       //
0153       F58RE040.Fetch Single
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              BC Seal Number =  TK Seal Number
0154       If SV File_IO_Status is equal to CO ERROR
0155          VA rpt_cExisteErro_EV01 = "N"
0156       End If
0157       //
0158       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0159       // Inicio - Julio Donati - 24/11/2014
0160       // Caso o erro da Nota esteja cadastrado nos erros permitidos da PO, o pedido
0161       // será avançado
0162       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0163       //
0164       If VA rpt_cExisteErro_EV01 is equal to "Y"
           And PO szErrosPermitidos_D200 is not equal to <Blank>
           And PO szErrosPermitidos_D200 is not equal to <Null>
0165          VA rpt_mnF58RE040_SLN = BC Seal Number (F58RE76A)
0166          Do Custom Section(RS Libera Pedido Erro da PO)
0167       End If
0168       //
0169       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0170       // Fim - Julio Donati - 24/11/2014
0171       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0172       //
0173       If VA rpt_mnF58RE76A_AN8 is less than or equal to <Zero>
0174          F0101.Fetch Single
                 VA rpt_mnF58RE76A_AN8 <- TK Address Number
                 BC CGC Tax ID - Ship From =  TK Tax ID
0175       Else
0176       End If
0177       //
0178       If VA rpt_cExisteErro_EV01 is equal to "Y"
0179          RV chErro = "Y"
0180          VA rpt_chFlagProcessamento = "A"
0181          F58RE76A.Update
                 BC Nota Fiscal Number =  TK Nota Fiscal Number
                 BC Nota Fiscal Series =  TK Nota Fiscal Series
                 BC Next Number Range 1 =  TK Next Number Range 1
                 BC Document Type =  TK Document Type
                 VA rpt_mnF58RE76A_SHAN -> TK Address Number - Ship To
                 VA rpt_mnF58RE76A_AN8 -> TK Address Number
                 VA rpt_mnF58RE76B_BBTP -> TK Amount - IPI Taxable
                 VA rpt_mnF58RE76B_BBCI -> TK Amount - II Taxable
                 BC Freight Handling Code -> TK Freight Handling Code
                 VA rpt_szUSER -> TK User ID
                 VA rpt_szPID -> TK Program ID
                 VA rpt_szJOBN -> TK Work Station ID
                 VA rpt_jdUPMJ -> TK Date - Updated
                 VA rpt_jdUPMT -> TK Time of Day
                 VA rpt_chFlagProcessamento -> TK Journaling Flag
                 VA rpt_szProxStatusErro_AA03 -> TK Alpha Spec. Data 03
0182       Else
0183          RV chErro = "N"
0184          VA rpt_chFlagProcessamento = "L"
0185          F58RE76A.Update
                 BC Nota Fiscal Number =  TK Nota Fiscal Number
                 BC Nota Fiscal Series =  TK Nota Fiscal Series
                 BC Next Number Range 1 =  TK Next Number Range 1
                 BC Document Type =  TK Document Type
                 BC Seal Number =  TK Seal Number
                 VA rpt_mnF58RE76A_SHAN -> TK Address Number - Ship To
                 VA rpt_mnF58RE76A_AN8 -> TK Address Number
                 VA rpt_mnF58RE76B_BBTP -> TK Amount - IPI Taxable
                 VA rpt_mnF58RE76B_BBCI -> TK Amount - II Taxable
                 BC Freight Handling Code -> TK Freight Handling Code
                 VA rpt_szUSER -> TK User ID
                 VA rpt_szPID -> TK Program ID
                 VA rpt_szJOBN -> TK Work Station ID
                 VA rpt_jdUPMJ -> TK Date - Updated
                 VA rpt_jdUPMT -> TK Time of Day
                 VA rpt_chFlagProcessamento -> TK Journaling Flag
                 VA rpt_szOPProxStatusSucesso_AA03 -> TK Alpha Spec. Data 03
0186       End If
0187    End If
0188    //
0189 Else
0190    If VA rpt_cOPCancelarExcluiNota_EV01 is not equal to "E"
0191       RV chErro = "C"
0192       F58RE76A.Update
              BC Nota Fiscal Number =  TK Nota Fiscal Number
              BC Nota Fiscal Series =  TK Nota Fiscal Series
              BC Next Number Range 1 =  TK Next Number Range 1
              BC Document Type =  TK Document Type
              BC Seal Number =  TK Seal Number
              VA rpt_szUSER -> TK User ID
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time of Day
              VA rpt_szOPStatusCancelamento_AA0 -> TK Alpha Spec. Data 03
0193       F58RE76B.Update
              BC Nota Fiscal Number =  TK Nota Fiscal Number
              BC Nota Fiscal Series =  TK Nota Fiscal Series
              BC Next Number Range 1 =  TK Next Number Range 1
              BC Document Type =  TK Document Type
              VA rpt_szUSER -> TK User ID
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time of Day
              VA rpt_szOPStatusCancelamento_AA0 -> TK Alpha Spec. Data 03
0194       If VA evt_cFlagProcessa_EV01 is equal to "0"
0195          VA evt_szMsgErro_DS01 = "N.F. Cancelada devido o CNPJ do destino não esta configurado na UDC 58|CF. "
0196       Else
0197          VA evt_szMsgErro_DS01 = "N.F. Cancelada devido o CNPJ do emitente esta configurado na UDC de exclusão. "
0198       End If
0199       VA rpt_mnUKID = "1"
0200       F58RE030.Insert
              BC Nota Fiscal Number -> TK Nota Fiscal Number
              BC Nota Fiscal Series -> TK Nota Fiscal Series
              BC Next Number Range 1 -> TK Next Number Range 1
              BC Document Type -> TK Document Type
              BC Seal Number -> TK Seal Number
              VA rpt_mnUKID -> TK Unique Key ID (Internal)
              VA rpt_szOPStatus_AA03 -> TK Alpha Spec. Data 03
              VA evt_szMsgErro_DS01 -> TK Description
              VA rpt_szPID -> TK Program ID
              VA rpt_szJOBN -> TK Work Station ID
              VA rpt_szUSER -> TK User ID
              VA rpt_jdUPMJ -> TK Date - Updated
              VA rpt_jdUPMT -> TK Time - Last Updated
0201    Else
0202       RV chErro = "E"
0203       F58RE76A.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0204       F58RE76B.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0205       F58RE76C.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0206       F58RE76D.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0207       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0208       // Inicio - Julio Donati - 23/08/2013
0209       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0210       F58RE76H.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0211       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0212       // Fim - Julio Donati - 23/08/2013
0213       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0214    End If
0215 End If
0216 //
0217 F00095 Remove Business Object Reservation
        VA rpt_szUSER -> szUserId
        VA rpt_szNameObject_OBNM -> szNameObject
        VA rpt_szGenericKey_GENKEY -> szGenericKey
        VA rpt_szApplication_PID -> szApplication
0218 //

=======================================================================
     SECTION: BSVW F58RE76B [GROUP SECTION] (S3)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76B), <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Seal Number (F58RE76B), <Equal To>, VA rpt_mnF58RE76A_SLN, <And>)
0003 Set User Selection(BC Nota Fiscal Series (F58RE76B), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0004 Set User Selection(BC Next Number Range 1 (F58RE76B), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0005 Set User Selection(BC Document Type (F58RE76B), <Equal To>, VA rpt_szF58RE76A_DCT,  <And>)
0006 VA rpt_mnVlrTotalItens_UPRC = "0"
0007 VA rpt_mnIDCahceItem_GENLNG = ""
0008 VA rpt_mnNumeroItens_UKID = "0"
0009 VA rpt_mnVlrTotItensSemConversao = "0"
0010 VA rpt_cFlagEncontrTodosLinhaOC = "Y"
0011 VA rpt_mnTotalDescontoNF_AN01 = "0"
0012 VA rpt_cFlagDivergenciaTotalItem = "N"
0013 VA rpt_mnLoteProcessamento_UKID = "0"

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_szF4311_LOCN
     evt_szCfopPedCompra_BRNOP
     evt_szCFOPNFe_BRNOP
     evt_szPrimDigCFOP_AA02
     evt_mnDigitoCFOP_MATH01
     evt_mnPrecoUnitConvert_UPRC
     evt_szProxStatus_AA03
     evt_mnF0006_SHAN
     evt_mnF4311_AN8
     evt_szAux_BCGF
     evt_szAux_BCGT
     evt_mnDesconto_AEXP
     evt_mnAux_DOCO
     evt_mnProporcao_FERT
     evt_mnNovoValorTotalItem_AEXP
     evt_mnNovoValorUnitItem_UNCS
     evt_mnZero_AEXP
     evt_szAux_CITM
     evt_mnFornecUnidadeMedida_AN8
     evt_mnVerificaTotalItem_AEXP
     evt_szF4102_SRCE
     evt_mnVerificaPreco_UPRC
     evt_cFlagConverCrossRef_EV01
     evt_szTipoRefCX_XRT
     evt_mnAuxitm_ITM
     evt_mnVerificaTotalItem2_AEXP
     evt_szF4102_MCU
     evt_mnF4102_SLD
     evt_mnTotalTolerancia_AEXP
     evt_szF4102_PRP5
     evt_szF4102_SRP8
     evt_mnDesonIcmsUni_UPRC
     evt_szTemp_UD02
     evt_szSemMascara_UD02
     evt_szF4104_XRT
     evt_szF4102_CYCL
     evt_szCEST_ITEM_DL01
     evt_mnItem_CEST
0001 VA rpt_chFlagProcessamento = "A"
0002 VA rpt_szFLAG_ERRO = "E"
0003 VA rpt_chFlagErro = "N"
0004 VA rpt_cExisteDetalhe_EV01 = "Y"
0005 VA rpt_cErroQunatLoteMaiorNF = "N"
0006 VA rpt_cFlagConverteUNID_EV01 = "F"
0007 VA rpt_mnNumeroDocumentoEDI_EDOC = BC Document (Voucher, Invoice, etc.) (F58RE76B)
0008 VA rpt_szTipoDocEDI_EDCT = BC Order Type (F58RE76B)
0009 BC Document (Voucher, Invoice, etc.) (F58RE76B) = "0"
0010 VA rpt_mnQtdRecebida_UORG = BC Units - Order/Transaction Quantity (F58RE76B)
0011 VA rpt_mnF58RE76B_AEXP = BC Amount - Extended Price (F58RE76B)
0012 VA rpt_mnF58RE76B_UPRC = BC Amount - Price per Unit (F58RE76B)
0013 VA rpt_mnF58RE76B_UKID = BC Unique Key ID (Internal) (F58RE76B)
0014 VA rpt_mnF58RE76B_SLN = BC Seal Number (F58RE76B)
0015 VA rpt_mnF58RE76B_UORG = BC Units - Order/Transaction Quantity (F58RE76B)
0016 VA rpt_szF58RE76B_UOM = BC Unit of Measure as Input (F58RE76B)
0017 VA rpt_szF58RE76B_MCU = BC Business Unit (F58RE76B)
0018 VA rpt_mnF58RE76B_PDCT = BC Document Type - Purchase Order (F58RE76B)
0019 VA rpt_szF58RE76B_KCOO = BC Order Company (Order Number) (F58RE76B)
0020 VA rpt_mnF58RE76B_DOCO = BC Document (Order No, Invoice, etc.) (F58RE76B)
0021 VA rpt_mnF58RE76B_BBIR = BC Amount - ICMS Reduced Taxable (F58RE76B)
0022 VA rpt_szF58RE76B_CITM = ltrim(rtrim([BC Item Number - Customer/Supplier (F58RE76B)],' '),' ' )
0023 VA rpt_szF58RE76B_BCGF = BC CGC Tax ID - Ship From (F58RE76B)
0024 VA rpt_cF58RE76B_BCGT = ltrim(rtrim([BC CGC Tax ID - Ship To (F58RE76B)],' '),' ')
0025 VA rpt_szF58RE76B_UOM = BC Unit of Measure as Input (F58RE76B)
0026 VA rpt_szUnidMedAnterior_UOM = BC Unit of Measure as Input (F58RE76B)
0027 VA rpt_mnQuantConverAnterior_UORG = BC Units - Order/Transaction Quantity (F58RE76B)
0028 VA rpt_szOrdemCompra_DL03 = BC Description 03 (F58RE76B)
0029 VA rpt_mnF58RE76B_ITM = ""
0030 VA rpt_szF58RE76E_LITM = ""
0031 VA rpt_szFornecUnidMedida_KY = ""
0032 VA evt_mnZero_AEXP = "0"
0033 VA rpt_mnITM = ""
0034 VA rpt_szItem_LITM = ""
0035 VA rpt_szF4311_LOCN = ""
0036 VA evt_mnF4311_AN8 = ""
0037 VA rpt_szF4311_MCU = ""
0038 VA rpt_mnF4311_UOPN = "0"
0039 VA rpt_mnF4311_LNID = "0"
0040 VA rpt_mnF4311_AEXP = "0"
0041 VA rpt_mnF4311_PRRC = ""
0042 VA rpt_mnF4311_UREC = "0"
0043 VA rpt_mnF4311_UORG = "0"
0044 VA rpt_szF4311_UOM = ""
0045 VA rpt_szF0005_DL01 = ""
0046 VA rpt_mnPrecoUnitAux_UPRC = ""
0047 VA rpt_mnTotalItemAux_AEXP = ""
0048 VA evt_mnDesconto_AEXP = ""
0049 VA rpt_mnOrdemCompraConvert_DOCO = "0"
0050 VA rpt_mnF58RE76B_UOR3 = "0"
0051 VA rpt_mnF58RE76E_UORG = ""
0052 VA rpt_mnF58RE76E_KCOO = ""
0053 VA rpt_mnF58RE76E_DCTO = ""
0054 VA rpt_mnF58RE76E_DOCO = ""
0055 VA rpt_mnF58RE76E_UOM = ""
0056 VA rpt_mnF58RE76E_AEXP = "0"
0057 VA rpt_szF76411_BORI = ""
0058 VA rpt_mnFatorConversao_UORG = "0"
0059 //
0060 VA rpt_mnF58RE76E_UKIT = "1"
0061 //
0062 //  Ana Carolina - 02/10/2014 - Inicio
0063 //
0064 VA rpt_mnToleranciaVlrUnit_UPRC = [BC Unit Cost - Purchasing (F58RE76B)]-[BC Amount - Price per Unit (F58RE76B)]
0065 If VA rpt_mnToleranciaVlrUnit_UPRC is less than <Zero>
0066    VA rpt_mnToleranciaVlrUnit_UPRC = [VA rpt_mnToleranciaVlrUnit_UPRC]*-1
0067 End If
0068 If VA rpt_mnToleranciaVlrUnit_UPRC is less than or equal to PO mnToleranciaTotalDesc_UPRC
0069    BC Unit Cost - Purchasing (F58RE76B) = [BC Amount - Price per Unit (F58RE76B)]
0070 End If
0071 //
0072 // An Carolina - 01/10/2014 - Final
0073 //
0074 F58RE76E.Fetch Single
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76B_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
        VA rpt_szF58RE76E_LITM <- TK 2nd Item Number
        VA rpt_mnF58RE76E_DOCO <- TK Document (Order No, Invoice, etc.)
        VA rpt_mnF58RE76E_DCTO <- TK Order Type
        VA rpt_mnF58RE76E_KCOO <- TK Order Company (Order Number)
        VA rpt_mnF58RE76E_UORG <- TK Units - Order/Transaction Quantity
        VA rpt_mnF58RE76E_UOM <- TK Unit of Measure as Input
0075 If SV File_IO_Status is equal to CO SUCCESS
0076    VA rpt_cFlagRegF58RE76E_EV01 = "Y"
0077 Else
0078    VA rpt_cFlagRegF58RE76E_EV01 = "N"
0079 End If
0080 //
0081 VA rpt_szF0005_KY = VA rpt_szErroEmiss_KY
0082 If VA rpt_szErroEmiss_KY is not equal to <Blank>
     And VA rpt_szErroEmiss_KY is not equal to <Null>
0083    Do Custom Section(RS LogErro)
0084 Else
0085    VA rpt_szF0005_KY = "139"
0086    Do Custom Section(RS LimpaErro)
0087    VA rpt_szF0005_KY = "147"
0088    Do Custom Section(RS LimpaErro)
0089 End If
0090 //
0091 If BC Amount - Unit Cost (F58RE76B) is equal to <Zero>
0092    VA rpt_mnF58RE76B_UNCS = BC Amount - Unit Cost (F58RE76B)
0093    VA rpt_mnF58RE76B_UOR3 = BC Units - Order/Transaction Quantity (F58RE76B)
0094 End If
0095 VA rpt_mnQtdConvertida_UORG = "0"
0096 //
0097 //
0098 ! VA rpt_szF0005_KY = "120"
0099 ! If BC Document (Order No, Invoice, etc.) (F58RE76B) is less than or equal to <Zero>
0100 !    Do Custom Section(RS LogErro)
0101 ! Else
0102 !    Do Custom Section(RS LimpaErro)
0103 ! End If
0104 //
0105 //
0106 VA rpt_szF0005_KY = "143"
0107 F0101.Fetch Single
        BC CGC Tax ID - Ship From =  TK Tax ID
0108 If SV File_IO_Status is equal to CO ERROR
     And VA rpt_mnF58RE76A_AN8 is less than or equal to <Zero>
0109    Do Custom Section(RS LogErro)
0110 Else
0111    Do Custom Section(RS LimpaErro)
0112 End If
0113 VA rpt_szF0005_KY = "144"
0114 F0101.Fetch Single
        BC CGC Tax ID - Ship To =  TK Tax ID
0115 If SV File_IO_Status is equal to CO ERROR
     And VA rpt_mnF58RE76A_SHAN is less than or equal to <Zero>
0116    Do Custom Section(RS LogErro)
0117 Else
0118    Do Custom Section(RS LimpaErro)
0119 End If
0120 //
0121 // ==>> Julio Donati - 28/03/2019 - Incluído o OR CITM = SEM GTIN
0122 If VA rpt_szF58RE76B_CITM is equal to <Blank>
     Or VA rpt_szF58RE76B_CITM is equal to <Null>
     Or VA rpt_szF58RE76B_CITM is equal to "SEM GTIN"
0123    VA rpt_szF0005_KY = "111"
0124    Do Custom Section(RS LogErro)
0125    If VA rpt_szOPRefCruzDeParaProduto is not equal to <Blank>
        And VA rpt_szOPRefCruzDeParaProduto is not equal to <Null>
0126       F4104.Select
              VA rpt_mnF58RE76A_AN8 =  TK Address Number
              VA rpt_szOPRefCruzDeParaProduto =  TK Type - Cross-Reference Type Code
              BC 3rd Item Number =  TK Item Number - Customer/Supplier
0127       F4104.Fetch Next
              VA rpt_mnITM <- TK Item Number - Short
0128       VA rpt_szF4104_DSC2 = "E"
0129       F4104.Select
              VA rpt_mnF58RE76A_AN8 =  TK Address Number
              VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
              VA rpt_mnITM =  TK Item Number - Short
              VA rpt_szF4104_DSC2 =  TK Description - Line 2
0130       F4104.Fetch Next
              VA rpt_szF58RE76B_CITM <- TK Item Number - Customer/Supplier
0131       If SV File_IO_Status is equal to CO ERROR
0132          F4104.Select
                 VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                 VA rpt_mnITM =  TK Item Number - Short
                 VA rpt_szF4104_DSC2 =  TK Description - Line 2
0133          F4104.Fetch Next
                 VA rpt_szF58RE76B_CITM <- TK Item Number - Customer/Supplier
0134          If SV File_IO_Status is equal to CO ERROR
0135             F4104.Select
                    VA rpt_mnF58RE76A_AN8 =  TK Address Number
                    VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                    VA rpt_mnITM =  TK Item Number - Short
                    SL DateToday <= TK Date - Expired
                    SL DateToday >= TK Date - Effective
0136             F4104.Fetch Next
                    VA rpt_szF58RE76B_CITM <- TK Item Number - Customer/Supplier
0137             If SV File_IO_Status is equal to CO ERROR
0138                F4104.Select
                       VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                       VA rpt_mnITM =  TK Item Number - Short
                       SL DateToday <= TK Date - Expired
                       SL DateToday >= TK Date - Effective
0139                F4104.Fetch Next
                       VA rpt_szF58RE76B_CITM <- TK Item Number - Customer/Supplier
0140             End If
0141          End If
0142       End If
0143    End If
0144 Else
0145 End If
0146 //
0147 If VA rpt_szF58RE76B_CITM is not equal to <Blank>
     And VA rpt_szF58RE76B_CITM is not equal to <Null>
0148    VA rpt_szF4104_DSC2 = "E"
0149    VA rpt_szF0005_KY = "110"
0150    VA rpt_cEncontrouItem_EV01 = "N"
0151    // ==>> Julio Donati - 18/03/2019 - Incluído a Data efetiva no select
0152    F4104.Select
           VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
           SL DateToday <= TK Date - Expired
           SL DateToday >= TK Date - Effective
           VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
           VA rpt_szF4104_DSC2 =  TK Description - Line 2
0153    F4104.Fetch Next
           VA rpt_mnITM <- TK Item Number - Short
0154    While SV File_IO_Status is equal to CO SUCCESS
        And VA rpt_cEncontrouItem_EV01 is equal to "N"
0155       Do Custom Section(RS VerificaItem)
0156       F4104.Fetch Next
              VA rpt_mnITM <- TK Item Number - Short
0157    End While
0158    If VA rpt_cEncontrouItem_EV01 is equal to "N"
0159       //
0160       VA evt_szAux_CITM = ltrim([VA rpt_szF58RE76B_CITM],'0')
0161       // ==>> Julio Donati - 18/03/2019 - Incluído a Data efetiva no select
0162       F4104.Select
              VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
              SL DateToday <= TK Date - Expired
              SL DateToday >= TK Date - Effective
              VA evt_szAux_CITM =  TK Item Number - Customer/Supplier
              VA rpt_szF4104_DSC2 =  TK Description - Line 2
0163       F4104.Fetch Next
              VA rpt_mnITM <- TK Item Number - Short
0164       While SV File_IO_Status is equal to CO SUCCESS
           And VA rpt_cEncontrouItem_EV01 is equal to "N"
0165          Do Custom Section(RS VerificaItem)
0166          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0167       End While
0168       //
0169       //
0170 !       F4104.Select
     !          VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !          VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0171 !       F4104.Fetch Next
     !          VA rpt_mnITM <- TK Item Number - Short
0172 !       While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0173 !          Do Custom Section(RS VerificaItem)
0174 !          F4104.Fetch Next
     !             VA rpt_mnITM <- TK Item Number - Short
0175 !       End While
0176       //
0177       If VA rpt_cEncontrouItem_EV01 is equal to "N"
           And PO szRefCruzadaCX_XRT is not equal to <Blank>
           And PO szRefCruzadaCX_XRT is not equal to <Null>
0178          // ==>> Julio Donati - 18/03/2019 - Incluído a Data efetiva no select
0179          F4104.Select
                 PO szRefCruzadaCX_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
                 VA rpt_szF4104_DSC2 =  TK Description - Line 2
0180          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0181          While SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_cEncontrouItem_EV01 is equal to "N"
0182             Do Custom Section(RS VerificaItem)
0183             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0184          End While
0185          //
0186          If VA rpt_cEncontrouItem_EV01 is equal to "N"
              And PO szLetraIdentificacao is not equal to <Blank>
              And PO szLetraIdentificacao is not equal to <Null>
0187             // ==>> Julio Donati - 18/03/2019 - Incluído a Data efetiva no select
0188             F4104.Select
                    PO szRefCruzadaCX_XRT =  TK Type - Cross-Reference Type Code
                    SL DateToday <= TK Date - Expired
                    SL DateToday >= TK Date - Effective
                    VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
                    PO szLetraIdentificacao =  TK Description - Line 2
0189             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0190             While SV File_IO_Status is equal to CO SUCCESS
                 And VA rpt_cEncontrouItem_EV01 is equal to "N"
0191                Do Custom Section(RS VerificaItem)
0192                F4104.Fetch Next
                       VA rpt_mnITM <- TK Item Number - Short
0193             End While
0194          End If
0195          //
0196          //
0197       End If
0198       //
0199       If VA rpt_cEncontrouItem_EV01 is equal to "N"
           And PO szLetraIdentificacao is not equal to <Blank>
           And PO szLetraIdentificacao is not equal to <Null>
0200          // ==>> Julio Donati - 18/03/2019 - Incluído a Data efetiva no select
0201          F4104.Select
                 VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
                 PO szLetraIdentificacao =  TK Description - Line 2
0202          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0203          While SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_cEncontrouItem_EV01 is equal to "N"
0204             Do Custom Section(RS VerificaItem)
0205             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0206          End While
0207       End If
0208       //
0209       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0210       // Inicio - Julio Donati - 18/03/2019
0211       // Selects sem o filtro do campo F4104.DSC2
0212       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0213       //
0214       If VA rpt_cEncontrouItem_EV01 is equal to "N"
0215          F4104.Select
                 VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0216          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0217          While SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_cEncontrouItem_EV01 is equal to "N"
0218             Do Custom Section(RS VerificaItem)
0219             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0220          End While
0221       End If
0222       //
0223       //
0224       If VA rpt_cEncontrouItem_EV01 is equal to "N"
0225          VA evt_szAux_CITM = ltrim([VA rpt_szF58RE76B_CITM],'0')
0226          F4104.Select
                 VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA evt_szAux_CITM =  TK Item Number - Customer/Supplier
0227          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0228          While SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_cEncontrouItem_EV01 is equal to "N"
0229             Do Custom Section(RS VerificaItem)
0230             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0231          End While
0232       End If
0233       //
0234       If VA rpt_cEncontrouItem_EV01 is equal to "N"
           And PO szRefCruzadaCX_XRT is not equal to <Blank>
           And PO szRefCruzadaCX_XRT is not equal to <Null>
0235          F4104.Select
                 PO szRefCruzadaCX_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0236          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0237          While SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_cEncontrouItem_EV01 is equal to "N"
0238             Do Custom Section(RS VerificaItem)
0239             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0240          End While
0241       End If
0242       //
0243       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0244       // Fim - Julio Donati - 18/03/2019
0245       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0246       //
0247 !       If VA rpt_cEncontrouItem_EV01 is equal to "N"
0248 !          VA evt_szAux_CITM = substr([VA rpt_szF58RE76B_CITM],1,12 )
0249 !          VA evt_szAux_CITM = concat("%",concat([VA evt_szAux_CITM],"%") )
0250 !          F4104.Select
     !             VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !             VA evt_szAux_CITM is Like TK Item Number - Customer/Supplier
0251 !          F4104.Fetch Next
     !             VA rpt_mnITM <- TK Item Number - Short
0252 !          While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0253 !             Do Custom Section(RS VerificaItem)
0254 !             F4104.Fetch Next
     !                VA rpt_mnITM <- TK Item Number - Short
0255 !          End While
0256 !          If VA rpt_cEncontrouItem_EV01 is equal to "N"
0257 !             F4104.Select
     !                VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !                VA evt_szAux_CITM is Like TK Item Number - Customer/Supplier
     !                VA rpt_szF4104_DSC2 =  TK Description - Line 2
0258 !             F4104.Fetch Next
     !                VA rpt_mnITM <- TK Item Number - Short
0259 !             While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0260 !                Do Custom Section(RS VerificaItem)
0261 !                F4104.Fetch Next
     !                   VA rpt_mnITM <- TK Item Number - Short
0262 !             End While
0263 !          End If
0264 !       End If
0265    End If
0266    //
0267    If VA rpt_mnITM is equal to <Zero>
0268       Do Custom Section(RS LogErro)
0269    Else
0270       Do Custom Section(RS LimpaErro)
0271    End If
0272    //
0273    //
0274    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0275    // Inicio - Julio Donati - 18/03/2019
0276    // Codigo comentado
0277    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0278    //
0279 !    If VA rpt_cEncontrouItem_EV01 is equal to "N"
0280 !       VA evt_szAux_CITM = substr([VA rpt_szF58RE76B_CITM],1,12 )
0281 !       VA evt_szAux_CITM = concat("%",concat([VA evt_szAux_CITM],"%") )
0282 !       F4104.Select
     !          VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !          VA evt_szAux_CITM is Like TK Item Number - Customer/Supplier
     !          VA rpt_szF4104_DSC2 =  TK Description - Line 2
0283 !       F4104.Fetch Next
     !          VA rpt_mnITM <- TK Item Number - Short
0284 !       While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0285 !          Do Custom Section(RS VerificaItem)
0286 !          F4104.Fetch Next
     !             VA rpt_mnITM <- TK Item Number - Short
0287 !       End While
0288 !       If VA rpt_cEncontrouItem_EV01 is not equal to "N"
0289 !          F4104.Select
     !             VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !             VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0290 !          F4104.Fetch Next
     !             VA evt_mnAuxitm_ITM <- TK Item Number - Short
0291 !          If SV File_IO_Status is equal to CO SUCCESS
0292 !             If VA evt_mnAuxitm_ITM is not equal to VA rpt_mnITM
0293 !                VA rpt_cEncontrouItem_EV01 = "N"
0294 !                VA rpt_mnITM = "0"
0295 !             End If
0296 !          End If
0297 !       End If
0298 !    End If
0299 !    //
0300 !    If VA rpt_cEncontrouItem_EV01 is equal to "N"
     ! And PO szRefCruzadaCX_XRT is not equal to <Blank>
     ! And PO szRefCruzadaCX_XRT is not equal to <Null>
0301 !       // CONSULTA SEM LETRA DE IDENTIFICAÇÃO, MAS NF FICA PARADA ATÉ ACERTAR O EAN
0302 !       F4104.Select
     !          PO szRefCruzadaCX_XRT =  TK Type - Cross-Reference Type Code
     !          VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0303 !       F4104.Fetch Next
     !          VA rpt_mnITM <- TK Item Number - Short
0304 !       While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0305 !          Do Custom Section(RS VerificaItem)
0306 !          F4104.Fetch Next
     !             VA rpt_mnITM <- TK Item Number - Short
0307 !       End While
0308 !       If VA rpt_cEncontrouItem_EV01 is equal to "Y"
0309 !          VA rpt_szF0005_KY = "109"
0310 !          Do Custom Section(RS LogErro)
0311 !       End If
0312 !    End If
0313 !    If VA rpt_cEncontrouItem_EV01 is equal to "N"
0314 !       // CONSULTA SEM LETRA DE IDENTIFICAÇÃO, MAS NF FICA PARADA ATÉ ACERTAR O EAN
0315 !       F4104.Select
     !          VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
     !          VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0316 !       F4104.Fetch Next
     !          VA rpt_mnITM <- TK Item Number - Short
0317 !       While SV File_IO_Status is equal to CO SUCCESS
     ! And VA rpt_cEncontrouItem_EV01 is equal to "N"
0318 !          Do Custom Section(RS VerificaItem)
0319 !          F4104.Fetch Next
     !             VA rpt_mnITM <- TK Item Number - Short
0320 !       End While
0321 !       If VA rpt_cEncontrouItem_EV01 is equal to "Y"
0322 !          VA rpt_szF0005_KY = "109"
0323 !          Do Custom Section(RS LogErro)
0324 !       End If
0325 !    End If
0326    //
0327    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0328    // Fim - Julio Donati - 18/03/2019
0329    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0330    //
0331    If VA rpt_szF0005_KY is not equal to "109"
0332       VA rpt_szF0005_KY = "109"
0333       Do Custom Section(RS LimpaErro)
0334    End If
0335    //
0336    VA rpt_szF0005_KY = "110"
0337    If VA rpt_mnITM is not equal to <Zero>
0338       Do Custom Section(RS LimpaErro)
0339    End If
0340    //
0341 End If
0342 //
0343 VA rpt_szF0005_KY = "160"
0344 If VA rpt_mnITM is greater than <Zero>
     And VA rpt_cEncontrouItem_EV01 is equal to "N"
0345    Do Custom Section(RS LogErro)
0346 Else
0347    Do Custom Section(RS LimpaErro)
0348 End If
0349 //
0350 If VA rpt_mnITM is greater than <Zero>
     And VA rpt_cEncontrouItem_EV01 is equal to "Y"
0351    F4101.Fetch Single
           VA rpt_mnITM =  TK Item Number - Short
           VA rpt_szItem_LITM <- TK 2nd Item Number
           VA sec_szDSC1 <- TK Description
           VA sec_szDSC2 <- TK Description - Line 2
           VA rpt_szF4101_PRP1 <- TK Commodity Class
           VA sec_szGLPT <- TK Category - G/L
           VA sec_szLNTY <- TK Line Type
0352    VA rpt_szF0005_KY = "112"
0353    If SV File_IO_Status is equal to CO ERROR
0354       Do Custom Section(RS LogErro)
0355    Else
0356       Do Custom Section(RS LimpaErro)
0357       If VA rpt_mnITM is not equal to <Zero>
0358          VA rpt_mnF58RE76B_ITM = VA rpt_mnITM
0359       End If
0360       //
0361       // RESOLUÇÃO 13 - SINIEF 19/2012
0362       VA rpt_szF0005_KY = "169"
0363       F76411.Fetch Single
              VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
              VA rpt_szF76411_BORI <- TK Item Origin
0364       If BC Item Origin (F58RE76B) is not equal to VA rpt_szF76411_BORI
0365          If BC Tax Rate 1 (F58RE76B) is not equal to PO mnICMSImportacao_TXR1
              And PO mnICMSImportacao_TXR1 is greater than <Zero>
0366             Do Custom Section(RS LimpaErro)
0367          Else
0368             Do Custom Section(RS LogErro)
0369          End If
0370       Else
0371          Do Custom Section(RS LimpaErro)
0372       End If
0373       //
0374       //
0375       //
0376       // #############################################
0377       If VA rpt_cFlagRegF58RE76E_EV01 is not equal to "Y"
0378          // VERIFICA ORDEM COMPRA NAS INFORMACOES DE COMPRA NA TAG DO ITEM
0379          If VA rpt_szOrdemCompra_DL03 is not equal to <Blank>
              And VA rpt_szOrdemCompra_DL03 is not equal to <Null>
0380             VA rpt_szOrdemCompra_DS01 = VA rpt_szOrdemCompra_DL03
0381             Do Custom Section(RS ConverteOCParaNumerico)
0382          End If
0383          // VERIFICA ORDEM DE COMPRA  NAS INFORMACOES DE COMPRA
0384          If VA rpt_mnOrdemCompraConvert_DOCO is equal to <Zero>
0385             // ------------ Thales Suzuki - 06/07/2015 - Início ------------
0386             // Alterado F1T por PDSC
0387 !             If VA rpt_szOrdemCompra_F1T is not equal to <Blank>
     ! And VA rpt_szOrdemCompra_F1T is not equal to <Null>
0388                If VA rpt_szOrdemCompra_PDSC is not equal to <Blank>
                    And VA rpt_szOrdemCompra_PDSC is not equal to <Null>
0389 !                   VA rpt_szOrdemCompra_DS01 = VA rpt_szOrdemCompra_F1T
0390                   VA rpt_szOrdemCompra_DS01 = VA rpt_szOrdemCompra_PDSC
0391                   Do Custom Section(RS ConverteOCParaNumerico)
0392                End If
0393 !             End If
0394             // ------------ Thales Suzuki - 06/07/2015 - Fim ------------
0395          End If
0396          If VA rpt_mnOrdemCompraConvert_DOCO is equal to <Zero>
0397             If BC Document (Order No, Invoice, etc.) (F58RE76B) is greater than <Zero>
0398                VA rpt_mnOrdemCompraConvert_DOCO = BC Document (Order No, Invoice, etc.) (F58RE76B)
0399                Do Custom Section(RS Verifica Ordem Compra)
0400             End If
0401          End If
0402       Else
0403          If VA rpt_mnF58RE76E_DOCO is greater than <Zero>
0404             VA rpt_mnOrdemCompraConvert_DOCO = VA rpt_mnF58RE76E_DOCO
0405             Do Custom Section(RS Verifica Ordem Compra)
0406          End If
0407       End If
0408       // #############################################
0409       //
0410       //
0411       VA rpt_szF58RE76B_MCU = VA rpt_szF4311_MCU
0412       //
0413       //
0414       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0415       // Inicio - Julio Donati - 17/09/2013
0416       // Funcional: Umberto Cristale
0417       // Projeto: FCI
0418       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0419       //
0420       If PO cAtualizaOrigem_EV01 is not equal to "N"
           And VA rpt_mnF58RE76B_DOCO is greater than <Zero>
0421          //
0422          VA rpt_szOrigemItem_DL01 = ""
0423          VA rpt_szOrigemItem_KY = ltrim(rtrim([BC Item Origin (F58RE76B)],' '),' ' )
0424          Get UDC
                 UNDEFINED X  szDataDictionaryItem
                 "55" -> szSystemCode
                 "IX" -> szRecordTypeCode
                 VA rpt_szOrigemItem_KY -> szUserDefinedCode
                 UNDEFINED X  mnKeyFieldLength
                 UNDEFINED X  szLanguagePreference
                 VA rpt_szOrigemItem_DL01 <- szDescription001
                 UNDEFINED X  szDescription002
                 UNDEFINED X  szSpecialHandlingCode
                 UNDEFINED X  cUdcOwnershipFlag
                 UNDEFINED X  cHardCodedYn
                 "1" -> cSuppressErrorMessage
                 UNDEFINED X  szErrorMessageId
                 UNDEFINED X  cUDCOne
0425          //
0426          If VA rpt_szOrigemItem_DL01 is not equal to <Blank>
              And VA rpt_szOrigemItem_DL01 is not equal to <Null>
0427             VA rpt_cOrigemItem_BORI = substr(ltrim(rtrim([VA rpt_szOrigemItem_DL01],' '),' ' ), 0,1 )
0428          Else
0429             VA rpt_cOrigemItem_BORI = ltrim(rtrim([BC Item Origin (F58RE76B)],' '), ' ')
0430          End If
0431          //
0432          F76432.Select
                 VA rpt_mnF58RE76B_DOCO =  TK Document (Order No, Invoice, etc.)
                 VA rpt_mnF58RE76B_PDCT =  TK Order Type
                 VA rpt_szF58RE76B_KCOO =  TK Order Company (Order Number)
                 VA rpt_mnF4311_LNID =  TK Line Number
0433          F76432.Fetch Next
                 VA rpt_szF76432_SFXO <- TK Order Suffix
0434          //
0435          While SV File_IO_Status is equal to CO SUCCESS
0436             //
0437             F76432.Update
                    VA rpt_mnF58RE76B_DOCO =  TK Document (Order No, Invoice, etc.)
                    VA rpt_mnF58RE76B_PDCT =  TK Order Type
                    VA rpt_szF58RE76B_KCOO =  TK Order Company (Order Number)
                    VA rpt_szF76432_SFXO =  TK Order Suffix
                    VA rpt_mnF4311_LNID =  TK Line Number
                    VA rpt_cOrigemItem_BORI -> TK Item Origin
                    VA rpt_szUSER -> TK User ID
                    VA rpt_szPID -> TK Program ID
                    VA rpt_szJOBN -> TK Work Station ID
                    VA rpt_jdUPMJ -> TK Date - Updated
                    VA rpt_jdUPMT -> TK Time of Day
0438             F76432.Fetch Next
                    VA rpt_szF76432_SFXO <- TK Order Suffix
0439             //
0440          End While
0441          //
0442       End If
0443       //
0444       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0445       // Fim - Julio Donati - 17/09/2013
0446       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0447       //
0448       //
0449       VA rpt_szF0005_KY = "120"
0450       If VA rpt_mnOrdemCompraConvert_DOCO is equal to <Zero>
0451          Do Custom Section(RS LogErro)
0452          VA rpt_szF58RE76B_KCOO = ""
0453          VA rpt_mnF58RE76B_PDCT = ""
0454          VA rpt_mnF58RE76B_DOCO = ""
0455          VA rpt_szF58RE76B_MCU = ""
0456          VA rpt_mnF4311_LNID = ""
0457       Else
0458          Do Custom Section(RS LimpaErro)
0459          //
0460          If VA rpt_mnLoteProcessamento_UKID is equal to <Zero>
0461 !             Do Custom Section(RS ValidaCondicaoPagamento)
0462             VA rpt_mnLoteProcessamento_UKID = "1"
0463          End If
0464       End If
0465       //
0466       //
0467       If VA rpt_mnOrdemCompraConvert_DOCO is greater than <Zero>
0468          F0101.Fetch Single
                 VA rpt_mnFornecedor_AN8 =  TK Address Number
                 VA evt_szAux_BCGF <- TK Tax ID
0469          VA rpt_szF0005_KY = "145"
0470          If VA evt_szAux_BCGF is equal to BC CGC Tax ID - Ship From (F58RE76B)
0471             VA rpt_mnF58RE76A_AN8 = VA rpt_mnFornecedor_AN8
0472             Do Custom Section(RS LimpaErro)
0473          Else
0474             Do Custom Section(RS LogErro)
0475          End If
0476          F0006.Fetch Single
                 VA rpt_szF4311_MCU =  TK Business Unit
                 VA evt_mnF0006_SHAN <- TK Address Number
0477          F0101.Fetch Single
                 VA evt_mnF0006_SHAN =  TK Address Number
                 VA evt_szAux_BCGT <- TK Tax ID
0478          VA rpt_szF0005_KY = "146"
0479          If VA evt_szAux_BCGT is equal to BC CGC Tax ID - Ship To (F58RE76B)
0480             VA rpt_mnF58RE76A_SHAN = VA evt_mnF0006_SHAN
0481             Do Custom Section(RS LimpaErro)
0482          Else
0483             Do Custom Section(RS LogErro)
0484          End If
0485       End If
0486       //
0487       //
0488    End If
0489 End If
0490 //
0491 // Valida Unidade de Medida
0492 BC Reference (F58RE76B) = ltrim(rtrim([BC Reference (F58RE76B)],' '),' ' )
0493 BC Reference (F58RE76B) = upper([BC Reference (F58RE76B)])
0494 Get UDC Description
        UNDEFINED X  szDataDictionaryItem
        VA rpt_szOPDeParaUM_SY -> szSystemCode
        VA rpt_szOPDeParaUM_RT -> szUserDefinedCodes
        UNDEFINED X  cUserDefinedCode
        BC Reference -> szUserDefinedCode
        VA rpt_szF0005_DL01 <- szDescription01
        UNDEFINED X  szDescription02
        UNDEFINED X  cErrorCode
        UNDEFINED X  szSpecialHandlingCode
0495 VA rpt_szF0005_KY = "137"
0496 If VA rpt_szF0005_DL01 is equal to <Null>
     Or VA rpt_szF0005_DL01 is equal to <Blank>
0497    Get UDC Description
           UNDEFINED X  szDataDictionaryItem
           "00" -> szSystemCode
           "UM" -> szUserDefinedCodes
           UNDEFINED X  cUserDefinedCode
           BC Reference -> szUserDefinedCode
           VA rpt_szF0005_DL01 <- szDescription01
           UNDEFINED X  szDescription02
           UNDEFINED X  cErrorCode
           UNDEFINED X  szSpecialHandlingCode
0498    If VA rpt_szF0005_DL01 is not equal to <Null>
        And VA rpt_szF0005_DL01 is not equal to <Blank>
0499       VA rpt_szF58RE76B_UOM = ltrim(rtrim([BC Reference (F58RE76B)],' '),' ' )
0500    End If
0501 Else
0502    VA rpt_szF58RE76B_UOM = ltrim(rtrim([VA rpt_szF0005_DL01],' '),' ' )
0503 End If
0504 If VA rpt_szF0005_DL01 is equal to <Null>
     Or VA rpt_szF0005_DL01 is equal to <Blank>
0505    Do Custom Section(RS LogErro)
0506 Else
0507    Do Custom Section(RS LimpaErro)
0508 End If
0509 VA rpt_szUnidMedFornecedorAux_UOM = VA rpt_szF58RE76B_UOM
0510 //
0511 Convert Math_Numeric To String
        VA rpt_mnFornecedor_AN8 -> mnMathNumeric01
        VA rpt_szFornecUnidMedida_KY <- szString
0512 F0005.Fetch Single
        VA rpt_szOPFornecUMErrada_SY =  TK Product Code
        VA rpt_szOPFornecUMErrada_RT =  TK User Defined Codes
        VA rpt_szFornecUnidMedida_KY =  TK User Defined Code
0513 If SV File_IO_Status is equal to CO SUCCESS
0514    VA rpt_szF58RE76B_UOM = VA rpt_szF4311_UOM
0515 Else
0516    VA rpt_szFornecUnidMedida_KY = ""
0517 End If
0518 //
0519 //
0520 //
0521 If VA rpt_mnOrdemCompraConvert_DOCO is not equal to <Zero>
     And VA rpt_szF58RE76B_UOM is not equal to <Blank>
     And VA rpt_szF58RE76B_UOM is not equal to <Null>
0522    //
0523    // #####COMPOSIÇÃO PRECO ITEM#########
0524    VA rpt_mnPrecoUnitAux_UPRC = VA rpt_mnF58RE76B_UPRC
0525    VA rpt_mnTotalItemAux_AEXP = VA rpt_mnF58RE76B_AEXP
0526    //
0527    //
0528    //
0529    If BC Amount - Nota Fiscal Discount (F58RE76B) is greater than <Zero>
0530       If BC Amount - Price per Unit (F58RE76B) is greater than <Zero>
0531          //
0532          VA evt_mnVerificaTotalItem_AEXP = [BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0533          VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0534          VA evt_mnVerificaTotalItem2_AEXP = [BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0535          VA evt_mnVerificaTotalItem2_AEXP = round([VA evt_mnVerificaTotalItem2_AEXP],2)
0536          //
0537          //
0538          If VA evt_mnVerificaTotalItem_AEXP is not equal to VA evt_mnVerificaTotalItem2_AEXP
0539             //
0540             //
0541             VA rpt_mnTotalItemAux_AEXP = ([BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG])+[BC Amount - Nota Fiscal Discount (F58RE76B)]
0542             VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0543             If VA rpt_mnTotalItemAux_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0544                VA rpt_mnPrecoUnitAux_UPRC = BC Unit Cost - Purchasing (F58RE76B)
0545                VA rpt_mnTotalItemAux_AEXP = ([BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG])
0546                VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0547             Else
0548                VA rpt_mnTotalItemAux_AEXP = ([BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG])+[BC Amount - Nota Fiscal Discount (F58RE76B)]
0549                VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0550                VA rpt_szF0005_KY = "158"
0551                If VA rpt_mnTotalItemAux_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0552                   VA rpt_mnPrecoUnitAux_UPRC = BC Amount - Price per Unit (F58RE76B)
0553                   VA rpt_mnTotalItemAux_AEXP = ([BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG])
0554                   VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0555                   Do Custom Section(RS LimpaErro)
0556                Else
0557                   //
0558                   //
0559                   // *************************************************
0560                   // se chegar neste nivel é porque o total do item já está com desconto. Neste
0561                   // caso, no cabecalho  o total da NF vai esta igual ao total de produtos, ou esta
0562                   // com algum acordo não declarado
0563                   // *************************************************
0564                   //
0565                   VA rpt_mnTotalItemAux_AEXP = VA rpt_mnF58RE76B_AEXP
0566                   VA rpt_szF0005_KY = "159"
0567                   VA rpt_cFlagDivergenciaTotalItem = "Y"
0568                   Do Custom Section(RS LogErro)
0569                   VA evt_mnVerificaTotalItem_AEXP = [BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0570                   VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0571                   //
0572                   If VA evt_mnVerificaTotalItem_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0573                      VA rpt_mnPrecoUnitAux_UPRC = BC Unit Cost - Purchasing (F58RE76B)
0574                   Else
0575                      //
0576                      VA evt_mnVerificaTotalItem_AEXP = [BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0577                      VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0578                      If VA evt_mnVerificaTotalItem_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0579 !                         VA rpt_mnPrecoUnitAux_UPRC = BC Amount - Price per Unit (F58RE76B)
0580                         //
0581                         //
0582                         VA rpt_mnPrecoUnitAux_UPRC = ([VA rpt_mnF58RE76B_AEXP]-[BC Amount - Nota Fiscal Discount (F58RE76B)])/[VA rpt_mnF58RE76B_UORG]
0583                         VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnPrecoUnitAux_UPRC]*[VA rpt_mnF58RE76B_UORG]
0584                         VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0585                         //
0586                         //
0587                      Else
0588                         VA rpt_cFlagDivergenciaTotalItem = "Y"
0589                         VA rpt_mnPrecoUnitAux_UPRC = [VA rpt_mnF58RE76B_AEXP]/[VA rpt_mnF58RE76B_UORG]
0590                         VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnPrecoUnitAux_UPRC]*[VA rpt_mnF58RE76B_UORG]
0591                         VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0592                         If VA rpt_mnTotalItemAux_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0593                            VA rpt_mnPrecoUnitAux_UPRC = "0"
0594                            VA rpt_mnTotalItemAux_AEXP = "0"
0595                         Else
0596                         End If
0597                      End If
0598                   End If
0599                   //
0600                   //
0601                End If
0602             End If
0603             //
0604             //
0605          Else
0606             //
0607             VA rpt_szF0005_KY = "159"
0608             If VA rpt_cFlagDescEmbutidoTotalitem is not equal to "Y"
0609                VA rpt_mnPrecoUnitAux_UPRC = ([VA rpt_mnTotalItemAux_AEXP]-[BC Amount - Nota Fiscal Discount (F58RE76B)])/[VA rpt_mnF58RE76B_UORG]
0610                VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnPrecoUnitAux_UPRC]*[VA rpt_mnF58RE76B_UORG]
0611                Do Custom Section(RS LimpaErro)
0612             Else
0613                VA rpt_cFlagDivergenciaTotalItem = "Y"
0614                Do Custom Section(RS LogErro)
0615             End If
0616             // ****
0617          End If
0618       End If
0619    Else
0620       If VA rpt_mnF58RE76A_BDES is greater than <Zero>
           And VA rpt_mnExisteDesconItem is equal to <Zero>
0621          VA evt_mnDesconto_AEXP = [VA rpt_mnF58RE76A_BVTN]/[VA rpt_mnF58RE76A_GVDL]
0622          VA rpt_mnPrecoUnitAux_UPRC = [VA rpt_mnPrecoUnitAux_UPRC]*[VA evt_mnDesconto_AEXP]
0623          VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnPrecoUnitAux_UPRC]*[VA rpt_mnF58RE76B_UORG]
0624       Else
0625          If BC Amount - Price per Unit (F58RE76B) is not equal to BC Unit Cost - Purchasing (F58RE76B)
              And BC Unit Cost - Purchasing (F58RE76B) is greater than <Zero>
0626             VA rpt_szF0005_KY = "158"
0627             // ini
0628             VA evt_mnVerificaTotalItem_AEXP = [BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0629             VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0630             If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0631                // verificação devido alguns fornecedores não enviam precisão de casa decimal no
0632                // preço unitario
0633                VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0634                VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],2)
0635                If VA evt_mnVerificaPreco_UPRC is equal to BC Amount - Price per Unit (F58RE76B)
0636                   VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0637                Else
0638                   VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0639                   VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],4)
0640                   If VA evt_mnVerificaPreco_UPRC is equal to BC Amount - Price per Unit (F58RE76B)
0641                      VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0642                   End If
0643                End If
0644             End If
0645             // fim
0646             //
0647 !             // ini1
0648 !             VA evt_mnVerificaTotalItem_AEXP = [BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0649 !             VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0650 !             If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0651 !                // verificação devido alguns fornecedores não enviam precisão de casa decimal no
0652 !                // preço unitario
0653 !                VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0654 !                VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],2)
0655 !                If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0656 !                   VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0657 !                Else
0658 !                   VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0659 !                   VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],4)
0660 !                   If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0661 !                      VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0662 !                   End If
0663 !                End If
0664 !             End If
0665 !             // fim1
0666             //
0667             If VA evt_mnVerificaTotalItem_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0668                Do Custom Section(RS LimpaErro)
0669                VA rpt_mnPrecoUnitAux_UPRC = BC Amount - Price per Unit (F58RE76B)
0670             Else
0671                // ini
0672 !                VA evt_mnVerificaTotalItem_AEXP = [BC Amount - Price per Unit (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0673 !                VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0674 !                If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0675 !                   // verificação devido alguns fornecedores não enviam precisão de casa decimal no
0676 !                   // preço unitario
0677 !                   VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0678 !                   VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],2)
0679 !                   If VA evt_mnVerificaPreco_UPRC is equal to BC Amount - Price per Unit (F58RE76B)
0680 !                      VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0681 !                   Else
0682 !                      VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0683 !                      VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],4)
0684 !                      If VA evt_mnVerificaPreco_UPRC is equal to BC Amount - Price per Unit (F58RE76B)
0685 !                         VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0686 !                      End If
0687 !                   End If
0688 !                End If
0689                // fim
0690                //
0691                // ini1
0692                VA evt_mnVerificaTotalItem_AEXP = [BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0693                VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0694                If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0695                   // verificação devido alguns fornecedores não enviam precisão de casa decimal no
0696                   // preço unitario
0697                   VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0698                   VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],2)
0699                   If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0700                      VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0701                   Else
0702                      VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0703                      VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],4)
0704                      If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0705                         VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0706                      End If
0707                   End If
0708                End If
0709                // fim1
0710                If VA evt_mnVerificaTotalItem_AEXP is equal to VA rpt_mnF58RE76B_AEXP
0711                   Do Custom Section(RS LimpaErro)
0712                   VA rpt_mnPrecoUnitAux_UPRC = BC Unit Cost - Purchasing (F58RE76B)
0713                Else
0714                   VA rpt_mnPrecoUnitAux_UPRC = "0"
0715                   VA rpt_mnTotalItemAux_AEXP = "0"
0716                   Do Custom Section(RS LogErro)
0717                   VA rpt_cFlagDivergenciaTotalItem = "Y"
0718                End If
0719             End If
0720          Else
0721             If BC Amount - Price per Unit (F58RE76B) is equal to BC Unit Cost - Purchasing (F58RE76B)
0722                //
0723                // verificação devido alguns fornecedores não enviam precisão de casa decimal no
0724                // preço unitario
0725                VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0726                VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],2)
0727                If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0728                   VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0729                   VA rpt_mnPrecoUnitAux_UPRC = BC Unit Cost - Purchasing (F58RE76B)
0730                Else
0731                   VA evt_mnVerificaPreco_UPRC = [BC Amount - Extended Price (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0732                   VA evt_mnVerificaPreco_UPRC = round([VA evt_mnVerificaPreco_UPRC],4)
0733                   If VA evt_mnVerificaPreco_UPRC is equal to BC Unit Cost - Purchasing (F58RE76B)
0734                      VA evt_mnVerificaTotalItem_AEXP = BC Amount - Extended Price (F58RE76B)
0735                   End If
0736                End If
0737                //
0738                //
0739                VA rpt_szF0005_KY = "158"
0740                Do Custom Section(RS LimpaErro)
0741                If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0742                   VA evt_mnVerificaTotalItem_AEXP = [BC Unit Cost - Purchasing (F58RE76B)]*[VA rpt_mnF58RE76B_UORG]
0743                   VA evt_mnVerificaTotalItem_AEXP = round([VA evt_mnVerificaTotalItem_AEXP],2)
0744                   If VA evt_mnVerificaTotalItem_AEXP is not equal to VA rpt_mnF58RE76B_AEXP
0745                      // ******caso em que o desconto não esta declarado, e somente está embutido no
0746                      // preço********
0747                      VA rpt_mnPrecoUnitAux_UPRC = VA rpt_mnF58RE76B_UPRC
0748                      VA rpt_mnTotalItemAux_AEXP = VA rpt_mnF58RE76B_AEXP
0749                      VA rpt_cFlagDivergenciaTotalItem = "Y"
0750                      VA rpt_szF0005_KY = "158"
0751                      Do Custom Section(RS LogErro)
0752                   Else
0753                      VA rpt_szF0005_KY = "158"
0754                      Do Custom Section(RS LimpaErro)
0755                   End If
0756                End If
0757             End If
0758          End If
0759       End If
0760    End If
0761    //
0762    //
0763    // ============================
0764    // INICIO  ----- Carol - 28/08/2015
0765    // Inclusão para considerar a Desoneração de ICMS
0766    // ============================
0767    //
0768    //
0769    If BC Amount - Net Posting 15 (F58RE76B) is greater than <Zero>
0770       VA evt_mnDesonIcmsUni_UPRC = [BC Amount - Net Posting 15 (F58RE76B)]/[VA rpt_mnF58RE76B_UORG]
0771       VA rpt_mnPrecoUnitAux_UPRC = [VA rpt_mnPrecoUnitAux_UPRC]-[VA evt_mnDesonIcmsUni_UPRC]
0772       VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnPrecoUnitAux_UPRC]*[VA rpt_mnF58RE76B_UORG]
0773       VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0774    End If
0775    //
0776    // ============================
0777    //    FIM   ----- Carol 28/08/2015
0778    // ============================
0779    //
0780    //
0781    //
0782    //
0783    VA rpt_szF0005_KY = "138"
0784    VA rpt_szFatorConversao_DSC2 = ""
0785    VA evt_cFlagConverCrossRef_EV01 = ""
0786    VA rpt_mnQtdConvertida_UORG = "0"
0787    //
0788    // ******************************************************
0789    // VALIDAÇÕES E CONVERSAO DE UNIDADE DE MEDIDA
0790    // ==>> Julio Donati - 21/02/2019 - Incluído a Data Efetiva no Select
0791    F4104.Select
           VA rpt_mnF58RE76A_AN8 =  TK Address Number
           VA rpt_szOPCrossRefConversaoUM =  TK Type - Cross-Reference Type Code
           VA rpt_mnITM =  TK Item Number - Short
           SL DateToday <= TK Date - Expired
           SL DateToday >= TK Date - Effective
           VA rpt_szF4311_UOM =  TK Item Number - Customer/Supplier
           VA rpt_szF58RE76B_UOM =  TK Description
0792    F4104.Fetch Next
           VA rpt_szFatorConversao_DSC2 <- TK Description - Line 2
0793    If SV File_IO_Status is equal to CO ERROR
0794       // ==>> Julio Donati - 21/02/2019 - Incluído a Data Efetiva no Select
0795       F4104.Select
              VA rpt_szOPCrossRefConversaoUM =  TK Type - Cross-Reference Type Code
              VA rpt_mnITM =  TK Item Number - Short
              SL DateToday <= TK Date - Expired
              SL DateToday >= TK Date - Effective
              VA rpt_szF4311_UOM =  TK Item Number - Customer/Supplier
              VA rpt_szF58RE76B_UOM =  TK Description
0796       F4104.Fetch Next
              VA rpt_szFatorConversao_DSC2 <- TK Description - Line 2
0797    End If
0798    Convert String to Math Numeric
           VA rpt_szFatorConversao_DSC2 -> szInputString
           VA rpt_mnFatorConversao_UORG <- mnOutputMathNumeric
           UNDEFINED <- cReturnedErrorCode
0799 !    If VA rpt_szF58RE76B_UOM is not equal to VA rpt_szF4311_UOM
0800       //
0801       If VA rpt_mnFatorConversao_UORG is less than or equal to <Zero>
0802          If VA rpt_szF58RE76B_UOM is not equal to VA rpt_szF4311_UOM
0803             F41002 Get Item UoM Conversion
                    VA rpt_szF58RE76B_MCU -> szBranchPlant
                    VA rpt_szF58RE76B_UOM -> szFromUnitOfMeasure
                    VA rpt_szF4311_UOM -> szToUnitOfMeasure
                    VA rpt_mnF58RE76B_UORG -> mnQuantityToConvert
                    UNDEFINED X  cInventoryInterfaceFlag
                    UNDEFINED X  mnConversionFactorFromToPrim
                    UNDEFINED X  mnConversionFactorFrom_to_To
                    UNDEFINED X  mnConversionFactorTo_to_Primar
                    UNDEFINED X  mnQuantityConvertedToPrimary
                    UNDEFINED X  cConvertToSecondary
                    UNDEFINED X  mnQuantityConvertedToSecondary
                    UNDEFINED X  cConvertToPurchasing
                    UNDEFINED X  mnQuantityConvertedToPurchasin
                    UNDEFINED X  cConvertToPricing
                    UNDEFINED X  mnQuantityConvertedToPricing
                    UNDEFINED X  cConvertToShipping
                    UNDEFINED X  mnQuantityConvertedToShipping
                    UNDEFINED X  cConvertToWeight
                    UNDEFINED X  mnQuantityConvertedToWeight
                    UNDEFINED X  cConvertToVolume
                    UNDEFINED X  mnQuantityConvertedToVolume
                    UNDEFINED X  cPotencyMode
                    UNDEFINED X  szLotNumber
                    UNDEFINED X  cPotencyControl
                    UNDEFINED X  mnStandardPotency
                    UNDEFINED X  szErrorMessageID
                    UNDEFINED X  cSuppressErrorMsg
                    UNDEFINED X  cPotencyType
                    VA rpt_mnITM -> mnShortItemNumber
                    UNDEFINED X  cUOMByBranch
                    UNDEFINED X  szUOMToPrimary
                    UNDEFINED X  szUOMToSecondary
                    UNDEFINED X  szUOMToPurchasing
                    UNDEFINED X  szUOMToPricing
                    UNDEFINED X  szUOMToWeight
                    UNDEFINED X  szUOMToVolume
                    UNDEFINED X  szUOMToShipping
                    UNDEFINED X  szStandardUOMConversion
                    VA rpt_mnQtdConvertida_UORG <- mnQuantityConvertedFromtoTo
0804             If VA rpt_mnQtdConvertida_UORG is less than or equal to <Zero>
0805                F41002 Get Item UoM Conversion
                       UNDEFINED X  szBranchPlant
                       VA rpt_szF58RE76B_UOM -> szFromUnitOfMeasure
                       VA rpt_szF4311_UOM -> szToUnitOfMeasure
                       VA rpt_mnF58RE76B_UORG -> mnQuantityToConvert
                       UNDEFINED X  cInventoryInterfaceFlag
                       UNDEFINED X  mnConversionFactorFromToPrim
                       UNDEFINED X  mnConversionFactorFrom_to_To
                       UNDEFINED X  mnConversionFactorTo_to_Primar
                       UNDEFINED X  mnQuantityConvertedToPrimary
                       UNDEFINED X  cConvertToSecondary
                       UNDEFINED X  mnQuantityConvertedToSecondary
                       UNDEFINED X  cConvertToPurchasing
                       UNDEFINED X  mnQuantityConvertedToPurchasin
                       UNDEFINED X  cConvertToPricing
                       UNDEFINED X  mnQuantityConvertedToPricing
                       UNDEFINED X  cConvertToShipping
                       UNDEFINED X  mnQuantityConvertedToShipping
                       UNDEFINED X  cConvertToWeight
                       UNDEFINED X  mnQuantityConvertedToWeight
                       UNDEFINED X  cConvertToVolume
                       UNDEFINED X  mnQuantityConvertedToVolume
                       UNDEFINED X  cPotencyMode
                       UNDEFINED X  szLotNumber
                       UNDEFINED X  cPotencyControl
                       UNDEFINED X  mnStandardPotency
                       UNDEFINED X  szErrorMessageID
                       UNDEFINED X  cSuppressErrorMsg
                       UNDEFINED X  cPotencyType
                       VA rpt_mnITM -> mnShortItemNumber
                       UNDEFINED X  cUOMByBranch
                       UNDEFINED X  szUOMToPrimary
                       UNDEFINED X  szUOMToSecondary
                       UNDEFINED X  szUOMToPurchasing
                       UNDEFINED X  szUOMToPricing
                       UNDEFINED X  szUOMToWeight
                       UNDEFINED X  szUOMToVolume
                       UNDEFINED X  szUOMToShipping
                       UNDEFINED X  szStandardUOMConversion
                       VA rpt_mnQtdConvertida_UORG <- mnQuantityConvertedFromtoTo
0806             End If
0807          Else
0808             //
0809             VA evt_cFlagConverCrossRef_EV01 = "N"
0810             VA rpt_mnF58RE76B_UOR3 = VA rpt_mnF58RE76B_UORG
0811             VA rpt_mnF58RE76B_UNCS = VA rpt_mnPrecoUnitAux_UPRC
0812             VA rpt_mnF58RE76B_UNCS = round([VA rpt_mnF58RE76B_UNCS],4)
0813             Do Custom Section(RS LimpaErro)
0814             //
0815          End If
0816       Else
0817          VA rpt_mnQtdConvertida_UORG = [VA rpt_mnF58RE76B_UORG]/[VA rpt_mnFatorConversao_UORG]
0818       End If
0819       //
0820       If VA rpt_mnQtdConvertida_UORG is greater than <Zero>
0821          // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0822          // Inicio - Julio Donati - 11/12/2014
0823          // Verifica se a Conversão trouxe um valor inteiro, se não foi inteiro setar erro
0824          // Inserido margem de 0,001 para considerar numero inteiro, pois fator de CX para
0825          // UN de 1 para 12, a conta fica 12*0,083333333 que dá 0,99999996
0826          // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0827          //
0828          VA rpt_mnTesteConvInteiro_UORG = mod([VA rpt_mnQtdConvertida_UORG],1)
0829          //
0830          If VA rpt_mnTesteConvInteiro_UORG is greater than "0.001"
              And VA rpt_mnTesteConvInteiro_UORG is less than "0.999"
0831             //
0832             VA rpt_szF0005_KY = "441"
0833             Do Custom Section(RS LogErro)
0834             //
0835          Else
0836             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0837             // Fim - Julio Donati - 11/12/2014
0838             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0839             VA evt_mnPrecoUnitConvert_UPRC = [VA rpt_mnTotalItemAux_AEXP]/[VA rpt_mnQtdConvertida_UORG]
0840             VA rpt_mnF58RE76B_UOR3 = VA rpt_mnQtdConvertida_UORG
0841             VA rpt_mnF58RE76B_UNCS = VA evt_mnPrecoUnitConvert_UPRC
0842             VA rpt_mnF58RE76B_UNCS = round([VA rpt_mnF58RE76B_UNCS],4)
0843             VA rpt_cFlagConverteUNID_EV01 = "T"
0844             // ----------- Thales Suzuki - 06/07/2015 - Início -----------
0845             VA rpt_szF0005_KY = "441"
0846             // ----------- Thales Suzuki - 06/07/2015 - Fim -----------
0847             Do Custom Section(RS LimpaErro)
0848          End If
0849       Else
0850          If VA evt_cFlagConverCrossRef_EV01 is not equal to "N"
0851             Do Custom Section(RS LogErro)
0852          End If
0853       End If
0854 !    Else
0855 !       VA rpt_mnF58RE76B_UOR3 = VA rpt_mnF58RE76B_UORG
0856 !       VA rpt_mnF58RE76B_UNCS = VA rpt_mnPrecoUnitAux_UPRC
0857 !       VA rpt_mnF58RE76B_UNCS = round([VA rpt_mnF58RE76B_UNCS],4)
0858 !       Do Custom Section(RS LimpaErro)
0859 !    End If
0860 End If
0861 If VA rpt_cFlagDivergenciaTotalItem is not equal to "Y"
0862    VA rpt_mnTotalItemAux_AEXP = [VA rpt_mnF58RE76B_UNCS]*[VA rpt_mnF58RE76B_UOR3]
0863    VA rpt_mnTotalItemAux_AEXP = round([VA rpt_mnTotalItemAux_AEXP],2)
0864 End If
0865 //
0866 If VA rpt_mnQuantConverAnterior_UORG is not equal to VA rpt_mnF58RE76B_UOR3
     Or VA rpt_szUnidMedAnterior_UOM is not equal to VA rpt_szF58RE76B_UOM
     Or VA rpt_szF58RE76E_LITM is equal to <Blank>
     Or VA rpt_szF58RE76E_LITM is equal to <Null>
     Or VA rpt_szF58RE76E_LITM is not equal to VA rpt_szItem_LITM
0867    F58RE76E.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
           VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
           VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
0868    VA rpt_cFlagRegF58RE76E_EV01 = "N"
0869 Else
0870 End If
0871 //
0872 Do Custom Section(RS Valida Lotes)
0873 //
0874 If VA rpt_mnOrdemCompraConvert_DOCO is greater than <Zero>
     And VA rpt_mnF58RE76B_ITM is greater than <Zero>
     And VA rpt_cEncontrouLote_EV01 is not equal to "Y"
0875    VA rpt_szF0005_KY = "157"
0876    F4102.Fetch Single
           VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
           VA rpt_szF4311_MCU =  TK Business Unit
           VA evt_szF4102_SRCE <- TK Layer Code - Source
0877    If VA evt_szF4102_SRCE is equal to "3,7"
0878       Do Custom Section(RS LogErro)
0879    Else
0880       Do Custom Section(RS LimpaErro)
0881    End If
0882 End If
0883 //
0884 If VA rpt_cEncontrouLote_EV01 is not equal to "Y"
     And VA rpt_cFlagRegF58RE76E_EV01 is not equal to "Y"
0885    F58RE76E.Insert
           VA rpt_mnF58RE76A_BNNF -> TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 -> TK Next Number Range 1
           VA rpt_szF58RE76A_DCT -> TK Document Type
           VA rpt_mnF58RE76B_SLN -> TK Seal Number
           VA rpt_szF58RE76A_BSER -> TK Nota Fiscal Series
           VA rpt_mnF58RE76E_UKIT -> TK Unique Item Id
           VA rpt_mnF58RE76B_UKID -> TK Unique Key ID (Internal)
           VA rpt_szItem_LITM -> TK 2nd Item Number
           VA rpt_mnF4311_LNID -> TK Line Number
           VA rpt_mnF58RE76B_DOCO -> TK Document (Order No, Invoice, etc.)
           VA rpt_mnF58RE76B_PDCT -> TK Order Type
           VA rpt_szF58RE76B_KCOO -> TK Order Company (Order Number)
           VA rpt_mnF58RE76B_UOR3 -> TK Units - Order/Transaction Quantity
           VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
           VA rpt_mnTotalItemAux_AEXP -> TK Amount - Extended Price
           VA rpt_szF4311_UOM -> TK Unit of Measure as Input
           VA rpt_mnF58RE76A_AN8 -> TK Address Number
           VA rpt_szF58RE76B_CITM -> TK Item Number - Customer/Supplier
           VA rpt_szF4311_LOCN -> TK Location
           VA rpt_szUSER -> TK User ID
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time - Last Updated
0886 Else
0887    If VA rpt_cErroQunatLoteMaiorNF is not equal to "Y"
0888       If VA rpt_mnF58RE76E_UORG is equal to VA rpt_mnF58RE76B_UOR3
           Or VA rpt_mnF58RE76E_UORG is equal to <Zero>
0889          VA rpt_mnF58RE76E_AEXP = VA rpt_mnTotalItemAux_AEXP
0890          VA rpt_mnF58RE76E_UORG = VA rpt_mnF58RE76B_UOR3
0891          If VA rpt_cEncontrouLote_EV01 is not equal to "Y"
0892             F58RE76E.Update
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_DCT =  TK Document Type
                    VA rpt_mnF58RE76B_SLN =  TK Seal Number
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
                    VA rpt_szItem_LITM -> TK 2nd Item Number
                    VA rpt_mnF58RE76E_UORG -> TK Units - Order/Transaction Quantity
                    VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
                    VA rpt_mnF58RE76E_AEXP -> TK Amount - Extended Price
                    VA rpt_szF4311_UOM -> TK Unit of Measure as Input
                    VA rpt_szF58RE76B_CITM -> TK Item Number - Customer/Supplier
                    VA rpt_szUSER -> TK User ID
                    VA rpt_szPID -> TK Program ID
                    VA rpt_szJOBN -> TK Work Station ID
                    VA rpt_jdUPMJ -> TK Date - Updated
                    VA rpt_jdUPMT -> TK Time - Last Updated
0893          Else
0894             If VA rpt_mnF58RE76E_DOCO is equal to VA rpt_mnF58RE76B_DOCO
                 And VA rpt_mnF58RE76B_DOCO is greater than <Zero>
0895                F58RE76E.Update
                       VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                       VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                       VA rpt_szF58RE76A_DCT =  TK Document Type
                       VA rpt_mnF58RE76B_SLN =  TK Seal Number
                       VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                       VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
                       VA rpt_szItem_LITM -> TK 2nd Item Number
                       VA rpt_mnF4311_LNID -> TK Line Number
                       VA rpt_mnF58RE76B_PDCT -> TK Order Type
                       VA rpt_szF58RE76B_KCOO -> TK Order Company (Order Number)
                       VA rpt_mnF58RE76E_UORG -> TK Units - Order/Transaction Quantity
                       VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
                       VA rpt_mnF58RE76E_AEXP -> TK Amount - Extended Price
                       VA rpt_szF4311_UOM -> TK Unit of Measure as Input
                       VA rpt_mnF58RE76A_AN8 -> TK Address Number
                       VA rpt_szF58RE76B_CITM -> TK Item Number - Customer/Supplier
                       VA rpt_szUSER -> TK User ID
                       VA rpt_szPID -> TK Program ID
                       VA rpt_szJOBN -> TK Work Station ID
                       VA rpt_jdUPMJ -> TK Date - Updated
                       VA rpt_jdUPMT -> TK Time - Last Updated
0896             Else
0897             End If
0898          End If
0899       Else
0900          If VA rpt_mnF58RE76E_UORG is not equal to <Zero>
0901             VA rpt_cFlagCalculaDiferenca_EV01 = "N"
0902             VA rpt_mnPrecoUnitAtualiza_UPRC = VA rpt_mnF58RE76B_UNCS
0903             VA rpt_mnF58RE76E_UKID = VA rpt_mnF58RE76B_UKID
0904             Do Custom Section(RS Atualiza Item OC)
0905          End If
0906       End If
0907    End If
0908 End If
0909 //
0910 //
0911 // Validação BFII e BFIP
0912 //
0913 If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "40,41,51"
0914    VA rpt_chBFII = "2"
0915 Else
0916    If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "90"
0917       VA rpt_chBFII = "3"
0918    Else
0919       VA rpt_chBFII = "1"
0920    End If
0921 End If
0922 If BC Tax Expl Code 1 (F58RE76B) is equal to "01,02,03,04,..."
0923    VA rpt_chBFIP = "2"
0924 Else
0925    If BC Tax Expl Code 1 (F58RE76B) is equal to "00,49,50,99"
0926       VA rpt_chBFIP = "1"
0927    Else
0928       VA rpt_chBFIP = "3"
0929    End If
0930 End If
0931 //
0932 // Validação BVIS e BBIS
0933 //
0934 If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "10,30,60,70"
0935    VA rpt_szF0005_KY = "134"
0936    If BC Amount - ICMS Substitute (F58RE76B) is equal to "0"
0937       Do Custom Section(RS LogErro)
0938    Else
0939       Do Custom Section(RS LimpaErro)
0940    End If
0941    VA rpt_szF0005_KY = "135"
0942    If BC Amount - ICMS Substitute Taxable (F58RE76B) is equal to <Zero>
0943       Do Custom Section(RS LogErro)
0944    Else
0945       Do Custom Section(RS LimpaErro)
0946    End If
0947 End If
0948 //
0949 // Validação BBIR
0950 //
0951 If BC Amount - ICMS Taxable (F58RE76B) is greater than <Zero>
     And BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "20,70"
0952    VA rpt_mnF58RE76B_BBIR = [BC Amount - Extended Price (F58RE76B)]-[BC Amount - ICMS Taxable (F58RE76B)]
0953 End If
0954 VA rpt_szF0005_KY = "133"
0955 If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "20,70"
     And VA rpt_mnF58RE76B_BBIR is equal to <Zero>
0956    Do Custom Section(RS LogErro)
0957 Else
0958    Do Custom Section(RS LimpaErro)
0959 End If
0960 VA rpt_szF0005_KY = "155"
0961 If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is not equal to "20,70"
     And VA rpt_mnF58RE76B_BBIR is not equal to <Zero>
0962    Do Custom Section(RS LogErro)
0963 Else
0964    Do Custom Section(RS LimpaErro)
0965 End If
0966 // Validação BICM
0967 If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is not equal to "90"
0968    VA rpt_szF0005_KY = "132"
0969    If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "00,10,20"
        And BC Amount - ICMS Tax (F58RE76B) is equal to <Zero>
0970       Do Custom Section(RS LogErro)
0971    Else
0972       Do Custom Section(RS LimpaErro)
0973    End If
0974    VA rpt_szF0005_KY = "132"
0975    If BC Code - ICMS Tax Situation (Nota Fiscal) (F58RE76B) is equal to "30-60"
        And BC Amount - ICMS Tax (F58RE76B) is not equal to <Zero>
0976       Do Custom Section(RS LogErro)
0977    Else
0978       Do Custom Section(RS LimpaErro)
0979    End If
0980    VA rpt_szF0005_KY = "132"
0981    If BC Code - ICMS Reporting Column (Fiscal B.) (F58RE76B) is equal to "2"
        And BC Amount - ICMS Tax (F58RE76B) is not equal to <Zero>
0982       Do Custom Section(RS LogErro)
0983    Else
0984       Do Custom Section(RS LimpaErro)
0985    End If
0986 End If
0987 VA rpt_mnF58RE76B_BBTP = [VA rpt_mnF58RE76B_BBTP]+[BC Amount - IPI Taxable (F58RE76B)]
0988 VA rpt_mnF58RE76B_BBCI = [VA rpt_mnF58RE76B_BBCI]+[BC Amount - IPI Taxable (F58RE76B)]
0989 //
0990 VA rpt_szF0005_KY = "148"
0991 If VA rpt_mnF4311_UOPN is equal to <Zero>
     And VA rpt_mnF58RE76B_DOCO is greater than <Zero>
     And VA rpt_mnF58RE76B_ITM is greater than <Zero>
0992    Do Custom Section(RS LogErro)
0993 Else
0994    Do Custom Section(RS LimpaErro)
0995 End If
0996 //
0997 //
0998 //
0999 //
1000 // ----------------- Thales Suzuki - 17/09/2014 - Início -------------------
1001 If PO cValidaNCM_EV01 is equal to "1"
1002    VA rpt_szClassificacaoItem_BCLF = ""
1003    // ------------- Thales Suzuki - 06/07/2015 - Início ---------------
1004    // lógica alterada
1005 !    F76412.Select
     !       VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
     !       VA rpt_szF4311_MCU =  TK Business Unit
1006 !    F76412.Fetch Next
     !       VA rpt_szClassificacaoItem_BCLF <- TK Fiscal Classification
1007 !    If SV File_IO_Status is equal to CO ERROR
1008 !       F76411.Select
     !          VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
1009 !       F76411.Fetch Next
     !          VA rpt_szClassificacaoItem_BCLF <- TK Fiscal Classification
1010 !       VA rpt_szF0005_KY = "437"
1011 !    Else
1012 !       VA rpt_szF0005_KY = "436"
1013 !    End If
1014    VA rpt_szF0005_KY = "436"
1015    VA rpt_cF41021_PBIN = "P"
1016    VA rpt_szF41021_LOCN = ""
1017    //
1018    F41021.Fetch Single
           VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
           VA rpt_szF4311_MCU =  TK Business Unit
           VA rpt_szF41021_LOCN <- TK Location
           VA rpt_cF41021_PBIN =  TK Primary Location (P/S)
1019    //
1020    F76412.Select
           VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
           VA rpt_szF4311_MCU =  TK Business Unit
           VA rpt_szF41021_LOCN =  TK Location
1021    F76412.Fetch Next
           VA rpt_szClassificacaoItem_BCLF <- TK Fiscal Classification
1022    If SV File_IO_Status is equal to CO SUCCESS
1023       If VA rpt_szClassificacaoItem_BCLF is equal to BC Fiscal Classification (F58RE76B)
1024          Do Custom Section(RS LimpaErro)
1025       Else
1026          Do Custom Section(RS LogErro)
1027       End If
1028    End If
1029    //
1030    // Busca no Mestre
1031    VA rpt_szF0005_KY = "437"
1032    F76411.Select
           VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
1033    F76411.Fetch Next
           VA rpt_szClassificacaoItem_BCLF <- TK Fiscal Classification
1034    //
1035    If VA rpt_szClassificacaoItem_BCLF is not equal to BC Fiscal Classification (F58RE76B)
1036       Do Custom Section(RS LogErro)
1037    Else
1038       Do Custom Section(RS LimpaErro)
1039    End If
1040    // ------------- Thales Suzuki - 06/07/2015 - Fim ------------------
1041 End If
1042 // ----------------- Thales Suzuki - 17/09/2014 - Fim -------------------
1043 //
1044 // ----------------- Thales Suzuki - 30/09/2014 - Início -------------------
1045 //
1046 VA evt_szF4102_MCU = "    DIFARCAT"
1047 VA evt_szF4102_PRP5 = ""
1048 VA evt_szF4102_SRP8 = ""
1049 VA evt_mnF4102_SLD = "0"
1050 F4102.Fetch Single
        VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
        VA evt_szF4102_MCU =  TK Business Unit
        VA evt_szF4102_SRP8 <- TK Category Code 8
        VA evt_szF4102_PRP5 <- TK Purchasing Category Code 5
        VA evt_mnF4102_SLD <- TK Days - Shelf Life Days
        VA evt_szF4102_SRCE <- TK Layer Code - Source
1051 //
1052 If VA evt_szF4102_PRP5 is equal to "PER"
1053    VA rpt_szF0005_KY = "439"
1054    If VA evt_szF4102_SRCE is not equal to PO cStatusLoteHPC_SRCE
        Or VA evt_mnF4102_SLD is less than or equal to <Zero>
1055       Do Custom Section(RS LogErro)
1056    Else
1057       Do Custom Section(RS LimpaErro)
1058       // ------------- Thales Suzuki - 06/07/2015 - Início ------------------
1059       VA rpt_szF0005_KY = "438"
1060       Do Custom Section(RS LimpaErro)
1061       VA rpt_szF0005_KY = "442"
1062       Do Custom Section(RS LimpaErro)
1063       // ------------- Thales Suzuki - 06/07/2015 - Fim ------------------
1064    End If
1065 Else
1066    VA rpt_szF0005_KY = "438"
1067    //
1068    // ----------- Ana Carolina 02/10/2014 - Inicio -----------
1069    // Inclusão da condição do codigo categoria 8
1070    //
1071    If VA evt_szF4102_SRCE is not equal to PO cStatusLoteMED_SRCE
        And VA evt_szF4102_SRP8 is equal to "C,V"
1072       //
1073       // ----------- Ana Carolina 02/10/2014 - Fim -----------
1074       //
1075       Do Custom Section(RS LogErro)
1076    Else
1077       Do Custom Section(RS LimpaErro)
1078       // ------------- Thales Suzuki - 06/07/2015 - Início ------------------
1079       VA rpt_szF0005_KY = "439"
1080       Do Custom Section(RS LimpaErro)
1081       // ------------- Thales Suzuki - 06/07/2015 - Fim ------------------
1082    End If
1083    //
1084    //
1085    //
1086    VA rpt_szF0005_KY = "442"
1087    //
1088    If VA evt_szF4102_SRCE is not equal to PO cStatusLoteMED_SRCE
        And VA evt_szF4102_SRP8 is not equal to "C,V"
        And VA evt_mnF4102_SLD is less than or equal to <Zero>
1089       Do Custom Section(RS LogErro)
1090    Else
1091       Do Custom Section(RS LimpaErro)
1092    End If
1093    //
1094 End If
1095 //
1096 //
1097 F4301.Select
        VA rpt_szF58RE76B_KCOO =  TK Order Company (Order Number)
        VA rpt_mnF58RE76B_DOCO =  TK Document (Order No, Invoice, etc.)
        VA rpt_mnF58RE76B_PDCT =  TK Order Type
1098 F4301.Fetch Next
        BC Document Type - Purchase Order <- TK Order Type
1099 VA rpt_szF0005_KY = "440"
1100 If SV File_IO_Status is equal to CO ERROR
1101    // Não existe pedido de compra
1102    Do Custom Section(RS LogErro)
1103 Else
1104    Do Custom Section(RS LimpaErro)
1105 End If
1106 //
1107 // ----------------- Thales Suzuki - 30/09/2014 - Fim -------------------
1108 //
1109 //
1110 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
1111 // Inicio - Julio Donati - 12/08/2019
1112 // Funcional: Ana Carolina
1113 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
1114 //
1115 // ==>> Validação do Código Anvisa
1116 VA rpt_szF0005_KY = "446"
1117 If BC Use Description 02 (F58RE76B) is greater than <Blank>
1118    //
1119    VA evt_szTemp_UD02 = ltrim(rtrim([BC Use Description 02 (F58RE76B)],' '),' ' )
1120    //
1121    // ==>>Retira os pontos "." da string original
1122    While VA evt_szTemp_UD02 is not equal to VA evt_szSemMascara_UD02
1123       //
1124       If VA evt_szSemMascara_UD02 is greater than <Blank>
1125          VA evt_szTemp_UD02 = VA evt_szSemMascara_UD02
1126       End If
1127       //
1128       Replace String in String
              VA evt_szTemp_UD02 -> szInputString
              VA evt_szSemMascara_UD02 <- szOutputString
              "." -> szReplStringOld
              "<Blank>" -> szReplStringNew
1129       //
1130    End While
1131    //
1132    VA evt_szF4104_XRT = "MS"
1133    //
1134    F4104.Select
           VA evt_szF4104_XRT =  TK Type - Cross-Reference Type Code
           VA rpt_mnITM =  TK Item Number - Short
           SL DateToday <= TK Date - Expired
           SL DateToday >= TK Date - Effective
           VA evt_szSemMascara_UD02 =  TK Item Number - Customer/Supplier
1135    F4104.Fetch Next
           VA evt_szTemp_UD02 <- TK Item Number - Customer/Supplier
1136    If SV File_IO_Status is equal to CO SUCCESS
1137       Do Custom Section(RS LimpaErro)
1138    Else
1139       Do Custom Section(RS LogErro)
1140    End If
1141    //
1142    //
1143 Else
1144    //
1145    // ==>> Se o código não veio preenchido, verifica na F4104 se existia registro
1146    // para esse item, se existir tem que dar erro.
1147    VA evt_szF4104_XRT = "MS"
1148    F4104.Select
           VA evt_szF4104_XRT =  TK Type - Cross-Reference Type Code
           VA rpt_mnITM =  TK Item Number - Short
           SL DateToday <= TK Date - Expired
           SL DateToday >= TK Date - Effective
1149    F4104.Fetch Next
           VA evt_szTemp_UD02 <- TK Item Number - Customer/Supplier
1150    If SV File_IO_Status is equal to CO SUCCESS
1151       Do Custom Section(RS LogErro)
1152    Else
1153       Do Custom Section(RS LimpaErro)
1154    End If
1155    //
1156 End If
1157 //
1158 //
1159 //
1160 // ==>> Validação do CEST
1161 If PO cValidaCEST_EV01 is equal to "1"
1162    VA rpt_szF0005_KY = "447"
1163    F4102.Fetch Single
           VA rpt_mnITM =  TK Item Number - Short
           VA rpt_szF4311_MCU =  TK Business Unit
           VA evt_szF4102_CYCL <- TK Cycle Count Category
1164    If SV File_IO_Status is equal to CO SUCCESS
1165       //
1166       Get UDC
              UNDEFINED X  szDataDictionaryItem
              "41" -> szSystemCode
              "8" -> szRecordTypeCode
              VA evt_szF4102_CYCL -> szUserDefinedCode
              UNDEFINED X  mnKeyFieldLength
              UNDEFINED X  szLanguagePreference
              VA evt_szCEST_ITEM_DL01 <- szDescription001
              UNDEFINED X  szDescription002
              UNDEFINED X  szSpecialHandlingCode
              UNDEFINED X  cUdcOwnershipFlag
              UNDEFINED X  cHardCodedYn
              "1" -> cSuppressErrorMessage
              UNDEFINED X  szErrorMessageId
              UNDEFINED X  cUDCOne
1167       VA evt_mnItem_CEST = ltrim(rtrim([VA evt_szCEST_ITEM_DL01],' '),' ')
1168       If VA evt_mnItem_CEST is greater than <Zero>
1169          //
1170          If BC Código Especificador da ST (F58RE76B) is equal to VA evt_mnItem_CEST
1171             Do Custom Section(RS LimpaErro)
1172          Else
1173             Do Custom Section(RS LogErro)
1174          End If
1175          //
1176       Else
1177          //
1178          If BC Código Especificador da ST (F58RE76B) is greater than <Zero>
1179             Do Custom Section(RS LogErro)
1180          Else
1181             Do Custom Section(RS LimpaErro)
1182          End If
1183          //
1184       End If
1185       //
1186       //
1187    Else
1188       //
1189       If BC Código Especificador da ST (F58RE76B) is greater than <Zero>
1190          Do Custom Section(RS LogErro)
1191       Else
1192          Do Custom Section(RS LimpaErro)
1193       End If
1194       //
1195    End If
1196 End If
1197 //
1198 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
1199 // Fim - Julio Donati - 12/08/2019
1200 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
1201 //
1202 //
1203 //
1204 //
1205 F58RE040.Fetch Single
        BC Nota Fiscal Number =  TK Nota Fiscal Number
        BC Next Number Range 1 =  TK Next Number Range 1
        BC Document Type =  TK Document Type
        BC Unique Key ID (Internal) =  TK Line Number
        BC Seal Number =  TK Seal Number
1206 If SV File_IO_Status is equal to CO SUCCESS
1207    VA rpt_chFlagErro = "T"
1208    If VA rpt_cExisteErro_EV01 is equal to <Blank>
        Or VA rpt_cExisteErro_EV01 is equal to <Null>
1209       VA rpt_cExisteErro_EV01 = "Y"
1210    End If
1211 End If
1212 //
1213 If VA rpt_chFlagErro is equal to "T"
1214    VA evt_szProxStatus_AA03 = VA rpt_szProxStatusErro_AA03
1215    VA rpt_chFlagProcessamento = "A"
1216 Else
1217    VA evt_szProxStatus_AA03 = VA rpt_szOPProxStatusSucesso_AA03
1218    VA rpt_chFlagProcessamento = "L"
1219 End If
1220 If VA rpt_mnF4311_LNID is less than or equal to <Zero>
     Or VA rpt_mnTotalItemAux_AEXP is less than or equal to <Zero>
1221    VA rpt_cFlagEncontrTodosLinhaOC = "N"
1222 End If
1223 //
1224 //
1225 //
1226 //
1227 F58RE76B.Update
        BC Nota Fiscal Number =  TK Nota Fiscal Number
        BC Nota Fiscal Series =  TK Nota Fiscal Series
        BC Next Number Range 1 =  TK Next Number Range 1
        BC Document Type =  TK Document Type
        BC Unique Key ID (Internal) =  TK Unique Key ID (Internal)
        BC Seal Number =  TK Seal Number
        VA rpt_mnF58RE76B_DOCO -> TK Document (Order No, Invoice, etc.)
        VA rpt_mnF58RE76B_PDCT -> TK Document Type - Purchase Order
        VA rpt_szF58RE76B_KCOO -> TK Order Company (Order Number)
        VA rpt_mnF4311_LNID -> TK Line Number
        BC Document (Voucher, Invoice, etc.) -> TK Document (Voucher, Invoice, etc.)
        VA rpt_szF58RE76A_CO -> TK Company
        VA rpt_mnF58RE76B_ITM -> TK Item Number - Short
        VA rpt_szItem_LITM -> TK 2nd Item Number
        VA rpt_szF4311_MCU -> TK Business Unit
        VA evt_szF4311_LOCN -> TK Location
        VA rpt_szF58RE76B_UOM -> TK Unit of Measure as Input
        VA rpt_mnF58RE76A_SHAN -> TK Address Number - Ship To
        VA rpt_mnF58RE76A_AN8 -> TK Address Number
        VA rpt_mnF58RE76B_BBIR -> TK Amount - ICMS Reduced Taxable
        VA rpt_chBFII -> TK Code - ICMS Reporting Column (Fiscal B.)
        VA rpt_chBFIP -> TK Code - IPI Reporting Column (Fiscal B.)
        VA rpt_chFlagProcessamento -> TK Journaling Flag
        VA evt_szProxStatus_AA03 -> TK Alpha Spec. Data 03
        VA rpt_mnF58RE76B_UOR3 -> TK Units - Order/Transaction Quantity
        VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
        VA rpt_mnTotalItemAux_AEXP -> TK Amount - Net Posting 06
1228 //
1229 //
1230 //
1231 VA rpt_mnTotalDescontoNF_AN01 = [VA rpt_mnTotalDescontoNF_AN01]+[BC Amount - Nota Fiscal Discount (F58RE76B)]
1232 VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA rpt_mnTotalItemAux_AEXP]
1233 VA rpt_mnAcumQuantItemTolerancia = [VA rpt_mnAcumQuantItemTolerancia]+[VA rpt_mnF58RE76B_UOR3]
1234 VA rpt_mnNumeroItens_UKID = [VA rpt_mnNumeroItens_UKID]+1
1235 VA rpt_mnVlrTotItensSemConversao = [VA rpt_mnVlrTotItensSemConversao]+[VA rpt_mnF58RE76B_AEXP]
1236 //
1237 //

-----------------------------------------------------------------------
     EVENT:  End Section
-----------------------------------------------------------------------
0001 VA rpt_szFornecUnidMedida_KY = ""
0002 //
0003 VA rpt_szF0005_KY = "154"
0004 If VA rpt_mnVlrTotItensSemConversao is not equal to VA rpt_mnF58RE76A_GVDL
0005    Do Custom Section(RS LogErro)
0006 Else
0007    Do Custom Section(RS LimpaErro)
0008    // rateio devido diferença que ocorre na recomposição de preço
0009    //
0010    VA rpt_mnComposicaoPreco_AN01 = [VA rpt_mnF58RE76A_BVIS]+[VA rpt_mnF58RE76A_BIPI]
0011    VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA rpt_mnComposicaoPreco_AN01]
0012    If VA rpt_mnVlrTotalItens_UPRC is greater than <Zero>
        And VA rpt_mnOP_ToleranciaMaxUnicProd is greater than <Zero>
        And VA rpt_cFlagEncontrTodosLinhaOC is equal to "Y"
        And VA rpt_cFlagDivergenciaTotalItem is not equal to "Y"
        And VA rpt_cErroQunatLoteMaiorNF is not equal to "Y"
0013       Do Custom Section(RS RateioValorItem)
0014    End If
0015 End If
0016 Do Custom Section(RS Verifica Tolerancia Item OC)
0017 //
0018 //
0019 VA rpt_mnF58RE76E_DOCO = "0"
0020 F58RE76E.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76A_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76E_DOCO =  TK Document (Order No, Invoice, etc.)
0021 F58RE76E.Fetch Next
        VA rpt_mnF58RE76E_DOCO <- TK Document (Order No, Invoice, etc.)
0022 If SV File_IO_Status is not equal to CO SUCCESS
0023    Do Custom Section(RS ValidaCondicaoPagamento)
0024 Else
0025 End If

-----------------------------------------------------------------------
     EVENT:  Variable
-----------------------------------------------------------------------
     sec_szDSC1
     sec_szDSC2
     sec_szLNTY
     sec_szGLPT

=======================================================================
     SECTION: LimpaErro [GROUP SECTION] (S5)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 //
0002 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0003 // Inicio - Julio Donati - 03/04/2019
0004 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0005 //
0006 // Codigo Comentado
0007 ! F58RE040.Fetch Single
     !    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
     !    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
     !    VA rpt_szF58RE76A_DCT =  TK Document Type
     !    VA rpt_mnF58RE76B_UKID =  TK Line Number
     !    VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
     !    VA rpt_mnF58RE76B_SLN =  TK Seal Number
0008 ! If SV File_IO_Status is equal to CO SUCCESS
0009 !    F58RE040.Delete
     !       VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
     !       VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
     !       VA rpt_szF58RE76A_DCT =  TK Document Type
     !       VA rpt_mnF58RE76B_UKID =  TK Line Number
     !       VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
     !       VA rpt_mnF58RE76B_SLN =  TK Seal Number
0010 ! End If
0011 //
0012 // Novo Codigo
0013 If VA rpt_mnF58RE76C_LNIX is greater than <Zero>
0014    //
0015    F58RE040.Select
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_mnF58RE76B_UKID =  TK Line Number
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
           VA rpt_mnF58RE76C_LNIX =  TK Last Index
0016    F58RE040.Fetch Next
           VA rpt_mnF58RE76C_LNIX <- TK Last Index
0017    If SV File_IO_Status is equal to CO SUCCESS
0018       F58RE040.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76B_UKID =  TK Line Number
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
              VA rpt_mnF58RE76C_LNIX =  TK Last Index
0019    End If
0020    VA rpt_mnF58RE76C_LNIX = "0"
0021    //
0022 Else
0023    //
0024    F58RE040.Fetch Single
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_mnF58RE76B_UKID =  TK Line Number
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
0025    If SV File_IO_Status is equal to CO SUCCESS
0026       F58RE040.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76B_UKID =  TK Line Number
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
0027    End If
0028    //
0029 End If
0030 //
0031 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0032 // Fim - Julio Donati - 03/04/2019
0033 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0034 //

=======================================================================
     SECTION: LogErro [GROUP SECTION] (S6)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_szF0005_SPHD
     evt_cFlag_FLAG
     evt_szF0005_DL02
0001 VA rpt_szF0005_DL01 = ""
0002 VA evt_szF0005_DL02 = ""
0003 VA rpt_szF58RE040_DS01 = ""
0004 Get UDC Description
        UNDEFINED X  szDataDictionaryItem
        VA rpt_szOP_SY -> szSystemCode
        VA rpt_szOP_RT -> szUserDefinedCodes
        UNDEFINED X  cUserDefinedCode
        VA rpt_szF0005_KY -> szUserDefinedCode
        VA rpt_szF0005_DL01 <- szDescription01
        VA evt_szF0005_DL02 <- szDescription02
        UNDEFINED X  cErrorCode
        VA evt_szF0005_SPHD <> szSpecialHandlingCode
0005 If VA rpt_szF0005_DL01 is not equal to <Blank>
     And VA rpt_szF0005_DL01 is not equal to <Null>
0006    If VA evt_szF0005_SPHD is not equal to "N"
0007       VA evt_cFlag_FLAG = ltrim(rtrim([VA evt_szF0005_SPHD],' '),' ' )
0008       VA evt_szF0005_DL02 = ltrim(rtrim([VA evt_szF0005_DL02],' '),' ' )
0009       VA rpt_szF0005_DL01 = ltrim(rtrim([VA rpt_szF0005_DL01],' '),' ' )
0010       //
0011       If VA rpt_szMensErroAdicional_DS01 is not equal to <Blank>
           And VA rpt_szMensErroAdicional_DS01 is not equal to <Null>
0012          VA rpt_szMensErroAdicional_DS01 = concat([VA rpt_szF0005_DL01],concat([VA evt_szF0005_DL02], [VA rpt_szMensErroAdicional_DS01]))
0013       Else
0014          VA rpt_szMensErroAdicional_DS01 = concat(ltrim(rtrim([VA rpt_szF0005_DL01],' '),' ' ),rtrim(ltrim([VA evt_szF0005_DL02],' '),' ' ) )
0015       End If
0016       VA rpt_szF58RE040_DS01 = VA rpt_szMensErroAdicional_DS01
0017       //
0018       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0019       // Inicio - Julio Donati - 03/04/2019
0020       // Grava campo LNIX, pois os erros com lote podem ter mais de uma linha de lote
0021       // pro mesmo item
0022       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0023       //
0024       // Codigo Comentado
0025 !       F58RE040.Insert
     !          VA rpt_mnF58RE76A_BNNF -> TK Nota Fiscal Number
     !          VA rpt_mnF58RE76A_N001 -> TK Next Number Range 1
     !          VA rpt_szF58RE76A_DCT -> TK Document Type
     !          VA rpt_mnF58RE76B_UKID -> TK Line Number
     !          VA rpt_szF0005_KY -> TK Alpha Spec. Data 03
     !          VA rpt_mnF58RE76B_SLN -> TK Seal Number
     !          VA rpt_szF58RE040_DS01 -> TK Description
     !          VA evt_cFlag_FLAG -> TK Journaling Flag
     !          VA rpt_szApplication_PID -> TK Program ID
     !          VA rpt_szJOBN -> TK Work Station ID
     !          VA rpt_szUSER -> TK User ID
     !          VA rpt_jdUPMJ -> TK Date - Updated
     !          VA rpt_jdUPMT -> TK Time - Last Updated
0026       //
0027       // Novo Codigo
0028       If VA rpt_mnF58RE76C_LNIX is greater than <Zero>
0029          F58RE040.Insert
                 VA rpt_mnF58RE76A_BNNF -> TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 -> TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT -> TK Document Type
                 VA rpt_mnF58RE76B_UKID -> TK Line Number
                 VA rpt_szF0005_KY -> TK Alpha Spec. Data 03
                 VA rpt_mnF58RE76B_SLN -> TK Seal Number
                 VA rpt_szF58RE040_DS01 -> TK Description
                 VA evt_cFlag_FLAG -> TK Journaling Flag
                 VA rpt_szApplication_PID -> TK Program ID
                 VA rpt_szJOBN -> TK Work Station ID
                 VA rpt_szUSER -> TK User ID
                 VA rpt_jdUPMJ -> TK Date - Updated
                 VA rpt_jdUPMT -> TK Time - Last Updated
                 VA rpt_mnF58RE76C_LNIX -> TK Last Index
0030       Else
0031          F58RE040.Insert
                 VA rpt_mnF58RE76A_BNNF -> TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 -> TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT -> TK Document Type
                 VA rpt_mnF58RE76B_UKID -> TK Line Number
                 VA rpt_szF0005_KY -> TK Alpha Spec. Data 03
                 VA rpt_mnF58RE76B_SLN -> TK Seal Number
                 VA rpt_szF58RE040_DS01 -> TK Description
                 VA evt_cFlag_FLAG -> TK Journaling Flag
                 VA rpt_szApplication_PID -> TK Program ID
                 VA rpt_szJOBN -> TK Work Station ID
                 VA rpt_szUSER -> TK User ID
                 VA rpt_jdUPMJ -> TK Date - Updated
                 VA rpt_jdUPMT -> TK Time - Last Updated
0032       End If
0033       //
0034       VA rpt_mnF58RE76C_LNIX = "0"
0035       //
0036       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0037       // Fim - Julio Donati - 03/04/2019
0038       // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0039       //
0040       VA rpt_chFlagErro = "Y"
0041    End If
0042 End If
0043 VA rpt_szMensErroAdicional_DS01 = ""

=======================================================================
     SECTION: Report Header [REPORT HEADER] (S7)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_szOP_RT = PO szRT
0002 Get Audit Information
        VA rpt_szUSER <- szUserName
        VA rpt_jdUPMJ <- jdDate
        VA rpt_jdUPMT <- mnTime
        VA rpt_szJOBN <- szWorkstation_UserId
0003 VA rpt_szPID = "R58RE070"
0004 VA rpt_szOP_SY = PO szSY
0005 VA rpt_szOPStatus_AA03 = PO szStatusInicial_AA03
0006 VA rpt_szProxStatusErro_AA03 = PO szProximoStatusAtualiErro_AA03
0007 VA rpt_szOPProxStatusSucesso_AA03 = PO zProximoStatusAtualSucess_AA03
0008 VA rpt_szOP_TipoCrossRef_XRT = PO szTypeCrossReferType_XRT
0009 VA rpt_cOP_ToleranciaPreco_AA01 = PO cToleranciaPreco_AA01
0010 VA rpt_szOPDeParaUM_RT = PO szDeParaUM_RT
0011 VA rpt_szOPDeParaUM_SY = PO szDeParaUM_SY
0012 VA rpt_mnOP_ToleranciaMaxUnicProd = PO mnToleranciaMaxUnicProd
0013 VA rpt_szOPExclusaoCNPJ_RT = PO szExclusaoCNPJ_RT
0014 VA rpt_szOPExclusaoCNPJ_SY = PO szExclusaoCNPJ_SY
0015 VA rpt_szOPStatusCancelamento_AA0 = PO szStatusCancelamento_AA03
0016 VA rpt_szOPCrossRefConversaoUM = PO szRefCruzadaConversaoUM_XRT
0017 VA rpt_szStatusOCEncerrado_NXTR = "999"
0018 VA rpt_szOPFornecUMErrada_RT = PO szFornecUMErrada_RT
0019 VA rpt_szOPFornecUMErrada_SY = PO szFornecUMErrada_SY
0020 VA rpt_cOPCancelarExcluiNota_EV01 = PO cExcluirCancelarNotas_EV01
0021 VA rpt_szOPRefCruzDeParaProduto = PO szDeParaProduto_XRT
0022 VA rpt_cFlagAtualizaPrazoPag_FLAG = PO cAtualiaPrazoPagamento_FLAG

=======================================================================
     SECTION: Valida Lotes [GROUP SECTION] (S8)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76C),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Next Number Range 1 (F58RE76C), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0003 Set User Selection(BC Nota Fiscal Series (F58RE76C), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0004 Set User Selection(BC Unique Key ID (Internal) (F58RE76C), <Equal To>, VA rpt_mnF58RE76B_UKID, <And>)
0005 VA rpt_mnTotalItensLotes_UOR3 = ""
0006 VA rpt_cEncontrouLote_EV01 = "N"
0007 VA sec_mnMaiorLoteCorrente_AEXP = ""
0008 VA sec_mnNovoVlrUnit_UPRC = ""
0009 VA sec_mnNovoVlrTotal_AEXP = ""
0010 VA sec_mnAcumulaVlrTotal_AEXP = ""
0011 VA sec_mnMaiorLoteCorrente_UOR3 = ""
0012 VA sec_mnMaiorLoteCorrente_LNIX = ""
0013 VA sec_mnPrecoTotalItem_AN02 = ""
0014 VA sec_mnMaiorLoteCorrente_LOTN = ""
0015 VA sec_mnDiferenca = ""

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnQtdConvertida_UORG = "0"
0002 VA sec_mnLnid = "0"
0003 VA rpt_mnF58RE76C_UORG = BC Units - Order/Transaction Quantity (F58RE76C)
0004 VA rpt_szF58RE76C_LOTN = BC Lot/Serial Number (F58RE76C)
0005 //
0006 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0007 // Inicio - Julio Donati - 03/04/2019
0008 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0009 //
0010 If VA rpt_mnF58RE76C_UORG is less than or equal to <Zero>
0011    //
0012    VA rpt_mnF58RE76C_LNIX = BC Last Index (F58RE76C)
0013    VA rpt_szF0005_KY = "445"
0014    Do Custom Section(RS LogErro)
0015    //
0016 Else
0017    //
0018    VA rpt_mnF58RE76C_LNIX = BC Last Index (F58RE76C)
0019    VA rpt_szF0005_KY = "445"
0020    Do Custom Section(RS LimpaErro)
0021    //
0022 End If
0023 //
0024 If BC Date - User Defined Date 01 (F58RE76C) is greater than VA rpt_jdF58RE76A_ISSU
0025    //
0026    VA rpt_mnF58RE76C_LNIX = BC Last Index (F58RE76C)
0027    VA rpt_szF0005_KY = "444"
0028    Do Custom Section(RS LogErro)
0029    //
0030 Else
0031    //
0032    VA rpt_mnF58RE76C_LNIX = BC Last Index (F58RE76C)
0033    VA rpt_szF0005_KY = "444"
0034    Do Custom Section(RS LimpaErro)
0035    //
0036 End If
0037 //
0038 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0039 // Fim - Julio Donati - 03/04/2019
0040 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0041 //
0042 If VA rpt_szF58RE76B_UOM is not equal to VA rpt_szF4311_UOM
     Or VA rpt_mnFatorConversao_UORG is greater than <Zero>
0043    //
0044    If VA rpt_mnFatorConversao_UORG is less than or equal to <Zero>
0045       F41002 Get Item UoM Conversion
              VA rpt_szF4311_MCU -> szBranchPlant
              VA rpt_szF58RE76B_UOM -> szFromUnitOfMeasure
              VA rpt_szF4311_UOM -> szToUnitOfMeasure
              VA rpt_mnF58RE76C_UORG -> mnQuantityToConvert
              UNDEFINED X  cInventoryInterfaceFlag
              UNDEFINED X  mnConversionFactorFromToPrim
              UNDEFINED X  mnConversionFactorFrom_to_To
              UNDEFINED X  mnConversionFactorTo_to_Primar
              UNDEFINED X  mnQuantityConvertedToPrimary
              UNDEFINED X  cConvertToSecondary
              UNDEFINED X  mnQuantityConvertedToSecondary
              UNDEFINED X  cConvertToPurchasing
              UNDEFINED X  mnQuantityConvertedToPurchasin
              UNDEFINED X  cConvertToPricing
              UNDEFINED X  mnQuantityConvertedToPricing
              UNDEFINED X  cConvertToShipping
              UNDEFINED X  mnQuantityConvertedToShipping
              UNDEFINED X  cConvertToWeight
              UNDEFINED X  mnQuantityConvertedToWeight
              UNDEFINED X  cConvertToVolume
              UNDEFINED X  mnQuantityConvertedToVolume
              UNDEFINED X  cPotencyMode
              UNDEFINED X  szLotNumber
              UNDEFINED X  cPotencyControl
              UNDEFINED X  mnStandardPotency
              UNDEFINED X  szErrorMessageID
              UNDEFINED X  cSuppressErrorMsg
              UNDEFINED X  cPotencyType
              VA rpt_mnF58RE76B_ITM -> mnShortItemNumber
              UNDEFINED X  cUOMByBranch
              UNDEFINED X  szUOMToPrimary
              UNDEFINED X  szUOMToSecondary
              UNDEFINED X  szUOMToPurchasing
              UNDEFINED X  szUOMToPricing
              UNDEFINED X  szUOMToWeight
              UNDEFINED X  szUOMToVolume
              UNDEFINED X  szUOMToShipping
              UNDEFINED X  szStandardUOMConversion
              VA rpt_mnQtdConvertida_UORG <- mnQuantityConvertedFromtoTo
0046       VA rpt_mnF58RE76C_UORG = VA rpt_mnQtdConvertida_UORG
0047       If VA rpt_mnF58RE76C_UORG is equal to <Zero>
0048          F41002 Get Item UoM Conversion
                 UNDEFINED X  szBranchPlant
                 VA rpt_szF58RE76B_UOM -> szFromUnitOfMeasure
                 VA rpt_szF4311_UOM -> szToUnitOfMeasure
                 VA rpt_mnF58RE76C_UORG -> mnQuantityToConvert
                 UNDEFINED X  cInventoryInterfaceFlag
                 UNDEFINED X  mnConversionFactorFromToPrim
                 UNDEFINED X  mnConversionFactorFrom_to_To
                 UNDEFINED X  mnConversionFactorTo_to_Primar
                 UNDEFINED X  mnQuantityConvertedToPrimary
                 UNDEFINED X  cConvertToSecondary
                 UNDEFINED X  mnQuantityConvertedToSecondary
                 UNDEFINED X  cConvertToPurchasing
                 UNDEFINED X  mnQuantityConvertedToPurchasin
                 UNDEFINED X  cConvertToPricing
                 UNDEFINED X  mnQuantityConvertedToPricing
                 UNDEFINED X  cConvertToShipping
                 UNDEFINED X  mnQuantityConvertedToShipping
                 UNDEFINED X  cConvertToWeight
                 UNDEFINED X  mnQuantityConvertedToWeight
                 UNDEFINED X  cConvertToVolume
                 UNDEFINED X  mnQuantityConvertedToVolume
                 UNDEFINED X  cPotencyMode
                 UNDEFINED X  szLotNumber
                 UNDEFINED X  cPotencyControl
                 UNDEFINED X  mnStandardPotency
                 UNDEFINED X  szErrorMessageID
                 UNDEFINED X  cSuppressErrorMsg
                 UNDEFINED X  cPotencyType
                 VA rpt_mnF58RE76B_ITM -> mnShortItemNumber
                 UNDEFINED X  cUOMByBranch
                 UNDEFINED X  szUOMToPrimary
                 UNDEFINED X  szUOMToSecondary
                 UNDEFINED X  szUOMToPurchasing
                 UNDEFINED X  szUOMToPricing
                 UNDEFINED X  szUOMToWeight
                 UNDEFINED X  szUOMToVolume
                 UNDEFINED X  szUOMToShipping
                 UNDEFINED X  szStandardUOMConversion
                 VA rpt_mnQtdConvertida_UORG <- mnQuantityConvertedFromtoTo
0049          VA rpt_mnF58RE76C_UORG = VA rpt_mnQtdConvertida_UORG
0050       End If
0051    Else
0052       //
0053       VA rpt_mnF58RE76C_UORG = [VA rpt_mnF58RE76C_UORG]/[VA rpt_mnFatorConversao_UORG]
0054    End If
0055    //
0056 End If
0057 VA sec_mnPrecoTotalItem_AN02 = [VA rpt_mnF58RE76C_UORG]*[VA rpt_mnF58RE76B_UNCS]
0058 VA sec_mnPrecoTotalItem_AN02 = round([VA sec_mnPrecoTotalItem_AN02],2)
0059 F58RE76C.Update
        BC Nota Fiscal Number =  TK Nota Fiscal Number
        BC Next Number Range 1 =  TK Next Number Range 1
        BC Nota Fiscal Series =  TK Nota Fiscal Series
        BC Unique Key ID (Internal) =  TK Unique Key ID (Internal)
        BC Last Index =  TK Last Index
        BC Seal Number =  TK Seal Number
        VA rpt_szItem_LITM -> TK 2nd Item Number
        VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
        VA sec_mnPrecoTotalItem_AN02 -> TK Amount - Net Posting 02
        VA rpt_mnF58RE76C_UORG -> TK Units - Order/Transaction Quantity
        VA rpt_szApplication_PID -> TK Program ID
        VA rpt_szUSER -> TK User ID
        VA rpt_szJOBN -> TK Work Station ID
        VA rpt_jdUPMJ -> TK Date - Updated
        VA rpt_jdUPMT -> TK Time - Last Updated
0060 //
0061 If VA rpt_mnMaiorPrecoLote_AXEP is less than VA sec_mnPrecoTotalItem_AN02
0062    // variaveis para utilizar no rateio
0063    VA rpt_mnMaiorPrecoLote_LNIX = BC Last Index (F58RE76C)
0064    VA rpt_mnMaiorPrecoLote_UKID = BC Unique Key ID (Internal) (F58RE76C)
0065    VA rpt_mnMaiorPrecoLote_AXEP = VA sec_mnPrecoTotalItem_AN02
0066    VA rpt_mnMaiorPrecoLote_UOR3 = VA rpt_mnF58RE76C_UORG
0067 End If
0068 VA rpt_mnTotalItensLotes_UOR3 = [VA rpt_mnTotalItensLotes_UOR3]+[VA rpt_mnF58RE76C_UORG]
0069 VA rpt_cEncontrouLote_EV01 = "Y"
0070 VA sec_mnAcumulaVlrTotal_AEXP = [VA sec_mnAcumulaVlrTotal_AEXP]+[VA sec_mnPrecoTotalItem_AN02]
0071 //
0072 If VA sec_mnMaiorLoteCorrente_AEXP is less than VA sec_mnPrecoTotalItem_AN02
0073    VA sec_mnMaiorLoteCorrente_LNIX = BC Last Index (F58RE76C)
0074    VA sec_mnMaiorLoteCorrente_UOR3 = VA rpt_mnF58RE76C_UORG
0075    VA sec_mnMaiorLoteCorrente_AEXP = VA sec_mnPrecoTotalItem_AN02
0076    VA sec_mnMaiorLoteCorrente_LOTN = BC Lot/Serial Number (F58RE76C)
0077    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0078    // Inicio - Julio Donati - 21/03/2019
0079    // Alteração para salvar o UKIT, pois quando haviam duas linhas com o mesmo lote,
0080    // na hora de fazer o update da F58RE76E no End Section, o programa fazia update
0081    // das duas ou mais linhas que tinha o lote igual.
0082    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0083    VA sec_mnMaiorLoteCorrente_UKIT = VA rpt_mnF58RE76E_UKIT
0084    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0085    // Fim - Julio Donati - 21/03/2019
0086    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0087 End If
0088 F58RE76E.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76A_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76E_UKIT =  TK Unique Item Id
        VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
0089 F58RE76E.Fetch Next
        VARIABLE <- TK Line Number
0090 If SV File_IO_Status is equal to CO ERROR
0091    VA rpt_mnF58RE76E_UORG = VA rpt_mnF58RE76C_UORG
0092    F58RE76E.Insert
           VA rpt_mnF58RE76A_BNNF -> TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 -> TK Next Number Range 1
           VA rpt_szF58RE76A_DCT -> TK Document Type
           VA rpt_mnF58RE76B_SLN -> TK Seal Number
           VA rpt_szF58RE76A_BSER -> TK Nota Fiscal Series
           VA rpt_mnF58RE76E_UKIT -> TK Unique Item Id
           VA rpt_mnF58RE76B_UKID -> TK Unique Key ID (Internal)
           VA rpt_szItem_LITM -> TK 2nd Item Number
           VA rpt_mnF4311_LNID -> TK Line Number
           VA rpt_mnF58RE76B_DOCO -> TK Document (Order No, Invoice, etc.)
           VA rpt_mnF58RE76B_PDCT -> TK Order Type
           VA rpt_szF58RE76B_KCOO -> TK Order Company (Order Number)
           VA rpt_mnF58RE76E_UORG -> TK Units - Order/Transaction Quantity
           VA rpt_mnF58RE76B_UNCS -> TK Amount - Unit Cost
           VA sec_mnPrecoTotalItem_AN02 -> TK Amount - Extended Price
           VA rpt_szF4311_UOM -> TK Unit of Measure as Input
           VA rpt_szF58RE76C_LOTN -> TK Lot/Serial Number
           VA rpt_mnF58RE76A_AN8 -> TK Address Number
           VA rpt_szF58RE76B_CITM -> TK Item Number - Customer/Supplier
           VA rpt_szF4311_LOCN -> TK Location
           VA rpt_szUSER -> TK User ID
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time - Last Updated
0093 Else
0094 End If
0095 VA rpt_mnF58RE76E_UKIT = [VA rpt_mnF58RE76E_UKIT]+1

-----------------------------------------------------------------------
     EVENT:  End Section
-----------------------------------------------------------------------
0001 VA rpt_szF0005_KY = "150"
0002 If VA rpt_mnTotalItensLotes_UOR3 is not equal to VA rpt_mnF58RE76B_UOR3
     And VA rpt_cEncontrouLote_EV01 is equal to "Y"
     And VA rpt_mnTotalItensLotes_UOR3 is greater than <Zero>
     And VA rpt_mnF58RE76B_UOR3 is greater than <Zero>
0003    Do Custom Section(RS LogErro)
0004    VA rpt_cErroQunatLoteMaiorNF = "Y"
0005 Else
0006    Do Custom Section(RS LimpaErro)
0007    //
0008    If VA sec_mnAcumulaVlrTotal_AEXP is greater than <Zero>
0009       // verifica se houve diferenca de centavos, pode ocorrer quando há mais de um
0010       // lote
0011       VA sec_mnDiferenca = [VA rpt_mnTotalItemAux_AEXP]-[VA sec_mnAcumulaVlrTotal_AEXP]
0012       If VA sec_mnDiferenca is not equal to <Zero>
0013          VA sec_mnNovoVlrTotal_AEXP = [VA sec_mnMaiorLoteCorrente_AEXP]+[VA sec_mnDiferenca]
0014          VA sec_mnNovoVlrUnit_UPRC = [VA sec_mnNovoVlrTotal_AEXP]/[VA sec_mnMaiorLoteCorrente_UOR3]
0015          F58RE76C.Update
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
                 VA sec_mnMaiorLoteCorrente_LNIX =  TK Last Index
                 VA rpt_mnF58RE76A_SLN =  TK Seal Number
                 VA sec_mnNovoVlrUnit_UPRC -> TK Amount - Unit Cost
                 VA sec_mnNovoVlrTotal_AEXP -> TK Amount - Net Posting 02
                 VA rpt_szApplication_PID -> TK Program ID
                 VA rpt_szUSER -> TK User ID
                 VA rpt_szJOBN -> TK Work Station ID
                 VA rpt_jdUPMJ -> TK Date - Updated
                 VA rpt_jdUPMT -> TK Time - Last Updated
0016          F58RE76E.Fetch Single
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_mnF58RE76B_SLN =  TK Seal Number
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
                 VA sec_mnMaiorLoteCorrente_LOTN =  TK Lot/Serial Number
0017          If SV File_IO_Status is equal to CO SUCCESS
              And VA rpt_szOPStatus_AA03 is equal to "100"
0018             //
0019             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0020             // Inicio - Julio Donati - 21/03/2019
0021             // Troca da chave do Update, ao invés de usar o LOTN no filtro do update, será
0022             // utilizado o UKIT, para não dar problema quando tem dois lotes iguais para o
0023             // mesmo item na NF
0024             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0025             //
0026             // Codigo Comentado
0027 !             F58RE76E.Update
     !                VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
     !                VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
     !                VA rpt_szF58RE76A_DCT =  TK Document Type
     !                VA rpt_mnF58RE76B_SLN =  TK Seal Number
     !                VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
     !                VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
     !                VA sec_mnNovoVlrUnit_UPRC -> TK Amount - Unit Cost
     !                VA sec_mnNovoVlrTotal_AEXP -> TK Amount - Extended Price
     !                VA sec_mnMaiorLoteCorrente_LOTN =  TK Lot/Serial Number
0028             //
0029             // Novo Codigo
0030             F58RE76E.Update
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_DCT =  TK Document Type
                    VA rpt_mnF58RE76B_SLN =  TK Seal Number
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA sec_mnMaiorLoteCorrente_UKIT =  TK Unique Item Id
                    VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
                    VA sec_mnNovoVlrUnit_UPRC -> TK Amount - Unit Cost
                    VA sec_mnNovoVlrTotal_AEXP -> TK Amount - Extended Price
0031             //
0032             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0033             // Fim - Julio Donati - 21/03/2019
0034             // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0035             //
0036          End If
0037          If VA rpt_mnMaiorPrecoLote_UKID is equal to VA rpt_mnF58RE76B_UKID
              And VA rpt_mnMaiorPrecoLote_LNIX is equal to VA sec_mnMaiorLoteCorrente_LNIX
0038             VA rpt_mnMaiorPrecoLote_AXEP = VA sec_mnNovoVlrTotal_AEXP
0039          End If
0040       End If
0041    End If
0042    //
0043 End If

-----------------------------------------------------------------------
     EVENT:  Variable
-----------------------------------------------------------------------
     sec_cFlagMaior_EV01
     sec_mnDiferenca
     sec_mnAcumulaVlrTotal_AEXP
     sec_mnNovoVlrUnit_UPRC
     sec_mnNovoVlrTotal_AEXP
     sec_mnPrecoTotalItem_AN02
     sec_mnMaiorLoteCorrente_LNIX
     sec_mnMaiorLoteCorrente_UOR3
     sec_mnMaiorLoteCorrente_AEXP
     sec_mnLnid
     sec_mnMaiorLoteCorrente_LOTN
     sec_mnMaiorLoteCorrente_UKIT

=======================================================================
     SECTION: RECUPERA EAN [GROUP SECTION] (S9)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnTamEAN_INT01
     evt_szSubStr_AA02
     evt_mnSub_MATH01
     evt_mnPosicao_MATH01
     evt_mnFator_MATH01
     evt_mnTotal_MATH01
     evt_cDigito_AA01
0001 VA rpt_szF58RE76B_CITM = ltrim(rtrim([VA rpt_szF58RE76B_CITM],' '),' ' )
0002 VA evt_mnTamEAN_INT01 = length([VA rpt_szF58RE76B_CITM])
0003 VA rpt_szAux_CITM = ""
0004 VA evt_mnTotal_MATH01 = "0"
0005 VA evt_mnPosicao_MATH01 = "0"
0006 If VA evt_mnTamEAN_INT01 is equal to "14"
0007    //
0008 !    VA evt_mnPosicao_MATH01 = "1"
0009 !    VA evt_mnFator_MATH01 = "3"
0010 !    While VA evt_mnPosicao_MATH01 is less than or equal to "12"
0011 !       //
0012 !       VA evt_szSubStr_AA02 = substr([VA rpt_szF58RE76B_CITM],[VA evt_mnPosicao_MATH01], 1)
0013 !       Convert String to Math Numeric
     !          VA evt_szSubStr_AA02 -> szInputString
     !          VA evt_mnSub_MATH01 <- mnOutputMathNumeric
     !          UNDEFINED <- cReturnedErrorCode
0014 !       If VA evt_mnFator_MATH01 is equal to "1"
0015 !          VA evt_mnFator_MATH01 = "3"
0016 !       Else
0017 !          If VA evt_mnFator_MATH01 is equal to "3"
0018 !             VA evt_mnFator_MATH01 = "1"
0019 !          End If
0020 !       End If
0021 !       //
0022 !       VA evt_mnTotal_MATH01 = [VA evt_mnTotal_MATH01] + ([VA evt_mnSub_MATH01]*[VA evt_mnFator_MATH01])
0023 !       //
0024 !       VA evt_mnPosicao_MATH01 = [VA evt_mnPosicao_MATH01]+1
0025 !    End While
0026 !    //
0027 !    VA evt_mnTotal_MATH01 = mod([VA evt_mnTotal_MATH01],10)
0028 !    VA evt_mnTotal_MATH01 = round([VA evt_mnTotal_MATH01],0)
0029 !    If VA evt_mnTotal_MATH01 is not equal to <Zero>
0030 !       VA evt_mnTotal_MATH01 = 10-[VA evt_mnTotal_MATH01]
0031 !    Else
0032 !       VA evt_mnTotal_MATH01 = "0"
0033 !    End If
0034 !    Convert Math_Numeric To String
     !       VA evt_mnTotal_MATH01 -> mnMathNumeric01
     !       VA evt_szSubStr_AA02 <- szString
0035 !    VA evt_szSubStr_AA02 = rtrim(ltrim([VA evt_szSubStr_AA02],' '),' ' )
0036 !    VA rpt_szEAN13_AA13 = concat(substr([VA rpt_szF58RE76B_CITM],1 ,12 ),[VA evt_szSubStr_AA02] )
0037    //
0038    //
0039    VA rpt_szAux_CITM = substr([VA rpt_szF58RE76B_CITM],1,12 )
0040    Calculate and Validate UCC128 Check Digit
           VA rpt_szAux_CITM <> szUCCCode
           VA evt_cDigito_AA01 <- cCheckDigit
           UNDEFINED X  cValidateCheckDigit
           UNDEFINED X  cErrorCode
           UNDEFINED X  cSuppressErrorMessage
           UNDEFINED X  szErrorMessageID
           UNDEFINED X  cPackagingType
           UNDEFINED X  szCompanyUCCCode
           UNDEFINED X  mnUserDefinedMathNumeric
           UNDEFINED X  szUserDefinedCharacterString
           UNDEFINED X  szDocumentType
           UNDEFINED X  szCompanyKey
0041    VA rpt_szAux_CITM = ltrim(rtrim([VA rpt_szAux_CITM],' '),' ' )
0042 End If

=======================================================================
     SECTION: Recupera Codigo Item [GROUP SECTION] (S10)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_szF4104_DSC2 = "E"
0002 VA rpt_szF0005_KY = "110"
0003 VA rpt_szAux_CITM = ""
0004 VA rpt_mnITM = ""
0005 F4104.Select
        VA rpt_mnF58RE76A_AN8 =  TK Address Number
        VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
        VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
        VA rpt_szF4104_DSC2 =  TK Description - Line 2
0006 F4104.Fetch Next
        VA rpt_mnITM <- TK Item Number - Short
0007 If SV File_IO_Status is equal to CO ERROR
0008    F4104.Select
           VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
           VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
           VA rpt_szF4104_DSC2 =  TK Description - Line 2
0009    F4104.Fetch Next
           VA rpt_mnITM <- TK Item Number - Short
0010    If SV File_IO_Status is equal to CO ERROR
0011       //
0012       F4104.Select
              VA rpt_mnF58RE76A_AN8 =  TK Address Number
              VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
              SL DateToday <= TK Date - Expired
              SL DateToday >= TK Date - Effective
              VA rpt_szF58RE76B_CITM =  TK Item Number - Customer/Supplier
0013       F4104.Fetch Next
              VA rpt_mnITM <- TK Item Number - Short
0014       If SV File_IO_Status is equal to CO ERROR
0015          //
0016          Do Custom Section(RS RECUPERA EAN)
0017          F4104.Select
                 VA rpt_mnF58RE76A_AN8 =  TK Address Number
                 VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                 SL DateToday <= TK Date - Expired
                 SL DateToday >= TK Date - Effective
                 VA rpt_szAux_CITM =  TK Item Number - Customer/Supplier
0018          F4104.Fetch Next
                 VA rpt_mnITM <- TK Item Number - Short
0019          If SV File_IO_Status is equal to CO ERROR
0020             F4104.Select
                    VA rpt_szOP_TipoCrossRef_XRT =  TK Type - Cross-Reference Type Code
                    SL DateToday <= TK Date - Expired
                    SL DateToday >= TK Date - Effective
                    VA rpt_szAux_CITM =  TK Item Number - Customer/Supplier
0021             F4104.Fetch Next
                    VA rpt_mnITM <- TK Item Number - Short
0022          End If
0023          //
0024       End If
0025       //
0026    End If
0027 End If

=======================================================================
     SECTION: Verifica Ordem Compra [GROUP SECTION] (S11)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_szKCOO
     evt_szPDCT
     evt_mnLNID
     evt_szMCU
     evt_szLOCN
0001 //
0002 VA rpt_mnF4311_LNID = "0"
0003 F0101.Select
        VA rpt_szF58RE76B_BCGF =  TK Tax ID
0004 F0101.Fetch Next
        VA rpt_mnAN8 <- TK Address Number
0005 While SV File_IO_Status is equal to CO SUCCESS
     And VA rpt_mnF4311_LNID is equal to <Zero>
0006    //
0007    Do Custom Section(RS GetOC)
0008    F0101.Fetch Next
           VA rpt_mnAN8 <- TK Address Number
0009 End While
0010 If VA rpt_mnF4311_LNID is less than or equal to <Zero>
0011    VA rpt_mnOrdemCompraConvert_DOCO = "0"
0012    VA rpt_mnFornecedor_AN8 = "0"
0013 Else
0014 End If

=======================================================================
     SECTION: ConverteOCParaNumerico [GROUP SECTION] (S12)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnTamStr_MATH01
     evt_mnCont_MATH01
     evt_szSubStr_AA02
     evt_szOrdemCompraN_DS01
0001 VA rpt_szOrdemCompra_DS01 = ltrim(rtrim([VA rpt_szOrdemCompra_DS01],' '),' ' )
0002 VA evt_mnTamStr_MATH01 = length([VA rpt_szOrdemCompra_DS01])
0003 VA evt_mnCont_MATH01 = "0"
0004 VA rpt_mnOrdemCompraConvert_DOCO = ""
0005 While VA evt_mnTamStr_MATH01 is greater than VA evt_mnCont_MATH01
0006    VA evt_szSubStr_AA02 = substr([VA rpt_szOrdemCompra_DS01],[VA evt_mnCont_MATH01],1)
0007    If VA evt_szSubStr_AA02 is equal to "0,1,2,3,..."
0008       VA evt_szOrdemCompraN_DS01 = concat([VA evt_szOrdemCompraN_DS01],[VA evt_szSubStr_AA02])
0009    Else
0010       If VA evt_szOrdemCompraN_DS01 is not equal to <Blank>
           And VA evt_szOrdemCompraN_DS01 is not equal to <Null>
0011          Convert String to Math Numeric
                 VA evt_szOrdemCompraN_DS01 -> szInputString
                 VA rpt_mnOrdemCompraConvert_DOCO <- mnOutputMathNumeric
                 UNDEFINED <- cReturnedErrorCode
0012          Do Custom Section(RS Verifica Ordem Compra)
0013          If VA rpt_mnOrdemCompraConvert_DOCO is equal to <Zero>
0014             VA evt_szOrdemCompraN_DS01 = ""
0015          Else
0016             VA evt_mnCont_MATH01 = [VA evt_mnTamStr_MATH01]+10
0017          End If
0018       End If
0019    End If
0020    VA evt_mnCont_MATH01 = [VA evt_mnCont_MATH01]+1
0021 End While
0022 If VA rpt_mnOrdemCompraConvert_DOCO is equal to <Zero>
0023    Convert String to Math Numeric
           VA evt_szOrdemCompraN_DS01 -> szInputString
           VA rpt_mnOrdemCompraConvert_DOCO <- mnOutputMathNumeric
           UNDEFINED <- cReturnedErrorCode
0024    Do Custom Section(RS Verifica Ordem Compra)
0025 Else
0026 End If

=======================================================================
     SECTION: GetOC [GROUP SECTION] (S13)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnCodFilialPedido_SHAN
     evt_szCNPJFilial_TAX
0001 //
0002 F4311.Select
        VA rpt_mnOrdemCompraConvert_DOCO =  TK Document (Order No, Invoice, etc.)
        VA rpt_mnAN8 =  TK Address Number
        VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
        VA rpt_szStatusOCEncerrado_NXTR != TK Status Code - Next
0003 // ==>> Julio Donati - 21/02/2019 - Incluído a leitura do SHAN
0004 F4311.Fetch Next
        VA rpt_szF58RE76B_KCOO <- TK Order Company (Order Number)
        VA rpt_mnF58RE76B_DOCO <- TK Document (Order No, Invoice, etc.)
        VA rpt_mnF58RE76B_PDCT <- TK Order Type
        VA rpt_mnF4311_LNID <- TK Line Number
        VA rpt_szF4311_MCU <- TK Business Unit
        VA rpt_szF58RE76A_CO <- TK Company
        VA rpt_mnFornecedor_AN8 <- TK Address Number
        VA evt_mnCodFilialPedido_SHAN <- TK Address Number - Ship To
        VA rpt_szF4311_LOCN <- TK Location
        VA rpt_szF4311_UOM <- TK Unit of Measure as Input
        VA rpt_mnF4311_UORG <- TK Units - Order/Transaction Quantity
        VA rpt_mnF4311_UOPN <- TK Units - Open
        VA rpt_mnF4311_UREC <- TK Units - Received
        VA rpt_mnF4311_PRRC <- TK Amount - Unit Cost
        VA rpt_mnF4311_AEXP <- TK Amount - Extended Price
0005 If SV File_IO_Status is equal to CO ERROR
     And VA rpt_mnF58RE76A_AN8 is greater than <Zero>
0006    F4311.Select
           VA rpt_mnOrdemCompraConvert_DOCO =  TK Document (Order No, Invoice, etc.)
           VA rpt_mnF58RE76A_AN8 =  TK Address Number
           VA rpt_mnF58RE76B_ITM =  TK Item Number - Short
           VA rpt_szStatusOCEncerrado_NXTR != TK Status Code - Next
0007    // ==>> Julio Donati - 21/02/2019 - Incluído a leitura do SHAN
0008    F4311.Fetch Next
           VA rpt_szF58RE76B_KCOO <- TK Order Company (Order Number)
           VA rpt_mnF58RE76B_DOCO <- TK Document (Order No, Invoice, etc.)
           VA rpt_mnF58RE76B_PDCT <- TK Order Type
           VA rpt_mnF4311_LNID <- TK Line Number
           VA rpt_szF4311_MCU <- TK Business Unit
           VA rpt_szF58RE76A_CO <- TK Company
           VA rpt_mnFornecedor_AN8 <- TK Address Number
           VA evt_mnCodFilialPedido_SHAN <- TK Address Number - Ship To
           VA rpt_szF4311_LOCN <- TK Location
           VA rpt_szF4311_UOM <- TK Unit of Measure as Input
           VA rpt_mnF4311_UORG <- TK Units - Order/Transaction Quantity
           VA rpt_mnF4311_UOPN <- TK Units - Open
           VA rpt_mnF4311_UREC <- TK Units - Received
           VA rpt_mnF4311_PRRC <- TK Amount - Unit Cost
           VA rpt_mnF4311_AEXP <- TK Amount - Extended Price
0009 Else
0010 End If
0011 //
0012 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0013 // Inicio - Julio Donati - 21/02/2019
0014 // Verifica se o CNPJ do Destino é igual ao CNPJ da Filial do Pedido de Compra,
0015 // se for diferente não deixa vincular o pedido
0016 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0017 //
0018 If VA rpt_mnF4311_LNID is greater than <Zero>
     And VA evt_mnCodFilialPedido_SHAN is greater than <Zero>
0019    //
0020    F0101.Fetch Single
           VA evt_mnCodFilialPedido_SHAN =  TK Address Number
           VA evt_szCNPJFilial_TAX <- TK Tax ID
0021    If VA evt_szCNPJFilial_TAX is not equal to VA rpt_cF58RE76B_BCGT
0022       VA rpt_mnF4311_LNID = "0"
0023    End If
0024    //
0025 End If
0026 //
0027 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0028 // Fim - Julio Donati - 21/02/2019
0029 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0030 //

=======================================================================
     SECTION: RateioValorItem [GROUP SECTION] (S14)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnF58RE76B_AEXP
     evt_mnDifrenca_UPRC
     evt_mnProporcao_FERT
     evt_mnPrecoUnitItem
     evt_mnPrecoTotalItem
     evt_mnQuantidade_UORG
     evt_cLastRecord_EV01
     evt_mnNovoValorUnitItem
     evt_mnNovoValorTotalItem
     evt_mnUKID
     evt_mnTotalItens
     evt_mnIDCache2
     evt_mnDifAux_UPRC
     evt_mnMaiorPrecoItem_UKIT
     evt_mnF58RE76E_UNCS
     evt_mnF58RE76E_UKIT
0001 //
0002 VA rpt_mnMaiorPrecoTotalItem_AEXP = ""
0003 VA rpt_mnLinhaMaiorPreco_UKID = "0"
0004 VA rpt_cLastRecord_EV01 = ""
0005 VA evt_mnDifrenca_UPRC = [VA rpt_mnF58RE76A_BVTN]-[VA rpt_mnVlrTotalItens_UPRC]
0006 If VA evt_mnDifrenca_UPRC is not equal to <Zero>
0007    If VA evt_mnDifrenca_UPRC is less than <Zero>
0008       VA evt_mnDifAux_UPRC = [VA evt_mnDifrenca_UPRC]*-1
0009    Else
0010       VA evt_mnDifAux_UPRC = [VA evt_mnDifrenca_UPRC]
0011    End If
0012    If VA evt_mnDifAux_UPRC is less than or equal to VA rpt_mnOP_ToleranciaMaxUnicProd
0013       VA rpt_mnLinhaMaiorPreco_UKID = VA rpt_mnMaiorPrecoLote_UKID
0014       Do Custom Section(RS Localiza Maior Preco)
0015       If VA rpt_mnMaiorPrecoTotalItem_AEXP is greater than <Zero>
0016          VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0017          VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0018          VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0019          F58RE76B.Update
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                 VA rpt_mnF58RE76A_SLN =  TK Seal Number
                 VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                 VA evt_mnNovoValorTotalItem -> TK Amount - Net Posting 06
0020          //
0021          VA rpt_mnF58RE76E_UKID = VA rpt_mnLinhaMaiorPreco_UKID
0022          VA rpt_mnPrecoUnitAtualiza_UPRC = VA evt_mnNovoValorUnitItem
0023          Do Custom Section(RS Atualiza Item OC)
0024          //
0025          If VA rpt_mnMaiorPrecoLote_AXEP is greater than <Zero>
0026             VA rpt_mnMaiorPrecoTotalItem_AEXP = VA rpt_mnMaiorPrecoLote_AXEP
0027             VA rpt_mnQuantMaiorPrecoItem_UOR3 = VA rpt_mnMaiorPrecoLote_UOR3
0028             VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0029             VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0030             VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0031             F58RE76C.Update
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                    VA rpt_mnMaiorPrecoLote_LNIX =  TK Last Index
                    VA rpt_mnF58RE76A_SLN =  TK Seal Number
                    VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                    VA evt_mnNovoValorTotalItem -> TK Amount - Net Posting 02
0032          End If
0033       End If
0034    Else
0035       //
0036       F58RE76B.Select
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
0037       F58RE76B.Fetch Next
              VA rpt_mnUKID <- TK Unique Key ID (Internal)
              VA evt_mnQuantidade_UORG <- TK Units - Order/Transaction Quantity
              VA evt_mnPrecoUnitItem <- TK Amount - Unit Cost
              VA evt_mnPrecoTotalItem <- TK Amount - Net Posting 06
0038       While SV File_IO_Status is equal to CO SUCCESS
0039          VA evt_mnProporcao_FERT = [VA evt_mnPrecoTotalItem]/[VA rpt_mnF58RE76A_BVTN]
0040          VA evt_mnProporcao_FERT = [VA evt_mnProporcao_FERT]*[VA evt_mnDifrenca_UPRC]
0041          VA evt_mnNovoValorTotalItem = [VA evt_mnPrecoTotalItem]+[VA evt_mnProporcao_FERT]
0042          VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0043          VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA evt_mnQuantidade_UORG]
0044          VA evt_mnNovoValorUnitItem = round([VA evt_mnNovoValorUnitItem],4)
0045          If VA evt_mnNovoValorUnitItem is greater than <Zero>
0046             VA evt_mnTotalItens = [VA evt_mnTotalItens]+[VA evt_mnNovoValorTotalItem]
0047             F58RE76B.Update
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_DCT =  TK Document Type
                    VA rpt_mnUKID =  TK Unique Key ID (Internal)
                    VA rpt_mnF58RE76A_SLN =  TK Seal Number
                    VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                    VA evt_mnNovoValorTotalItem -> TK Amount - Net Posting 06
0048             //
0049             VA rpt_mnF58RE76E_UKID = VA evt_mnUKID
0050             VA rpt_mnPrecoUnitAtualiza_UPRC = VA evt_mnNovoValorUnitItem
0051             Do Custom Section(RS Atualiza Item OC)
0052             //
0053             Do Custom Section(RS AtualizaTabLotes)
0054          End If
0055          F58RE76B.Fetch Next
                 VA rpt_mnUKID <- TK Unique Key ID (Internal)
                 VA evt_mnQuantidade_UORG <- TK Units - Order/Transaction Quantity
                 VA evt_mnPrecoUnitItem <- TK Amount - Unit Cost
                 VA evt_mnPrecoTotalItem <- TK Amount - Net Posting 06
0056       End While
0057       //
0058       VA evt_mnTotalItens = [VA evt_mnTotalItens]+[VA rpt_mnComposicaoPreco_AN01]
0059       If VA evt_mnTotalItens is not equal to VA rpt_mnF58RE76A_BVTN
0060          VA evt_mnDifrenca_UPRC = [VA rpt_mnF58RE76A_BVTN]-[VA evt_mnTotalItens]
0061          VA rpt_mnLinhaMaiorPreco_UKID = VA rpt_mnMaiorPrecoLote_UKID
0062          Do Custom Section(RS Localiza Maior Preco)
0063          If VA rpt_mnMaiorPrecoTotalItem_AEXP is greater than <Zero>
0064             VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0065             VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0066             VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0067             F58RE76B.Update
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_DCT =  TK Document Type
                    VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                    VA rpt_mnF58RE76A_SLN =  TK Seal Number
                    VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                    VA evt_mnNovoValorTotalItem -> TK Amount - Net Posting 06
0068             //
0069             VA rpt_mnF58RE76E_UKID = VA rpt_mnLinhaMaiorPreco_UKID
0070             VA rpt_mnPrecoUnitAtualiza_UPRC = VA evt_mnNovoValorUnitItem
0071             Do Custom Section(RS Atualiza Item OC)
0072             //
0073             F58RE76C.Fetch Single
                    VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                    VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                    VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                    VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                    VA rpt_mnMaiorPrecoLote_LNIX =  TK Last Index
                    VA rpt_mnF58RE76A_SLN =  TK Seal Number
                    VA evt_mnPrecoUnitItem <- TK Amount - Unit Cost
                    VA rpt_mnMaiorPrecoLote_UOR3 <- TK Units - Order/Transaction Quantity
0074             VA rpt_mnMaiorPrecoLote_AXEP = [VA evt_mnPrecoUnitItem]*[VA rpt_mnMaiorPrecoLote_UOR3]
0075             If VA rpt_mnMaiorPrecoLote_AXEP is greater than <Zero>
0076                VA rpt_mnMaiorPrecoTotalItem_AEXP = VA rpt_mnMaiorPrecoLote_AXEP
0077                VA rpt_mnQuantMaiorPrecoItem_UOR3 = VA rpt_mnMaiorPrecoLote_UOR3
0078                VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0079                VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0080                VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0081                F58RE76C.Update
                       VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                       VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                       VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                       VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                       VA rpt_mnMaiorPrecoLote_LNIX =  TK Last Index
                       VA rpt_mnF58RE76A_SLN =  TK Seal Number
                       VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                       VA evt_mnNovoValorTotalItem -> TK Amount - Net Posting 02
0082             End If
0083          End If
0084       End If
0085       //
0086    End If
0087 End If
0088 //
0089 // ---------------------------------------------------------------------------
0090 //
0091 VA rpt_mnVlrTotalItens_UPRC = "0"
0092 VA rpt_mnLinhaMaiorPreco_UKID = "0"
0093 VA rpt_mnMaiorPrecoTotalItem_AEXP = "0"
0094 VA rpt_mnQuantMaiorPrecoItem_UOR3 = "0"
0095 VA rpt_mnMaiorPrecoItem_UNCS = "0"
0096 //
0097 F58RE76E.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76A_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
0098 F58RE76E.Fetch Next
        VA evt_mnF58RE76E_UKIT <- TK Unique Item Id
        VA evt_mnUKID <- TK Unique Key ID (Internal)
        VA rpt_mnF58RE76E_UORG <- TK Units - Order/Transaction Quantity
        VA evt_mnF58RE76E_UNCS <- TK Amount - Unit Cost
        VA rpt_mnF58RE76E_AEXP <- TK Amount - Extended Price
0099 While SV File_IO_Status is equal to CO SUCCESS
0100    //
0101    VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA rpt_mnF58RE76E_AEXP]
0102    //
0103    If VA rpt_mnF58RE76E_AEXP is greater than VA rpt_mnMaiorPrecoTotalItem_AEXP
0104       VA evt_mnMaiorPrecoItem_UKIT = VA evt_mnF58RE76E_UKIT
0105       VA rpt_mnLinhaMaiorPreco_UKID = VA evt_mnUKID
0106       VA rpt_mnMaiorPrecoTotalItem_AEXP = VA rpt_mnF58RE76E_AEXP
0107       VA rpt_mnQuantMaiorPrecoItem_UOR3 = VA rpt_mnF58RE76E_UORG
0108       VA rpt_mnMaiorPrecoItem_UNCS = VA evt_mnF58RE76E_UNCS
0109    End If
0110    //
0111    F58RE76E.Fetch Next
           VA evt_mnF58RE76E_UKIT <- TK Unique Item Id
           VA evt_mnUKID <- TK Unique Key ID (Internal)
           VA rpt_mnF58RE76E_UORG <- TK Units - Order/Transaction Quantity
           VA evt_mnF58RE76E_UNCS <- TK Amount - Unit Cost
           VA rpt_mnF58RE76E_AEXP <- TK Amount - Extended Price
0112 End While
0113 //
0114 VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA rpt_mnComposicaoPreco_AN01]
0115 //
0116 VA evt_mnDifrenca_UPRC = [VA rpt_mnF58RE76A_BVTN]-[VA rpt_mnVlrTotalItens_UPRC]
0117 If VA evt_mnDifrenca_UPRC is not equal to <Zero>
0118    //
0119    If VA evt_mnDifrenca_UPRC is less than <Zero>
0120       VA evt_mnDifAux_UPRC = [VA evt_mnDifrenca_UPRC]*-1
0121    Else
0122       VA evt_mnDifAux_UPRC = [VA evt_mnDifrenca_UPRC]
0123    End If
0124    If VA evt_mnDifAux_UPRC is less than or equal to VA rpt_mnOP_ToleranciaMaxUnicProd
0125       VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0126       VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0127       VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0128       F58RE76E.Update
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
              VA evt_mnMaiorPrecoItem_UKIT =  TK Unique Item Id
              VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
              VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
              VA evt_mnNovoValorTotalItem -> TK Amount - Extended Price
0129    Else
0130       //
0131       VA rpt_mnVlrTotalItens_UPRC = "0"
0132       VA evt_mnTotalItens = "0"
0133       F58RE76E.Select
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_mnF58RE76A_SLN =  TK Seal Number
              VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
0134       F58RE76E.Fetch Next
              VA evt_mnF58RE76E_UKIT <- TK Unique Item Id
              VA evt_mnUKID <- TK Unique Key ID (Internal)
              VA evt_mnQuantidade_UORG <- TK Units - Order/Transaction Quantity
              VA evt_mnPrecoUnitItem <- TK Amount - Unit Cost
              VA evt_mnPrecoTotalItem <- TK Amount - Extended Price
0135       While SV File_IO_Status is equal to CO SUCCESS
0136          VA evt_mnProporcao_FERT = [VA evt_mnPrecoTotalItem]/[VA rpt_mnF58RE76A_BVTN]
0137          VA evt_mnProporcao_FERT = [VA evt_mnProporcao_FERT]*[VA evt_mnDifrenca_UPRC]
0138          VA evt_mnNovoValorTotalItem = [VA evt_mnPrecoTotalItem]+[VA evt_mnProporcao_FERT]
0139          VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0140          VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA evt_mnQuantidade_UORG]
0141          VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0142          VA evt_mnNovoValorUnitItem = round([VA evt_mnNovoValorUnitItem],4)
0143          //
0144          F58RE76E.Update
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_mnF58RE76B_SLN =  TK Seal Number
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA evt_mnF58RE76E_UKIT =  TK Unique Item Id
                 VA evt_mnUKID =  TK Unique Key ID (Internal)
                 VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                 VA evt_mnNovoValorTotalItem -> TK Amount - Extended Price
0145          VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA evt_mnNovoValorTotalItem]
0146          //
0147          F58RE76E.Fetch Next
                 VA evt_mnF58RE76E_UKIT <- TK Unique Item Id
                 VA evt_mnUKID <- TK Unique Key ID (Internal)
                 VA evt_mnQuantidade_UORG <- TK Units - Order/Transaction Quantity
                 VA evt_mnPrecoUnitItem <- TK Amount - Unit Cost
                 VA evt_mnPrecoTotalItem <- TK Amount - Extended Price
0148       End While
0149       //
0150       VA rpt_mnVlrTotalItens_UPRC = [VA rpt_mnVlrTotalItens_UPRC]+[VA rpt_mnComposicaoPreco_AN01]
0151       //
0152       If VA rpt_mnVlrTotalItens_UPRC is not equal to VA rpt_mnF58RE76A_BVTN
0153          VA evt_mnDifrenca_UPRC = [VA rpt_mnF58RE76A_BVTN]-[VA rpt_mnVlrTotalItens_UPRC]
0154          VA evt_mnNovoValorTotalItem = [VA rpt_mnMaiorPrecoTotalItem_AEXP]+[VA evt_mnDifrenca_UPRC]
0155          VA evt_mnNovoValorTotalItem = round([VA evt_mnNovoValorTotalItem],2)
0156          VA evt_mnNovoValorUnitItem = [VA evt_mnNovoValorTotalItem]/[VA rpt_mnQuantMaiorPrecoItem_UOR3]
0157          F58RE76E.Update
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_mnF58RE76B_SLN =  TK Seal Number
                 VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
                 VA evt_mnMaiorPrecoItem_UKIT =  TK Unique Item Id
                 VA rpt_mnLinhaMaiorPreco_UKID =  TK Unique Key ID (Internal)
                 VA evt_mnNovoValorUnitItem -> TK Amount - Unit Cost
                 VA evt_mnNovoValorTotalItem -> TK Amount - Extended Price
0158       End If
0159    End If
0160    //
0161 End If
0162 //
0163 //
0164 //

=======================================================================
     SECTION: Localiza Maior Preco [GROUP SECTION] (S15)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76B),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Nota Fiscal Series (F58RE76B), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0003 Set User Selection(BC Next Number Range 1 (F58RE76B), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0004 Set User Selection(BC Document Type (F58RE76B), <Equal To>, VA rpt_szF58RE76A_DCT, <And>)
0005 If VA rpt_mnLinhaMaiorPreco_UKID is greater than <Zero>
0006    Set User Selection(BC Unique Key ID (Internal) (F58RE76B), <Equal To>, VA rpt_mnLinhaMaiorPreco_UKID, <And>)
0007 End If
0008 VA rpt_mnMaiorPrecoTotalItem_AEXP = "0"

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnQuantMaiorPrecoItem_UOR3 = BC Units - Order/Transaction Quantity (F58RE76B)
0002 VA rpt_mnLinhaMaiorPreco_UKID = BC Unique Key ID (Internal) (F58RE76B)
0003 VA rpt_mnMaiorPrecoTotalItem_AEXP = [BC Amount - Unit Cost (F58RE76B)]*[BC Units - Order/Transaction Quantity (F58RE76B)]
0004 Stop Section Processing

=======================================================================
     SECTION: AtualizaTabLotes [GROUP SECTION] (S18)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnF58RE76C_LNIX
     evt_mnF58RE76C_UOR3
     evt_mnProporcao_FERT
     evt_mnDiferenca_UPRC
     evt_mnValorUnitItem
     evt_mnValorTotalItem
0001 F58RE76C.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnUKID =  TK Unique Key ID (Internal)
        VA rpt_mnF58RE76A_SLN =  TK Seal Number
0002 F58RE76C.Fetch Next
        VA evt_mnF58RE76C_LNIX <- TK Last Index
        VA evt_mnValorTotalItem <- TK Amount - Net Posting 02
        VA evt_mnF58RE76C_UOR3 <- TK Units - Order/Transaction Quantity
0003 While SV File_IO_Status is equal to CO SUCCESS
0004    //
0005    VA evt_mnDiferenca_UPRC = [VA rpt_mnF58RE76A_BVTN]-[VA rpt_mnVlrTotalItens_UPRC]
0006    VA evt_mnProporcao_FERT = [VA evt_mnValorTotalItem]/[VA rpt_mnF58RE76A_BVTN]
0007    VA evt_mnProporcao_FERT = [VA evt_mnProporcao_FERT]*[VA evt_mnDiferenca_UPRC]
0008    VA evt_mnValorTotalItem = [VA evt_mnValorTotalItem]+[VA evt_mnProporcao_FERT]
0009    VA evt_mnValorUnitItem = [VA evt_mnValorTotalItem]/[VA evt_mnF58RE76C_UOR3]
0010    VA evt_mnValorTotalItem = round([VA evt_mnValorTotalItem],2)
0011    VA evt_mnValorUnitItem = round([VA evt_mnValorUnitItem],4)
0012    F58RE76C.Update
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
           VA rpt_mnUKID =  TK Unique Key ID (Internal)
           VA evt_mnF58RE76C_LNIX =  TK Last Index
           VA rpt_mnF58RE76A_SLN =  TK Seal Number
           VA evt_mnValorUnitItem -> TK Amount - Unit Cost
           VA evt_mnValorTotalItem -> TK Amount - Net Posting 02
0013    //
0014    F58RE76C.Fetch Next
           VA evt_mnF58RE76C_LNIX <- TK Last Index
           VA evt_mnValorTotalItem <- TK Amount - Net Posting 02
           VA evt_mnF58RE76C_UOR3 <- TK Units - Order/Transaction Quantity
0015 End While

=======================================================================
     SECTION: Tolerancia Item [GROUP SECTION] (S19)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_cHardError
     evt_mnErroUOPN
     evt_mnErro_PRRC
     evt_mnErro_AOPN
0001 //
0002 VA rpt_mnAcumVlrTotalItemToleranc = ([VA rpt_mnF4311_UREC]+[VA rpt_mnAcumQuantItemTolerancia])*[VA rpt_mnTolerancia_UNCS]
0003 F4322 Edit Purchase Tolerance Rules
        "2" -> cFunctionProgram
        VA rpt_mnTolerancia_ITM -> mnItemNumber
        VA rpt_szF4101_PRP1 -> szCommodityCode
        VA rpt_szTolerancia_KCOO -> szCompany
        VA rpt_mnF4311_UORG -> mnPurchaseOrderQuantity
        VA rpt_mnF4311_PRRC -> mnPurchaseOrderUnitCost
        VA rpt_mnF4311_AEXP -> mnPurchaseOrderExtendedAmount
        VA rpt_mnAcumQuantItemTolerancia -> mnReceivedQuantity
        VA rpt_mnTolerancia_UNCS -> mnReceivedUnitCost
        VA rpt_mnAcumVlrTotalItemToleranc -> mnReceivedExtendedAmount
        VA evt_cHardError <> cWarningHardError
        VA evt_mnErroUOPN <> mnQuantityInError
        VA evt_mnErro_PRRC <> mnUnitCostInError
        VA evt_mnErro_AOPN <> mnExtendedAmountInError
        UNDEFINED X  szEdiTransactionSet
        UNDEFINED X  mnAddressNumber
        UNDEFINED X  cEdiSendRcvIndicator
        UNDEFINED X  cEdiTransactionType
0004 VA rpt_szF0005_KY = "152"
0005 If VA evt_mnErroUOPN is greater than <Zero>
0006    // erro
0007    Do Custom Section(RS LogErro)
0008 Else
0009    Do Custom Section(RS LimpaErro)
0010 End If
0011 VA rpt_szF0005_KY = "151"
0012 If VA evt_mnErro_AOPN is greater than <Zero>
0013    Do Custom Section(RS LogErro)
0014 Else
0015    Do Custom Section(RS LimpaErro)
0016 End If
0017 VA rpt_szF0005_KY = "153"
0018 If VA evt_mnErro_PRRC is greater than <Zero>
0019    Do Custom Section(RS LogErro)
0020 Else
0021    Do Custom Section(RS LimpaErro)
0022 End If

=======================================================================
     SECTION: On Customer/Supplier Item Number [GROUP SECTION] (S24)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnAcumQuantItemTolerancia = "0"
0002 VA rpt_mnAcumVlrTotalItemToleranc = "0"

=======================================================================
     SECTION: On Customer/Supplier Item Number [GROUP SECTION] (S25)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 If VA rpt_mnOrdemCompraConvert_DOCO is greater than <Zero>
     And VA rpt_cOP_ToleranciaPreco_AA01 is equal to "S"
     And VA rpt_cFlagDivergenciaTotalItem is not equal to "Y"
0002    VA rpt_mnTolerancia_ITM = VA rpt_mnF58RE76B_ITM
0003    VA rpt_szTolerancia_KCOO = VA rpt_mnF58RE76E_KCOO
0004    VA rpt_mnTolerancia_UNCS = VA rpt_mnF58RE76B_UNCS
0005    Do Custom Section(RS Tolerancia Item)
0006 End If

=======================================================================
     SECTION: Atualiza Item OC [GROUP SECTION] (S28)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnUORG
     evt_mnUKIT
     evt_mnAcumulaItem_AEXP
     evt_mnMaiorPrecoCorrente_UKIT
     evt_mnMaiorPrecoCorrente_AEXP
     evt_mnF58RE76E_UPRC
     evt_mnDiferenca
     evt_mnMaiorPrecoCorrente_UORG
     evt_mnQuantConverida_UORG
0001 F58RE76E.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76B_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76E_UKID =  TK Unique Key ID (Internal)
0002 F58RE76E.Fetch Next
        VA evt_mnUKIT <- TK Unique Item Id
        VA evt_mnUORG <- TK Units - Order/Transaction Quantity
0003 While SV File_IO_Status is equal to CO SUCCESS
0004    //
0005    If VA rpt_szFornecUnidMedida_KY is not equal to <Blank>
        And VA rpt_szFornecUnidMedida_KY is not equal to <Null>
0006       // esta condição devido o  reprocessamento, após correção da unidade de medida
0007       Do Custom Section(RS Verifica Quantidades)
0008       If VA rpt_cFlagConverte_EV01 is equal to "Y"
0009          F41002 Get Item UoM Conversion
                 VA rpt_szF4311_MCU -> szBranchPlant
                 VA rpt_szF4311_UOM -> szFromUnitOfMeasure
                 VA rpt_szUnidMedFornecedorAux_UOM -> szToUnitOfMeasure
                 VA evt_mnUORG -> mnQuantityToConvert
                 UNDEFINED X  cInventoryInterfaceFlag
                 UNDEFINED X  mnConversionFactorFromToPrim
                 UNDEFINED X  mnConversionFactorFrom_to_To
                 UNDEFINED X  mnConversionFactorTo_to_Primar
                 UNDEFINED X  mnQuantityConvertedToPrimary
                 UNDEFINED X  cConvertToSecondary
                 UNDEFINED X  mnQuantityConvertedToSecondary
                 UNDEFINED X  cConvertToPurchasing
                 UNDEFINED X  mnQuantityConvertedToPurchasin
                 UNDEFINED X  cConvertToPricing
                 UNDEFINED X  mnQuantityConvertedToPricing
                 UNDEFINED X  cConvertToShipping
                 UNDEFINED X  mnQuantityConvertedToShipping
                 UNDEFINED X  cConvertToWeight
                 UNDEFINED X  mnQuantityConvertedToWeight
                 UNDEFINED X  cConvertToVolume
                 UNDEFINED X  mnQuantityConvertedToVolume
                 UNDEFINED X  cPotencyMode
                 UNDEFINED X  szLotNumber
                 UNDEFINED X  cPotencyControl
                 UNDEFINED X  mnStandardPotency
                 UNDEFINED X  szErrorMessageID
                 UNDEFINED X  cSuppressErrorMsg
                 UNDEFINED X  cPotencyType
                 VA rpt_mnF58RE76B_ITM -> mnShortItemNumber
                 UNDEFINED X  cUOMByBranch
                 UNDEFINED X  szUOMToPrimary
                 UNDEFINED X  szUOMToSecondary
                 UNDEFINED X  szUOMToPurchasing
                 UNDEFINED X  szUOMToPricing
                 UNDEFINED X  szUOMToWeight
                 UNDEFINED X  szUOMToVolume
                 UNDEFINED X  szUOMToShipping
                 UNDEFINED X  szStandardUOMConversion
                 VA evt_mnQuantConverida_UORG <> mnQuantityConvertedFromtoTo
0010          If VA evt_mnQuantConverida_UORG is less than or equal to <Zero>
0011             F41002 Get Item UoM Conversion
                    UNDEFINED X  szBranchPlant
                    VA rpt_szF4311_UOM -> szFromUnitOfMeasure
                    VA rpt_szUnidMedFornecedorAux_UOM -> szToUnitOfMeasure
                    VA evt_mnUORG -> mnQuantityToConvert
                    UNDEFINED X  cInventoryInterfaceFlag
                    UNDEFINED X  mnConversionFactorFromToPrim
                    UNDEFINED X  mnConversionFactorFrom_to_To
                    UNDEFINED X  mnConversionFactorTo_to_Primar
                    UNDEFINED X  mnQuantityConvertedToPrimary
                    UNDEFINED X  cConvertToSecondary
                    UNDEFINED X  mnQuantityConvertedToSecondary
                    UNDEFINED X  cConvertToPurchasing
                    UNDEFINED X  mnQuantityConvertedToPurchasin
                    UNDEFINED X  cConvertToPricing
                    UNDEFINED X  mnQuantityConvertedToPricing
                    UNDEFINED X  cConvertToShipping
                    UNDEFINED X  mnQuantityConvertedToShipping
                    UNDEFINED X  cConvertToWeight
                    UNDEFINED X  mnQuantityConvertedToWeight
                    UNDEFINED X  cConvertToVolume
                    UNDEFINED X  mnQuantityConvertedToVolume
                    UNDEFINED X  cPotencyMode
                    UNDEFINED X  szLotNumber
                    UNDEFINED X  cPotencyControl
                    UNDEFINED X  mnStandardPotency
                    UNDEFINED X  szErrorMessageID
                    UNDEFINED X  cSuppressErrorMsg
                    UNDEFINED X  cPotencyType
                    VA rpt_mnF58RE76B_ITM -> mnShortItemNumber
                    UNDEFINED X  cUOMByBranch
                    UNDEFINED X  szUOMToPrimary
                    UNDEFINED X  szUOMToSecondary
                    UNDEFINED X  szUOMToPurchasing
                    UNDEFINED X  szUOMToPricing
                    UNDEFINED X  szUOMToWeight
                    UNDEFINED X  szUOMToVolume
                    UNDEFINED X  szUOMToShipping
                    UNDEFINED X  szStandardUOMConversion
                    VA evt_mnQuantConverida_UORG <> mnQuantityConvertedFromtoTo
0012          End If
0013          VA evt_mnUORG = VA evt_mnQuantConverida_UORG
0014       End If
0015    Else
0016    End If
0017    //
0018    VA rpt_mnF58RE76E_AEXP = [VA evt_mnUORG]*[VA rpt_mnPrecoUnitAtualiza_UPRC]
0019    VA evt_mnF58RE76E_UPRC = VA rpt_mnPrecoUnitAtualiza_UPRC
0020    F58RE76E.Update
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
           VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
           VA evt_mnUKIT =  TK Unique Item Id
           VA rpt_mnF58RE76E_UKID =  TK Unique Key ID (Internal)
           VA evt_mnUORG -> TK Units - Order/Transaction Quantity
           VA evt_mnF58RE76E_UPRC -> TK Amount - Unit Cost
           VA rpt_mnF58RE76E_AEXP -> TK Amount - Extended Price
           VA rpt_szUSER -> TK User ID
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time - Last Updated
0021    F58RE76E.Fetch Next
           VA evt_mnUKIT <- TK Unique Item Id
           VA evt_mnUORG <- TK Units - Order/Transaction Quantity
0022    VA evt_mnAcumulaItem_AEXP = [VA evt_mnAcumulaItem_AEXP]+[VA rpt_mnF58RE76E_AEXP]
0023    If VA rpt_mnF58RE76E_AEXP is greater than VA evt_mnMaiorPrecoCorrente_AEXP
0024       VA evt_mnMaiorPrecoCorrente_AEXP = VA rpt_mnF58RE76E_AEXP
0025       VA evt_mnMaiorPrecoCorrente_UORG = VA evt_mnUORG
0026       VA evt_mnMaiorPrecoCorrente_UKIT = VA evt_mnUKIT
0027    Else
0028    End If
0029 End While
0030 //
0031 ! If VA rpt_cFlagCalculaDiferenca_EV01 is equal to "Y"
0032 !    VA evt_mnDiferenca = [VA rpt_mnF58RE76A_BVTN]-[VA evt_mnAcumulaItem_AEXP]
0033 !    If VA evt_mnDiferenca is not equal to <Zero>
0034 !       VA rpt_mnF58RE76E_AEXP = [VA evt_mnMaiorPrecoCorrente_AEXP]+[VA evt_mnDiferenca]
0035 !       VA evt_mnF58RE76E_UPRC = [VA rpt_mnF58RE76E_AEXP]/[VA evt_mnMaiorPrecoCorrente_UORG]
0036 !       F58RE76E.Update
     !          VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
     !          VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
     !          VA rpt_szF58RE76A_DCT =  TK Document Type
     !          VA rpt_mnF58RE76B_SLN =  TK Seal Number
     !          VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
     !          VA evt_mnMaiorPrecoCorrente_UKIT =  TK Unique Item Id
     !          VA rpt_mnF58RE76E_UKID =  TK Unique Key ID (Internal)
     !          VA evt_mnF58RE76E_UPRC -> TK Amount - Unit Cost
     !          VA rpt_mnF58RE76E_AEXP -> TK Amount - Extended Price
0037 !    End If
0038 ! End If
0039 ! VA rpt_cFlagCalculaDiferenca_EV01 = "Y"

=======================================================================
     SECTION: Verifica Tolerancia Item OC [GROUP SECTION] (S29)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76E),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Nota Fiscal Series (F58RE76E), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0003 Set User Selection(BC Next Number Range 1 (F58RE76E), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0004 Set User Selection(BC Seal Number (F58RE76E), <Equal To>, VA rpt_mnF58RE76A_SLN, <And>)

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnAcumQuantItemTolerancia = [VA rpt_mnAcumQuantItemTolerancia]+[BC Units - Order/Transaction Quantity (F58RE76E)]
0002 //
0003 VA rpt_mnAcumulaQuantItemPedido = [VA rpt_mnAcumulaQuantItemPedido]+[BC Units - Order/Transaction Quantity (F58RE76E)]

=======================================================================
     SECTION: On 2nd Item Number [GROUP SECTION] (S30)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnF4311_AEXP = "0"
0002 VA rpt_mnAcumQuantItemTolerancia = "0"
0003 VA rpt_mnAcumulaQuantItemPedido = "0"
0004 VA rpt_mnF4311_PRRC = "0"
0005 VA rpt_mnF4311_UREC = "0"
0006 VA rpt_mnF4311_UORG = "0"
0007 VA rpt_mnF4311_UOPN = "0"
0008 VA rpt_chFlagErro = "N"
0009 VA rpt_szTolerancia_KCOO = BC Order Company (Order Number) (F58RE76E)
0010 VA rpt_mnF58RE76B_UKID = BC Unique Key ID (Internal) (F58RE76E)
0011 VA rpt_mnTolerancia_UNCS = BC Amount - Unit Cost (F58RE76E)
0012 VA rpt_mnF58RE76E_DOCO = BC Document (Order No, Invoice, etc.) (F58RE76E)
0013 VA rpt_mnF58RE76E_DCTO = BC Order Type (F58RE76E)
0014 VA rpt_mnF58RE76E_KCOO = BC Order Company (Order Number) (F58RE76E)
0015 VA rpt_szF58RE76E_LITM = BC 2nd Item Number (F58RE76E)
0016 F4101.Fetch Single
        VA rpt_mnTolerancia_ITM <- TK Item Number - Short
        BC 2nd Item Number =  TK 2nd Item Number
        VA rpt_szF4101_PRP1 <- TK Commodity Class
0017 F4311.Select
        BC Order Company (Order Number) =  TK Order Company (Order Number)
        BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
        BC Order Type =  TK Order Type
        BC Line Number =  TK Line Number
        VA rpt_szStatusOCEncerrado_NXTR != TK Status Code - Next
0018 F4311.Fetch Next
        VA rpt_mnF4311_UORG <- TK Units - Order/Transaction Quantity
        VA rpt_mnF4311_UOPN <- TK Units - Open
        VA rpt_mnF4311_UREC <- TK Units - Received
        VA rpt_mnF4311_PRRC <- TK Amount - Unit Cost
        VA rpt_mnF4311_AEXP <- TK Amount - Extended Price

=======================================================================
     SECTION: On 2nd Item Number [GROUP SECTION] (S31)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 //
0002 VA rpt_cFlagPedidoReservado_EV01 = ""
0003 Verifica Pedido Item Aberto
        VA rpt_mnF58RE76A_BNNF -> mnNotaFiscalNumber
        VA rpt_mnF58RE76A_N001 -> mnNextNumber001
        VA rpt_szF58RE76A_BSER -> szNotaFiscalSeries
        UNDEFINED X  mnAddressNumber
        VA rpt_mnF58RE76E_DOCO -> mnDocumentOrderInvoiceE
        VA rpt_mnF58RE76E_DCTO -> szOrderType
        VA rpt_mnF58RE76E_KCOO -> szCompanyKeyOrderNo
        VA rpt_szF58RE76E_LITM -> szIdentifier2ndItem
        VA rpt_mnF4311_UOPN -> mnUnitsOpenQuantity
        VA rpt_mnAcumulaQuantItemPedido -> mnQuant_a_receber
        VA rpt_cFlagPedidoReservado_EV01 <> cFlagErro
0004 VA rpt_szF0005_KY = "161"
0005 If VA rpt_cFlagPedidoReservado_EV01 is equal to "Y"
0006    Do Custom Section(RS LogErro)
0007 Else
0008    Do Custom Section(RS LimpaErro)
0009 End If
0010 //
0011 //
0012 Do Custom Section(RS Tolerancia Item)
0013 //
0014 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0015 // Inicio - Julio Donati - 10/04/2019
0016 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0017 //
0018 If PO mnToleranciaCusto_UNCS is greater than <Zero>
0019    //
0020    VA rpt_mnTesteTolerancia_UNCS = [PC Amount - Unit Cost (F58RE76E)]-[VA rpt_mnF4311_PRRC]
0021    If VA rpt_mnTesteTolerancia_UNCS is less than <Zero>
0022       VA rpt_mnTesteTolerancia_UNCS = [VA rpt_mnTesteTolerancia_UNCS]*(-1)
0023    End If
0024    //
0025    If VA rpt_mnTesteTolerancia_UNCS is greater than PO mnToleranciaCusto_UNCS
0026       //
0027       VA rpt_szF0005_KY = "443"
0028       Do Custom Section(RS LogErro)
0029       //
0030    Else
0031       //
0032       VA rpt_szF0005_KY = "443"
0033       Do Custom Section(RS LimpaErro)
0034       //
0035    End If
0036    //
0037 End If
0038 //
0039 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0040 // Fim - Julio Donati - 10/04/2019
0041 // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
0042 //
0043 If VA rpt_chFlagErro is equal to "Y"
0044    VA rpt_chFlagProcessamento = "A"
0045    VA rpt_cExisteErro_EV01 = "Y"
0046 Else
0047    F58RE040.Fetch Single
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_mnF58RE76B_UKID =  TK Line Number
           VA rpt_mnF58RE76A_SLN =  TK Seal Number
0048    If SV File_IO_Status is not equal to CO SUCCESS
0049       VA rpt_chFlagProcessamento = "L"
0050    Else
0051       VA rpt_chFlagProcessamento = "A"
0052    End If
0053 End If
0054 F58RE76B.Update
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76B_UKID =  TK Unique Key ID (Internal)
        VA rpt_chFlagProcessamento -> TK Journaling Flag

=======================================================================
     SECTION: Verifica Quantidades [GROUP SECTION] (S32)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnUORG
     evt_mnQuantTotal_UORG
0001 VA rpt_cFlagConverte_EV01 = "N"
0002 F58RE76E.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76B_SLN =  TK Seal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76E_UKID =  TK Unique Key ID (Internal)
0003 F58RE76E.Fetch Next
        VA evt_mnUORG <- TK Units - Order/Transaction Quantity
0004 While SV File_IO_Status is equal to CO SUCCESS
0005    VA evt_mnQuantTotal_UORG = [VA evt_mnQuantTotal_UORG]+[VA evt_mnUORG]
0006    F58RE76E.Fetch Next
           VA evt_mnUORG <- TK Units - Order/Transaction Quantity
0007 End While
0008 If VA evt_mnQuantTotal_UORG is not equal to VA rpt_mnF58RE76B_UORG
0009    VA rpt_cFlagConverte_EV01 = "Y"
0010 End If

=======================================================================
     SECTION: VerificaItem [GROUP SECTION] (S33)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_cStockingType_STKT
     evt_szF0005ItFilial_SY
     evt_szF0005ItFilial_RT
0001 VA rpt_cEncontrouItem_EV01 = "N"
0002 VA evt_cStockingType_STKT = ""
0003 //
0004 // ---- Ana Carolina 02/10/2014 - Inicio
0005 // Busca pela filial/fabrica
0006 //
0007 VA evt_szF0005ItFilial_SY = "55"
0008 VA evt_szF0005ItFilial_RT = "FC"
0009 ! F4101.Select
     !    VA rpt_mnITM =  TK Item Number - Short
0010 ! F4101.Fetch Next
     !    VA rpt_szItem_LITM <- TK 2nd Item Number
     !    VA evt_cStockingType_STKT <- TK Stocking Type
0011 //
0012 F0005.Select
        VA evt_szF0005ItFilial_SY =  TK Product Code
        VA evt_szF0005ItFilial_RT =  TK User Defined Codes
        VA rpt_cF58RE76B_BCGT =  TK Description1
0013 F0005.Fetch Next
        VA rpt_szFilialFabrica_MCU <- TK User Defined Code
0014 //
0015 VA rpt_szFilialFabrica_MCU = lpad(rtrim([VA rpt_szFilialFabrica_MCU],' '),' ',12)
0016 //
0017 F4102.Select
        VA rpt_mnITM =  TK Item Number - Short
        VA rpt_szFilialFabrica_MCU =  TK Business Unit
0018 F4102.Fetch Next
        VA rpt_szItem_LITM <- TK 2nd Item Number
        VA evt_cStockingType_STKT <- TK Stocking Type
0019 //
0020 // ---- Ana Carolina 02/10/2014 - Final
0021 //
0022 //
0023 If SV File_IO_Status is equal to CO SUCCESS
     And VA evt_cStockingType_STKT is not equal to "O,U"
0024    VA rpt_cEncontrouItem_EV01 = "Y"
0025 Else
0026 End If

=======================================================================
     SECTION: On Order Number [GROUP SECTION] (S34)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_mnAcumulaQuantItemPedido = "0"

=======================================================================
     SECTION: ValidaCondicaoPagamento [GROUP SECTION] (S35)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76G),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Next Number Range 1 (F58RE76G), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0003 Set User Selection(BC Nota Fiscal Series (F58RE76G), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0004 VA rpt_mnSFXE = "0"
0005 VA rpt_mnContParcelas_SFXE = "0"
0006 VA rpt_mnLoteProcessamento_UKID = "0"
0007 VA rpt_cErroFatura_FLAG = "1"

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_mnAux_SFXE
     evt_mnPercentofsplit_PSPL
     evt_mnPercDiferenca_MATH01
     evt_mnValorParcelaOC_AAP
     evt_szF0005_SPHD
     evt_mnNumDiasParcela_MATH01
     evt_szPrazoPagamento_PTC
     evt_mnNumParcelas_NSP
0001 VA rpt_mnSFXE = [VA rpt_mnSFXE]+1
0002 VA rpt_szF0005_KY = ""
0003 //
0004 If VA rpt_mnContParcelas_SFXE is equal to <Zero>
0005    // ==>> Julio Donati - Alterada a variavel que recebe o SPHD
0006    Get UDC Description
           UNDEFINED X  szDataDictionaryItem
           "58" -> szSystemCode
           "CF" -> szUserDefinedCodes
           UNDEFINED X  cUserDefinedCode
           "DATAFAT" -> szUserDefinedCode
           UNDEFINED X  szDescription01
           UNDEFINED X  szDescription02
           UNDEFINED X  cErrorCode
           VA rpt_szDATAFAT_SPHD <> szSpecialHandlingCode
0007    Valida Condicao Pagamento
           BC Nota Fiscal Number -> mnNotaFiscalNumber
           BC Next Number Range 1 -> mnNextNumber001
           VA rpt_mnF58RE76A_AN8 -> mnAddressNumber
           BC Nota Fiscal Series -> szNotaFiscalSeries
           BC Seal Number -> mnSealNumber
           VA rpt_jdF58RE76A_ISSU -> jdIssueDate
           VA rpt_szF0005_KY <- szErro
           VA rpt_mnLoteProcessamento_UKID <- mnLoteProcessamento
           VA rpt_mnNumParcelas_SFXE <- mnNumParcelas
           VA rpt_mnF58RE76A_BVTN -> mnAmountNotaFiscalTotals
0008    //
0009    F58RE76G.Select
           BC Nota Fiscal Number =  TK Nota Fiscal Number
           BC Nota Fiscal Series =  TK Nota Fiscal Series
           BC Seal Number =  TK Seal Number
           BC Next Number Range 1 =  TK Next Number Range 1
0010    F58RE76G.Fetch Next
           VA evt_mnAux_SFXE <- TK Pay Item Extension Number
0011    While SV File_IO_Status is equal to CO SUCCESS
0012       VA rpt_mnContParcelas_SFXE = [VA rpt_mnContParcelas_SFXE]+1
0013       F58RE76G.Fetch Next
              VA evt_mnAux_SFXE <- TK Pay Item Extension Number
0014    End While
0015 End If
0016 //
0017 If VA rpt_szF0005_KY is not equal to <Blank>
     And VA rpt_szF0005_KY is not equal to <Null>
0018    Do Custom Section(RS LogErro)
0019    VA rpt_cExisteErro_EV01 = "Y"
0020    Stop Section Processing
0021 Else
0022    VA rpt_szF0005_KY = "162"
0023    VA rpt_cErroFatura_FLAG = "0"
0024    F58RE040.Fetch Single
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
0025    If SV File_IO_Status is equal to CO SUCCESS
0026       F58RE040.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
0027    End If
0028    VA rpt_szF0005_KY = ""
0029 End If
0030 //
0031 If VA rpt_mnNumParcelas_SFXE is not equal to VA rpt_mnContParcelas_SFXE
0032    VA rpt_szF0005_KY = "163"
0033    Do Custom Section(RS LogErro)
0034    VA rpt_cExisteErro_EV01 = "Y"
0035    Stop Section Processing
0036 Else
0037    VA rpt_szF0005_KY = "163"
0038    VA rpt_cErroFatura_FLAG = "0"
0039    F58RE040.Fetch Single
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
           VA rpt_mnF58RE76B_SLN =  TK Seal Number
0040    If SV File_IO_Status is equal to CO SUCCESS
0041       F58RE040.Delete
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
0042    End If
0043 End If
0044 //
0045 F58RE01A.Select
        BC Nota Fiscal Number =  TK Nota Fiscal Number
        BC Seal Number =  TK Seal Number
        BC Next Number Range 1 =  TK Next Number Range 1
        BC Nota Fiscal Series =  TK Nota Fiscal Series
        VA rpt_mnF58RE76A_AN8 =  TK Address Number
        VA rpt_mnSFXE =  TK Pay Item Extension Number
        VA rpt_mnLoteProcessamento_UKID =  TK Batch Number
        SL DateToday =  TK Date - Order/Transaction
0046 F58RE01A.Fetch Next
        VA rpt_jdF58RE01A_DDJ <- TK Date - Net Due
        VA rpt_mnF58RE01A_AAP <- TK Amount Open
0047 If SV File_IO_Status is equal to CO SUCCESS
0048    //
0049    VA evt_mnNumParcelas_NSP = "0"
0050    If VA rpt_cFlagAtualizaPrazoPag_FLAG is equal to "S"
        And VA rpt_mnNumParcelas_SFXE is equal to VA rpt_mnContParcelas_SFXE
        And VA rpt_mnContParcelas_SFXE is equal to "1"
        And BC Date - Invoice - Julian (F58RE76G) is greater than VA rpt_jdF58RE01A_DDJ
0051       VA evt_mnNumDiasParcela_MATH01 = days_between([VA rpt_jdF58RE76A_ISSU],[BC Date - Invoice - Julian (F58RE76G)])
0052       If VA evt_mnNumDiasParcela_MATH01 is greater than <Zero>
0053          //
0054          If VA evt_mnNumDiasParcela_MATH01 is less than "100"
0055             If VA evt_mnNumDiasParcela_MATH01 is less than "10"
0056                VA evt_szPrazoPagamento_PTC = concat('C0' ,[VA evt_mnNumDiasParcela_MATH01] )
0057             Else
0058                VA evt_szPrazoPagamento_PTC = concat("C",[VA evt_mnNumDiasParcela_MATH01])
0059             End If
0060             F0014.Select
                    VA evt_szPrazoPagamento_PTC =  TK Payment Terms Code
                    VA evt_mnNumDiasParcela_MATH01 =  TK Net Days to Pay
                    VA evt_mnNumParcelas_NSP =  TK Number of Split Payments
0061             F0014.Fetch Next
                    VA rpt_szPrazoAtualiza_PTC <- TK Payment Terms Code
                    VA evt_mnNumParcelas_NSP <- TK Number of Split Payments
0062          Else
0063             VA evt_szPrazoPagamento_PTC = concat('%',concat( 'CC','%' ) )
0064             F0014.Select
                    VA evt_szPrazoPagamento_PTC is Like TK Payment Terms Code
                    VA evt_mnNumDiasParcela_MATH01 =  TK Net Days to Pay
                    VA evt_mnNumParcelas_NSP =  TK Number of Split Payments
0065             F0014.Fetch Next
                    VA rpt_szPrazoAtualiza_PTC <- TK Payment Terms Code
                    VA evt_mnNumParcelas_NSP <- TK Number of Split Payments
0066          End If
0067          If SV File_IO_Status is equal to CO SUCCESS
0068             Do Custom Section(RS ValidaAtualizacaoPrazo)
0069             If VA rpt_cAtualizaPrazo_FLAG is not equal to "N"
0070                Do Custom Section(RS AtualizaPrazoPagamento)
0071             End If
0072             Stop Section Processing
0073          End If
0074       End If
0075       //
0076    End If
0077    //
0078    //
0079    //
0080    // Inicio - 16/09/2014 - Ana Carolina
0081    // Adicionado a validação erro de datas divergentes atraves da UDC
0082    //
0083    VA rpt_cErroFatura_FLAG = "1"
0084    If VA rpt_szDATAFAT_SPHD is equal to <Zero>
0085       If VA rpt_jdF58RE01A_DDJ is not equal to BC Date - Invoice - Julian (F58RE76G)
0086          // ==>> Julio - 09/09/2018 - Troca de erro de 163 para 168 e adicionado LNIX
0087 !          VA rpt_szF0005_KY = "163"
0088          VA rpt_szF0005_KY = "168"
0089          VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0090          Do Custom Section(RS LogErro)
0091          VA rpt_cExisteErro_EV01 = "Y"
0092       Else
0093          // ==>> Julio - 09/09/2018 - adicionado LNIX
0094          VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0095          VA rpt_szF0005_KY = "163"
0096          VA rpt_cErroFatura_FLAG = "0"
0097       End If
0098    Else
0099       If VA rpt_szDATAFAT_SPHD is equal to "1"
0100          If VA rpt_jdF58RE01A_DDJ is less than BC Date - Invoice - Julian (F58RE76G)
0101             // ==>> Julio - 09/09/2018 - Troca de erro de 163 para 168 e adicionado LNIX
0102 !             VA rpt_szF0005_KY = "163"
0103             VA rpt_szF0005_KY = "168"
0104             VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0105             Do Custom Section(RS LogErro)
0106             VA rpt_cExisteErro_EV01 = "Y"
0107          Else
0108             // ==>> Julio - 09/09/2018 - adicionado LNIX
0109             VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0110             VA rpt_szF0005_KY = "163"
0111             VA rpt_cErroFatura_FLAG = "0"
0112          End If
0113       Else
0114          If VA rpt_szDATAFAT_SPHD is equal to "2"
0115             If VA rpt_jdF58RE01A_DDJ is greater than BC Date - Invoice - Julian (F58RE76G)
0116                // ==>> Julio - 09/09/2018 - Troca de erro de 163 para 168 e adicionado LNIX
0117 !                VA rpt_szF0005_KY = "163"
0118                VA rpt_szF0005_KY = "168"
0119                VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0120                Do Custom Section(RS LogErro)
0121                VA rpt_cExisteErro_EV01 = "Y"
0122             Else
0123                // ==>> Julio - 09/09/2018 - adicionado LNIX
0124                VA rpt_mnF58RE76C_LNIX = BC Pay Item Extension Number (F58RE76G)
0125                VA rpt_szF0005_KY = "163"
0126                VA rpt_cErroFatura_FLAG = "0"
0127             End If
0128          End If
0129       End If
0130    End If
0131    //
0132    // ==>> Julio - 09/09/2018 - Zerar LNIX para não dar problema em outros erros
0133    VA rpt_mnF58RE76C_LNIX = ""
0134    //
0135    // Fim - 16/09/2014 - Ana Carolina
0136    //
0137    If VA rpt_cErroFatura_FLAG is not equal to "1"
0138       F58RE040.Fetch Single
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
0139       If SV File_IO_Status is equal to CO SUCCESS
0140          F58RE040.Delete
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
                 VA rpt_mnF58RE76B_SLN =  TK Seal Number
0141       End If
0142    End If
0143    //
0144    //
0145    If VA rpt_mnNumParcelas_SFXE is equal to VA rpt_mnContParcelas_SFXE
0146       VA rpt_cErroFatura_FLAG = "1"
0147       If VA rpt_mnF58RE01A_AAP is greater than BC Amount Open (F58RE76G)
0148          VA evt_mnPercDiferenca_MATH01 = [VA rpt_mnF58RE01A_AAP]/[BC Amount Open (F58RE76G)]
0149       Else
0150          VA evt_mnPercDiferenca_MATH01 = [BC Amount Open (F58RE76G)]/[VA rpt_mnF58RE01A_AAP]
0151       End If
0152       VA evt_mnPercDiferenca_MATH01 = round([VA evt_mnPercDiferenca_MATH01],2)
0153       //
0154       If VA evt_mnPercDiferenca_MATH01 is greater than "1"
0155          VA rpt_szF0005_KY = "165"
0156          Do Custom Section(RS LogErro)
0157          VA rpt_cExisteErro_EV01 = "Y"
0158       Else
0159          VA rpt_szF0005_KY = "165"
0160          VA rpt_cErroFatura_FLAG = "0"
0161       End If
0162    End If
0163    If VA rpt_cErroFatura_FLAG is not equal to "1"
0164       F58RE040.Fetch Single
              VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
              VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
              VA rpt_szF58RE76A_DCT =  TK Document Type
              VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
              VA rpt_mnF58RE76B_SLN =  TK Seal Number
0165       If SV File_IO_Status is equal to CO SUCCESS
0166          F58RE040.Delete
                 VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
                 VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
                 VA rpt_szF58RE76A_DCT =  TK Document Type
                 VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
                 VA rpt_mnF58RE76B_SLN =  TK Seal Number
0167       End If
0168    End If
0169    //
0170    If VA rpt_cErroFatura_FLAG is equal to "1"
0171       Stop Section Processing
0172    Else
0173    End If
0174    //
0175 End If

-----------------------------------------------------------------------
     EVENT:  End Section
-----------------------------------------------------------------------
0001 If VA rpt_mnContParcelas_SFXE is equal to <Zero>
0002    VA rpt_szF0005_KY = "164"
0003    Do Custom Section(RS LogErro)
0004    VA rpt_cExisteErro_EV01 = "Y"
0005 End If
0006 //
0007 If VA rpt_mnSFXE is greater than <Zero>
0008    F58RE01A.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_SLN =  TK Seal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
           VA rpt_mnF58RE76A_AN8 =  TK Address Number
           VA rpt_mnLoteProcessamento_UKID =  TK Batch Number
0009 Else
0010 End If

=======================================================================
     SECTION: AtualizaPrazoPagamento [GROUP SECTION] (S36)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76E),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Next Number Range 1 (F58RE76E), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0003 Set User Selection(BC Nota Fiscal Series (F58RE76E), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0004 //
0005 VA rpt_mnF58RE030_UKID = "1"
0006 F58RE030.Select
        VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
        VA rpt_szF58RE76A_BSER =  TK Nota Fiscal Series
        VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
        VA rpt_szF58RE76A_DCT =  TK Document Type
        VA rpt_mnF58RE76A_SLN =  TK Seal Number
0007 F58RE030.Fetch Next
        VA rpt_mnF58RE030_UKID <- TK Unique Key ID (Internal)
0008 While SV File_IO_Status is equal to CO SUCCESS
0009    VA rpt_mnF58RE030_UKID = [VA rpt_mnF58RE030_UKID]+1
0010    F58RE030.Fetch Next
           VA rpt_mnF58RE030_UKID <- TK Unique Key ID (Internal)
0011 End While

=======================================================================
     SECTION: On Order Number [GROUP SECTION] (S38)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_szF4301_PTC
     evt_szF58RE030_DS01
0001 F4301.Fetch Single
        BC Order Company (Order Number) =  TK Order Company (Order Number)
        BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
        BC Order Type =  TK Order Type
        VA evt_szF4301_PTC <- TK Payment Terms Code
0002 If SV File_IO_Status is equal to CO SUCCESS
     And VA evt_szF4301_PTC is not equal to VA rpt_szPrazoAtualiza_PTC
0003    F4301.Update
           BC Order Company (Order Number) =  TK Order Company (Order Number)
           BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
           BC Order Type =  TK Order Type
           VA rpt_szPrazoAtualiza_PTC -> TK Payment Terms Code
           VA rpt_szUSER -> TK User ID
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time of Day
0004    F4311.Update
           BC Order Company (Order Number) =  TK Order Company (Order Number)
           BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
           BC Order Type =  TK Order Type
           VA rpt_szPrazoAtualiza_PTC -> TK Payment Terms Code
           VA rpt_szUSER -> TK User ID
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time of Day
0005    F43199.Update
           BC Order Company (Order Number) =  TK Order Company (Order Number)
           BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
           BC Order Type =  TK Order Type
           VA rpt_szPrazoAtualiza_PTC -> TK Payment Terms Code
0006    //
0007    VA evt_szF58RE030_DS01 = concat("Atualiz. Prazo Pag do Ped:",concat([BC Document (Order No, Invoice, etc.) (F58RE76E)],concat(" .De ",concat([VA evt_szF4301_PTC],concat(" para: ",[VA rpt_szPrazoAtualiza_PTC])))))
0008    F58RE030.Insert
           BC Nota Fiscal Number -> TK Nota Fiscal Number
           BC Nota Fiscal Series -> TK Nota Fiscal Series
           BC Next Number Range 1 -> TK Next Number Range 1
           BC Document Type -> TK Document Type
           BC Seal Number -> TK Seal Number
           VA rpt_mnF58RE030_UKID -> TK Unique Key ID (Internal)
           VA rpt_szProxStatusErro_AA03 -> TK Alpha Spec. Data 03
           VA evt_szF58RE030_DS01 -> TK Description
           VA rpt_szPID -> TK Program ID
           VA rpt_szJOBN -> TK Work Station ID
           VA rpt_szUSER -> TK User ID
           VA rpt_jdUPMJ -> TK Date - Updated
           VA rpt_jdUPMT -> TK Time - Last Updated
0009    VA rpt_mnF58RE030_UKID = [VA rpt_mnF58RE030_UKID]+1
0010 End If
0011 F58RE76E.Update
        BC Nota Fiscal Number =  TK Nota Fiscal Number
        BC Next Number Range 1 =  TK Next Number Range 1
        BC Document Type =  TK Document Type
        BC Seal Number =  TK Seal Number
        BC Nota Fiscal Series =  TK Nota Fiscal Series
        VA rpt_szPrazoAtualiza_PTC -> TK Payment Terms Code

=======================================================================
     SECTION: ValidaAtualizacaoPrazo [GROUP SECTION] (S39)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
0001 Set User Selection(BC Nota Fiscal Number (F58RE76E),  <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0002 Set User Selection(BC Nota Fiscal Series (F58RE76E), <Equal To>, VA rpt_szF58RE76A_BSER, <And>)
0003 Set User Selection(BC Next Number Range 1 (F58RE76E), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0004 Set User Selection(BC Seal Number (F58RE76E), <Equal To>, VA rpt_mnF58RE76A_SLN, <And>)
0005 VA rpt_szMensErroAdicional_DS01 = ""
0006 VA rpt_cAtualizaPrazo_FLAG = ""
0007 VA rpt_szMSG3_DL01 = ""
0008 VA rpt_szMSG2_DL01 = ""
0009 VA rpt_szMSG1_DL01 = ""

-----------------------------------------------------------------------
     EVENT:  End Section
-----------------------------------------------------------------------
0001 VA rpt_szF0005_KY = "166"
0002 If VA rpt_cAtualizaPrazo_FLAG is equal to "X"
0003    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0004    VA rpt_cExisteErro_EV01 = "Y"
0005    VA rpt_szMensErroAdicional_DS01 = VA rpt_szMSG2_DL01
0006    Do Custom Section(RS LogErro)
0007    VA rpt_cAtualizaPrazo_FLAG = "N"
0008 Else
0009    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0010 End If
0011 VA rpt_szF0005_KY = "167"
0012 If VA rpt_cAtualizaPrazo_FLAG is equal to "Y"
0013    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0014    VA rpt_cExisteErro_EV01 = "Y"
0015    VA rpt_szMensErroAdicional_DS01 = VA rpt_szMSG3_DL01
0016    Do Custom Section(RS LogErro)
0017    VA rpt_cAtualizaPrazo_FLAG = "N"
0018 Else
0019    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0020 End If
0021 VA rpt_szF0005_KY = "168"
0022 If VA rpt_cAtualizaPrazo_FLAG is equal to "Z"
0023    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0024    VA rpt_cExisteErro_EV01 = "Y"
0025    VA rpt_szMensErroAdicional_DS01 = VA rpt_szMSG1_DL01
0026    Do Custom Section(RS LogErro)
0027    VA rpt_cAtualizaPrazo_FLAG = "N"
0028 Else
0029    F58RE040.Delete
           VA rpt_mnF58RE76A_BNNF =  TK Nota Fiscal Number
           VA rpt_mnF58RE76A_N001 =  TK Next Number Range 1
           VA rpt_szF58RE76A_DCT =  TK Document Type
           VA rpt_szF0005_KY =  TK Alpha Spec. Data 03
0030 End If

=======================================================================
     SECTION: On Order Number [GROUP SECTION] (S40)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Do Section
-----------------------------------------------------------------------
     evt_szF58RE76E_PTC
     evt_mnF58RE76E_BNNF
     evt_mnF58RE76E_N001
     evt_mnF58RE76E_SLN
     evt_szF58RE76A_AA03
     evt_cFlag_EV01
     evt_mnF4311_UREC
     evt_szF4311_LTTR
0001 //
0002 VA evt_szF58RE76A_AA03 = ""
0003 VA evt_cFlag_EV01 = ""
0004 VA evt_szF58RE76E_PTC = ""
0005 //
0006 VA evt_mnF4311_UREC = "0"
0007 VA evt_szF4311_LTTR = "980"
0008 F4311.Select
        BC Order Company (Order Number) =  TK Order Company (Order Number)
        BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
        BC Order Type =  TK Order Type
        BC Address Number =  TK Address Number
        VA evt_szF4311_LTTR != TK Status Code - Last
        VA evt_mnF4311_UREC <  TK Units - Received
0009 F4311.Fetch Next
        VA evt_mnF4311_UREC <- TK Units - Received
0010 If SV File_IO_Status is equal to CO SUCCESS
0011    //
0012    VA rpt_szMSG1_DL01 = concat([VA rpt_szMSG1_DL01],concat("-",[BC Document (Order No, Invoice, etc.) (F58RE76E)] ))
0013    VA rpt_cAtualizaPrazo_FLAG = "Z"
0014 Else
0015    V58RE76AE1.Select
           BC Document (Order No, Invoice, etc.) =  TK Document (Order No, Invoice, etc.)
           BC Order Type =  TK Order Type
           BC Order Company (Order Number) =  TK Order Company (Order Number)
0016    V58RE76AE1.Fetch Next
           VA evt_mnF58RE76E_BNNF <- TK Nota Fiscal Number
           VA evt_mnF58RE76E_N001 <- TK Next Number Range 1
           VA evt_mnF58RE76E_SLN <- TK Seal Number
           VA evt_szF58RE76A_AA03 <- TK Alpha Spec. Data 03
           VA evt_szF58RE76E_PTC <- TK Payment Terms Code
0017    While SV File_IO_Status is equal to CO SUCCESS
        And VA evt_cFlag_EV01 is not equal to "1"
0018       If BC Nota Fiscal Number (F58RE76E) is not equal to VA evt_mnF58RE76E_BNNF
           And BC Next Number Range 1 (F58RE76E) is not equal to VA evt_mnF58RE76E_N001
           And VA evt_szF58RE76A_AA03 is not equal to "980-989"
0019          If VA evt_szF58RE76E_PTC is not equal to <Blank>
              And VA evt_szF58RE76E_PTC is not equal to <Null>
0020             VA evt_cFlag_EV01 = "1"
0021          Else
0022             If VA evt_szF58RE76A_AA03 is equal to "220-999"
                 And VA evt_szF58RE76A_AA03 is not equal to "980-989"
0023                VA evt_cFlag_EV01 = "2"
0024             End If
0025          End If
0026       End If
0027       V58RE76AE1.Fetch Next
              VA evt_mnF58RE76E_BNNF <- TK Nota Fiscal Number
              VA evt_mnF58RE76E_N001 <- TK Next Number Range 1
              VA evt_mnF58RE76E_SLN <- TK Seal Number
              VA evt_szF58RE76A_AA03 <- TK Alpha Spec. Data 03
              VA evt_szF58RE76E_PTC <- TK Payment Terms Code
0028    End While
0029    //
0030    If VA evt_cFlag_EV01 is equal to "1"
0031       VA rpt_szMSG2_DL01 = concat([VA rpt_szMSG2_DL01],concat("-",[BC Document (Order No, Invoice, etc.) (F58RE76E)]))
0032       VA rpt_cAtualizaPrazo_FLAG = "X"
0033    End If
0034    If VA evt_cFlag_EV01 is equal to "2"
0035       VA rpt_szMSG3_DL01 = concat([VA rpt_szMSG3_DL01],concat("-",[BC Document (Order No, Invoice, etc.) (F58RE76E)] ))
0036       VA rpt_cAtualizaPrazo_FLAG = "Y"
0037    End If
0038    //
0039 End If

=======================================================================
     SECTION: Libera Pedido Erro da PO [GROUP SECTION] (S41)
=======================================================================
     OBJECT:  SECTION
     EVENT:  Initialize Section
-----------------------------------------------------------------------
     evt_szF58RE040_AA03
     evt_mnAtual_N001
     evt_mnTamanho_N001
0001 //
0002 VA rpt_cExisteErro_EV01 = "N"
0003 //
0004 Set User Selection(BC Nota Fiscal Number (F58RE040), <Equal To>, VA rpt_mnF58RE76A_BNNF,  <And>)
0005 Set User Selection(BC Next Number Range 1 (F58RE040), <Equal To>, VA rpt_mnF58RE76A_N001, <And>)
0006 Set User Selection(BC Document Type (F58RE040), <Equal To>, VA rpt_szF58RE76A_DCT, <And>)
0007 Set User Selection(BC Seal Number (F58RE040), <Equal To>, VA rpt_mnF58RE040_SLN, <And>)
0008 //
0009 VA rpt_szErrosPermitidos_D200 = ltrim(rtrim([PO szErrosPermitidos_D200],' '),' ' )
0010 VA evt_mnAtual_N001 = "0"
0011 //
0012 Finds a char position in a string
        VA rpt_szErrosPermitidos_D200 -> szString
        ";" -> cCharToFind
        "<Zero>" -> mnStartingPosition
        VA evt_mnAtual_N001 <- mnPositionFound
0013 VA evt_mnTamanho_N001 = length([VA rpt_szErrosPermitidos_D200])
0014 //
0015 //
0016 //
0017 While VA evt_mnAtual_N001 is not equal to "-1"
0018    //
0019    VA evt_szF58RE040_AA03 = substr([VA rpt_szErrosPermitidos_D200],0, [VA evt_mnAtual_N001])
0020    VA rpt_szErrosPermitidos_D200 = substr([VA rpt_szErrosPermitidos_D200],[VA evt_mnAtual_N001]+1,[VA evt_mnTamanho_N001]-[VA evt_mnAtual_N001]-1)
0021    VA evt_mnTamanho_N001 = length([VA rpt_szErrosPermitidos_D200])
0022    //
0023    Set User Selection(BC Alpha Spec. Data 03 (F58RE040),  <Not Equal To>, VA evt_szF58RE040_AA03, <And>)
0024    //
0025    Finds a char position in a string
           VA rpt_szErrosPermitidos_D200 -> szString
           ";" -> cCharToFind
           "<Zero>" -> mnStartingPosition
           VA evt_mnAtual_N001 <- mnPositionFound
0026    //
0027 End While
0028 //
0029 //
0030 If VA evt_mnTamanho_N001 is greater than <Zero>
0031    //
0032    VA evt_szF58RE040_AA03 = substr([VA rpt_szErrosPermitidos_D200],0,[VA evt_mnTamanho_N001])
0033    //
0034    Set User Selection(BC Alpha Spec. Data 03 (F58RE040),  <Not Equal To>, VA evt_szF58RE040_AA03, <And>)
0035    //
0036 End If
0037 //
0038 //

-----------------------------------------------------------------------
     EVENT:  Do Section
-----------------------------------------------------------------------
0001 VA rpt_cExisteErro_EV01 = "Y"
0002 Stop Section Processing

Thursday January 23, 2020  15:46
